{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjY2OTQ2", "number": 1660, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjozMzoyMVrODwlrTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTowNDozNFrODx0mSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjc1NTMyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjozMzoyMVrOGDromQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NTozMFrOGEBM4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMzgxNw==", "bodyText": "Containment Index now uses FedoraIds for this method, so you'll need to generate them.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406513817", "createdAt": "2020-04-09T22:33:21Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if(!fedoraId.equals(rootFedoraId)) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if( parentId == null) {\n+                                        if (!fedoraId.endsWith(FCR_METADATA) &&\n+                                            !fedoraId.endsWith(FCR_ACL) &&\n+                                            !fedoraId.endsWith(FCR_VERSIONS)) {\n+                                            parentId = FEDORA_ID_PREFIX;\n+                                        }\n+                                    }\n+\n+                                    if (parentId != null) {\n+                                        this.containmentIndex.addContainedBy(txId, parentId, headers.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26690e265f10644c9eb3cde78f3ee55955e5ebd9"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NzE2OA==", "bodyText": "Cool I will fix.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406867168", "createdAt": "2020-04-10T17:45:30Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if(!fedoraId.equals(rootFedoraId)) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if( parentId == null) {\n+                                        if (!fedoraId.endsWith(FCR_METADATA) &&\n+                                            !fedoraId.endsWith(FCR_ACL) &&\n+                                            !fedoraId.endsWith(FCR_VERSIONS)) {\n+                                            parentId = FEDORA_ID_PREFIX;\n+                                        }\n+                                    }\n+\n+                                    if (parentId != null) {\n+                                        this.containmentIndex.addContainedBy(txId, parentId, headers.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxMzgxNw=="}, "originalCommit": {"oid": "26690e265f10644c9eb3cde78f3ee55955e5ebd9"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjc4NzYxOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjo0ODoxMFrOGDr7OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NTo1MFrOGEBNYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxODU4NA==", "bodyText": "If you create fedoraId as a FedoraId then you could use fedoraId.isRepositoryRoot() here.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406518584", "createdAt": "2020-04-09T22:48:10Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if (!fedoraId.equals(rootFedoraId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NzI5OQ==", "bodyText": "I'll definitely do that.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406867299", "createdAt": "2020-04-10T17:45:50Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if (!fedoraId.equals(rootFedoraId)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxODU4NA=="}, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjc4ODg5OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjo0ODo0NVrOGDr79g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NjowMFrOGEBNmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxODc3NA==", "bodyText": "Probably don't need to re-define this string here.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406518774", "createdAt": "2020-04-09T22:48:45Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -60,7 +72,13 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        final var rootFedoraId = FEDORA_ID_PREFIX;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NzM1NA==", "bodyText": "valid point.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406867354", "createdAt": "2020-04-10T17:46:00Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -60,7 +72,13 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        final var rootFedoraId = FEDORA_ID_PREFIX;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxODc3NA=="}, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjc5NjM1OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQyMjo1MjoyMFrOGDsAWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzo0NjoxOFrOGEBOCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxOTg5Ng==", "bodyText": "I don't think TimeMaps get persisted to OCFL.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406519896", "createdAt": "2020-04-09T22:52:20Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if (!fedoraId.equals(rootFedoraId)) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if (parentId == null) {\n+                                        if (!fedoraId.endsWith(FCR_METADATA) &&\n+                                                !fedoraId.endsWith(FCR_ACL) &&\n+                                                !fedoraId.endsWith(FCR_VERSIONS)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg2NzQ2NQ==", "bodyText": "Yes that's true. I'll pull that out.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r406867465", "createdAt": "2020-04-10T17:46:18Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -77,10 +95,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n+                                final var fedoraId = headers.getId();\n+                                fedoraIds.add(fedoraId);\n                                 if (headers.isArchivalGroup()) {\n                                     rootId.set(headers.getId());\n                                 }\n+\n+                                if (!fedoraId.equals(rootFedoraId)) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if (parentId == null) {\n+                                        if (!fedoraId.endsWith(FCR_METADATA) &&\n+                                                !fedoraId.endsWith(FCR_ACL) &&\n+                                                !fedoraId.endsWith(FCR_VERSIONS)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUxOTg5Ng=="}, "originalCommit": {"oid": "e69540fa2ae8c12a5c8496d9f6e8e560ef06d9bf"}, "originalPosition": 85}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTM5NzEwOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTozOToyNVrOGFeBdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMToxOTozN1rOGGL8Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4Nzk1Nw==", "bodyText": "What are the other 3 new ids that it should be returning? Should we be testing that they are present like the previous ones?", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408387957", "createdAt": "2020-04-14T19:39:25Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -108,22 +117,55 @@ public void testRebuildOCFL() {\n             ocflRepository.listObjectIds().forEach(id -> LOGGER.debug(\"Object id: {}\", id));\n         }\n \n-        // Test directly against the underlying OCFL repository\n-        Assert.assertEquals(4, ocflRepository.listObjectIds().count());\n-        Assert.assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n-        Assert.assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n-        Assert.assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n-        Assert.assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n+        assertEquals(7, ocflRepository.listObjectIds().count());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0MDI5MQ==", "bodyText": "sure.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409140291", "createdAt": "2020-04-15T21:19:37Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -108,22 +117,55 @@ public void testRebuildOCFL() {\n             ocflRepository.listObjectIds().forEach(id -> LOGGER.debug(\"Object id: {}\", id));\n         }\n \n-        // Test directly against the underlying OCFL repository\n-        Assert.assertEquals(4, ocflRepository.listObjectIds().count());\n-        Assert.assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n-        Assert.assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n-        Assert.assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n-        Assert.assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n+        assertEquals(7, ocflRepository.listObjectIds().count());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM4Nzk1Nw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 72}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQzMTgyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1MDowMlrOGFeXiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1MDowMlrOGFeXiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5MzYwOQ==", "bodyText": "reformat into separate lines. Also add short description of flag parameter", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408393609", "createdAt": "2020-04-14T19:50:02Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "diffHunk": "@@ -240,4 +242,19 @@ public void setArchivalGroup(final boolean flag) {\n     public boolean isArchivalGroup() {\n         return archivalGroup;\n     }\n+\n+    /**\n+     *\n+     * @param flag\n+     */\n+    public void setObjectRoot(final boolean flag) { this.objectRoot = flag; }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQzMjY0OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1MDoxNFrOGFeYDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1MDoxNFrOGFeYDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5Mzc0Mw==", "bodyText": "space after if", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408393743", "createdAt": "2020-04-14T19:50:14Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-common/src/main/java/org/fcrepo/persistence/common/ResourceHeadersImpl.java", "diffHunk": "@@ -240,4 +242,19 @@ public void setArchivalGroup(final boolean flag) {\n     public boolean isArchivalGroup() {\n         return archivalGroup;\n     }\n+\n+    /**\n+     *\n+     * @param flag\n+     */\n+    public void setObjectRoot(final boolean flag) { this.objectRoot = flag; }\n+\n+    @Override\n+    public boolean isObjectRoot() {\n+        if(isArchivalGroup()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQ2MzkwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractRDFSourcePersister.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1OTowM1rOGFereQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTozMToxOVrOGGMSFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5ODcxMw==", "bodyText": "the parent id should already be getting set by the call to newResourceHeaders I think? this this line can probably be removed", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408398713", "createdAt": "2020-04-14T19:59:03Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractRDFSourcePersister.java", "diffHunk": "@@ -103,6 +105,8 @@ private ResourceHeaders populateHeaders(final OCFLObjectSession objSession, fina\n                     createOperation.getInteractionModel());\n             touchCreationHeaders(headers, operation.getUserPrincipal(), timeWritten);\n             headers.setArchivalGroup(createOperation.isArchivalGroup());\n+            headers.setParent(createOperation.getParentId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE0NTg3OQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409145879", "createdAt": "2020-04-15T21:31:19Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractRDFSourcePersister.java", "diffHunk": "@@ -103,6 +105,8 @@ private ResourceHeaders populateHeaders(final OCFLObjectSession objSession, fina\n                     createOperation.getInteractionModel());\n             touchCreationHeaders(headers, operation.getUserPrincipal(), timeWritten);\n             headers.setArchivalGroup(createOperation.isArchivalGroup());\n+            headers.setParent(createOperation.getParentId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5ODcxMw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQ3ODc2OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowMzoyNVrOGFe0zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTo1NTo1NFrOGGM_qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTEwMA==", "bodyText": "Just curious, what triggered the upgrade from FedoraToOCFLObjectIndexUtilImpl to IndexBuilderImpl? Maybe the javadoc for the class should describe what kind of index builder this is versus the interface?", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408401100", "createdAt": "2020-04-14T20:03:25Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -18,43 +18,50 @@\n package org.fcrepo.persistence.ocfl.impl;\n \n import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.ContainmentIndex;\n+import org.fcrepo.kernel.api.TransactionManager;\n import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n-import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.IndexBuilder;\n import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import javax.inject.Inject;\n import java.util.ArrayList;\n-import java.util.Objects;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static java.lang.String.format;\n \n-import static org.fcrepo.kernel.api.RdfLexicon.FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI;\n import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n \n /**\n- * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ * An implementation of {@link IndexBuilder}\n  *\n  * @author dbernstein\n  * @since 6.0.0\n  */\n @Component\n-public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+public class IndexBuilderImpl implements IndexBuilder {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NTc5Ng==", "bodyText": "Sure - I changed the name because it builds the FedoraToOCFL as well as the containment relationships now.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409055796", "createdAt": "2020-04-15T18:42:26Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -18,43 +18,50 @@\n package org.fcrepo.persistence.ocfl.impl;\n \n import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.ContainmentIndex;\n+import org.fcrepo.kernel.api.TransactionManager;\n import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n-import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.IndexBuilder;\n import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import javax.inject.Inject;\n import java.util.ArrayList;\n-import java.util.Objects;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static java.lang.String.format;\n \n-import static org.fcrepo.kernel.api.RdfLexicon.FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI;\n import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n \n /**\n- * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ * An implementation of {@link IndexBuilder}\n  *\n  * @author dbernstein\n  * @since 6.0.0\n  */\n @Component\n-public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+public class IndexBuilderImpl implements IndexBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTEwMA=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1NzU0Nw==", "bodyText": "Updated the javadoc of both the interface and concrete class.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409157547", "createdAt": "2020-04-15T21:55:54Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -18,43 +18,50 @@\n package org.fcrepo.persistence.ocfl.impl;\n \n import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.ContainmentIndex;\n+import org.fcrepo.kernel.api.TransactionManager;\n import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n-import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.IndexBuilder;\n import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n import org.springframework.stereotype.Component;\n \n import javax.inject.Inject;\n import java.util.ArrayList;\n-import java.util.Objects;\n import java.util.concurrent.atomic.AtomicReference;\n \n import static java.lang.String.format;\n \n-import static org.fcrepo.kernel.api.RdfLexicon.FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI;\n import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n \n /**\n- * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ * An implementation of {@link IndexBuilder}\n  *\n  * @author dbernstein\n  * @since 6.0.0\n  */\n @Component\n-public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+public class IndexBuilderImpl implements IndexBuilder {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTEwMA=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTQ4MjEyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDowNDoxOVrOGFe2_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTo1NjoxNFrOGGNANg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTY2Mw==", "bodyText": "Nothing happens between these two log statements. Are they both needed, or is there something missing here?", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408401663", "createdAt": "2020-04-14T20:04:19Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -63,7 +70,12 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        LOGGER.info(\"Resetting ContaintmentIndex...\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODgzMDg1Nw==", "bodyText": "The fedoraToOCFLObjectIndex.reset(); clears the index and deletes the file on disk if is exists.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408830857", "createdAt": "2020-04-15T13:14:01Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -63,7 +70,12 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        LOGGER.info(\"Resetting ContaintmentIndex...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTY2Mw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2NDA3Ng==", "bodyText": "Okay, LOGGER.info(\"Resetting ContaintmentIndex...\"); should probably happen before fedoraToOCFLObjectIndex.reset(); in that case, otherwise its coming a little on the late side :)", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408864076", "createdAt": "2020-04-15T13:59:13Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -63,7 +70,12 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        LOGGER.info(\"Resetting ContaintmentIndex...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTY2Mw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODg2OTAzMw==", "bodyText": "Ohhhhh sorry I was looking at the top LOGGER.info(\"Initiating index rebuild.\");, on the main page it didn't show the below LOGGER.info().\nPlease disregard this comment, it appears that both the fedoraToOcflIndex and containment index is rebuilt at the same time. So additional log statements are probably not necessary.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408869033", "createdAt": "2020-04-15T14:05:59Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -63,7 +70,12 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        LOGGER.info(\"Resetting ContaintmentIndex...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTY2Mw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1NzY4Ng==", "bodyText": "Removed useless log messages.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409157686", "createdAt": "2020-04-15T21:56:14Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -63,7 +70,12 @@ public void rebuild() {\n \n         LOGGER.info(\"Initiating index rebuild.\");\n         fedoraToOCFLObjectIndex.reset();\n+        final var transaction = transactionManager.create();\n+        final var txId = transaction.getId();\n+        LOGGER.info(\"Resetting ContaintmentIndex...\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwMTY2Mw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTYwNjMzOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDo0MDo0OFrOGFgE-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo1MTowOVrOGGHF9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyMTYyNA==", "bodyText": "Maybe we can address this later, but if a file exists in an archival group, but is neither the root nor has a defined parent, we should be able to determine a parent id based on the file hierarchy. This would be the case for non-fedora ocfl, and at some point we might want to make the parent implicit within archival groups (that's come up on a few calls)", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408421624", "createdAt": "2020-04-14T20:40:48Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -80,14 +92,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n-                                if (headers.isArchivalGroup()) {\n+                                final var fedoraId = FedoraId.create(headers.getId());\n+                                fedoraIds.add(fedoraId.getFullId());\n+                                if (headers.isArchivalGroup() || headers.isObjectRoot()) {\n                                     rootId.set(headers.getId());\n-                                } else if (Objects.equals(headers.getInteractionModel(),\n-                                        FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI)) {\n-                                    rootId.set(headers.getParent());\n                                 }\n-                            } catch (final PersistentStorageException e) {\n+\n+                                if (!fedoraId.isRepositoryRoot()) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if (parentId == null) {\n+                                        if (headers.isObjectRoot()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzA0OQ==", "bodyText": "Yes - let's address in the non-fedora generated case.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409057049", "createdAt": "2020-04-15T18:44:36Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -80,14 +92,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n-                                if (headers.isArchivalGroup()) {\n+                                final var fedoraId = FedoraId.create(headers.getId());\n+                                fedoraIds.add(fedoraId.getFullId());\n+                                if (headers.isArchivalGroup() || headers.isObjectRoot()) {\n                                     rootId.set(headers.getId());\n-                                } else if (Objects.equals(headers.getInteractionModel(),\n-                                        FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI)) {\n-                                    rootId.set(headers.getParent());\n                                 }\n-                            } catch (final PersistentStorageException e) {\n+\n+                                if (!fedoraId.isRepositoryRoot()) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if (parentId == null) {\n+                                        if (headers.isObjectRoot()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyMTYyNA=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MDg1Mw==", "bodyText": "https://jira.lyrasis.org/browse/FCREPO-3277", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409060853", "createdAt": "2020-04-15T18:51:09Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImpl.java", "diffHunk": "@@ -80,14 +92,28 @@ public void rebuild() {\n                             //we're only interested in sidecar subpaths\n                             try {\n                                 final var headers = deserializeHeaders(objSession.read(subpath));\n-                                fedoraIds.add(headers.getId());\n-                                if (headers.isArchivalGroup()) {\n+                                final var fedoraId = FedoraId.create(headers.getId());\n+                                fedoraIds.add(fedoraId.getFullId());\n+                                if (headers.isArchivalGroup() || headers.isObjectRoot()) {\n                                     rootId.set(headers.getId());\n-                                } else if (Objects.equals(headers.getInteractionModel(),\n-                                        FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI)) {\n-                                    rootId.set(headers.getParent());\n                                 }\n-                            } catch (final PersistentStorageException e) {\n+\n+                                if (!fedoraId.isRepositoryRoot()) {\n+                                    var parentId = headers.getParent();\n+\n+                                    if (parentId == null) {\n+                                        if (headers.isObjectRoot()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyMTYyNA=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTY1Nzk3OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDo1NjoxMlrOGFglkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0NToyN1rOGGG5BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyOTk2OQ==", "bodyText": "assertIndexContains actually seems to verify what the ocfl object id assigned to an id is, rather than whether it is in the index or not. Maybe the name of the method could be updated to clarify its purpose? assertHasOcflId or something. I was having a hard time understanding what this assertion was checking.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408429969", "createdAt": "2020-04-14T20:56:12Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImplTest.java", "diffHunk": "@@ -127,51 +152,57 @@ public void rebuildWhenRepoContainsNonArchivalGroupObject() throws Exception {\n         assertIndexDoesNotContain(resource1);\n         assertIndexDoesNotContain(resource2);\n \n-        util.rebuild();\n+        indexBuilder.rebuild();\n \n         assertIndexContains(\"resource1\", resource1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 122}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NzU0MQ==", "bodyText": "Sure - I'll fix that.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409057541", "createdAt": "2020-04-15T18:45:27Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/IndexBuilderImplTest.java", "diffHunk": "@@ -127,51 +152,57 @@ public void rebuildWhenRepoContainsNonArchivalGroupObject() throws Exception {\n         assertIndexDoesNotContain(resource1);\n         assertIndexDoesNotContain(resource2);\n \n-        util.rebuild();\n+        indexBuilder.rebuild();\n \n         assertIndexContains(\"resource1\", resource1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQyOTk2OQ=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 122}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTY3MDMxOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDo1OTo1OFrOGFgtVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0ODoyMlrOGGG_jQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzMTk1Nw==", "bodyText": "Maybe this could be for later, but it'd be good to verify that a rebuild works with ghost nodes.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408431957", "createdAt": "2020-04-14T20:59:58Z", "author": {"login": "bbpennel"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -108,22 +117,55 @@ public void testRebuildOCFL() {\n             ocflRepository.listObjectIds().forEach(id -> LOGGER.debug(\"Object id: {}\", id));\n         }\n \n-        // Test directly against the underlying OCFL repository\n-        Assert.assertEquals(4, ocflRepository.listObjectIds().count());\n-        Assert.assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n-        Assert.assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n-        Assert.assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n-        Assert.assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n+        assertEquals(7, ocflRepository.listObjectIds().count());\n+        assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n+        assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n+        assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n+        assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n     }\n \n     @Test\n-    public void testRebuildWebapp() {\n+    public void testRebuildWebapp() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1OTIxMw==", "bodyText": "https://jira.lyrasis.org/browse/FCREPO-3276", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409059213", "createdAt": "2020-04-15T18:48:22Z", "author": {"login": "dbernstein"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -108,22 +117,55 @@ public void testRebuildOCFL() {\n             ocflRepository.listObjectIds().forEach(id -> LOGGER.debug(\"Object id: {}\", id));\n         }\n \n-        // Test directly against the underlying OCFL repository\n-        Assert.assertEquals(4, ocflRepository.listObjectIds().count());\n-        Assert.assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n-        Assert.assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n-        Assert.assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n-        Assert.assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n+        assertEquals(7, ocflRepository.listObjectIds().count());\n+        assertTrue(\"Should contain object with id: binary\", ocflRepository.containsObject(\"binary\"));\n+        assertTrue(\"Should contain object with id: test\", ocflRepository.containsObject(\"test\"));\n+        assertTrue(\"Should contain object with id: test_child\", ocflRepository.containsObject(\"test_child\"));\n+        assertFalse(\"Should NOT contain object with id: junk\", ocflRepository.containsObject(\"junk\"));\n     }\n \n     @Test\n-    public void testRebuildWebapp() {\n+    public void testRebuildWebapp() throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzMTk1Nw=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNTY4NTg1OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractNonRdfSourcePersister.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTowNDozNFrOGFg26Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMTo1NToxN1rOGGM-sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzNDQwOQ==", "bodyText": "It would be good to have a test somewhere that verifies this new behavior, maybe in CreateNonRdfSourcePersisterTest. An integration test would be nice since it'd make sure that a blank subpath gets generated, but that might not be practical at the moment, not sure.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r408434409", "createdAt": "2020-04-14T21:04:34Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractNonRdfSourcePersister.java", "diffHunk": "@@ -108,7 +108,8 @@ protected void persistNonRDFSource(final ResourceOperation operation,\n         }\n \n         // Write resource headers\n-        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome);\n+        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome,\n+                fedoraSubpath == \"\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA2MjY5MA==", "bodyText": "I'll take a look.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409062690", "createdAt": "2020-04-15T18:54:05Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractNonRdfSourcePersister.java", "diffHunk": "@@ -108,7 +108,8 @@ protected void persistNonRDFSource(final ResourceOperation operation,\n         }\n \n         // Write resource headers\n-        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome);\n+        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome,\n+                fedoraSubpath == \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzNDQwOQ=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE1NzI5Nw==", "bodyText": "A unit test explicitly covers it here: https://github.com/fcrepo4/fcrepo4/blob/master/fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtilsTest.java#L91.", "url": "https://github.com/fcrepo/fcrepo/pull/1660#discussion_r409157297", "createdAt": "2020-04-15T21:55:17Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/AbstractNonRdfSourcePersister.java", "diffHunk": "@@ -108,7 +108,8 @@ protected void persistNonRDFSource(final ResourceOperation operation,\n         }\n \n         // Write resource headers\n-        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome);\n+        final var headers = populateHeaders(objectSession, subpath, nonRdfSourceOperation, outcome,\n+                fedoraSubpath == \"\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQzNDQwOQ=="}, "originalCommit": {"oid": "2c9f9a7fa4ac6475ea0debbe82da78ff9b36b8b2"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1789, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}