{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0MDc3MTI0", "number": 1735, "title": "FCREPO-3239 - External Binary implementation", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3239\nAlso addresses:\n\nhttps://jira.lyrasis.org/browse/FCREPO-3219\nhttps://jira.lyrasis.org/browse/FCREPO-3218\n\nWhat does this Pull Request do?\nImplements external binaries in frepo6\n\nPersists PROXY and REDIRECT external binaries as header only records\nImplements Want-Digest and transmission fixity for external binaries\nHandles switching binaries between internal and external, cleaning up headers and content as needed\nExpands external binary tests to cover replacing external binaries and transmission fixity\nReturns a 4xx on creation if fedora cannot find or access the external content in all cases.\nEnables disabled external binary tests\n\nHow should this be tested?\nAside from updated tests, it can be manually tested as follows:\nmvn -Dfcrepo.home=target/fcrepo -Dfcrepo.external.content.allowed=fcrepo-http-api/src/test/resources/allowed_external_paths.txt clean jetty:run\n\n\n# Create a proxy binary\ncurl -i -H\"Link: <file:///Users/bbpennel/git/fcrepo4/README.md>; rel=\\\"http://fedora.info/definitions/fcrepo#ExternalContent\\\"; handling=\\\"proxy\\\"; type=\\\"text/plain\\\"\" -H\"digest: sha=55d3a8ec8455931442f00fd95d14a4328b470371\" -XPUT -ufedoraAdmin:fedoraAdmin http://localhost:8080/rest/test_proxy_local_file\n\nHTTP/1.1 201 Created\n...\nLink: <http://www.w3.org/ns/ldp#NonRDFSource>; rel=\"type\"\n...\nContent-Location: file:/Users/bbpennel/git/fcrepo4/README.md\nLocation: http://localhost:8080/rest/test_proxy_local_file\nContent-Type: text/plain\nContent-Length: 48\n\n\n# Retrieve the binary\ncurl http://localhost:8080/rest/test_proxy_local_file -ufedoraAdmin:fedoraAdmin\n# body of README.md\n\n\n# HEAD request\ncurl -I http://localhost:8080/rest/test_proxy_local_file -ufedoraAdmin:fedoraAdmin\n\nHTTP/1.1 200 OK\n...\nContent-Location: file:/Users/bbpennel/git/fcrepo4/README.md\nContent-Length: 5519\n\n\n# Update with bad sha1\ncurl -i -H\"Link: <file:///Users/bbpennel/git/fcrepo4/README.md>; rel=\\\"http://fedora.info/definitions/fcrepo#ExternalContent\\\"; handling=\\\"proxy\\\"; type=\\\"text/plain\\\"\" -H\"digest: sha=55d3a8ec8455931442f00fd95d14a4328b47037\" -XPUT -ufedoraAdmin:fedoraAdmin http://localhost:8080/rest/test_proxy_local_file\n\nHTTP/1.1 409 Conflict\n\n\n# Want-Digest request\ncurl -I -H \"Want-Digest: sha-256\" http://localhost:8080/rest/test_proxy_local_file -ufedoraAdmin:fedoraAdmin\n\nHTTP/1.1 200 OK\nDigest: sha-256=0e6bc0390b40a5d342dbaf25657d5767c48195312d4632c5ff57a741a926dcc0\n\n\n# Want-Digest after modifying the file\necho \"test\" >> README.md\n\ncurl -I -H \"Want-Digest: sha\" http://localhost:8080/rest/test_proxy_local_file -ufedoraAdmin:fedoraAdmin\n\nDigest: sha=f46d2cbc3284486ff421ce381016f6718437da60\n# Digest no longer matches the sha1 originally provided, 55d3a8ec8455931442f00fd95d14a4328b470371\n\n\n# Create a binary using COPY\ncurl -i -H\"Link: <file:///Users/bbpennel/git/fcrepo4/README.md>; rel=\\\"http://fedora.info/definitions/fcrepo#ExternalContent\\\"; handling=\\\"copy\\\"; type=\\\"text/markdown\\\"\" -XPUT -ufedoraAdmin:fedoraAdmin http://localhost:8080/rest/test_copy_local_file\n\n# Head request, should be no Content-Location, should look like a normal binary\ncurl -I http://localhost:8080/rest/test_copy_local_file -ufedoraAdmin:fedoraAdmin", "createdAt": "2020-08-06T14:49:52Z", "url": "https://github.com/fcrepo/fcrepo/pull/1735", "merged": true, "mergeCommit": {"oid": "9ede6c3cacebf1233d0be120b063e9bd13b61766"}, "closed": true, "closedAt": "2020-08-07T14:41:56Z", "author": {"login": "bbpennel"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7sGDfgH2gAyNDY0MDc3MTI0OjhmMjJmMDY3ZWJlYTJhY2QyZjJhZDViZTUzMzBlMDI4MDdhNzY1ZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8knr0AFqTQ2MzMyMTUyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8f22f067ebea2acd2f2ad5be5330e02807a765f5", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/8f22f067ebea2acd2f2ad5be5330e02807a765f5", "committedDate": "2020-08-04T19:50:03Z", "message": "Add functionality for retrieving content size to external content handler, use this value during creation and replacement of binaries. Reenable some of the external binary tests not related to copying or want-digest, add a few more tests, DRY up some components."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54ffe8383598ac8d7a6d2d2239bebd08258300a3", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/54ffe8383598ac8d7a6d2d2239bebd08258300a3", "committedDate": "2020-08-04T20:25:43Z", "message": "Enable external binary copy handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "785b4553bd7f2699318fe589d8bb299926b8bd38", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/785b4553bd7f2699318fe589d8bb299926b8bd38", "committedDate": "2020-08-04T22:26:30Z", "message": "Reenable tests related to want-digest with external binaries, and a few other tests that use externals"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f6547a100908affc4bd05d3eda1a084840fa05f", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/4f6547a100908affc4bd05d3eda1a084840fa05f", "committedDate": "2020-08-05T21:54:23Z", "message": "Implement transmission fixity for external binaries. Add tests for transmission fixity, updating, and deleting external binaries."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d04d36a50ee0856ed888a8ac84cdb11844a80db0", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/d04d36a50ee0856ed888a8ac84cdb11844a80db0", "committedDate": "2020-08-06T14:17:16Z", "message": "Update service tests for external binaries. Move external binary copy operation into services"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNjU2NDI0", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-462656424", "createdAt": "2020-08-06T15:58:17Z", "commit": {"oid": "d04d36a50ee0856ed888a8ac84cdb11844a80db0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50bb92825753b971701a962f7e96be8ba6f1c4d5", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/50bb92825753b971701a962f7e96be8ba6f1c4d5", "committedDate": "2020-08-06T19:48:38Z", "message": "Make external uri validation case sensitive, aside from the scheme portion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/9ec28eb345e154f7aac8187d3ea567bc91f39ba7", "committedDate": "2020-08-06T20:20:07Z", "message": "Specify accept encoding when getting info about http external binaries so that we don't get the compressed content-length"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODU0MTMy", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-462854132", "createdAt": "2020-08-06T20:30:20Z", "commit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODU0MTk1", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-462854195", "createdAt": "2020-08-06T20:30:25Z", "commit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozMDoyNVrOG9DMfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozMDoyNVrOG9DMfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2ODY2OQ==", "bodyText": "It seems like this can potentially return null.\n..although, unlikely. I am not sure there is an actual pathway for the uri to be null. We are just doing lots of extra null checking elsewhere.", "url": "https://github.com/fcrepo/fcrepo/pull/1735#discussion_r466668669", "createdAt": "2020-08-06T20:30:25Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ExternalContentHandler.java", "diffHunk": "@@ -163,36 +181,39 @@ private Link parseLinkHeader(final String link) throws ExternalMessageBodyExcept\n         return realLink;\n     }\n \n-    /**\n-     * Find the content type for a remote resource\n-     * @param url of remote resource\n-     * @return the mime-type reported by remote system or \"application/octet-stream\" if not supplied\n-     */\n-    private String findContentType(final String url) {\n-        if (url == null) {\n-            return null;\n-        }\n+    private void retrieveContentDetails() {\n+        final URI uri = getURI();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyODY0MjEw", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-462864210", "createdAt": "2020-08-06T20:45:52Z", "commit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDo0NTo1MlrOG9Dqgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDo0NTo1MlrOG9Dqgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3NjM1NA==", "bodyText": "It seems that you are only handling the case of parts.length == 2. Should the check be looking for a length of 2?", "url": "https://github.com/fcrepo/fcrepo/pull/1735#discussion_r466676354", "createdAt": "2020-08-06T20:45:52Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/main/java/org/fcrepo/http/api/ExternalContentPathValidator.java", "diffHunk": "@@ -117,12 +117,20 @@ public void validate(final String extPath) throws ExternalMessageBodyException {\n         throw new ExternalMessageBodyException(\"Path did not match any allowed external content paths: \" + extPath);\n     }\n \n-    private String normalizePath(final String path) {\n+    private String normalizeUri(final String path) {\n+        // lowercase the scheme since it is case insensitive\n+        final String[] parts = path.split(\":\", 2);\n+        final String normalized;\n+        if (parts.length > 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyOTY5MTU4", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-462969158", "createdAt": "2020-08-07T00:55:57Z", "commit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDo1NTo1N1rOG9I6VQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDo1NTo1N1rOG9I6VQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MjMyNQ==", "bodyText": "fileUri is already a String... can remove the toString() call.", "url": "https://github.com/fcrepo/fcrepo/pull/1735#discussion_r466762325", "createdAt": "2020-08-07T00:55:57Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/ExternalContentHandlerIT.java", "diffHunk": "@@ -398,33 +443,50 @@ public void testRedirectWithWantDigest() throws IOException {\n                 TEST_SHA_DIGEST_HEADER_VALUE, TEST_MD5_DIGEST_HEADER_VALUE);\n     }\n \n-    @Ignore //TODO Fix this test\n     @Test\n-    public void testExternalMessageBodyRedirect() throws IOException {\n+    public void testRedirectForHttpUri() throws Exception {\n \n-        // we need a client that won't automatically follow redirects\n-        try (final CloseableHttpClient noFollowClient = HttpClientBuilder.create().disableRedirectHandling()\n-                .build()) {\n+        final String externalLocation = createHttpResource(TEST_BINARY_CONTENT);\n \n-            final String id = getRandomUniqueId();\n-            final HttpPut httpPut = putObjMethod(id);\n-            httpPut.addHeader(LINK, NON_RDF_SOURCE_LINK_HEADER);\n-            httpPut.addHeader(LINK, getExternalContentLinkHeader(\"http://www.example.com/file\", \"redirect\", null));\n+        final String id = getRandomUniqueId();\n+        final HttpPut httpPut = putObjMethod(id);\n+        httpPut.addHeader(LINK, NON_RDF_SOURCE_LINK_HEADER);\n+        httpPut.addHeader(LINK, getExternalContentLinkHeader(externalLocation, \"redirect\", null));\n \n-            try (final CloseableHttpResponse response = execute(httpPut)) {\n-                assertEquals(\"Didn't get a CREATED response!\", CREATED.getStatusCode(), getStatus(response));\n-                final HttpGet get = new HttpGet(getLocation(response));\n-                try (final CloseableHttpResponse getResponse = noFollowClient.execute(get)) {\n-                    assertEquals(TEMPORARY_REDIRECT.getStatusCode(), getStatus(getResponse));\n-                    assertEquals(\"http://www.example.com/file\", getLocation(getResponse));\n-                }\n+        try (final CloseableHttpResponse response = execute(httpPut)) {\n+            assertEquals(\"Didn't get a CREATED response!\", CREATED.getStatusCode(), getStatus(response));\n+            final HttpGet get = new HttpGet(getLocation(response));\n+            try (final CloseableHttpResponse getResponse = noFollowClient.execute(get)) {\n+                assertEquals(TEMPORARY_REDIRECT.getStatusCode(), getStatus(getResponse));\n+                assertLocation(getResponse, externalLocation);\n             }\n         }\n     }\n \n-    @Ignore //TODO Fix this test\n     @Test\n-    public void testExternalMessageBodyCopyLocalFile() throws Exception {\n+    public void testProxyLocalFile() throws Exception {\n+        final File localFile = createExternalLocalFile(TEST_BINARY_CONTENT);\n+\n+        final String id = getRandomUniqueId();\n+        final HttpPut httpPut = putObjMethod(id);\n+        httpPut.addHeader(LINK, NON_RDF_SOURCE_LINK_HEADER);\n+        final String fileUri = localFile.toURI().toString();\n+        httpPut.addHeader(LINK, getExternalContentLinkHeader(fileUri.toString(), \"proxy\", \"text/plain\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ec28eb345e154f7aac8187d3ea567bc91f39ba7"}, "originalPosition": 406}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6681a50e290544eafb55e8175ad9d35c1f1c6a63", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/6681a50e290544eafb55e8175ad9d35c1f1c6a63", "committedDate": "2020-08-07T13:17:16Z", "message": "Address PR feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a033f57646dba1c5d7bb3a406d6892b4514122cf", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/a033f57646dba1c5d7bb3a406d6892b4514122cf", "committedDate": "2020-08-07T13:35:54Z", "message": "Removed unused setContent, updated the only reference to it to something more relevant. Removed duplicate checkForInsufficientStorageException method (identical method is in ContentExposingResource). Removed unused wiremock version variable which was leftover from no long existing external binary tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70cb2b38ee80e55573ce146d4e92514ac78e8780", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/70cb2b38ee80e55573ce146d4e92514ac78e8780", "committedDate": "2020-08-07T13:34:13Z", "message": "Removed unused setContent, updated the only reference to it to something more relevant. Removed duplicate checkForInsufficientStorageException method (identical method is in ContentExposingResource). Removed unused wiremock version variable which was leftover from no long existing external binary tests"}, "afterCommit": {"oid": "a033f57646dba1c5d7bb3a406d6892b4514122cf", "author": {"user": {"login": "bbpennel", "name": "Ben Pennell"}}, "url": "https://github.com/fcrepo/fcrepo/commit/a033f57646dba1c5d7bb3a406d6892b4514122cf", "committedDate": "2020-08-07T13:35:54Z", "message": "Removed unused setContent, updated the only reference to it to something more relevant. Removed duplicate checkForInsufficientStorageException method (identical method is in ContentExposingResource). Removed unused wiremock version variable which was leftover from no long existing external binary tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzIxNTI2", "url": "https://github.com/fcrepo/fcrepo/pull/1735#pullrequestreview-463321526", "createdAt": "2020-08-07T13:41:28Z", "commit": {"oid": "a033f57646dba1c5d7bb3a406d6892b4514122cf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3180, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}