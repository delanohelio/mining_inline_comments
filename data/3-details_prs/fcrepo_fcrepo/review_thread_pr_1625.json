{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcwNDYyNjQ2", "number": 1625, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyOToxMlrODcv5lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozNjoyNFrODfC7yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDcxNTEwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxOToyOToxMlrOFk9K_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNToxMDozMFrOFmej0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTI5NQ==", "bodyText": "The stream should be closed when you're done with it.\ntry (final Stream ocflIds = ocflReposiotry.listObjectIds()) {\n}\nshould do the trick.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r374295295", "createdAt": "2020-02-03T19:29:12Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import java.util.stream.Stream;\n+\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    /**\n+     * Default constructor\n+     */\n+    public FedoraToOCFLObjectIndexUtilImpl() {\n+    }\n+\n+\n+    @Override\n+    public void rebuild() {\n+\n+        final Stream<String> ocflIds = ocflRepository.listObjectIds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90451b2e4a4319601ff8a4ea593daa74783718f8"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTg5MDg5OQ==", "bodyText": "I will fix that.  Thanks.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r375890899", "createdAt": "2020-02-06T15:10:30Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import java.util.stream.Stream;\n+\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    /**\n+     * Default constructor\n+     */\n+    public FedoraToOCFLObjectIndexUtilImpl() {\n+    }\n+\n+\n+    @Override\n+    public void rebuild() {\n+\n+        final Stream<String> ocflIds = ocflRepository.listObjectIds();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDI5NTI5NQ=="}, "originalCommit": {"oid": "90451b2e4a4319601ff8a4ea593daa74783718f8"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNTIyMjg1OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxNjozNzowOVrOFmh-zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQwNzowNTowMFrOFn-47Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0Njk1Nw==", "bodyText": "An empty public constructor is implicit and can be removed here.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r375946957", "createdAt": "2020-02-06T16:37:09Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    /**\n+     * Default constructor\n+     */\n+    public FedoraToOCFLObjectIndexUtilImpl() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68f721f18faaef0dbf156e73b691f75c8af30380"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzQ2OTE2NQ==", "bodyText": "fixed.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377469165", "createdAt": "2020-02-11T07:05:00Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    /**\n+     * Default constructor\n+     */\n+    public FedoraToOCFLObjectIndexUtilImpl() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTk0Njk1Nw=="}, "originalCommit": {"oid": "68f721f18faaef0dbf156e73b691f75c8af30380"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzc0NjU1OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDowOTo0MVrOFoXakg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDowOTo0MVrOFoXakg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3MDk5NA==", "bodyText": "space", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377870994", "createdAt": "2020-02-11T20:09:41Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -58,6 +71,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n+        if(!FEDORA_TO_OCFL_INDEX_FILE.exists()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzc3ODkwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDoyMToxNVrOFoXu7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDoyMToxNVrOFoXu7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3NjIwNw==", "bodyText": "This isn't being used in this class", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377876207", "createdAt": "2020-02-11T20:21:15Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -49,6 +53,15 @@\n     @Inject\n     private RdfSourceOperationFactory operationFactory;\n \n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzc3OTE4OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDoyMToyMFrOFoXvHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDoyMToyMFrOFoXvHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg3NjI1NA==", "bodyText": "This isn't being used in this class", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377876254", "createdAt": "2020-02-11T20:21:20Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -49,6 +53,15 @@\n     @Inject\n     private RdfSourceOperationFactory operationFactory;\n \n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndexUtil fedoraToOCFLObjectIndexUtil;\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzg0MTUxOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndexUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0MTo1NFrOFoYVmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxODo1ODowNVrOFo6sEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4NjEwNQ==", "bodyText": "You're welcome to disagree, but even though java is pretty lose with conventions, in my experience Util usually denotes a class containing static utility methods. That seems to be the case in the fedora codebase too (See FedoraIdUtils, OCFLPersistentStorageUtils, StreamUtils, ResourceHeaderSerializationUtils, etc).\nBased on your javadoc here, I wonder if FedoraToOCFLObjectIndexManager might be better", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377886105", "createdAt": "2020-02-11T20:41:54Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndexUtil.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.api;\n+\n+\n+/**\n+ * Utility for managing the FedoraToOCFLObjectIndex.\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public interface FedoraToOCFLObjectIndexUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0NzMwNQ==", "bodyText": "That's valid.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378447305", "createdAt": "2020-02-12T18:55:13Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndexUtil.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.api;\n+\n+\n+/**\n+ * Utility for managing the FedoraToOCFLObjectIndex.\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public interface FedoraToOCFLObjectIndexUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4NjEwNQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ0ODkxMw==", "bodyText": "I  was thinking that  it was a utility in the sense that it performs useful operations on the FedoraToOCFLObjectIndex.  I don't think it is really managing the index.    I'm incline to leave it as is as I expect that we may be renaming this class in the near future when we bring in the rebuilding of the containment relationships.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378448913", "createdAt": "2020-02-12T18:58:05Z", "author": {"login": "dbernstein"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/FedoraToOCFLObjectIndexUtil.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.api;\n+\n+\n+/**\n+ * Utility for managing the FedoraToOCFLObjectIndex.\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public interface FedoraToOCFLObjectIndexUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4NjEwNQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzg0Mjk2OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0MjoyNFrOFoYWmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0MjoyNFrOFoYWmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4NjM2Mg==", "bodyText": "fix indent", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377886362", "createdAt": "2020-02-11T20:42:24Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -56,31 +54,20 @@\n      * are not set, default directories will be created in java.io.tmpdir.\n      */\n     public DefaultOCFLObjectSessionFactory() {\n-        this(STAGING_DIR, OCFL_STORAGE_ROOT_DIR, OCFL_WORK_DIR);\n+        this(STAGING_DIR);\n     }\n \n     /**\n      * Constructor\n      *\n      * @param ocflStagingDir     The OCFL staging directory\n-     * @param ocflStorageRootDir The OCFL storage root directory\n-     * @param ocflWorkDir        The OCFL work directory\n      */\n-    public DefaultOCFLObjectSessionFactory(final File ocflStagingDir, final File ocflStorageRootDir,\n-                                           final File ocflWorkDir) {\n-        LOGGER.info(\"Fedora OCFL persistence directories:\\n- {}\\n- {}\\n- {}\",\n-                ocflStagingDir, ocflStorageRootDir, ocflWorkDir);\n+    public DefaultOCFLObjectSessionFactory(final File ocflStagingDir) {\n+        LOGGER.info(\"Fedora OCFL persistence staging directory:\\n- {}\",\n+                ocflStagingDir);\n \n         ocflStagingDir.mkdirs();\n-        ocflStorageRootDir.mkdirs();\n-        ocflWorkDir.mkdirs();\n-\n-        this.ocflStagingDir = ocflStagingDir;\n-        this.ocflRepository = new OcflRepositoryBuilder()\n-                .layoutConfig(DefaultLayoutConfig.nTupleHashConfig())\n-                .buildMutable(FileSystemOcflStorage.builder().build(\n-                        ocflStorageRootDir.toPath()), ocflWorkDir.toPath());\n-\n+       this.ocflStagingDir = ocflStagingDir;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzg0NzQ2OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0Mzo1OFrOFoYZcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo0Mzo1OFrOFoYZcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg4NzA4OQ==", "bodyText": "This isn't being used", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377887089", "createdAt": "2020-02-11T20:43:58Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexImpl.java", "diffHunk": "@@ -47,6 +48,9 @@\n \n     private Map<String, FedoraOCFLMapping> fedoraOCFLMappingMap = Collections.synchronizedMap(new HashMap<>());\n \n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzg4MTkzOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMDo1NTowMlrOFoYuxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQyMzowMTo0MlrOFpBqwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjU1MQ==", "bodyText": "Its probably premature to worry about efficiency here, but might as well mention that the sidecar files are isolated in a single subdirectory the OCFL object. So it seems like the ocfl client would have to walk and return at least double the number of files it would if we were able to ask the client for a subpath of the object.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377892551", "createdAt": "2020-02-11T20:55:02Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static java.lang.String.format;\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    @Override\n+    public void rebuild() {\n+\n+        LOGGER.info(\"Initiating index rebuild.\");\n+        fedoraToOCFLObjectIndex.reset();\n+        LOGGER.debug(\"Reading object ids...\");\n+        try (final var ocflIds = ocflRepository.listObjectIds()) {\n+            ocflIds.forEach(ocflId -> {\n+                LOGGER.debug(\"Reading {}\", ocflId);\n+                final var objSession = objectSessionFactory.create(ocflId, null);\n+\n+                //list all the subpaths\n+                try (final var subpaths = objSession.listHeadSubpaths()) {\n+\n+                    //but first resolve the root identifier\n+                    final var sidecarSubpath = getSidecarSubpath(ocflId);\n+                    final var rootHeaders = deserializeHeaders(objSession.read(sidecarSubpath));\n+                    final var fedoraRootIdentifier = rootHeaders.getId();\n+\n+                    subpaths.forEach(subpath -> {\n+                        if (isSidecarSubpath(subpath)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzk0ODczNA==", "bodyText": "Looking at the implementation of listHeadSubpaths(), it's calling OcflRepository.describeObject(), which does not do anything other than return a view of the object's inventory file. The filesystem is not touch, other than to load the inventory if it isn't cached. The only slight optimization that you could do here is to call OcflRepository.describeVersion() instead of describeObject().", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377948734", "createdAt": "2020-02-11T22:54:27Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static java.lang.String.format;\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    @Override\n+    public void rebuild() {\n+\n+        LOGGER.info(\"Initiating index rebuild.\");\n+        fedoraToOCFLObjectIndex.reset();\n+        LOGGER.debug(\"Reading object ids...\");\n+        try (final var ocflIds = ocflRepository.listObjectIds()) {\n+            ocflIds.forEach(ocflId -> {\n+                LOGGER.debug(\"Reading {}\", ocflId);\n+                final var objSession = objectSessionFactory.create(ocflId, null);\n+\n+                //list all the subpaths\n+                try (final var subpaths = objSession.listHeadSubpaths()) {\n+\n+                    //but first resolve the root identifier\n+                    final var sidecarSubpath = getSidecarSubpath(ocflId);\n+                    final var rootHeaders = deserializeHeaders(objSession.read(sidecarSubpath));\n+                    final var fedoraRootIdentifier = rootHeaders.getId();\n+\n+                    subpaths.forEach(subpath -> {\n+                        if (isSidecarSubpath(subpath)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjU1MQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI0MzExNg==", "bodyText": "Ah okay, from some discussion on slack the other day it thought there was a file walk involved.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378243116", "createdAt": "2020-02-12T13:17:36Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static java.lang.String.format;\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    @Override\n+    public void rebuild() {\n+\n+        LOGGER.info(\"Initiating index rebuild.\");\n+        fedoraToOCFLObjectIndex.reset();\n+        LOGGER.debug(\"Reading object ids...\");\n+        try (final var ocflIds = ocflRepository.listObjectIds()) {\n+            ocflIds.forEach(ocflId -> {\n+                LOGGER.debug(\"Reading {}\", ocflId);\n+                final var objSession = objectSessionFactory.create(ocflId, null);\n+\n+                //list all the subpaths\n+                try (final var subpaths = objSession.listHeadSubpaths()) {\n+\n+                    //but first resolve the root identifier\n+                    final var sidecarSubpath = getSidecarSubpath(ocflId);\n+                    final var rootHeaders = deserializeHeaders(objSession.read(sidecarSubpath));\n+                    final var fedoraRootIdentifier = rootHeaders.getId();\n+\n+                    subpaths.forEach(subpath -> {\n+                        if (isSidecarSubpath(subpath)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjU1MQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI0NDg3Mg==", "bodyText": "Ah, the file walk is only to identify all of the object ids in the repository.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378244872", "createdAt": "2020-02-12T13:20:58Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static java.lang.String.format;\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    @Override\n+    public void rebuild() {\n+\n+        LOGGER.info(\"Initiating index rebuild.\");\n+        fedoraToOCFLObjectIndex.reset();\n+        LOGGER.debug(\"Reading object ids...\");\n+        try (final var ocflIds = ocflRepository.listObjectIds()) {\n+            ocflIds.forEach(ocflId -> {\n+                LOGGER.debug(\"Reading {}\", ocflId);\n+                final var objSession = objectSessionFactory.create(ocflId, null);\n+\n+                //list all the subpaths\n+                try (final var subpaths = objSession.listHeadSubpaths()) {\n+\n+                    //but first resolve the root identifier\n+                    final var sidecarSubpath = getSidecarSubpath(ocflId);\n+                    final var rootHeaders = deserializeHeaders(objSession.read(sidecarSubpath));\n+                    final var fedoraRootIdentifier = rootHeaders.getId();\n+\n+                    subpaths.forEach(subpath -> {\n+                        if (isSidecarSubpath(subpath)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjU1MQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2MzI2Ng==", "bodyText": "I can resolve this comment now, just hadn't done so yet since I wasn't sure if we were wanting to do something with OcflRepository.describeVersion() instead of describeObject()", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378563266", "createdAt": "2020-02-12T23:01:42Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImpl.java", "diffHunk": "@@ -0,0 +1,98 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.api.exception.RepositoryRuntimeException;\n+import org.fcrepo.persistence.api.exceptions.PersistentStorageException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndex;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOCFLObjectIndexUtil;\n+import org.fcrepo.persistence.ocfl.api.OCFLObjectSessionFactory;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.stereotype.Component;\n+\n+import javax.inject.Inject;\n+\n+import static java.lang.String.format;\n+import static org.fcrepo.persistence.common.ResourceHeaderSerializationUtils.deserializeHeaders;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.getSidecarSubpath;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.isSidecarSubpath;\n+\n+/**\n+ * An implementation of {@link FedoraToOCFLObjectIndexUtil}\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+@Component\n+public class FedoraToOCFLObjectIndexUtilImpl implements FedoraToOCFLObjectIndexUtil {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(FedoraToOCFLObjectIndexUtilImpl.class);\n+\n+    @Inject\n+    private OCFLObjectSessionFactory objectSessionFactory;\n+\n+    @Inject\n+    private FedoraToOCFLObjectIndex fedoraToOCFLObjectIndex;\n+\n+    @Inject\n+    private OcflRepository ocflRepository;\n+\n+    @Override\n+    public void rebuild() {\n+\n+        LOGGER.info(\"Initiating index rebuild.\");\n+        fedoraToOCFLObjectIndex.reset();\n+        LOGGER.debug(\"Reading object ids...\");\n+        try (final var ocflIds = ocflRepository.listObjectIds()) {\n+            ocflIds.forEach(ocflId -> {\n+                LOGGER.debug(\"Reading {}\", ocflId);\n+                final var objSession = objectSessionFactory.create(ocflId, null);\n+\n+                //list all the subpaths\n+                try (final var subpaths = objSession.listHeadSubpaths()) {\n+\n+                    //but first resolve the root identifier\n+                    final var sidecarSubpath = getSidecarSubpath(ocflId);\n+                    final var rootHeaders = deserializeHeaders(objSession.read(sidecarSubpath));\n+                    final var fedoraRootIdentifier = rootHeaders.getId();\n+\n+                    subpaths.forEach(subpath -> {\n+                        if (isSidecarSubpath(subpath)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg5MjU1MQ=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzkyOTczOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxMDozNVrOFoZMzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxMDozNVrOFoZMzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMDIzOA==", "bodyText": "not used", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377900238", "createdAt": "2020-02-11T21:10:35Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzkzOTU3OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistenceConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxMzo1MlrOFoZS5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxMzo1MlrOFoZS5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMTc5OA==", "bodyText": "not currently being used", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377901798", "createdAt": "2020-02-11T21:13:52Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistenceConfig.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import edu.wisc.library.ocfl.api.MutableOcflRepository;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_STORAGE_ROOT_DIR;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_WORK_DIR;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+\n+/**\n+ * A Configuration for OCFL dependencies\n+ *\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+\n+@Configuration\n+public class OCFLPersistenceConfig {\n+\n+    private static final Logger log = LoggerFactory.getLogger(OCFLPersistenceConfig.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzNzk0NzkxOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNjo1MlrOFoZYWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQyMToxNjo1MlrOFoZYWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzkwMzE5NA==", "bodyText": "I don't think this is doing anything and can be removed", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r377903194", "createdAt": "2020-02-11T21:16:52Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();\n+\n+    @Test\n+    public void testRebuild() throws Exception {\n+\n+        final var repoDir = tempFolder.newFolder(\"ocfl-repo\");\n+        final var workDir = tempFolder.newFolder(\"ocfl-work\");\n+        final var staging = tempFolder.newFolder(\"ocfl-staging\");\n+        final var repository = createRepository(repoDir, workDir);\n+\n+        final var index = new FedoraToOCFLObjectIndexImpl();\n+\n+        final var ocflObjectSessionFactory = new DefaultOCFLObjectSessionFactory(staging);\n+        setField(ocflObjectSessionFactory, \"ocflRepository\", repository);\n+\n+        final var sessionManager = new OCFLPersistentSessionManager();\n+        setField(sessionManager, \"fedoraOcflIndex\", index);\n+        setField(sessionManager, \"objectSessionFactory\", ocflObjectSessionFactory);\n+\n+        final var util = new FedoraToOCFLObjectIndexUtilImpl();\n+        setField(util, \"ocflRepository\", repository);\n+        setField(util, \"fedoraToOCFLObjectIndex\", index);\n+        setField(util, \"objectSessionFactory\", ocflObjectSessionFactory);\n+\n+        final var session1Id = \"session1\";\n+        final var resource1 = \"info:fedora/resource1\";\n+        final var resource2 =  resource1 + \"/resource2\";\n+\n+        final var session = sessionManager.getSession(session1Id);\n+\n+        final var operation = mock(RdfSourceOperation.class, withSettings().extraInterfaces(\n+                CreateResourceOperation.class));\n+        when(operation.getResourceId()).thenReturn(resource1);\n+        when(operation.getType()).thenReturn(CREATE);\n+        when(((CreateResourceOperation)operation).isArchivalGroup()).thenReturn(true);\n+        session.persist(operation);\n+\n+        final var operation2 = mock(NonRdfSourceOperation.class, withSettings().extraInterfaces(\n+                CreateResourceOperation.class));\n+        when(operation2.getResourceId()).thenReturn(resource2);\n+        when(operation2.getType()).thenReturn(CREATE);\n+        final var bytes = \"test\".getBytes();\n+        final var stream = new ByteArrayInputStream(bytes);\n+        when(operation2.getContentSize()).thenReturn((long)bytes.length);\n+        when(operation2.getContentStream()).thenReturn(stream);\n+        when(operation2.getMimeType()).thenReturn(\"text/plain\");\n+        when(operation2.getFilename()).thenReturn(\"test\");\n+        when(((CreateResourceOperation)operation2).getParentId()).thenReturn(resource1);\n+        session.persist(operation2);\n+        session.commit();\n+        assertNotNull(index.getMapping(resource1));\n+        index.reset();\n+\n+        try {\n+            index.getMapping(resource1);\n+            fail(resource1 + \" should not exist in index\");\n+        } catch (final FedoraOCFLMappingNotFoundException e) {\n+            //do nothing - expected\n+        }\n+\n+        ocflObjectSessionFactory.create(resource1, session1Id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 108}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODY3NzM0OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMDoxMVrOFogXEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMDoxMVrOFogXEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxNzU1Mw==", "bodyText": "Remove newline.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378017553", "createdAt": "2020-02-12T03:00:11Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSession.java", "diffHunk": "@@ -123,5 +125,17 @@\n      * The instant at which the session was created.\n      * @return\n      */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODY3NzcwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSession.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMDoyMVrOFogXQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMDoyMVrOFogXQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxNzYwMw==", "bodyText": "Remove newline", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378017603", "createdAt": "2020-02-12T03:00:21Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSession.java", "diffHunk": "@@ -123,5 +125,17 @@\n      * The instant at which the session was created.\n      * @return\n      */\n+\n     Instant getCreated();\n-}\n\\ No newline at end of file\n+\n+    /**\n+     * Lists the subpaths associated with the HEAD (ie the latest committed state)\n+     *\n+     * @return the subpaths as a stream\n+     * @throws PersistentStorageException If subpaths cannot be listed due to the underlying session being closed\n+     *                                    or for some other reason.\n+     */\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODY3OTU5OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSessionFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMTozN1rOFogYXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwMzowMTozN1rOFogYXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAxNzg4Ng==", "bodyText": "Changes to this file can be reverted.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378017886", "createdAt": "2020-02-12T03:01:37Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/api/OCFLObjectSessionFactory.java", "diffHunk": "@@ -31,4 +31,6 @@\n      * @return The newly created session.\n      */\n     OCFLObjectSession create(final String ocflId, final String persistentStorageSessionId);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODgwMDcxOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozMjozN1rOFohgPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozMjozN1rOFohgPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjI4Ng==", "bodyText": "Please add log message indicating location of storageRootDir and workDir.\n..like: https://github.com/fcrepo4/fcrepo4/pull/1625/files#diff-f2c25ea789161a21300d5fa03b8a3965L71-L72", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378036286", "createdAt": "2020-02-12T04:32:37Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/OCFLPersistentStorageUtils.java", "diffHunk": "@@ -338,4 +352,21 @@ public static String mintOCFLObjectId(final String fedoraIdentifier) {\n \n         return bareFedoraIdentifier;\n     }\n+\n+    /**\n+     * Create a new ocfl repository\n+     * @param ocflStorageRootDir The ocfl storage root directory\n+     * @param ocflWorkDir The ocfl work directory\n+     * @return the repository\n+     */\n+    public static MutableOcflRepository createRepository(final File ocflStorageRootDir, final File ocflWorkDir) {\n+        ocflStorageRootDir.mkdirs();\n+        ocflWorkDir.mkdirs();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzODgwNTIyOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNDozNjoyNFrOFohi7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QwMjoxMjo0OFrOFpE9eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw==", "bodyText": "Unit tests should only write test artifacts to the Maven module's target directory.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378036973", "createdAt": "2020-02-12T04:36:24Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODI0MjM2MA==", "bodyText": "I can see some value in this, but TemporaryFolder is pretty standard junit and does guarantee a cleaner state between runs without having to perform a maven clean", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378242360", "createdAt": "2020-02-12T13:16:08Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5NTQ5Mw==", "bodyText": "The question is, do we align more closely with Maven or with Junit?\nMaybe because I do all of my builds on the commandline, I align with Maven, and am adverse to the build leaving files/directories on my local machine after mvn clean.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378495493", "createdAt": "2020-02-12T20:30:09Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODQ5ODQ5OQ==", "bodyText": "TemporaryFolder doesn't leave files on disk. But, you can have it both ways.\n@Rule\npublic TemporaryFolder tempFolder = new TemporaryFolder(new File(\"target/junit-temp\"));\n(Not sure if it will automatically handle creating the parent directory if it doesn't exist.)", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378498499", "createdAt": "2020-02-12T20:36:41Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUwMjQ1NA==", "bodyText": "On the flip side, I do like to have test files left on-disk (target) in case I want to inspect them after a build... but want my system to be clean after running mvn clean.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378502454", "createdAt": "2020-02-12T20:45:24Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODUwNDE0Nw==", "bodyText": "Fair enough! That is sometimes useful.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378504147", "createdAt": "2020-02-12T20:48:55Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODU2MjkwMw==", "bodyText": "I guess I view maven as the build tool and junit as the testing framework, with the hope that if something works in junit (particularly unit tests) it should work in maven or other test environments. I'm biased though since I usually run individual tests via an IDE, and mainly rely on maven when running the full suite. Usually in order to see what state was produced I end up setting break points, but its just a different workflow.\nI don't think it makes too much difference one way or the other for this particular case, so I'm okay with whatever we decide on here. It would be good to know if the project standard is to use target though. There are only a few places using TemporaryFolders at the moment, so maybe that is the case.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378562903", "createdAt": "2020-02-12T23:00:42Z", "author": {"login": "bbpennel"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODYxNzIxMA==", "bodyText": "Historically, Fedora has left a clean system after mvn clean.\nAgreed, if we want to change, we can... but it should be a decision.", "url": "https://github.com/fcrepo/fcrepo/pull/1625#discussion_r378617210", "createdAt": "2020-02-13T02:12:48Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/test/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexUtilImplTest.java", "diffHunk": "@@ -0,0 +1,113 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.kernel.api.operations.CreateResourceOperation;\n+import org.fcrepo.kernel.api.operations.NonRdfSourceOperation;\n+import org.fcrepo.kernel.api.operations.RdfSourceOperation;\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.junit.rules.TemporaryFolder;\n+\n+import java.io.ByteArrayInputStream;\n+\n+import static org.fcrepo.kernel.api.operations.ResourceOperationType.CREATE;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLPersistentStorageUtils.createRepository;\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.fail;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+import static org.mockito.Mockito.withSettings;\n+import static org.springframework.test.util.ReflectionTestUtils.setField;\n+\n+/**\n+ * @author dbernstein\n+ * @since 6.0.0\n+ */\n+public class FedoraToOCFLObjectIndexUtilImplTest {\n+\n+    private static final String RESOURCE_ID_1 = \"info:fedora/resource\";\n+\n+    @Rule\n+    public TemporaryFolder tempFolder = new TemporaryFolder();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODAzNjk3Mw=="}, "originalCommit": {"oid": "7fd0faab735bae53bca6bafd0f9ec2b62d2cb5cc"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1937, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}