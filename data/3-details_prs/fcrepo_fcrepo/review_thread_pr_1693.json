{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NjU0NTAx", "number": 1693, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNzoyMToxMlrOEDLeXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNzoyMToxMlrOEDLeXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzY5MTgwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNzoyMToxMlrOGgEwDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzowODozNFrOGgc-9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4NTQ1Mg==", "bodyText": "Presumably the magic numbers of \"2\" and \"3\" map to the columns \"FEDORA_ROOT_ID_COLUMN\" and \"OCFL_ID_COLUMN\"?\nCan you make that more transparent... and obvious for potential future debugging/refactoring?", "url": "https://github.com/fcrepo/fcrepo/pull/1693#discussion_r436285452", "createdAt": "2020-06-06T17:21:12Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOcflObjectIndex;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.DefaultResourceLoader;\n+import org.springframework.dao.EmptyResultDataAccessException;\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n+import org.springframework.jdbc.datasource.init.DatabasePopulatorUtils;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.sql.DataSource;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+/**\n+ * Maps Fedora IDs to the OCFL IDs of the OCFL objects the Fedora resource is stored in. This implementation is backed\n+ * by a relational database.\n+ */\n+@Component\n+public class DbFedoraToOcflObjectIndex implements FedoraToOcflObjectIndex {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DbFedoraToOcflObjectIndex.class);\n+\n+    private static final String DDL = \"sql/default-ocfl-index.sql\";\n+\n+    private static final String MAPPING_TABLE = \"ocfl_id_map\";\n+\n+    private static final String FEDORA_ID_COLUMN = \"fedora_id\";\n+\n+    private static final String FEDORA_ROOT_ID_COLUMN = \"fedora_root_id\";\n+\n+    private static final String OCFL_ID_COLUMN = \"ocfl_id\";\n+\n+    private static final String LOOKUP_MAPPING = \"SELECT * FROM \" + MAPPING_TABLE +\n+            \" WHERE \" + FEDORA_ID_COLUMN + \" = :fedoraId\";\n+\n+    private static final String INSERT_MAPPING = \"INSERT INTO \" + MAPPING_TABLE +\n+            \" (\" + FEDORA_ID_COLUMN + \", \" + FEDORA_ROOT_ID_COLUMN + \", \" + OCFL_ID_COLUMN + \")\" +\n+            \" VALUES (:fedoraId, :fedoraRootId, :ocflId)\";\n+\n+    private static final String REMOVE_MAPPING = \"DELETE FROM \" + MAPPING_TABLE +\n+            \" WHERE \" + FEDORA_ID_COLUMN + \" = :fedoraId\";\n+\n+    private static final String TRUNCATE_MAPPINGS = \"TRUNCATE TABLE \" + MAPPING_TABLE;\n+\n+    private final DataSource dataSource;\n+\n+    private final NamedParameterJdbcTemplate jdbcTemplate;\n+\n+    public DbFedoraToOcflObjectIndex(@Autowired final DataSource dataSource) {\n+        this.dataSource = dataSource;\n+        this.jdbcTemplate = new NamedParameterJdbcTemplate(dataSource);\n+    }\n+\n+    @PostConstruct\n+    public void setup() {\n+        LOGGER.info(\"Applying ddl: {}\", DDL);\n+        DatabasePopulatorUtils.execute(\n+                new ResourceDatabasePopulator(new DefaultResourceLoader().getResource(\"classpath:\" + DDL)),\n+                dataSource);\n+    }\n+\n+    @Override\n+    public FedoraOCFLMapping getMapping(final String fedoraId) throws FedoraOCFLMappingNotFoundException {\n+        try {\n+            return jdbcTemplate.queryForObject(LOOKUP_MAPPING,\n+                    Map.of(\"fedoraId\", fedoraId), (rs, rowNum) -> {\n+                        return new FedoraOCFLMapping(rs.getString(2), rs.getString(3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54e40a1fb8251448f76a6c3ede2cce9faf196262"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4MjQ4Nw==", "bodyText": "Added a comment", "url": "https://github.com/fcrepo/fcrepo/pull/1693#discussion_r436682487", "createdAt": "2020-06-08T13:08:34Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DbFedoraToOcflObjectIndex.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.fcrepo.persistence.ocfl.impl;\n+\n+import org.fcrepo.persistence.ocfl.api.FedoraOCFLMappingNotFoundException;\n+import org.fcrepo.persistence.ocfl.api.FedoraToOcflObjectIndex;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.core.io.DefaultResourceLoader;\n+import org.springframework.dao.EmptyResultDataAccessException;\n+import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate;\n+import org.springframework.jdbc.datasource.init.DatabasePopulatorUtils;\n+import org.springframework.jdbc.datasource.init.ResourceDatabasePopulator;\n+import org.springframework.stereotype.Component;\n+\n+import javax.annotation.PostConstruct;\n+import javax.sql.DataSource;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+/**\n+ * Maps Fedora IDs to the OCFL IDs of the OCFL objects the Fedora resource is stored in. This implementation is backed\n+ * by a relational database.\n+ */\n+@Component\n+public class DbFedoraToOcflObjectIndex implements FedoraToOcflObjectIndex {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DbFedoraToOcflObjectIndex.class);\n+\n+    private static final String DDL = \"sql/default-ocfl-index.sql\";\n+\n+    private static final String MAPPING_TABLE = \"ocfl_id_map\";\n+\n+    private static final String FEDORA_ID_COLUMN = \"fedora_id\";\n+\n+    private static final String FEDORA_ROOT_ID_COLUMN = \"fedora_root_id\";\n+\n+    private static final String OCFL_ID_COLUMN = \"ocfl_id\";\n+\n+    private static final String LOOKUP_MAPPING = \"SELECT * FROM \" + MAPPING_TABLE +\n+            \" WHERE \" + FEDORA_ID_COLUMN + \" = :fedoraId\";\n+\n+    private static final String INSERT_MAPPING = \"INSERT INTO \" + MAPPING_TABLE +\n+            \" (\" + FEDORA_ID_COLUMN + \", \" + FEDORA_ROOT_ID_COLUMN + \", \" + OCFL_ID_COLUMN + \")\" +\n+            \" VALUES (:fedoraId, :fedoraRootId, :ocflId)\";\n+\n+    private static final String REMOVE_MAPPING = \"DELETE FROM \" + MAPPING_TABLE +\n+            \" WHERE \" + FEDORA_ID_COLUMN + \" = :fedoraId\";\n+\n+    private static final String TRUNCATE_MAPPINGS = \"TRUNCATE TABLE \" + MAPPING_TABLE;\n+\n+    private final DataSource dataSource;\n+\n+    private final NamedParameterJdbcTemplate jdbcTemplate;\n+\n+    public DbFedoraToOcflObjectIndex(@Autowired final DataSource dataSource) {\n+        this.dataSource = dataSource;\n+        this.jdbcTemplate = new NamedParameterJdbcTemplate(dataSource);\n+    }\n+\n+    @PostConstruct\n+    public void setup() {\n+        LOGGER.info(\"Applying ddl: {}\", DDL);\n+        DatabasePopulatorUtils.execute(\n+                new ResourceDatabasePopulator(new DefaultResourceLoader().getResource(\"classpath:\" + DDL)),\n+                dataSource);\n+    }\n+\n+    @Override\n+    public FedoraOCFLMapping getMapping(final String fedoraId) throws FedoraOCFLMappingNotFoundException {\n+        try {\n+            return jdbcTemplate.queryForObject(LOOKUP_MAPPING,\n+                    Map.of(\"fedoraId\", fedoraId), (rs, rowNum) -> {\n+                        return new FedoraOCFLMapping(rs.getString(2), rs.getString(3));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI4NTQ1Mg=="}, "originalCommit": {"oid": "54e40a1fb8251448f76a6c3ede2cce9faf196262"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1848, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}