{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NjM5Mzcw", "number": 1754, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTozMjo0N1rOEj2kXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNzoxMVrOEkIv_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MDI5NjYyOnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ContainmentTriplesServiceImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwMTozMjo0N1rOHSc1dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozMDozNlrOHS4_BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwODg1NA==", "bodyText": "I think this can be removed, I'm just reading code on my phone so I could be mistaken.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489108854", "createdAt": "2020-09-16T01:32:47Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ContainmentTriplesServiceImpl.java", "diffHunk": "@@ -44,8 +44,9 @@\n \n     @Override\n     public Stream<Triple> get(final Transaction tx, final FedoraResource resource) {\n-        final Node currentNode = createURI(resource.getFedoraId().getFullId());\n-        return containmentIndex.getContains(txId(tx), resource).map(c ->\n+        final var fedoraId = resource.getFedoraId();\n+        final Node currentNode = createURI(fedoraId.getFullId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQxNjE5Nw==", "bodyText": "I think I need to keep both, currentNode is used on line 50, and fedoraId is used on 49. But thank you for the phone dedication", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489416197", "createdAt": "2020-09-16T12:58:48Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ContainmentTriplesServiceImpl.java", "diffHunk": "@@ -44,8 +44,9 @@\n \n     @Override\n     public Stream<Triple> get(final Transaction tx, final FedoraResource resource) {\n-        final Node currentNode = createURI(resource.getFedoraId().getFullId());\n-        return containmentIndex.getContains(txId(tx), resource).map(c ->\n+        final var fedoraId = resource.getFedoraId();\n+        final Node currentNode = createURI(fedoraId.getFullId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwODg1NA=="}, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MDA1Mw==", "bodyText": "\ud83e\udd26  I looked at these 5 lines for like 5 minutes and still couldn't get them correct in my mind. You are correct, please disregard my previous comment.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489570053", "createdAt": "2020-09-16T16:30:36Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/ContainmentTriplesServiceImpl.java", "diffHunk": "@@ -44,8 +44,9 @@\n \n     @Override\n     public Stream<Triple> get(final Transaction tx, final FedoraResource resource) {\n-        final Node currentNode = createURI(resource.getFedoraId().getFullId());\n-        return containmentIndex.getContains(txId(tx), resource).map(c ->\n+        final var fedoraId = resource.getFedoraId();\n+        final Node currentNode = createURI(fedoraId.getFullId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTEwODg1NA=="}, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzIzNDI1OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/FedoraResource.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjoyNTo1OVrOHS4z5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODowNjoyOFrOHS8XAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2NzIwNg==", "bodyText": "I'd vote to just remove it and not deprecate it, either that or at least return one child because the method is totally useless otherwise.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489567206", "createdAt": "2020-09-16T16:25:59Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/FedoraResource.java", "diffHunk": "@@ -142,6 +142,7 @@\n      * @param relPath the given path\n      * @return the child of this resource\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2ODk4MQ==", "bodyText": "When I say its useless, I mean because it is just returning null right now", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489568981", "createdAt": "2020-09-16T16:28:56Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/FedoraResource.java", "diffHunk": "@@ -142,6 +142,7 @@\n      * @param relPath the given path\n      * @return the child of this resource\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2NzIwNg=="}, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyNTM0NA==", "bodyText": "I went ahead and removed it", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489625344", "createdAt": "2020-09-16T18:06:28Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-api/src/main/java/org/fcrepo/kernel/api/models/FedoraResource.java", "diffHunk": "@@ -142,6 +142,7 @@\n      * @param relPath the given path\n      * @return the child of this resource\n      */\n+    @Deprecated", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU2NzIwNg=="}, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI2ODMyOnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ContainerImplTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNToxOFrOHS5J-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxODowMTozM1rOHS8MVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3Mjg1Ng==", "bodyText": "You can leave off the FEDORA_ID_PREFIX + \"/\" + and the FedoraId class will add it automatically.\nSo\n- final var fedoraIdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n- fedoraId = FedoraId.create(fedoraIdStr);\n+ fedoraId = FedoraId.create(UUID.randomUUID().toString());", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489572856", "createdAt": "2020-09-16T16:35:18Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ContainerImplTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.impl.models;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n+import org.fcrepo.kernel.api.models.Binary;\n+import org.fcrepo.kernel.api.models.Container;\n+import org.fcrepo.kernel.api.models.ResourceFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSessionManager;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(\"/containmentIndexTest.xml\")\n+public class ContainerImplTest {\n+    @Mock\n+    private PersistentStorageSessionManager sessionManager;\n+    @Mock\n+    private ResourceFactory resourceFactory;\n+\n+    private final static String TX_ID = \"transacted\";\n+\n+    private FedoraId fedoraId;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        MockitoAnnotations.initMocks(this);\n+        final var fedoraIdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTYyMjYxNA==", "bodyText": "Ah okay, I think I copied that from another test, I'll chop these out", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489622614", "createdAt": "2020-09-16T18:01:33Z", "author": {"login": "bbpennel"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ContainerImplTest.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.kernel.impl.models;\n+\n+import static org.fcrepo.kernel.api.FedoraTypes.FEDORA_ID_PREFIX;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.UUID;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.fcrepo.kernel.api.identifiers.FedoraId;\n+import org.fcrepo.kernel.api.models.Binary;\n+import org.fcrepo.kernel.api.models.Container;\n+import org.fcrepo.kernel.api.models.ResourceFactory;\n+import org.fcrepo.persistence.api.PersistentStorageSessionManager;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.test.context.ContextConfiguration;\n+import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;\n+\n+/**\n+ * @author bbpennel\n+ */\n+@RunWith(SpringJUnit4ClassRunner.class)\n+@ContextConfiguration(\"/containmentIndexTest.xml\")\n+public class ContainerImplTest {\n+    @Mock\n+    private PersistentStorageSessionManager sessionManager;\n+    @Mock\n+    private ResourceFactory resourceFactory;\n+\n+    private final static String TX_ID = \"transacted\";\n+\n+    private FedoraId fedoraId;\n+\n+    @Before\n+    public void setup() throws Exception {\n+        MockitoAnnotations.initMocks(this);\n+        final var fedoraIdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3Mjg1Ng=="}, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI3NDUwOnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNjo1NVrOHS5N6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNjo1NVrOHS5N6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3Mzg2NA==", "bodyText": "Same as above, don't need to prefix with FEDORA_ID_PREFIX + \"/\", can reduce to just FedoraId.create() with the UUID.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489573864", "createdAt": "2020-09-16T16:36:55Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -418,6 +419,67 @@ public void doesResourceExist_Exception_WithoutSession() throws Exception {\n         factory.doesResourceExist(null, fedoraMementoId);\n     }\n \n+    @Test\n+    public void getChildren_NoChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_DoesNotExist() throws Exception {\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_WithChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var child1IdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var child1Id = FedoraId.create(child1IdStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI3NDg5OnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNzowMlrOHS5OIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNzowMlrOHS5OIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3MzkyMQ==", "bodyText": "Same as above, don't need to prefix with FEDORA_ID_PREFIX + \"/\", can reduce to just FedoraId.create() with the UUID.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489573921", "createdAt": "2020-09-16T16:37:02Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -418,6 +419,67 @@ public void doesResourceExist_Exception_WithoutSession() throws Exception {\n         factory.doesResourceExist(null, fedoraMementoId);\n     }\n \n+    @Test\n+    public void getChildren_NoChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_DoesNotExist() throws Exception {\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_WithChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var child1IdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var child1Id = FedoraId.create(child1IdStr);\n+        final var child1Headers = new ResourceHeadersImpl();\n+        child1Headers.setId(child1Id);\n+        populateHeaders(child1Headers, BASIC_CONTAINER);\n+        when(psSession.getHeaders(child1Id, null)).thenReturn(child1Headers);\n+\n+        final var childNestedIdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var childNestedId = FedoraId.create(childNestedIdStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzI3NTUwOnYy", "diffSide": "RIGHT", "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNzoxMVrOHS5Ogw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjozNzoxMVrOHS5Ogw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU3NDAxOQ==", "bodyText": "Same as above, don't need to prefix with FEDORA_ID_PREFIX + \"/\", can reduce to just FedoraId.create() with the UUID.", "url": "https://github.com/fcrepo/fcrepo/pull/1754#discussion_r489574019", "createdAt": "2020-09-16T16:37:11Z", "author": {"login": "whikloj"}, "path": "fcrepo-kernel-impl/src/test/java/org/fcrepo/kernel/impl/models/ResourceFactoryImplTest.java", "diffHunk": "@@ -418,6 +419,67 @@ public void doesResourceExist_Exception_WithoutSession() throws Exception {\n         factory.doesResourceExist(null, fedoraMementoId);\n     }\n \n+    @Test\n+    public void getChildren_NoChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_DoesNotExist() throws Exception {\n+        final var childrenStream = factory.getChildren(sessionId, fedoraId);\n+        assertEquals(0, childrenStream.count());\n+    }\n+\n+    @Test\n+    public void getChildren_WithChildren() throws Exception {\n+        populateHeaders(resourceHeaders, BASIC_CONTAINER);\n+\n+        final var child1IdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var child1Id = FedoraId.create(child1IdStr);\n+        final var child1Headers = new ResourceHeadersImpl();\n+        child1Headers.setId(child1Id);\n+        populateHeaders(child1Headers, BASIC_CONTAINER);\n+        when(psSession.getHeaders(child1Id, null)).thenReturn(child1Headers);\n+\n+        final var childNestedIdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var childNestedId = FedoraId.create(childNestedIdStr);\n+        final var childNestedHeaders = new ResourceHeadersImpl();\n+        childNestedHeaders.setId(childNestedId);\n+        populateHeaders(childNestedHeaders, BASIC_CONTAINER);\n+        when(psSession.getHeaders(childNestedId, null)).thenReturn(childNestedHeaders);\n+\n+        final var child2IdStr = FEDORA_ID_PREFIX + \"/\" + UUID.randomUUID().toString();\n+        final var child2Id = FedoraId.create(child2IdStr);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7054400b368b3858235af0fa656b429b968bf7a3"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1662, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}