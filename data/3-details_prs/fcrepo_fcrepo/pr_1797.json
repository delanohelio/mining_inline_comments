{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4ODg1MjQ3", "number": 1797, "title": "Added exception handler around link type code in case rel string is i\u2026", "bodyText": "\u2026nvalid.\nproduces 400 bad request exception/status\n\ngetTypes() in CreateResourceServiceImpl.java uses java stream to parse the\nrel type in a link header. if the rel type is invalid or corrupt, it causes\na stack trace in the server as it equals a null string object that it tries\nto operate upon. The fix is to add an exception handler around the parsing\ncode to throw a 400 bad request exception that should pass back a 400 status\nto the client.\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3367\nThe title of this pull-request should be a brief description of what the pull-request fixes/improves/changes. Ideally 50 characters or less.\n\nJIRA Ticket: (link)\n\nOther Relevant Links (Mailing list discussion, related pull requests, etc.)\n\nWhat does this Pull Request do?\nA brief description of what the intended result of the PR will be and/or what problem it solves.\nHow should this be tested?\nA description of what steps someone could take to:\n\nReproduce the problem you are fixing (if applicable)\nTest that the Pull Request does what is intended.\nPlease be as detailed as possible.\nGood testing instructions help get your PR completed faster.\n\nInterested parties\nTag (@ mention) interested parties or, if unsure, @fcrepo/committers", "createdAt": "2020-11-11T02:02:02Z", "url": "https://github.com/fcrepo/fcrepo/pull/1797", "merged": true, "mergeCommit": {"oid": "2c2ebc19ae877bc93123d064c204562752cd42de"}, "closed": true, "closedAt": "2020-11-13T21:58:58Z", "author": {"login": "robyj"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbUDDzAH2gAyNTE4ODg1MjQ3OmI4NzAxY2ZiMjU5MDM2ODM4ODQ3MmY3NzViOTA5MGE5MTliNmQ4YzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcOeNdgFqTUzMDQ0NDYyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b8701cfb2590368388472f775b9090a919b6d8c4", "author": {"user": {"login": "robyj", "name": "Jon Roby"}}, "url": "https://github.com/fcrepo/fcrepo/commit/b8701cfb2590368388472f775b9090a919b6d8c4", "committedDate": "2020-11-11T01:54:38Z", "message": "Added exception handler around link type code in case rel string is invalid.\nproduces 400 bad request exception/status\n\n- getTypes() in CreateResourceServiceImpl.java uses java stream to parse the\n  rel type in a link header. if the rel type is invalid or corrupt, it causes\n  a stack trace in the server as it equals a null string object that it tries\n  to operate upon. The fix is to add an exception handler around the parsing\n  code to throw a 400 bad request exception that should pass back a 400 status\n  to the client.\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3367"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6eb0298d89b1643b685de12c76c44e32037f3287", "author": {"user": {"login": "robyj", "name": "Jon Roby"}}, "url": "https://github.com/fcrepo/fcrepo/commit/6eb0298d89b1643b685de12c76c44e32037f3287", "committedDate": "2020-11-11T02:26:56Z", "message": "Removed commented out code in solution\n\nResolves https://jira.lyrasis.org/browse/FCREPO-3367"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjQyMjUz", "url": "https://github.com/fcrepo/fcrepo/pull/1797#pullrequestreview-528242253", "createdAt": "2020-11-11T14:52:20Z", "commit": {"oid": "6eb0298d89b1643b685de12c76c44e32037f3287"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1MjoyMFrOHxQfIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNDo1NDowNVrOHxQjvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMjM4NA==", "bodyText": "Is there a reason that getLinkHeaders needs to be called a second time?", "url": "https://github.com/fcrepo/fcrepo/pull/1797#discussion_r521412384", "createdAt": "2020-11-11T14:52:20Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -236,9 +237,14 @@ private void checkParent(final String txId, final PersistentStorageSession pSess\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        return getLinkHeaders(headers) == null ? emptyList() : getLinkHeaders(headers).stream()\n-                .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n-                .map(URI::toString).collect(Collectors.toList());\n+        final List hdrobjs = getLinkHeaders(headers);\n+        try {\n+            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb0298d89b1643b685de12c76c44e32037f3287"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQxMzU2Nw==", "bodyText": "Can you change this to new BadRequestException(\"Invalid type found\", e) so that the stack trace is not lost.", "url": "https://github.com/fcrepo/fcrepo/pull/1797#discussion_r521413567", "createdAt": "2020-11-11T14:54:05Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/services/CreateResourceServiceImpl.java", "diffHunk": "@@ -236,9 +237,14 @@ private void checkParent(final String txId, final PersistentStorageSession pSess\n      * @return a list of LINK headers with rel=\"type\"\n      */\n     private List<String> getTypes(final List<String> headers) {\n-        return getLinkHeaders(headers) == null ? emptyList() : getLinkHeaders(headers).stream()\n-                .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n-                .map(URI::toString).collect(Collectors.toList());\n+        final List hdrobjs = getLinkHeaders(headers);\n+        try {\n+            return hdrobjs == null ? emptyList() : getLinkHeaders(headers).stream()\n+                    .filter(p -> p.getRel().equalsIgnoreCase(\"type\")).map(Link::getUri)\n+                    .map(URI::toString).collect(Collectors.toList());\n+        } catch ( Exception e ) {\n+            throw new BadRequestException(\"Invalid type found\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb0298d89b1643b685de12c76c44e32037f3287"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "author": {"user": {"login": "robyj", "name": "Jon Roby"}}, "url": "https://github.com/fcrepo/fcrepo/commit/613dc276d3a3ba2bbc56c35dcacaef61352ae55f", "committedDate": "2020-11-11T15:35:00Z", "message": "Removed commented out line of code (travis build failed last night, local worked)\n\ngetLinkHeaders() called once instead of two/three times\n\nhttps://jira.lyrasis.org/browse/FCREPO-3367"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "283dfabd262729915aeaf0ee6bfcd6df8c4da120", "author": {"user": {"login": "robyj", "name": "Jon Roby"}}, "url": "https://github.com/fcrepo/fcrepo/commit/283dfabd262729915aeaf0ee6bfcd6df8c4da120", "committedDate": "2020-11-11T17:46:29Z", "message": "Modified exception message to be more descriptive, to be found easier in a\nstack trace (thought I had already modified it, sorry)\n\nhttps://jira.lyrasis.org/browse/FCREPO-3367"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDIwNTI1", "url": "https://github.com/fcrepo/fcrepo/pull/1797#pullrequestreview-528420525", "createdAt": "2020-11-11T18:13:52Z", "commit": {"oid": "283dfabd262729915aeaf0ee6bfcd6df8c4da120"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwNDQ0NjI5", "url": "https://github.com/fcrepo/fcrepo/pull/1797#pullrequestreview-530444629", "createdAt": "2020-11-13T21:58:47Z", "commit": {"oid": "283dfabd262729915aeaf0ee6bfcd6df8c4da120"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3001, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}