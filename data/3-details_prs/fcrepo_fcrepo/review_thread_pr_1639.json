{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg0NDk4NDIy", "number": 1639, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMTo0NDowN1rODlmOtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMzoxNTo0OVrODmIX0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzUwMjYwOnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMTo0NDowN1rOFylQ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMzoyNzozN1rOFysJVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4MzY3MA==", "bodyText": "Perhaps the original value should be captured and restored in an @AfterClass method to avoid impacting other tests.", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388583670", "createdAt": "2020-03-05T21:44:07Z", "author": {"login": "pwinckles"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.integration.http.api;\n+\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.impl.operations.RdfSourceOperationFactoryImpl;\n+import org.fcrepo.persistence.ocfl.RepositoryInitializer;\n+import org.fcrepo.persistence.ocfl.impl.DefaultOCFLObjectSessionFactory;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexImpl;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexUtilImpl;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistenceConfig;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+\n+import static java.lang.System.setProperty;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_STORAGE_ROOT_DIR_KEY;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_WORK_DIR_KEY;\n+\n+/**\n+ * @author awooods\n+ * @since 2020-03-04\n+ */\n+public class RebuildIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(RebuildIT.class);\n+\n+    private OcflRepository ocflRepository;\n+\n+    private static AnnotationConfigApplicationContext ctx;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        setProperty(OCFL_STORAGE_ROOT_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-root\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY5NjQwNg==", "bodyText": "addressed", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388696406", "createdAt": "2020-03-06T03:27:37Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.integration.http.api;\n+\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.impl.operations.RdfSourceOperationFactoryImpl;\n+import org.fcrepo.persistence.ocfl.RepositoryInitializer;\n+import org.fcrepo.persistence.ocfl.impl.DefaultOCFLObjectSessionFactory;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexImpl;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexUtilImpl;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistenceConfig;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+\n+import static java.lang.System.setProperty;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_STORAGE_ROOT_DIR_KEY;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_WORK_DIR_KEY;\n+\n+/**\n+ * @author awooods\n+ * @since 2020-03-04\n+ */\n+public class RebuildIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(RebuildIT.class);\n+\n+    private OcflRepository ocflRepository;\n+\n+    private static AnnotationConfigApplicationContext ctx;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        setProperty(OCFL_STORAGE_ROOT_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-root\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4MzY3MA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzUxMjg3OnYy", "diffSide": "RIGHT", "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMTo0NzozOVrOFylXSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQwMzoyNzo0M1rOFysJcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4NTI4OA==", "bodyText": "There is only one test currently, could there be more in the future? If so, is the context dirtied by the existing test and worthwhile recreating?", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388585288", "createdAt": "2020-03-05T21:47:39Z", "author": {"login": "pwinckles"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.integration.http.api;\n+\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.impl.operations.RdfSourceOperationFactoryImpl;\n+import org.fcrepo.persistence.ocfl.RepositoryInitializer;\n+import org.fcrepo.persistence.ocfl.impl.DefaultOCFLObjectSessionFactory;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexImpl;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexUtilImpl;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistenceConfig;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+\n+import static java.lang.System.setProperty;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_STORAGE_ROOT_DIR_KEY;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_WORK_DIR_KEY;\n+\n+/**\n+ * @author awooods\n+ * @since 2020-03-04\n+ */\n+public class RebuildIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(RebuildIT.class);\n+\n+    private OcflRepository ocflRepository;\n+\n+    private static AnnotationConfigApplicationContext ctx;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        setProperty(OCFL_STORAGE_ROOT_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-root\");\n+        setProperty(OCFL_WORK_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-work\");\n+\n+        ctx = new AnnotationConfigApplicationContext(OCFLPersistenceConfig.class);\n+\n+        // RepositoryInitializer.initialize() happens as a part of the object's construction.\n+        ctx.register(RepositoryInitializer.class,\n+                OCFLPersistentSessionManager.class,\n+                RdfSourceOperationFactoryImpl.class,\n+                FedoraToOCFLObjectIndexUtilImpl.class,\n+                DefaultOCFLObjectSessionFactory.class,\n+                OCFLPersistenceConfig.class,\n+                FedoraToOCFLObjectIndexImpl.class);\n+\n+    }\n+\n+    @Before\n+    public void setUp() {\n+        ocflRepository = ctx.getBean(OcflRepository.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY5NjQzMw==", "bodyText": "addressed", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388696433", "createdAt": "2020-03-06T03:27:43Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/RebuildIT.java", "diffHunk": "@@ -0,0 +1,100 @@\n+/*\n+ * Licensed to DuraSpace under one or more contributor license agreements.\n+ * See the NOTICE file distributed with this work for additional information\n+ * regarding copyright ownership.\n+ *\n+ * DuraSpace licenses this file to you under the Apache License,\n+ * Version 2.0 (the \"License\"); you may not use this file except in\n+ * compliance with the License.  You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.fcrepo.integration.http.api;\n+\n+\n+import edu.wisc.library.ocfl.api.OcflRepository;\n+import org.fcrepo.kernel.impl.operations.RdfSourceOperationFactoryImpl;\n+import org.fcrepo.persistence.ocfl.RepositoryInitializer;\n+import org.fcrepo.persistence.ocfl.impl.DefaultOCFLObjectSessionFactory;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexImpl;\n+import org.fcrepo.persistence.ocfl.impl.FedoraToOCFLObjectIndexUtilImpl;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistenceConfig;\n+import org.fcrepo.persistence.ocfl.impl.OCFLPersistentSessionManager;\n+import org.junit.Assert;\n+import org.junit.Before;\n+import org.junit.BeforeClass;\n+import org.junit.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.context.annotation.AnnotationConfigApplicationContext;\n+\n+import static java.lang.System.setProperty;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_STORAGE_ROOT_DIR_KEY;\n+import static org.fcrepo.persistence.ocfl.impl.OCFLConstants.OCFL_WORK_DIR_KEY;\n+\n+/**\n+ * @author awooods\n+ * @since 2020-03-04\n+ */\n+public class RebuildIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(RebuildIT.class);\n+\n+    private OcflRepository ocflRepository;\n+\n+    private static AnnotationConfigApplicationContext ctx;\n+\n+    @BeforeClass\n+    public static void beforeClass() {\n+        setProperty(OCFL_STORAGE_ROOT_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-root\");\n+        setProperty(OCFL_WORK_DIR_KEY, \"target/test-classes/test-rebuild-ocfl/ocfl-work\");\n+\n+        ctx = new AnnotationConfigApplicationContext(OCFLPersistenceConfig.class);\n+\n+        // RepositoryInitializer.initialize() happens as a part of the object's construction.\n+        ctx.register(RepositoryInitializer.class,\n+                OCFLPersistentSessionManager.class,\n+                RdfSourceOperationFactoryImpl.class,\n+                FedoraToOCFLObjectIndexUtilImpl.class,\n+                DefaultOCFLObjectSessionFactory.class,\n+                OCFLPersistenceConfig.class,\n+                FedoraToOCFLObjectIndexImpl.class);\n+\n+    }\n+\n+    @Before\n+    public void setUp() {\n+        ocflRepository = ctx.getBean(OcflRepository.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4NTI4OA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwNzUzMjA5OnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQyMTo1MjoyN1rOFylh8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQwMToyMTowOVrOFzY1tA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODAxOA==", "bodyText": "It's a little funny to instantiate this class. Perhaps it can be injected?", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388588018", "createdAt": "2020-03-05T21:52:27Z", "author": {"login": "pwinckles"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -63,10 +65,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n-        if (!FEDORA_TO_OCFL_INDEX_FILE.exists()) {\n+        final File fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODY5NjgyNw==", "bodyText": "I agree about instantiating the OCFLConstants class... but implementing the injecting is not working out. If you would like to create a pull-request against this pull-request... I will gladly merge it in; otherwise, I suggest we live with the slight funniness.", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r388696827", "createdAt": "2020-03-06T03:29:46Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -63,10 +65,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n-        if (!FEDORA_TO_OCFL_INDEX_FILE.exists()) {\n+        final File fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODAxOA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTEzOTk2MA==", "bodyText": "Was there a reason this couldn't remain as static methods?", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r389139960", "createdAt": "2020-03-06T20:56:39Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -63,10 +65,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n-        if (!FEDORA_TO_OCFL_INDEX_FILE.exists()) {\n+        final File fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODAxOA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0MjgyMw==", "bodyText": "If not, then awoods#11", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r389142823", "createdAt": "2020-03-06T21:03:33Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -63,10 +65,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n-        if (!FEDORA_TO_OCFL_INDEX_FILE.exists()) {\n+        final File fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODAxOA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQyODY2MA==", "bodyText": "@whikloj : The static methods prevented setting the OCFL directories in the integration test:\nhttps://github.com/fcrepo4/fcrepo4/pull/1639/files#diff-f210045277d54842209f1d5631554535R62\nNo matter how I tried to feed the updated OCFL directories into System or Env properties, the Maven values were always picked up.\nhttps://github.com/fcrepo4/fcrepo4/blob/master/pom.xml#L510-L512", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r389428660", "createdAt": "2020-03-09T01:21:09Z", "author": {"login": "awoods"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/RepositoryInitializer.java", "diffHunk": "@@ -63,10 +65,12 @@ public void initialize() {\n         final PersistentStorageSession session = this.sessionManager.getSession(\"initializationSession\" +\n                                                                                  System.currentTimeMillis());\n \n-        if (!FEDORA_TO_OCFL_INDEX_FILE.exists()) {\n+        final File fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODU4ODAxOA=="}, "originalCommit": {"oid": "dcbe994e8f51eb0cd7abadce8a0b763f719a4283"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMTExMzczOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTowNDoxNFrOFzHaGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQyMTowNDoxNFrOFzHaGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTE0MzA2Ng==", "bodyText": "Oh I missed this in my PR, perhaps this was the problem. Checking", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r389143066", "createdAt": "2020-03-06T21:04:14Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/DefaultOCFLObjectSessionFactory.java", "diffHunk": "@@ -54,7 +52,7 @@\n      * are not set, default directories will be created in java.io.tmpdir.\n      */\n     public DefaultOCFLObjectSessionFactory() {\n-        this(STAGING_DIR);\n+        this(new OCFLConstants().getStagingDir());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b42b5b3db34bded9c031705f9fcca25cd317052"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMzA5NjUwOnYy", "diffSide": "RIGHT", "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMzoxNTo0OVrOFzYGTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOFQyMzoxNTo0OVrOFzYGTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTQxNjUyNw==", "bodyText": "I have given up on avoiding all these instantiations. There is no way to @Inject into this class in a test without changing from a Mockito runner to using a Spring test runner and giving @ContextConfiguration to define all the bits because this constructor needs the underlying class right as the class is created.", "url": "https://github.com/fcrepo/fcrepo/pull/1639#discussion_r389416527", "createdAt": "2020-03-08T23:15:49Z", "author": {"login": "whikloj"}, "path": "fcrepo-persistence-ocfl/src/main/java/org/fcrepo/persistence/ocfl/impl/FedoraToOCFLObjectIndexImpl.java", "diffHunk": "@@ -57,8 +58,9 @@\n      * @throws IOException If we can't access the file.\n      */\n     public FedoraToOCFLObjectIndexImpl() throws IOException {\n-        if (FEDORA_TO_OCFL_INDEX_FILE.exists() && FEDORA_TO_OCFL_INDEX_FILE.canRead()) {\n-            try (var lines = Files.lines(FEDORA_TO_OCFL_INDEX_FILE.toPath())) {\n+        fedoraToOcflIndexFile = new OCFLConstants().getFedoraToOCFLIndexFile();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b42b5b3db34bded9c031705f9fcca25cd317052"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1951, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}