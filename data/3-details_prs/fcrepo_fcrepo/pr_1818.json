{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI3NjY0Njk3", "number": 1818, "title": "Embedded Resource representation", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3525\nWhat does this Pull Request do?\nIt adds WebAC checks for the contained resources when asking for the http://www.w3.org/ns/oa#PreferContainedDescriptions\nAdds a new ResourceTripleService that wraps the other services, so it can be called for the contained resources too.\nCleans up the UriAwareResourceModelFactory to remove references to the deprecated IdentifierConverter.\nHow should this be tested?\n\nCreate a container and a child container.\nGet the container with the return=representation; include=\"http://www.w3.org/ns/oa#PreferContainedDescriptions\" Prefer header.\nSee the child resource in the output.\nAdd an ACL to the container allowing access and add an ACL to the child container disallowing access to a user.\nRetry the above request as the user. Get denied access.\n\nInterested parties\nTag (@ mention) interested parties or, if unsure, @fcrepo/committers", "createdAt": "2020-11-25T19:58:35Z", "url": "https://github.com/fcrepo/fcrepo/pull/1818", "merged": true, "mergeCommit": {"oid": "aaaa4f02d69ceb53a9dbe5fd9640b30ff83e679d"}, "closed": true, "closedAt": "2020-12-01T15:22:10Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhvJYJgFqTU0MTM5NDEwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh7lH4gFqTU0MjAwOTEwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzk0MTAy", "url": "https://github.com/fcrepo/fcrepo/pull/1818#pullrequestreview-541394102", "createdAt": "2020-12-01T00:11:49Z", "commit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDoxMTo0OVrOH8S7_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMDo0OToxMVrOH8Tuug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4Njg3OA==", "bodyText": "Can you update this debug message to include the resource? ...and maybe currentUser?", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532986878", "createdAt": "2020-12-01T00:11:49Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -325,7 +329,13 @@ private boolean isAuthorized(final Subject currentUser, final HttpServletRequest\n                     return false;\n                 }\n             } else {\n-                return currentUser.isPermitted(toRead);\n+                if (currentUser.isPermitted(toRead)) {\n+                    if (!isAuthorizedForContainedResources(httpRequest, currentUser, resource)) {\n+                        log.debug(\"GET denied, not authorized for an embedded resource\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4NzQ2OQ==", "bodyText": "This message also applies to \"OPTIONS\" and \"HEAD\"... not just \"GET\" as the debug statement suggests.", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532987469", "createdAt": "2020-12-01T00:13:40Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -325,7 +329,13 @@ private boolean isAuthorized(final Subject currentUser, final HttpServletRequest\n                     return false;\n                 }\n             } else {\n-                return currentUser.isPermitted(toRead);\n+                if (currentUser.isPermitted(toRead)) {\n+                    if (!isAuthorizedForContainedResources(httpRequest, currentUser, resource)) {\n+                        log.debug(\"GET denied, not authorized for an embedded resource\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4Njg3OA=="}, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk4OTUxNw==", "bodyText": "Should this be while instead of if?", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532989517", "createdAt": "2020-12-01T00:19:19Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -708,4 +718,42 @@ private static boolean isBinaryOrDescription(final FedoraResource resource) {\n                 .anyMatch(t -> t.equals(NON_RDF_SOURCE.toString()) || t.equals(FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI));\n     }\n \n+    private static boolean isEmbeddedRequest(final HttpServletRequest request) {\n+        final var preferTags = request.getHeaders(\"Prefer\");\n+        final Set<SinglePrefer> preferTagSet = new HashSet<>();\n+        if (preferTags.hasMoreElements()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5MTMzOQ==", "bodyText": "Would it make sense to change the logic here such that the collecting variable is named authorized, and the final return be authorized?\nIt is slightly counter-intuitive to have \"return true\" indicating a \"failure\".", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532991339", "createdAt": "2020-12-01T00:24:12Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/main/java/org/fcrepo/auth/webac/WebACFilter.java", "diffHunk": "@@ -708,4 +718,42 @@ private static boolean isBinaryOrDescription(final FedoraResource resource) {\n                 .anyMatch(t -> t.equals(NON_RDF_SOURCE.toString()) || t.equals(FEDORA_NON_RDF_SOURCE_DESCRIPTION_URI));\n     }\n \n+    private static boolean isEmbeddedRequest(final HttpServletRequest request) {\n+        final var preferTags = request.getHeaders(\"Prefer\");\n+        final Set<SinglePrefer> preferTagSet = new HashSet<>();\n+        if (preferTags.hasMoreElements()) {\n+            preferTagSet.add(new SinglePrefer(preferTags.nextElement()));\n+        }\n+        final MultiPrefer multiPrefer = new MultiPrefer(preferTagSet);\n+        if (multiPrefer.hasReturn()) {\n+            final LdpPreferTag ldpPreferences = new LdpPreferTag(multiPrefer.getReturn());\n+            return ldpPreferences.prefersEmbed();\n+        }\n+        return false;\n+    }\n+\n+    private boolean isAuthorizedForContainedResources(final HttpServletRequest request, final Subject currentUser,\n+                                                      final FedoraResource resource) {\n+        if (!isBinaryOrDescription(resource) && isEmbeddedRequest(request)) {\n+            final Transaction transaction = transaction(request);\n+            final Stream<FedoraResource> children = resourceFactory.getChildren(TransactionUtils.openTxId(transaction),\n+                    resource.getFedoraId());\n+            final boolean failures = children.anyMatch(c -> {\n+                final URI childURI = URI.create(c.getFedoraId().getFullId());\n+                log.debug(\"Found embedded resource: {}\", c);\n+                // add the contained URI to the list URIs to retrieve ACLs for\n+                addURIToAuthorize(request, childURI);\n+                if (!currentUser.isPermitted(new WebACPermission(WEBAC_MODE_READ, childURI))) {\n+                    log.debug(\"Failed to access embedded resource: {}\", childURI);\n+                    return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5NzU3NQ==", "bodyText": "Probably want to add a @Test annotation.", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532997575", "createdAt": "2020-12-01T00:42:36Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -2154,6 +2155,68 @@ public void testRequestWithEmptyPath() throws Exception {\n         assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getUserRequest));\n     }\n \n+    @Test\n+    public void testGetWithEmbededResourcesOk() throws Exception {\n+        final String targetResource = \"/rest/\" + getRandomUniqueId();\n+        final String childResource = targetResource + \"/\" + getRandomUniqueId();\n+        final String username = \"user88\";\n+        // Make a basic container.\n+        final String targetUri = ingestObj(targetResource);\n+        ingestObj(childResource);\n+        final String readwriteString = \"@prefix acl: <http://www.w3.org/ns/auth/acl#> .\\n\" +\n+                \"<#readauthz> a acl:Authorization ;\\n\" +\n+                \"   acl:agent \\\"\" + username + \"\\\" ;\\n\" +\n+                \"   acl:mode acl:Read, acl:Write ;\\n\" +\n+                \"   acl:default <\" + targetResource + \"> ;\" +\n+                \"   acl:accessTo <\" + targetResource + \"> .\";\n+        // Allow user to read and write this object.\n+        ingestAclString(targetUri, readwriteString, \"fedoraAdmin\");\n+\n+        final HttpGet getAdminChild = new HttpGet(targetUri);\n+        setAuth(getAdminChild, username);\n+        getAdminChild.addHeader(\"Prefer\", \"return=representation; include=\\\"\" + EMBED_CONTAINED + \"\\\"\");\n+        assertEquals(OK.getStatusCode(), getStatus(getAdminChild));\n+    }\n+\n+    public void testGetWithEmbeddedResourceDenied() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTc5MQ==", "bodyText": "Typo: \"Embedded\"", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532999791", "createdAt": "2020-12-01T00:48:58Z", "author": {"login": "awoods"}, "path": "fcrepo-auth-webac/src/test/java/org/fcrepo/integration/auth/webac/WebACRecipesIT.java", "diffHunk": "@@ -2154,6 +2155,68 @@ public void testRequestWithEmptyPath() throws Exception {\n         assertEquals(BAD_REQUEST.getStatusCode(), getStatus(getUserRequest));\n     }\n \n+    @Test\n+    public void testGetWithEmbededResourcesOk() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk5OTg2Ng==", "bodyText": "Typo: \"embedded\"", "url": "https://github.com/fcrepo/fcrepo/pull/1818#discussion_r532999866", "createdAt": "2020-12-01T00:49:11Z", "author": {"login": "awoods"}, "path": "fcrepo-http-api/src/test/java/org/fcrepo/integration/http/api/FedoraLdpIT.java", "diffHunk": "@@ -3803,11 +3802,48 @@ public void testEmbeddedContainedResources() throws IOException {\n             final DatasetGraph graphStore = getDataset(response).asDatasetGraph();\n             assertTrue(\"Property on child binary should be found!\" + graphStore, graphStore.contains(ANY,\n                     createURI(serverAddress + id + \"/\" + binaryId),\n-                    createURI(\"http://purl.org/dc/elements/1.1/title\"), createLiteral(\"this is a title\")));\n+                    title.asNode(), createLiteral(\"this is a title\")));\n         }\n     }\n \n+    @Test\n+    public void testEmbeddedContainedResourcesNotToDeep() throws IOException {\n+        final String id = getRandomUniqueId();\n+        final String level1 = id + \"/\" + getRandomUniqueId();\n+        final String level2 = level1 + \"/\" + getRandomUniqueId();\n+        final String preferEmbed =\n+                \"return=representation; include=\\\"http://www.w3.org/ns/oa#PreferContainedDescriptions\\\"\";\n+\n+        assertEquals(CREATED.getStatusCode(), getStatus(putObjMethod(id)));\n+\n+        final HttpPut putLevel1 = putObjMethod(level1);\n+        putLevel1.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        putLevel1.setEntity(new StringEntity(\"<> <\" + title + \"> \\\"First level\\\"\", UTF_8));\n+        assertEquals(CREATED.getStatusCode(), getStatus(putLevel1));\n \n+        final HttpPut putLevel2 = putObjMethod(level2);\n+        putLevel2.addHeader(CONTENT_TYPE, \"text/turtle\");\n+        putLevel2.setEntity(new StringEntity(\"<> <\" + title + \"> \\\"Second level\\\"\", UTF_8));\n+        assertEquals(CREATED.getStatusCode(), getStatus(putLevel2));\n+\n+        final HttpGet httpGet = getObjMethod(id);\n+        httpGet.setHeader(\"Prefer\", preferEmbed);\n+        try (final CloseableHttpResponse response = execute(httpGet)) {\n+            final Collection<String> preferenceApplied = getHeader(response, \"Preference-Applied\");\n+            assertTrue(\"Preference-Applied header doesn't match\", preferenceApplied.contains(preferEmbed));\n+\n+            final DatasetGraph graphStore = getDataset(response).asDatasetGraph();\n+            assertTrue(\"Property on child binary should be found!\" + graphStore, graphStore.contains(ANY,\n+                    createURI(serverAddress + level1),\n+                    title.asNode(), createLiteral(\"First level\")));\n+            assertFalse(\"Property from embeded resource's own child should not be found.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "857fded3316be45ce6344e686c3521396e053c62", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/857fded3316be45ce6344e686c3521396e053c62", "committedDate": "2020-12-01T04:33:17Z", "message": "Add WebAC support for embedded resources\n\nWrap various triple services in a single service\n\nClean up HttpTripleUtil and UriAwareResourceModelFactory"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2152865e2182a9c23de15993ec1ffc3cba6bd1", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/8e2152865e2182a9c23de15993ec1ffc3cba6bd1", "committedDate": "2020-12-01T04:42:37Z", "message": "Code review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3fb9772ff15198243d1e3b94abc50539c72732dd", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/3fb9772ff15198243d1e3b94abc50539c72732dd", "committedDate": "2020-11-25T19:48:31Z", "message": "Add WebAC support for embedded resources\n\nWrap various triple services in a single service\n\nClean up HttpTripleUtil and UriAwareResourceModelFactory"}, "afterCommit": {"oid": "8e2152865e2182a9c23de15993ec1ffc3cba6bd1", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/8e2152865e2182a9c23de15993ec1ffc3cba6bd1", "committedDate": "2020-12-01T04:42:37Z", "message": "Code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMDA5MTA0", "url": "https://github.com/fcrepo/fcrepo/pull/1818#pullrequestreview-542009104", "createdAt": "2020-12-01T15:21:41Z", "commit": {"oid": "8e2152865e2182a9c23de15993ec1ffc3cba6bd1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3040, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}