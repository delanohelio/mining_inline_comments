{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMDM5MDYy", "number": 1804, "title": "Stream containment and membership via paged DB queries", "bodyText": "JIRA Ticket: https://jira.lyrasis.org/browse/FCREPO-3507\nWhat does this Pull Request do?\nInstead of querying for a list, which could be too large to return in memory this creates a stream backed by a paged query of the database.\nHow should this be tested?\nShould have absolutely no discernable effect except that objects with an extremely large number of contained children or membership properties should still be retrieveable in a timely fashion.\nInterested parties\n@fcrepo/committers (@bbpennel as it was your ticket)", "createdAt": "2020-11-16T23:33:49Z", "url": "https://github.com/fcrepo/fcrepo/pull/1804", "merged": true, "mergeCommit": {"oid": "8ae627786f3f059030b87550c905017307398c1c"}, "closed": true, "closedAt": "2020-11-24T19:29:03Z", "author": {"login": "whikloj"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddaPAtAFqTUzMjM4ODg5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfu6xfgFqTUzNzgzNzkyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMzg4ODkz", "url": "https://github.com/fcrepo/fcrepo/pull/1804#pullrequestreview-532388893", "createdAt": "2020-11-17T14:00:27Z", "commit": {"oid": "70d6044537f433e507ba524546a6a49596350e99"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDowMDoyN1rOH02L3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNDoxMzoxM1rOH02vvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3NTc3Mw==", "bodyText": "I think you might want a ConcurrentLinkedQueue here instead: https://www.baeldung.com/java-queue-linkedblocking-concurrentlinked\nIncidentally, I think your original implementation of the parallelized reindex code would have worked if you'd backed the executor service with a LinkedBlockingQueue. I'm sorry I didn't think of it at the time. :(", "url": "https://github.com/fcrepo/fcrepo/pull/1804#discussion_r525175773", "createdAt": "2020-11-17T14:00:27Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -696,4 +712,38 @@ private Timestamp formatInstant(final Instant instant) {\n         timestamp.setNanos(0);\n         return timestamp;\n     }\n+\n+    /**\n+     * Private class to back a stream with a paged DB query.\n+     *\n+     * If this needs to be run in parallel we will have to override trySplit() and determine a good method to split on.\n+     */\n+    private class ContainmentIterator extends Spliterators.AbstractSpliterator<String> {\n+        final Queue<String> children = new LinkedBlockingQueue<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d6044537f433e507ba524546a6a49596350e99"}, "originalPosition": 176}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE3Njk1OQ==", "bodyText": "Is there a reason to not set the containsLimit parameter here too?\nI see, because there's no reason to set it every time. Perhaps set it in the constructor then?", "url": "https://github.com/fcrepo/fcrepo/pull/1804#discussion_r525176959", "createdAt": "2020-11-17T14:02:06Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -696,4 +712,38 @@ private Timestamp formatInstant(final Instant instant) {\n         timestamp.setNanos(0);\n         return timestamp;\n     }\n+\n+    /**\n+     * Private class to back a stream with a paged DB query.\n+     *\n+     * If this needs to be run in parallel we will have to override trySplit() and determine a good method to split on.\n+     */\n+    private class ContainmentIterator extends Spliterators.AbstractSpliterator<String> {\n+        final Queue<String> children = new LinkedBlockingQueue<>();\n+        final AtomicInteger numOffsets = new AtomicInteger(0);\n+        final String queryToUse;\n+        final MapSqlParameterSource parameterSource;\n+\n+        public ContainmentIterator(final String query, final MapSqlParameterSource parameters) {\n+            super(Long.MAX_VALUE, Spliterator.ORDERED);\n+            queryToUse = query;\n+            parameterSource = parameters;\n+        }\n+\n+        @Override\n+        public boolean tryAdvance(final Consumer<? super String> action) {\n+            try {\n+                action.accept(children.remove());\n+            } catch (final NoSuchElementException e) {\n+                parameterSource.addValue(\"offSet\", numOffsets.getAndIncrement() * containsLimit);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d6044537f433e507ba524546a6a49596350e99"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4Mzk5NQ==", "bodyText": "Out of curiosity, does the ordering ever matter? I ask because this implementation is trying to be thread-safe, but I'm not sure if it is entirely. Is it possible that tryAdvance could be called concurrently? If so, then this code will have a race to load the next page. Assuming there are sufficient items remaining, the competing threads will correctly load different pages, but the order they are added to the queue will be non-deterministic.\nAll that to say, I'm not sure if this implementation needs to be thread-safe. I do not believe that we have any code that uses parallel streaming features.", "url": "https://github.com/fcrepo/fcrepo/pull/1804#discussion_r525183995", "createdAt": "2020-11-17T14:11:51Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -696,4 +712,38 @@ private Timestamp formatInstant(final Instant instant) {\n         timestamp.setNanos(0);\n         return timestamp;\n     }\n+\n+    /**\n+     * Private class to back a stream with a paged DB query.\n+     *\n+     * If this needs to be run in parallel we will have to override trySplit() and determine a good method to split on.\n+     */\n+    private class ContainmentIterator extends Spliterators.AbstractSpliterator<String> {\n+        final Queue<String> children = new LinkedBlockingQueue<>();\n+        final AtomicInteger numOffsets = new AtomicInteger(0);\n+        final String queryToUse;\n+        final MapSqlParameterSource parameterSource;\n+\n+        public ContainmentIterator(final String query, final MapSqlParameterSource parameters) {\n+            super(Long.MAX_VALUE, Spliterator.ORDERED);\n+            queryToUse = query;\n+            parameterSource = parameters;\n+        }\n+\n+        @Override\n+        public boolean tryAdvance(final Consumer<? super String> action) {\n+            try {\n+                action.accept(children.remove());\n+            } catch (final NoSuchElementException e) {\n+                parameterSource.addValue(\"offSet\", numOffsets.getAndIncrement() * containsLimit);\n+                children.addAll(jdbcTemplate.queryForList(queryToUse, parameterSource, String.class));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d6044537f433e507ba524546a6a49596350e99"}, "originalPosition": 193}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTE4NDk1OQ==", "bodyText": "Is this just for testing purposes? If so, it could probably be package-private and optionally annotated with @VisibleForTesting", "url": "https://github.com/fcrepo/fcrepo/pull/1804#discussion_r525184959", "createdAt": "2020-11-17T14:13:13Z", "author": {"login": "pwinckles"}, "path": "fcrepo-kernel-impl/src/main/java/org/fcrepo/kernel/impl/ContainmentIndexImpl.java", "diffHunk": "@@ -393,50 +406,56 @@ private NamedParameterJdbcTemplate getNamedParameterJdbcTemplate() {\n         return new NamedParameterJdbcTemplate(getDataSource());\n     }\n \n+    public void setContainsLimit(final int limit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70d6044537f433e507ba524546a6a49596350e99"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNDk2ODkx", "url": "https://github.com/fcrepo/fcrepo/pull/1804#pullrequestreview-533496891", "createdAt": "2020-11-18T14:25:22Z", "commit": {"oid": "94a414391dd1795f717f0ced4d617f4bf8195045"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94a414391dd1795f717f0ced4d617f4bf8195045", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/94a414391dd1795f717f0ced4d617f4bf8195045", "committedDate": "2020-11-17T20:17:19Z", "message": "Update membershipmanager"}, "afterCommit": {"oid": "6d32988f319cb28e9e15d631167aef50add48024", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/6d32988f319cb28e9e15d631167aef50add48024", "committedDate": "2020-11-19T15:12:34Z", "message": "Update membershipmanager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "284a992e79af1436e5fb4ee9cde653d94eac43d3", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/284a992e79af1436e5fb4ee9cde653d94eac43d3", "committedDate": "2020-11-19T18:46:30Z", "message": "Implement splititerator backed by paged query."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3ddf6a58c2b96ef942499235652dc88f471d938d", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/3ddf6a58c2b96ef942499235652dc88f471d938d", "committedDate": "2020-11-19T18:46:30Z", "message": "Page membership results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4277bf3901208c02dc6c4c467b396c80c9b25723", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/4277bf3901208c02dc6c4c467b396c80c9b25723", "committedDate": "2020-11-19T18:46:30Z", "message": "Code review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "374c302ea8500594fbe382ff6899d9fd4c2dca41", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/374c302ea8500594fbe382ff6899d9fd4c2dca41", "committedDate": "2020-11-19T18:46:30Z", "message": "Update membershipmanager"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d32988f319cb28e9e15d631167aef50add48024", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/6d32988f319cb28e9e15d631167aef50add48024", "committedDate": "2020-11-19T15:12:34Z", "message": "Update membershipmanager"}, "afterCommit": {"oid": "374c302ea8500594fbe382ff6899d9fd4c2dca41", "author": {"user": {"login": "whikloj", "name": "Jared Whiklo"}}, "url": "https://github.com/fcrepo/fcrepo/commit/374c302ea8500594fbe382ff6899d9fd4c2dca41", "committedDate": "2020-11-19T18:46:30Z", "message": "Update membershipmanager"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3ODM3OTIz", "url": "https://github.com/fcrepo/fcrepo/pull/1804#pullrequestreview-537837923", "createdAt": "2020-11-24T19:28:43Z", "commit": {"oid": "374c302ea8500594fbe382ff6899d9fd4c2dca41"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3016, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}