{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTA3NTY5", "number": 501, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOECGIPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOECGIPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNjMzMDIzOnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/tool/WritePluralRules.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOGeV3pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOGeV3pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2ODc3NA==", "bodyText": "This and the other \"nullsFirst()\" call can be removed without obviously breaking anything, and I'd prefer to do that, but you might know why that's not a good idea.", "url": "https://github.com/unicode-org/cldr/pull/501#discussion_r434468774", "createdAt": "2020-06-03T10:30:33Z", "author": {"login": "hagbard"}, "path": "tools/java/org/unicode/cldr/tool/WritePluralRules.java", "diffHunk": "@@ -13,15 +15,26 @@\n import org.unicode.cldr.util.SupplementalDataInfo.PluralType;\n \n import com.google.common.base.Joiner;\n-import com.ibm.icu.dev.util.CollectionUtilities;\n+import com.google.common.collect.Comparators;\n import com.ibm.icu.impl.Relation;\n import com.ibm.icu.text.PluralRules;\n \n public class WritePluralRules {\n+    // Ordering by size-of-set first, and then lexicographically, with a final tie-break on the\n+    // string representation.\n+    // Note: This code was refactored from a legacy utility method (which allowed null) but it's\n+    // not actually clear if nulls need to be allowed in this case.\n+    private static final Comparator<PluralRules> PLURAL_RULES_COMPARATOR =\n+        Comparator.<PluralRules, Integer>comparing(r -> r.getKeywords().size())\n+            .thenComparing(PluralRules::getKeywords,\n+                Comparators.lexicographical(Comparator.<String>nullsFirst(naturalOrder())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83fd3caaaf4adc0be86a747f5fc17e9a9e4647a2"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 501, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}