{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2OTMyMTk2", "number": 834, "title": "CLDR-10883 improving JSON RBNF", "bodyText": "simplify so there are fewer rbnf special cases\nchange to simpler tuple form:\n\"%spellout-cardinal\": [ [\"-x\",\"\u10db\u10d8\u10dc\u10e3\u10e1 \u2192\u2192;\"],[\"x.x\",\"\u2190\u2190 \u10db\u10eb\u10d8\u10db\u10d4 \u2192\u2192;\"],\nto preserve ordering\n\nMight need resolution with #830", "createdAt": "2020-11-06T19:18:37Z", "url": "https://github.com/unicode-org/cldr/pull/834", "merged": true, "mergeCommit": {"oid": "487121bca6dce37bf1c081c5ffb6f0e5cf1db7d0"}, "closed": true, "closedAt": "2020-11-11T18:48:06Z", "author": {"login": "srl295"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbOLsXAFqTUyNzUyMDkwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbiOi5gFqTUyODQyODk5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTIwOTAy", "url": "https://github.com/unicode-org/cldr/pull/834#pullrequestreview-527520902", "createdAt": "2020-11-10T19:04:37Z", "commit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNDozN1rOHwrhoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNDozN1rOHwrhoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwNjgxNw==", "bodyText": "This block could be a subroutine. convertCldrItems is about 246 lines currently, way more than one screenful", "url": "https://github.com/unicode-org/cldr/pull/834#discussion_r520806817", "createdAt": "2020-11-10T19:04:37Z", "author": {"login": "btangmu"}, "path": "tools/java/src/main/java/org/unicode/cldr/json/Ldml2JsonConverter.java", "diffHunk": "@@ -546,23 +547,16 @@ private int convertCldrItems(AtomicInteger readCount, int totalCount,\n                             throw new IllegalArgumentException(\"empty xpath in \" + filename + \" section \" + js.packageName + \"/\" + js.section);\n                         }\n                         if (type == RunType.rbnf) {\n-                            item.setValue(item.getValue().replace('\u2192', '>'));\n-                            item.setValue(item.getValue().replace('\u2190', '<'));\n-                            if (item.getFullPath().contains(\"@value\")) {\n-                                int indexStart = item.getFullPath().indexOf(\"@value\") + 8;\n-                                int indexEnd = item.getFullPath().indexOf(\"]\", indexStart) - 1;\n-                                if (indexStart >= 0 && indexEnd >= 0 && indexEnd > indexStart) {\n-                                    String sub = item.getFullPath().substring(indexStart, indexEnd);\n-                                    /* System.out.println(\"sub: \" + sub);\n-                                    System.out.println(\"full: \" + item.getFullPath());\n-                                    System.out.println(\"val: \" + item.getValue());*/\n-                                    item.setFullPath(item.getFullPath().replace(sub, item.getValue()));\n-                                    item.setFullPath(item.getFullPath().replaceAll(\"@value\", \"@\" + sub));\n-                                    //System.out.println(\"modifyfull: \" + item.getFullPath());\n-                                    item.setValue(\"\");\n-                                }\n+                            XPathParts xpp = XPathParts.getFrozenInstance(item.getFullPath());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTIyODkw", "url": "https://github.com/unicode-org/cldr/pull/834#pullrequestreview-527522890", "createdAt": "2020-11-10T19:07:21Z", "commit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNzoyMlrOHwrnZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowNzoyMlrOHwrnZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwODI5Mw==", "bodyText": "Delete rather than comment out? Recent best practice for \"clean code\" is \"no commented-out code\"", "url": "https://github.com/unicode-org/cldr/pull/834#discussion_r520808293", "createdAt": "2020-11-10T19:07:22Z", "author": {"login": "btangmu"}, "path": "tools/java/src/main/java/org/unicode/cldr/json/Ldml2JsonConverter.java", "diffHunk": "@@ -973,7 +967,7 @@ private void resolveArrayItems(JsonWriter out,\n         ArrayList<CldrNode> nodesForLastItem,\n         ArrayList<CldrItem> arrayItems)\n         throws IOException, ParseException {\n-        boolean rbnfFlag = false;\n+//        boolean rbnfFlag = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NTIzOTg5", "url": "https://github.com/unicode-org/cldr/pull/834#pullrequestreview-527523989", "createdAt": "2020-11-10T19:08:58Z", "commit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowODo1OFrOHwrqlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxOTowODo1OFrOHwrqlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDgwOTExMQ==", "bodyText": "Subroutine? outputArrayItem is over 100 lines", "url": "https://github.com/unicode-org/cldr/pull/834#discussion_r520809111", "createdAt": "2020-11-10T19:08:58Z", "author": {"login": "btangmu"}, "path": "tools/java/src/main/java/org/unicode/cldr/json/Ldml2JsonConverter.java", "diffHunk": "@@ -1274,10 +1268,17 @@ private void outputArrayItem(JsonWriter out, CldrItem item,\n             } else {\n                 if (!objName.equals(\"rbnfrule\")) {\n                     out.beginObject();\n-                }\n-                writeLeafNode(out, objName, attrAsValueMap, value, nodesNum, cldrNode.getName());\n-                if (!objName.equals(\"rbnfrule\")) {\n+                    writeLeafNode(out, objName, attrAsValueMap, value, nodesNum, cldrNode.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4MjczNzU1", "url": "https://github.com/unicode-org/cldr/pull/834#pullrequestreview-528273755", "createdAt": "2020-11-11T15:25:55Z", "commit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyNTo1NVrOHxR66A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNToyNTo1NVrOHxR66A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQzNTg4MA==", "bodyText": "@btangmu I completely missed that there are two \"if(type == RunType.rbnf)\" conditionals right after another. Will fix.", "url": "https://github.com/unicode-org/cldr/pull/834#discussion_r521435880", "createdAt": "2020-11-11T15:25:55Z", "author": {"login": "srl295"}, "path": "tools/java/src/main/java/org/unicode/cldr/json/Ldml2JsonConverter.java", "diffHunk": "@@ -546,23 +547,16 @@ private int convertCldrItems(AtomicInteger readCount, int totalCount,\n                             throw new IllegalArgumentException(\"empty xpath in \" + filename + \" section \" + js.packageName + \"/\" + js.section);\n                         }\n                         if (type == RunType.rbnf) {\n-                            item.setValue(item.getValue().replace('\u2192', '>'));\n-                            item.setValue(item.getValue().replace('\u2190', '<'));\n-                            if (item.getFullPath().contains(\"@value\")) {\n-                                int indexStart = item.getFullPath().indexOf(\"@value\") + 8;\n-                                int indexEnd = item.getFullPath().indexOf(\"]\", indexStart) - 1;\n-                                if (indexStart >= 0 && indexEnd >= 0 && indexEnd > indexStart) {\n-                                    String sub = item.getFullPath().substring(indexStart, indexEnd);\n-                                    /* System.out.println(\"sub: \" + sub);\n-                                    System.out.println(\"full: \" + item.getFullPath());\n-                                    System.out.println(\"val: \" + item.getValue());*/\n-                                    item.setFullPath(item.getFullPath().replace(sub, item.getValue()));\n-                                    item.setFullPath(item.getFullPath().replaceAll(\"@value\", \"@\" + sub));\n-                                    //System.out.println(\"modifyfull: \" + item.getFullPath());\n-                                    item.setValue(\"\");\n-                                }\n+                            XPathParts xpp = XPathParts.getFrozenInstance(item.getFullPath());\n+                            final String sub = xpp.findAttributeValue(\"rbnfrule\", \"value\");\n+                            if(sub != null){\n+                                xpp = xpp.cloneAsThawed();\n+                                final String value = item.getValue();\n+                                xpp.removeAttribute(-1, \"value\");\n+                                xpp.addAttribute(sub, value);\n+                                item.setFullPath(xpp.toString());\n+                                item.setValue(\"\");\n                             }\n-\n                         }\n                         // ADJUST ACCESS=PRIVATE/PUBLIC BASED ON ICU RULE -- START\n                         if (type == RunType.rbnf) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed508745560722e042c030b133f24b82d8f87616"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8386a6555a7b5822493f82f51f543a7cccbddf10", "author": {"user": {"login": "srl295", "name": "Steven R. Loomis"}}, "url": "https://github.com/unicode-org/cldr/commit/8386a6555a7b5822493f82f51f543a7cccbddf10", "committedDate": "2020-11-11T16:55:21Z", "message": "CLDR-10883 improving JSON RBNF\n\n- simplify so there are fewer rbnf special cases\n- change to simpler tuple form:\n \"%spellout-cardinal\": [ [\"-x\",\"\u10db\u10d8\u10dc\u10e3\u10e1 \u2192\u2192;\"],[\"x.x\",\"\u2190\u2190 \u10db\u10eb\u10d8\u10db\u10d4 \u2192\u2192;\"],\n to preserve ordering"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed508745560722e042c030b133f24b82d8f87616", "author": {"user": {"login": "srl295", "name": "Steven R. Loomis"}}, "url": "https://github.com/unicode-org/cldr/commit/ed508745560722e042c030b133f24b82d8f87616", "committedDate": "2020-11-06T19:15:49Z", "message": "CLDR-10883 improving JSON RBNF\n\n- simplify so there are fewer rbnf special cases\n- change to simpler tuple form:\n \"%spellout-cardinal\": [ [\"-x\",\"\u10db\u10d8\u10dc\u10e3\u10e1 \u2192\u2192;\"],[\"x.x\",\"\u2190\u2190 \u10db\u10eb\u10d8\u10db\u10d4 \u2192\u2192;\"],\n to preserve ordering"}, "afterCommit": {"oid": "8386a6555a7b5822493f82f51f543a7cccbddf10", "author": {"user": {"login": "srl295", "name": "Steven R. Loomis"}}, "url": "https://github.com/unicode-org/cldr/commit/8386a6555a7b5822493f82f51f543a7cccbddf10", "committedDate": "2020-11-11T16:55:21Z", "message": "CLDR-10883 improving JSON RBNF\n\n- simplify so there are fewer rbnf special cases\n- change to simpler tuple form:\n \"%spellout-cardinal\": [ [\"-x\",\"\u10db\u10d8\u10dc\u10e3\u10e1 \u2192\u2192;\"],[\"x.x\",\"\u2190\u2190 \u10db\u10eb\u10d8\u10db\u10d4 \u2192\u2192;\"],\n to preserve ordering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDI4OTkz", "url": "https://github.com/unicode-org/cldr/pull/834#pullrequestreview-528428993", "createdAt": "2020-11-11T18:25:51Z", "commit": {"oid": "8386a6555a7b5822493f82f51f543a7cccbddf10"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1795, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}