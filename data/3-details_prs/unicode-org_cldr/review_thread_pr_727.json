{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxMjI3Mjk5", "number": 727, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzozODo1M1rOEmaQ2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyMzo1OFrOEmtAKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzExNjQyOnYy", "diffSide": "RIGHT", "path": "docs/ldml/tr35-numbers.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzozODo1M1rOHWaZLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDoxMDoxM1rOHW_Kpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzE1MA==", "bodyText": "Consider forbidding e0, since I believe 1e0 is equivalent to 1 in the eyes of the spec.  In compact decimals in English, for example, \"123\" has e = 0, but \"1.2K\" has e = 3.", "url": "https://github.com/unicode-org/cldr/pull/727#discussion_r493263150", "createdAt": "2020-09-23T07:38:53Z", "author": {"login": "sffc"}, "path": "docs/ldml/tr35-numbers.html", "diffHunk": "@@ -2539,7 +2539,7 @@ <h3>5.1 <a name=\"Plural_rules_syntax\" href=\n sampleList    = sampleRange (',' sampleRange)* (',' ('\u2026'|'...'))?\n sampleRange   = decimalValue ('~' decimalValue)?\n value         = digit+\n-decimalValue  = value ('.' value)?<br>digit         = 0|1|2|3|4|5|6|7|8|9\n+decimalValue  = value ('.' value)?<span class=\"changed\"> ('e' value)?</span><br>digit         = 0|1|2|3|4|5|6|7|8|9", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59996d3f1027b5dcc79f93edf98938643f60132c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NTYzOA==", "bodyText": "Fixed.", "url": "https://github.com/unicode-org/cldr/pull/727#discussion_r493865638", "createdAt": "2020-09-23T20:10:13Z", "author": {"login": "macchiati"}, "path": "docs/ldml/tr35-numbers.html", "diffHunk": "@@ -2539,7 +2539,7 @@ <h3>5.1 <a name=\"Plural_rules_syntax\" href=\n sampleList    = sampleRange (',' sampleRange)* (',' ('\u2026'|'...'))?\n sampleRange   = decimalValue ('~' decimalValue)?\n value         = digit+\n-decimalValue  = value ('.' value)?<br>digit         = 0|1|2|3|4|5|6|7|8|9\n+decimalValue  = value ('.' value)?<span class=\"changed\"> ('e' value)?</span><br>digit         = 0|1|2|3|4|5|6|7|8|9", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI2MzE1MA=="}, "originalCommit": {"oid": "59996d3f1027b5dcc79f93edf98938643f60132c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5MDE4NjY1OnYy", "diffSide": "RIGHT", "path": "docs/ldml/tr35-numbers.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzoyMzo1OFrOHW46kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNzozMTo1NVrOHW5N1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MzIxOQ==", "bodyText": "Isn't this missing 'e' (as an operand)?", "url": "https://github.com/unicode-org/cldr/pull/727#discussion_r493763219", "createdAt": "2020-09-23T17:23:58Z", "author": {"login": "pedberg-icu"}, "path": "docs/ldml/tr35-numbers.html", "diffHunk": "@@ -2523,23 +2523,39 @@ <h3>5.1 <a name=\"Plural_rules_syntax\" href=\n     <p>The xml value for each pluralRule is a <em>condition</em>\n     with a boolean result that specifies whether that rule (i.e.\n     that plural form) applies to a given numeric value <em>n</em>,\n-    where n can be expressed as a decimal fraction. Clients of CLDR\n+    where n can be expressed as a decimal fraction<span class='changed'> or with compact decimal formatting, denoted by scientific notation in the syntax, e.g., \u201c1.2e6\u201d for \u201c1.2M\u201d</span>. Clients of CLDR\n     may express all the rules for a locale using the following\n     syntax:</p>\n     <pre>\n-    rules         = rule (';' rule)*<br>rule          = keyword ':' condition samples<br>              | 'other' ':' samples<br>keyword       = [a-z]+<br>keyword       = [a-z]+</pre>\n+rules         = rule (';' rule)*\n+rule          = keyword ':' condition samples\n+              | 'other' ':' samples\n+keyword       = [a-z]+\n+keyword       = [a-z]+\n+\t</pre>\n     <p>In CLDR, the keyword is the attribute value of 'count'.\n     Those values in CLDR are currently limited to just what is in\n     the DTD, but clients may support other values.</p>\n     <p>The conditions themselves have the following syntax.</p>\n-    <pre>condition     = and_condition ('or' and_condition)*\n-samples       = ('@integer' sampleList)?<br>                ('@decimal' sampleList)?                \n-and_condition = relation ('and' relation)*<br>relation      = is_relation | in_relation | within_relation <br>is_relation   = expr 'is' ('not')? value<br>in_relation   = expr (('not')? 'in' | '=' | '!=') range_list<br>within_relation = expr ('not')? 'within' range_list<br>expr          = operand (('mod' | '%') value)?\n-operand       = 'n' | 'i' | 'f' | 't' | 'v' | 'w'<br>range_list    = (range | value) (',' range_list)*<br>range         = value'..'value\n-sampleList    = sampleRange (',' sampleRange)* (',' ('\u2026'|'...'))?\n-sampleRange   = decimalValue ('~' decimalValue)?\n-value         = digit+\n-decimalValue  = value ('.' value)?<br>digit         = 0|1|2|3|4|5|6|7|8|9\n+    <pre>condition       = and_condition ('or' and_condition)*\n+samples         = ('@integer' sampleList)?\n+                  ('@decimal' sampleList)?                \n+and_condition   = relation ('and' relation)*\n+relation        = is_relation | in_relation | within_relation \n+is_relation     = expr 'is' ('not')? value\n+in_relation     = expr (('not')? 'in' | '=' | '!=') range_list\n+within_relation = expr ('not')? 'within' range_list\n+expr            = operand (('mod' | '%') value)?\n+operand         = 'n' | 'i' | 'f' | 't' | 'v' | 'w'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff127e5aa59eb8dbe51fcb375b97263470d65b1c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2ODE1MA==", "bodyText": "good catch, added.", "url": "https://github.com/unicode-org/cldr/pull/727#discussion_r493768150", "createdAt": "2020-09-23T17:31:55Z", "author": {"login": "macchiati"}, "path": "docs/ldml/tr35-numbers.html", "diffHunk": "@@ -2523,23 +2523,39 @@ <h3>5.1 <a name=\"Plural_rules_syntax\" href=\n     <p>The xml value for each pluralRule is a <em>condition</em>\n     with a boolean result that specifies whether that rule (i.e.\n     that plural form) applies to a given numeric value <em>n</em>,\n-    where n can be expressed as a decimal fraction. Clients of CLDR\n+    where n can be expressed as a decimal fraction<span class='changed'> or with compact decimal formatting, denoted by scientific notation in the syntax, e.g., \u201c1.2e6\u201d for \u201c1.2M\u201d</span>. Clients of CLDR\n     may express all the rules for a locale using the following\n     syntax:</p>\n     <pre>\n-    rules         = rule (';' rule)*<br>rule          = keyword ':' condition samples<br>              | 'other' ':' samples<br>keyword       = [a-z]+<br>keyword       = [a-z]+</pre>\n+rules         = rule (';' rule)*\n+rule          = keyword ':' condition samples\n+              | 'other' ':' samples\n+keyword       = [a-z]+\n+keyword       = [a-z]+\n+\t</pre>\n     <p>In CLDR, the keyword is the attribute value of 'count'.\n     Those values in CLDR are currently limited to just what is in\n     the DTD, but clients may support other values.</p>\n     <p>The conditions themselves have the following syntax.</p>\n-    <pre>condition     = and_condition ('or' and_condition)*\n-samples       = ('@integer' sampleList)?<br>                ('@decimal' sampleList)?                \n-and_condition = relation ('and' relation)*<br>relation      = is_relation | in_relation | within_relation <br>is_relation   = expr 'is' ('not')? value<br>in_relation   = expr (('not')? 'in' | '=' | '!=') range_list<br>within_relation = expr ('not')? 'within' range_list<br>expr          = operand (('mod' | '%') value)?\n-operand       = 'n' | 'i' | 'f' | 't' | 'v' | 'w'<br>range_list    = (range | value) (',' range_list)*<br>range         = value'..'value\n-sampleList    = sampleRange (',' sampleRange)* (',' ('\u2026'|'...'))?\n-sampleRange   = decimalValue ('~' decimalValue)?\n-value         = digit+\n-decimalValue  = value ('.' value)?<br>digit         = 0|1|2|3|4|5|6|7|8|9\n+    <pre>condition       = and_condition ('or' and_condition)*\n+samples         = ('@integer' sampleList)?\n+                  ('@decimal' sampleList)?                \n+and_condition   = relation ('and' relation)*\n+relation        = is_relation | in_relation | within_relation \n+is_relation     = expr 'is' ('not')? value\n+in_relation     = expr (('not')? 'in' | '=' | '!=') range_list\n+within_relation = expr ('not')? 'within' range_list\n+expr            = operand (('mod' | '%') value)?\n+operand         = 'n' | 'i' | 'f' | 't' | 'v' | 'w'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzc2MzIxOQ=="}, "originalCommit": {"oid": "ff127e5aa59eb8dbe51fcb375b97263470d65b1c"}, "originalPosition": 37}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 392, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}