{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjIyNTk2", "number": 722, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDoxMzowMFrOEl4eXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo0NDo0NFrOEl536w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTU4MDQ3OnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDoxMzowMFrOHVmksQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDoxMzowMFrOHVmksQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxNDEyOQ==", "bodyText": "this class is used in many other spots!", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492414129", "createdAt": "2020-09-22T00:13:00Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c5b7a8c26882d847e7331a4941565017745b64"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTU4MTA5OnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/VettingViewer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDoxMzoyNVrOHVmlEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDoxMzoyNVrOHVmlEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxNDIyNw==", "bodyText": "this is an Emoji-aware English collator, rather than the default (!!) collator.", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492414227", "createdAt": "2020-09-22T00:13:25Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/VettingViewer.java", "diffHunk": "@@ -1005,7 +1004,7 @@ void computeOne(int n) {\n     private void writeSummaryTable(Appendable output, String header, Level desiredLevel,\n         EnumSet<Choice> choices, T organization) throws IOException {\n \n-        Map<String, String> sortedNames = new TreeMap<>(Collator.getInstance());\n+        Map<String, String> sortedNames = new TreeMap<>(CLDRConfig.getInstance().getCollator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63c5b7a8c26882d847e7331a4941565017745b64"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTY2OTg0OnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/VoteResolver.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMTowODo0MFrOHVnXpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMTowODo0MFrOHVnXpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQyNzE3NA==", "bodyText": "I did end up retaining this, just to call String.valueOf\u2026", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492427174", "createdAt": "2020-09-22T01:08:40Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/VoteResolver.java", "diffHunk": "@@ -683,12 +683,15 @@ public T getOrgVoteRaw(Organization orgOfUser) {\n      */\n     private boolean usingKeywordAnnotationVoting = false;\n \n-    private final Comparator<T> ucaCollator = new Comparator<T>() {\n-        Collator col = Collator.getInstance(ULocale.ENGLISH);\n+    private static final Collator englishCollator = Collator.getInstance(ULocale.ENGLISH).freeze();\n \n+    /**\n+     * Used for comparing objects of type T\n+     */\n+    private final Comparator<T> objectCollator = new Comparator<T>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTgwOTcxOnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMjo0NDo0NFrOHVolbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNTo1ODo1N1rOHWBZZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzA4NQ==", "bodyText": "If we are sure this will be called at least ones by all users of MapComparator, this is fine. Otherwise would be good to use the Singleton thread-safe pattern (see other ticket).", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492447085", "createdAt": "2020-09-22T02:44:44Z", "author": {"login": "macchiati"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {\n-    private RuleBasedCollator uca = (RuleBasedCollator) Collator.getInstance(ULocale.ROOT);\n-    {\n-        uca.setNumericCollation(true);\n+    // initialize this once\n+    private static final Collator uca = getUCA();\n+\n+    /**\n+     * This does not change, so we can create one and freeze it.\n+     * @return\n+     */\n+    private static Collator getUCA() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ1Mjg0OA==", "bodyText": "it's used exactly once, in initializing the uca static member. Singleton pattern would be fine here too.", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492452848", "createdAt": "2020-09-22T03:12:45Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {\n-    private RuleBasedCollator uca = (RuleBasedCollator) Collator.getInstance(ULocale.ROOT);\n-    {\n-        uca.setNumericCollation(true);\n+    // initialize this once\n+    private static final Collator uca = getUCA();\n+\n+    /**\n+     * This does not change, so we can create one and freeze it.\n+     * @return\n+     */\n+    private static Collator getUCA() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzA4NQ=="}, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ1Mjk0Nw==", "bodyText": "I'll check the other ticket and update this tomorrow\u2026good point. let's start to propagate that pattern.", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492452947", "createdAt": "2020-09-22T03:13:16Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {\n-    private RuleBasedCollator uca = (RuleBasedCollator) Collator.getInstance(ULocale.ROOT);\n-    {\n-        uca.setNumericCollation(true);\n+    // initialize this once\n+    private static final Collator uca = getUCA();\n+\n+    /**\n+     * This does not change, so we can create one and freeze it.\n+     * @return\n+     */\n+    private static Collator getUCA() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzA4NQ=="}, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg1MzQ5Ng==", "bodyText": "CLDR-14180", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492853496", "createdAt": "2020-09-22T15:58:50Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {\n-    private RuleBasedCollator uca = (RuleBasedCollator) Collator.getInstance(ULocale.ROOT);\n-    {\n-        uca.setNumericCollation(true);\n+    // initialize this once\n+    private static final Collator uca = getUCA();\n+\n+    /**\n+     * This does not change, so we can create one and freeze it.\n+     * @return\n+     */\n+    private static Collator getUCA() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzA4NQ=="}, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg1MzYwNg==", "bodyText": "updated.", "url": "https://github.com/unicode-org/cldr/pull/722#discussion_r492853606", "createdAt": "2020-09-22T15:58:57Z", "author": {"login": "srl295"}, "path": "tools/java/org/unicode/cldr/util/MapComparator.java", "diffHunk": "@@ -24,9 +24,17 @@\n import com.ibm.icu.util.ULocale;\n \n public class MapComparator<K> implements Comparator<K>, Freezable<MapComparator<K>> {\n-    private RuleBasedCollator uca = (RuleBasedCollator) Collator.getInstance(ULocale.ROOT);\n-    {\n-        uca.setNumericCollation(true);\n+    // initialize this once\n+    private static final Collator uca = getUCA();\n+\n+    /**\n+     * This does not change, so we can create one and freeze it.\n+     * @return\n+     */\n+    private static Collator getUCA() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQ0NzA4NQ=="}, "originalCommit": {"oid": "e313eb25050af3422fe7bbea2338e03ecd8a5786"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 387, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}