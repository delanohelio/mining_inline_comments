{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MTA3NTY5", "number": 501, "title": "CLDR-13750 Replace custom comparison logic with JDK comparators", "bodyText": "This replaces the custom logic for the CollectionUtilities methods with the recently added JDK Comparator(s) functionality. This method probably needs to be double checked against the com.ibm classes to ensure it's equivalent.\nSee: https://github.com/unicode-org/cldr/blob/master/tools/java/libs/utilities-src.jar\nIMPORTANT: This is a clone of #462 which I had to abandon because of conflicting changes caused in the time that this PR has been awaiting review (a combination of the requirement to force squash branches and inability to cleanly merge recent changes).\nThis is one of the more subtle refactorings since it relies on human understanding of the existing (undocumented, non-trivial) comparison code. Luckily it has only a few uses, and the JDK Comparator API is nice and readable, so the intent of the new code should be clear.\nAs far as I can tell, the existing comparator code for iterables is equivalent to lexicographical ordering of the \u201cnatural\u201d order with the exception that \u201cnull\u201d should always be sorted first.\nThen the ordering of collections is that, but preceded by a check on the size first.\nNote that while the examples in:\ntools/java/org/unicode/cldr/tool/GeneratePluralRanges.java\npreviously passed collections, and thus get a size comparison in the new code, the example in:\ntools/java/org/unicode/cldr/util/PreferredAndAllowedHour.java\nexplicitly passes just the iterator for comparison, bypassing the size check.\nSomewhat strangely, the example in:\ntools/java/org/unicode/cldr/tool/WritePluralRules.java\ndoes the collection comparison (with size check) and then falls back to a tie-break on the \"toString()\" of the instances being compared. I've no idea why it's doing this, but I've replicated it.\nNote that while I\u2019ve copied this behaviour, I\u2019m not actually sure that in the places it's used you actually expect null at all, so some call sites could possibly be simplified.\nChecklist\n\n Issue filed: https://unicode-org.atlassian.net/browse/CLDR-13750\n Updated PR title and link in previous line to include Issue number", "createdAt": "2020-06-03T10:24:23Z", "url": "https://github.com/unicode-org/cldr/pull/501", "merged": true, "mergeCommit": {"oid": "0a24c9079f2ea83f538f995279389e595c83a545"}, "closed": true, "closedAt": "2020-06-05T11:29:04Z", "author": {"login": "hagbard"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnm7jRAFqTQyMzQyMjk5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcoFxgRgFqTQyNDg3NzM2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNDIyOTk5", "url": "https://github.com/unicode-org/cldr/pull/501#pullrequestreview-423422999", "createdAt": "2020-06-03T10:30:33Z", "commit": {"oid": "83fd3caaaf4adc0be86a747f5fc17e9a9e4647a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOGeV3pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxMDozMDozM1rOGeV3pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDQ2ODc3NA==", "bodyText": "This and the other \"nullsFirst()\" call can be removed without obviously breaking anything, and I'd prefer to do that, but you might know why that's not a good idea.", "url": "https://github.com/unicode-org/cldr/pull/501#discussion_r434468774", "createdAt": "2020-06-03T10:30:33Z", "author": {"login": "hagbard"}, "path": "tools/java/org/unicode/cldr/tool/WritePluralRules.java", "diffHunk": "@@ -13,15 +15,26 @@\n import org.unicode.cldr.util.SupplementalDataInfo.PluralType;\n \n import com.google.common.base.Joiner;\n-import com.ibm.icu.dev.util.CollectionUtilities;\n+import com.google.common.collect.Comparators;\n import com.ibm.icu.impl.Relation;\n import com.ibm.icu.text.PluralRules;\n \n public class WritePluralRules {\n+    // Ordering by size-of-set first, and then lexicographically, with a final tie-break on the\n+    // string representation.\n+    // Note: This code was refactored from a legacy utility method (which allowed null) but it's\n+    // not actually clear if nulls need to be allowed in this case.\n+    private static final Comparator<PluralRules> PLURAL_RULES_COMPARATOR =\n+        Comparator.<PluralRules, Integer>comparing(r -> r.getKeywords().size())\n+            .thenComparing(PluralRules::getKeywords,\n+                Comparators.lexicographical(Comparator.<String>nullsFirst(naturalOrder())))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "83fd3caaaf4adc0be86a747f5fc17e9a9e4647a2"}, "originalPosition": 25}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "83fd3caaaf4adc0be86a747f5fc17e9a9e4647a2", "author": {"user": {"login": "hagbard", "name": "David Beaumont"}}, "url": "https://github.com/unicode-org/cldr/commit/83fd3caaaf4adc0be86a747f5fc17e9a9e4647a2", "committedDate": "2020-06-03T10:18:12Z", "message": "CLDR-13750 Removing obsolete comments relating to unused CollectionUtilities classes."}, "afterCommit": {"oid": "40684b4f950ee347589f3f5d93fe7a3fab8df98b", "author": {"user": {"login": "hagbard", "name": "David Beaumont"}}, "url": "https://github.com/unicode-org/cldr/commit/40684b4f950ee347589f3f5d93fe7a3fab8df98b", "committedDate": "2020-06-03T19:53:37Z", "message": "CLDR-13750 Replace custom comparison logic with JDK comparators"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bac39708ace1d47a42bde54bb5281aec3e3c11a", "author": {"user": {"login": "hagbard", "name": "David Beaumont"}}, "url": "https://github.com/unicode-org/cldr/commit/5bac39708ace1d47a42bde54bb5281aec3e3c11a", "committedDate": "2020-06-03T20:11:30Z", "message": "CLDR-13750 Replace custom comparison logic with JDK comparators"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c29ede3ce1bd8b6afd2afdb85b17d54a01116e6", "author": {"user": {"login": "hagbard", "name": "David Beaumont"}}, "url": "https://github.com/unicode-org/cldr/commit/0c29ede3ce1bd8b6afd2afdb85b17d54a01116e6", "committedDate": "2020-06-03T20:05:22Z", "message": "CLDR-13750 Replace custom comparison logic with JDK comparators"}, "afterCommit": {"oid": "5bac39708ace1d47a42bde54bb5281aec3e3c11a", "author": {"user": {"login": "hagbard", "name": "David Beaumont"}}, "url": "https://github.com/unicode-org/cldr/commit/5bac39708ace1d47a42bde54bb5281aec3e3c11a", "committedDate": "2020-06-03T20:11:30Z", "message": "CLDR-13750 Replace custom comparison logic with JDK comparators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0ODc3MzYx", "url": "https://github.com/unicode-org/cldr/pull/501#pullrequestreview-424877361", "createdAt": "2020-06-04T22:26:39Z", "commit": {"oid": "5bac39708ace1d47a42bde54bb5281aec3e3c11a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2082, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}