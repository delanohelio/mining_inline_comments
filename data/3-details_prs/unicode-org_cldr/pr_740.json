{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTM0MDk1", "number": 740, "title": "CLDR-13582 Make sure browser uses most recent JavaScript files for ST", "bodyText": "-Implement a unit test for validating the hash value\n-New function CldrUtility.getCldrBaseDirHash for both TestMisc and SurveyAjax to get the hash value\n-Use getCldrBaseDirectory (not CLDR_DATA_HASH) for getCldrBaseDirHash\n-Move getGitHashForDir to CldrUtility\n-Delete some dead code concerning CLDR_WEB_TESTS\n\nChecklist\n\n Issue filed: https://unicode-org.atlassian.net/browse/CLDR-13582\n Updated PR title and link in previous line to include Issue number", "createdAt": "2020-09-25T15:01:41Z", "url": "https://github.com/unicode-org/cldr/pull/740", "merged": true, "mergeCommit": {"oid": "b5cc8b50923967e968364431367da05f5bedf207"}, "closed": true, "closedAt": "2020-09-25T17:21:38Z", "author": {"login": "btangmu"}, "timelineItems": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMXCnaAH2gAyNDkzMTM0MDk1OjYxOGY0NDE0Y2MxYzU2NTYwY2QxOGEzMmRjMTQ4OWQxNTJjZjNkOGM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMYKXNAFqTQ5NjU1NDA1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c", "author": {"user": {"login": "btangmu", "name": "Tom Bishop"}}, "url": "https://github.com/unicode-org/cldr/commit/618f4414cc1c56560cd18a32dc1489d152cf3d8c", "committedDate": "2020-09-25T14:55:00Z", "message": "CLDR-13582 Make sure browser uses most recent JavaScript files for ST\n\n-Implement a unit test for validating the hash value\n\n-New function CldrUtility.getCldrBaseDirHash for both TestMisc and SurveyAjax to get the hash value\n\n-Use getCldrBaseDirectory (not CLDR_DATA_HASH) for getCldrBaseDirHash\n\n-Move getGitHashForDir to CldrUtility (public for CLDRConfigImpl which cannot call getCldrBaseDirectory)\n\n-Delete some dead code concerning CLDR_WEB_TESTS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NTU0MDU2", "url": "https://github.com/unicode-org/cldr/pull/740#pullrequestreview-496554056", "createdAt": "2020-09-25T16:02:54Z", "commit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "state": "APPROVED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowMjo1NFrOHYJsIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoxMDo1M1rOHYJ9ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4NjYyNA==", "bodyText": "minor: it's already been asserted as not-null on the prior line, so this is an unnecessary ifdef.", "url": "https://github.com/unicode-org/cldr/pull/740#discussion_r495086624", "createdAt": "2020-09-25T16:02:54Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/org/unicode/cldr/unittest/web/TestMisc.java", "diffHunk": "@@ -82,27 +83,26 @@ public void TestIsCoverageOrganization() {\n     }\n \n     public void TestGitHash() {\n-        final String appsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Apps\");\n-        assertNotNull(\"getting CLDR-Apps version\", appsVersion);\n-        /*\n-         * TODO: fail if CLDRURLS.UNKNOWN_REVISION.equals(appsVersion))\n-         * and likewise for toolsVersion\n-         */\n-        // if (CLDRURLS.UNKNOWN_REVISION.equals(appsVersion)) {\n-        //    errln(\"\u274c appsVersion = UNKNOWN_REVISION: \" + appsVersion);\n-        // }\n-\n-        final String toolsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Tools\");\n-        assertNotNull(\"getting CLDR-Tools version\", toolsVersion);\n-\n-        /*\n-         * TODO: add a regression test here for CLDR_DATA_HASH\n-         * Reference: https://unicode-org.atlassian.net/browse/CLDR-13582\n-         */\n-        // final String hash = CLDRConfig.getInstance().getProperty(\"CLDR_DATA_HASH\");\n-        // assertNotNull(\"getting CLDR_DATA_HASH\", hash);\n-        // if (hash != null && !hash.matches(\"[0-9a-f]+\")) {\n-        //    errln(\"\u274c CLDR_DATA_HASH is not hex: \" + hash);\n-        // }\n+        final String hash = CldrUtility.getCldrBaseDirHash();\n+        assertNotNull(\"getCldrBaseDirHash\", hash);\n+        if (hash != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4NzM5NQ==", "bodyText": "it could be 'unknown' if git is missing or if the code was compiled from a source tarball?maybe this should be a warning?", "url": "https://github.com/unicode-org/cldr/pull/740#discussion_r495087395", "createdAt": "2020-09-25T16:04:14Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/org/unicode/cldr/unittest/web/TestMisc.java", "diffHunk": "@@ -82,27 +83,26 @@ public void TestIsCoverageOrganization() {\n     }\n \n     public void TestGitHash() {\n-        final String appsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Apps\");\n-        assertNotNull(\"getting CLDR-Apps version\", appsVersion);\n-        /*\n-         * TODO: fail if CLDRURLS.UNKNOWN_REVISION.equals(appsVersion))\n-         * and likewise for toolsVersion\n-         */\n-        // if (CLDRURLS.UNKNOWN_REVISION.equals(appsVersion)) {\n-        //    errln(\"\u274c appsVersion = UNKNOWN_REVISION: \" + appsVersion);\n-        // }\n-\n-        final String toolsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Tools\");\n-        assertNotNull(\"getting CLDR-Tools version\", toolsVersion);\n-\n-        /*\n-         * TODO: add a regression test here for CLDR_DATA_HASH\n-         * Reference: https://unicode-org.atlassian.net/browse/CLDR-13582\n-         */\n-        // final String hash = CLDRConfig.getInstance().getProperty(\"CLDR_DATA_HASH\");\n-        // assertNotNull(\"getting CLDR_DATA_HASH\", hash);\n-        // if (hash != null && !hash.matches(\"[0-9a-f]+\")) {\n-        //    errln(\"\u274c CLDR_DATA_HASH is not hex: \" + hash);\n-        // }\n+        final String hash = CldrUtility.getCldrBaseDirHash();\n+        assertNotNull(\"getCldrBaseDirHash\", hash);\n+        if (hash != null) {\n+            if (!hash.matches(\"[0-9a-f]+\")) {\n+                errln(\"\u274c getCldrBaseDirHash is not hex: \" + hash);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4OTczNw==", "bodyText": "So, in a test environment, you definitely don't have cldr-apps.war and thus no manifest to read \"CLDR-Apps\" from. You also might not have cldr*.jar for its tools manifest, if the tests are run in eclipse let's say.  So this might be a warning, but a challenge to get from the test environment.\nI don't know if you can use a warfile as if it were a jar on the classpath? If so, we could have a post build step, something like:   java -DCLDR_APPS_VERSION_TEST -classpath \u2026:\u2026:cldr*.jar:cldr-apps.war TestAll or something like that?", "url": "https://github.com/unicode-org/cldr/pull/740#discussion_r495089737", "createdAt": "2020-09-25T16:08:31Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/org/unicode/cldr/unittest/web/TestMisc.java", "diffHunk": "@@ -82,27 +83,26 @@ public void TestIsCoverageOrganization() {\n     }\n \n     public void TestGitHash() {\n-        final String appsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Apps\");\n-        assertNotNull(\"getting CLDR-Apps version\", appsVersion);\n-        /*\n-         * TODO: fail if CLDRURLS.UNKNOWN_REVISION.equals(appsVersion))\n-         * and likewise for toolsVersion\n-         */\n-        // if (CLDRURLS.UNKNOWN_REVISION.equals(appsVersion)) {\n-        //    errln(\"\u274c appsVersion = UNKNOWN_REVISION: \" + appsVersion);\n-        // }\n-\n-        final String toolsVersion = CLDRConfigImpl.getGitHashForSlug(\"CLDR-Tools\");\n-        assertNotNull(\"getting CLDR-Tools version\", toolsVersion);\n-\n-        /*\n-         * TODO: add a regression test here for CLDR_DATA_HASH\n-         * Reference: https://unicode-org.atlassian.net/browse/CLDR-13582\n-         */\n-        // final String hash = CLDRConfig.getInstance().getProperty(\"CLDR_DATA_HASH\");\n-        // assertNotNull(\"getting CLDR_DATA_HASH\", hash);\n-        // if (hash != null && !hash.matches(\"[0-9a-f]+\")) {\n-        //    errln(\"\u274c CLDR_DATA_HASH is not hex: \" + hash);\n-        // }\n+        final String hash = CldrUtility.getCldrBaseDirHash();\n+        assertNotNull(\"getCldrBaseDirHash\", hash);\n+        if (hash != null) {\n+            if (!hash.matches(\"[0-9a-f]+\")) {\n+                errln(\"\u274c getCldrBaseDirHash is not hex: \" + hash);\n+            } else if (hash.length() < 8) {\n+                errln(\"\u274c getCldrBaseDirHash is shorter than 8 chars: \" + hash);\n+            }\n+        }\n+        final String strings[] = {\"CLDR-Apps\", \"CLDR-Tools\"};\n+        for (String s : strings) {\n+            final String version = CLDRConfigImpl.getGitHashForSlug(s);\n+            assertNotNull(\"getting \" + s + \" version\", version);\n+            /*\n+             * TODO: fail if CLDRURLS.UNKNOWN_REVISION.equals(version).\n+             * Currently they do equal CLDRURLS.UNKNOWN_REVISION, since SurveyMain.init isn't called for TestAll.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MDEwNQ==", "bodyText": "\ud83d\udc4d \"some time\" has passed, whatever it was :)", "url": "https://github.com/unicode-org/cldr/pull/740#discussion_r495090105", "createdAt": "2020-09-25T16:09:05Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/org/unicode/cldr/util/CLDRConfigImpl.java", "diffHunk": "@@ -80,13 +78,6 @@ protected Environment getDefaultEnvironment() {\n     }\n \n     CLDRConfigImpl() {\n-        // TODO remove this after some time- just warn people about the old message", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MTEzMA==", "bodyText": "There's no comnon init() for CLDRConfig, but if there were, this line could move there.", "url": "https://github.com/unicode-org/cldr/pull/740#discussion_r495091130", "createdAt": "2020-09-25T16:10:53Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/org/unicode/cldr/util/CLDRConfigImpl.java", "diffHunk": "@@ -180,7 +171,7 @@ private synchronized void init() {\n         // The git version of the cldr.jar file embedded in cldr-apps.\n         survprops.put(\"CLDR_UTILITIES_HASH\", getGitHashForSlug(\"CLDR-Tools\"));\n         // The git version of the CLDR_DIR currently in use.\n-        survprops.put(\"CLDR_DATA_HASH\", getGitHashForDir(survprops.getProperty(\"CLDR_DIR\", null)));\n+        survprops.put(\"CLDR_DATA_HASH\", CldrUtility.getGitHashForDir(survprops.getProperty(\"CLDR_DIR\", null)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "618f4414cc1c56560cd18a32dc1489d152cf3d8c"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1974, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}