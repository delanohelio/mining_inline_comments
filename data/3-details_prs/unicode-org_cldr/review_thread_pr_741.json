{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMzAwMTE0", "number": 741, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDozMDoyOFrOEoG23Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0Nzo0OVrOEoHW7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDkwODQ1OnYy", "diffSide": "RIGHT", "path": "tools/cldr-apps/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDozMDoyOFrOHZActg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoxNDo0MFrOHZKLeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk4Mzc5OA==", "bodyText": "What's the rationale for commenting this out rather than just deleting it? Unless there's a really good reason -- like a plan to restore the code in the near future -- I think deletion is better. I've been studying the book Building Maintainable Software by Joost Visser, which includes a rule \"Leave No Code in Comments Behind\"", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r495983798", "createdAt": "2020-09-28T14:30:28Z", "author": {"login": "btangmu"}, "path": "tools/cldr-apps/pom.xml", "diffHunk": "@@ -178,18 +178,15 @@\n \t\t\t\t\t\t</includes>\n \t\t\t\t\t</configuration>\n \t\t\t\t</plugin>\n-\t\t\t\t<plugin>\n+\t\t\t\t<!-- <plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0MzIyNg==", "bodyText": "thanks for the recommend! I think with source control, the old version's just a click away. We may want some more parameters here someday.", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r496143226", "createdAt": "2020-09-28T18:14:40Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/pom.xml", "diffHunk": "@@ -178,18 +178,15 @@\n \t\t\t\t\t\t</includes>\n \t\t\t\t\t</configuration>\n \t\t\t\t</plugin>\n-\t\t\t\t<plugin>\n+\t\t\t\t<!-- <plugin>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk4Mzc5OA=="}, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDk1MzM1OnYy", "diffSide": "RIGHT", "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestShim.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0MDowM1rOHZA34w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyMDoyMFrOHZKXDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDc1NQ==", "bodyText": "I don't understand the comment at all: \"... system property corresponding to java.lang ... unset!\"\nCould it be clarified?", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r495990755", "createdAt": "2020-09-28T14:40:03Z", "author": {"login": "btangmu"}, "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestShim.java", "diffHunk": "@@ -2,19 +2,31 @@\n \n import java.io.PrintWriter;\n \n+import org.unicode.cldr.util.TestShimUtils;\n+\n import org.junit.jupiter.api.Test;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n \n /**\n  * a JUnit test that calls TestAll.\n  */\n class TestShim {\n     @Test\n     public void TestAll() {\n-        String args[] = { \"-n\", \"-q\" }; // TODO: parameterize\n+        String args[] = TestShimUtils.getArgs(TestShim.class, \"-n -q\");\n         // regular main() will System.exit() which is not too friendly.\n         // call this instead.\n         int errCount = TestAll.runTests(args);\n         assertEquals(errCount, 0, \"Test had errors\");\n     }\n+\n+    @Test\n+    public void TestTestShimUtilTest() {\n+        // Note: checks the system property corresponding to java.lang,\n+        // we expect this to be unset!\n+        String args[] = TestShimUtils.getArgs(java.lang.String.class, \"-a -b -c\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NjE4OA==", "bodyText": "Yes, i'll clarify. To test the mechanism, it assumes java.lang.testArgs is unset.", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r496146188", "createdAt": "2020-09-28T18:20:20Z", "author": {"login": "srl295"}, "path": "tools/cldr-unittest/src/org/unicode/cldr/unittest/TestShim.java", "diffHunk": "@@ -2,19 +2,31 @@\n \n import java.io.PrintWriter;\n \n+import org.unicode.cldr.util.TestShimUtils;\n+\n import org.junit.jupiter.api.Test;\n import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertArrayEquals;\n \n /**\n  * a JUnit test that calls TestAll.\n  */\n class TestShim {\n     @Test\n     public void TestAll() {\n-        String args[] = { \"-n\", \"-q\" }; // TODO: parameterize\n+        String args[] = TestShimUtils.getArgs(TestShim.class, \"-n -q\");\n         // regular main() will System.exit() which is not too friendly.\n         // call this instead.\n         int errCount = TestAll.runTests(args);\n         assertEquals(errCount, 0, \"Test had errors\");\n     }\n+\n+    @Test\n+    public void TestTestShimUtilTest() {\n+        // Note: checks the system property corresponding to java.lang,\n+        // we expect this to be unset!\n+        String args[] = TestShimUtils.getArgs(java.lang.String.class, \"-a -b -c\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MDc1NQ=="}, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDk2MTkwOnYy", "diffSide": "RIGHT", "path": "tools/java/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0MTo1MVrOHZA9Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyMToyMlrOHZKZNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MjEwMw==", "bodyText": "Again, \"Leave No Code in Comments Behind\"?", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r495992103", "createdAt": "2020-09-28T14:41:51Z", "author": {"login": "btangmu"}, "path": "tools/java/pom.xml", "diffHunk": "@@ -118,13 +118,9 @@\n \t\t\t<plugin>\n \t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n \t\t\t\t<configuration>\n-\t\t\t\t\t<systemPropertyVariables>\n-\t\t\t\t\t\t<CLDR_DIR>${project.basedir}/../../</CLDR_DIR>\n-\t\t\t\t\t\t<CLDR_ENVIRONMENT>UNITTEST</CLDR_ENVIRONMENT>\n-\t\t\t\t\t\t<java.awt.headless>true</java.awt.headless>\n+\t\t\t\t\t<!-- <systemPropertyVariables>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0Njc0Mg==", "bodyText": "I expect to need this, but will remove it for now.\nI thought iot better to comment it out,. than to leave it in but unused.", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r496146742", "createdAt": "2020-09-28T18:21:22Z", "author": {"login": "srl295"}, "path": "tools/java/pom.xml", "diffHunk": "@@ -118,13 +118,9 @@\n \t\t\t<plugin>\n \t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n \t\t\t\t<configuration>\n-\t\t\t\t\t<systemPropertyVariables>\n-\t\t\t\t\t\t<CLDR_DIR>${project.basedir}/../../</CLDR_DIR>\n-\t\t\t\t\t\t<CLDR_ENVIRONMENT>UNITTEST</CLDR_ENVIRONMENT>\n-\t\t\t\t\t\t<java.awt.headless>true</java.awt.headless>\n+\t\t\t\t\t<!-- <systemPropertyVariables>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5MjEwMw=="}, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDk5MDUzOnYy", "diffSide": "RIGHT", "path": "tools/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNDo0Nzo0OVrOHZBOrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxODoyMjozMFrOHZKbjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5NjU4OQ==", "bodyText": "The indentation seems off. Do we have a linter for that? More generally I've been wishing we had an agreed-on set of tools for normalizing spacing, etc., for all kinds of source files", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r495996589", "createdAt": "2020-09-28T14:47:49Z", "author": {"login": "btangmu"}, "path": "tools/pom.xml", "diffHunk": "@@ -225,7 +225,12 @@\n \t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n \t\t\t\t\t<version>${maven-surefire-plugin-version}</version>\n \t\t\t\t\t<configuration>\n-\t\t\t\t\t\t<argLine>-DCLDR_ENVIRONMENT=UNITTEST -Djava.awt.headless=true  -DCLDR_DIR=../../ -Xmx6g -enableassertions</argLine>\n+\t\t\t\t\t<systemPropertyVariables>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE0NzM0Mw==", "bodyText": "yes, i've fixed the indentation. It should be the same as Eclipse's now.\nAgreed\u2026", "url": "https://github.com/unicode-org/cldr/pull/741#discussion_r496147343", "createdAt": "2020-09-28T18:22:30Z", "author": {"login": "srl295"}, "path": "tools/pom.xml", "diffHunk": "@@ -225,7 +225,12 @@\n \t\t\t\t\t<artifactId>maven-surefire-plugin</artifactId>\n \t\t\t\t\t<version>${maven-surefire-plugin-version}</version>\n \t\t\t\t\t<configuration>\n-\t\t\t\t\t\t<argLine>-DCLDR_ENVIRONMENT=UNITTEST -Djava.awt.headless=true  -DCLDR_DIR=../../ -Xmx6g -enableassertions</argLine>\n+\t\t\t\t\t<systemPropertyVariables>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5NjU4OQ=="}, "originalCommit": {"oid": "1aadc44eb0ad97502188cb32cd88db538db16822"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 403, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}