{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNzY0MjA0", "number": 775, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDoyODo0MFrOEsxOQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDoyOTozNlrOEsxPEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mzc5MjY1OnYy", "diffSide": "RIGHT", "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CalendarSortMode.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDoyODo0MVrOHgMPBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDozOToxNVrOHgMehg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNjkzNQ==", "bodyText": "This doesn't appear right. The key to the Bill Pugh singletons is that the statics are in their own static class. That keeps them from being created until needed.", "url": "https://github.com/unicode-org/cldr/pull/775#discussion_r503516935", "createdAt": "2020-10-12T20:28:41Z", "author": {"login": "macchiati"}, "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CalendarSortMode.java", "diffHunk": "@@ -220,31 +220,33 @@ public boolean isMember(DataRow p) {\n     }\n \n     @Override\n-    Comparator<DataRow> createComparator() {\n-        return comparator();\n+    Comparator<DataRow> getComparator() {\n+        return COMPARATOR;\n     }\n \n-    public static Comparator<DataRow> comparator() {\n+    static final Comparator<DataRow> COMPARATOR = new  Comparator<DataRow>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61945a1d30a1dcb4b03e58ba17a7034777f068a7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMDkwMg==", "bodyText": "The SortMode subclasses are intertwined, many sibling classes make use of the Comparator instance from another sibling. But, I can make these lazily instantiated.", "url": "https://github.com/unicode-org/cldr/pull/775#discussion_r503520902", "createdAt": "2020-10-12T20:39:15Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CalendarSortMode.java", "diffHunk": "@@ -220,31 +220,33 @@ public boolean isMember(DataRow p) {\n     }\n \n     @Override\n-    Comparator<DataRow> createComparator() {\n-        return comparator();\n+    Comparator<DataRow> getComparator() {\n+        return COMPARATOR;\n     }\n \n-    public static Comparator<DataRow> comparator() {\n+    static final Comparator<DataRow> COMPARATOR = new  Comparator<DataRow>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNjkzNQ=="}, "originalCommit": {"oid": "61945a1d30a1dcb4b03e58ba17a7034777f068a7"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mzc5NDczOnYy", "diffSide": "RIGHT", "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CodeSortMode.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDoyOTozNlrOHgMQdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMzo0MDo1NFrOHgQgEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzMwMw==", "bodyText": "This looks better, except that each static should be in its own helper. Otherwise you create all of them when any one of them is created.", "url": "https://github.com/unicode-org/cldr/pull/775#discussion_r503517303", "createdAt": "2020-10-12T20:29:36Z", "author": {"login": "macchiati"}, "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CodeSortMode.java", "diffHunk": "@@ -36,13 +36,20 @@ String getName() {\n     }\n \n     @Override\n-    Comparator<DataRow> createComparator() {\n-        return comparator();\n+    Comparator<DataRow> getComparator() {\n+        return CollatorHelper.COMPARATOR;\n     }\n \n-    public static Comparator<DataRow> comparator() {\n-        return new Comparator<DataRow>() {\n-            final Collator myCollator = createCollator();\n+    static final private class CollatorHelper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "61945a1d30a1dcb4b03e58ba17a7034777f068a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMTMwNA==", "bodyText": "The Comparator depends on the Collator.", "url": "https://github.com/unicode-org/cldr/pull/775#discussion_r503521304", "createdAt": "2020-10-12T20:40:16Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CodeSortMode.java", "diffHunk": "@@ -36,13 +36,20 @@ String getName() {\n     }\n \n     @Override\n-    Comparator<DataRow> createComparator() {\n-        return comparator();\n+    Comparator<DataRow> getComparator() {\n+        return CollatorHelper.COMPARATOR;\n     }\n \n-    public static Comparator<DataRow> comparator() {\n-        return new Comparator<DataRow>() {\n-            final Collator myCollator = createCollator();\n+    static final private class CollatorHelper {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzMwMw=="}, "originalCommit": {"oid": "61945a1d30a1dcb4b03e58ba17a7034777f068a7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU4NjgzNA==", "bodyText": "ok, makes sense", "url": "https://github.com/unicode-org/cldr/pull/775#discussion_r503586834", "createdAt": "2020-10-12T23:40:54Z", "author": {"login": "macchiati"}, "path": "tools/cldr-apps/src/main/java/org/unicode/cldr/web/CodeSortMode.java", "diffHunk": "@@ -36,13 +36,20 @@ String getName() {\n     }\n \n     @Override\n-    Comparator<DataRow> createComparator() {\n-        return comparator();\n+    Comparator<DataRow> getComparator() {\n+        return CollatorHelper.COMPARATOR;\n     }\n \n-    public static Comparator<DataRow> comparator() {\n-        return new Comparator<DataRow>() {\n-            final Collator myCollator = createCollator();\n+    static final private class CollatorHelper {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzMwMw=="}, "originalCommit": {"oid": "61945a1d30a1dcb4b03e58ba17a7034777f068a7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 322, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}