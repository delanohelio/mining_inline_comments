{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkxNDg0NjA3", "number": 730, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozMzoyNlrOEmXY8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozNTo0NlrOEmXadg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjY0NTYxOnYy", "diffSide": "RIGHT", "path": "docs/ldml/tr35.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozMzoyNlrOHWWAIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDowNjo0N1rOHW_DNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MTIwMw==", "bodyText": "Should probably fix the space after ja-Latn-, that could be confusing", "url": "https://github.com/unicode-org/cldr/pull/730#discussion_r493191203", "createdAt": "2020-09-23T04:33:26Z", "author": {"login": "pedberg-icu"}, "path": "docs/ldml/tr35.html", "diffHunk": "@@ -8564,6 +8564,268 @@ <h2><a name=\"Links_to_Other_Parts\" href=\"#Links_to_Other_Parts\"\n       </tr>\n     </table>\n     <hr>\n+    <div class='changed'>\n+\t  <h2><a href=\"#LocaleId_Canonicalization\" name=\"LocaleId_Canonicalization\">Annex C. LocaleId Canonicalization</a></h2>\n+\t  <p>&nbsp;</p>\n+\t\t  <p>The languageAlias, scriptAlias, territoryAlias, and variantAlias elements are used as rules to transform an input\u00a0<em>source\u00a0localeId</em>. The first step is to transform the\u00a0<em>languageId</em>\u00a0portion of the localeId. <br>\n+      </p>\n+\t\t  <blockquote>Note: in the following discussion, the separator '-' is used. That is also used in examples of XML alias data, even though for compatibility reasons that alias data actually uses '_' as a separator. The processing can also be applied to syntax while maintaining the separator '_', <em>mutatis mutandis</em>. CLDR also uses &ldquo;territory&rdquo; and &ldquo;region&rdquo; interchangeably.</blockquote>\n+\t  <h3 >Definitions</h3>\n+\t  <h4 >1. Multimap interpretation</h4>\n+\t\t  <p>Interpret each languageId as a multimap from a <em>fieldId</em> (language, script, region, variants) to a\u00a0<strong>set</strong>\u00a0of field values.</p>\n+\t  <p><em>Examples:</em></p>\n+\t\t  <a ></a><a ></a>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"2\"><p> </p>\n+\t\t          <p><strong>Source</strong></p></td>\n+\t\t        <td colspan=\"4\" rowspan=\"1\"><p><strong>Fields</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Language</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Script</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Region</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Variants</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>en-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{en}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>und-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>ja-Latn-YU-hepburn-heploc</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{Latn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{YU}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc}</p></td>\n+\t          </tr>\n+\t        </tbody>\n+      </table>\n+\t\t  <p> </p>\n+\t\t  <ul>\n+\t\t    <li>This can be represented as an abbreviated format: {L={ja}, S={Latn}, R={YU}, V={hepburn, heploc}}, skipping empty sets.</li>\n+\t\t    <li>&ldquo;und&rdquo; is a special language code that is treated as an empty set.</li>\n+\t\t    <li>Of course, only the Variants can contain more than one item: the others are either empty or contain exactly 1 item.</li>\n+      </ul>\n+\t  <h4 >2. Alias elements</h4>\n+\t\t  <p>For the languageAlias elements, the\u00a0<em>type</em>\u00a0and\u00a0<em>replacements</em>\u00a0are languageIds.</p>\n+\t\t  <p>For the script-, territory- (aka region), and variant- Alias elements, the\u00a0type\u00a0and\u00a0replacements\u00a0are interpreted as a languageIds,\u00a0<em>after</em>\u00a0prefixing with &ldquo;und-&rdquo;. Thus</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"AN\"\u00a0replacement=\"CW SX BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>is interpreted as:</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"und-AN\"\u00a0replacement=\"und-CW und-SX und-BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>Note that for the case of\u00a0territoryAlias, there may be multiple replacement values separated by spaces in the text (such as\u00a0replacement=\"und-CW und-SX und-BQ\"); other rules only ever have a single replacement value.</p>\n+\t\t  <p> </p>\n+\t  <h4 >3. Matches</h4>\n+\t\t  <p>A rule\u00a0matches\u00a0a source if and only for all fields, each\u00a0<em>source</em>\u00a0field \u2287\u00a0<em>type</em>\u00a0field.</p>\n+\t\t  <blockquote>\n+\t\t  <p><em>Examples:</em></p>\n+\t\t  <p>source=&ldquo;ja-heploc-hepburn&rdquo; and type=&rdquo;und-hepburn&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc} \u2287 {hepburn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>success</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule matches the source. (Note that order of variants is immaterial to matching)</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p> </p>\n+\t\t  <p>source=&ldquo;ja-hepburn&rdquo; and type=&rdquo;und-hepburn-heploc&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn} \u2289 {hepburn, heploc}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>failure</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule\u00a0does not\u00a0match the source.</p></blockquote>\n+\t  <h4 >4. Replacement</h4>\n+\t  <p>A matching rule can be used to\u00a0transform\u00a0the source fields\u00a0as follows</p>\n+\t\t  <ul>\n+\t\t    <li>if type.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = (source.field - type.field) \u222a replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      \n+\t\t    <li>else if source.field = {} and replacement.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      </ul>\n+\t\t  <p><em>Example:</em></p>\n+\t\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24bf00ddadb1f6fd9920f01617fa8060eb2c1172"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MzczMg==", "bodyText": "fixing 2 instances", "url": "https://github.com/unicode-org/cldr/pull/730#discussion_r493863732", "createdAt": "2020-09-23T20:06:47Z", "author": {"login": "macchiati"}, "path": "docs/ldml/tr35.html", "diffHunk": "@@ -8564,6 +8564,268 @@ <h2><a name=\"Links_to_Other_Parts\" href=\"#Links_to_Other_Parts\"\n       </tr>\n     </table>\n     <hr>\n+    <div class='changed'>\n+\t  <h2><a href=\"#LocaleId_Canonicalization\" name=\"LocaleId_Canonicalization\">Annex C. LocaleId Canonicalization</a></h2>\n+\t  <p>&nbsp;</p>\n+\t\t  <p>The languageAlias, scriptAlias, territoryAlias, and variantAlias elements are used as rules to transform an input\u00a0<em>source\u00a0localeId</em>. The first step is to transform the\u00a0<em>languageId</em>\u00a0portion of the localeId. <br>\n+      </p>\n+\t\t  <blockquote>Note: in the following discussion, the separator '-' is used. That is also used in examples of XML alias data, even though for compatibility reasons that alias data actually uses '_' as a separator. The processing can also be applied to syntax while maintaining the separator '_', <em>mutatis mutandis</em>. CLDR also uses &ldquo;territory&rdquo; and &ldquo;region&rdquo; interchangeably.</blockquote>\n+\t  <h3 >Definitions</h3>\n+\t  <h4 >1. Multimap interpretation</h4>\n+\t\t  <p>Interpret each languageId as a multimap from a <em>fieldId</em> (language, script, region, variants) to a\u00a0<strong>set</strong>\u00a0of field values.</p>\n+\t  <p><em>Examples:</em></p>\n+\t\t  <a ></a><a ></a>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"2\"><p> </p>\n+\t\t          <p><strong>Source</strong></p></td>\n+\t\t        <td colspan=\"4\" rowspan=\"1\"><p><strong>Fields</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Language</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Script</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Region</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Variants</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>en-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{en}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>und-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>ja-Latn-YU-hepburn-heploc</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{Latn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{YU}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc}</p></td>\n+\t          </tr>\n+\t        </tbody>\n+      </table>\n+\t\t  <p> </p>\n+\t\t  <ul>\n+\t\t    <li>This can be represented as an abbreviated format: {L={ja}, S={Latn}, R={YU}, V={hepburn, heploc}}, skipping empty sets.</li>\n+\t\t    <li>&ldquo;und&rdquo; is a special language code that is treated as an empty set.</li>\n+\t\t    <li>Of course, only the Variants can contain more than one item: the others are either empty or contain exactly 1 item.</li>\n+      </ul>\n+\t  <h4 >2. Alias elements</h4>\n+\t\t  <p>For the languageAlias elements, the\u00a0<em>type</em>\u00a0and\u00a0<em>replacements</em>\u00a0are languageIds.</p>\n+\t\t  <p>For the script-, territory- (aka region), and variant- Alias elements, the\u00a0type\u00a0and\u00a0replacements\u00a0are interpreted as a languageIds,\u00a0<em>after</em>\u00a0prefixing with &ldquo;und-&rdquo;. Thus</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"AN\"\u00a0replacement=\"CW SX BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>is interpreted as:</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"und-AN\"\u00a0replacement=\"und-CW und-SX und-BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>Note that for the case of\u00a0territoryAlias, there may be multiple replacement values separated by spaces in the text (such as\u00a0replacement=\"und-CW und-SX und-BQ\"); other rules only ever have a single replacement value.</p>\n+\t\t  <p> </p>\n+\t  <h4 >3. Matches</h4>\n+\t\t  <p>A rule\u00a0matches\u00a0a source if and only for all fields, each\u00a0<em>source</em>\u00a0field \u2287\u00a0<em>type</em>\u00a0field.</p>\n+\t\t  <blockquote>\n+\t\t  <p><em>Examples:</em></p>\n+\t\t  <p>source=&ldquo;ja-heploc-hepburn&rdquo; and type=&rdquo;und-hepburn&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc} \u2287 {hepburn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>success</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule matches the source. (Note that order of variants is immaterial to matching)</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p> </p>\n+\t\t  <p>source=&ldquo;ja-hepburn&rdquo; and type=&rdquo;und-hepburn-heploc&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn} \u2289 {hepburn, heploc}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>failure</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule\u00a0does not\u00a0match the source.</p></blockquote>\n+\t  <h4 >4. Replacement</h4>\n+\t  <p>A matching rule can be used to\u00a0transform\u00a0the source fields\u00a0as follows</p>\n+\t\t  <ul>\n+\t\t    <li>if type.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = (source.field - type.field) \u222a replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      \n+\t\t    <li>else if source.field = {} and replacement.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      </ul>\n+\t\t  <p><em>Example:</em></p>\n+\t\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MTIwMw=="}, "originalCommit": {"oid": "24bf00ddadb1f6fd9920f01617fa8060eb2c1172"}, "originalPosition": 155}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjY0NjA4OnYy", "diffSide": "RIGHT", "path": "docs/ldml/tr35.html", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozMzo1NlrOHWWAfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozMzo1NlrOHWWAfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MTI5Mw==", "bodyText": "Should probably fix the space after ja-Latn-", "url": "https://github.com/unicode-org/cldr/pull/730#discussion_r493191293", "createdAt": "2020-09-23T04:33:56Z", "author": {"login": "pedberg-icu"}, "path": "docs/ldml/tr35.html", "diffHunk": "@@ -8564,6 +8564,268 @@ <h2><a name=\"Links_to_Other_Parts\" href=\"#Links_to_Other_Parts\"\n       </tr>\n     </table>\n     <hr>\n+    <div class='changed'>\n+\t  <h2><a href=\"#LocaleId_Canonicalization\" name=\"LocaleId_Canonicalization\">Annex C. LocaleId Canonicalization</a></h2>\n+\t  <p>&nbsp;</p>\n+\t\t  <p>The languageAlias, scriptAlias, territoryAlias, and variantAlias elements are used as rules to transform an input\u00a0<em>source\u00a0localeId</em>. The first step is to transform the\u00a0<em>languageId</em>\u00a0portion of the localeId. <br>\n+      </p>\n+\t\t  <blockquote>Note: in the following discussion, the separator '-' is used. That is also used in examples of XML alias data, even though for compatibility reasons that alias data actually uses '_' as a separator. The processing can also be applied to syntax while maintaining the separator '_', <em>mutatis mutandis</em>. CLDR also uses &ldquo;territory&rdquo; and &ldquo;region&rdquo; interchangeably.</blockquote>\n+\t  <h3 >Definitions</h3>\n+\t  <h4 >1. Multimap interpretation</h4>\n+\t\t  <p>Interpret each languageId as a multimap from a <em>fieldId</em> (language, script, region, variants) to a\u00a0<strong>set</strong>\u00a0of field values.</p>\n+\t  <p><em>Examples:</em></p>\n+\t\t  <a ></a><a ></a>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"2\"><p> </p>\n+\t\t          <p><strong>Source</strong></p></td>\n+\t\t        <td colspan=\"4\" rowspan=\"1\"><p><strong>Fields</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Language</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Script</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Region</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Variants</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>en-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{en}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>und-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>ja-Latn-YU-hepburn-heploc</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{Latn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{YU}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc}</p></td>\n+\t          </tr>\n+\t        </tbody>\n+      </table>\n+\t\t  <p> </p>\n+\t\t  <ul>\n+\t\t    <li>This can be represented as an abbreviated format: {L={ja}, S={Latn}, R={YU}, V={hepburn, heploc}}, skipping empty sets.</li>\n+\t\t    <li>&ldquo;und&rdquo; is a special language code that is treated as an empty set.</li>\n+\t\t    <li>Of course, only the Variants can contain more than one item: the others are either empty or contain exactly 1 item.</li>\n+      </ul>\n+\t  <h4 >2. Alias elements</h4>\n+\t\t  <p>For the languageAlias elements, the\u00a0<em>type</em>\u00a0and\u00a0<em>replacements</em>\u00a0are languageIds.</p>\n+\t\t  <p>For the script-, territory- (aka region), and variant- Alias elements, the\u00a0type\u00a0and\u00a0replacements\u00a0are interpreted as a languageIds,\u00a0<em>after</em>\u00a0prefixing with &ldquo;und-&rdquo;. Thus</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"AN\"\u00a0replacement=\"CW SX BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>is interpreted as:</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"und-AN\"\u00a0replacement=\"und-CW und-SX und-BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>Note that for the case of\u00a0territoryAlias, there may be multiple replacement values separated by spaces in the text (such as\u00a0replacement=\"und-CW und-SX und-BQ\"); other rules only ever have a single replacement value.</p>\n+\t\t  <p> </p>\n+\t  <h4 >3. Matches</h4>\n+\t\t  <p>A rule\u00a0matches\u00a0a source if and only for all fields, each\u00a0<em>source</em>\u00a0field \u2287\u00a0<em>type</em>\u00a0field.</p>\n+\t\t  <blockquote>\n+\t\t  <p><em>Examples:</em></p>\n+\t\t  <p>source=&ldquo;ja-heploc-hepburn&rdquo; and type=&rdquo;und-hepburn&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc} \u2287 {hepburn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>success</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule matches the source. (Note that order of variants is immaterial to matching)</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p> </p>\n+\t\t  <p>source=&ldquo;ja-hepburn&rdquo; and type=&rdquo;und-hepburn-heploc&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn} \u2289 {hepburn, heploc}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>failure</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule\u00a0does not\u00a0match the source.</p></blockquote>\n+\t  <h4 >4. Replacement</h4>\n+\t  <p>A matching rule can be used to\u00a0transform\u00a0the source fields\u00a0as follows</p>\n+\t\t  <ul>\n+\t\t    <li>if type.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = (source.field - type.field) \u222a replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      \n+\t\t    <li>else if source.field = {} and replacement.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      </ul>\n+\t\t  <p><em>Example:</em></p>\n+\t\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>\n+\t\t  <p>rule =&rdquo;&lt;languageAlias type=\"und-hepburn-heploc\"</p>\n+\t\t  <p>replacement=\"und-alalc97\"&gt;&rdquo;</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p>result=&rdquo;ja-Latn-alalc97-fonipa&rdquo; // note that CLDR canonical order of variants is alphabetical</p></blockquote>\n+\t  <h5 >Territory Exception</h5>\n+\t\t  <p>If the field = territory, and the replacement.field has more than one value, then look up the most likely territory* for the base language code (and script, if there is one). If that likely territory is in the list of replacements, use it. Otherwise, use the first territory in the list.</p>\n+\t\t  <p><em>Example:</em></p>\n+\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24bf00ddadb1f6fd9920f01617fa8060eb2c1172"}, "originalPosition": 163}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NjY0OTUwOnYy", "diffSide": "RIGHT", "path": "docs/ldml/tr35.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNDozNTo0NlrOHWWCYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDowODoxNVrOHW_GXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MTc3Nw==", "bodyText": "Shouldn't the prepend be \"und-\" ?", "url": "https://github.com/unicode-org/cldr/pull/730#discussion_r493191777", "createdAt": "2020-09-23T04:35:46Z", "author": {"login": "pedberg-icu"}, "path": "docs/ldml/tr35.html", "diffHunk": "@@ -8564,6 +8564,268 @@ <h2><a name=\"Links_to_Other_Parts\" href=\"#Links_to_Other_Parts\"\n       </tr>\n     </table>\n     <hr>\n+    <div class='changed'>\n+\t  <h2><a href=\"#LocaleId_Canonicalization\" name=\"LocaleId_Canonicalization\">Annex C. LocaleId Canonicalization</a></h2>\n+\t  <p>&nbsp;</p>\n+\t\t  <p>The languageAlias, scriptAlias, territoryAlias, and variantAlias elements are used as rules to transform an input\u00a0<em>source\u00a0localeId</em>. The first step is to transform the\u00a0<em>languageId</em>\u00a0portion of the localeId. <br>\n+      </p>\n+\t\t  <blockquote>Note: in the following discussion, the separator '-' is used. That is also used in examples of XML alias data, even though for compatibility reasons that alias data actually uses '_' as a separator. The processing can also be applied to syntax while maintaining the separator '_', <em>mutatis mutandis</em>. CLDR also uses &ldquo;territory&rdquo; and &ldquo;region&rdquo; interchangeably.</blockquote>\n+\t  <h3 >Definitions</h3>\n+\t  <h4 >1. Multimap interpretation</h4>\n+\t\t  <p>Interpret each languageId as a multimap from a <em>fieldId</em> (language, script, region, variants) to a\u00a0<strong>set</strong>\u00a0of field values.</p>\n+\t  <p><em>Examples:</em></p>\n+\t\t  <a ></a><a ></a>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"2\"><p> </p>\n+\t\t          <p><strong>Source</strong></p></td>\n+\t\t        <td colspan=\"4\" rowspan=\"1\"><p><strong>Fields</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Language</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Script</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Region</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Variants</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>en-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{en}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>und-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>ja-Latn-YU-hepburn-heploc</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{Latn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{YU}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc}</p></td>\n+\t          </tr>\n+\t        </tbody>\n+      </table>\n+\t\t  <p> </p>\n+\t\t  <ul>\n+\t\t    <li>This can be represented as an abbreviated format: {L={ja}, S={Latn}, R={YU}, V={hepburn, heploc}}, skipping empty sets.</li>\n+\t\t    <li>&ldquo;und&rdquo; is a special language code that is treated as an empty set.</li>\n+\t\t    <li>Of course, only the Variants can contain more than one item: the others are either empty or contain exactly 1 item.</li>\n+      </ul>\n+\t  <h4 >2. Alias elements</h4>\n+\t\t  <p>For the languageAlias elements, the\u00a0<em>type</em>\u00a0and\u00a0<em>replacements</em>\u00a0are languageIds.</p>\n+\t\t  <p>For the script-, territory- (aka region), and variant- Alias elements, the\u00a0type\u00a0and\u00a0replacements\u00a0are interpreted as a languageIds,\u00a0<em>after</em>\u00a0prefixing with &ldquo;und-&rdquo;. Thus</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"AN\"\u00a0replacement=\"CW SX BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>is interpreted as:</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"und-AN\"\u00a0replacement=\"und-CW und-SX und-BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>Note that for the case of\u00a0territoryAlias, there may be multiple replacement values separated by spaces in the text (such as\u00a0replacement=\"und-CW und-SX und-BQ\"); other rules only ever have a single replacement value.</p>\n+\t\t  <p> </p>\n+\t  <h4 >3. Matches</h4>\n+\t\t  <p>A rule\u00a0matches\u00a0a source if and only for all fields, each\u00a0<em>source</em>\u00a0field \u2287\u00a0<em>type</em>\u00a0field.</p>\n+\t\t  <blockquote>\n+\t\t  <p><em>Examples:</em></p>\n+\t\t  <p>source=&ldquo;ja-heploc-hepburn&rdquo; and type=&rdquo;und-hepburn&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc} \u2287 {hepburn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>success</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule matches the source. (Note that order of variants is immaterial to matching)</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p> </p>\n+\t\t  <p>source=&ldquo;ja-hepburn&rdquo; and type=&rdquo;und-hepburn-heploc&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn} \u2289 {hepburn, heploc}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>failure</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule\u00a0does not\u00a0match the source.</p></blockquote>\n+\t  <h4 >4. Replacement</h4>\n+\t  <p>A matching rule can be used to\u00a0transform\u00a0the source fields\u00a0as follows</p>\n+\t\t  <ul>\n+\t\t    <li>if type.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = (source.field - type.field) \u222a replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      \n+\t\t    <li>else if source.field = {} and replacement.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      </ul>\n+\t\t  <p><em>Example:</em></p>\n+\t\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>\n+\t\t  <p>rule =&rdquo;&lt;languageAlias type=\"und-hepburn-heploc\"</p>\n+\t\t  <p>replacement=\"und-alalc97\"&gt;&rdquo;</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p>result=&rdquo;ja-Latn-alalc97-fonipa&rdquo; // note that CLDR canonical order of variants is alphabetical</p></blockquote>\n+\t  <h5 >Territory Exception</h5>\n+\t\t  <p>If the field = territory, and the replacement.field has more than one value, then look up the most likely territory* for the base language code (and script, if there is one). If that likely territory is in the list of replacements, use it. Otherwise, use the first territory in the list.</p>\n+\t\t  <p><em>Example:</em></p>\n+\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>\n+\t    <p>rule =&rdquo;&lt;languageAlias type=\"und-hepburn-heploc\"</p>\n+\t\t  <p>replacement=\"und-alalc97\"&gt;&rdquo;</p>\n+\t    <p>&nbsp;</p>\n+\t    <p>result=&rdquo;ja-Latn-alalc97-fonipa&rdquo; <em>// note that CLDR canonical order of variants is alphabetical</em></p>\n+\t\t  </blockquote>\n+\t  <h4>5. Canonicalizing Syntax</h4>\n+\t\t<p>To canonicalize the syntax of <em>source</em>: </p>\n+\t\t<ul>\n+\t\t  <li>Initial Script Subtag\n+\t\t    <ul>\n+\t\t      <li>If the first subtag has 4 letters, prepend the source with &quot;-und&quot;</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24bf00ddadb1f6fd9920f01617fa8060eb2c1172"}, "originalPosition": 174}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NDU0MA==", "bodyText": "got it.", "url": "https://github.com/unicode-org/cldr/pull/730#discussion_r493864540", "createdAt": "2020-09-23T20:08:15Z", "author": {"login": "macchiati"}, "path": "docs/ldml/tr35.html", "diffHunk": "@@ -8564,6 +8564,268 @@ <h2><a name=\"Links_to_Other_Parts\" href=\"#Links_to_Other_Parts\"\n       </tr>\n     </table>\n     <hr>\n+    <div class='changed'>\n+\t  <h2><a href=\"#LocaleId_Canonicalization\" name=\"LocaleId_Canonicalization\">Annex C. LocaleId Canonicalization</a></h2>\n+\t  <p>&nbsp;</p>\n+\t\t  <p>The languageAlias, scriptAlias, territoryAlias, and variantAlias elements are used as rules to transform an input\u00a0<em>source\u00a0localeId</em>. The first step is to transform the\u00a0<em>languageId</em>\u00a0portion of the localeId. <br>\n+      </p>\n+\t\t  <blockquote>Note: in the following discussion, the separator '-' is used. That is also used in examples of XML alias data, even though for compatibility reasons that alias data actually uses '_' as a separator. The processing can also be applied to syntax while maintaining the separator '_', <em>mutatis mutandis</em>. CLDR also uses &ldquo;territory&rdquo; and &ldquo;region&rdquo; interchangeably.</blockquote>\n+\t  <h3 >Definitions</h3>\n+\t  <h4 >1. Multimap interpretation</h4>\n+\t\t  <p>Interpret each languageId as a multimap from a <em>fieldId</em> (language, script, region, variants) to a\u00a0<strong>set</strong>\u00a0of field values.</p>\n+\t  <p><em>Examples:</em></p>\n+\t\t  <a ></a><a ></a>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"2\"><p> </p>\n+\t\t          <p><strong>Source</strong></p></td>\n+\t\t        <td colspan=\"4\" rowspan=\"1\"><p><strong>Fields</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Language</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Script</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Region</strong></p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>Variants</strong></p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>en-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{en}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>und-GB</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{GB}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>ja-Latn-YU-hepburn-heploc</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{Latn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{YU}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc}</p></td>\n+\t          </tr>\n+\t        </tbody>\n+      </table>\n+\t\t  <p> </p>\n+\t\t  <ul>\n+\t\t    <li>This can be represented as an abbreviated format: {L={ja}, S={Latn}, R={YU}, V={hepburn, heploc}}, skipping empty sets.</li>\n+\t\t    <li>&ldquo;und&rdquo; is a special language code that is treated as an empty set.</li>\n+\t\t    <li>Of course, only the Variants can contain more than one item: the others are either empty or contain exactly 1 item.</li>\n+      </ul>\n+\t  <h4 >2. Alias elements</h4>\n+\t\t  <p>For the languageAlias elements, the\u00a0<em>type</em>\u00a0and\u00a0<em>replacements</em>\u00a0are languageIds.</p>\n+\t\t  <p>For the script-, territory- (aka region), and variant- Alias elements, the\u00a0type\u00a0and\u00a0replacements\u00a0are interpreted as a languageIds,\u00a0<em>after</em>\u00a0prefixing with &ldquo;und-&rdquo;. Thus</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"AN\"\u00a0replacement=\"CW SX BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>is interpreted as:</p>\n+\t\t  <code>&lt;territoryAlias\u00a0type=\"und-AN\"\u00a0replacement=\"und-CW und-SX und-BQ\"\u00a0reason=\"deprecated\"/&gt;</code>\n+\t\t  <p>Note that for the case of\u00a0territoryAlias, there may be multiple replacement values separated by spaces in the text (such as\u00a0replacement=\"und-CW und-SX und-BQ\"); other rules only ever have a single replacement value.</p>\n+\t\t  <p> </p>\n+\t  <h4 >3. Matches</h4>\n+\t\t  <p>A rule\u00a0matches\u00a0a source if and only for all fields, each\u00a0<em>source</em>\u00a0field \u2287\u00a0<em>type</em>\u00a0field.</p>\n+\t\t  <blockquote>\n+\t\t  <p><em>Examples:</em></p>\n+\t\t  <p>source=&ldquo;ja-heploc-hepburn&rdquo; and type=&rdquo;und-hepburn&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn, heploc} \u2287 {hepburn}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>success</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule matches the source. (Note that order of variants is immaterial to matching)</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p> </p>\n+\t\t  <p>source=&ldquo;ja-hepburn&rdquo; and type=&rdquo;und-hepburn-heploc&rdquo;</p>\n+\t\t  <table class='simple'>\n+\t\t    <tbody>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{ja} \u2287 {}\u00a0</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>success, und = {}</p></td>\n+\t          </tr>\n+\t\t      <tr>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p>{hepburn} \u2289 {hepburn, heploc}</p></td>\n+\t\t        <td colspan=\"1\" rowspan=\"1\"><p><strong>failure</strong></p></td>\n+\t          </tr>\n+\t        </tbody>\n+\t\t    </table>\n+\t\t  <p>so the rule\u00a0does not\u00a0match the source.</p></blockquote>\n+\t  <h4 >4. Replacement</h4>\n+\t  <p>A matching rule can be used to\u00a0transform\u00a0the source fields\u00a0as follows</p>\n+\t\t  <ul>\n+\t\t    <li>if type.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = (source.field - type.field) \u222a replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      \n+\t\t    <li>else if source.field = {} and replacement.field \u2260 {}\n+\t\t      <ul>\n+\t\t        <li>source.field = replacement.field</li>\n+\t          </ul>\n+\t\t    </li>\n+      </ul>\n+\t\t  <p><em>Example:</em></p>\n+\t\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>\n+\t\t  <p>rule =&rdquo;&lt;languageAlias type=\"und-hepburn-heploc\"</p>\n+\t\t  <p>replacement=\"und-alalc97\"&gt;&rdquo;</p>\n+\t\t  <p>&nbsp;</p>\n+\t\t  <p>result=&rdquo;ja-Latn-alalc97-fonipa&rdquo; // note that CLDR canonical order of variants is alphabetical</p></blockquote>\n+\t  <h5 >Territory Exception</h5>\n+\t\t  <p>If the field = territory, and the replacement.field has more than one value, then look up the most likely territory* for the base language code (and script, if there is one). If that likely territory is in the list of replacements, use it. Otherwise, use the first territory in the list.</p>\n+\t\t  <p><em>Example:</em></p>\n+\t  <blockquote><p>source=ja-Latn- fonipa-hepburn-heploc</p>\n+\t    <p>rule =&rdquo;&lt;languageAlias type=\"und-hepburn-heploc\"</p>\n+\t\t  <p>replacement=\"und-alalc97\"&gt;&rdquo;</p>\n+\t    <p>&nbsp;</p>\n+\t    <p>result=&rdquo;ja-Latn-alalc97-fonipa&rdquo; <em>// note that CLDR canonical order of variants is alphabetical</em></p>\n+\t\t  </blockquote>\n+\t  <h4>5. Canonicalizing Syntax</h4>\n+\t\t<p>To canonicalize the syntax of <em>source</em>: </p>\n+\t\t<ul>\n+\t\t  <li>Initial Script Subtag\n+\t\t    <ul>\n+\t\t      <li>If the first subtag has 4 letters, prepend the source with &quot;-und&quot;</li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzE5MTc3Nw=="}, "originalCommit": {"oid": "24bf00ddadb1f6fd9920f01617fa8060eb2c1172"}, "originalPosition": 174}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 394, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}