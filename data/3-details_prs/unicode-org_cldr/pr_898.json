{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NzE2Mzc3", "number": 898, "title": "CLDR-14251 Modernize: continue implementing front end without dojo", "bodyText": "-Fix bug in PR #893: in cldrAjax.js, only use responseText if responseType is text\n-Section view is now mostly working without dojo\n-Add lots of placeholders for old dojo-dependent features\n-New cldrEvent.js has most of the code from old redesign.js\n-Move OtherSpecial to new cldrOtherSpecial.js\n-Remove dead code; clean up\n-Comments\n\nChecklist\n\n Issue filed: https://unicode-org.atlassian.net/browse/CLDR-14251\n Updated PR title and link in previous line to include Issue number", "createdAt": "2020-12-26T17:21:03Z", "url": "https://github.com/unicode-org/cldr/pull/898", "merged": true, "mergeCommit": {"oid": "ab7b30c5440b049818872cc64ff9f9af46531cd8"}, "closed": true, "closedAt": "2020-12-31T18:21:29Z", "author": {"login": "btangmu"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqAOP2gH2gAyNTQ1NzE2Mzc3OmMwOGU1YjViOGNlNTcxNjkyMmFiZmEwMjU5MjI4OTZmMjZmY2ZmNGQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrXL1HgFqTU2MDIyMDQ2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d", "author": {"user": {"login": "btangmu", "name": "Tom Bishop"}}, "url": "https://github.com/unicode-org/cldr/commit/c08e5b5b8ce5716922abfa025922896f26fcff4d", "committedDate": "2020-12-26T17:17:37Z", "message": "CLDR-14251 Modernize: continue implementing front end without dojo\n\n-Fix bug in PR 893: in cldrAjax.js, only use responseText if responseType is text\n\n-Section view is now mostly working without dojo\n\n-Add lots of placeholders for old dojo-dependent features\n\n-New cldrEvent.js has most of the code from old redesign.js\n\n-Move OtherSpecial to new cldrOtherSpecial.js\n\n-Remove dead code; clean up\n\n-Comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjE2MTE1", "url": "https://github.com/unicode-org/cldr/pull/898#pullrequestreview-560216115", "createdAt": "2020-12-30T22:14:04Z", "commit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjoxNDowNVrOIM2Miw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQyMjozMjo1MFrOIM2bZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0MTc3MQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550341771", "createdAt": "2020-12-30T22:14:05Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/AdminPanel.jsp", "diffHunk": "@@ -132,11 +132,14 @@ String sql = request.getContextPath()+\"/survey?sql=\"+vap+\"\";\n </div>\n <script>\n var vap='<%= vap %>';\n+<% if (SurveyTool.USE_DOJO) { %>\n require([\"dojo/ready\"], function(ready) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NDU0MA==", "bodyText": "nice. I'll look forward to seeing this.\nAny thought of splitting out specialItems[] to a separate file? I know it has code in it, but that could be abstracted as an input.", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550344540", "createdAt": "2020-12-30T22:27:39Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/js/new/cldrLoad.js", "diffHunk": "@@ -336,2471 +423,2246 @@ const cldrLoad = (function () {\n             cldrStatus.setCurrentPage(\"\");\n             cldrStatus.setCurrentId(\"\");\n           }\n-          cldrStatus.setCurrentSpecial(null);\n-        } else {\n-          cldrStatus.setCurrentSpecial(pieces[0]);\n-          if (cldrStatus.getCurrentSpecial() == \"\") {\n-            cldrStatus.setCurrentSpecial(\"locales\");\n-          }\n-          if (cldrStatus.getCurrentSpecial() == \"locales\") {\n-            // allow locales list to retain ID / Page string for passthrough.\n-            cldrStatus.setCurrentLocale(\"\");\n-            if (pieces.length > 2) {\n-              cldrStatus.setCurrentPage(pieces[2]);\n-              if (pieces.length > 3) {\n-                let id = pieces[3];\n-                if (id.substr(0, 2) == \"x@\") {\n-                  id = id.substr(2);\n-                }\n-                cldrStatus.setCurrentId(id);\n-              } else {\n-                cldrStatus.setCurrentId(\"\");\n-              }\n-            } else {\n-              cldrStatus.setCurrentPage(\"\");\n-              cldrStatus.setCurrentId(\"\");\n-            }\n-          } else if (cldrSurvey.isReport(cldrStatus.getCurrentSpecial())) {\n-            // allow page and ID to fall through.\n-            if (pieces.length > 2) {\n-              cldrStatus.setCurrentPage(pieces[2]);\n-              if (pieces.length > 3) {\n-                cldrStatus.setCurrentId(pieces[3]);\n-              } else {\n-                cldrStatus.setCurrentId(\"\");\n-              }\n+        } else if (cldrSurvey.isReport(cldrStatus.getCurrentSpecial())) {\n+          // allow page and ID to fall through.\n+          if (pieces.length > 2) {\n+            cldrStatus.setCurrentPage(pieces[2]);\n+            if (pieces.length > 3) {\n+              cldrStatus.setCurrentId(pieces[3]);\n             } else {\n-              cldrStatus.setCurrentPage(\"\");\n               cldrStatus.setCurrentId(\"\");\n             }\n           } else {\n-            otherSpecial.parseHash(\n-              cldrStatus.getCurrentSpecial(),\n-              hash,\n-              pieces\n-            );\n+            cldrStatus.setCurrentPage(\"\");\n+            cldrStatus.setCurrentId(\"\");\n           }\n+        } else {\n+          otherSpecial.parseHash(cldrStatus.getCurrentSpecial(), hash, pieces);\n         }\n-      } else {\n-        cldrStatus.setCurrentLocale(\"\");\n-        cldrStatus.setCurrentSpecial(\"locales\");\n-        cldrStatus.setCurrentId(\"\");\n-        cldrStatus.setCurrentPage(\"\");\n-        cldrStatus.setCurrentSection(\"\");\n       }\n-      updateWindowTitle();\n+    } else {\n+      cldrStatus.setCurrentLocale(\"\");\n+      cldrStatus.setCurrentSpecial(\"locales\");\n+      cldrStatus.setCurrentId(\"\");\n+      cldrStatus.setCurrentPage(\"\");\n+      cldrStatus.setCurrentSection(\"\");\n+    }\n+    updateWindowTitle();\n \n-      // if there is no locale id, refresh the search.\n-      if (!cldrStatus.getCurrentLocale()) {\n-        searchRefresh();\n-      }\n-    };\n+    // if there is no locale id, refresh the search.\n+    if (!cldrStatus.getCurrentLocale()) {\n+      cldrEvent.searchRefresh();\n+    }\n+  }\n \n-    /**\n-     * Update hash (and title)\n-     *\n-     * @param doPush {Boolean} if true, do a push (instead of replace)\n-     *\n-     * Called by cldrForum.parseContent, as well as locally.\n-     *\n-     * TODO: avoid attaching this, or anything, to \"window\"! Define our own objects instead.\n-     */\n-    window.replaceHash = function replaceHash(doPush) {\n-      if (!doPush) {\n-        doPush = false; // by default -replace.\n-      }\n-      var theId = cldrStatus.getCurrentId();\n-      if (theId == null) {\n-        theId = \"\";\n-      }\n-      var theSpecial = cldrStatus.getCurrentSpecial();\n-      if (theSpecial == null) {\n-        theSpecial = \"\";\n-      }\n-      var thePage = cldrStatus.getCurrentPage();\n-      if (thePage == null) {\n-        thePage = \"\";\n-      }\n-      var theLocale = cldrStatus.getCurrentLocale();\n-      if (theLocale == null) {\n-        theLocale = \"\";\n-      }\n-      var newHash =\n-        \"#\" + theSpecial + \"/\" + theLocale + \"/\" + thePage + \"/\" + theId;\n-      if (newHash != dojoHash()) {\n-        dojoHash(newHash, !doPush);\n-      }\n-    };\n+  function updateWindowTitle() {\n+    var t = cldrText.get(\"survey_title\");\n+    const curLocale = cldrStatus.getCurrentLocale();\n+    if (curLocale && curLocale != \"\") {\n+      t = t + \": \" + locmap.getLocaleName(curLocale);\n+    }\n+    const curSpecial = cldrStatus.getCurrentSpecial();\n+    if (curSpecial && curSpecial != \"\") {\n+      t = t + \": \" + cldrText.get(\"special_\" + curSpecial);\n+    }\n+    const curPage = cldrStatus.getCurrentPage();\n+    if (curPage && curPage != \"\") {\n+      t = t + \": \" + curPage;\n+    }\n+    document.title = t;\n+  }\n \n-    window.updateCurrentId = function updateCurrentId(id) {\n-      if (id == null) {\n-        id = \"\";\n-      }\n-      if (cldrStatus.getCurrentId() != id) {\n-        // don't set if already set.\n-        cldrStatus.setCurrentId(id);\n-        replaceHash(false); // usually don't want to save\n-      }\n-    };\n+  // Compare the similar function updateCurrentId in cldrSurvey.js -- difference: replaceHash\n+  function updateCurrentId(id) {\n+    if (id == null) {\n+      id = \"\";\n+    }\n+    if (cldrStatus.getCurrentId() != id) {\n+      // don't set if already set.\n+      cldrStatus.setCurrentId(id);\n+      replaceHash(false); // usually don't want to save\n+    }\n+  }\n \n-    // (back to showV) some setup.\n-    // click on the title to copy (permalink)\n-    cldrSurvey.clickToSelect(document.getElementById(\"ariScroller\"));\n-    cldrSurvey.updateIf(\n-      \"title-dcontent-link\",\n-      cldrText.get(\"defaultContent_titleLink\")\n-    );\n+  /**\n+   * Update hash (and title)\n+   *\n+   * @param doPush {Boolean} if true, do a push (instead of replace)\n+   *\n+   * Called by cldrForum.parseContent (doPush false), as well as locally.\n+   */\n+  function replaceHash(doPush) {\n+    if (!doPush) {\n+      doPush = false; // by default -replace.\n+    }\n+    var theId = cldrStatus.getCurrentId();\n+    if (theId == null) {\n+      theId = \"\";\n+    }\n+    var theSpecial = cldrStatus.getCurrentSpecial();\n+    if (theSpecial == null) {\n+      theSpecial = \"\";\n+    }\n+    var thePage = cldrStatus.getCurrentPage();\n+    if (thePage == null) {\n+      thePage = \"\";\n+    }\n+    var theLocale = cldrStatus.getCurrentLocale();\n+    if (theLocale == null) {\n+      theLocale = \"\";\n+    }\n+    var newHash = theSpecial + \"/\" + theLocale + \"/\" + thePage + \"/\" + theId;\n+    if (newHash != getHash()) {\n+      setHash(newHash, !doPush);\n+    }\n+  }\n \n-    // TODO - rewrite using AMD\n-    /**\n-     * @param postData optional - makes this a POST\n-     */\n-    window.myLoad = function myLoad(url, message, handler, postData, headers) {\n-      var otime = new Date().getTime();\n-      console.log(\"MyLoad: \" + url + \" for \" + message);\n-      var errorHandler = function (err) {\n-        console.log(\"Error: \" + err);\n-        handleDisconnect(\n-          \"Could not fetch \" +\n-            message +\n-            \" - error \" +\n-            err +\n-            \"\\n url: \" +\n-            url +\n-            \"\\n\",\n-          null,\n-          \"disconnect\"\n-        );\n+  /**\n+   * Verify that the JSON returned is as expected.\n+   *\n+   * @param json the returned json\n+   * @param subkey the key to look for,  json.subkey\n+   * @return true if OK, false if bad\n+   */\n+  function verifyJson(json, subkey) {\n+    if (!json) {\n+      console.log(\"!json\");\n+      cldrSurvey.showLoader(\n+        \"Error while  loading \" +\n+          subkey +\n+          \":  <br><div style='border: 1px solid red;'>\" +\n+          \"no data!\" +\n+          \"</div>\"\n+      );\n+      return false;\n+    } else if (json.err_code) {\n+      var msg_fmt = formatErrMsg(json, subkey);\n+      var loadingChunk;\n+      flipper.flipTo(\n+        pages.loading,\n+        (loadingChunk = cldrSurvey.createChunk(msg_fmt, \"p\", \"errCodeMsg\"))\n+      );\n+      var retryButton = cldrSurvey.createChunk(\n+        cldrText.get(\"loading_reload\"),\n+        \"button\"\n+      );\n+      loadingChunk.appendChild(retryButton);\n+      retryButton.onclick = function () {\n+        window.location.reload(true);\n       };\n-      var loadHandler = function (json) {\n-        console.log(\n-          \"        \" +\n-            url +\n-            \" loaded in \" +\n-            (new Date().getTime() - otime) +\n-            \"ms\"\n-        );\n-        try {\n-          handler(json);\n-          //resize height\n-          $(\"#main-row\").css({\n-            height: $(\"#main-row>div\").height(),\n-          });\n-        } catch (e) {\n-          console.log(\n-            \"Error in ajax post [\" +\n-              message +\n-              \"]  \" +\n-              e.message +\n-              \" / \" +\n-              e.name\n+      return false;\n+    } else if (json.err) {\n+      console.log(\"json.err!\" + json.err);\n+      cldrSurvey.showLoader(\n+        \"Error while  loading \" +\n+          subkey +\n+          \": <br><div style='border: 1px solid red;'>\" +\n+          json.err +\n+          \"</div>\"\n+      );\n+      cldrSurvey.handleDisconnect(\"while loading \" + subkey + \"\", json);\n+      return false;\n+    } else if (!json[subkey]) {\n+      console.log(\"!json.oldvotes\");\n+      cldrSurvey.showLoader(\n+        \"Error while  loading \" +\n+          subkey +\n+          \": <br><div style='border: 1px solid red;'>\" +\n+          \"no data\" +\n+          \"</div>\"\n+      );\n+      cldrSurvey.handleDisconnect(\"while loading- no \" + subkey + \"\", json);\n+      return false;\n+    } else {\n+      return true;\n+    }\n+  }\n+\n+  function showCurrentId() {\n+    const curSpecial = cldrStatus.getCurrentSpecial();\n+    if (curSpecial && curSpecial != \"\" && !cldrStatus.isDashboard()) {\n+      otherSpecial.handleIdChanged(curSpecial, showCurrentId);\n+    } else {\n+      const curId = cldrStatus.getCurrentId();\n+      if (curId != \"\") {\n+        var xtr = document.getElementById(\"r@\" + curId);\n+        if (!xtr) {\n+          console.log(\"Warning could not load id \" + curId + \" does not exist\");\n+          updateCurrentId(null);\n+        } else if (xtr.proposedcell && xtr.proposedcell.showFn) {\n+          // TODO: visible? coverage?\n+          cldrSurvey.showInPop(\n+            \"\",\n+            xtr,\n+            xtr.proposedcell,\n+            xtr.proposedcell.showFn,\n+            true\n           );\n-          handleDisconnect(\n-            \"Exception while loading: \" +\n-              message +\n-              \" - \" +\n-              e.message +\n-              \", n=\" +\n-              e.name +\n-              \" \\nStack:\\n\" +\n-              (e.stack || \"[none]\"),\n-            null\n-          ); // in case the 2nd line doesn't work\n-        }\n-      };\n-      var xhrArgs = {\n-        url: url,\n-        handleAs: \"json\",\n-        load: loadHandler,\n-        error: errorHandler,\n-        postData: postData,\n-        headers: headers,\n-      };\n-      cldrAjax.queueXhr(xhrArgs);\n-    };\n-\n-    /**\n-     * Verify that the JSON returned is as expected.\n-     *\n-     * @param json the returned json\n-     * @param subkey the key to look for,  json.subkey\n-     * @return true if OK, false if bad\n-     */\n-    function verifyJson(json, subkey) {\n-      if (!json) {\n-        console.log(\"!json\");\n-        showLoader(\n-          null,\n-          \"Error while  loading \" +\n-            subkey +\n-            \":  <br><div style='border: 1px solid red;'>\" +\n-            \"no data!\" +\n-            \"</div>\"\n-        );\n-        return false;\n-      } else if (json.err_code) {\n-        var msg_fmt = formatErrMsg(json, subkey);\n-        var loadingChunk;\n-        flipper.flipTo(\n-          pages.loading,\n-          (loadingChunk = cldrSurvey.createChunk(msg_fmt, \"p\", \"errCodeMsg\"))\n-        );\n-        var retryButton = cldrSurvey.createChunk(\n-          cldrText.get(\"loading_reload\"),\n-          \"button\"\n-        );\n-        loadingChunk.appendChild(retryButton);\n-        retryButton.onclick = function () {\n-          window.location.reload(true);\n-        };\n-        return false;\n-      } else if (json.err) {\n-        console.log(\"json.err!\" + json.err);\n-        showLoader(\n-          null,\n-          \"Error while  loading \" +\n-            subkey +\n-            \": <br><div style='border: 1px solid red;'>\" +\n-            json.err +\n-            \"</div>\"\n-        );\n-        handleDisconnect(\"while loading \" + subkey + \"\", json);\n-        return false;\n-      } else if (!json[subkey]) {\n-        console.log(\"!json.oldvotes\");\n-        showLoader(\n-          null,\n-          \"Error while  loading \" +\n-            subkey +\n-            \": <br><div style='border: 1px solid red;'>\" +\n-            \"no data\" +\n-            \"</div>\"\n-        );\n-        handleDisconnect(\"while loading- no \" + subkey + \"\", json);\n-        return false;\n-      } else {\n-        return true;\n-      }\n-    }\n-\n-    window.showCurrentId = function () {\n-      const curSpecial = cldrStatus.getCurrentSpecial();\n-      if (curSpecial && curSpecial != \"\" && !isDashboard()) {\n-        otherSpecial.handleIdChanged(curSpecial, showCurrentId);\n-      } else {\n-        const curId = cldrStatus.getCurrentId();\n-        if (curId != \"\") {\n-          var xtr = document.getElementById(\"r@\" + curId);\n-          if (!xtr) {\n-            console.log(\n-              \"Warning could not load id \" + curId + \" does not exist\"\n-            );\n-            window.updateCurrentId(null);\n-          } else if (xtr.proposedcell && xtr.proposedcell.showFn) {\n-            // TODO: visible? coverage?\n-            cldrSurvey.showInPop(\n-              \"\",\n-              xtr,\n-              xtr.proposedcell,\n-              xtr.proposedcell.showFn,\n-              true\n-            );\n-            console.log(\"Changed to \" + cldrStatus.getCurrentId());\n-            if (!isDashboard()) scrollToItem();\n-          } else {\n-            console.log(\n-              \"Warning could not load id \" +\n-                curId +\n-                \" - not setup - \" +\n-                xtr.toString() +\n-                \" pc=\" +\n-                xtr.proposedcell +\n-                \" sf = \" +\n-                xtr.proposedcell.showFn\n-            );\n+          console.log(\"Changed to \" + cldrStatus.getCurrentId());\n+          if (!cldrStatus.isDashboard()) {\n+            scrollToItem();\n           }\n+        } else {\n+          console.log(\n+            \"Warning could not load id \" +\n+              curId +\n+              \" - not setup - \" +\n+              xtr.toString() +\n+              \" pc=\" +\n+              xtr.proposedcell +\n+              \" sf = \" +\n+              xtr.proposedcell.showFn\n+          );\n         }\n       }\n-    };\n-\n-    // https://dojotoolkit.org/reference-guide/1.10/dijit/Dialog.html\n-    const ariDialog = {\n-      show: function () {\n-        console.log(\"ariDialog.show not implemented yet!\");\n-      },\n-      hide: function () {\n-        console.log(\"ariDialog.hide not implemented yet!\");\n-      },\n-    };\n-\n-    window.ariRetry = function () {\n-      if (!ariDialog) {\n-        console.log(\"Error: no ariDialog in window.ariRetry\");\n-      } else {\n-        ariDialog.hide();\n-      }\n-      window.location.reload(true);\n-    };\n-\n-    window.showARIDialog = function (why, json, word, oneword, p, what) {\n-      console.log(\"showARIDialog\");\n-      p.parentNode.removeChild(p);\n-\n-      if (didUnbust) {\n-        why = why + \"\\n\\n\" + cldrText.get(\"ari_force_reload\");\n-      }\n-\n-      // setup with why\n-      var ari_message;\n-\n-      if (json && json.session_err) {\n-        ari_message = cldrText.get(\"ari_sessiondisconnect_message\");\n-      } else {\n-        ari_message = cldrText.get(\"ari_message\");\n-      }\n+    }\n+  }\n \n-      var ari_submessage = formatErrMsg(json, what);\n+  /**\n+   * Show the surveyCurrentId row\n+   */\n+  function scrollToItem() {\n+    const curId = cldrStatus.getCurrentId();\n+    if (curId != null && curId != \"\") {\n+      // TODO\n+      console.log(\"scrollToItem not implemented yet; curId = \" + curId);\n+      /****\n+      require([\"dojo/window\"], function (win) {\n+        var xtr = document.getElementById(\"r@\" + curId);\n+        if (xtr != null) {\n+          console.log(\"Scrolling to \" + curId);\n+          win.scrollIntoView(\"r@\" + curId);\n+        }\n+      });\n+      ***/\n+    }\n+  }\n \n-      cldrSurvey.updateIf(\"ariMessage\", ari_message.replace(/\\n/g, \"<br>\"));\n-      cldrSurvey.updateIf(\n-        \"ariSubMessage\",\n-        ari_submessage.replace(/\\n/g, \"<br>\")\n+  function updateCoverageMenuTitle() {\n+    const cov = cldrSurvey.getSurveyUserCov();\n+    if (cov) {\n+      $(\"#cov-info\").text(cldrText.get(\"coverage_\" + cov));\n+    } else {\n+      $(\"#coverage-info\").text(\n+        cldrText.sub(\"coverage_auto_msg\", {\n+          surveyOrgCov: cldrText.get(\n+            \"coverage_\" + cldrSurvey.getSurveyOrgCov()\n+          ),\n+        })\n       );\n-      cldrSurvey.updateIf(\n-        \"ariScroller\",\n-        window.location + \"<br>\" + why.replace(/\\n/g, \"<br>\")\n-      );\n-      // TODO: update  ariMain and ariRetryBtn\n-      hideOverlayAndSidebar();\n+    }\n+  }\n \n-      if (!ariDialog) {\n-        console.log(\"Error: no ariDialog in window.showARIDialog 1\");\n-      } else {\n-        ariDialog.show();\n-      }\n+  function insertLocaleSpecialNote(theDiv) {\n+    var bund = locmap.getLocaleInfo(cldrStatus.getCurrentLocale());\n+    let msg = null;\n \n-      var oneword = document.getElementById(\"progress_oneword\");\n-      oneword.onclick = function () {\n-        if (cldrStatus.isDisconnected()) {\n-          if (!ariDialog) {\n-            console.log(\n-              \"Error: no ariDialog in window.showARIDialog 2 onclick\"\n-            );\n+    if (bund) {\n+      if (bund.readonly || bund.special_comment_raw) {\n+        if (bund.readonly) {\n+          if (bund.special_comment_raw) {\n+            msg = bund.special_comment_raw;\n           } else {\n-            ariDialog.show();\n+            msg = cldrText.get(\"readonly_unknown\");\n           }\n+          msg = cldrText.sub(\"readonly_msg\", {\n+            info: bund,\n+            locale: cldrStatus.getCurrentLocale(),\n+            msg: msg,\n+          });\n+        } else {\n+          // Not readonly, could be a scratch locale\n+          msg = bund.special_comment_raw;\n         }\n-      };\n-    };\n-\n-    function updateCoverageMenuTitle() {\n-      if (surveyUserCov) {\n-        $(\"#coverage-info\").text(cldrText.get(\"coverage_\" + surveyUserCov));\n-      } else {\n-        $(\"#coverage-info\").text(\n-          cldrText.sub(\"coverage_auto_msg\", {\n-            surveyOrgCov: cldrText.get(\"coverage_\" + surveyOrgCov),\n-          })\n-        );\n+        if (msg) {\n+          msg = locmap.linkify(msg);\n+          var theChunk = cldrDomConstruct(msg);\n+          var subDiv = document.createElement(\"div\");\n+          subDiv.appendChild(theChunk);\n+          subDiv.className = \"warnText\";\n+          theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n+        }\n+      } else if (bund.dcChild) {\n+        const html = cldrText.sub(\"defaultContentChild_msg\", {\n+          name: bund.name,\n+          dcChild: bund.dcChild,\n+          locale: cldrStatus.getCurrentLocale(),\n+          dcChildName: locmap.getLocaleName(bund.dcChild),\n+        });\n+        var theChunk = cldrDomConstruct(html);\n+        var subDiv = document.createElement(\"div\");\n+        subDiv.appendChild(theChunk);\n+        subDiv.className = \"warnText\";\n+        theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n       }\n     }\n+    if (cldrStatus.getIsPhaseBeta()) {\n+      const html = cldrText.sub(\"beta_msg\", {\n+        info: bund,\n+        locale: cldrStatus.getCurrentLocale(),\n+        msg: msg,\n+      });\n+      var theChunk = cldrDomConstruct(html);\n+      var subDiv = document.createElement(\"div\");\n+      subDiv.appendChild(theChunk);\n+      subDiv.className = \"warnText\";\n+      theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n+    }\n+  }\n \n-    function updateLocaleMenu() {\n-      const curLocale = cldrStatus.getCurrentLocale();\n-      if (curLocale != null && curLocale != \"\" && curLocale != \"-\") {\n-        cldrStatus.setCurrentLocaleName(locmap.getLocaleName(curLocale));\n-        var bund = locmap.getLocaleInfo(curLocale);\n-        if (bund) {\n-          if (bund.readonly) {\n-            cldrSurvey.addClass(\n-              document.getElementById(menubuttons.locale),\n-              \"locked\"\n-            );\n-          } else {\n-            cldrSurvey.removeClass(\n-              document.getElementById(menubuttons.locale),\n-              \"locked\"\n-            );\n-          }\n-\n-          if (bund.dcChild) {\n-            menubuttons.set(\n-              menubuttons.dcontent,\n-              cldrText.sub(\"defaultContent_header_msg\", {\n-                info: bund,\n-                locale: cldrStatus.getCurrentLocale(),\n-                dcChild: locmap.getLocaleName(bund.dcChild),\n-              })\n-            );\n-          } else {\n-            menubuttons.set(menubuttons.dcontent);\n-          }\n+  function updateLocaleMenu() {\n+    const curLocale = cldrStatus.getCurrentLocale();\n+    if (curLocale != null && curLocale != \"\" && curLocale != \"-\") {\n+      cldrStatus.setCurrentLocaleName(locmap.getLocaleName(curLocale));\n+      var bund = locmap.getLocaleInfo(curLocale);\n+      if (bund) {\n+        if (bund.readonly) {\n+          cldrSurvey.addClass(\n+            document.getElementById(menubuttons.locale),\n+            \"locked\"\n+          );\n         } else {\n           cldrSurvey.removeClass(\n             document.getElementById(menubuttons.locale),\n             \"locked\"\n           );\n+        }\n+\n+        if (bund.dcChild) {\n+          menubuttons.set(\n+            menubuttons.dcontent,\n+            cldrText.sub(\"defaultContent_header_msg\", {\n+              info: bund,\n+              locale: cldrStatus.getCurrentLocale(),\n+              dcChild: locmap.getLocaleName(bund.dcChild),\n+            })\n+          );\n+        } else {\n           menubuttons.set(menubuttons.dcontent);\n         }\n       } else {\n-        cldrStatus.setCurrentLocaleName(\"\");\n         cldrSurvey.removeClass(\n           document.getElementById(menubuttons.locale),\n           \"locked\"\n         );\n         menubuttons.set(menubuttons.dcontent);\n       }\n-      menubuttons.set(menubuttons.locale, cldrStatus.getCurrentLocaleName());\n+    } else {\n+      cldrStatus.setCurrentLocaleName(\"\");\n+      cldrSurvey.removeClass(\n+        document.getElementById(menubuttons.locale),\n+        \"locked\"\n+      );\n+      menubuttons.set(menubuttons.dcontent);\n     }\n+    menubuttons.set(menubuttons.locale, cldrStatus.getCurrentLocaleName());\n+  }\n \n-    /**\n-     * Update the #hash and menus to the current settings.\n-     *\n-     * @param doPush {Boolean} if false, do not add to history\n-     */\n-    function updateHashAndMenus(doPush) {\n-      const sessionId = cldrStatus.getSessionId();\n-      const surveyUser = cldrStatus.getSurveyUser();\n-      const userID = surveyUser && surveyUser.id ? surveyUser.id : 0;\n-      const surveyUserPerms = cldrStatus.getPermissions();\n-      const surveyUserURL = {\n-        myAccountSetting: \"survey?do=listu\",\n-        disableMyAccount: \"lock.jsp\",\n-        recentActivity: \"myvotes.jsp?user=\" + userID + \"&s=\" + sessionId,\n-        xmlUpload: \"upload.jsp?a=/cldr-apps/survey&s=\" + sessionId,\n-        manageUser: \"survey?do=list\",\n-        flag: \"tc-flagged.jsp?s=\" + sessionId,\n-        about: \"about.jsp\",\n-        browse: \"browse.jsp\",\n-        adminPanel: \"SurveyAjax?what=admin_panel&s=\" + sessionId,\n-      };\n-\n-      /**\n-       * 'name' - the js/special/___.js name\n-       * 'hidden' - true to hide the item\n-       * 'title' - override of menu name\n-       * @property specialItems\n-       */\n-      var specialItems = new Array();\n-      if (surveyUser != null) {\n-        specialItems = [\n-          {\n-            divider: true,\n-          },\n-\n-          {\n-            title: \"Admin Panel\",\n-            url: surveyUserURL.adminPanel,\n-            display: surveyUser && surveyUser.userlevelName === \"ADMIN\",\n-          },\n-          {\n-            divider: true,\n-            display: surveyUser && surveyUser.userlevelName === \"ADMIN\",\n-          },\n-\n-          {\n-            title: \"My Account\",\n-          }, // My Account section\n-\n-          {\n-            title: \"Settings\",\n-            level: 2,\n-            url: surveyUserURL.myAccountSetting,\n-            display: surveyUser && true,\n-          },\n-          {\n-            title: \"Lock (Disable) My Account\",\n-            level: 2,\n-            url: surveyUserURL.disableMyAccount,\n-            display: surveyUser && true,\n-          },\n-\n-          {\n-            divider: true,\n-          },\n-          {\n-            title: \"My Votes\",\n-          }, // My Votes section\n-\n-          /*\n-           * This indirectly references \"special_oldvotes\" in cldrText.js\n-           */\n-          {\n-            special: \"oldvotes\",\n-            level: 2,\n-            display: surveyUserPerms && surveyUserPerms.userCanImportOldVotes,\n-          },\n-          {\n-            title: \"See My Recent Activity\",\n-            level: 2,\n-            url: surveyUserURL.recentActivity,\n-          },\n-          {\n-            title: \"Upload XML\",\n-            level: 2,\n-            url: surveyUserURL.xmlUpload,\n-          },\n-\n-          {\n-            divider: true,\n-          },\n-          {\n-            title: \"My Organization(\" + cldrStatus.getOrganizationName() + \")\",\n-          }, // My Organization section\n-\n-          {\n-            special: \"vsummary\" /* Cf. special_vsummary */,\n-            level: 2,\n-            display:\n-              surveyUserPerms && surveyUserPerms.userCanUseVettingSummary,\n-          },\n-          {\n-            title: \"List \" + cldrStatus.getOrganizationName() + \" Users\",\n-            level: 2,\n-            url: surveyUserURL.manageUser,\n-            display:\n-              surveyUserPerms &&\n-              (surveyUserPerms.userIsTC || surveyUserPerms.userIsVetter),\n-          },\n-          {\n-            special:\n-              \"forum_participation\" /* Cf. special_forum_participation */,\n-            level: 2,\n-            display: surveyUserPerms && surveyUserPerms.userCanMonitorForum,\n-          },\n-          {\n-            special:\n-              \"vetting_participation\" /* Cf. special_vetting_participation */,\n-            level: 2,\n-            display:\n-              surveyUserPerms &&\n-              (surveyUserPerms.userIsTC || surveyUserPerms.userIsVetter),\n-          },\n-          {\n-            title: \"LOCKED: Note: your account is currently locked.\",\n-            level: 2,\n-            display: surveyUserPerms && surveyUserPerms.userIsLocked,\n-            bold: true,\n-          },\n-\n-          {\n-            divider: true,\n-          },\n-          {\n-            title: \"Forum\",\n-          }, // Forum section\n-\n-          {\n-            special: \"flagged\",\n-            level: 2,\n-            hasFlag: true,\n-          },\n-          {\n-            special: \"mail\",\n-            level: 2,\n-            display: cldrStatus.getIsUnofficial(),\n-          },\n-          {\n-            special: \"bulk_close_posts\" /* Cf. special_bulk_close_posts */,\n-            level: 2,\n-            display: surveyUser && surveyUser.userlevelName === \"ADMIN\",\n-          },\n-\n-          {\n-            divider: true,\n-          },\n-          {\n-            title: \"Informational\",\n-          }, // Informational section\n-\n-          {\n-            special: \"statistics\",\n-            level: 2,\n-          },\n-          {\n-            title: \"About\",\n-            level: 2,\n-            url: surveyUserURL.about,\n-          },\n-          {\n-            title: \"Lookup a code or xpath\",\n-            level: 2,\n-            url: surveyUserURL.browse,\n-          },\n-          {\n-            title: \"Error Subtypes\",\n-            level: 2,\n-            url: \"./tc-all-errors.jsp\",\n-            display: surveyUserPerms && surveyUserPerms.userIsTC,\n-          },\n-          {\n-            divider: true,\n-          },\n-        ];\n-      }\n-      if (!doPush) {\n-        doPush = false;\n-      }\n-      replaceHash(doPush); // update the hash\n-      updateLocaleMenu();\n-\n-      if (cldrStatus.getCurrentLocale() == null) {\n-        menubuttons.set(menubuttons.section);\n-        const curSpecial = cldrStatus.getCurrentSpecial();\n-        if (curSpecial != null) {\n-          var specialId = \"special_\" + curSpecial;\n-          menubuttons.set(menubuttons.page, cldrText.get(specialId));\n-        } else {\n-          menubuttons.set(menubuttons.page);\n+  /**\n+   * Show the \"possible problems\" section which has errors for the locale\n+   */\n+  function showPossibleProblems(\n+    flipper,\n+    flipPage,\n+    loc,\n+    session,\n+    effectiveCov,\n+    requiredCov\n+  ) {\n+    cldrStatus.setCurrentLocale(loc);\n+\n+    var url =\n+      cldrStatus.getContextPath() +\n+      \"/SurveyAjax?what=possibleProblems&_=\" +\n+      cldrStatus.getCurrentLocale() +\n+      \"&s=\" +\n+      session +\n+      \"&eff=\" +\n+      effectiveCov +\n+      \"&req=\" +\n+      requiredCov +\n+      cldrSurvey.cacheKill();\n+    myLoad(url, \"possibleProblems\", function (json) {\n+      if (verifyJson(json, \"possibleProblems\")) {\n+        if (json.dataLoadTime) {\n+          cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n         }\n-        return; // nothing to do.\n-      }\n-      var titlePageContainer = document.getElementById(\"title-page-container\");\n-\n-      /**\n-       * Just update the titles of the menus. Internal to updateHashAndMenus\n-       */\n-      function updateMenuTitles(menuMap) {\n-        if (menubuttons.lastspecial === undefined) {\n-          menubuttons.lastspecial = null;\n-\n-          // Set up the menu here?\n-          var parMenu = document.getElementById(\"manage-list\");\n-          for (var k = 0; k < specialItems.length; k++) {\n-            var item = specialItems[k];\n-            (function (item) {\n-              if (item.display != false) {\n-                var subLi = document.createElement(\"li\");\n-                if (item.special) {\n-                  // special items so look up in cldrText.js\n-                  item.title = cldrText.get(\"special_\" + item.special);\n-                  item.url = \"#\" + item.special;\n-                  item.blank = false;\n-                }\n-                if (item.url) {\n-                  var subA = document.createElement(\"a\");\n-\n-                  if (item.hasFlag) {\n-                    // forum may need images attached to it\n-                    var Img = document.createElement(\"img\");\n-                    Img.setAttribute(\"src\", \"flag.png\");\n-                    Img.setAttribute(\"alt\", \"flag\");\n-                    Img.setAttribute(\"title\", \"flag.png\");\n-                    Img.setAttribute(\"border\", 0);\n-\n-                    subA.appendChild(Img);\n-                  }\n-                  subA.appendChild(document.createTextNode(item.title + \" \"));\n-                  subA.href = item.url;\n \n-                  if (item.blank != false) {\n-                    subA.target = \"_blank\";\n-                    subA.appendChild(\n-                      cldrSurvey.createChunk(\n-                        \"\",\n-                        \"span\",\n-                        \"glyphicon glyphicon-share manage-list-icon\"\n-                      )\n-                    );\n-                  }\n+        var theDiv = flipper.flipToEmpty(flipPage);\n \n-                  if (item.level) {\n-                    // append it to appropriate levels\n-                    var level = item.level;\n-                    for (var i = 0; i < level - 1; i++) {\n-                      /*\n-                       * Indent by creating lists within lists, each list containing only one item.\n-                       * TODO: indent by a better method. Note that for valid html, ul should contain li;\n-                       * ul directly containing element other than li is generally invalid.\n-                       */\n-                      let ul = document.createElement(\"ul\");\n-                      let li = document.createElement(\"li\");\n-                      ul.setAttribute(\"style\", \"list-style-type:none\");\n-                      ul.appendChild(li);\n-                      li.appendChild(subA);\n-                      subA = ul;\n-                    }\n-                  }\n-                  subLi.appendChild(subA);\n-                }\n-                if (!item.url && !item.divider) {\n-                  // if it is pure text/html & not a divider\n-                  if (!item.level) {\n-                    subLi.appendChild(\n-                      document.createTextNode(item.title + \" \")\n-                    );\n-                  } else {\n-                    var subA = null;\n-                    if (item.bold) {\n-                      subA = document.createElement(\"b\");\n-                    } else if (item.italic) {\n-                      subA = document.createElement(\"i\");\n-                    } else {\n-                      subA = document.createElement(\"span\");\n-                    }\n-                    subA.appendChild(document.createTextNode(item.title + \" \"));\n-\n-                    var level = item.level;\n-                    for (var i = 0; i < level - 1; i++) {\n-                      let ul = document.createElement(\"ul\");\n-                      let li = document.createElement(\"li\");\n-                      ul.setAttribute(\"style\", \"list-style-type:none\");\n-                      ul.appendChild(li);\n-                      li.appendChild(subA);\n-                      subA = ul;\n-                    }\n-                    subLi.appendChild(subA);\n-                  }\n-                }\n-                if (item.divider) {\n-                  subLi.className = \"nav-divider\";\n-                }\n-                parMenu.appendChild(subLi);\n-              }\n-            })(item);\n-          }\n-        }\n+        insertLocaleSpecialNote(theDiv);\n \n-        if (menubuttons.lastspecial) {\n-          cldrSurvey.removeClass(menubuttons.lastspecial, \"selected\");\n-        }\n+        if (json.possibleProblems.length > 0) {\n+          var subDiv = cldrSurvey.createChunk(\"\", \"div\");\n+          subDiv.className = \"possibleProblems\";\n \n-        updateLocaleMenu(menuMap);\n-        const curSpecial = cldrStatus.getCurrentSpecial();\n-        if (curSpecial != null && curSpecial != \"\") {\n-          var specialId = \"special_\" + curSpecial;\n-          $(\"#section-current\").html(cldrText.get(specialId));\n-          setDisplayed(titlePageContainer, false);\n-        } else if (!menuMap) {\n-          setDisplayed(titlePageContainer, false);\n-        } else {\n-          const curPage = cldrStatus.getCurrentPage();\n-          if (menuMap.sectionMap[curPage]) {\n-            const curSection = curPage; // section = page\n-            cldrStatus.setCurrentSection(curSection);\n-            $(\"#section-current\").html(menuMap.sectionMap[curSection].name);\n-            setDisplayed(titlePageContainer, false); // will fix title later\n-          } else if (menuMap.pageToSection[curPage]) {\n-            var mySection = menuMap.pageToSection[curPage];\n-            cldrStatus.setCurrentSection(mySection.id);\n-            $(\"#section-current\").html(mySection.name);\n-            setDisplayed(titlePageContainer, false); // will fix title later\n-          } else {\n-            $(\"#section-current\").html(cldrText.get(\"section_general\"));\n-            setDisplayed(titlePageContainer, false);\n-          }\n+          var h3 = cldrSurvey.createChunk(\n+            cldrText.get(\"possibleProblems\"),\n+            \"h3\"\n+          );\n+          subDiv.appendChild(h3);\n+\n+          var div3 = document.createElement(\"div\");\n+          var newHtml = \"\";\n+          newHtml += cldrSurvey.testsToHtml(json.possibleProblems);\n+          div3.innerHTML = newHtml;\n+          subDiv.appendChild(div3);\n+          theDiv.appendChild(subDiv);\n         }\n+        var theInfo = cldrSurvey.createChunk(\"\", \"p\", \"special_general\");\n+        theDiv.appendChild(theInfo);\n+        theInfo.innerHTML = cldrText.get(\"special_general\"); // TODO replace with \u2026 ?\n+        cldrSurvey.hideLoader();\n       }\n+    });\n+  }\n \n-      /**\n-       * Update the menus\n-       */\n-      function updateMenus(menuMap) {\n-        // initialize menus\n-        if (!menuMap.menusSetup) {\n-          menuMap.menusSetup = true;\n-          menuMap.setCheck = function (menu, checked, disabled) {\n-            menu.set(\n-              \"iconClass\",\n-              checked ? \"dijitMenuItemIcon menu-x\" : \"dijitMenuItemIcon menu-o\"\n-            );\n-            menu.set(\"disabled\", disabled);\n-          };\n-          var menuSection = dijitRegistry.byId(\"menu-section\");\n-          menuMap.section_general = new dijitMenuItem({\n-            label: cldrText.get(\"section_general\"),\n-            iconClass: \"dijitMenuItemIcon \",\n-            disabled: true,\n-            onClick: function () {\n-              if (\n-                cldrStatus.getCurrentPage() != \"\" ||\n-                (cldrStatus.getCurrentSpecial() != \"\" &&\n-                  cldrStatus.getCurrentSpecial() != null)\n-              ) {\n-                cldrStatus.setCurrentId(\"\"); // no id if jumping pages\n-                cldrStatus.setCurrentPage(\"\");\n-                cldrStatus.setCurrentSection(\"\");\n-                cldrStatus.setCurrentSpecial(\"\");\n-                updateMenuTitles(menuMap);\n-                reloadV();\n-              }\n-            },\n-          });\n-          menuSection.addChild(menuMap.section_general);\n-          for (var j in menuMap.sections) {\n-            (function (aSection) {\n-              aSection.menuItem = new dijitMenuItem({\n-                label: aSection.name,\n-                iconClass: \"dijitMenuItemIcon\",\n-                onClick: function () {\n-                  cldrStatus.setCurrentId(\"!\"); // no id if jumping pages\n-                  cldrStatus.setCurrentPage(aSection.id);\n-                  cldrStatus.setCurrentSpecial(\"\");\n-                  updateMenus(menuMap);\n-                  updateMenuTitles(menuMap);\n-                  reloadV();\n-                },\n-                disabled: true,\n-              });\n-\n-              menuSection.addChild(aSection.menuItem);\n-            })(menuMap.sections[j]);\n-          }\n-\n-          menuSection.addChild(new dijitMenuSeparator());\n-\n-          menuMap.forumMenu = new dijitMenuItem({\n-            label: cldrText.get(\"section_forum\"),\n-            iconClass: \"dijitMenuItemIcon\", // menu-chat\n-            disabled: true,\n-            onClick: function () {\n-              cldrStatus.setCurrentId(\"!\"); // no id if jumping pages\n-              cldrStatus.setCurrentPage(\"\");\n-              cldrStatus.setCurrentSpecial(\"forum\");\n-              updateMenus(menuMap);\n-              updateMenuTitles(menuMap);\n-              reloadV();\n-            },\n-          });\n-          menuSection.addChild(menuMap.forumMenu);\n-        }\n-\n-        updateMenuTitles(menuMap);\n-\n-        var myPage = null;\n-        var mySection = null;\n-        const curSpecial = cldrStatus.getCurrentSpecial();\n-        if (curSpecial == null || curSpecial == \"\") {\n-          // first, update display names\n-          const curPage = cldrStatus.getCurrentPage();\n-          if (menuMap.sectionMap[curPage]) {\n-            // page is really a section\n-            mySection = menuMap.sectionMap[curPage];\n-            myPage = null;\n-          } else if (menuMap.pageToSection[curPage]) {\n-            mySection = menuMap.pageToSection[curPage];\n-            myPage = mySection.pageMap[curPage];\n-          }\n-          if (mySection !== null) {\n-            // update menus under 'page' - peer pages\n-            if (!titlePageContainer.menus) {\n-              titlePageContainer.menus = {};\n-            }\n-\n-            // hide all. TODO use a foreach model?\n-            for (var zz in titlePageContainer.menus) {\n-              var aMenu = titlePageContainer.menus[zz];\n-              aMenu.set(\"label\", \"-\");\n-            }\n-\n-            var showMenu = titlePageContainer.menus[mySection.id];\n-\n-            if (!showMenu) {\n-              // doesn't exist - add it.\n-              var menuPage = new dijitDropDownMenu();\n-              for (var k in mySection.pages) {\n-                // use given order\n-                (function (aPage) {\n-                  var pageMenu = (aPage.menuItem = new dijitMenuItem({\n-                    label: aPage.name,\n-                    iconClass:\n-                      aPage.id == cldrStatus.getCurrentPage()\n-                        ? \"dijitMenuItemIcon menu-x\"\n-                        : \"dijitMenuItemIcon menu-o\",\n-                    onClick: function () {\n-                      cldrStatus.setCurrentId(\"\"); // no id if jumping pages\n-                      cldrStatus.setCurrentPage(aPage.id);\n-                      updateMenuTitles(menuMap);\n-                      reloadV();\n-                    },\n-                    disabled:\n-                      effectiveCoverage() <\n-                      parseInt(aPage.levs[cldrStatus.getCurrentLocale()]),\n-                  }));\n-                })(mySection.pages[k]);\n-              }\n+  function reloadV() {\n+    if (cldrStatus.isDisconnected()) {\n+      unbust();\n+    }\n \n-              showMenu = new dijitDropDownButton({\n-                label: \"-\",\n-                dropDown: menuPage,\n-              });\n+    document.getElementById(\"DynamicDataSection\").innerHTML = \"\"; //reset the data\n+    $(\"#nav-page\").hide();\n+    $(\"#nav-page-footer\").hide();\n+    isLoading = false;\n \n-              titlePageContainer.menus[\n-                mySection.id\n-              ] = mySection.pagesMenu = showMenu;\n-            }\n+    /*\n+     * Scroll back to top when loading a new page, to avoid a bug where, for\n+     * example, having scrolled towards bottom, we switch from a Section page\n+     * to the Forum page and the scrollbar stays where it was, making the new\n+     * content effectively invisible.\n+     */\n+    window.scrollTo(0, 0);\n \n-            if (myPage !== null) {\n-              /*\n-               * TODO: if 'use strict' in this file, we get:\n-               * Ignoring get or set of property that has [LenientThis] because the \u201cthis\u201d object is incorrect.\n-               */\n-              $(\"#title-page-container\")\n-                .html(\"<h1>\" + myPage.name + \"</h1>\")\n-                .show();\n-            } else {\n-              $(\"#title-page-container\").html(\"\").hide();\n-            }\n-            setDisplayed(showMenu, true);\n-            setDisplayed(titlePageContainer, true); // will fix title later\n-          }\n-        }\n+    const id = flipper.get(pages.data).id;\n+    cldrSurvey.setShower(id, ignoreReloadRequest);\n \n-        stdebug(\"Updating menus.. ecov = \" + effectiveCoverage());\n+    // assume parseHash was already called, if we are taking input from the hash\n \n-        menuMap.setCheck(\n-          menuMap.section_general,\n-          cldrStatus.getCurrentPage() == \"\" &&\n-            (cldrStatus.getCurrentSpecial() == \"\" ||\n-              cldrStatus.getCurrentSpecial() == null),\n-          false\n-        );\n+    ariDialogHide();\n \n-        // Update the status of the items in the Section menu\n-        for (var j in menuMap.sections) {\n-          var aSection = menuMap.sections[j];\n-          // need to see if any items are visible @ current coverage\n-          const curLocale = cldrStatus.getCurrentLocale();\n-          stdebug(\n-            \"for \" +\n-              aSection.name +\n-              \" minLev[\" +\n-              curLocale +\n-              \"] = \" +\n-              aSection.minLev[curLocale]\n-          );\n-          const curSection = cldrStatus.getCurrentSection();\n-          menuMap.setCheck(\n-            aSection.menuItem,\n-            curSection == aSection.id,\n-            effectiveCoverage() < aSection.minLev[curLocale]\n-          );\n+    updateHashAndMenus(true);\n \n-          // update the items in that section's Page menu\n-          if (curSection == aSection.id) {\n-            for (var k in aSection.pages) {\n-              var aPage = aSection.pages[k];\n-              if (!aPage.menuItem) {\n-                console.log(\"Odd - \" + aPage.id + \" has no menuItem\");\n-              } else {\n-                menuMap.setCheck(\n-                  aPage.menuItem,\n-                  aPage.id == cldrStatus.getCurrentPage(),\n-                  effectiveCoverage() < parseInt(aPage.levs[curLocale])\n-                );\n-              }\n-            }\n-          }\n-        }\n-        menuMap.setCheck(\n-          menuMap.forumMenu,\n-          cldrStatus.getCurrentSpecial() == \"forum\",\n-          cldrStatus.getSurveyUser() === null\n-        );\n-        resizeSidebar();\n+    const curLocale = cldrStatus.getCurrentLocale();\n+    if (curLocale != null && curLocale != \"\" && curLocale != \"-\") {\n+      var bund = locmap.getLocaleInfo(curLocale);\n+      if (bund !== null && bund.dcParent) {\n+        const html = cldrText.sub(\"defaultContent_msg\", {\n+          name: bund.name,\n+          dcParent: bund.dcParent,\n+          locale: curLocale,\n+          dcParentName: locmap.getLocaleName(bund.dcParent),\n+        });\n+        var theChunk = cldrDomConstruct(html);\n+        var theDiv = document.createElement(\"div\");\n+        theDiv.appendChild(theChunk);\n+        theDiv.className = \"ferrbox\";\n+        flipper.flipTo(pages.other, theDiv);\n+        return;\n       }\n+    }\n \n-      const curLocale = cldrStatus.getCurrentLocale();\n-      if (_thePages == null || _thePages.loc != curLocale) {\n-        // show the raw IDs while loading.\n-        updateMenuTitles(null);\n-\n-        if (curLocale != null && curLocale != \"\") {\n-          var needLocTable = false;\n-\n-          var url =\n-            cldrStatus.getContextPath() +\n-            \"/SurveyAjax?what=menus&_=\" +\n-            curLocale +\n-            \"&locmap=\" +\n-            needLocTable +\n-            \"&s=\" +\n-            cldrStatus.getSessionId() +\n-            cacheKill();\n-          myLoad(url, \"menus\", function (json) {\n-            if (!verifyJson(json, \"menus\")) {\n-              return; // busted?\n-            }\n-\n-            if (json.locmap) {\n-              locmap = new LocaleMap(locmap); // overwrite with real data\n-            }\n-\n-            // make this into a hashmap.\n-            if (json.canmodify) {\n-              var canmodify = {};\n-              for (var k in json.canmodify) {\n-                canmodify[json.canmodify[k]] = true;\n-              }\n-              window.canmodify = canmodify;\n-            }\n-\n-            updateCovFromJson(json);\n-            updateCoverageMenuTitle();\n-            updateCoverage(flipper.get(pages.data)); // update CSS and auto menu title\n+    var loadingChunk;\n+    flipper.flipTo(\n+      pages.loading,\n+      (loadingChunk = cldrSurvey.createChunk(\n+        cldrText.get(\"loading\"),\n+        \"i\",\n+        \"loadingMsg\"\n+      ))\n+    );\n \n-            function unpackMenus(json) {\n-              var menus = json.menus;\n+    var itemLoadInfo = cldrSurvey.createChunk(\"\", \"div\", \"itemLoadInfo\");\n+\n+    // Create a little spinner to spin \"...\" so the user knows we are doing something..\n+    var spinChunk = cldrSurvey.createChunk(\"...\", \"i\", \"loadingMsgSpin\");\n+    var spin = 0;\n+    var timerToKill = window.setInterval(function () {\n+      var spinTxt = \"\";\n+      spin++;\n+      switch (spin % 3) {\n+        case 0:\n+          spinTxt = \".  \";\n+          break;\n+        case 1:\n+          spinTxt = \" . \";\n+          break;\n+        case 2:\n+          spinTxt = \"  .\";\n+          break;\n+      }\n+      cldrSurvey.removeAllChildNodes(spinChunk);\n+      spinChunk.appendChild(document.createTextNode(spinTxt));\n+    }, 1000);\n+\n+    // Add the \"...\" until the Flipper flips\n+    flipper.addUntilFlipped(\n+      function () {\n+        var frag = document.createDocumentFragment();\n+        frag.appendChild(spinChunk);\n+        return frag;\n+      },\n+      function () {\n+        window.clearInterval(timerToKill);\n+      }\n+    );\n \n-              if (_thePages) {\n-                stdebug(\"Updating cov info into menus for \" + json.loc);\n-                for (var k in menus.sections) {\n-                  var oldSection = _thePages.sectionMap[menus.sections[k].id];\n-                  for (var j in menus.sections[k].pages) {\n-                    var oldPage =\n-                      oldSection.pageMap[menus.sections[k].pages[j].id];\n+    shower(itemLoadInfo); // first load\n \n-                    // copy over levels\n-                    oldPage.levs[json.loc] =\n-                      menus.sections[k].pages[j].levs[json.loc];\n-                  }\n-                }\n-              } else {\n-                stdebug(\"setting up new hashes for \" + json.loc);\n-                // set up some hashes\n-                menus.haveLocs = {};\n-                menus.sectionMap = {};\n-                menus.pageToSection = {};\n-                for (var k in menus.sections) {\n-                  menus.sectionMap[menus.sections[k].id] = menus.sections[k];\n-                  menus.sections[k].pageMap = {};\n-                  menus.sections[k].minLev = {};\n-                  for (var j in menus.sections[k].pages) {\n-                    menus.sections[k].pageMap[menus.sections[k].pages[j].id] =\n-                      menus.sections[k].pages[j];\n-                    menus.pageToSection[menus.sections[k].pages[j].id] =\n-                      menus.sections[k];\n-                  }\n-                }\n-                _thePages = menus;\n-              }\n+    // set up the \"show-er\" function so that if this locale gets reloaded,\n+    // the page will load again - except for the dashboard, where only the\n+    // row get updated\n+    if (!cldrStatus.isDashboard()) {\n+      const id2 = flipper.get(pages.data).id;\n+      cldrSurvey.setShower(id2, shower);\n+    }\n+  } // end reloadV\n \n-              stdebug(\"Calculating minimum section coverage for \" + json.loc);\n-              for (var k in _thePages.sectionMap) {\n-                var min = 200;\n-                for (var j in _thePages.sectionMap[k].pageMap) {\n-                  var thisLev = parseInt(\n-                    _thePages.sectionMap[k].pageMap[j].levs[json.loc]\n-                  );\n-                  if (min > thisLev) {\n-                    min = thisLev;\n-                  }\n-                }\n-                _thePages.sectionMap[k].minLev[json.loc] = min;\n-              }\n+  function ignoreReloadRequest() {\n+    console.log(\n+      \"reloadV()'s shower - ignoring reload request, we are in the middle of a load!\"\n+    );\n+  }\n \n-              _thePages.haveLocs[json.loc] = true;\n-            }\n+  // now, load. Use a show-er function for indirection.\n+  function shower(itemLoadInfo) {\n+    if (isLoading) {\n+      console.log(\"reloadV inner shower: already isLoading, exiting.\");\n+      return;\n+    }\n+    isLoading = true;\n+    var theDiv = flipper.get(pages.data);\n+    var theTable = theDiv.theTable;\n \n-            unpackMenus(json);\n-            unpackMenuSideBar(json);\n-            updateMenus(_thePages);\n-          });\n-        }\n-      } else {\n-        // go ahead and update\n-        updateMenus(_thePages);\n+    if (!theTable) {\n+      var theTableList = theDiv.getElementsByTagName(\"table\");\n+      if (theTableList) {\n+        theTable = theTableList[0];\n+        theDiv.theTable = theTable;\n       }\n     }\n \n-    window.insertLocaleSpecialNote = function insertLocaleSpecialNote(theDiv) {\n-      var bund = locmap.getLocaleInfo(cldrStatus.getCurrentLocale());\n-      let msg = null;\n+    cldrSurvey.showLoader(cldrText.get(\"loading\"));\n \n-      if (bund) {\n-        if (bund.readonly || bund.special_comment_raw) {\n-          if (bund.readonly) {\n-            if (bund.special_comment_raw) {\n-              msg = bund.special_comment_raw;\n+    const curSpecial = cldrStatus.getCurrentSpecial();\n+    const curLocale = cldrStatus.getCurrentLocale();\n+    if (\n+      (curSpecial == null || curSpecial == \"\") &&\n+      curLocale != null &&\n+      curLocale != \"\"\n+    ) {\n+      const curPage = cldrStatus.getCurrentPage();\n+      if (\n+        (curPage == null || curPage == \"\") &&\n+        (cldrStatus.getCurrentId() == null || cldrStatus.getCurrentId() == \"\")\n+      ) {\n+        // the 'General Info' page.\n+        itemLoadInfo.appendChild(\n+          document.createTextNode(locmap.getLocaleName(curLocale))\n+        );\n+        showPossibleProblems(\n+          flipper,\n+          pages.other,\n+          curLocale,\n+          cldrStatus.getSessionId(),\n+          /* TODO: why twice? */\n+          cldrSurvey.covName(cldrSurvey.effectiveCoverage()),\n+          cldrSurvey.covName(cldrSurvey.effectiveCoverage())\n+        );\n+        cldrSurvey.showInPop2(\n+          cldrText.get(\"generalPageInitialGuidance\"),\n+          null,\n+          null,\n+          null,\n+          true\n+        ); /* show the box the first time */\n+        isLoading = false;\n+      } else if (cldrStatus.getCurrentId() == \"!\") {\n+        var frag = document.createDocumentFragment();\n+        frag.appendChild(\n+          cldrSurvey.createChunk(\n+            cldrText.get(\"section_help\"),\n+            \"p\",\n+            \"helpContent\"\n+          )\n+        );\n+        var infoHtml = cldrText.get(\"section_info_\" + curPage);\n+        var infoChunk = document.createElement(\"div\");\n+        infoChunk.innerHTML = infoHtml;\n+        frag.appendChild(infoChunk);\n+        flipper.flipTo(pages.other, frag);\n+        cldrSurvey.hideLoader();\n+        isLoading = false;\n+      } else if (!cldrSurvey.isInputBusy()) {\n+        /*\n+         * Make \u201call rows\u201d requests only when !isInputBusy, to avoid wasted requests\n+         * if the user leaves the input box open for an extended time.\n+         */\n+        // (common case) this is an actual locale data page.\n+        const curId = cldrStatus.getCurrentId();\n+        const curPage = cldrStatus.getCurrentPage();\n+        const curLocale = cldrStatus.getCurrentLocale();\n+        itemLoadInfo.appendChild(\n+          document.createTextNode(\n+            locmap.getLocaleName(curLocale) + \"/\" + curPage + \"/\" + curId\n+          )\n+        );\n+        var url =\n+          cldrStatus.getContextPath() +\n+          \"/SurveyAjax?what=getrow&_=\" +\n+          curLocale +\n+          \"&x=\" +\n+          curPage +\n+          \"&strid=\" +\n+          curId +\n+          \"&s=\" +\n+          cldrStatus.getSessionId() +\n+          cldrSurvey.cacheKill();\n+        $(\"#nav-page\").show(); // make top \"Prev/Next\" buttons visible while loading, cf. '#nav-page-footer' below\n+        myLoad(url, \"section\", function (json) {\n+          isLoading = false;\n+          cldrSurvey.showLoader(cldrText.get(\"loading2\"));\n+          if (!verifyJson(json, \"section\")) {\n+            return;\n+          } else if (json.section.nocontent) {\n+            cldrStatus.setCurrentSection(\"\");\n+            if (json.pageId) {\n+              cldrStatus.setCurrentPage(json.pageId);\n             } else {\n-              msg = cldrText.get(\"readonly_unknown\");\n+              cldrStatus.setCurrentPage(\"\");\n             }\n-            msg = cldrText.sub(\"readonly_msg\", {\n-              info: bund,\n-              locale: cldrStatus.getCurrentLocale(),\n-              msg: msg,\n-            });\n+            cldrSurvey.showLoader(null);\n+            updateHashAndMenus(); // find out why there's no content. (locmap)\n+          } else if (!json.section.rows) {\n+            console.log(\"!json.section.rows\");\n+            cldrSurvey.showLoader(\n+              \"Error while  loading: <br><div style='border: 1px solid red;'>\" +\n+                \"no rows\" +\n+                \"</div>\"\n+            );\n+            cldrSurvey.handleDisconnect(\"while loading- no rows\", json);\n           } else {\n-            // Not readonly, could be a scratch locale\n-            msg = bund.special_comment_raw;\n-          }\n-          if (msg) {\n-            msg = locmap.linkify(msg);\n-            var theChunk = cldrDomConstruct(msg);\n-            var subDiv = document.createElement(\"div\");\n-            subDiv.appendChild(theChunk);\n-            subDiv.className = \"warnText\";\n-            theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n+            cldrSurvey.showLoader(\"loading..\");\n+            if (json.dataLoadTime) {\n+              cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n+            }\n+\n+            cldrStatus.setCurrentSection(\"\");\n+            cldrStatus.setCurrentPage(json.pageId);\n+            updateHashAndMenus(); // now that we have a pageid\n+            if (!cldrStatus.getSurveyUser()) {\n+              cldrSurvey.showInPop2(\n+                cldrText.get(\"loginGuidance\"),\n+                null,\n+                null,\n+                null,\n+                true\n+              ); /* show the box the first time */\n+            } else if (!json.canModify) {\n+              cldrSurvey.showInPop2(\n+                cldrText.get(\"readonlyGuidance\"),\n+                null,\n+                null,\n+                null,\n+                true\n+              ); /* show the box the first time */\n+            } else {\n+              cldrSurvey.showInPop2(\n+                cldrText.get(\"dataPageInitialGuidance\"),\n+                null,\n+                null,\n+                null,\n+                true\n+              ); /* show the box the first time */\n+            }\n+            if (!cldrSurvey.isInputBusy()) {\n+              cldrSurvey.showLoader(cldrText.get(\"loading3\"));\n+              cldrTable.insertRows(\n+                theDiv,\n+                json.pageId,\n+                cldrStatus.getSessionId(),\n+                json\n+              ); // pageid is the xpath..\n+              cldrSurvey.updateCoverage(flipper.get(pages.data)); // make sure cov is set right before we show.\n+              flipper.flipTo(pages.data); // TODO now? or later?\n+              showCurrentId(); // already calls scroll\n+              cldrSurvey.refreshCounterVetting();\n+              $(\"#nav-page-footer\").show(); // make bottom \"Prev/Next\" buttons visible after building table\n+            }\n           }\n-        } else if (bund.dcChild) {\n-          const html = cldrText.sub(\"defaultContentChild_msg\", {\n-            name: bund.name,\n-            dcChild: bund.dcChild,\n-            locale: cldrStatus.getCurrentLocale(),\n-            dcChildName: locmap.getLocaleName(bund.dcChild),\n-          });\n-          var theChunk = cldrDomConstruct(html);\n-          var subDiv = document.createElement(\"div\");\n-          subDiv.appendChild(theChunk);\n-          subDiv.className = \"warnText\";\n-          theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n-        }\n-      }\n-      if (cldrStatus.getIsPhaseBeta()) {\n-        const html = cldrText.sub(\"beta_msg\", {\n-          info: bund,\n-          locale: cldrStatus.getCurrentLocale(),\n-          msg: msg,\n         });\n-        var theChunk = cldrDomConstruct(html);\n-        var subDiv = document.createElement(\"div\");\n-        subDiv.appendChild(theChunk);\n-        subDiv.className = \"warnText\";\n-        theDiv.insertBefore(subDiv, theDiv.childNodes[0]);\n       }\n-    };\n-\n-    /**\n-     * Show the \"possible problems\" section which has errors for the locale\n-     */\n-    function showPossibleProblems(\n-      flipper,\n-      flipPage,\n-      loc,\n-      session,\n-      effectiveCov,\n-      requiredCov\n-    ) {\n-      cldrStatus.setCurrentLocale(loc);\n-\n+    } else if (cldrStatus.getCurrentSpecial() == \"oldvotes\") {\n+      const curLocale = cldrStatus.getCurrentLocale();\n       var url =\n         cldrStatus.getContextPath() +\n-        \"/SurveyAjax?what=possibleProblems&_=\" +\n-        cldrStatus.getCurrentLocale() +\n+        \"/SurveyAjax?what=oldvotes&_=\" +\n+        curLocale +\n         \"&s=\" +\n-        session +\n-        \"&eff=\" +\n-        effectiveCov +\n-        \"&req=\" +\n-        requiredCov +\n-        cacheKill();\n-      myLoad(url, \"possibleProblems\", function (json) {\n-        if (verifyJson(json, \"possibleProblems\")) {\n-          stdebug(\"json.possibleProblems OK..\");\n+        cldrStatus.getSessionId() +\n+        \"&\" +\n+        cldrSurvey.cacheKill();\n+      myLoad(url, \"(loading oldvotes \" + curLocale + \")\", function (json) {\n+        isLoading = false;\n+        cldrSurvey.showLoader(cldrText.get(\"loading2\"));\n+        if (!verifyJson(json, \"oldvotes\")) {\n+          return;\n+        } else {\n+          cldrSurvey.showLoader(\"loading..\");\n           if (json.dataLoadTime) {\n             cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n           }\n \n-          var theDiv = flipper.flipToEmpty(flipPage);\n-\n-          insertLocaleSpecialNote(theDiv);\n-\n-          if (json.possibleProblems.length > 0) {\n-            var subDiv = cldrSurvey.createChunk(\"\", \"div\");\n-            subDiv.className = \"possibleProblems\";\n-\n-            var h3 = cldrSurvey.createChunk(\n-              cldrText.get(\"possibleProblems\"),\n-              \"h3\"\n-            );\n-            subDiv.appendChild(h3);\n-\n-            var div3 = document.createElement(\"div\");\n-            var newHtml = \"\";\n-            newHtml += testsToHtml(json.possibleProblems);\n-            div3.innerHTML = newHtml;\n-            subDiv.appendChild(div3);\n-            theDiv.appendChild(subDiv);\n-          }\n-          var theInfo = cldrSurvey.createChunk(\"\", \"p\", \"special_general\");\n-          theDiv.appendChild(theInfo);\n-          theInfo.innerHTML = cldrText.get(\"special_general\"); // TODO replace with \u2026 ?\n-          hideLoader(null);\n-        }\n-      });\n-    }\n-\n-    var isLoading = false;\n-\n-    window.reloadV = function reloadV() {\n-      if (cldrStatus.isDisconnected()) {\n-        unbust();\n-      }\n+          var theDiv = flipper.flipToEmpty(pages.other); // clean slate, and proceed..\n \n-      document.getElementById(\"DynamicDataSection\").innerHTML = \"\"; //reset the data\n-      $(\"#nav-page\").hide();\n-      $(\"#nav-page-footer\").hide();\n-      isLoading = false;\n+          cldrSurvey.removeAllChildNodes(theDiv);\n \n-      /*\n-       * Scroll back to top when loading a new page, to avoid a bug where, for\n-       * example, having scrolled towards bottom, we switch from a Section page\n-       * to the Forum page and the scrollbar stays where it was, making the new\n-       * content effectively invisible.\n-       */\n-      window.scrollTo(0, 0);\n-\n-      /*\n-       * TODO: explain code related to \"showers\".\n-       */\n-      showers[flipper.get(pages.data).id] = function () {\n-        console.log(\n-          \"reloadV()'s shower - ignoring reload request, we are in the middle of a load!\"\n-        );\n-      };\n+          var h2txt = cldrText.get(\"v_oldvotes_title\");\n+          theDiv.appendChild(cldrSurvey.createChunk(h2txt, \"h2\", \"v-title\"));\n \n-      // assume parseHash was already called, if we are taking input from the hash\n-      if (!ariDialog) {\n-        console.log(\"Error: no ariDialog in window.reloadV\");\n-      } else {\n-        ariDialog.hide();\n-      }\n+          if (!json.oldvotes.locale) {\n+            cldrStatus.setCurrentLocale(\"\");\n+            updateHashAndMenus();\n \n-      updateHashAndMenus(true);\n+            var ul = document.createElement(\"div\");\n+            ul.className = \"oldvotes_list\";\n+            var data = json.oldvotes.locales.data;\n+            var header = json.oldvotes.locales.header;\n \n-      const curLocale = cldrStatus.getCurrentLocale();\n-      if (curLocale != null && curLocale != \"\" && curLocale != \"-\") {\n-        var bund = locmap.getLocaleInfo(curLocale);\n-        if (bund !== null && bund.dcParent) {\n-          const html = cldrText.sub(\"defaultContent_msg\", {\n-            name: bund.name,\n-            dcParent: bund.dcParent,\n-            locale: curLocale,\n-            dcParentName: locmap.getLocaleName(bund.dcParent),\n-          });\n-          var theChunk = cldrDomConstruct(html);\n-          var theDiv = document.createElement(\"div\");\n-          theDiv.appendChild(theChunk);\n-          theDiv.className = \"ferrbox\";\n-          flipper.flipTo(pages.other, theDiv);\n-          return;\n-        }\n-      }\n-\n-      // TODO: don't even flip if it's quick.\n-      var loadingChunk;\n-      flipper.flipTo(\n-        pages.loading,\n-        (loadingChunk = cldrSurvey.createChunk(\n-          cldrText.get(\"loading\"),\n-          \"i\",\n-          \"loadingMsg\"\n-        ))\n-      );\n+            if (data.length > 0) {\n+              data.sort((a, b) =>\n+                a[header.LOCALE].localeCompare(b[header.LOCALE])\n+              );\n+              for (var k in data) {\n+                var li = document.createElement(\"li\");\n \n-      var itemLoadInfo = cldrSurvey.createChunk(\"\", \"div\", \"itemLoadInfo\");\n-\n-      // Create a little spinner to spin \"...\" so the user knows we are doing something..\n-      var spinChunk = cldrSurvey.createChunk(\"...\", \"i\", \"loadingMsgSpin\");\n-      var spin = 0;\n-      var timerToKill = window.setInterval(function () {\n-        var spinTxt = \"\";\n-        spin++;\n-        switch (spin % 3) {\n-          case 0:\n-            spinTxt = \".  \";\n-            break;\n-          case 1:\n-            spinTxt = \" . \";\n-            break;\n-          case 2:\n-            spinTxt = \"  .\";\n-            break;\n-        }\n-        removeAllChildNodes(spinChunk);\n-        spinChunk.appendChild(document.createTextNode(spinTxt));\n-      }, 1000);\n-\n-      // Add the \"...\" until the Flipper flips\n-      flipper.addUntilFlipped(\n-        function () {\n-          var frag = document.createDocumentFragment();\n-          frag.appendChild(spinChunk);\n-          return frag;\n-        },\n-        function () {\n-          window.clearInterval(timerToKill);\n-        }\n-      );\n+                var link = cldrSurvey.createChunk(\n+                  data[k][header.LOCALE_NAME],\n+                  \"a\"\n+                );\n+                link.href = \"#\" + data[k][header.LOCALE];\n+                (function (loc, link) {\n+                  return function () {\n+                    var clicky;\n+                    listenFor(\n+                      link,\n+                      \"click\",\n+                      (clicky = function (e) {\n+                        cldrStatus.setCurrentLocale(loc);\n+                        reloadV();\n+                        cldrSurvey.stStopPropagation(e);\n+                        return false;\n+                      })\n+                    );\n+                    link.onclick = clicky;\n+                  };\n+                })(data[k][header.LOCALE], link)();\n+                li.appendChild(link);\n+                li.appendChild(cldrSurvey.createChunk(\" \"));\n+                li.appendChild(\n+                  cldrSurvey.createChunk(\"(\" + data[k][header.COUNT] + \")\")\n+                );\n \n-      // now, load. Use a show-er function for indirection.\n-      var shower = function () {\n-        if (isLoading) {\n-          console.log(\"reloadV inner shower: already isLoading, exitting.\");\n-          return;\n-        }\n-        isLoading = true;\n-        var theDiv = flipper.get(pages.data);\n-        var theTable = theDiv.theTable;\n-\n-        if (!theTable) {\n-          var theTableList = theDiv.getElementsByTagName(\"table\");\n-          if (theTableList) {\n-            theTable = theTableList[0];\n-            theDiv.theTable = theTable;\n-          }\n-        }\n+                ul.appendChild(li);\n+              }\n \n-        showLoader(null, cldrText.get(\"loading\"));\n+              theDiv.appendChild(ul);\n \n-        const curSpecial = cldrStatus.getCurrentSpecial();\n-        const curLocale = cldrStatus.getCurrentLocale();\n-        if (\n-          (curSpecial == null || curSpecial == \"\") &&\n-          curLocale != null &&\n-          curLocale != \"\"\n-        ) {\n-          const curPage = cldrStatus.getCurrentPage();\n-          if (\n-            (curPage == null || curPage == \"\") &&\n-            (cldrStatus.getCurrentId() == null ||\n-              cldrStatus.getCurrentId() == \"\")\n-          ) {\n-            // the 'General Info' page.\n-            itemLoadInfo.appendChild(\n-              document.createTextNode(locmap.getLocaleName(curLocale))\n-            );\n-            showPossibleProblems(\n-              flipper,\n-              pages.other,\n-              curLocale,\n-              cldrStatus.getSessionId(),\n-              covName(effectiveCoverage()),\n-              covName(effectiveCoverage())\n+              theDiv.appendChild(\n+                cldrSurvey.createChunk(\n+                  cldrText.get(\"v_oldvotes_locale_list_help_msg\"),\n+                  \"p\",\n+                  \"helpContent\"\n+                )\n+              );\n+            } else {\n+              theDiv.appendChild(\n+                cldrSurvey.createChunk(cldrText.get(\"v_oldvotes_no_old\"), \"i\")\n+              ); // TODO fix\n+            }\n+          } else {\n+            cldrStatus.setCurrentLocale(json.oldvotes.locale);\n+            updateHashAndMenus();\n+            var loclink;\n+            theDiv.appendChild(\n+              (loclink = cldrSurvey.createChunk(\n+                cldrText.get(\"v_oldvotes_return_to_locale_list\"),\n+                \"a\",\n+                \"notselected\"\n+              ))\n             );\n-            cldrSurvey.showInPop2(\n-              cldrText.get(\"generalPageInitialGuidance\"),\n-              null,\n-              null,\n-              null,\n-              true\n-            ); /* show the box the first time */\n-            isLoading = false;\n-          } else if (cldrStatus.getCurrentId() == \"!\") {\n-            var frag = document.createDocumentFragment();\n-            frag.appendChild(\n+            listenFor(loclink, \"click\", function (e) {\n+              cldrStatus.setCurrentLocale(\"\");\n+              reloadV();\n+              cldrSurvey.stStopPropagation(e);\n+              return false;\n+            });\n+            theDiv.appendChild(\n               cldrSurvey.createChunk(\n-                cldrText.get(\"section_help\"),\n-                \"p\",\n-                \"helpContent\"\n+                json.oldvotes.localeDisplayName,\n+                \"h3\",\n+                \"v-title2\"\n               )\n             );\n-            var infoHtml = cldrText.get(\"section_info_\" + curPage);\n-            var infoChunk = document.createElement(\"div\");\n-            infoChunk.innerHTML = infoHtml;\n-            frag.appendChild(infoChunk);\n-            flipper.flipTo(pages.other, frag);\n-            hideLoader(null);\n-            isLoading = false;\n-          } else if (!cldrSurvey.isInputBusy()) {\n-            /*\n-             * Make \u201call rows\u201d requests only when !isInputBusy, to avoid wasted requests\n-             * if the user leaves the input box open for an extended time.\n-             */\n-            // (common case) this is an actual locale data page.\n-            const curId = cldrStatus.getCurrentId();\n-            const curPage = cldrStatus.getCurrentPage();\n-            const curLocale = cldrStatus.getCurrentLocale();\n-            itemLoadInfo.appendChild(\n-              document.createTextNode(\n-                locmap.getLocaleName(curLocale) + \"/\" + curPage + \"/\" + curId\n-              )\n+            var oldVotesLocaleMsg = document.createElement(\"p\");\n+            oldVotesLocaleMsg.className = \"helpContent\";\n+            oldVotesLocaleMsg.innerHTML = cldrText.sub(\n+              \"v_oldvotes_locale_msg\",\n+              {\n+                version: surveyLastVoteVersion,\n+                locale: json.oldvotes.localeDisplayName,\n+              }\n             );\n-            var url =\n-              cldrStatus.getContextPath() +\n-              \"/SurveyAjax?what=getrow&_=\" +\n-              curLocale +\n-              \"&x=\" +\n-              curPage +\n-              \"&strid=\" +\n-              curId +\n-              \"&s=\" +\n-              cldrStatus.getSessionId() +\n-              cacheKill();\n-            $(\"#nav-page\").show(); // make top \"Prev/Next\" buttons visible while loading, cf. '#nav-page-footer' below\n-            myLoad(url, \"section\", function (json) {\n-              isLoading = false;\n-              showLoader(theDiv.loader, cldrText.get(\"loading2\"));\n-              if (!verifyJson(json, \"section\")) {\n-                return;\n-              } else if (json.section.nocontent) {\n-                cldrStatus.setCurrentSection(\"\");\n-                if (json.pageId) {\n-                  cldrStatus.setCurrentPage(json.pageId);\n-                } else {\n-                  cldrStatus.setCurrentPage(\"\");\n-                }\n-                showLoader(null);\n-                updateHashAndMenus(); // find out why there's no content. (locmap)\n-              } else if (!json.section.rows) {\n-                console.log(\"!json.section.rows\");\n-                showLoader(\n-                  theDiv.loader,\n-                  \"Error while  loading: <br><div style='border: 1px solid red;'>\" +\n-                    \"no rows\" +\n-                    \"</div>\"\n+            theDiv.appendChild(oldVotesLocaleMsg);\n+            if (\n+              (json.oldvotes.contested && json.oldvotes.contested.length > 0) ||\n+              (json.oldvotes.uncontested &&\n+                json.oldvotes.uncontested.length > 0)\n+            ) {\n+              var frag = document.createDocumentFragment();\n+              const oldVoteCount =\n+                (json.oldvotes.contested ? json.oldvotes.contested.length : 0) +\n+                (json.oldvotes.uncontested\n+                  ? json.oldvotes.uncontested.length\n+                  : 0);\n+              var summaryMsg = cldrText.sub(\"v_oldvotes_count_msg\", {\n+                count: oldVoteCount,\n+              });\n+              frag.appendChild(cldrSurvey.createChunk(summaryMsg, \"div\", \"\"));\n+\n+              var navChunk = document.createElement(\"div\");\n+              navChunk.className = \"v-oldVotes-nav\";\n+              frag.appendChild(navChunk);\n+\n+              var uncontestedChunk = null;\n+              var contestedChunk = null;\n+\n+              function addOldvotesType(type, jsondata, frag, navChunk) {\n+                var content = cldrSurvey.createChunk(\n+                  \"\",\n+                  \"div\",\n+                  \"v-oldVotes-subDiv\"\n                 );\n-                handleDisconnect(\"while loading- no rows\", json);\n-              } else {\n-                stdebug(\"json.section.rows OK..\");\n-                showLoader(theDiv.loader, \"loading..\");\n-                if (json.dataLoadTime) {\n-                  cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n-                }\n+                content.strid = \"v_oldvotes_title_\" + type; // v_oldvotes_title_contested or v_oldvotes_title_uncontested\n \n-                cldrStatus.setCurrentSection(\"\");\n-                cldrStatus.setCurrentPage(json.pageId);\n-                updateHashAndMenus(); // now that we have a pageid\n-                if (!cldrStatus.getSurveyUser()) {\n-                  cldrSurvey.showInPop2(\n-                    cldrText.get(\"loginGuidance\"),\n-                    null,\n-                    null,\n-                    null,\n-                    true\n-                  ); /* show the box the first time */\n-                } else if (!json.canModify) {\n-                  cldrSurvey.showInPop2(\n-                    cldrText.get(\"readonlyGuidance\"),\n-                    null,\n-                    null,\n-                    null,\n-                    true\n-                  ); /* show the box the first time */\n-                } else {\n-                  cldrSurvey.showInPop2(\n-                    cldrText.get(\"dataPageInitialGuidance\"),\n-                    null,\n-                    null,\n-                    null,\n-                    true\n-                  ); /* show the box the first time */\n-                }\n-                if (!cldrSurvey.isInputBusy()) {\n-                  showLoader(theDiv.loader, cldrText.get(\"loading3\"));\n-                  cldrTable.insertRows(\n-                    theDiv,\n-                    json.pageId,\n-                    cldrStatus.getSessionId(),\n-                    json\n-                  ); // pageid is the xpath..\n-                  updateCoverage(flipper.get(pages.data)); // make sure cov is set right before we show.\n-                  flipper.flipTo(pages.data); // TODO now? or later?\n-                  window.showCurrentId(); // already calls scroll\n-                  refreshCounterVetting();\n-                  $(\"#nav-page-footer\").show(); // make bottom \"Prev/Next\" buttons visible after building table\n+                /* Normally this interface is for old \"losing\" (contested) votes only, since old \"winning\" (uncontested) votes\n+                 * are imported automatically. An exception is for TC users, for whom auto-import is disabled. The server-side\n+                 * code leaves json.oldvotes.uncontested undefined except for TC users.\n+                 * Show headings for \"Winning/Losing\" only if json.oldvotes.uncontested is defined and non-empty.\n+                 */\n+                if (\n+                  json.oldvotes.uncontested &&\n+                  json.oldvotes.uncontested.length > 0\n+                ) {\n+                  var title = cldrText.get(content.strid);\n+                  content.title = title;\n+                  content.appendChild(\n+                    cldrSurvey.createChunk(title, \"h2\", \"v-oldvotes-sub\")\n+                  );\n                 }\n-              }\n-            });\n-          }\n-        } else if (cldrStatus.getCurrentSpecial() == \"oldvotes\") {\n-          const curLocale = cldrStatus.getCurrentLocale();\n-          var url =\n-            cldrStatus.getContextPath() +\n-            \"/SurveyAjax?what=oldvotes&_=\" +\n-            curLocale +\n-            \"&s=\" +\n-            cldrStatus.getSessionId() +\n-            \"&\" +\n-            cacheKill();\n-          myLoad(url, \"(loading oldvotes \" + curLocale + \")\", function (json) {\n-            isLoading = false;\n-            showLoader(null, cldrText.get(\"loading2\"));\n-            if (!verifyJson(json, \"oldvotes\")) {\n-              return;\n-            } else {\n-              showLoader(null, \"loading..\");\n-              if (json.dataLoadTime) {\n-                cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n-              }\n-\n-              var theDiv = flipper.flipToEmpty(pages.other); // clean slate, and proceed..\n \n-              removeAllChildNodes(theDiv);\n+                content.appendChild(\n+                  cldrSurvey.showVoteTable(jsondata /* voteList */, type, json)\n+                );\n \n-              var h2txt = cldrText.get(\"v_oldvotes_title\");\n-              theDiv.appendChild(\n-                cldrSurvey.createChunk(h2txt, \"h2\", \"v-title\")\n-              );\n+                var submit = dojoxBusyButton({\n+                  label: cldrText.get(\"v_submit_msg\"),\n+                  busyLabel: cldrText.get(\"v_submit_busy\"),\n+                });\n \n-              if (!json.oldvotes.locale) {\n-                cldrStatus.setCurrentLocale(\"\");\n-                updateHashAndMenus();\n+                submit.on(\"click\", function (e) {\n+                  cldrSurvey.setDisplayed(navChunk, false);\n+                  var confirmList = []; // these will be revoted with current params\n \n-                var ul = document.createElement(\"div\");\n-                ul.className = \"oldvotes_list\";\n-                var data = json.oldvotes.locales.data;\n-                var header = json.oldvotes.locales.header;\n+                  // explicit confirm list -  save us desync hassle\n+                  for (var kk in jsondata) {\n+                    if (jsondata[kk].box.checked) {\n+                      confirmList.push(jsondata[kk].strid);\n+                    }\n+                  }\n \n-                if (data.length > 0) {\n-                  data.sort((a, b) =>\n-                    a[header.LOCALE].localeCompare(b[header.LOCALE])\n+                  var saveList = {\n+                    locale: cldrStatus.getCurrentLocale(),\n+                    confirmList: confirmList,\n+                  };\n+\n+                  console.log(saveList.toString());\n+                  console.log(\n+                    \"Submitting \" +\n+                      type +\n+                      \" \" +\n+                      confirmList.length +\n+                      \" for confirm\"\n                   );\n-                  for (var k in data) {\n-                    var li = document.createElement(\"li\");\n-\n-                    var link = cldrSurvey.createChunk(\n-                      data[k][header.LOCALE_NAME],\n-                      \"a\"\n-                    );\n-                    link.href = \"#\" + data[k][header.LOCALE];\n-                    (function (loc, link) {\n-                      return function () {\n-                        var clicky;\n-                        listenFor(\n-                          link,\n-                          \"click\",\n-                          (clicky = function (e) {\n-                            cldrStatus.setCurrentLocale(loc);\n-                            reloadV();\n-                            cldrSurvey.stStopPropagation(e);\n-                            return false;\n-                          })\n+                  const curLocale = cldrStatus.getCurrentLocale();\n+                  var url =\n+                    cldrStatus.getContextPath() +\n+                    \"/SurveyAjax?what=oldvotes&_=\" +\n+                    curLocale +\n+                    \"&s=\" +\n+                    cldrStatus.getSessionId() +\n+                    \"&doSubmit=true&\" +\n+                    cldrSurvey.cacheKill();\n+                  myLoad(\n+                    url,\n+                    \"(submitting oldvotes \" + curLocale + \")\",\n+                    function (json) {\n+                      cldrSurvey.showLoader(cldrText.get(\"loading2\"));\n+                      if (!verifyJson(json, \"oldvotes\")) {\n+                        cldrSurvey.handleDisconnect(\n+                          \"Error submitting votes!\",\n+                          json,\n+                          \"Error\"\n                         );\n-                        link.onclick = clicky;\n-                      };\n-                    })(data[k][header.LOCALE], link)();\n-                    li.appendChild(link);\n-                    li.appendChild(cldrSurvey.createChunk(\" \"));\n-                    li.appendChild(\n-                      cldrSurvey.createChunk(\"(\" + data[k][header.COUNT] + \")\")\n-                    );\n+                        return;\n+                      } else {\n+                        reloadV();\n+                      }\n+                    },\n+                    JSON.stringify(saveList),\n+                    {\n+                      \"Content-Type\": \"application/json\",\n+                    }\n+                  );\n+                });\n \n-                    ul.appendChild(li);\n-                  }\n+                submit.placeAt(content);\n+                // hide by default\n+                cldrSurvey.setDisplayed(content, false);\n \n-                  theDiv.appendChild(ul);\n+                frag.appendChild(content);\n+                return content;\n+              }\n \n-                  theDiv.appendChild(\n-                    cldrSurvey.createChunk(\n-                      cldrText.get(\"v_oldvotes_locale_list_help_msg\"),\n-                      \"p\",\n-                      \"helpContent\"\n-                    )\n-                  );\n-                } else {\n-                  theDiv.appendChild(\n-                    cldrSurvey.createChunk(\n-                      cldrText.get(\"v_oldvotes_no_old\"),\n-                      \"i\"\n-                    )\n-                  ); // TODO fix\n-                }\n+              if (\n+                json.oldvotes.uncontested &&\n+                json.oldvotes.uncontested.length > 0\n+              ) {\n+                uncontestedChunk = addOldvotesType(\n+                  \"uncontested\",\n+                  json.oldvotes.uncontested,\n+                  frag,\n+                  navChunk\n+                );\n+              }\n+              if (\n+                json.oldvotes.contested &&\n+                json.oldvotes.contested.length > 0\n+              ) {\n+                contestedChunk = addOldvotesType(\n+                  \"contested\",\n+                  json.oldvotes.contested,\n+                  frag,\n+                  navChunk\n+                );\n+              }\n+\n+              if (contestedChunk == null && uncontestedChunk != null) {\n+                cldrSurvey.setDisplayed(uncontestedChunk, true); // only item\n+              } else if (contestedChunk != null && uncontestedChunk == null) {\n+                cldrSurvey.setDisplayed(contestedChunk, true); // only item\n               } else {\n-                cldrStatus.setCurrentLocale(json.oldvotes.locale);\n-                updateHashAndMenus();\n-                var loclink;\n-                theDiv.appendChild(\n-                  (loclink = cldrSurvey.createChunk(\n-                    cldrText.get(\"v_oldvotes_return_to_locale_list\"),\n-                    \"a\",\n-                    \"notselected\"\n-                  ))\n+                // navigation\n+                navChunk.appendChild(\n+                  cldrSurvey.createChunk(cldrText.get(\"v_oldvotes_show\"))\n                 );\n-                listenFor(loclink, \"click\", function (e) {\n-                  cldrStatus.setCurrentLocale(\"\");\n-                  reloadV();\n-                  cldrSurvey.stStopPropagation(e);\n-                  return false;\n-                });\n-                theDiv.appendChild(\n-                  cldrSurvey.createChunk(\n-                    json.oldvotes.localeDisplayName,\n-                    \"h3\",\n-                    \"v-title2\"\n+                navChunk.appendChild(\n+                  cldrSurvey.createLinkToFn(\n+                    uncontestedChunk.strid,\n+                    function () {\n+                      cldrSurvey.setDisplayed(contestedChunk, false);\n+                      cldrSurvey.setDisplayed(uncontestedChunk, true);\n+                    },\n+                    \"button\"\n                   )\n                 );\n-                var oldVotesLocaleMsg = document.createElement(\"p\");\n-                oldVotesLocaleMsg.className = \"helpContent\";\n-                oldVotesLocaleMsg.innerHTML = cldrText.sub(\n-                  \"v_oldvotes_locale_msg\",\n-                  {\n-                    version: surveyLastVoteVersion,\n-                    locale: json.oldvotes.localeDisplayName,\n-                  }\n+                navChunk.appendChild(\n+                  cldrSurvey.createLinkToFn(\n+                    contestedChunk.strid,\n+                    function () {\n+                      cldrSurvey.setDisplayed(contestedChunk, true);\n+                      cldrSurvey.setDisplayed(uncontestedChunk, false);\n+                    },\n+                    \"button\"\n+                  )\n                 );\n-                theDiv.appendChild(oldVotesLocaleMsg);\n-                if (\n-                  (json.oldvotes.contested &&\n-                    json.oldvotes.contested.length > 0) ||\n-                  (json.oldvotes.uncontested &&\n-                    json.oldvotes.uncontested.length > 0)\n-                ) {\n-                  var frag = document.createDocumentFragment();\n-                  const oldVoteCount =\n-                    (json.oldvotes.contested\n-                      ? json.oldvotes.contested.length\n-                      : 0) +\n-                    (json.oldvotes.uncontested\n-                      ? json.oldvotes.uncontested.length\n-                      : 0);\n-                  var summaryMsg = cldrText.sub(\"v_oldvotes_count_msg\", {\n-                    count: oldVoteCount,\n-                  });\n-                  frag.appendChild(\n-                    cldrSurvey.createChunk(summaryMsg, \"div\", \"\")\n-                  );\n \n-                  var navChunk = document.createElement(\"div\");\n-                  navChunk.className = \"v-oldVotes-nav\";\n-                  frag.appendChild(navChunk);\n+                contestedChunk.appendChild(\n+                  cldrSurvey.createLinkToFn(\n+                    \"v_oldvotes_hide\",\n+                    function () {\n+                      cldrSurvey.setDisplayed(contestedChunk, false);\n+                    },\n+                    \"button\"\n+                  )\n+                );\n+                uncontestedChunk.appendChild(\n+                  cldrSurvey.createLinkToFn(\n+                    \"v_oldvotes_hide\",\n+                    function () {\n+                      cldrSurvey.setDisplayed(uncontestedChunk, false);\n+                    },\n+                    \"button\"\n+                  )\n+                );\n+              }\n \n-                  var uncontestedChunk = null;\n-                  var contestedChunk = null;\n+              theDiv.appendChild(frag);\n+            } else {\n+              theDiv.appendChild(\n+                cldrSurvey.createChunk(\n+                  cldrText.get(\"v_oldvotes_no_old_here\"),\n+                  \"i\",\n+                  \"\"\n+                )\n+              );\n+            }\n+          }\n+        }\n+        cldrSurvey.hideLoader();\n+      });\n+    } else if (cldrStatus.getCurrentSpecial() == \"mail\") {\n+      var url =\n+        cldrStatus.getContextPath() +\n+        \"/SurveyAjax?what=mail&s=\" +\n+        cldrStatus.getSessionId() +\n+        \"&fetchAll=true&\" +\n+        cldrSurvey.cacheKill();\n+      myLoad(\n+        url,\n+        \"(loading mail \" + cldrStatus.getCurrentLocale() + \")\",\n+        function (json) {\n+          cldrSurvey.hideLoader();\n+          isLoading = false;\n+          if (!verifyJson(json, \"mail\")) {\n+            return;\n+          } else {\n+            if (json.dataLoadTime) {\n+              cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n+            }\n \n-                  function addOldvotesType(type, jsondata, frag, navChunk) {\n-                    var content = cldrSurvey.createChunk(\n-                      \"\",\n-                      \"div\",\n-                      \"v-oldVotes-subDiv\"\n-                    );\n-                    content.strid = \"v_oldvotes_title_\" + type; // v_oldvotes_title_contested or v_oldvotes_title_uncontested\n+            var theDiv = flipper.flipToEmpty(pages.other); // clean slate, and proceed..\n \n-                    /* Normally this interface is for old \"losing\" (contested) votes only, since old \"winning\" (uncontested) votes\n-                     * are imported automatically. An exception is for TC users, for whom auto-import is disabled. The server-side\n-                     * code leaves json.oldvotes.uncontested undefined except for TC users.\n-                     * Show headings for \"Winning/Losing\" only if json.oldvotes.uncontested is defined and non-empty.\n-                     */\n-                    if (\n-                      json.oldvotes.uncontested &&\n-                      json.oldvotes.uncontested.length > 0\n-                    ) {\n-                      var title = cldrText.get(content.strid);\n-                      content.title = title;\n-                      content.appendChild(\n-                        cldrSurvey.createChunk(title, \"h2\", \"v-oldvotes-sub\")\n-                      );\n-                    }\n+            cldrSurvey.removeAllChildNodes(theDiv);\n \n-                    content.appendChild(\n-                      showVoteTable(jsondata /* voteList */, type, json)\n-                    );\n+            var listDiv = cldrSurvey.createChunk(\"\", \"div\", \"mailListChunk\");\n+            var contentDiv = cldrSurvey.createChunk(\n+              \"\",\n+              \"div\",\n+              \"mailContentChunk\"\n+            );\n \n-                    var submit = dojoxBusyButton({\n-                      label: cldrText.get(\"v_submit_msg\"),\n-                      busyLabel: cldrText.get(\"v_submit_busy\"),\n-                    });\n+            theDiv.appendChild(listDiv);\n+            theDiv.appendChild(contentDiv);\n \n-                    submit.on(\"click\", function (e) {\n-                      setDisplayed(navChunk, false);\n-                      var confirmList = []; // these will be revoted with current params\n+            cldrSurvey.setDisplayed(contentDiv, false);\n+            var header = json.mail.header;\n+            var data = json.mail.data;\n \n-                      // explicit confirm list -  save us desync hassle\n-                      for (var kk in jsondata) {\n-                        if (jsondata[kk].box.checked) {\n-                          confirmList.push(jsondata[kk].strid);\n-                        }\n-                      }\n+            if (data.length == 0) {\n+              listDiv.appendChild(\n+                cldrSurvey.createChunk(\n+                  cldrText.get(\"mail_noMail\"),\n+                  \"p\",\n+                  \"helpContent\"\n+                )\n+              );\n+            } else {\n+              for (var ii in data) {\n+                var row = data[ii];\n+                var li = cldrSurvey.createChunk(\n+                  row[header.QUEUE_DATE] + \": \" + row[header.SUBJECT],\n+                  \"li\",\n+                  \"mailRow\"\n+                );\n+                if (row[header.READ_DATE]) {\n+                  cldrSurvey.addClass(li, \"readMail\");\n+                }\n+                if (header.USER !== undefined) {\n+                  li.appendChild(\n+                    document.createTextNode(\"(to \" + row[header.USER] + \")\")\n+                  );\n+                }\n+                if (row[header.SENT_DATE] !== false) {\n+                  li.appendChild(\n+                    cldrSurvey.createChunk(\"(sent)\", \"span\", \"winner\")\n+                  );\n+                } else if (row[header.TRY_COUNT] >= 3) {\n+                  li.appendChild(\n+                    cldrSurvey.createChunk(\n+                      \"(try#\" + row[header.TRY_COUNT] + \")\",\n+                      \"span\",\n+                      \"loser\"\n+                    )\n+                  );\n+                } else if (row[header.TRY_COUNT] > 0) {\n+                  li.appendChild(\n+                    cldrSurvey.createChunk(\n+                      \"(try#\" + row[header.TRY_COUNT] + \")\",\n+                      \"span\",\n+                      \"warning\"\n+                    )\n+                  );\n+                }\n+                listDiv.appendChild(li);\n \n-                      var saveList = {\n-                        locale: cldrStatus.getCurrentLocale(),\n-                        confirmList: confirmList,\n-                      };\n-\n-                      console.log(saveList.toString());\n-                      console.log(\n-                        \"Submitting \" +\n-                          type +\n-                          \" \" +\n-                          confirmList.length +\n-                          \" for confirm\"\n-                      );\n-                      const curLocale = cldrStatus.getCurrentLocale();\n-                      var url =\n-                        cldrStatus.getContextPath() +\n-                        \"/SurveyAjax?what=oldvotes&_=\" +\n-                        curLocale +\n-                        \"&s=\" +\n-                        cldrStatus.getSessionId() +\n-                        \"&doSubmit=true&\" +\n-                        cacheKill();\n+                li.onclick = (function (li, row, header) {\n+                  return function () {\n+                    if (!row[header.READ_DATE]) {\n                       myLoad(\n-                        url,\n-                        \"(submitting oldvotes \" + curLocale + \")\",\n+                        cldrStatus.getContextPath() +\n+                          \"/SurveyAjax?what=mail&s=\" +\n+                          cldrStatus.getSessionId() +\n+                          \"&markRead=\" +\n+                          row[header.ID] +\n+                          \"&\" +\n+                          cldrSurvey.cacheKill(),\n+                        \"Marking mail read\",\n                         function (json) {\n-                          showLoader(theDiv.loader, cldrText.get(\"loading2\"));\n-                          if (!verifyJson(json, \"oldvotes\")) {\n-                            handleDisconnect(\n-                              \"Error submitting votes!\",\n-                              json,\n-                              \"Error\"\n-                            );\n+                          if (!verifyJson(json, \"mail\")) {\n                             return;\n                           } else {\n-                            reloadV();\n+                            cldrSurvey.addClass(li, \"readMail\"); // mark as read when server answers\n+                            row[header.READ_DATE] = true; // close enough\n                           }\n-                        },\n-                        JSON.stringify(saveList),\n-                        {\n-                          \"Content-Type\": \"application/json\",\n                         }\n                       );\n-                    });\n-\n-                    submit.placeAt(content);\n-                    // hide by default\n-                    setDisplayed(content, false);\n-\n-                    frag.appendChild(content);\n-                    return content;\n-                  }\n+                    }\n+                    cldrSurvey.setDisplayed(contentDiv, false);\n \n-                  if (\n-                    json.oldvotes.uncontested &&\n-                    json.oldvotes.uncontested.length > 0\n-                  ) {\n-                    uncontestedChunk = addOldvotesType(\n-                      \"uncontested\",\n-                      json.oldvotes.uncontested,\n-                      frag,\n-                      navChunk\n-                    );\n-                  }\n-                  if (\n-                    json.oldvotes.contested &&\n-                    json.oldvotes.contested.length > 0\n-                  ) {\n-                    contestedChunk = addOldvotesType(\n-                      \"contested\",\n-                      json.oldvotes.contested,\n-                      frag,\n-                      navChunk\n-                    );\n-                  }\n+                    cldrSurvey.removeAllChildNodes(contentDiv);\n \n-                  if (contestedChunk == null && uncontestedChunk != null) {\n-                    setDisplayed(uncontestedChunk, true); // only item\n-                  } else if (\n-                    contestedChunk != null &&\n-                    uncontestedChunk == null\n-                  ) {\n-                    setDisplayed(contestedChunk, true); // only item\n-                  } else {\n-                    // navigation\n-                    navChunk.appendChild(\n-                      cldrSurvey.createChunk(cldrText.get(\"v_oldvotes_show\"))\n-                    );\n-                    navChunk.appendChild(\n-                      cldrSurvey.createLinkToFn(\n-                        uncontestedChunk.strid,\n-                        function () {\n-                          setDisplayed(contestedChunk, false);\n-                          setDisplayed(uncontestedChunk, true);\n-                        },\n-                        \"button\"\n+                    contentDiv.appendChild(\n+                      cldrSurvey.createChunk(\n+                        \"Date: \" + row[header.QUEUE_DATE],\n+                        \"h2\",\n+                        \"mailHeader\"\n                       )\n                     );\n-                    navChunk.appendChild(\n-                      cldrSurvey.createLinkToFn(\n-                        contestedChunk.strid,\n-                        function () {\n-                          setDisplayed(contestedChunk, true);\n-                          setDisplayed(uncontestedChunk, false);\n-                        },\n-                        \"button\"\n+                    contentDiv.appendChild(\n+                      cldrSurvey.createChunk(\n+                        \"Subject: \" + row[header.SUBJECT],\n+                        \"h2\",\n+                        \"mailHeader\"\n                       )\n                     );\n-\n-                    contestedChunk.appendChild(\n-                      cldrSurvey.createLinkToFn(\n-                        \"v_oldvotes_hide\",\n-                        function () {\n-                          setDisplayed(contestedChunk, false);\n-                        },\n-                        \"button\"\n+                    contentDiv.appendChild(\n+                      cldrSurvey.createChunk(\n+                        \"Message-ID: \" + row[header.ID],\n+                        \"h2\",\n+                        \"mailHeader\"\n                       )\n                     );\n-                    uncontestedChunk.appendChild(\n-                      cldrSurvey.createLinkToFn(\n-                        \"v_oldvotes_hide\",\n-                        function () {\n-                          setDisplayed(uncontestedChunk, false);\n-                        },\n-                        \"button\"\n+                    if (header.USER !== undefined) {\n+                      contentDiv.appendChild(\n+                        cldrSurvey.createChunk(\n+                          \"To: \" + row[header.USER],\n+                          \"h2\",\n+                          \"mailHeader\"\n+                        )\n+                      );\n+                    }\n+                    contentDiv.appendChild(\n+                      cldrSurvey.createChunk(\n+                        row[header.TEXT],\n+                        \"p\",\n+                        \"mailContent\"\n                       )\n                     );\n-                  }\n \n-                  theDiv.appendChild(frag);\n-                } else {\n-                  theDiv.appendChild(\n-                    cldrSurvey.createChunk(\n-                      cldrText.get(\"v_oldvotes_no_old_here\"),\n-                      \"i\",\n-                      \"\"\n-                    )\n-                  );\n-                }\n+                    cldrSurvey.setDisplayed(contentDiv, true);\n+                  };\n+                })(li, row, header);\n               }\n             }\n-            hideLoader(null);\n-          });\n-        } else if (cldrStatus.getCurrentSpecial() == \"mail\") {\n-          var url =\n-            cldrStatus.getContextPath() +\n-            \"/SurveyAjax?what=mail&s=\" +\n-            cldrStatus.getSessionId() +\n-            \"&fetchAll=true&\" +\n-            cacheKill();\n-          myLoad(\n-            url,\n-            \"(loading mail \" + cldrStatus.getCurrentLocale() + \")\",\n-            function (json) {\n-              hideLoader(null, cldrText.get(\"loading2\"));\n-              isLoading = false;\n-              if (!verifyJson(json, \"mail\")) {\n-                return;\n-              } else {\n-                if (json.dataLoadTime) {\n-                  cldrSurvey.updateIf(\"dynload\", json.dataLoadTime);\n-                }\n+          }\n+        }\n+      );\n+    } else if (cldrSurvey.isReport(cldrStatus.getCurrentSpecial())) {\n+      cldrSurvey.showLoader(null);\n+      cldrSurvey.showInPop2(\n+        cldrText.get(\"reportGuidance\"),\n+        null,\n+        null,\n+        null,\n+        true,\n+        true\n+      ); /* show the box the first time */\n+      var url =\n+        cldrStatus.getContextPath() +\n+        \"/SurveyAjax?what=report&x=\" +\n+        cldrStatus.getCurrentSpecial() +\n+        \"&_=\" +\n+        cldrStatus.getCurrentLocale() +\n+        \"&s=\" +\n+        cldrStatus.getSessionId() +\n+        cldrSurvey.cacheKill();\n+      var errFunction = function errFunction(err) {\n+        console.log(\"Error: loading \" + url + \" -> \" + err);\n+        cldrSurvey.hideLoader();\n+        isLoading = false;\n+        const html =\n+          \"<div style='padding-top: 4em; font-size: x-large !important;' class='ferrorbox warning'>\" +\n+          \"<span class='icon i-stop'>\" +\n+          \" &nbsp; &nbsp;</span>Error: could not load: \" +\n+          err +\n+          \"</div>\";\n+        const frag = cldrDomConstruct(html);\n+        flipper.flipTo(pages.other, frag);\n+      };\n+      if (cldrStatus.isDashboard()) {\n+        if (!cldrStatus.isVisitor()) {\n+          const loadHandler = function (json) {\n+            cldrSurvey.hideLoader();\n+            isLoading = false;\n+            // further errors are handled in JSON\n+            showReviewPage(json, function () {\n+              // show function - flip to the 'other' page.\n+              flipper.flipTo(pages.other, null);\n+            });\n+          };\n+          const xhrArgs = {\n+            url: url,\n+            handleAs: \"json\",\n+            load: loadHandler,\n+            error: errFunction,\n+          };\n+          cldrAjax.queueXhr(xhrArgs);\n+        } else {\n+          alert(\"Please login to access Dashboard\");\n+          cldrStatus.setCurrentSpecial(\"\");\n+          cldrStatus.setCurrentLocale(\"\");\n+          reloadV();\n+        }\n+      } else {\n+        cldrSurvey.hideLoader();\n+        const loadHandler = function (html) {\n+          cldrSurvey.hideLoader();\n+          isLoading = false;\n+          const frag = cldrDomConstruct(html);\n+          flipper.flipTo(pages.other, frag);\n+          cldrEvent.hideRightPanel(); // CLDR-14365\n+        };\n+        const xhrArgs = {\n+          url: url,\n+          handleAs: \"html\",\n+          load: loadHandler,\n+          error: errFunction,\n+        };\n+        cldrAjax.queueXhr(xhrArgs);\n+      }\n+    } else if (cldrStatus.getCurrentSpecial() == \"none\") {\n+      // for now - redirect\n+      cldrSurvey.hideLoader();\n+      isLoading = false;\n+      window.location = cldrStatus.getSurvUrl(); // redirect home\n+    } else if (cldrStatus.getCurrentSpecial() == \"locales\") {\n+      cldrSurvey.hideLoader();\n+      isLoading = false;\n+      var theDiv = document.createElement(\"div\");\n+      theDiv.className = \"localeList\";\n+\n+      addTopLocale(\"root\", theDiv);\n+      // top locales\n+      for (var n in locmap.locmap.topLocales) {\n+        var topLoc = locmap.locmap.topLocales[n];\n+        addTopLocale(topLoc, theDiv);\n+      }\n+      flipper.flipTo(pages.other, null);\n+      cldrEvent.filterAllLocale(); // filter for init data\n+      cldrEvent.forceSidebar();\n+      cldrStatus.setCurrentLocale(null);\n+      cldrStatus.setCurrentSpecial(\"locales\");\n+      cldrSurvey.showInPop2(\n+        cldrText.get(\"localesInitialGuidance\"),\n+        null,\n+        null,\n+        null,\n+        true\n+      ); /* show the box the first time */\n+      $(\"#itemInfo\").html(\"\");\n+    } else {\n+      otherSpecial.show(cldrStatus.getCurrentSpecial(), {\n+        flipper: flipper,\n+        pages: pages,\n+      });\n+    }\n+  } // end shower\n+\n+  /**\n+   * Update the #hash and menus to the current settings.\n+   *\n+   * @param doPush {Boolean} if false, do not add to history\n+   */\n+  function updateHashAndMenus(doPush) {\n+    const sessionId = cldrStatus.getSessionId();\n+    const surveyUser = cldrStatus.getSurveyUser();\n+    const userID = surveyUser && surveyUser.id ? surveyUser.id : 0;\n+    const surveyUserPerms = cldrStatus.getPermissions();\n+    const surveyUserURL = {\n+      myAccountSetting: \"survey?do=listu\",\n+      disableMyAccount: \"lock.jsp\",\n+      recentActivity: \"myvotes.jsp?user=\" + userID + \"&s=\" + sessionId,\n+      xmlUpload: \"upload.jsp?a=/cldr-apps/survey&s=\" + sessionId,\n+      manageUser: \"survey?do=list\",\n+      flag: \"tc-flagged.jsp?s=\" + sessionId,\n+      about: \"about.jsp\",\n+      browse: \"browse.jsp\",\n+      adminPanel: \"SurveyAjax?what=admin_panel&s=\" + sessionId,\n+    };\n+\n+    /**\n+     * 'name' - the js/special/___.js name\n+     * 'hidden' - true to hide the item\n+     * 'title' - override of menu name\n+     */\n+    var specialItems = new Array();\n+    if (surveyUser != null) {\n+      specialItems = [\n+        {\n+          divider: true,\n+        },\n \n-                var theDiv = flipper.flipToEmpty(pages.other); // clean slate, and proceed..\n+        {\n+          title: \"Admin Panel\",\n+          url: surveyUserURL.adminPanel,\n+          display: surveyUser && surveyUser.userlevelName === \"ADMIN\",\n+        },\n+        {\n+          divider: true,\n+          display: surveyUser && surveyUser.userlevelName === \"ADMIN\",\n+        },\n \n-                removeAllChildNodes(theDiv);\n+        {\n+          title: \"My Account\",\n+        }, // My Account section", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 3656}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NDgxNA==", "bodyText": "'\u2026possibly a class' - +1 on that, is that being tracked in any of the issues?", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550344814", "createdAt": "2020-12-30T22:29:00Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/js/new/cldrOtherSpecial.js", "diffHunk": "@@ -0,0 +1,146 @@\n+// \"use strict\";\n+// TODO: modernize, make strict, possibly a class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NDkzMg==", "bodyText": "it should be a singleton.", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550344932", "createdAt": "2020-12-30T22:29:44Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/js/new/cldrSurvey.js", "diffHunk": "@@ -12,14 +12,118 @@\n  */\n \n const cldrSurvey = (function () {\n-  const SURVEY_DEBUG = true;\n-\n   /*\n    * INHERITANCE_MARKER indicates that the value of a candidate item is inherited.\n    * Compare INHERITANCE_MARKER in CldrUtility.java.\n    */\n   const INHERITANCE_MARKER = \"\u2191\u2191\u2191\";\n \n+  const xpathMap = new XpathMap(); // TODO: is it really a singleton?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NTA1OA==", "bodyText": "good candidate for splitting out as static data", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550345058", "createdAt": "2020-12-30T22:30:24Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/js/new/cldrSurvey.js", "diffHunk": "@@ -12,14 +12,118 @@\n  */\n \n const cldrSurvey = (function () {\n-  const SURVEY_DEBUG = true;\n-\n   /*\n    * INHERITANCE_MARKER indicates that the value of a candidate item is inherited.\n    * Compare INHERITANCE_MARKER in CldrUtility.java.\n    */\n   const INHERITANCE_MARKER = \"\u2191\u2191\u2191\";\n \n+  const xpathMap = new XpathMap(); // TODO: is it really a singleton?\n+\n+  let wasBusted = false;\n+  let didUnbust = false;\n+\n+  let loadOnOk = null; // TODO: SurveyMain.java writes scripts that try to reference loadOnOk\n+\n+  let clickContinue = null; // TODO: SurveyMain.java writes scripts that try to reference clickContinue\n+\n+  let surveyNextLocaleStamp = 0;\n+  let surveyNextLocaleStampId = \"\";\n+\n+  // hashtable of items already verified\n+  let alreadyVerifyValue = {};\n+\n+  let showers = {};\n+\n+  let progressWord = null;\n+  let ajaxWord = null;\n+  let specialHeader = null; // TODO: supposed to be same as specialHeader in cldrStatus.js, or not?\n+\n+  let saidDisconnect = false;\n+\n+  let updateParts = null;\n+\n+  let cacheKillStamp = null;\n+\n+  const gPopStatus = {\n+    unShow: null,\n+    lastShown: null,\n+    lastTr: null,\n+    popToken: 0,\n+  };\n+\n+  /**\n+   * Table mapping CheckCLDR.StatusAction into capabilities\n+   * @property statusActionTable\n+   */\n+  var statusActionTable = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDM0NTU3NQ==", "bodyText": "FWIW you can write this as:\nreturn {\n INHERITANCE_MARKER,\n addClass,\n addIcon,\n\u2026\n}\nIf the variable and the hash key have the exact same name, the variable doesn't have to be repeated.", "url": "https://github.com/unicode-org/cldr/pull/898#discussion_r550345575", "createdAt": "2020-12-30T22:32:50Z", "author": {"login": "srl295"}, "path": "tools/cldr-apps/src/main/webapp/js/new/cldrSurvey.js", "diffHunk": "@@ -4325,32 +4245,95 @@ const cldrSurvey = (function () {\n       });\n   }\n \n+  function setShower(id, func) {\n+    showers[id] = func;\n+  }\n+\n+  /**\n+   * Add to the radio button, a more button style\n+   *\n+   * @param button\n+   * @returns a newly created label element\n+   */\n+  function wrapRadio(button) {\n+    var label = document.createElement(\"label\");\n+    label.title = \"Vote\";\n+    label.className = \"btn btn-default\";\n+    label.appendChild(button);\n+    $(label).tooltip();\n+    return label;\n+  }\n+\n   /*\n    * Make only these functions accessible from other files:\n    */\n   return {\n-    updateIf: updateIf,\n-    isReport: isReport,\n+    INHERITANCE_MARKER: INHERITANCE_MARKER,\n     addClass: addClass,\n-    removeClass: removeClass,\n-    removeAllChildNodes: removeAllChildNodes,\n-    setDisplayed: setDisplayed,\n-    isInputBusy: isInputBusy,\n-    createChunk: createChunk,\n+    addIcon: addIcon,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "originalPosition": 1627}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMjIwNDYw", "url": "https://github.com/unicode-org/cldr/pull/898#pullrequestreview-560220460", "createdAt": "2020-12-30T22:36:43Z", "commit": {"oid": "c08e5b5b8ce5716922abfa025922896f26fcff4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1858, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}