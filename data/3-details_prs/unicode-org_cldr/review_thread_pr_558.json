{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2ODg3NzM0", "number": 558, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDoxMVrOENIbLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDozNlrOENIbbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjA0OTc1OnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/CLDRConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDoxMVrOGvpHyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDoxMVrOGvpHyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYwOTk5NQ==", "bodyText": "good work here, using the getInstance to allow the class to be static.", "url": "https://github.com/unicode-org/cldr/pull/558#discussion_r452609995", "createdAt": "2020-07-10T04:00:11Z", "author": {"login": "macchiati"}, "path": "tools/java/org/unicode/cldr/util/CLDRConfig.java", "diffHunk": "@@ -533,15 +533,37 @@ public int getProperty(String k, int defVal) {\n         }\n     }\n \n-    public File getCldrBaseDirectory() {\n-        String dir = getProperty(\"CLDR_DIR\", null);\n-        if (dir != null) {\n-            return new File(dir);\n-        } else {\n-            return null;\n+    static class FileWrapper {\n+        private File cldrDir = null;\n+        private FileWrapper() {\n+            String dir = getInstance().getProperty(\"CLDR_DIR\", null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "460a8c1a8605ba6c002449612448144a5387855a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMjA1MDM5OnYy", "diffSide": "RIGHT", "path": "tools/java/org/unicode/cldr/util/CLDRConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDozNlrOGvpILQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwNDowMDozNlrOGvpILQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjYxMDA5Mw==", "bodyText": "I think these can be replaced by the following, avoiding the need for the test and synchronization (which is part of the reason for using the Singleton model).\n    private static FileWrapper fileWrapperInstance = new FileWrapper();\n    private static FileWrapper getFileWrapperInstance() {\n        return fileWrapperInstance;\n    }", "url": "https://github.com/unicode-org/cldr/pull/558#discussion_r452610093", "createdAt": "2020-07-10T04:00:36Z", "author": {"login": "macchiati"}, "path": "tools/java/org/unicode/cldr/util/CLDRConfig.java", "diffHunk": "@@ -533,15 +533,37 @@ public int getProperty(String k, int defVal) {\n         }\n     }\n \n-    public File getCldrBaseDirectory() {\n-        String dir = getProperty(\"CLDR_DIR\", null);\n-        if (dir != null) {\n-            return new File(dir);\n-        } else {\n-            return null;\n+    static class FileWrapper {\n+        private File cldrDir = null;\n+        private FileWrapper() {\n+            String dir = getInstance().getProperty(\"CLDR_DIR\", null);\n+            if (dir != null) {\n+                cldrDir = new File(dir);\n+            } else {\n+                cldrDir = null;\n+            }\n+        }\n+        public File getCldrDir() {\n+            return this.cldrDir;\n+        }\n+        // singleton\n+        private static FileWrapper fileWrapperInstance = null;\n+        public static FileWrapper getFileWrapperInstance() {\n+            if (fileWrapperInstance == null) {\n+                synchronized(FileWrapper.class) {\n+                    if (fileWrapperInstance == null) {\n+                        fileWrapperInstance = new FileWrapper();\n+                    }\n+                }\n+            }\n+            return fileWrapperInstance;\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "460a8c1a8605ba6c002449612448144a5387855a"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 412, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}