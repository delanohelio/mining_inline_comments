{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3Mjk2MzI2", "number": 219, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozOTozN1rOEYFbgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozOTozN1rOEYFbgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjkwMjQxOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/slice/SliceDeleteTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozOTozN1rOHAOrQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxNDozOTozN1rOHAOrQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDAwMjQ5OQ==", "bodyText": "@g4s8 I'd suggest to add one more item to storage and verify it was not deleted", "url": "https://github.com/artipie/http/pull/219#discussion_r470002499", "createdAt": "2020-08-13T14:39:37Z", "author": {"login": "olenagerasimova"}, "path": "src/test/java/com/artipie/http/slice/SliceDeleteTest.java", "diffHunk": "@@ -23,107 +23,60 @@\n  */\n package com.artipie.http.slice;\n \n-import com.artipie.asto.Content;\n import com.artipie.asto.Key;\n import com.artipie.asto.Storage;\n+import com.artipie.asto.blocking.BlockingStorage;\n import com.artipie.asto.memory.InMemoryStorage;\n-import com.artipie.http.Slice;\n import com.artipie.http.hm.RsHasStatus;\n+import com.artipie.http.hm.SliceHasResponse;\n import com.artipie.http.rq.RequestLine;\n+import com.artipie.http.rq.RqMethod;\n import com.artipie.http.rs.RsStatus;\n-import io.reactivex.Flowable;\n-import java.util.Collections;\n-import java.util.concurrent.CompletableFuture;\n import org.hamcrest.MatcherAssert;\n import org.hamcrest.core.IsEqual;\n-import org.junit.jupiter.api.Disabled;\n import org.junit.jupiter.api.Test;\n \n /**\n  * Tests for {@link SliceDelete}.\n  *\n  * @since 0.10\n+ * @checkstyle ClassDataAbstractionCouplingCheck (500 lines)\n  */\n final class SliceDeleteTest {\n \n+    /**\n+     * Storage.\n+     */\n+    private final Storage storage = new InMemoryStorage();\n+\n     @Test\n-    @Disabled\n     void deleteCorrectEntry() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78bb9eb6fa8baa13a586470642dd4b99b5d98200"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1902, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}