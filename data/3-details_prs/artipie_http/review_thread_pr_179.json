{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2NDYzMDU3", "number": 179, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0OToxMVrOEGwkRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo1MjowNVrOEGwp4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTIyNjI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/rs/ContentType.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0OToxMVrOGlwLwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0OToxMVrOGlwLwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjIzOTkzOA==", "bodyText": "@olegmoz since 0.11", "url": "https://github.com/artipie/http/pull/179#discussion_r442239938", "createdAt": "2020-06-18T13:49:11Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/rs/ContentType.java", "diffHunk": "@@ -0,0 +1,58 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.rq.RqHeaders;\n+\n+/**\n+ * Content-Type header.\n+ *\n+ * @since 0.10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTIyODAwOnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0OTozMlrOGlwM1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo0OTozMlrOGlwM1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MDIxMg==", "bodyText": "@olegmoz since 0.11", "url": "https://github.com/artipie/http/pull/179#discussion_r442240212", "createdAt": "2020-06-18T13:49:32Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTIzMTU5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo1MDoxN1rOGlwPGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo1MDoxN1rOGlwPGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MDc5NQ==", "bodyText": "@olegmoz let's add one test that will extract content type when multiple Content-Type headers exist", "url": "https://github.com/artipie/http/pull/179#discussion_r442240795", "createdAt": "2020-06-18T13:50:17Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10\n+ */\n+public final class ContentTypeTest {\n+\n+    @Test\n+    void shouldHaveExpectedName() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getKey(),\n+            new IsEqual<>(\"Content-Type\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldHaveExpectedValue() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getValue(),\n+            new IsEqual<>(\"10\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldExtractValueFromHeaders() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NTI0MDY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo1MjowNVrOGlwUpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMzo1MjowNVrOGlwUpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjI0MjIxMw==", "bodyText": "@olegmoz add one test that will fail to extract content type when there exist at least one header of different type.", "url": "https://github.com/artipie/http/pull/179#discussion_r442242213", "createdAt": "2020-06-18T13:52:05Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/rs/ContentTypeTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.rs;\n+\n+import com.artipie.http.Headers;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Assertions;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link ContentType}.\n+ *\n+ * @since 0.10\n+ */\n+public final class ContentTypeTest {\n+\n+    @Test\n+    void shouldHaveExpectedName() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getKey(),\n+            new IsEqual<>(\"Content-Type\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldHaveExpectedValue() {\n+        MatcherAssert.assertThat(\n+            new ContentType(\"10\").getValue(),\n+            new IsEqual<>(\"10\")\n+        );\n+    }\n+\n+    @Test\n+    void shouldExtractValueFromHeaders() {\n+        final String value = \"application/octet-stream\";\n+        final ContentType header = new ContentType(\n+            new Headers.From(\n+                new Header(\"Content-Length\", \"11\"),\n+                new Header(\"content-type\", value),\n+                new Header(\"X-Something\", \"Some Value\")\n+            )\n+        );\n+        MatcherAssert.assertThat(header.getValue(), new IsEqual<>(value));\n+    }\n+\n+    @Test\n+    void shouldFailToExtractValueFromEmptyHeaders() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddf8e74a400e634becc3eb4a52994b7a27fc92c2"}, "originalPosition": 69}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1872, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}