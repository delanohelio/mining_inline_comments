{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwODI0NzQy", "number": 112, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTo1NToxNlrODxEQ0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo0NDozNFrODxXNXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzc2NjU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/auth/BasicIdentities.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTo1NToxNlrOGEWjqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzowNTowOVrOGEtYew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzA2Nw==", "bodyText": "@IlyaMoskva use regex matching to extract username and password instead of string manipulation. This will be more readable and less verbose.", "url": "https://github.com/artipie/http/pull/112#discussion_r407217067", "createdAt": "2020-04-12T15:55:16Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/auth/BasicIdentities.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import com.artipie.http.rq.RqHeaders;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.text.Base64Decoded;\n+\n+/**\n+ * BasicIdentities. Implementation of {@link Identities} for Basic authorization.\n+ *\n+ * @since 0.8\n+ * @checkstyle NestedIfDepthCheck (500 lines)\n+ */\n+public final class BasicIdentities implements Identities {\n+\n+    /**\n+     * Concrete implementation for User Identification.\n+     */\n+    private final IdentityProvider idprovider;\n+\n+    /**\n+     * Ctor.\n+     * @param idprovider Concrete implementation for User Identification.\n+     */\n+    BasicIdentities(final IdentityProvider idprovider) {\n+        this.idprovider = idprovider;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"PMD.AvoidDeeplyNestedIfStmts\")\n+    public Optional<String> user(final String line,\n+        final Iterable<Map.Entry<String, String>> headers) {\n+        final String prefix = \"Basic \";\n+        Optional<String> result = Optional.empty();\n+        final RqHeaders hdrs = new RqHeaders(headers, \"Authorization\");\n+        if (!hdrs.isEmpty()) {\n+            final String cred = hdrs.get(0);\n+            if (cred.startsWith(prefix)) {\n+                final String credentials =\n+                    new Base64Decoded(cred.substring(prefix.length())).toString();\n+                final int delimiter = credentials.indexOf(':');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTAzNQ==", "bodyText": "Fixed, thanks", "url": "https://github.com/artipie/http/pull/112#discussion_r407591035", "createdAt": "2020-04-13T17:05:09Z", "author": {"login": "IlyaMoskva"}, "path": "src/main/java/com/artipie/http/auth/BasicIdentities.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import com.artipie.http.rq.RqHeaders;\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.text.Base64Decoded;\n+\n+/**\n+ * BasicIdentities. Implementation of {@link Identities} for Basic authorization.\n+ *\n+ * @since 0.8\n+ * @checkstyle NestedIfDepthCheck (500 lines)\n+ */\n+public final class BasicIdentities implements Identities {\n+\n+    /**\n+     * Concrete implementation for User Identification.\n+     */\n+    private final IdentityProvider idprovider;\n+\n+    /**\n+     * Ctor.\n+     * @param idprovider Concrete implementation for User Identification.\n+     */\n+    BasicIdentities(final IdentityProvider idprovider) {\n+        this.idprovider = idprovider;\n+    }\n+\n+    @Override\n+    @SuppressWarnings(\"PMD.AvoidDeeplyNestedIfStmts\")\n+    public Optional<String> user(final String line,\n+        final Iterable<Map.Entry<String, String>> headers) {\n+        final String prefix = \"Basic \";\n+        Optional<String> result = Optional.empty();\n+        final RqHeaders hdrs = new RqHeaders(headers, \"Authorization\");\n+        if (!hdrs.isEmpty()) {\n+            final String cred = hdrs.get(0);\n+            if (cred.startsWith(prefix)) {\n+                final String credentials =\n+                    new Base64Decoded(cred.substring(prefix.length())).toString();\n+                final int delimiter = credentials.indexOf(':');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzA2Nw=="}, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzc2ODExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTo1NzozMFrOGEWkdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzowNToyNVrOGEtY_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzI3MA==", "bodyText": "@IlyaMoskva why login? why not just username?", "url": "https://github.com/artipie/http/pull/112#discussion_r407217270", "createdAt": "2020-04-12T15:57:30Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {\n+\n+    /**\n+     * Check does user exist.\n+     * @param login Username\n+     * @param password Base64 encoded password\n+     */\n+    void verify(String login, String password);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTE2Ng==", "bodyText": "Good catch, fixed", "url": "https://github.com/artipie/http/pull/112#discussion_r407591166", "createdAt": "2020-04-13T17:05:25Z", "author": {"login": "IlyaMoskva"}, "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {\n+\n+    /**\n+     * Check does user exist.\n+     * @param login Username\n+     * @param password Base64 encoded password\n+     */\n+    void verify(String login, String password);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzI3MA=="}, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyNzc2OTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMlQxNTo1OToyN1rOGEWlYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzowNTo0OVrOGEtZwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzUwNQ==", "bodyText": "@IlyaMoskva It's ugly name, provider suffix is redundant. Every class provides something. How about simple Authentication or UserVerification or something like that.", "url": "https://github.com/artipie/http/pull/112#discussion_r407217505", "createdAt": "2020-04-12T15:59:27Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5MTM2Mg==", "bodyText": "hm... Ok, You're right. Fixed", "url": "https://github.com/artipie/http/pull/112#discussion_r407591362", "createdAt": "2020-04-13T17:05:49Z", "author": {"login": "IlyaMoskva"}, "path": "src/main/java/com/artipie/http/auth/IdentityProvider.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authorization mechanism to verify user.\n+ * @since 0.6\n+ */\n+public interface IdentityProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzIxNzUwNQ=="}, "originalCommit": {"oid": "e3422cd5e3b2004c9044bed22b8abf5996b21997"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDg2OTk5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo0NDoxOVrOGEyr-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo1NzoxOFrOGEzG9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3Nzk0Ng==", "bodyText": "@IlyaMoskva since 0.8", "url": "https://github.com/artipie/http/pull/112#discussion_r407677946", "createdAt": "2020-04-13T19:44:19Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.iterable.IterableOf;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link BasicIdentities}.\n+ *\n+ * @since 0.6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092da36a71b658010d92240b382415195d27100"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NDg1Mw==", "bodyText": "Fixed", "url": "https://github.com/artipie/http/pull/112#discussion_r407684853", "createdAt": "2020-04-13T19:57:18Z", "author": {"login": "IlyaMoskva"}, "path": "src/test/java/com/artipie/http/auth/BasicIdentitiesTest.java", "diffHunk": "@@ -0,0 +1,75 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+import java.util.Map;\n+import java.util.Optional;\n+import org.cactoos.iterable.IterableOf;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.hamcrest.core.IsEqual;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link BasicIdentities}.\n+ *\n+ * @since 0.6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3Nzk0Ng=="}, "originalCommit": {"oid": "7092da36a71b658010d92240b382415195d27100"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDg3MDcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/auth/Authentication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo0NDozNFrOGEysbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo1NzozMFrOGEzHYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA2Mg==", "bodyText": "@IlyaMoskva since 0.8", "url": "https://github.com/artipie/http/pull/112#discussion_r407678062", "createdAt": "2020-04-13T19:44:34Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authentication mechanism to verify user.\n+ * @since 0.6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7092da36a71b658010d92240b382415195d27100"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY4NDk2Mw==", "bodyText": "Fixed", "url": "https://github.com/artipie/http/pull/112#discussion_r407684963", "createdAt": "2020-04-13T19:57:30Z", "author": {"login": "IlyaMoskva"}, "path": "src/main/java/com/artipie/http/auth/Authentication.java", "diffHunk": "@@ -0,0 +1,39 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.auth;\n+\n+/**\n+ * Authentication mechanism to verify user.\n+ * @since 0.6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA2Mg=="}, "originalCommit": {"oid": "7092da36a71b658010d92240b382415195d27100"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1823, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}