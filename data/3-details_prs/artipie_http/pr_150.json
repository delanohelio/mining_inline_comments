{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NTU3NDU0", "number": 150, "title": "#149 - Exception logging in LoggingSlice", "bodyText": "Closes #149\nAdded exception logging to LoggingSlice", "createdAt": "2020-05-18T14:57:52Z", "url": "https://github.com/artipie/http/pull/150", "merged": true, "mergeCommit": {"oid": "3206b4369d45fae534dc17f6f8edc122c3e77ca0"}, "closed": true, "closedAt": "2020-05-22T13:02:10Z", "author": {"login": "olegmoz"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcihLc8gH2gAyNDE5NTU3NDU0OmI0MmRhMDlkMGE3NmY2YTM2ZWEyZmI4M2MxMjc0MDJlOGI0ODVkY2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjx57PgFqTQxNjg5MTY2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b42da09d0a76f6a36ea2fb83c127402e8b485dcb", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/b42da09d0a76f6a36ea2fb83c127402e8b485dcb", "committedDate": "2020-05-18T14:58:53Z", "message": "#149 - Exception logging in LoggingSlice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjU5NDcw", "url": "https://github.com/artipie/http/pull/150#pullrequestreview-414659470", "createdAt": "2020-05-19T17:16:18Z", "commit": {"oid": "b42da09d0a76f6a36ea2fb83c127402e8b485dcb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoxNjoxOFrOGXqhbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoyNDo1MlrOGXq2WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2NzExNw==", "bodyText": "@olegmoz Wouldn't we be loggin the exception twice in this case (one in line 96 and another in 103)?", "url": "https://github.com/artipie/http/pull/150#discussion_r427467117", "createdAt": "2020-05-19T17:16:18Z", "author": {"login": "paulodamaso"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -81,8 +87,33 @@ public Response response(\n         final StringBuilder msg = new StringBuilder(\">> \").append(line);\n         LoggingSlice.append(msg, headers);\n         Logger.log(this.level, this.slice, msg.toString());\n-        return connection -> this.slice.response(line, headers, body)\n-            .send(new LoggingConnection(connection));\n+        return connection -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42da09d0a76f6a36ea2fb83c127402e8b485dcb"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2ODk0NA==", "bodyText": "@olegmoz How about creating a new class, Logged? We could reuse it in all other slices, and it would be easier to unit test it", "url": "https://github.com/artipie/http/pull/150#discussion_r427468944", "createdAt": "2020-05-19T17:19:23Z", "author": {"login": "paulodamaso"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -81,8 +87,33 @@ public Response response(\n         final StringBuilder msg = new StringBuilder(\">> \").append(line);\n         LoggingSlice.append(msg, headers);\n         Logger.log(this.level, this.slice, msg.toString());\n-        return connection -> this.slice.response(line, headers, body)\n-            .send(new LoggingConnection(connection));\n+        return connection -> {\n+            try {\n+                return this.slice.response(line, headers, body)\n+                    .send(new LoggingConnection(connection))\n+                    .exceptionally(\n+                        throwable -> {\n+                            this.log(throwable);\n+                            Throwables.throwIfUnchecked(throwable);\n+                            throw new CompletionException(throwable);\n+                        }\n+                    );\n+            } catch (final Exception ex) {\n+                this.log(ex);\n+                throw ex;\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Writes throwable to logger.\n+     *\n+     * @param throwable Throwable to be logged.\n+     */\n+    private void log(final Throwable throwable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42da09d0a76f6a36ea2fb83c127402e8b485dcb"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ3MjQ3Mw==", "bodyText": "@olegmoz I don't see the utility of these tests; we are not assuring that the exception was logged. How about:\n\nextract the private log method to a new class (see above)\nmake this class receive a writer\nexecute the LoggingSlicewith error and check if the error log was appended to the writer", "url": "https://github.com/artipie/http/pull/150#discussion_r427472473", "createdAt": "2020-05-19T17:24:52Z", "author": {"login": "paulodamaso"}, "path": "src/test/java/com/artipie/http/slice/LoggingSliceTest.java", "diffHunk": "@@ -61,4 +67,63 @@ void shouldLogRequestAndResponse() {\n             (status, headers, body) -> CompletableFuture.allOf()\n         ).toCompletableFuture().join();\n     }\n+\n+    @Test\n+    void shouldLogAndPreserveExceptionInSlice() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b42da09d0a76f6a36ea2fb83c127402e8b485dcb"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea41dadac6cced430ae7643fda00386e91cab835", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/ea41dadac6cced430ae7643fda00386e91cab835", "committedDate": "2020-05-20T08:32:33Z", "message": "Merge branch 'master' into 149-logging-slice-errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "551295139363c7c6cd61e1f1aa1d51a45de16121", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/551295139363c7c6cd61e1f1aa1d51a45de16121", "committedDate": "2020-05-21T08:21:50Z", "message": "Merge branch 'master' into 149-logging-slice-errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "733e9781a7cbe6127d48e484856d7cdb60717184", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/733e9781a7cbe6127d48e484856d7cdb60717184", "committedDate": "2020-05-21T14:44:26Z", "message": "Merge branch 'master' into 149-logging-slice-errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODM1MDA3", "url": "https://github.com/artipie/http/pull/150#pullrequestreview-416835007", "createdAt": "2020-05-22T11:18:43Z", "commit": {"oid": "733e9781a7cbe6127d48e484856d7cdb60717184"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToxODo0M1rOGZTnoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMToyMTozNFrOGZTr8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE4OTAyNA==", "bodyText": "@olegmoz why CompletionException here? According to the javadoc, it can be\n\nthrown when an error or other exception is encountered in the course of completing a result or task\n\nBut this throwable can be propagated from underlying slice error.", "url": "https://github.com/artipie/http/pull/150#discussion_r429189024", "createdAt": "2020-05-22T11:18:43Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -81,8 +87,33 @@ public Response response(\n         final StringBuilder msg = new StringBuilder(\">> \").append(line);\n         LoggingSlice.append(msg, headers);\n         Logger.log(this.level, this.slice, msg.toString());\n-        return connection -> this.slice.response(line, headers, body)\n-            .send(new LoggingConnection(connection));\n+        return connection -> {\n+            try {\n+                return this.slice.response(line, headers, body)\n+                    .send(new LoggingConnection(connection))\n+                    .exceptionally(\n+                        throwable -> {\n+                            this.log(throwable);\n+                            Throwables.throwIfUnchecked(throwable);\n+                            throw new CompletionException(throwable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733e9781a7cbe6127d48e484856d7cdb60717184"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MDEyOQ==", "bodyText": "@olegmoz these 3 lines can be simplified to:\nLogger.log(this.level, this.slice, \"Failure: %[exception]s\", throwable);", "url": "https://github.com/artipie/http/pull/150#discussion_r429190129", "createdAt": "2020-05-22T11:21:34Z", "author": {"login": "g4s8"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -81,8 +87,33 @@ public Response response(\n         final StringBuilder msg = new StringBuilder(\">> \").append(line);\n         LoggingSlice.append(msg, headers);\n         Logger.log(this.level, this.slice, msg.toString());\n-        return connection -> this.slice.response(line, headers, body)\n-            .send(new LoggingConnection(connection));\n+        return connection -> {\n+            try {\n+                return this.slice.response(line, headers, body)\n+                    .send(new LoggingConnection(connection))\n+                    .exceptionally(\n+                        throwable -> {\n+                            this.log(throwable);\n+                            Throwables.throwIfUnchecked(throwable);\n+                            throw new CompletionException(throwable);\n+                        }\n+                    );\n+            } catch (final Exception ex) {\n+                this.log(ex);\n+                throw ex;\n+            }\n+        };\n+    }\n+\n+    /**\n+     * Writes throwable to logger.\n+     *\n+     * @param throwable Throwable to be logged.\n+     */\n+    private void log(final Throwable throwable) {\n+        final StringWriter writer = new StringWriter();\n+        throwable.printStackTrace(new PrintWriter(writer));\n+        Logger.log(this.level, this.slice, \"Failure: %s\", writer.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733e9781a7cbe6127d48e484856d7cdb60717184"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ea672325ea538a185b0bc96f91544d6195eb49", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/18ea672325ea538a185b0bc96f91544d6195eb49", "committedDate": "2020-05-22T11:47:27Z", "message": "#149 - Changes by review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODkxNjY3", "url": "https://github.com/artipie/http/pull/150#pullrequestreview-416891667", "createdAt": "2020-05-22T13:02:03Z", "commit": {"oid": "18ea672325ea538a185b0bc96f91544d6195eb49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3189, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}