{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Mjk5MzM0", "number": 204, "title": "Unit test for group slice", "bodyText": "#203 - added a unit test for group slice to verify that slice returns expected status code from grouped items.", "createdAt": "2020-07-21T09:12:39Z", "url": "https://github.com/artipie/http/pull/204", "merged": true, "mergeCommit": {"oid": "d6bf4285e7edae5661ce9112d11d4e6e3f812f97"}, "closed": true, "closedAt": "2020-07-22T10:48:33Z", "author": {"login": "g4s8"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3CkJ2gH2gAyNDU0Mjk5MzM0OmU5NDliZjI4YmQ5NDA0ZmUxZTA2YmYzZDMwZWVlODE2Mzg5Njc4M2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3YfLzAFqTQ1MzIwMDk2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e949bf28bd9404fe1e06bf3d30eee8163896783c", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/http/commit/e949bf28bd9404fe1e06bf3d30eee8163896783c", "committedDate": "2020-07-21T09:11:13Z", "message": "#203 - unit test for group slice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyMzYwMjU4", "url": "https://github.com/artipie/http/pull/204#pullrequestreview-452360258", "createdAt": "2020-07-21T11:22:35Z", "commit": {"oid": "e949bf28bd9404fe1e06bf3d30eee8163896783c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMToyMjozNVrOG0zhfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQxMToyNDoyMlrOG0zksw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyMzI5Mw==", "bodyText": "@g4s8 do not really understand why you want to use OneTimePublisher outside of tests", "url": "https://github.com/artipie/http/pull/204#discussion_r458023293", "createdAt": "2020-07-21T11:22:35Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/group/GroupConnection.java", "diffHunk": "@@ -70,7 +71,7 @@\n         synchronized (this.results) {\n             return this.results.complete(\n                 this.pos,\n-                new GroupResult(status, headers, body),\n+                new GroupResult(status, headers, new OneTimePublisher<>(body)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e949bf28bd9404fe1e06bf3d30eee8163896783c"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODAyNDExNQ==", "bodyText": "@g4s8 I'd suggest to add failing slice and slice that never responds to the mix, to see if GroupSlice replies as soon as there is an OK response", "url": "https://github.com/artipie/http/pull/204#discussion_r458024115", "createdAt": "2020-07-21T11:24:22Z", "author": {"login": "olegmoz"}, "path": "src/test/java/com/artipie/http/group/GroupSliceTest.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.group;\n+\n+import com.artipie.http.Slice;\n+import com.artipie.http.async.AsyncSlice;\n+import com.artipie.http.hm.RsHasStatus;\n+import com.artipie.http.hm.SliceHasResponse;\n+import com.artipie.http.rq.RequestLine;\n+import com.artipie.http.rq.RqMethod;\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.StandardRs;\n+import com.artipie.http.slice.SliceSimple;\n+import java.time.Duration;\n+import java.util.concurrent.CompletableFuture;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test case for {@link GroupSlice}.\n+ *\n+ * @since 1.0\n+ */\n+final class GroupSliceTest {\n+\n+    @Test\n+    void groupFromMultipleSources() {\n+        // @checkstyle MagicNumberCheck (10 lines)\n+        MatcherAssert.assertThat(\n+            new GroupSlice(\n+                new SliceWithDelay(new SliceSimple(StandardRs.NOT_FOUND), Duration.ofMillis(250)),\n+                new SliceWithDelay(new SliceSimple(StandardRs.NOT_FOUND), Duration.ofMillis(50)),\n+                new SliceWithDelay(new SliceSimple(StandardRs.OK), Duration.ofMillis(150)),\n+                new SliceWithDelay(new SliceSimple(StandardRs.NOT_FOUND), Duration.ofMillis(200))\n+            ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e949bf28bd9404fe1e06bf3d30eee8163896783c"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "98a0f90bfb566c679642568384dcb0c60fc1708d", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/http/commit/98a0f90bfb566c679642568384dcb0c60fc1708d", "committedDate": "2020-07-21T17:59:24Z", "message": "#203 - review fixes, test improvements and bug fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMDUyNzA2", "url": "https://github.com/artipie/http/pull/204#pullrequestreview-453052706", "createdAt": "2020-07-22T07:15:42Z", "commit": {"oid": "98a0f90bfb566c679642568384dcb0c60fc1708d"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoxNTo0M1rOG1VtsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMlQwNzoxNTo0M1rOG1VtsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODU4MzQ3Mw==", "bodyText": "@g4s8 this code looks dangerous to me. Trying to log such object in production code may require it to block or crash. I think that common contract for toString() is to be non-blocking and be safe as possible", "url": "https://github.com/artipie/http/pull/204#discussion_r458583473", "createdAt": "2020-07-22T07:15:43Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/async/AsyncResponse.java", "diffHunk": "@@ -60,4 +61,22 @@ public AsyncResponse(final CompletionStage<? extends Response> future) {\n     public CompletionStage<Void> send(final Connection connection) {\n         return this.future.thenCompose(rsp -> rsp.send(connection));\n     }\n+\n+    // @checkstyle ReturnCountCheck (15 lines)\n+    @Override\n+    @SuppressWarnings(\"PMD.OnlyOneReturn\")\n+    public String toString() {\n+        try {\n+            return String.format(\n+                \"%s: %s\",\n+                this.getClass().getSimpleName(),\n+                this.future.toCompletableFuture().get()\n+            );\n+        } catch (final InterruptedException ignore) {\n+            Thread.currentThread().interrupt();\n+            return \"\";\n+        } catch (final ExecutionException err) {\n+            throw new IllegalStateException(err);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98a0f90bfb566c679642568384dcb0c60fc1708d"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6a7fcbadfbd82370d8c87aa9db3a584fe97c568", "author": {"user": {"login": "g4s8", "name": "Kirill"}}, "url": "https://github.com/artipie/http/commit/d6a7fcbadfbd82370d8c87aa9db3a584fe97c568", "committedDate": "2020-07-22T10:39:48Z", "message": "#203 - review fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMjAwOTYx", "url": "https://github.com/artipie/http/pull/204#pullrequestreview-453200961", "createdAt": "2020-07-22T10:43:42Z", "commit": {"oid": "d6a7fcbadfbd82370d8c87aa9db3a584fe97c568"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3235, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}