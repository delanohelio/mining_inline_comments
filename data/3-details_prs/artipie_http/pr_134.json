{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDc5MDE0", "number": 134, "title": "#132 Slice with headers", "bodyText": "Closes #132. I've added slice decorator SliceWithHeaders.", "createdAt": "2020-04-22T06:38:26Z", "url": "https://github.com/artipie/http/pull/134", "merged": true, "mergeCommit": {"oid": "7a5f7c86f91e5841f1e6fcbe36943eafcc6f4328"}, "closed": true, "closedAt": "2020-04-22T13:07:40Z", "author": {"login": "olenagerasimova"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaCakygH2gAyNDA3MDc5MDE0OjEwZDYyNDIwOTU4YTQyNWVhZWE3NjlkNzc1ZTJkZDJjMzUzYWQyNTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaIAMfAFqTM5ODE3MDYyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "10d62420958a425eaea769d775e2dd2c353ad252", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/10d62420958a425eaea769d775e2dd2c353ad252", "committedDate": "2020-04-22T06:36:57Z", "message": "#132 Slice with headers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDMxMTkw", "url": "https://github.com/artipie/http/pull/134#pullrequestreview-398031190", "createdAt": "2020-04-22T09:56:44Z", "commit": {"oid": "10d62420958a425eaea769d775e2dd2c353ad252"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTo1Njo0NVrOGJt62Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQwOTo1ODoxNVrOGJt-3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg0MjcxMw==", "bodyText": "@olenagerasimova you can use Header class from #133", "url": "https://github.com/artipie/http/pull/134#discussion_r412842713", "createdAt": "2020-04-22T09:56:45Z", "author": {"login": "g4s8"}, "path": "src/test/java/com/artipie/http/slice/SliceWithHeadersTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasHeaders;\n+import com.artipie.http.rs.StandardRs;\n+import io.reactivex.Flowable;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link SliceWithHeaders}.\n+ * @since 0.9\n+ */\n+class SliceWithHeadersTest {\n+\n+    @Test\n+    void addsHeaders() {\n+        final String header = \"Content-type\";\n+        final String value = \"text/plain\";\n+        MatcherAssert.assertThat(\n+            new SliceWithHeaders(\n+                new SliceSimple(StandardRs.EMPTY), new Headers.From(header, value)\n+            ).response(\"GET /some/text HTTP/1.1\", Headers.EMPTY, Flowable.empty()),\n+            new RsHasHeaders(new MapEntry<>(header, value))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d62420958a425eaea769d775e2dd2c353ad252"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjg0Mzc0MQ==", "bodyText": "@olenagerasimova I think we need to test that this slice doesn't override origin response headers", "url": "https://github.com/artipie/http/pull/134#discussion_r412843741", "createdAt": "2020-04-22T09:58:15Z", "author": {"login": "g4s8"}, "path": "src/test/java/com/artipie/http/slice/SliceWithHeadersTest.java", "diffHunk": "@@ -0,0 +1,52 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Headers;\n+import com.artipie.http.hm.RsHasHeaders;\n+import com.artipie.http.rs.StandardRs;\n+import io.reactivex.Flowable;\n+import org.cactoos.map.MapEntry;\n+import org.hamcrest.MatcherAssert;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Test for {@link SliceWithHeaders}.\n+ * @since 0.9\n+ */\n+class SliceWithHeadersTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d62420958a425eaea769d775e2dd2c353ad252"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44457bafaffa0f04dc2b25279ef05115c3cdf197", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/44457bafaffa0f04dc2b25279ef05115c3cdf197", "committedDate": "2020-04-22T12:51:35Z", "message": "Merge branch 'master' of https://github.com/artipie/http into 132"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10522fea7158bb74c24114c6ab8e31103a3d9711", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/10522fea7158bb74c24114c6ab8e31103a3d9711", "committedDate": "2020-04-22T12:55:20Z", "message": "#132 CR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTcwNjIx", "url": "https://github.com/artipie/http/pull/134#pullrequestreview-398170621", "createdAt": "2020-04-22T13:07:34Z", "commit": {"oid": "10522fea7158bb74c24114c6ab8e31103a3d9711"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3181, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}