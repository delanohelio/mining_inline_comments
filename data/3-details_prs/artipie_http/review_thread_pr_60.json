{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMzI0NTEx", "number": 60, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNDozMlrODj7DUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNToyMFrODj7EOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTk0MjU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/hm/RsHasBody.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNDozMlrOFv_5EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0Mjo1NVrOFweJoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NDE5Mg==", "bodyText": "@olegmoz we can use join() instead of get() to avoid catching exceptions. join will wrap checked exceptions to unchecked.", "url": "https://github.com/artipie/http/pull/60#discussion_r385874192", "createdAt": "2020-02-28T19:14:32Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/hm/RsHasBody.java", "diffHunk": "@@ -74,7 +77,11 @@ public void describeTo(final Description description) {\n     @Override\n     public boolean matchesSafely(final Response item) {\n         final AtomicReference<byte[]> out = new AtomicReference<>();\n-        item.send(new RsHasBody.FakeConnection(out));\n+        try {\n+            item.send(new RsHasBody.FakeConnection(out)).toCompletableFuture().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0219e4171b5f0e22e155ed46ed39989d53ea115"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIzNjE4Nw==", "bodyText": "@Vatavuk good point, thank you! However I cannot use 'join()' method, because our target java version is 1.8 and 'join' method is there since 13.", "url": "https://github.com/artipie/http/pull/60#discussion_r386236187", "createdAt": "2020-03-02T07:46:40Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/hm/RsHasBody.java", "diffHunk": "@@ -74,7 +77,11 @@ public void describeTo(final Description description) {\n     @Override\n     public boolean matchesSafely(final Response item) {\n         final AtomicReference<byte[]> out = new AtomicReference<>();\n-        item.send(new RsHasBody.FakeConnection(out));\n+        try {\n+            item.send(new RsHasBody.FakeConnection(out)).toCompletableFuture().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NDE5Mg=="}, "originalCommit": {"oid": "c0219e4171b5f0e22e155ed46ed39989d53ea115"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTk1Mg==", "bodyText": "@olegmoz it is part of 1.8:\nhttps://docs.oracle.com/javase/8/docs/api/java/util/concurrent/CompletableFuture.html#join--", "url": "https://github.com/artipie/http/pull/60#discussion_r386369952", "createdAt": "2020-03-02T12:42:55Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/hm/RsHasBody.java", "diffHunk": "@@ -74,7 +77,11 @@ public void describeTo(final Description description) {\n     @Override\n     public boolean matchesSafely(final Response item) {\n         final AtomicReference<byte[]> out = new AtomicReference<>();\n-        item.send(new RsHasBody.FakeConnection(out));\n+        try {\n+            item.send(new RsHasBody.FakeConnection(out)).toCompletableFuture().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NDE5Mg=="}, "originalCommit": {"oid": "c0219e4171b5f0e22e155ed46ed39989d53ea115"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4OTk0NDkwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/artipie/http/hm/RsHasStatus.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOToxNToyMFrOFv_6gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzo0Njo1MVrOFwV_Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NDU2MA==", "bodyText": "@olegmoz we can use join() instead of get() to avoid catching exceptions.", "url": "https://github.com/artipie/http/pull/60#discussion_r385874560", "createdAt": "2020-02-28T19:15:20Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/hm/RsHasStatus.java", "diffHunk": "@@ -70,7 +72,11 @@ public void describeTo(final Description description) {\n     @Override\n     public boolean matchesSafely(final Response item) {\n         final AtomicInteger out = new AtomicInteger();\n-        item.send(new RsHasStatus.FakeConnection(out));\n+        try {\n+            item.send(new FakeConnection(out)).toCompletableFuture().get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0219e4171b5f0e22e155ed46ed39989d53ea115"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIzNjI2Mg==", "bodyText": "@Vatavuk please see comment above", "url": "https://github.com/artipie/http/pull/60#discussion_r386236262", "createdAt": "2020-03-02T07:46:51Z", "author": {"login": "olegmoz"}, "path": "src/main/java/com/artipie/http/hm/RsHasStatus.java", "diffHunk": "@@ -70,7 +72,11 @@ public void describeTo(final Description description) {\n     @Override\n     public boolean matchesSafely(final Response item) {\n         final AtomicInteger out = new AtomicInteger();\n-        item.send(new RsHasStatus.FakeConnection(out));\n+        try {\n+            item.send(new FakeConnection(out)).toCompletableFuture().get();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg3NDU2MA=="}, "originalCommit": {"oid": "c0219e4171b5f0e22e155ed46ed39989d53ea115"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1965, "cost": 1, "resetAt": "2021-11-12T09:44:50Z"}}}