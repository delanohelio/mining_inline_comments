{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODYwOTY2", "number": 103, "title": "#102 - Added LoggingSlice", "bodyText": "Part of #102\nAdded Slice with logging, that could be composed with other Slices", "createdAt": "2020-04-01T09:06:06Z", "url": "https://github.com/artipie/http/pull/103", "merged": true, "mergeCommit": {"oid": "e173180b43b5d4bbedcf7dccb78d5561c18f19e5"}, "closed": true, "closedAt": "2020-04-06T12:23:15Z", "author": {"login": "olegmoz"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTT8_8AH2gAyMzk2ODYwOTY2OmFiYzE2YWMxOGY2ZmRlYzkxZTRhYjIwNDdhM2IwZjk1MjVjOTZmNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcU7PD4gFqTM4ODA3NTc2MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "abc16ac18f6fdec91e4ab2047a3b0f9525c96f57", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/abc16ac18f6fdec91e4ab2047a3b0f9525c96f57", "committedDate": "2020-04-01T09:05:28Z", "message": "#102 - Added LoggingSlice"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTA3OTU3", "url": "https://github.com/artipie/http/pull/103#pullrequestreview-386507957", "createdAt": "2020-04-02T14:53:57Z", "commit": {"oid": "abc16ac18f6fdec91e4ab2047a3b0f9525c96f57"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNDo1Mzo1N1rOF_vLWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTowMDowNVrOF_ve9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3NzU2Mw==", "bodyText": "@olegmoz Slice that logs incoming requests and...", "url": "https://github.com/artipie/http/pull/103#discussion_r402377563", "createdAt": "2020-04-02T14:53:57Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Connection;\n+import com.artipie.http.Response;\n+import com.artipie.http.Slice;\n+import com.artipie.http.rs.RsStatus;\n+import com.jcabi.log.Logger;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+import java.util.concurrent.CompletionStage;\n+import java.util.logging.Level;\n+import org.reactivestreams.Publisher;\n+\n+/**\n+ * Slice logging incoming requests and outgoing responses.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc16ac18f6fdec91e4ab2047a3b0f9525c96f57"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM3OTM2Mg==", "bodyText": "@olegmoz inline this variable", "url": "https://github.com/artipie/http/pull/103#discussion_r402379362", "createdAt": "2020-04-02T14:56:11Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/slice/LoggingSlice.java", "diffHunk": "@@ -0,0 +1,138 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.Connection;\n+import com.artipie.http.Response;\n+import com.artipie.http.Slice;\n+import com.artipie.http.rs.RsStatus;\n+import com.jcabi.log.Logger;\n+import java.nio.ByteBuffer;\n+import java.util.Map;\n+import java.util.concurrent.CompletionStage;\n+import java.util.logging.Level;\n+import org.reactivestreams.Publisher;\n+\n+/**\n+ * Slice logging incoming requests and outgoing responses.\n+ *\n+ * @since 0.8\n+ */\n+public final class LoggingSlice implements Slice {\n+\n+    /**\n+     * Logging level.\n+     */\n+    private final Level level;\n+\n+    /**\n+     * Delegate slice.\n+     */\n+    private final Slice slice;\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param slice Slice.\n+     */\n+    public LoggingSlice(final Slice slice) {\n+        this(Level.FINE, slice);\n+    }\n+\n+    /**\n+     * Ctor.\n+     *\n+     * @param level Logging level.\n+     * @param slice Slice.\n+     */\n+    public LoggingSlice(final Level level, final Slice slice) {\n+        this.level = level;\n+        this.slice = slice;\n+    }\n+\n+    @Override\n+    public Response response(\n+        final String line,\n+        final Iterable<Map.Entry<String, String>> headers,\n+        final Publisher<ByteBuffer> body\n+    ) {\n+        final StringBuilder msg = new StringBuilder();\n+        msg.append(\">> \").append(line);\n+        LoggingSlice.append(msg, headers);\n+        final Object source = this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc16ac18f6fdec91e4ab2047a3b0f9525c96f57"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjM4MjU4Mg==", "bodyText": "@olegmoz Can we test what's actually being logged through jcabi logger? If not maybe we can consider creating a wrapper over Jcabi and inject it in the ctor...", "url": "https://github.com/artipie/http/pull/103#discussion_r402382582", "createdAt": "2020-04-02T15:00:05Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/slice/LoggingSliceTest.java", "diffHunk": "@@ -0,0 +1,64 @@\n+/*\n+ * MIT License\n+ *\n+ * Copyright (c) 2020 Artipie\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in all\n+ * copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n+ * SOFTWARE.\n+ */\n+package com.artipie.http.slice;\n+\n+import com.artipie.http.rs.RsStatus;\n+import com.artipie.http.rs.RsWithHeaders;\n+import com.artipie.http.rs.RsWithStatus;\n+import io.reactivex.Flowable;\n+import java.util.Arrays;\n+import java.util.concurrent.CompletableFuture;\n+import java.util.logging.Level;\n+import org.cactoos.map.MapEntry;\n+import org.junit.jupiter.api.Test;\n+\n+/**\n+ * Tests for {@link LoggingSlice}.\n+ *\n+ * @since 0.8\n+ */\n+class LoggingSliceTest {\n+\n+    @Test\n+    void shouldLogRequestAndResponse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abc16ac18f6fdec91e4ab2047a3b0f9525c96f57"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1f52459d3a39b01f1309ddb7ae3bdfdce7c62b", "author": {"user": {"login": "olegmoz", "name": "Oleg Mozzhechkov"}}, "url": "https://github.com/artipie/http/commit/bf1f52459d3a39b01f1309ddb7ae3bdfdce7c62b", "committedDate": "2020-04-02T15:15:54Z", "message": "#102 - Changes by review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MDc1NzYw", "url": "https://github.com/artipie/http/pull/103#pullrequestreview-388075760", "createdAt": "2020-04-06T09:25:26Z", "commit": {"oid": "bf1f52459d3a39b01f1309ddb7ae3bdfdce7c62b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3151, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}