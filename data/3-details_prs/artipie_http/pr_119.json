{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MTYyNjY0", "number": 119, "title": "#24: idx check", "bodyText": "For #24 added idx check into RequestLineFrom#part and some tests.", "createdAt": "2020-04-16T07:14:50Z", "url": "https://github.com/artipie/http/pull/119", "merged": true, "mergeCommit": {"oid": "b04df9df95ca8d3188df8014048e638d15fbfacc"}, "closed": true, "closedAt": "2020-04-17T11:21:24Z", "author": {"login": "olenagerasimova"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYHVZJAH2gAyNDA0MTYyNjY0OjZjZWI3NDhmOWJjMGU5YTdkODJkMDcyNzdmOTEyMzE4OWM3Mzc2MmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYecPoAFqTM5NTMyODQ5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6ceb748f9bc0e9a7d82d07277f9123189c73762b", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/6ceb748f9bc0e9a7d82d07277f9123189c73762b", "committedDate": "2020-04-16T07:12:58Z", "message": "#24: idx check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjAzMDUz", "url": "https://github.com/artipie/http/pull/119#pullrequestreview-395203053", "createdAt": "2020-04-17T06:55:00Z", "commit": {"oid": "6ceb748f9bc0e9a7d82d07277f9123189c73762b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjo1NTowMVrOGHCBrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNjo1NjowNFrOGHCDZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjQxMw==", "bodyText": "@olenagerasimova this doesn't have to be a static variable, we can hardcode 3 in the part method", "url": "https://github.com/artipie/http/pull/119#discussion_r410026413", "createdAt": "2020-04-17T06:55:01Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -43,6 +43,12 @@\n  */\n public final class RequestLineFrom {\n \n+    /**\n+     * Valid HTTP request line must contains 3 parts which can be splitted by\n+     * whitespace char.\n+     */\n+    private static final int PARTS_AMOUNT = 3;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ceb748f9bc0e9a7d82d07277f9123189c73762b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDAyNjg1Mw==", "bodyText": "@olenagerasimova let's create one test with 4 parts in http line", "url": "https://github.com/artipie/http/pull/119#discussion_r410026853", "createdAt": "2020-04-17T06:56:04Z", "author": {"login": "Vatavuk"}, "path": "src/test/java/com/artipie/http/rq/RequestLineFromTest.java", "diffHunk": "@@ -39,42 +41,68 @@\n  */\n public final class RequestLineFromTest {\n     @Test\n-    void parsesMethodName() throws Exception {\n+    void parsesMethodName() {\n         MatcherAssert.assertThat(\n             new RequestLineFrom(\"TRACE /foo HTTP/1.1\\r\\n\").method(),\n             Matchers.equalTo(RqMethod.TRACE)\n         );\n     }\n \n     @Test\n-    void parsesAsteriskUri() throws Exception {\n+    void parsesAsteriskUri() {\n         MatcherAssert.assertThat(\n             new RequestLineFrom(\"GET * HTTP/1.1\\r\\n\").uri(),\n             Matchers.equalTo(URI.create(\"*\"))\n         );\n     }\n \n     @Test\n-    void parsesAbsoluteUri() throws Exception {\n+    void parsesAbsoluteUri() {\n         MatcherAssert.assertThat(\n             new RequestLineFrom(\"GET http://www.w3.org/pub/WWW/TheProject.html HTTP/1.1\\r\\n\").uri(),\n             Matchers.equalTo(URI.create(\"http://www.w3.org/pub/WWW/TheProject.html\"))\n         );\n     }\n \n     @Test\n-    void parsesAbsolutePath() throws Exception {\n+    void parsesAbsolutePath() {\n         MatcherAssert.assertThat(\n             new RequestLineFrom(\"GET /pub/WWW/TheProject.html HTTP/1.1\\r\\n\").uri(),\n             Matchers.equalTo(URI.create(\"/pub/WWW/TheProject.html\"))\n         );\n     }\n \n     @Test\n-    void parsesHttpVersion() throws Exception {\n+    void parsesHttpVersion() {\n         MatcherAssert.assertThat(\n             new RequestLineFrom(\"PUT * HTTP/1.1\\r\\n\").version(),\n             Matchers.equalTo(\"HTTP/1.1\")\n         );\n     }\n+\n+    @Test\n+    void throwsExceptionIfMethodIsUnknown() {\n+        final String method = \"SURRENDER\";\n+        MatcherAssert.assertThat(\n+            Assertions.assertThrows(\n+                IllegalStateException.class,\n+                () -> new RequestLineFrom(\n+                    String.format(\"%s /wallet/or/life HTTP/1.1\\n\", method)\n+                ).method()\n+            ).getMessage(),\n+            new IsEqual<>(String.format(\"Unknown method: '%s'\", method))\n+        );\n+    }\n+\n+    @Test\n+    void throwsExceptionIfLineIsInvalid() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6ceb748f9bc0e9a7d82d07277f9123189c73762b"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f524c06c7523f2ba9f9284b1535493db52217903", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/f524c06c7523f2ba9f9284b1535493db52217903", "committedDate": "2020-04-17T07:27:19Z", "message": "#24: CR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MjI1NjQ0", "url": "https://github.com/artipie/http/pull/119#pullrequestreview-395225644", "createdAt": "2020-04-17T07:35:33Z", "commit": {"oid": "f524c06c7523f2ba9f9284b1535493db52217903"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzozNTozM1rOGHDJBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QwNzozNTozM1rOGHDJBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA0NDY3Nw==", "bodyText": "@olenagerasimova I believe its a bit more easier to digest parts.length == 3 than having a separate variable.", "url": "https://github.com/artipie/http/pull/119#discussion_r410044677", "createdAt": "2020-04-17T07:35:33Z", "author": {"login": "Vatavuk"}, "path": "src/main/java/com/artipie/http/rq/RequestLineFrom.java", "diffHunk": "@@ -99,8 +93,9 @@ public String version() {\n      * @return Part string\n      */\n     private String part(final int idx) {\n+        final int pcount = 3;\n         final String[] parts = this.line.trim().split(\"\\\\s\");\n-        if (parts.length == RequestLineFrom.PARTS_AMOUNT) {\n+        if (parts.length == pcount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f524c06c7523f2ba9f9284b1535493db52217903"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fda0453c730b8aba945ca68b3ee46d7825aee8bd", "author": {"user": {"login": "olenagerasimova", "name": "Alena"}}, "url": "https://github.com/artipie/http/commit/fda0453c730b8aba945ca68b3ee46d7825aee8bd", "committedDate": "2020-04-17T08:33:50Z", "message": "#24: CR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk1MzI4NDkw", "url": "https://github.com/artipie/http/pull/119#pullrequestreview-395328490", "createdAt": "2020-04-17T10:08:16Z", "commit": {"oid": "fda0453c730b8aba945ca68b3ee46d7825aee8bd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3172, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}