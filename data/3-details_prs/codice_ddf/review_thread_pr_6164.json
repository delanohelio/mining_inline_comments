{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTY4MDYx", "number": 6164, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0NzoxM1rOEMQSrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowODo0MFrOEMlHDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjg1MjkzOnYy", "diffSide": "RIGHT", "path": "distribution/ddf-common/src/main/resources/etc/jre.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0NzoxM1rOGuQyfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0NzoxM1rOGuQyfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2Mjc0OQ==", "bodyText": "Added this line", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451162749", "createdAt": "2020-07-07T21:47:13Z", "author": {"login": "SmithJosh"}, "path": "distribution/ddf-common/src/main/resources/etc/jre.properties", "diffHunk": "@@ -0,0 +1,727 @@\n+################################################################################\n+#\n+#    Licensed to the Apache Software Foundation (ASF) under one or more\n+#    contributor license agreements.  See the NOTICE file distributed with\n+#    this work for additional information regarding copyright ownership.\n+#    The ASF licenses this file to You under the Apache License, Version 2.0\n+#    (the \"License\"); you may not use this file except in compliance with\n+#    the License.  You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#    Unless required by applicable law or agreed to in writing, software\n+#    distributed under the License is distributed on an \"AS IS\" BASIS,\n+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#    See the License for the specific language governing permissions and\n+#    limitations under the License.\n+#\n+################################################################################\n+\n+#\n+# Java platform package export properties.\n+#\n+\n+# Standard package set.  Note that:\n+#   - javax.transaction* is exported with a mandatory attribute\n+jre-1.6= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\\n+ javax.activity, \\\n+ javax.annotation;version=\"1.0\", \\\n+ javax.annotation.processing;version=\"1.0\", \\\n+ javax.crypto, \\\n+ javax.crypto.interfaces, \\\n+ javax.crypto.spec, \\\n+ javax.imageio, \\\n+ javax.imageio.event, \\\n+ javax.imageio.metadata, \\\n+ javax.imageio.plugins.bmp, \\\n+ javax.imageio.plugins.jpeg, \\\n+ javax.imageio.spi, \\\n+ javax.imageio.stream, \\\n+ javax.jws, \\\n+ javax.jws.soap, \\\n+ javax.lang.model, \\\n+ javax.lang.model.element, \\\n+ javax.lang.model.type, \\\n+ javax.lang.model.util, \\\n+ javax.management, \\\n+ javax.management.loading, \\\n+ javax.management.modelmbean, \\\n+ javax.management.monitor, \\\n+ javax.management.openmbean, \\\n+ javax.management.relation, \\\n+ javax.management.remote, \\\n+ javax.management.remote.rmi, \\\n+ javax.management.timer, \\\n+ javax.naming, \\\n+ javax.naming.directory, \\\n+ javax.naming.event, \\\n+ javax.naming.ldap, \\\n+ javax.naming.spi, \\\n+ javax.net, \\\n+ javax.net.ssl, \\\n+ javax.print, \\\n+ javax.print.attribute, \\\n+ javax.print.attribute.standard, \\\n+ javax.print.event, \\\n+ javax.rmi, \\\n+ javax.rmi.CORBA, \\\n+ javax.rmi.ssl, \\\n+ javax.script, \\\n+ javax.security.auth, \\\n+ javax.security.auth.callback, \\\n+ javax.security.auth.kerberos, \\\n+ javax.security.auth.login, \\\n+ javax.security.auth.spi, \\\n+ javax.security.auth.x500, \\\n+ javax.security.cert, \\\n+ javax.security.sasl, \\\n+ javax.sound.midi, \\\n+ javax.sound.midi.spi, \\\n+ javax.sound.sampled, \\\n+ javax.sound.sampled.spi, \\\n+ javax.sql, \\\n+ javax.sql.rowset, \\\n+ javax.sql.rowset.serial, \\\n+ javax.sql.rowset.spi, \\\n+ javax.swing, \\\n+ javax.swing.border, \\\n+ javax.swing.colorchooser, \\\n+ javax.swing.event, \\\n+ javax.swing.filechooser, \\\n+ javax.swing.plaf, \\\n+ javax.swing.plaf.basic, \\\n+ javax.swing.plaf.metal, \\\n+ javax.swing.plaf.multi, \\\n+ javax.swing.plaf.synth, \\\n+ javax.swing.table, \\\n+ javax.swing.text, \\\n+ javax.swing.text.html, \\\n+ javax.swing.text.html.parser, \\\n+ javax.swing.text.rtf, \\\n+ javax.swing.tree, \\\n+ javax.swing.undo, \\\n+ javax.tools, \\\n+ javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n+ javax.xml, \\\n+ javax.xml.bind;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation.adapters;version=\"2.2.1\", \\\n+ javax.xml.bind.attachment;version=\"2.2.1\", \\\n+ javax.xml.bind.helpers;version=\"2.2.1\", \\\n+ javax.xml.bind.util;version=\"2.2.1\", \\\n+ javax.xml.crypto, \\\n+ javax.xml.crypto.dom, \\\n+ javax.xml.crypto.dsig, \\\n+ javax.xml.crypto.dsig.dom, \\\n+ javax.xml.crypto.dsig.keyinfo, \\\n+ javax.xml.crypto.dsig.spec, \\\n+ javax.xml.datatype, \\\n+ javax.xml.namespace, \\\n+ javax.xml.parsers, \\\n+ javax.xml.soap;version=\"1.3\", \\\n+ javax.xml.stream;version=\"1.2\", \\\n+ javax.xml.stream.events;version=\"1.2\", \\\n+ javax.xml.stream.util;version=\"1.2\", \\\n+ javax.xml.transform, \\\n+ javax.xml.transform.dom, \\\n+ javax.xml.transform.sax, \\\n+ javax.xml.transform.stax, \\\n+ javax.xml.transform.stream, \\\n+ javax.xml.validation, \\\n+ javax.xml.ws;version=\"2.2\", \\\n+ javax.xml.ws.handler;version=\"2.2\", \\\n+ javax.xml.ws.handler.soap;version=\"2.2\", \\\n+ javax.xml.ws.http;version=\"2.2\", \\\n+ javax.xml.ws.soap;version=\"2.2\", \\\n+ javax.xml.ws.spi;version=\"2.2\", \\\n+ javax.xml.ws.wsaddressing;version=\"2.2\", \\\n+ javax.xml.ws.spi.http;version=\"2.2\", \\\n+ javax.xml.xpath, \\\n+ org.ietf.jgss, \\\n+ org.omg.CORBA, \\\n+ org.omg.CORBA_2_3, \\\n+ org.omg.CORBA_2_3.portable, \\\n+ org.omg.CORBA.DynAnyPackage, \\\n+ org.omg.CORBA.ORBPackage, \\\n+ org.omg.CORBA.portable, \\\n+ org.omg.CORBA.TypeCodePackage, \\\n+ org.omg.CosNaming, \\\n+ org.omg.CosNaming.NamingContextExtPackage, \\\n+ org.omg.CosNaming.NamingContextPackage, \\\n+ org.omg.Dynamic, \\\n+ org.omg.DynamicAny, \\\n+ org.omg.DynamicAny.DynAnyFactoryPackage, \\\n+ org.omg.DynamicAny.DynAnyPackage, \\\n+ org.omg.IOP, \\\n+ org.omg.IOP.CodecFactoryPackage, \\\n+ org.omg.IOP.CodecPackage, \\\n+ org.omg.Messaging, \\\n+ org.omg.PortableInterceptor, \\\n+ org.omg.PortableInterceptor.ORBInitInfoPackage, \\\n+ org.omg.PortableServer, \\\n+ org.omg.PortableServer.CurrentPackage, \\\n+ org.omg.PortableServer.POAManagerPackage, \\\n+ org.omg.PortableServer.POAPackage, \\\n+ org.omg.PortableServer.portable, \\\n+ org.omg.PortableServer.ServantLocatorPackage, \\\n+ org.omg.SendingContext, \\\n+ org.omg.stub.java.rmi, \\\n+ org.omg.stub.javax.management.remote.rmi, \\\n+ org.w3c.dom, \\\n+ org.w3c.dom.bootstrap, \\\n+ org.w3c.dom.css, \\\n+ org.w3c.dom.events, \\\n+ org.w3c.dom.html, \\\n+ org.w3c.dom.ls, \\\n+ org.w3c.dom.ranges, \\\n+ org.w3c.dom.stylesheets, \\\n+ org.w3c.dom.traversal, \\\n+ org.w3c.dom.views, \\\n+ org.w3c.dom.xpath, \\\n+ org.xml.sax, \\\n+ org.xml.sax.ext, \\\n+ org.xml.sax.helpers\n+\n+# Standard package set.  Note that:\n+#   - javax.transaction* is exported with a mandatory attribute\n+jre-1.7= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\\n+ javax.activity, \\\n+ javax.annotation;version=\"1.0\", \\\n+ javax.annotation.processing;version=\"1.0\", \\\n+ javax.crypto, \\\n+ javax.crypto.interfaces, \\\n+ javax.crypto.spec, \\\n+ javax.imageio, \\\n+ javax.imageio.event, \\\n+ javax.imageio.metadata, \\\n+ javax.imageio.plugins.bmp, \\\n+ javax.imageio.plugins.jpeg, \\\n+ javax.imageio.spi, \\\n+ javax.imageio.stream, \\\n+ javax.jws, \\\n+ javax.jws.soap, \\\n+ javax.lang.model, \\\n+ javax.lang.model.element, \\\n+ javax.lang.model.type, \\\n+ javax.lang.model.util, \\\n+ javax.management, \\\n+ javax.management.loading, \\\n+ javax.management.modelmbean, \\\n+ javax.management.monitor, \\\n+ javax.management.openmbean, \\\n+ javax.management.relation, \\\n+ javax.management.remote, \\\n+ javax.management.remote.rmi, \\\n+ javax.management.timer, \\\n+ javax.naming, \\\n+ javax.naming.directory, \\\n+ javax.naming.event, \\\n+ javax.naming.ldap, \\\n+ javax.naming.spi, \\\n+ javax.net, \\\n+ javax.net.ssl, \\\n+ javax.print, \\\n+ javax.print.attribute, \\\n+ javax.print.attribute.standard, \\\n+ javax.print.event, \\\n+ javax.rmi, \\\n+ javax.rmi.CORBA, \\\n+ javax.rmi.ssl, \\\n+ javax.script, \\\n+ javax.security.auth, \\\n+ javax.security.auth.callback, \\\n+ javax.security.auth.kerberos, \\\n+ javax.security.auth.login, \\\n+ javax.security.auth.spi, \\\n+ javax.security.auth.x500, \\\n+ javax.security.cert, \\\n+ javax.security.sasl, \\\n+ javax.sound.midi, \\\n+ javax.sound.midi.spi, \\\n+ javax.sound.sampled, \\\n+ javax.sound.sampled.spi, \\\n+ javax.sql, \\\n+ javax.sql.rowset, \\\n+ javax.sql.rowset.serial, \\\n+ javax.sql.rowset.spi, \\\n+ javax.swing, \\\n+ javax.swing.border, \\\n+ javax.swing.colorchooser, \\\n+ javax.swing.event, \\\n+ javax.swing.filechooser, \\\n+ javax.swing.plaf, \\\n+ javax.swing.plaf.basic, \\\n+ javax.swing.plaf.metal, \\\n+ javax.swing.plaf.multi, \\\n+ javax.swing.plaf.synth, \\\n+ javax.swing.table, \\\n+ javax.swing.text, \\\n+ javax.swing.text.html, \\\n+ javax.swing.text.html.parser, \\\n+ javax.swing.text.rtf, \\\n+ javax.swing.tree, \\\n+ javax.swing.undo, \\\n+ javax.tools, \\\n+ javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n+ javax.xml, \\\n+ javax.xml.bind;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation.adapters;version=\"2.2.1\", \\\n+ javax.xml.bind.attachment;version=\"2.2.1\", \\\n+ javax.xml.bind.helpers;version=\"2.2.1\", \\\n+ javax.xml.bind.util;version=\"2.2.1\", \\\n+ javax.xml.crypto, \\\n+ javax.xml.crypto.dom, \\\n+ javax.xml.crypto.dsig, \\\n+ javax.xml.crypto.dsig.dom, \\\n+ javax.xml.crypto.dsig.keyinfo, \\\n+ javax.xml.crypto.dsig.spec, \\\n+ javax.xml.datatype, \\\n+ javax.xml.namespace, \\\n+ javax.xml.parsers, \\\n+ javax.xml.soap;version=\"1.3\", \\\n+ javax.xml.stream;version=\"1.2\", \\\n+ javax.xml.stream.events;version=\"1.2\", \\\n+ javax.xml.stream.util;version=\"1.2\", \\\n+ javax.xml.transform, \\\n+ javax.xml.transform.dom, \\\n+ javax.xml.transform.sax, \\\n+ javax.xml.transform.stax, \\\n+ javax.xml.transform.stream, \\\n+ javax.xml.validation, \\\n+ javax.xml.xpath, \\\n+ org.ietf.jgss, \\\n+ org.omg.CORBA, \\\n+ org.omg.CORBA_2_3, \\\n+ org.omg.CORBA_2_3.portable, \\\n+ org.omg.CORBA.DynAnyPackage, \\\n+ org.omg.CORBA.ORBPackage, \\\n+ org.omg.CORBA.portable, \\\n+ org.omg.CORBA.TypeCodePackage, \\\n+ org.omg.CosNaming, \\\n+ org.omg.CosNaming.NamingContextExtPackage, \\\n+ org.omg.CosNaming.NamingContextPackage, \\\n+ org.omg.Dynamic, \\\n+ org.omg.DynamicAny, \\\n+ org.omg.DynamicAny.DynAnyFactoryPackage, \\\n+ org.omg.DynamicAny.DynAnyPackage, \\\n+ org.omg.IOP, \\\n+ org.omg.IOP.CodecFactoryPackage, \\\n+ org.omg.IOP.CodecPackage, \\\n+ org.omg.Messaging, \\\n+ org.omg.PortableInterceptor, \\\n+ org.omg.PortableInterceptor.ORBInitInfoPackage, \\\n+ org.omg.PortableServer, \\\n+ org.omg.PortableServer.CurrentPackage, \\\n+ org.omg.PortableServer.POAManagerPackage, \\\n+ org.omg.PortableServer.POAPackage, \\\n+ org.omg.PortableServer.portable, \\\n+ org.omg.PortableServer.ServantLocatorPackage, \\\n+ org.omg.SendingContext, \\\n+ org.omg.stub.java.rmi, \\\n+ org.omg.stub.javax.management.remote.rmi, \\\n+ org.w3c.dom, \\\n+ org.w3c.dom.bootstrap, \\\n+ org.w3c.dom.css, \\\n+ org.w3c.dom.events, \\\n+ org.w3c.dom.html, \\\n+ org.w3c.dom.ls, \\\n+ org.w3c.dom.ranges, \\\n+ org.w3c.dom.stylesheets, \\\n+ org.w3c.dom.traversal, \\\n+ org.w3c.dom.views, \\\n+ org.w3c.dom.xpath, \\\n+ org.xml.sax, \\\n+ org.xml.sax.ext, \\\n+ org.xml.sax.helpers, \\\n+ com.sun.nio.sctp\n+\n+jre-1.8= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 345}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMjg1NTc0OnYy", "diffSide": "RIGHT", "path": "distribution/ddf-common/src/main/resources/etc/jre.properties", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0ODoxMFrOGuQ0Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QyMTo0ODoxMFrOGuQ0Lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTE2MzE4Mw==", "bodyText": "And added this line", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451163183", "createdAt": "2020-07-07T21:48:10Z", "author": {"login": "SmithJosh"}, "path": "distribution/ddf-common/src/main/resources/etc/jre.properties", "diffHunk": "@@ -0,0 +1,727 @@\n+################################################################################\n+#\n+#    Licensed to the Apache Software Foundation (ASF) under one or more\n+#    contributor license agreements.  See the NOTICE file distributed with\n+#    this work for additional information regarding copyright ownership.\n+#    The ASF licenses this file to You under the Apache License, Version 2.0\n+#    (the \"License\"); you may not use this file except in compliance with\n+#    the License.  You may obtain a copy of the License at\n+#\n+#       http://www.apache.org/licenses/LICENSE-2.0\n+#\n+#    Unless required by applicable law or agreed to in writing, software\n+#    distributed under the License is distributed on an \"AS IS\" BASIS,\n+#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+#    See the License for the specific language governing permissions and\n+#    limitations under the License.\n+#\n+################################################################################\n+\n+#\n+# Java platform package export properties.\n+#\n+\n+# Standard package set.  Note that:\n+#   - javax.transaction* is exported with a mandatory attribute\n+jre-1.6= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\\n+ javax.activity, \\\n+ javax.annotation;version=\"1.0\", \\\n+ javax.annotation.processing;version=\"1.0\", \\\n+ javax.crypto, \\\n+ javax.crypto.interfaces, \\\n+ javax.crypto.spec, \\\n+ javax.imageio, \\\n+ javax.imageio.event, \\\n+ javax.imageio.metadata, \\\n+ javax.imageio.plugins.bmp, \\\n+ javax.imageio.plugins.jpeg, \\\n+ javax.imageio.spi, \\\n+ javax.imageio.stream, \\\n+ javax.jws, \\\n+ javax.jws.soap, \\\n+ javax.lang.model, \\\n+ javax.lang.model.element, \\\n+ javax.lang.model.type, \\\n+ javax.lang.model.util, \\\n+ javax.management, \\\n+ javax.management.loading, \\\n+ javax.management.modelmbean, \\\n+ javax.management.monitor, \\\n+ javax.management.openmbean, \\\n+ javax.management.relation, \\\n+ javax.management.remote, \\\n+ javax.management.remote.rmi, \\\n+ javax.management.timer, \\\n+ javax.naming, \\\n+ javax.naming.directory, \\\n+ javax.naming.event, \\\n+ javax.naming.ldap, \\\n+ javax.naming.spi, \\\n+ javax.net, \\\n+ javax.net.ssl, \\\n+ javax.print, \\\n+ javax.print.attribute, \\\n+ javax.print.attribute.standard, \\\n+ javax.print.event, \\\n+ javax.rmi, \\\n+ javax.rmi.CORBA, \\\n+ javax.rmi.ssl, \\\n+ javax.script, \\\n+ javax.security.auth, \\\n+ javax.security.auth.callback, \\\n+ javax.security.auth.kerberos, \\\n+ javax.security.auth.login, \\\n+ javax.security.auth.spi, \\\n+ javax.security.auth.x500, \\\n+ javax.security.cert, \\\n+ javax.security.sasl, \\\n+ javax.sound.midi, \\\n+ javax.sound.midi.spi, \\\n+ javax.sound.sampled, \\\n+ javax.sound.sampled.spi, \\\n+ javax.sql, \\\n+ javax.sql.rowset, \\\n+ javax.sql.rowset.serial, \\\n+ javax.sql.rowset.spi, \\\n+ javax.swing, \\\n+ javax.swing.border, \\\n+ javax.swing.colorchooser, \\\n+ javax.swing.event, \\\n+ javax.swing.filechooser, \\\n+ javax.swing.plaf, \\\n+ javax.swing.plaf.basic, \\\n+ javax.swing.plaf.metal, \\\n+ javax.swing.plaf.multi, \\\n+ javax.swing.plaf.synth, \\\n+ javax.swing.table, \\\n+ javax.swing.text, \\\n+ javax.swing.text.html, \\\n+ javax.swing.text.html.parser, \\\n+ javax.swing.text.rtf, \\\n+ javax.swing.tree, \\\n+ javax.swing.undo, \\\n+ javax.tools, \\\n+ javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n+ javax.xml, \\\n+ javax.xml.bind;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation.adapters;version=\"2.2.1\", \\\n+ javax.xml.bind.attachment;version=\"2.2.1\", \\\n+ javax.xml.bind.helpers;version=\"2.2.1\", \\\n+ javax.xml.bind.util;version=\"2.2.1\", \\\n+ javax.xml.crypto, \\\n+ javax.xml.crypto.dom, \\\n+ javax.xml.crypto.dsig, \\\n+ javax.xml.crypto.dsig.dom, \\\n+ javax.xml.crypto.dsig.keyinfo, \\\n+ javax.xml.crypto.dsig.spec, \\\n+ javax.xml.datatype, \\\n+ javax.xml.namespace, \\\n+ javax.xml.parsers, \\\n+ javax.xml.soap;version=\"1.3\", \\\n+ javax.xml.stream;version=\"1.2\", \\\n+ javax.xml.stream.events;version=\"1.2\", \\\n+ javax.xml.stream.util;version=\"1.2\", \\\n+ javax.xml.transform, \\\n+ javax.xml.transform.dom, \\\n+ javax.xml.transform.sax, \\\n+ javax.xml.transform.stax, \\\n+ javax.xml.transform.stream, \\\n+ javax.xml.validation, \\\n+ javax.xml.ws;version=\"2.2\", \\\n+ javax.xml.ws.handler;version=\"2.2\", \\\n+ javax.xml.ws.handler.soap;version=\"2.2\", \\\n+ javax.xml.ws.http;version=\"2.2\", \\\n+ javax.xml.ws.soap;version=\"2.2\", \\\n+ javax.xml.ws.spi;version=\"2.2\", \\\n+ javax.xml.ws.wsaddressing;version=\"2.2\", \\\n+ javax.xml.ws.spi.http;version=\"2.2\", \\\n+ javax.xml.xpath, \\\n+ org.ietf.jgss, \\\n+ org.omg.CORBA, \\\n+ org.omg.CORBA_2_3, \\\n+ org.omg.CORBA_2_3.portable, \\\n+ org.omg.CORBA.DynAnyPackage, \\\n+ org.omg.CORBA.ORBPackage, \\\n+ org.omg.CORBA.portable, \\\n+ org.omg.CORBA.TypeCodePackage, \\\n+ org.omg.CosNaming, \\\n+ org.omg.CosNaming.NamingContextExtPackage, \\\n+ org.omg.CosNaming.NamingContextPackage, \\\n+ org.omg.Dynamic, \\\n+ org.omg.DynamicAny, \\\n+ org.omg.DynamicAny.DynAnyFactoryPackage, \\\n+ org.omg.DynamicAny.DynAnyPackage, \\\n+ org.omg.IOP, \\\n+ org.omg.IOP.CodecFactoryPackage, \\\n+ org.omg.IOP.CodecPackage, \\\n+ org.omg.Messaging, \\\n+ org.omg.PortableInterceptor, \\\n+ org.omg.PortableInterceptor.ORBInitInfoPackage, \\\n+ org.omg.PortableServer, \\\n+ org.omg.PortableServer.CurrentPackage, \\\n+ org.omg.PortableServer.POAManagerPackage, \\\n+ org.omg.PortableServer.POAPackage, \\\n+ org.omg.PortableServer.portable, \\\n+ org.omg.PortableServer.ServantLocatorPackage, \\\n+ org.omg.SendingContext, \\\n+ org.omg.stub.java.rmi, \\\n+ org.omg.stub.javax.management.remote.rmi, \\\n+ org.w3c.dom, \\\n+ org.w3c.dom.bootstrap, \\\n+ org.w3c.dom.css, \\\n+ org.w3c.dom.events, \\\n+ org.w3c.dom.html, \\\n+ org.w3c.dom.ls, \\\n+ org.w3c.dom.ranges, \\\n+ org.w3c.dom.stylesheets, \\\n+ org.w3c.dom.traversal, \\\n+ org.w3c.dom.views, \\\n+ org.w3c.dom.xpath, \\\n+ org.xml.sax, \\\n+ org.xml.sax.ext, \\\n+ org.xml.sax.helpers\n+\n+# Standard package set.  Note that:\n+#   - javax.transaction* is exported with a mandatory attribute\n+jre-1.7= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\\n+ javax.activity, \\\n+ javax.annotation;version=\"1.0\", \\\n+ javax.annotation.processing;version=\"1.0\", \\\n+ javax.crypto, \\\n+ javax.crypto.interfaces, \\\n+ javax.crypto.spec, \\\n+ javax.imageio, \\\n+ javax.imageio.event, \\\n+ javax.imageio.metadata, \\\n+ javax.imageio.plugins.bmp, \\\n+ javax.imageio.plugins.jpeg, \\\n+ javax.imageio.spi, \\\n+ javax.imageio.stream, \\\n+ javax.jws, \\\n+ javax.jws.soap, \\\n+ javax.lang.model, \\\n+ javax.lang.model.element, \\\n+ javax.lang.model.type, \\\n+ javax.lang.model.util, \\\n+ javax.management, \\\n+ javax.management.loading, \\\n+ javax.management.modelmbean, \\\n+ javax.management.monitor, \\\n+ javax.management.openmbean, \\\n+ javax.management.relation, \\\n+ javax.management.remote, \\\n+ javax.management.remote.rmi, \\\n+ javax.management.timer, \\\n+ javax.naming, \\\n+ javax.naming.directory, \\\n+ javax.naming.event, \\\n+ javax.naming.ldap, \\\n+ javax.naming.spi, \\\n+ javax.net, \\\n+ javax.net.ssl, \\\n+ javax.print, \\\n+ javax.print.attribute, \\\n+ javax.print.attribute.standard, \\\n+ javax.print.event, \\\n+ javax.rmi, \\\n+ javax.rmi.CORBA, \\\n+ javax.rmi.ssl, \\\n+ javax.script, \\\n+ javax.security.auth, \\\n+ javax.security.auth.callback, \\\n+ javax.security.auth.kerberos, \\\n+ javax.security.auth.login, \\\n+ javax.security.auth.spi, \\\n+ javax.security.auth.x500, \\\n+ javax.security.cert, \\\n+ javax.security.sasl, \\\n+ javax.sound.midi, \\\n+ javax.sound.midi.spi, \\\n+ javax.sound.sampled, \\\n+ javax.sound.sampled.spi, \\\n+ javax.sql, \\\n+ javax.sql.rowset, \\\n+ javax.sql.rowset.serial, \\\n+ javax.sql.rowset.spi, \\\n+ javax.swing, \\\n+ javax.swing.border, \\\n+ javax.swing.colorchooser, \\\n+ javax.swing.event, \\\n+ javax.swing.filechooser, \\\n+ javax.swing.plaf, \\\n+ javax.swing.plaf.basic, \\\n+ javax.swing.plaf.metal, \\\n+ javax.swing.plaf.multi, \\\n+ javax.swing.plaf.synth, \\\n+ javax.swing.table, \\\n+ javax.swing.text, \\\n+ javax.swing.text.html, \\\n+ javax.swing.text.html.parser, \\\n+ javax.swing.text.rtf, \\\n+ javax.swing.tree, \\\n+ javax.swing.undo, \\\n+ javax.tools, \\\n+ javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n+ javax.xml, \\\n+ javax.xml.bind;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation;version=\"2.2.1\", \\\n+ javax.xml.bind.annotation.adapters;version=\"2.2.1\", \\\n+ javax.xml.bind.attachment;version=\"2.2.1\", \\\n+ javax.xml.bind.helpers;version=\"2.2.1\", \\\n+ javax.xml.bind.util;version=\"2.2.1\", \\\n+ javax.xml.crypto, \\\n+ javax.xml.crypto.dom, \\\n+ javax.xml.crypto.dsig, \\\n+ javax.xml.crypto.dsig.dom, \\\n+ javax.xml.crypto.dsig.keyinfo, \\\n+ javax.xml.crypto.dsig.spec, \\\n+ javax.xml.datatype, \\\n+ javax.xml.namespace, \\\n+ javax.xml.parsers, \\\n+ javax.xml.soap;version=\"1.3\", \\\n+ javax.xml.stream;version=\"1.2\", \\\n+ javax.xml.stream.events;version=\"1.2\", \\\n+ javax.xml.stream.util;version=\"1.2\", \\\n+ javax.xml.transform, \\\n+ javax.xml.transform.dom, \\\n+ javax.xml.transform.sax, \\\n+ javax.xml.transform.stax, \\\n+ javax.xml.transform.stream, \\\n+ javax.xml.validation, \\\n+ javax.xml.xpath, \\\n+ org.ietf.jgss, \\\n+ org.omg.CORBA, \\\n+ org.omg.CORBA_2_3, \\\n+ org.omg.CORBA_2_3.portable, \\\n+ org.omg.CORBA.DynAnyPackage, \\\n+ org.omg.CORBA.ORBPackage, \\\n+ org.omg.CORBA.portable, \\\n+ org.omg.CORBA.TypeCodePackage, \\\n+ org.omg.CosNaming, \\\n+ org.omg.CosNaming.NamingContextExtPackage, \\\n+ org.omg.CosNaming.NamingContextPackage, \\\n+ org.omg.Dynamic, \\\n+ org.omg.DynamicAny, \\\n+ org.omg.DynamicAny.DynAnyFactoryPackage, \\\n+ org.omg.DynamicAny.DynAnyPackage, \\\n+ org.omg.IOP, \\\n+ org.omg.IOP.CodecFactoryPackage, \\\n+ org.omg.IOP.CodecPackage, \\\n+ org.omg.Messaging, \\\n+ org.omg.PortableInterceptor, \\\n+ org.omg.PortableInterceptor.ORBInitInfoPackage, \\\n+ org.omg.PortableServer, \\\n+ org.omg.PortableServer.CurrentPackage, \\\n+ org.omg.PortableServer.POAManagerPackage, \\\n+ org.omg.PortableServer.POAPackage, \\\n+ org.omg.PortableServer.portable, \\\n+ org.omg.PortableServer.ServantLocatorPackage, \\\n+ org.omg.SendingContext, \\\n+ org.omg.stub.java.rmi, \\\n+ org.omg.stub.javax.management.remote.rmi, \\\n+ org.w3c.dom, \\\n+ org.w3c.dom.bootstrap, \\\n+ org.w3c.dom.css, \\\n+ org.w3c.dom.events, \\\n+ org.w3c.dom.html, \\\n+ org.w3c.dom.ls, \\\n+ org.w3c.dom.ranges, \\\n+ org.w3c.dom.stylesheets, \\\n+ org.w3c.dom.traversal, \\\n+ org.w3c.dom.views, \\\n+ org.w3c.dom.xpath, \\\n+ org.xml.sax, \\\n+ org.xml.sax.ext, \\\n+ org.xml.sax.helpers, \\\n+ com.sun.nio.sctp\n+\n+jre-1.8= \\\n+ javax.accessibility, \\\n+ javax.activation;version=\"1.1\", \\\n+ javax.activity, \\\n+ javax.annotation;version=\"1.0\", \\\n+ javax.annotation.processing;version=\"1.0\", \\\n+ javax.crypto, \\\n+ javax.crypto.interfaces, \\\n+ javax.crypto.spec, \\\n+ javax.imageio, \\\n+ javax.imageio.event, \\\n+ javax.imageio.metadata, \\\n+ javax.imageio.plugins.bmp, \\\n+ javax.imageio.plugins.jpeg, \\\n+ javax.imageio.spi, \\\n+ javax.imageio.stream, \\\n+ javax.jws, \\\n+ javax.jws.soap, \\\n+ javax.lang.model, \\\n+ javax.lang.model.element, \\\n+ javax.lang.model.type, \\\n+ javax.lang.model.util, \\\n+ javax.management, \\\n+ javax.management.loading, \\\n+ javax.management.modelmbean, \\\n+ javax.management.monitor, \\\n+ javax.management.openmbean, \\\n+ javax.management.relation, \\\n+ javax.management.remote, \\\n+ javax.management.remote.rmi, \\\n+ javax.management.timer, \\\n+ javax.naming, \\\n+ javax.naming.directory, \\\n+ javax.naming.event, \\\n+ javax.naming.ldap, \\\n+ javax.naming.spi, \\\n+ javax.net, \\\n+ javax.net.ssl, \\\n+ javax.print, \\\n+ javax.print.attribute, \\\n+ javax.print.attribute.standard, \\\n+ javax.print.event, \\\n+ javax.rmi, \\\n+ javax.rmi.CORBA, \\\n+ javax.rmi.ssl, \\\n+ javax.script, \\\n+ javax.security.auth, \\\n+ javax.security.auth.callback, \\\n+ javax.security.auth.kerberos, \\\n+ javax.security.auth.login, \\\n+ javax.security.auth.spi, \\\n+ javax.security.auth.x500, \\\n+ javax.security.cert, \\\n+ javax.security.sasl, \\\n+ javax.sound.midi, \\\n+ javax.sound.midi.spi, \\\n+ javax.sound.sampled, \\\n+ javax.sound.sampled.spi, \\\n+ javax.sql, \\\n+ javax.sql.rowset, \\\n+ javax.sql.rowset.serial, \\\n+ javax.sql.rowset.spi, \\\n+ javax.swing, \\\n+ javax.swing.border, \\\n+ javax.swing.colorchooser, \\\n+ javax.swing.event, \\\n+ javax.swing.filechooser, \\\n+ javax.swing.plaf, \\\n+ javax.swing.plaf.basic, \\\n+ javax.swing.plaf.metal, \\\n+ javax.swing.plaf.multi, \\\n+ javax.swing.plaf.synth, \\\n+ javax.swing.table, \\\n+ javax.swing.text, \\\n+ javax.swing.text.html, \\\n+ javax.swing.text.html.parser, \\\n+ javax.swing.text.rtf, \\\n+ javax.swing.tree, \\\n+ javax.swing.undo, \\\n+ javax.tools, \\\n+ javax.transaction; javax.transaction.xa; partial=true; mandatory:=partial, \\\n+ javax.xml, \\\n+ javax.xml.bind;version=\"2.2.8\", \\\n+ javax.xml.bind.annotation;version=\"2.2.8\", \\\n+ javax.xml.bind.annotation.adapters;version=\"2.2.8\", \\\n+ javax.xml.bind.attachment;version=\"2.2.8\", \\\n+ javax.xml.bind.helpers;version=\"2.2.8\", \\\n+ javax.xml.bind.util;version=\"2.2.8\", \\\n+ javax.xml.crypto, \\\n+ javax.xml.crypto.dom, \\\n+ javax.xml.crypto.dsig, \\\n+ javax.xml.crypto.dsig.dom, \\\n+ javax.xml.crypto.dsig.keyinfo, \\\n+ javax.xml.crypto.dsig.spec, \\\n+ javax.xml.datatype, \\\n+ javax.xml.namespace, \\\n+ javax.xml.parsers, \\\n+ javax.xml.soap;version=\"1.3\", \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 440}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjI0NjAxOnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-metricsplugin/src/main/java/ddf/catalog/metrics/CatalogMetrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowNDowMlrOGuxUGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODowODowNVrOGuzn8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NTY0Mw==", "bodyText": "Can we update unit tests to check this?", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451695643", "createdAt": "2020-07-08T17:04:02Z", "author": {"login": "clockard"}, "path": "catalog/core/catalog-core-metricsplugin/src/main/java/ddf/catalog/metrics/CatalogMetrics.java", "diffHunk": "@@ -95,8 +97,10 @@ public QueryRequest process(QueryRequest input)\n       throws PluginExecutionException, StopProcessingException {\n     final String scope = getQueryScope(input);\n     QueryTypeFilterDelegate queryType = new QueryTypeFilterDelegate();\n-    Set<String> sourceIds = input.getSourceIds();\n-    if (sourceIds != null) {\n+\n+    if (input.getSourceIds() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczMzQ5MA==", "bodyText": "Added a unit test for this", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451733490", "createdAt": "2020-07-08T18:08:05Z", "author": {"login": "SmithJosh"}, "path": "catalog/core/catalog-core-metricsplugin/src/main/java/ddf/catalog/metrics/CatalogMetrics.java", "diffHunk": "@@ -95,8 +97,10 @@ public QueryRequest process(QueryRequest input)\n       throws PluginExecutionException, StopProcessingException {\n     final String scope = getQueryScope(input);\n     QueryTypeFilterDelegate queryType = new QueryTypeFilterDelegate();\n-    Set<String> sourceIds = input.getSourceIds();\n-    if (sourceIds != null) {\n+\n+    if (input.getSourceIds() != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NTY0Mw=="}, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjI1MjE3OnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowNTozNlrOGuxX9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNjowOFrOGveJzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ==", "bodyText": "Update unit tests?", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451696631", "createdAt": "2020-07-08T17:05:36Z", "author": {"login": "clockard"}, "path": "catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java", "diffHunk": "@@ -429,8 +430,17 @@ private static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRe\n     // check if the resource request included a qualifier in which case we are trying to retrieve\n     // a derived resource and not the resource\n     final Serializable qualifier = resourceReq.getPropertyValue(ResourceRequest.QUALIFIER);\n-\n-    if (qualifier == null) { // no qualifier means we are retrieving the resource\n+    final String scheme = resourceInfo.getResourceUri().getScheme();\n+\n+    // no qualifier means we are retrieving the resource\n+    // presence of a qualifier can mean different things. We interpret it based on protocol:\n+    //   - content: this always means we are retrieving a derived resource.\n+    //   - http(s): we assume the intent is to retrieve a derived resource. Is this always true?\n+    //   - other: we assume we are retrieving the resource. This assumption is based on experience\n+    //            with protocols that use the qualifier for purposes other than derived resources.\n+    //            If protocols besides content and http(s) need to support derived resources, this\n+    //            could be an issue.\n+    if (qualifier == null || !Arrays.asList(\"http\", \"https\", \"content\").contains(scheme)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTc0NTA0MA==", "bodyText": "Hm... same here. No unit tests for this derived resource handling logic. I can try to add something for this change, but the whole method needs tests.", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451745040", "createdAt": "2020-07-08T18:29:04Z", "author": {"login": "SmithJosh"}, "path": "catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java", "diffHunk": "@@ -429,8 +430,17 @@ private static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRe\n     // check if the resource request included a qualifier in which case we are trying to retrieve\n     // a derived resource and not the resource\n     final Serializable qualifier = resourceReq.getPropertyValue(ResourceRequest.QUALIFIER);\n-\n-    if (qualifier == null) { // no qualifier means we are retrieving the resource\n+    final String scheme = resourceInfo.getResourceUri().getScheme();\n+\n+    // no qualifier means we are retrieving the resource\n+    // presence of a qualifier can mean different things. We interpret it based on protocol:\n+    //   - content: this always means we are retrieving a derived resource.\n+    //   - http(s): we assume the intent is to retrieve a derived resource. Is this always true?\n+    //   - other: we assume we are retrieving the resource. This assumption is based on experience\n+    //            with protocols that use the qualifier for purposes other than derived resources.\n+    //            If protocols besides content and http(s) need to support derived resources, this\n+    //            could be an issue.\n+    if (qualifier == null || !Arrays.asList(\"http\", \"https\", \"content\").contains(scheme)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ=="}, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDI4NQ==", "bodyText": "Added unit tests", "url": "https://github.com/codice/ddf/pull/6164#discussion_r452430285", "createdAt": "2020-07-09T19:06:08Z", "author": {"login": "SmithJosh"}, "path": "catalog/core/catalog-core-standardframework/src/main/java/ddf/catalog/impl/operations/ResourceOperations.java", "diffHunk": "@@ -429,8 +430,17 @@ private static URI getResourceOrDerivedUri(ResourceInfo resourceInfo, ResourceRe\n     // check if the resource request included a qualifier in which case we are trying to retrieve\n     // a derived resource and not the resource\n     final Serializable qualifier = resourceReq.getPropertyValue(ResourceRequest.QUALIFIER);\n-\n-    if (qualifier == null) { // no qualifier means we are retrieving the resource\n+    final String scheme = resourceInfo.getResourceUri().getScheme();\n+\n+    // no qualifier means we are retrieving the resource\n+    // presence of a qualifier can mean different things. We interpret it based on protocol:\n+    //   - content: this always means we are retrieving a derived resource.\n+    //   - http(s): we assume the intent is to retrieve a derived resource. Is this always true?\n+    //   - other: we assume we are retrieving the resource. This assumption is based on experience\n+    //            with protocols that use the qualifier for purposes other than derived resources.\n+    //            If protocols besides content and http(s) need to support derived resources, this\n+    //            could be an issue.\n+    if (qualifier == null || !Arrays.asList(\"http\", \"https\", \"content\").contains(scheme)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5NjYzMQ=="}, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNjI2MzgwOnYy", "diffSide": "RIGHT", "path": "platform/security/core/security-core-services/src/main/java/ddf/security/soap/impl/SecureProxyServiceFactoryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzowODo0MFrOGuxfag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxODoxMDo0MVrOGuztXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODUzOA==", "bodyText": "Update unit tests?", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451698538", "createdAt": "2020-07-08T17:08:40Z", "author": {"login": "clockard"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/soap/impl/SecureProxyServiceFactoryImpl.java", "diffHunk": "@@ -326,7 +326,7 @@ public void handleMessage(Message message) throws Fault {\n       }\n \n       Collection<AssertionInfo> ais = getAllAssertionsByLocalname(aim, SPConstants.ISSUED_TOKEN);\n-      if (ais == null) {\n+      if (ais == null || ais.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTczNDg3Nw==", "bodyText": "There are no unit tests to update for this \ud83d\ude15", "url": "https://github.com/codice/ddf/pull/6164#discussion_r451734877", "createdAt": "2020-07-08T18:10:41Z", "author": {"login": "SmithJosh"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/soap/impl/SecureProxyServiceFactoryImpl.java", "diffHunk": "@@ -326,7 +326,7 @@ public void handleMessage(Message message) throws Fault {\n       }\n \n       Collection<AssertionInfo> ais = getAllAssertionsByLocalname(aim, SPConstants.ISSUED_TOKEN);\n-      if (ais == null) {\n+      if (ais == null || ais.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTY5ODUzOA=="}, "originalCommit": {"oid": "8cceca3fff6ec22d7078de75fb95c7792c649c97"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4650, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}