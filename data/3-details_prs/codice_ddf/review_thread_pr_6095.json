{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMDY0ODcw", "number": 6095, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyNToyMFrOEBcukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDo0NlrOEB7ZyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5OTU0NzA2OnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-solrcommands/src/main/java/org/codice/ddf/commands/solr/BackupCommand.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxNzoyNToyMFrOGdTTSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMDoyMjoyMlrOGdYzhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3ODEyMA==", "bodyText": "\u2753 Why remove the annotation? Is the response no longer nullable?", "url": "https://github.com/codice/ddf/pull/6095#discussion_r433378120", "createdAt": "2020-06-01T17:25:20Z", "author": {"login": "SmithJosh"}, "path": "catalog/core/catalog-core-solrcommands/src/main/java/org/codice/ddf/commands/solr/BackupCommand.java", "diffHunk": "@@ -148,7 +147,7 @@ private void performSolrCloudBackup() throws IOException {\n     }\n   }\n \n-  private void printResponse(@Nullable HttpResponse response) {\n+  private void printResponse(HttpResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570ea40bec86f093b252cd5863a828471d0c350a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ2ODI5NQ==", "bodyText": "Because it was forcing a dependency on guava for an unnecessary annotation.", "url": "https://github.com/codice/ddf/pull/6095#discussion_r433468295", "createdAt": "2020-06-01T20:22:22Z", "author": {"login": "stustison"}, "path": "catalog/core/catalog-core-solrcommands/src/main/java/org/codice/ddf/commands/solr/BackupCommand.java", "diffHunk": "@@ -148,7 +147,7 @@ private void performSolrCloudBackup() throws IOException {\n     }\n   }\n \n-  private void printResponse(@Nullable HttpResponse response) {\n+  private void printResponse(HttpResponse response) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzM3ODEyMA=="}, "originalCommit": {"oid": "570ea40bec86f093b252cd5863a828471d0c350a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDU3Mjg5OnYy", "diffSide": "RIGHT", "path": "platform/security/core/security-core-services/src/main/java/ddf/security/permission/impl/PermissionsImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNDo0NlrOGeEx2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTozNjozN1rOGeE0-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODc2MA==", "bodyText": "\u270f\ufe0f These builder methods might be better as static methods on the interface.\nPro: when you want to call one of these builders, you don't have to inject a Permissions service into the java class. You just call the static interface method.\nCon: testing", "url": "https://github.com/codice/ddf/pull/6095#discussion_r434188760", "createdAt": "2020-06-02T21:34:46Z", "author": {"login": "bakejeyner"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/permission/impl/PermissionsImpl.java", "diffHunk": "@@ -72,4 +78,27 @@ public PermissionsImpl() {}\n     }\n     return stringAttributes;\n   }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, KeyValuePermission... permissions) {\n+    return new KeyValueCollectionPermissionImpl(action, permissions);\n+  }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, Map<String, ? extends Collection<String>> map) {\n+    return new KeyValueCollectionPermissionImpl(action, map);\n+  }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, Collection<KeyValuePermission> permissions) {\n+    return new KeyValueCollectionPermissionImpl(action, permissions);\n+  }\n+\n+  @Override\n+  public KeyValuePermission buildKeyValuePermission(String key, Set<String> values) {\n+    return new KeyValuePermissionImpl(key, values);\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "570ea40bec86f093b252cd5863a828471d0c350a"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4OTU2MQ==", "bodyText": "Can't do a static method without embedding the bundle or directly referencing an impl of some sort via an import.", "url": "https://github.com/codice/ddf/pull/6095#discussion_r434189561", "createdAt": "2020-06-02T21:36:37Z", "author": {"login": "stustison"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/permission/impl/PermissionsImpl.java", "diffHunk": "@@ -72,4 +78,27 @@ public PermissionsImpl() {}\n     }\n     return stringAttributes;\n   }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, KeyValuePermission... permissions) {\n+    return new KeyValueCollectionPermissionImpl(action, permissions);\n+  }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, Map<String, ? extends Collection<String>> map) {\n+    return new KeyValueCollectionPermissionImpl(action, map);\n+  }\n+\n+  @Override\n+  public KeyValueCollectionPermission buildKeyValueCollectionPermission(\n+      String action, Collection<KeyValuePermission> permissions) {\n+    return new KeyValueCollectionPermissionImpl(action, permissions);\n+  }\n+\n+  @Override\n+  public KeyValuePermission buildKeyValuePermission(String key, Set<String> values) {\n+    return new KeyValuePermissionImpl(key, values);\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4ODc2MA=="}, "originalCommit": {"oid": "570ea40bec86f093b252cd5863a828471d0c350a"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4609, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}