{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzYxNTUx", "number": 5931, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNjo0OVrODrO7gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo1MTozM1rODxtdAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NjU5OTY5OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/utils/export/export.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNjo0OVrOF7dKog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDoxNjo0OVrOF7dKog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzg4ODE2Mg==", "bodyText": "\u270f\ufe0f remove commented line", "url": "https://github.com/codice/ddf/pull/5931#discussion_r397888162", "createdAt": "2020-03-25T14:16:49Z", "author": {"login": "zta6"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/utils/export/export.tsx", "diffHunk": "@@ -78,10 +81,12 @@ export const getExportOptions = async (type: Transformer) => {\n export const exportResult = async (\n   source: string,\n   id: string,\n-  transformer: string\n+  transformer: string,\n+  attributes: string\n ) => {\n   return await fetch(\n-    `/services/catalog/sources/${source}/${id}?transform=${transformer}`\n+    `/services/catalog/sources/${source}/${id}?transform=${transformer}&columnOrder=${attributes}`\n+    // `/services/catalog/sources/${source}/${id}?transform=${transformer}`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f15971fb35123562f7f59e9d1125471f277e636"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njg4NTMxOnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/utils/export/export.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNDozM1rOF7gA9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNDozM1rOF7gA9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNDgzNg==", "bodyText": "\u270f\ufe0f use .get() to access a single attribute from a backbone model (for example line 58)", "url": "https://github.com/codice/ddf/pull/5931#discussion_r397934836", "createdAt": "2020-03-25T15:14:33Z", "author": {"login": "andrewzimmer"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/utils/export/export.tsx", "diffHunk": "@@ -67,6 +67,9 @@ export const getExportResult = (result: any) => {\n   return {\n     id: getResultId(result),\n     source: getResultSourceId(result),\n+    attributes: Object.keys(\n+      result.attributes.metacard.attributes.properties.attributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cca4d28b3e525458865ad6586646b58ad35548"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2Njg5OTgzOnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNToxNzo0NVrOF7gKXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNzo0NzozNVrOF7nHFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNzI0NQ==", "bodyText": "Is this transformer used anywhere else? wondering if we should avoid filtering if no columnOrder arg is passed in", "url": "https://github.com/codice/ddf/pull/5931#discussion_r397937245", "createdAt": "2020-03-25T15:17:45Z", "author": {"login": "andrewzimmer"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,11 +46,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n+    String attributeString = (String) arguments.get(\"columnOrder\");\n+    ArrayList<String> attributes =\n+        new ArrayList<String>(Arrays.asList((attributeString).split(\",\")));\n \n     Appendable appendable =\n         writeMetacardsToCsv(\n             Collections.singletonList(metacard),\n-            new ArrayList<>(metacard.getMetacardType().getAttributeDescriptors()),\n+            new ArrayList<AttributeDescriptor>(\n+                metacard\n+                    .getMetacardType()\n+                    .getAttributeDescriptors()\n+                    .stream()\n+                    .filter(attr -> attributes.contains(attr.getName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2cca4d28b3e525458865ad6586646b58ad35548"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODA1MTA5NA==", "bodyText": "I don't think it's used anywhere else but it's probably a good idea to add that logic anyway", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398051094", "createdAt": "2020-03-25T17:47:35Z", "author": {"login": "cassandrabailey293"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,11 +46,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n+    String attributeString = (String) arguments.get(\"columnOrder\");\n+    ArrayList<String> attributes =\n+        new ArrayList<String>(Arrays.asList((attributeString).split(\",\")));\n \n     Appendable appendable =\n         writeMetacardsToCsv(\n             Collections.singletonList(metacard),\n-            new ArrayList<>(metacard.getMetacardType().getAttributeDescriptors()),\n+            new ArrayList<AttributeDescriptor>(\n+                metacard\n+                    .getMetacardType()\n+                    .getAttributeDescriptors()\n+                    .stream()\n+                    .filter(attr -> attributes.contains(attr.getName()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkzNzI0NQ=="}, "originalCommit": {"oid": "c2cca4d28b3e525458865ad6586646b58ad35548"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MTkzNjUyOnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo1OTo1OVrOF8Q7XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNjo1OTo1OVrOF8Q7XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODczNjIyMA==", "bodyText": "\u270f\ufe0f Same comment as the other PR, could use CollectionUtils.isEmpty(attributes) here", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398736220", "createdAt": "2020-03-26T16:59:59Z", "author": {"login": "zta6"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +46,21 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString = (String) arguments.get(\"columnOrder\");\n+    List<String> attributes =\n+        new ArrayList<String>(Arrays.asList((attributeString).split(\",\")));\n+    List<AttributeDescriptor> allAttributes =\n+        new ArrayList<AttributeDescriptor>(metacard.getMetacardType().getAttributeDescriptors());\n+    List<AttributeDescriptor> descriptors =\n+        new ArrayList<AttributeDescriptor>(\n+            attributes == null || attributes.isEmpty()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd70cc4cafcb9f479704c11024b8652d2bb23f70"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjA3MDY3OnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxNzozMDoxNlrOF8SRUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTozNDowNVrOF8XQag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1ODIyNg==", "bodyText": "if no columnOrder arg is present, will this return an empty string or null?", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398758226", "createdAt": "2020-03-26T17:30:16Z", "author": {"login": "andrewzimmer"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString = (String) arguments.get(\"columnOrder\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cabae96808196b487b3c32d5cfc2570641c9b2c"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODgzOTkxNA==", "bodyText": "i think it actually returns null, so I should guard for that \ud83d\udc4d", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398839914", "createdAt": "2020-03-26T19:34:05Z", "author": {"login": "cassandrabailey293"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString = (String) arguments.get(\"columnOrder\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODc1ODIyNg=="}, "originalCommit": {"oid": "4cabae96808196b487b3c32d5cfc2570641c9b2c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3MjY0OTA3OnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQxOTo1NToyMFrOF8X_YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQyMDowMzoyNFrOF8YRWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MTkzNg==", "bodyText": "any reason these all need to be new ArrayList? I think it should already be returning a list of strings. Same question for the two below", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398851936", "createdAt": "2020-03-26T19:55:20Z", "author": {"login": "andrewzimmer"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,21 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString =\n+        arguments.get(\"columnOrder\") != null ? (String) arguments.get(\"columnOrder\") : \"\";\n+    List<String> attributes = new ArrayList<String>(Arrays.asList((attributeString).split(\",\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f5ace17f6fd8a422b26aac24d18cd7172470c12"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1NjUzNg==", "bodyText": "I think two of them can be changed, the metacard.getMetacardType().getAttributeDescriptors() returns a Set so I'll probably leave that as is. Alternatively I could instantiate allAttributes as a Set, but i'd just have to change it to a list when instantiating descriptors so I'll leave it as-is. I can change the other two though", "url": "https://github.com/codice/ddf/pull/5931#discussion_r398856536", "createdAt": "2020-03-26T20:03:24Z", "author": {"login": "cassandrabailey293"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,21 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString =\n+        arguments.get(\"columnOrder\") != null ? (String) arguments.get(\"columnOrder\") : \"\";\n+    List<String> attributes = new ArrayList<String>(Arrays.asList((attributeString).split(\",\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODg1MTkzNg=="}, "originalCommit": {"oid": "6f5ace17f6fd8a422b26aac24d18cd7172470c12"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDUxNTIxOnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTo1MTozM1rOGFVWdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxOTo1NDozNVrOGFehgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0NTg3OA==", "bodyText": "According to the documentation for CollectionUtils.isEmpty, it returns true on null. Do we want to return null here?", "url": "https://github.com/codice/ddf/pull/5931#discussion_r408245878", "createdAt": "2020-04-14T15:51:33Z", "author": {"login": "AzGoalie"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString =\n+        arguments.get(\"columnOrder\") != null ? (String) arguments.get(\"columnOrder\") : \"\";\n+    List<String> attributes = Arrays.asList((attributeString).split(\",\"));\n+    List<AttributeDescriptor> allAttributes =\n+        new ArrayList<AttributeDescriptor>(metacard.getMetacardType().getAttributeDescriptors());\n+    List<AttributeDescriptor> descriptors =\n+        CollectionUtils.isEmpty(attributes)\n+            ? allAttributes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "634634da246cae3852341647502073c60e09b380"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODM5NjE2MA==", "bodyText": "attributes will never be null because we initialize it with Arrays.asList((attributeString).split(\",\")), which will return an empty list when given an empty string.  attributeString defaults to the empty string if no columnOrder argument is found.", "url": "https://github.com/codice/ddf/pull/5931#discussion_r408396160", "createdAt": "2020-04-14T19:54:35Z", "author": {"login": "cassandrabailey293"}, "path": "catalog/transformer/catalog-transformer-csv-queryresponse/src/main/java/ddf/catalog/transformer/csv/CsvMetacardTransformer.java", "diffHunk": "@@ -43,12 +48,20 @@ public BinaryContent transform(Metacard metacard, Map<String, Serializable> argu\n \n     Map<String, String> aliases =\n         (Map<String, String>) arguments.getOrDefault(\"aliases\", new HashMap<>());\n-\n+    String attributeString =\n+        arguments.get(\"columnOrder\") != null ? (String) arguments.get(\"columnOrder\") : \"\";\n+    List<String> attributes = Arrays.asList((attributeString).split(\",\"));\n+    List<AttributeDescriptor> allAttributes =\n+        new ArrayList<AttributeDescriptor>(metacard.getMetacardType().getAttributeDescriptors());\n+    List<AttributeDescriptor> descriptors =\n+        CollectionUtils.isEmpty(attributes)\n+            ? allAttributes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODI0NTg3OA=="}, "originalCommit": {"oid": "634634da246cae3852341647502073c60e09b380"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4668, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}