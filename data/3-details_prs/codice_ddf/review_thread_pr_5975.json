{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNjczMTE4", "number": 5975, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjozNzozNlrODxTUhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo0NDozNVrODxXNaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDIzMzY1OnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjozNzozNlrOGEsdxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjozNzozNlrOGEsdxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU3NjAwNw==", "bodyText": "Avoid using Log4j directly. Apache StringUtils would be better", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407576007", "createdAt": "2020-04-13T16:37:36Z", "author": {"login": "SmithJosh"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -17,17 +17,20 @@\n import ddf.security.common.SecurityTokenHolder;\n import ddf.security.common.audit.SecurityLogger;\n import java.io.IOException;\n-import java.security.cert.X509Certificate;\n+import java.net.URISyntaxException;\n import java.util.Arrays;\n-import java.util.Enumeration;\n import javax.servlet.ServletException;\n import javax.servlet.http.Cookie;\n import javax.servlet.http.HttpServlet;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n import javax.servlet.http.HttpSession;\n+import org.apache.http.HttpStatus;\n+import org.apache.http.client.utils.URIBuilder;\n+import org.apache.logging.log4j.util.Strings;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDI3MzM3OnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1NlrOGEs2BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjo0ODo1NlrOGEs2BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU4MjIxMw==", "bodyText": "\u270f\ufe0f I think you can redirect to the complete SystemBaseUrl.EXTERNAL.construct(redirectUri) url and avoid this conditional", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407582213", "createdAt": "2020-04-13T16:48:56Z", "author": {"login": "SmithJosh"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -46,32 +50,24 @@ protected void doGet(HttpServletRequest request, HttpServletResponse response)\n \n     invalidateSession(request, response);\n \n-    boolean mustCloseBrowser = (checkForBasic(request) || checkForPki(request));\n-    String message = String.format(\"{ \\\"mustCloseBrowser\\\": %b }\", mustCloseBrowser);\n-\n     try {\n-      response.setStatus(HttpServletResponse.SC_OK);\n-      response.setContentType(\"application/json\");\n-      response.getWriter().write(message);\n-      response.flushBuffer();\n-    } catch (IOException e) {\n-      LOGGER.warn(\"Unable to write response body\", e);\n-    }\n-  }\n+      URIBuilder redirectUrlBuilder;\n \n-  private boolean checkForBasic(HttpServletRequest request) {\n-    Enumeration authHeaders = request.getHeaders(javax.ws.rs.core.HttpHeaders.AUTHORIZATION);\n-    while (authHeaders.hasMoreElements()) {\n-      if (((String) authHeaders.nextElement()).contains(\"Basic\")) {\n-        return true;\n+      if (Strings.isNotBlank(SystemBaseUrl.EXTERNAL.getRootContext())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDM3MjIxOnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzoxODoxNFrOGEtz9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODowNjowMFrOGEvdSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODA3MA==", "bodyText": "\u2753 What about the service query parameter? The Admin UI and Intrigue use it instead of prevurl", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407598070", "createdAt": "2020-04-13T17:18:14Z", "author": {"login": "SmithJosh"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java", "diffHunk": "@@ -65,23 +65,32 @@ public String getActionProviders(HttpServletRequest request, HttpServletResponse\n     subjectMap.put(\"http_response\", response);\n     subjectMap.put(SecurityConstants.SECURITY_SUBJECT, subject);\n \n-    List<Map<String, String>> actionPropertiesList = new ArrayList<>();\n+    Map<String, String> actionProperties = new HashMap<>();\n \n     for (ActionProvider actionProvider : logoutActionProviders) {\n-      Map<String, String> actionProperties = new HashMap<>();\n       Action action = actionProvider.getAction(subjectMap);\n \n       if (action != null) {\n         String displayName = SubjectUtils.getName(subject, \"\", true);\n         actionProperties.put(\"title\", action.getTitle());\n         actionProperties.put(\"auth\", displayName);\n         actionProperties.put(\"description\", action.getDescription());\n-        actionProperties.put(\"url\", action.getUrl().toString());\n-        actionPropertiesList.add(actionProperties);\n+\n+        StringBuilder urlBuilder = new StringBuilder(action.getUrl().toString());\n+        String referer = request.getHeader(\"Referer\");\n+        if (!StringUtils.isEmpty(referer)) {\n+          String[] parts = referer.split(\"\\\\?prevurl=\");\n+          if (parts.length > 1) {\n+            String previousUrl = parts[1];\n+            urlBuilder.append(\"?prevurl=\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyNTAzMg==", "bodyText": "It's all switched to prevurl in the js code.", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407625032", "createdAt": "2020-04-13T18:06:00Z", "author": {"login": "blen-desta"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java", "diffHunk": "@@ -65,23 +65,32 @@ public String getActionProviders(HttpServletRequest request, HttpServletResponse\n     subjectMap.put(\"http_response\", response);\n     subjectMap.put(SecurityConstants.SECURITY_SUBJECT, subject);\n \n-    List<Map<String, String>> actionPropertiesList = new ArrayList<>();\n+    Map<String, String> actionProperties = new HashMap<>();\n \n     for (ActionProvider actionProvider : logoutActionProviders) {\n-      Map<String, String> actionProperties = new HashMap<>();\n       Action action = actionProvider.getAction(subjectMap);\n \n       if (action != null) {\n         String displayName = SubjectUtils.getName(subject, \"\", true);\n         actionProperties.put(\"title\", action.getTitle());\n         actionProperties.put(\"auth\", displayName);\n         actionProperties.put(\"description\", action.getDescription());\n-        actionProperties.put(\"url\", action.getUrl().toString());\n-        actionPropertiesList.add(actionProperties);\n+\n+        StringBuilder urlBuilder = new StringBuilder(action.getUrl().toString());\n+        String referer = request.getHeader(\"Referer\");\n+        if (!StringUtils.isEmpty(referer)) {\n+          String[] parts = referer.split(\"\\\\?prevurl=\");\n+          if (parts.length > 1) {\n+            String previousUrl = parts[1];\n+            urlBuilder.append(\"?prevurl=\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU5ODA3MA=="}, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDQzMDU5OnYy", "diffSide": "RIGHT", "path": "platform/security/handler/security-handler-oidc/src/main/java/org/codice/ddf/security/handler/oidc/OidcCallbackEndpoint.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNzozNToyMFrOGEuYxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoxMjowM1rOGEvp7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg==", "bodyText": "\u2753 Why exclude the root context?", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407607492", "createdAt": "2020-04-13T17:35:20Z", "author": {"login": "SmithJosh"}, "path": "platform/security/handler/security-handler-oidc/src/main/java/org/codice/ddf/security/handler/oidc/OidcCallbackEndpoint.java", "diffHunk": "@@ -54,12 +58,36 @@ public Response logout(\n \n     sessionStore.destroySession(j2EContext);\n \n+    String localLogout = SystemBaseUrl.EXTERNAL.constructUrl(\"/logout/local\");\n+    WebClient webClient = getWebClient(localLogout);\n+    Response logoutResponse = webClient.get();\n+    if (logoutResponse.getStatus() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {\n+      return logoutResponse;\n+    }\n+\n     try {\n-      return Response.temporaryRedirect(new URI(SystemBaseUrl.EXTERNAL.constructUrl(\"/logout\")))\n-          .build();\n+      String redirectUrl = SystemBaseUrl.EXTERNAL.constructUrl(redirectUri, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyNTM1Mg==", "bodyText": "The url is /logout/logout-response it doesn't have /services", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407625352", "createdAt": "2020-04-13T18:06:38Z", "author": {"login": "blen-desta"}, "path": "platform/security/handler/security-handler-oidc/src/main/java/org/codice/ddf/security/handler/oidc/OidcCallbackEndpoint.java", "diffHunk": "@@ -54,12 +58,36 @@ public Response logout(\n \n     sessionStore.destroySession(j2EContext);\n \n+    String localLogout = SystemBaseUrl.EXTERNAL.constructUrl(\"/logout/local\");\n+    WebClient webClient = getWebClient(localLogout);\n+    Response logoutResponse = webClient.get();\n+    if (logoutResponse.getStatus() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {\n+      return logoutResponse;\n+    }\n+\n     try {\n-      return Response.temporaryRedirect(new URI(SystemBaseUrl.EXTERNAL.constructUrl(\"/logout\")))\n-          .build();\n+      String redirectUrl = SystemBaseUrl.EXTERNAL.constructUrl(redirectUri, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg=="}, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYyODI3MQ==", "bodyText": "Got it. Was confusing root/external context", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407628271", "createdAt": "2020-04-13T18:12:03Z", "author": {"login": "SmithJosh"}, "path": "platform/security/handler/security-handler-oidc/src/main/java/org/codice/ddf/security/handler/oidc/OidcCallbackEndpoint.java", "diffHunk": "@@ -54,12 +58,36 @@ public Response logout(\n \n     sessionStore.destroySession(j2EContext);\n \n+    String localLogout = SystemBaseUrl.EXTERNAL.constructUrl(\"/logout/local\");\n+    WebClient webClient = getWebClient(localLogout);\n+    Response logoutResponse = webClient.get();\n+    if (logoutResponse.getStatus() == HttpStatus.SC_INTERNAL_SERVER_ERROR) {\n+      return logoutResponse;\n+    }\n+\n     try {\n-      return Response.temporaryRedirect(new URI(SystemBaseUrl.EXTERNAL.constructUrl(\"/logout\")))\n-          .build();\n+      String redirectUrl = SystemBaseUrl.EXTERNAL.constructUrl(redirectUri, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYwNzQ5Mg=="}, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDg3MDgxOnYy", "diffSide": "RIGHT", "path": "ui/packages/security-logout/src/main/resources/logout-response.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTo0NDozNVrOGEysgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDowNzozMFrOGEzbwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA4MA==", "bodyText": "\u2753 I'm confused as to why we have both index.html and logout-response.html. It looks to my like they both display a similarly formatted logout page, but index.html is specifically for the error case. Is that how they are used in code, i.e. we return logout-response.html when logout succeeds and return index.html when logout fails?", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407678080", "createdAt": "2020-04-13T19:44:35Z", "author": {"login": "bakejeyner"}, "path": "ui/packages/security-logout/src/main/resources/logout-response.html", "diffHunk": "@@ -26,9 +26,13 @@\n </head>\n <body class=\"full-width logout-response-body\">\n <div class=\"full-width logout-response-container\">\n-    <div class=\"logout-msg\">\n-        <h2 id=\"extramessage\"></h2>\n-        <h4>You can <a id=\"landinglink\" href=\"#\">return to the landing page.</a></h4>\n+    <div id=\"standard-msg\" class=\"logout-msg\" style=\"display:none;\">\n+        <h2>You have been logged out</h2>\n+        <h4><a id=\"link\" href=\"#\">Sign in again</a></h4>\n+    </div>\n+    <div id=\"close-browser-msg\" class=\"logout-msg\" style=\"display:none;\">\n+        <h2>You have been logged out</h2>\n+        <h4>Please close your browser to prevent reuse of cached credentials</h4>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY5MDE3Ng==", "bodyText": "index.html is used by main.js it processes logout at the beginning by getting the logout URL and calling it. If at any point that fails it's responsible to terminate the process and display the logout error.\nlogout-response.html is used by logout-response.js it is called at the end of logout and its task is to either display the successful logout message or a close your browser message", "url": "https://github.com/codice/ddf/pull/5975#discussion_r407690176", "createdAt": "2020-04-13T20:07:30Z", "author": {"login": "blen-desta"}, "path": "ui/packages/security-logout/src/main/resources/logout-response.html", "diffHunk": "@@ -26,9 +26,13 @@\n </head>\n <body class=\"full-width logout-response-body\">\n <div class=\"full-width logout-response-container\">\n-    <div class=\"logout-msg\">\n-        <h2 id=\"extramessage\"></h2>\n-        <h4>You can <a id=\"landinglink\" href=\"#\">return to the landing page.</a></h4>\n+    <div id=\"standard-msg\" class=\"logout-msg\" style=\"display:none;\">\n+        <h2>You have been logged out</h2>\n+        <h4><a id=\"link\" href=\"#\">Sign in again</a></h4>\n+    </div>\n+    <div id=\"close-browser-msg\" class=\"logout-msg\" style=\"display:none;\">\n+        <h2>You have been logged out</h2>\n+        <h4>Please close your browser to prevent reuse of cached credentials</h4>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3ODA4MA=="}, "originalCommit": {"oid": "01dbf63e15489d855bbe40747078735ef262bb9f"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4711, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}