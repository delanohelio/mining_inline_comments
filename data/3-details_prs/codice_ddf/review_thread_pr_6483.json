{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjczNzcw", "number": 6483, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowMzowOFrOFOUDiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxODoyNjoxNVrOFRj2Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTUyOTY4OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowMzowOFrOITAGEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNFQxOTowMToyOFrOITyicw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NTQwOQ==", "bodyText": "\u2753 I'm curios why we're doing this when we're using the underscore flatten function here: https://github.com/codice/ddf/pull/6483/files#diff-61f3b5db651cfd7e289c041c39274cfa06a5b7e476b54fc20ef9ad5c574a21feR142 ?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556795409", "createdAt": "2021-01-13T20:03:08Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {\n+            const geoFilters = (\n+              this.model.get('filterTemplate').filters || [\n+                this.model.get('filterTemplate'),\n+              ]\n+            ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+            const coords = this.wktToCoords(geoFilters)\n+            Common.queueExecution(() => {\n+              this.map.currentView.map.zoomToExtent(coords)\n+            })\n+          }\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = _.flatten(\n+      wktList.map(wkt => {\n+        if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+          const center = terraformer.parse(wkt.value).coordinates\n+          return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')\n+            .geometry.coordinates[0]\n+        }\n+        return terraformer.parse(wkt.value).coordinates\n+      }),\n+      true\n+    )\n+    return this.createCoordinatePairs(this.flatten(parsedGeoCoords))\n+  },\n+  flatten(arr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NzYyMTg3NQ==", "bodyText": "it lets you specify a second argument, true, meaning it will only flatten to one level. but it looks like .flat() can achieve the same thing:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flat\nso i will just use .flat()", "url": "https://github.com/codice/ddf/pull/6483#discussion_r557621875", "createdAt": "2021-01-14T19:01:28Z", "author": {"login": "cassandrabailey293"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {\n+            const geoFilters = (\n+              this.model.get('filterTemplate').filters || [\n+                this.model.get('filterTemplate'),\n+              ]\n+            ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+            const coords = this.wktToCoords(geoFilters)\n+            Common.queueExecution(() => {\n+              this.map.currentView.map.zoomToExtent(coords)\n+            })\n+          }\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = _.flatten(\n+      wktList.map(wkt => {\n+        if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+          const center = terraformer.parse(wkt.value).coordinates\n+          return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')\n+            .geometry.coordinates[0]\n+        }\n+        return terraformer.parse(wkt.value).coordinates\n+      }),\n+      true\n+    )\n+    return this.createCoordinatePairs(this.flatten(parsedGeoCoords))\n+  },\n+  flatten(arr) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NTQwOQ=="}, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTUzNDU4OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNDo0NlrOITAJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNDo0NlrOITAJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NjI1OA==", "bodyText": "\u2753 Any specific reason to use function instead of a fat arrow => as in the previous .reduce instance above?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556796258", "createdAt": "2021-01-13T20:04:46Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {\n+            const geoFilters = (\n+              this.model.get('filterTemplate').filters || [\n+                this.model.get('filterTemplate'),\n+              ]\n+            ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+            const coords = this.wktToCoords(geoFilters)\n+            Common.queueExecution(() => {\n+              this.map.currentView.map.zoomToExtent(coords)\n+            })\n+          }\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = _.flatten(\n+      wktList.map(wkt => {\n+        if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+          const center = terraformer.parse(wkt.value).coordinates\n+          return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')\n+            .geometry.coordinates[0]\n+        }\n+        return terraformer.parse(wkt.value).coordinates\n+      }),\n+      true\n+    )\n+    return this.createCoordinatePairs(this.flatten(parsedGeoCoords))\n+  },\n+  flatten(arr) {\n+    return arr.reduce((flat, toFlatten) => {\n+      return flat.concat(\n+        Array.isArray(toFlatten) ? this.flatten(toFlatten) : toFlatten\n+      )\n+    }, [])\n+  },\n+  createCoordinatePairs(arr) {\n+    return arr.reduce(function(result, value, index, array) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUwNTU0Mjk5OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNzoyMFrOITAOrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNzoyMFrOITAOrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NzYxNQ==", "bodyText": "\u270f\ufe0f I would recommend pulling the model attribute into a variable since it's being referenced multiple times here:\nconst filterTemplate = this.model.get('filterTemplate')\n\nalso reversing the predicate would collapse the nesting nicely:\nif (!filterTemplate)\n  return\n<normal code flow without '{}'>", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556797615", "createdAt": "2021-01-13T20:07:20Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUzOTU3Mzk0OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxODoyNjoxNVrOIYEFpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxODozMDoxMlrOIYEPcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjEwMzcxNg==", "bodyText": "\u2753 What is the significance of 64 here? Can we make it a constant with a descriptive name?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r562103716", "createdAt": "2021-01-21T18:26:15Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -117,11 +121,48 @@ module.exports = Marionette.LayoutView.extend({\n         showResultFilter: false,\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n+          const filterTemplate = this.model.get('filterTemplate')\n           this.showQueryForm(collection, id)\n+          if (!filterTemplate) {\n+            return\n+          }\n+          const geoFilters = (\n+            filterTemplate.filters || [filterTemplate]\n+          ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+          const coords = this.wktToCoords(geoFilters)\n+          Common.queueExecution(() => {\n+            this.map.currentView.map.zoomToExtent(coords)\n+          })\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = wktList.map(wkt => {\n+      if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+        const center = terraformer.parse(wkt.value).coordinates\n+        return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjEwNjIyNQ==", "bodyText": "it's the \"number of steps\", used for precision. the default in the new circle constructor is 64: https://turfjs.org/docs/#circle I'll make it a constant \ud83d\udc4d", "url": "https://github.com/codice/ddf/pull/6483#discussion_r562106225", "createdAt": "2021-01-21T18:30:12Z", "author": {"login": "cassandrabailey293"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -117,11 +121,48 @@ module.exports = Marionette.LayoutView.extend({\n         showResultFilter: false,\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n+          const filterTemplate = this.model.get('filterTemplate')\n           this.showQueryForm(collection, id)\n+          if (!filterTemplate) {\n+            return\n+          }\n+          const geoFilters = (\n+            filterTemplate.filters || [filterTemplate]\n+          ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+          const coords = this.wktToCoords(geoFilters)\n+          Common.queueExecution(() => {\n+            this.map.currentView.map.zoomToExtent(coords)\n+          })\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = wktList.map(wkt => {\n+      if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+        const center = terraformer.parse(wkt.value).coordinates\n+        return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjEwMzcxNg=="}, "originalCommit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4435, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}