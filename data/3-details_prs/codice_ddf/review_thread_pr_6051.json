{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2MzIzMTA1", "number": 6051, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1Nzo1OFrOD8Mm3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowMTo0MlrOD8l3Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NDQ3NzExOnYy", "diffSide": "RIGHT", "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo1Nzo1OFrOGU_YCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoxNjozN1rOGVB-Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MzA0OQ==", "bodyText": "\u2753 Did you mean to leave these comments in?", "url": "https://github.com/codice/ddf/pull/6051#discussion_r424663049", "createdAt": "2020-05-13T18:57:58Z", "author": {"login": "bakejeyner"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java", "diffHunk": "@@ -150,7 +149,7 @@ private void deleteId(String id) {\n   /** @see org.eclipse.jetty.server.SessionIdManager#expireAll(String) */\n   @Override\n   public void expireAll(String id) {\n-    SecurityLogger.audit(\"Expiring session ID {}\", id);\n+    //    SecurityLogger.audit(\"Expiring session ID {}\", id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f630cf922136c591226ecf10b9bfc274030bde78"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcwNTU4Nw==", "bodyText": "I did not mean to leave the comments in, no. Unfortunately, there seems to be no way to audit in these components anymore as they are wired up via jetty.xml not anything in osgi", "url": "https://github.com/codice/ddf/pull/6051#discussion_r424705587", "createdAt": "2020-05-13T20:16:37Z", "author": {"login": "stustison"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/security/session/AttributeSharingHashSessionIdManager.java", "diffHunk": "@@ -150,7 +149,7 @@ private void deleteId(String id) {\n   /** @see org.eclipse.jetty.server.SessionIdManager#expireAll(String) */\n   @Override\n   public void expireAll(String id) {\n-    SecurityLogger.audit(\"Expiring session ID {}\", id);\n+    //    SecurityLogger.audit(\"Expiring session ID {}\", id);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY2MzA0OQ=="}, "originalCommit": {"oid": "f630cf922136c591226ecf10b9bfc274030bde78"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODU2NzA3OnYy", "diffSide": "RIGHT", "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzo0ODoyOFrOGVnrbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxNzoxMzowOVrOGXAYZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA==", "bodyText": "I wonder if we could do something like this in the API, and have a SecurityLogger::getInstance() method or something. Then the audit logging would be similar to normal logging and we could avoid having to pass it around everywhere.", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425323374", "createdAt": "2020-05-14T17:48:28Z", "author": {"login": "SmithJosh"}, "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "diffHunk": "@@ -457,6 +460,17 @@ private void installEncryptionService() {\n     }\n   }\n \n+  private void installSecurityLogger() {\n+\n+    BundleContext bundleContext = getContext();\n+    if (bundleContext != null) {\n+      ServiceReference serviceReference =\n+          bundleContext.getServiceReference(SecurityLogger.class.getName());\n+      securityLogger = (SecurityLogger) bundleContext.getService(serviceReference);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NTUxNg==", "bodyText": "Then we're still passing an implementation in the api, which is what I was trying to avoid.", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425385516", "createdAt": "2020-05-14T19:40:37Z", "author": {"login": "stustison"}, "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "diffHunk": "@@ -457,6 +460,17 @@ private void installEncryptionService() {\n     }\n   }\n \n+  private void installSecurityLogger() {\n+\n+    BundleContext bundleContext = getContext();\n+    if (bundleContext != null) {\n+      ServiceReference serviceReference =\n+          bundleContext.getServiceReference(SecurityLogger.class.getName());\n+      securityLogger = (SecurityLogger) bundleContext.getService(serviceReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM5NDk4OQ==", "bodyText": "You'd still have the api/impl split though so you can hide the implementation dependencies from clients. As described it would make the API OSGI-specific, but you could probably make that pluggable too.\nJust a thought, not a suggestion for this PR.", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425394989", "createdAt": "2020-05-14T19:57:54Z", "author": {"login": "SmithJosh"}, "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "diffHunk": "@@ -457,6 +460,17 @@ private void installEncryptionService() {\n     }\n   }\n \n+  private void installSecurityLogger() {\n+\n+    BundleContext bundleContext = getContext();\n+    if (bundleContext != null) {\n+      ServiceReference serviceReference =\n+          bundleContext.getServiceReference(SecurityLogger.class.getName());\n+      securityLogger = (SecurityLogger) bundleContext.getService(serviceReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjc3NjY3OQ==", "bodyText": "I'm going to leave it as is for now.", "url": "https://github.com/codice/ddf/pull/6051#discussion_r426776679", "createdAt": "2020-05-18T17:13:09Z", "author": {"login": "stustison"}, "path": "platform/security/security-jaas-ldap/src/main/java/ddf/ldap/ldaplogin/SslLdapLoginModule.java", "diffHunk": "@@ -457,6 +460,17 @@ private void installEncryptionService() {\n     }\n   }\n \n+  private void installSecurityLogger() {\n+\n+    BundleContext bundleContext = getContext();\n+    if (bundleContext != null) {\n+      ServiceReference serviceReference =\n+          bundleContext.getServiceReference(SecurityLogger.class.getName());\n+      securityLogger = (SecurityLogger) bundleContext.getService(serviceReference);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyMzM3NA=="}, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODU4NzgwOnYy", "diffSide": "RIGHT", "path": "platform/solr/solr-factory-impl/src/test/java/org/codice/solr/factory/impl/ConfigsetsTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxNzo1NDoyOFrOGVn4-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTozNzozNVrOGVrYEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyNjg0MQ==", "bodyText": "\u2753 Why are these ignored?", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425326841", "createdAt": "2020-05-14T17:54:28Z", "author": {"login": "SmithJosh"}, "path": "platform/solr/solr-factory-impl/src/test/java/org/codice/solr/factory/impl/ConfigsetsTest.java", "diffHunk": "@@ -47,12 +48,14 @@ public void writingDefaultToDisk() {\n     assertThat(defaultConf.listFiles().length, is(8));\n   }\n \n+  @Ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4Mzk1Mg==", "bodyText": "They don't work on windows.", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425383952", "createdAt": "2020-05-14T19:37:35Z", "author": {"login": "stustison"}, "path": "platform/solr/solr-factory-impl/src/test/java/org/codice/solr/factory/impl/ConfigsetsTest.java", "diffHunk": "@@ -47,12 +48,14 @@ public void writingDefaultToDisk() {\n     assertThat(defaultConf.listFiles().length, is(8));\n   }\n \n+  @Ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMyNjg0MQ=="}, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0ODYxNDU0OnYy", "diffSide": "RIGHT", "path": "platform/security/core/security-core-services/src/main/java/ddf/security/service/impl/SubjectUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxODowMTo0M1rOGVoKhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQxOTozODozMlrOGVraDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTMzMw==", "bodyText": "\u2753 Why not use the *Impl naming convention like the others?", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425331333", "createdAt": "2020-05-14T18:01:43Z", "author": {"login": "SmithJosh"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/service/impl/SubjectUtils.java", "diffHunk": "@@ -47,69 +48,18 @@\n import org.slf4j.LoggerFactory;\n \n /** Utility class used to perform operations on Subjects. */\n-public final class SubjectUtils {\n-\n-  public static final String GUEST_DISPLAY_NAME = \"Guest\";\n+public final class SubjectUtils implements SubjectOperations {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTM4NDQ2MQ==", "bodyText": "I was torn between making it an impl or leaving it with the name everyone is used to. I didn't want to make SubjectUtils and SubjectUtilsImpl like I did with the others, because I hate \"utils\"", "url": "https://github.com/codice/ddf/pull/6051#discussion_r425384461", "createdAt": "2020-05-14T19:38:32Z", "author": {"login": "stustison"}, "path": "platform/security/core/security-core-services/src/main/java/ddf/security/service/impl/SubjectUtils.java", "diffHunk": "@@ -47,69 +48,18 @@\n import org.slf4j.LoggerFactory;\n \n /** Utility class used to perform operations on Subjects. */\n-public final class SubjectUtils {\n-\n-  public static final String GUEST_DISPLAY_NAME = \"Guest\";\n+public final class SubjectUtils implements SubjectOperations {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTMzMTMzMw=="}, "originalCommit": {"oid": "d4c9609a6c048753049fb18400f49410acb969cd"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4589, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}