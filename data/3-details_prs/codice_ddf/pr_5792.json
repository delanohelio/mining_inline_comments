{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NTQ1ODk5", "number": 5792, "title": "[2.19.x] DDF-5627 G-7443 Add an endpoint to validate different aspects of a query", "bodyText": "Backport of #5628\nWhat does this PR do?\nAdds a new framework for validating queries before they are ran. The idea is that as a user creates/modifies a query in the UI, it will be sent to the backend for validation in real-time.\nIt works by exposing a new cql/validator/:id POST endpoint that accepts a CQL query body just like the /cql endpoint. The :id parameter is the id of the validator that you want to run. The response contains a set of validation warnings or errors.\nNew validators are added by implementing the QueryValidator interface. Currently, the only validator in the system is the UnsupportedAttributesQueryValidator with id unsupportedAttribute. This validator aggregates all instances of the SourceAttributeRestriction interface and uses them to determine if there are any attributes in the query that are not supported by the currently selected sources.\nFor example, a request to /cql/validator/unsupportedAttribute with the following body\n{\n    \"srcs\": [\"OS\"],\n    \"start\": 1,\n    \"count\": 250,\n    \"cql\": \"(\\\"ext.not-supported-by-os\\\" ILIKE 'some value')\",\n    \"sorts\": [\n        {\n            \"attribute\": \"modified\",\n            \"direction\": \"descending\"\n        }\n    ],\n    \"id\": \"a65ffb0790194aeca46f37c9b1f14ccf\",\n    \"spellcheck\": false,\n    \"phonetics\": false,\n    \"batchId\": \"106e57b9cff2461aa08486cc52064296\"\n}\n\n... might produce a response like below.\n{\n    \"validationViolations\": [\n        {\n            \"type\": \"unsupportedAttribute\",\n            \"severity\": \"ERROR\",\n            \"message\": \"The field \\\"ext.not-supported-by-os\\\" is not supported by the OS Source(s)\",\n            \"extraData\": {\n                \"attribute\": \"ext.not-supported-by-os\",\n                \"sources\": [\n                    \"OS\"\n                ]\n            }\n        }\n    ]\n}\n\nEach validation violation is required to have a type (the id of the validator), a severity, and a message. The message field is user-friendly so that they can be shown directly to the user in the query view in Intrigue. The extraData field is optional and is used to return structured data about the violation so that no additional parsing is necessary to get key information (in this case, we won't need to parse the message to determine the name of the unsupported attribute or the sources that don't support it - they are supplied directly).\nThe approach is extensible to support other types of validation in the future.\nWho is reviewing it?\n\n@brianfelix @kentmorrissey @brhumphe @Lambeaux @mazarag2\nSelect relevant component teams:\n\nAsk 2 committers to review/merge the PR and tag them here.\n@bdeining\n@millerw8\nHow should this be tested?\n\n\nInstall the standard profile\nCreate a new OpenSearch source (Catalog OpenSearch Federated Source) called OS\nDownload/extract this zip and import the json file into Postman\nValidation.postman_collection.json.zip\nRun the CQL Validate request and ensure no validation errors/warnings are shown (this is expected since there is no SourceAttributeRestriction implementation for the OpenSearch interface by default)\n\nTest the UnsupportedAttributesQueryValidator with a SourceAttributeRestriction implementation for OpenSearch\n\nRemove the OS source\nCherry-pick mojogitoverhere@e97c927, cd to catalog/opensearch/catalog-opensearch-source, and rebuild\nHot deploy the changes using bundle:watch or by dropping the catalog-opensearch-source-2.22.0-SNAPSHOT.jar into the deploy folder\nRecreate the OS source\nRun the CQL Validate request again and verify that no errors/warnings are returned still (since title is the only attribute supported by the OS source)\nChange title in the cql field to another attribute like subtitle and rerun CQL Validate. Verify that an error like below is returned\n\n{\n    \"validationViolations\": [\n        {\n            \"type\": \"unsupportedAttribute\",\n            \"severity\": \"ERROR\",\n            \"message\": \"The field \\\"ext.title\\\" is not supported by the OS Source(s)\",\n            \"extraData\": {\n                \"attribute\": \"ext.title\",\n                \"sources\": [\n                    \"OS\"\n                ]\n            }\n        }\n    ]\n}\n\n\nTest different combinations of attributes (including operators like contains, equals, etc.) and cql queries. Instead of manually typing the cql string, I recommend running a query in Intrigue and copy/pasting the cql from the outgoing request in the network tab. You can also change the set of supported attributes here mojogitoverhere@e97c927#diff-1e3c7ae03e5895233d8e433f676aaac5R1169, rebuild, and redeploy for more testing.\n\nWhat are the relevant tickets?\nFixes: #5627\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-01-21T22:11:46Z", "url": "https://github.com/codice/ddf/pull/5792", "merged": true, "mergeCommit": {"oid": "d96d9e6b0080837c010b35bd6a5459cb561244ae"}, "closed": true, "closedAt": "2020-01-23T15:21:02Z", "author": {"login": "mojogitoverhere"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8onyngH2gAyMzY1NTQ1ODk5OmU5YWY0MTQzNjFlMDcwYzgwY2MzMzdhYmY0ZDViNDEzMDZmMjhmMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb9L6qAAFqTM0NzM3MTcwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e9af414361e070c80cc337abf4d5b41306f28f29", "author": {"user": {"login": "mojogitoverhere", "name": "David Morales"}}, "url": "https://github.com/codice/ddf/commit/e9af414361e070c80cc337abf4d5b41306f28f29", "committedDate": "2020-01-21T22:10:03Z", "message": "DDF-5627 G-7443 Add an endpoint to validate different aspects of a query (#5628)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2MjMwMDQ0", "url": "https://github.com/codice/ddf/pull/5792#pullrequestreview-346230044", "createdAt": "2020-01-21T22:15:40Z", "commit": {"oid": "e9af414361e070c80cc337abf4d5b41306f28f29"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1bec1966eeabe67d7f016f03f1530a331f07528", "author": {"user": {"login": "mojogitoverhere", "name": "David Morales"}}, "url": "https://github.com/codice/ddf/commit/e1bec1966eeabe67d7f016f03f1530a331f07528", "committedDate": "2020-01-21T22:37:07Z", "message": "DDF-5627 Fixed pom version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzgzMjE0", "url": "https://github.com/codice/ddf/pull/5792#pullrequestreview-346783214", "createdAt": "2020-01-22T17:50:48Z", "commit": {"oid": "e1bec1966eeabe67d7f016f03f1530a331f07528"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ3MzcxNzA5", "url": "https://github.com/codice/ddf/pull/5792#pullrequestreview-347371709", "createdAt": "2020-01-23T15:10:30Z", "commit": {"oid": "e1bec1966eeabe67d7f016f03f1530a331f07528"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNToxMDozMVrOFhBrYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNToxMDozMVrOFhBrYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE3NDgxOQ==", "bodyText": "\u270f\ufe0f its", "url": "https://github.com/codice/ddf/pull/5792#discussion_r370174819", "createdAt": "2020-01-23T15:10:31Z", "author": {"login": "shaundmorris"}, "path": "catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/query/validate/QueryValidators.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.catalog.ui.query.validate;\n+\n+import ddf.catalog.validation.QueryValidator;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * A collection of {@code QueryValidator} instances that have been registered in the system. These\n+ * instances can be fetched by their unique id (see {@code QueryValidator#getValidatorId}).\n+ */\n+public class QueryValidators {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(QueryValidators.class);\n+\n+  private Map<String, QueryValidator> validators = new ConcurrentHashMap<>();\n+\n+  /**\n+   * Gets a registered {@code QueryValidator} instance by it's id.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1bec1966eeabe67d7f016f03f1530a331f07528"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4975, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}