{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDYzMTM3", "number": 6216, "title": "DDF-6215 Upgrade to Karaf 4.2.9", "bodyText": "What does this PR do?\nUpgrades to Karaf 4.2.9, and along with it upgrades a bunch of other dependencies to match the version that Karaf uses.\nThere was an attempt to upgrade previously, which ran into a number of issues (#5798). I ran into a few of the same issues for this PR. Here's the fixes:\n\nSome change, somewhere, has led to a problem with the bnd library we use (stacktrace here). There are two versions that I can see in the system and neither seems to correctly parse some classfile.\n\nThis was a problem parsing one of the cxf feature definitions. I copied the fix from apache/cxf#602\n\nSome change has apparently altered startup order such that when running component tests, many (perhaps all) of our filters cannot be injected because their target servlet contexts have already started.\n\nI changed our DelegateServletFilter to be a Jetty Handler, so it doesn't need to be injected into each individual servlet context. There was no way I could find to access the servlet contexts before they were started. The handler approach accomplishes the same thing - running filters for all requests - but filters must now implement the org.codice.ddf.platform.filter.http.HttpFilter interface instead of javax.servlet.Filter (Jetty Handlers accept HttpServletRequests instead of ServletRequests).\nThis PR depends on: codice/thirdparty#97\nWho is reviewing it?\n\n@blen-desta @bakejeyner @garrettfreibott @stustison\nSelect relevant component teams:\n\n@codice/security\nHow should this be tested?\nVerify:\n\nFull build with itests passes\nError pages are still registered. If you refresh the platform-paxweb-jettyconfig bundle, you should see a bunch of messages indicating that error pages are being injected as the webapps restart. Also, produce an error in the UI (e.g. 403 by hitting /admin as guest) and verify you see the expected DDF error page.\nHttpFilters are run on all requests and after the SecurityFilters (WebSsoFilter, LoginFilter, etc.). You can turn up the logs for org.codice.ddf.pax.web.jetty to TRACE and you should see a message Delegating to 5 HttpFilters when you make a request.\nThe metrics filter still works. Hit /metrics and verify the ddf_platform_* metrics look realistic.\nHttpFilters are run in the correct order: SecurityJavaSubjectFilter first, DoPrivilegedFilter last, anything else in between\n\nAny background context you want to provide?\nThis is part of an ongoing effort to reduce the CVE level in DDF\nWhat are the relevant tickets?\nFixes: #6215\nScreenshots\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-08-04T00:37:36Z", "url": "https://github.com/codice/ddf/pull/6216", "merged": true, "mergeCommit": {"oid": "7f7adf423ad3545f76df5720b928da6db4f4e2a4"}, "closed": true, "closedAt": "2020-08-21T01:20:44Z", "author": {"login": "SmithJosh"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7pi_8gBqjM2MjExMzc0OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAiA-EAH2gAyNDYyNDYzMTM3OmRlNTA0NmRlYmQxMTAwZDY5Njc3MDllODUyOGMyYTBkYThkYjBmZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1e5cc59ecf98e7557e9f807060d2549fc870fd6d", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/1e5cc59ecf98e7557e9f807060d2549fc870fd6d", "committedDate": "2020-08-04T00:35:49Z", "message": "DDF-6215 Move DelegateServletFilter to SercurityFilter chain"}, "afterCommit": {"oid": "e1ebd9cf56b81f1d8645cf4e6e7f5395a1d5446c", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/e1ebd9cf56b81f1d8645cf4e6e7f5395a1d5446c", "committedDate": "2020-08-04T16:51:46Z", "message": "DDF-6215 Move DelegateServletFilter to SercurityFilter chain"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTM5MjUy", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-461939252", "createdAt": "2020-08-05T18:57:22Z", "commit": {"oid": "f4870da7777f6cda4e9bd3ace1276caea3905288"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1NzoyMlrOG8WjAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODo1NzoyMlrOG8WjAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkzNzE1Mw==", "bodyText": "[Not Important] This name confuses me. Is it supposed to be pronounced \"call one on\"?", "url": "https://github.com/codice/ddf/pull/6216#discussion_r465937153", "createdAt": "2020-08-05T18:57:22Z", "author": {"login": "bakejeyner"}, "path": "catalog/core/catalog-core-directorymonitor/pom.xml", "diffHunk": "@@ -324,7 +324,7 @@\n         <dependency>\n             <groupId>ch.qos.cal10n</groupId>\n             <artifactId>cal10n-api</artifactId>\n-            <version>0.7.4</version>\n+            <version>${cal10n.version}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4870da7777f6cda4e9bd3ace1276caea3905288"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTU5MTUy", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-461959152", "createdAt": "2020-08-05T19:27:03Z", "commit": {"oid": "f4870da7777f6cda4e9bd3ace1276caea3905288"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67a84308bc89130aea164e6a861df92a3b025500", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/67a84308bc89130aea164e6a861df92a3b025500", "committedDate": "2020-08-06T00:16:51Z", "message": "DDF-6215 Upgrade to Karaf v4.2.9"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/88a0803db0ce5fc5707ed6909155d266c2d43387", "committedDate": "2020-08-06T00:16:51Z", "message": "DDF-6215 Move DelegateServletFilter to SercurityFilter chain"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f4870da7777f6cda4e9bd3ace1276caea3905288", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/f4870da7777f6cda4e9bd3ace1276caea3905288", "committedDate": "2020-08-04T22:56:30Z", "message": "Remove CVE suppression"}, "afterCommit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/88a0803db0ce5fc5707ed6909155d266c2d43387", "committedDate": "2020-08-06T00:16:51Z", "message": "DDF-6215 Move DelegateServletFilter to SercurityFilter chain"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDgxMzM3", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464481337", "createdAt": "2020-08-10T18:41:35Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTE2MzEx", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464516311", "createdAt": "2020-08-10T19:27:27Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTE3NTAx", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464517501", "createdAt": "2020-08-10T19:29:14Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToxNFrOG-cjGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToxNFrOG-cjGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzMjYzNA==", "bodyText": "this should be parameterized", "url": "https://github.com/codice/ddf/pull/6216#discussion_r468132634", "createdAt": "2020-08-10T19:29:14Z", "author": {"login": "bdeining"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingSecurityFilter.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import org.codice.ddf.platform.filter.AuthenticationException;\n+import org.codice.ddf.platform.filter.FilterChain;\n+import org.codice.ddf.platform.filter.SecurityFilter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Hands the request off to a set chain of servlet {@link Filter}s. Since SecurityFilters are run on\n+ * each request, this provides a mechanism to add global servlet filters. As of OSGi R6, there is a\n+ * proper way to define global servlets/filters/listeners/etc., defined by the HTTP Whiteboard spec.\n+ * However, pax-web does not yet implement that feature, so we're left using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingSecurityFilter implements SecurityFilter {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DelegatingSecurityFilter.class);\n+\n+  private final List<Filter> filters;\n+\n+  public DelegatingSecurityFilter(List<Filter> filters) {\n+    this.filters = filters;\n+  }\n+\n+  @Override\n+  public void init() {\n+    LOGGER.debug(\"Initialized \" + DelegatingSecurityFilter.class.getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTE3NjI1", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464517625", "createdAt": "2020-08-10T19:29:26Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToyNlrOG-cjlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOToyNlrOG-cjlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzMjc1Nw==", "bodyText": "this should be parameterized", "url": "https://github.com/codice/ddf/pull/6216#discussion_r468132757", "createdAt": "2020-08-10T19:29:26Z", "author": {"login": "bdeining"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingSecurityFilter.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import org.codice.ddf.platform.filter.AuthenticationException;\n+import org.codice.ddf.platform.filter.FilterChain;\n+import org.codice.ddf.platform.filter.SecurityFilter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Hands the request off to a set chain of servlet {@link Filter}s. Since SecurityFilters are run on\n+ * each request, this provides a mechanism to add global servlet filters. As of OSGi R6, there is a\n+ * proper way to define global servlets/filters/listeners/etc., defined by the HTTP Whiteboard spec.\n+ * However, pax-web does not yet implement that feature, so we're left using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingSecurityFilter implements SecurityFilter {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DelegatingSecurityFilter.class);\n+\n+  private final List<Filter> filters;\n+\n+  public DelegatingSecurityFilter(List<Filter> filters) {\n+    this.filters = filters;\n+  }\n+\n+  @Override\n+  public void init() {\n+    LOGGER.debug(\"Initialized \" + DelegatingSecurityFilter.class.getSimpleName());\n+  }\n+\n+  @Override\n+  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n+      throws IOException, AuthenticationException {\n+    LOGGER.debug(\"Delegating to {} global ServletFilters.\", filters.size());\n+    try {\n+      new ProxyFilterChain(filters).doFilter(request, response);\n+    } catch (ServletException e) {\n+      throw new AuthenticationException(\"Error in global ServletFilter chain\", e);\n+    }\n+    chain.doFilter(request, response);\n+  }\n+\n+  @Override\n+  public void destroy() {\n+    LOGGER.debug(\"Destroyed \" + DelegatingSecurityFilter.class.getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTE3OTY2", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464517966", "createdAt": "2020-08-10T19:29:59Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOTo1OVrOG-ckxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxOToyOTo1OVrOG-ckxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODEzMzA2Mw==", "bodyText": "the logging in this method might be more appropriate at the trace level", "url": "https://github.com/codice/ddf/pull/6216#discussion_r468133063", "createdAt": "2020-08-10T19:29:59Z", "author": {"login": "bdeining"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingSecurityFilter.java", "diffHunk": "@@ -0,0 +1,68 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import java.io.IOException;\n+import java.util.List;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import org.codice.ddf.platform.filter.AuthenticationException;\n+import org.codice.ddf.platform.filter.FilterChain;\n+import org.codice.ddf.platform.filter.SecurityFilter;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Hands the request off to a set chain of servlet {@link Filter}s. Since SecurityFilters are run on\n+ * each request, this provides a mechanism to add global servlet filters. As of OSGi R6, there is a\n+ * proper way to define global servlets/filters/listeners/etc., defined by the HTTP Whiteboard spec.\n+ * However, pax-web does not yet implement that feature, so we're left using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingSecurityFilter implements SecurityFilter {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DelegatingSecurityFilter.class);\n+\n+  private final List<Filter> filters;\n+\n+  public DelegatingSecurityFilter(List<Filter> filters) {\n+    this.filters = filters;\n+  }\n+\n+  @Override\n+  public void init() {\n+    LOGGER.debug(\"Initialized \" + DelegatingSecurityFilter.class.getSimpleName());\n+  }\n+\n+  @Override\n+  public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain)\n+      throws IOException, AuthenticationException {\n+    LOGGER.debug(\"Delegating to {} global ServletFilters.\", filters.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NTQyOTcy", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-464542972", "createdAt": "2020-08-10T20:07:26Z", "commit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDowNzoyNlrOG-duXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQyMDowNzoyNlrOG-duXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODE1MTkwMA==", "bodyText": "\u2753 Isn't this deletion going to break metrics and other cross-cutting concerns (i.e. client info filter but I doubt anyone still cares about that)? I think we have some dependents on this class without any viable substitutes as of yet.\nI don't think your SecurityFilter workaround is valid in all current cases.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r468151900", "createdAt": "2020-08-10T20:07:26Z", "author": {"login": "Lambeaux"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegateServletFilter.java", "diffHunk": "@@ -1,54 +0,0 @@\n-/**\n- * Copyright (c) Codice Foundation\n- *\n- * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n- * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n- * the License, or any later version.\n- *\n- * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n- * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n- * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n- * License is distributed along with this program and can be found at\n- * <http://www.gnu.org/licenses/lgpl.html>.\n- */\n-package org.codice.ddf.pax.web.jetty;\n-\n-import java.io.IOException;\n-import java.util.List;\n-import javax.servlet.Filter;\n-import javax.servlet.FilterChain;\n-import javax.servlet.FilterConfig;\n-import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n-\n-public class DelegateServletFilter implements Filter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a0803db0ce5fc5707ed6909155d266c2d43387"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18d71829ef8f20d2f40413c39103f7cbe1f24b38", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/18d71829ef8f20d2f40413c39103f7cbe1f24b38", "committedDate": "2020-08-14T00:27:58Z", "message": "DDF-6215 Move DelegatingSecurityFilter to the Jetty Handler chain"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8833e756231321b9c65f748eb9ca86ce02d26a09", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/8833e756231321b9c65f748eb9ca86ce02d26a09", "committedDate": "2020-08-14T00:26:18Z", "message": "Moving delegate servlet filter to the Jetty Handler chain"}, "afterCommit": {"oid": "18d71829ef8f20d2f40413c39103f7cbe1f24b38", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/18d71829ef8f20d2f40413c39103f7cbe1f24b38", "committedDate": "2020-08-14T00:27:58Z", "message": "DDF-6215 Move DelegatingSecurityFilter to the Jetty Handler chain"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/59247a0c9512a96075539b9e2737613b5d2080f4", "committedDate": "2020-08-14T00:31:52Z", "message": "DDF-6215 Address PR comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MjQwMTY5", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-467240169", "createdAt": "2020-08-14T00:37:12Z", "commit": {"oid": "18d71829ef8f20d2f40413c39103f7cbe1f24b38"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDozNzoxMlrOHAi8Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwMDo0NzoyMlrOHAjVzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMzNDU1NA==", "bodyText": "The delegating servlet filter has a new home \ud83d\ude02 This time it's the Jetty Handler chain", "url": "https://github.com/codice/ddf/pull/6216#discussion_r470334554", "createdAt": "2020-08-14T00:37:12Z", "author": {"login": "SmithJosh"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingHttpFilterHandler.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.io.IOException;\n+import java.util.Objects;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.codice.ddf.platform.filter.HttpFilter;\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.handler.HandlerWrapper;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.util.tracker.ServiceTracker;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Hands the request off to a set chain of servlet {@link Filter}s. Since SecurityFilters are run on\n+ * each request, this provides a mechanism to add global servlet filters. As of OSGi R6, there is a\n+ * proper way to define global servlets/filters/listeners/etc., defined by the HTTP Whiteboard spec.\n+ * However, pax-web does not yet implement that feature, so we're left using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingHttpFilterHandler extends HandlerWrapper {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18d71829ef8f20d2f40413c39103f7cbe1f24b38"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMzNzEyNg==", "bodyText": "The Jetty Handlers take HttpServletRequests. In order to inject stuff into that chain, I needed to have a filter interface that takes HttpServletRequests as well. Oddly enough this is not already a thing.\nAny filters we used to inject via the delegate filter will need to be changed to implement this new interface. That will require changing the method signature and removing the init/destroy methods since those aren't used anymore.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r470337126", "createdAt": "2020-08-14T00:41:13Z", "author": {"login": "SmithJosh"}, "path": "platform/security-filter-api/src/main/java/org/codice/ddf/platform/filter/HttpFilter.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.platform.filter;\n+\n+import java.io.IOException;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * An HttpFilter is an object that performs filtering tasks on either the request to a resource (a\n+ * servlet or static content), or on the response from a resource, or both.\n+ *\n+ * <p>It is modelled after {@link javax.servlet.Filter} but its {@code doFilter} method accepts\n+ * {@link HttpServletRequest} and {@link HttpServletResponse} arguments instead.\n+ */\n+public interface HttpFilter {\n+\n+  void doFilter(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18d71829ef8f20d2f40413c39103f7cbe1f24b38"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDMzODY5OQ==", "bodyText": "Here's an example of converting an existing Filter into an HttpFilter", "url": "https://github.com/codice/ddf/pull/6216#discussion_r470338699", "createdAt": "2020-08-14T00:43:47Z", "author": {"login": "SmithJosh"}, "path": "platform/metrics/metrics-servlet-filter/src/main/java/org/codice/ddf/metrics/servlet/ServletMetrics.java", "diffHunk": "@@ -18,45 +18,34 @@\n import java.io.IOException;\n import javax.servlet.AsyncEvent;\n import javax.servlet.AsyncListener;\n-import javax.servlet.Filter;\n-import javax.servlet.FilterChain;\n-import javax.servlet.FilterConfig;\n import javax.servlet.ServletException;\n-import javax.servlet.ServletRequest;\n-import javax.servlet.ServletResponse;\n import javax.servlet.http.HttpServletRequest;\n import javax.servlet.http.HttpServletResponse;\n+import org.codice.ddf.platform.filter.HttpFilter;\n+import org.codice.ddf.platform.filter.HttpFilterChain;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-public class ServletMetrics implements Filter {\n+public class ServletMetrics implements HttpFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDM0MTA3MQ==", "bodyText": "This is getting injected into the Jetty Handler chain via the jetty.xml config, so I couldn't just inject a service reference list like it did before. If anybody has better ideas for how to do this, I'm open to suggestions.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r470341071", "createdAt": "2020-08-14T00:47:22Z", "author": {"login": "SmithJosh"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingHttpFilterHandler.java", "diffHunk": "@@ -0,0 +1,89 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import java.io.IOException;\n+import java.util.Objects;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.codice.ddf.platform.filter.HttpFilter;\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.handler.HandlerWrapper;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.util.tracker.ServiceTracker;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Hands the request off to a set chain of servlet {@link Filter}s. Since SecurityFilters are run on\n+ * each request, this provides a mechanism to add global servlet filters. As of OSGi R6, there is a\n+ * proper way to define global servlets/filters/listeners/etc., defined by the HTTP Whiteboard spec.\n+ * However, pax-web does not yet implement that feature, so we're left using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingHttpFilterHandler extends HandlerWrapper {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DelegatingHttpFilterHandler.class);\n+\n+  private final ServiceTracker<HttpFilter, HttpFilter> filterTracker;\n+\n+  @VisibleForTesting\n+  DelegatingHttpFilterHandler(ServiceTracker<HttpFilter, HttpFilter> filterTracker) {\n+    this.filterTracker = Objects.requireNonNull(filterTracker);\n+  }\n+\n+  public DelegatingHttpFilterHandler() {\n+    Bundle bundle = FrameworkUtil.getBundle(DelegatingHttpFilterHandler.class);\n+    Objects.requireNonNull(bundle, \"Bundle must not be null\");\n+    Objects.requireNonNull(bundle.getBundleContext(), \"Bundle has no valid BundleContext\");\n+\n+    this.filterTracker =\n+        new ServiceTracker(bundle.getBundleContext(), HttpFilter.class.getName(), null);\n+  }\n+\n+  @Override\n+  public void handle(\n+      String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n+      throws IOException, ServletException {\n+    HttpFilter[] filters = getFilters();\n+    LOGGER.trace(\"Delegating to {} HttpFilters.\", filters.length);\n+\n+    ProxyHttpFilterChain filterChain =\n+        new ProxyHttpFilterChain(filters, getHandler(), target, baseRequest);\n+    filterChain.doFilter(request, response);\n+  }\n+\n+  private HttpFilter[] getFilters() {\n+    HttpFilter[] filters = new HttpFilter[filterTracker.size()];\n+    return filterTracker.getServices(filters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTExMjA5", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-467911209", "createdAt": "2020-08-14T22:48:31Z", "commit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjo0ODozMVrOHBFLtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QyMDoxNDoxMlrOHB5VSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5NTU0MA==", "bodyText": "\u2753 Why did you have to add this?", "url": "https://github.com/codice/ddf/pull/6216#discussion_r470895540", "createdAt": "2020-08-14T22:48:31Z", "author": {"login": "pklinef"}, "path": "platform/platform-paxweb-jettyconfig/pom.xml", "diffHunk": "@@ -103,6 +103,13 @@\n             <artifactId>security-core-impl</artifactId>\n             <version>${project.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>io.micrometer</groupId>\n+            <artifactId>micrometer-core</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0NTAxOA==", "bodyText": "\u2753 Did we lose the ability to make sure these core handlers are executed in the proper order?  I guess we could use service ranking if we need it again.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r471745018", "createdAt": "2020-08-17T20:04:13Z", "author": {"login": "pklinef"}, "path": "platform/platform-paxweb-jettyconfig/src/main/resources/OSGI-INF/blueprint/blueprint.xml", "diffHunk": "@@ -15,43 +15,24 @@\n \n     <reference id=\"securityLogger\" interface=\"ddf.security.audit.SecurityLogger\" availability=\"optional\" />\n \n+    <!-- Global ServletFilters -->\n+    <service id=\"clientInfoFilter\" interface=\"org.codice.ddf.platform.filter.HttpFilter\">\n+        <bean class=\"org.codice.ddf.pax.web.jetty.ClientInfoFilter\"/>\n+    </service>\n+\n     <bean id=\"responseFilter\" class=\"org.codice.ddf.pax.web.jetty.ResponseFilter\">\n         <cm:managed-properties\n-                persistent-id=\"org.codice.ddf.platform.response.filter.ResponseHeaderConfig\"\n-                update-strategy=\"container-managed\"/>\n-    </bean>\n-\n-    <bean id=\"executor\" class=\"java.util.concurrent.Executors\" factory-method=\"newSingleThreadScheduledExecutor\">\n-        <argument ref=\"securityJavaSubjectThreadFactory\"/>\n+          persistent-id=\"org.codice.ddf.platform.response.filter.ResponseHeaderConfig\"\n+          update-strategy=\"container-managed\"/>\n     </bean>\n+    <service ref=\"responseFilter\" interface=\"org.codice.ddf.platform.filter.HttpFilter\"/>\n \n-    <reference-list id=\"filterList\" availability=\"optional\" interface=\"javax.servlet.Filter\" />\n-\n-    <bean id=\"delegateServletFilter\"\n-          class=\"org.codice.ddf.pax.web.jetty.DelegateServletFilter\">\n-        <argument ref=\"filterList\"/>\n-    </bean>\n-\n-    <bean id=\"filterInjector\" class=\"org.codice.ddf.pax.web.jetty.FilterInjector\" init-method=\"init\"\n-          destroy-method=\"destroy\">\n-        <argument type=\"java.util.List\">\n-            <list value-type=\"javax.servlet.Filter\">\n-                <bean class=\"org.codice.ddf.pax.web.jetty.ClientInfoFilter\"/>\n-                <ref component-id=\"responseFilter\"/>\n-                <bean class=\"org.codice.ddf.pax.web.jetty.SecurityJavaSubjectFilter\"/>\n-                <ref component-id=\"delegateServletFilter\"/>\n-                <bean class=\"org.codice.ddf.pax.web.jetty.DoPrivilegedFilter\"/>\n-            </list>\n-        </argument>\n-        <argument ref=\"executor\"/>\n-    </bean>\n-\n-    <bean id=\"securityJavaSubjectThreadFactory\"\n-          class=\"org.codice.ddf.platform.util.StandardThreadFactoryBuilder\"\n-          factory-method=\"newThreadFactory\">\n-        <argument value=\"securityJavaSubjectThread\"/>\n-    </bean>\n+    <service id=\"securityJavaSubjectFilter\" interface=\"org.codice.ddf.platform.filter.HttpFilter\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0ODI2OQ==", "bodyText": "\u2753 Why is this part of security-filter-api instead of part of platform-paxweb-jettyconfig or some other Jetty or HTTP concerned bundle?  This interface does not seem related to security as it is.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r471748269", "createdAt": "2020-08-17T20:10:40Z", "author": {"login": "pklinef"}, "path": "platform/security-filter-api/src/main/java/org/codice/ddf/platform/filter/HttpFilter.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.platform.filter;\n+\n+import java.io.IOException;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+\n+/**\n+ * An HttpFilter is an object that performs filtering tasks on either the request to a resource (a\n+ * servlet or static content), or on the response from a resource, or both.\n+ *\n+ * <p>It is modelled after {@link javax.servlet.Filter} but its {@code doFilter} method accepts\n+ * {@link HttpServletRequest} and {@link HttpServletResponse} arguments instead.\n+ */\n+public interface HttpFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTc0OTk2MA==", "bodyText": "\u2753 Is this dependency actually needed here?  It should only depend on the API bundle with the HttpFilter interface.", "url": "https://github.com/codice/ddf/pull/6216#discussion_r471749960", "createdAt": "2020-08-17T20:14:12Z", "author": {"login": "pklinef"}, "path": "platform/metrics/metrics-servlet-filter/pom.xml", "diffHunk": "@@ -44,6 +44,12 @@\n             <artifactId>slf4j-api</artifactId>\n             <version>${org.slf4j.version}</version>\n         </dependency>\n+        <dependency>\n+            <groupId>ddf.platform</groupId>\n+            <artifactId>platform-paxweb-jettyconfig</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "59247a0c9512a96075539b9e2737613b5d2080f4"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8168d7a268597abc6d2898ad20d8cce79fc6bb", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/fa8168d7a268597abc6d2898ad20d8cce79fc6bb", "committedDate": "2020-08-18T18:40:54Z", "message": "DDF-6215 Move HttpFilter interface to new bundle and use service ranking to order HttpFilters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3113f578bda468e1e00dd3a65424720ac9e1a8f", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/a3113f578bda468e1e00dd3a65424720ac9e1a8f", "committedDate": "2020-08-18T18:52:35Z", "message": "DDF-6215 Update javadoc for DelegatingHttpFilterHandler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NzY2ODIy", "url": "https://github.com/codice/ddf/pull/6216#pullrequestreview-469766822", "createdAt": "2020-08-18T19:40:45Z", "commit": {"oid": "a3113f578bda468e1e00dd3a65424720ac9e1a8f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo0MDo0NVrOHCjOOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxOTo0NDoyN1rOHCjVHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzNjI4MQ==", "bodyText": "\u2753 Iterators are stateful. Does a new instance of this chain get created for each request? If not, and all requests share it, then how is this working?", "url": "https://github.com/codice/ddf/pull/6216#discussion_r472436281", "createdAt": "2020-08-18T19:40:45Z", "author": {"login": "Lambeaux"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/ProxyHttpFilterChain.java", "diffHunk": "@@ -0,0 +1,69 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import java.io.IOException;\n+import java.util.Iterator;\n+import java.util.List;\n+import javax.servlet.Filter;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.codice.ddf.platform.filter.http.HttpFilter;\n+import org.codice.ddf.platform.filter.http.HttpFilterChain;\n+import org.eclipse.jetty.server.Handler;\n+import org.eclipse.jetty.server.Request;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * Implementation of filter chain that allows the ability to dynamically add new {@link Filter}s to\n+ * a chain. The {@link ProxyHttpFilterChain} may not be reused. That is, once the {@link\n+ * ProxyHttpFilterChain#doFilter} method is called, no more {@link HttpFilter}s may be added.\n+ */\n+public class ProxyHttpFilterChain implements HttpFilterChain {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(ProxyHttpFilterChain.class);\n+\n+  private final Iterator<HttpFilter> iterator;\n+  private final Handler handler;\n+  private final String target;\n+  private final Request baseRequest;\n+\n+  public ProxyHttpFilterChain(\n+      List<HttpFilter> filters, Handler handler, String target, Request baseRequest) {\n+    this.iterator = filters.iterator();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3113f578bda468e1e00dd3a65424720ac9e1a8f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjQzODA0NA==", "bodyText": "\ud83d\udc4d  I see - should be fine", "url": "https://github.com/codice/ddf/pull/6216#discussion_r472438044", "createdAt": "2020-08-18T19:44:27Z", "author": {"login": "Lambeaux"}, "path": "platform/platform-paxweb-jettyconfig/src/main/java/org/codice/ddf/pax/web/jetty/DelegatingHttpFilterHandler.java", "diffHunk": "@@ -0,0 +1,132 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ *\n+ * <p>This is free software: you can redistribute it and/or modify it under the terms of the GNU\n+ * Lesser General Public License as published by the Free Software Foundation, either version 3 of\n+ * the License, or any later version.\n+ *\n+ * <p>This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;\n+ * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n+ * GNU Lesser General Public License for more details. A copy of the GNU Lesser General Public\n+ * License is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package org.codice.ddf.pax.web.jetty;\n+\n+import java.io.IOException;\n+import java.util.Collection;\n+import java.util.Objects;\n+import javax.servlet.ServletException;\n+import javax.servlet.http.HttpServletRequest;\n+import javax.servlet.http.HttpServletResponse;\n+import org.codice.ddf.platform.filter.http.HttpFilter;\n+import org.codice.ddf.platform.util.SortedServiceList;\n+import org.eclipse.jetty.server.Request;\n+import org.eclipse.jetty.server.handler.HandlerWrapper;\n+import org.osgi.framework.Bundle;\n+import org.osgi.framework.BundleContext;\n+import org.osgi.framework.FrameworkUtil;\n+import org.osgi.framework.InvalidSyntaxException;\n+import org.osgi.framework.ServiceEvent;\n+import org.osgi.framework.ServiceListener;\n+import org.osgi.framework.ServiceReference;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+/**\n+ * The {@code DelegatingHttpFilterHandler} provides a way to create global filters which will apply\n+ * to all requests. It finds any registered {@link HttpFilter} services and passes incoming\n+ * requests to them in order of service ranking.\n+ *\n+ * As of OSGi R6, there is a proper way to define global servlets/filters/listeners/etc., defined\n+ * by the HTTP Whiteboard spec. However, pax-web does not yet implement that feature, so we're left\n+ * using this workaround.\n+ *\n+ * <p>When https://ops4j1.jira.com/browse/PAXWEB-1123 is resolved, this workaround should be\n+ * revisited.\n+ */\n+public class DelegatingHttpFilterHandler extends HandlerWrapper {\n+\n+  private static final Logger LOGGER = LoggerFactory.getLogger(DelegatingHttpFilterHandler.class);\n+\n+  private static final String FILTER = \"(objectclass=\" + HttpFilter.class.getName() + \")\";\n+\n+  private final HttpFilterServiceListener listener = new HttpFilterServiceListener();\n+\n+  private final SortedServiceList<HttpFilter> httpFilters;\n+\n+  private final BundleContext context;\n+\n+  private static BundleContext getContext() {\n+    Bundle bundle = FrameworkUtil.getBundle(DelegatingHttpFilterHandler.class);\n+    Objects.requireNonNull(bundle, \"Bundle cannot be null\");\n+    return bundle.getBundleContext();\n+  }\n+\n+  public DelegatingHttpFilterHandler() throws InvalidSyntaxException {\n+    this(getContext());\n+  }\n+\n+  public DelegatingHttpFilterHandler(BundleContext context) throws InvalidSyntaxException {\n+    Objects.requireNonNull(context, \"Bundle context cannot be null\");\n+    this.context = context;\n+    this.context.addServiceListener(listener, FILTER);\n+    this.httpFilters =\n+        new SortedServiceList<HttpFilter>() {\n+          @Override\n+          protected BundleContext getContext() {\n+            return context;\n+          }\n+        };\n+\n+    /*\n+     * The service listener won't pick up services that are already registered. Must manually\n+     * add them to the service list.\n+     */\n+    Collection<ServiceReference<HttpFilter>> serviceReferences =\n+        this.context.getServiceReferences(HttpFilter.class, FILTER);\n+    for (ServiceReference<HttpFilter> reference : serviceReferences) {\n+      this.listener.serviceChanged(new ServiceEvent(ServiceEvent.REGISTERED, reference));\n+    }\n+  }\n+\n+  @Override\n+  public void handle(\n+      String target, Request baseRequest, HttpServletRequest request, HttpServletResponse response)\n+      throws IOException, ServletException {\n+    LOGGER.trace(\"Delegating to {} HttpFilters.\", httpFilters.size());\n+\n+    ProxyHttpFilterChain filterChain =\n+        new ProxyHttpFilterChain(httpFilters, getHandler(), target, baseRequest);\n+    filterChain.doFilter(request, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a3113f578bda468e1e00dd3a65424720ac9e1a8f"}, "originalPosition": 101}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de5046debd1100d6967709e8528c2a0da8db0feb", "author": {"user": {"login": "SmithJosh", "name": "Joshua Smith"}}, "url": "https://github.com/codice/ddf/commit/de5046debd1100d6967709e8528c2a0da8db0feb", "committedDate": "2020-08-19T20:55:04Z", "message": "DDF-6215 Fix formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 839, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}