{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg1NDE1MzAx", "number": 6320, "title": "DDF-6319 - Enable case-insensitive sorting of solr text fields", "bodyText": "What does this PR do?\nCreates a new copy field in the solr schema to allow for case-insensitive text field sorting.  Also adds a configuration item to allow the sorting to be reverted to the existing, case-sensitive sorting.\nWho is reviewing it?\n\n@pklinef\n@bdeining\nSelect relevant component teams:\n@codice/solr\nAsk 2 committers to review/merge the PR and tag them here.\n@andrewkfiedler\n@jlcsmith\nHow should this be tested?\n\n\nPerform a full build\nInstall DDF and DDF-UI\nUpload/ingest several documents with sortable names\n\n\nFor example: apple.txt, apricot.txt, banana.txt, blackberry.txt, blueberry.txt, broccoli.txt, carrot.txt, cherry.txt, tangerine.txt\n\n\nEdit some of the titles in the metacards to contain uppercase letters\n\n\nFor example: Apricot.txt, Broccoli.txt, Cherry.txt, Tangerine.txt\n\n\nSet the page size in the search settings to 5\nIn the karaf console, ensure that the solr.query.sort.caseInsensitive property is set to true\n\n\nTo check the value run the command: property solr.query.sort.caseInsensitive\nTo set the value run the command: property solr.query.sort.caseInsensitive true\nYou will stop and then start the \"DDF :: Catalog :: Solr :: Provider\" bundle for the changes to take effect\n\n\nCreate a new search for * and change the sorting to sort on title using A to Z (ascending)\nPerform the search and verify that the 5 results returned are correctly sorted (from the overall set of data)\n\n\nFrom the example data above, the results will be: apple.txt, Apricot.txt, banana.txt, blackberry.txt, blueberry.txt\n\n\nIn the karaf console, disable case insensitive sorting by running the command: property solr.query.sort.caseInsensitive false\nStop and then start the \"DDF :: Catalog :: Solr :: Provider\" bundle for the changes to take effect\nPerform the same search in the UI as before and verify that the results are different\n\n\nFrom the example data above, the results will be: apple.txt, Apricot.txt, Broccoli.txt, Cherry.txt, Tangerine.txt\n\nAny background context you want to provide?\nWhat are the relevant tickets?\nFixes: #6319\nScreenshots\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-09-11T20:05:18Z", "url": "https://github.com/codice/ddf/pull/6320", "merged": true, "mergeCommit": {"oid": "512ef035a9be29fc85f8658bd4d6e8ede82d8fca"}, "closed": true, "closedAt": "2020-09-22T17:35:00Z", "author": {"login": "derekwilhelm"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdI0OytgFqTQ4Nzg0MDExOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLbhxyAFqTQ5MzY5NTc4OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3ODQwMTE4", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-487840118", "createdAt": "2020-09-14T14:39:51Z", "commit": {"oid": "d1abc7f1866dc24ba9f43471627b00ea300ff399"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjQwMDI3", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-488240027", "createdAt": "2020-09-15T00:22:00Z", "commit": {"oid": "d1abc7f1866dc24ba9f43471627b00ea300ff399"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoyMjowMFrOHRsBIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoyMjowMFrOHRsBIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwOTAyNQ==", "bodyText": "\u2757 I realized the other day that similar code I had added to the Solr client could cause threading issue since System properties are backed by a hashtable which is synchronized.  In the other case the method would generally short circuit before reaching the system property check.  In this case, it will happen for every sorted geo and text field.\nhttps://github.com/AdoptOpenJDK/openjdk-jdk8u/blob/master/jdk/src/share/classes/java/lang/System.java#L533\nI would recommend loading this property into a field.  We can restart the bundle if we need to refresh the value.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r488309025", "createdAt": "2020-09-15T00:22:00Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -899,12 +899,17 @@ private String findAnyMatchingNumericalField(String propertyName, String fieldSu\n   }\n \n   String getSortKey(String field) {\n-    if (field.endsWith(SchemaFields.GEO_SUFFIX)) {\n+    if (field.endsWith(SchemaFields.GEO_SUFFIX)\n+        || (field.endsWith(SchemaFields.TEXT_SUFFIX) && caseInsensitiveSort())) {\n       field = field + SchemaFields.SORT_SUFFIX;\n     }\n     return field;\n   }\n \n+  private boolean caseInsensitiveSort() {\n+    return \"true\".equals(System.getProperty(\"solr.sort.case-insensitive\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1abc7f1866dc24ba9f43471627b00ea300ff399"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNjg4MTUx", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-490688151", "createdAt": "2020-09-17T14:55:02Z", "commit": {"oid": "c1e1cbddd63dd4db770fc324751af6f2e9d1ccc8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo1NTowMlrOHTmqlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNDo1NTowMlrOHTmqlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDMxODQ4NA==", "bodyText": "\u270f\ufe0f There is one solr.query. system property and I am working on a PR to add another one.  Might consider making this solr.query.sort.caseInsensitive.\n\n  \n    \n      ddf/catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java\n    \n    \n         Line 155\n      in\n      b50f3c2\n    \n    \n    \n    \n\n        \n          \n           private static final String SOLR_QUERY_TIMEALLOWEDMS = \"solr.query.timeAllowed\";", "url": "https://github.com/codice/ddf/pull/6320#discussion_r490318484", "createdAt": "2020-09-17T14:55:02Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -163,6 +165,7 @@ public DynamicSchemaResolver(List<String> additionalFields) {\n     ConfigurationStore.getInstance().addConfigurationListener(this);\n     this.schemaFields = new SchemaFields();\n     metadataMaximumBytes = getMetadataSizeLimit();\n+    caseInsensitiveSort = \"true\".equals(System.getProperty(\"solr.sort.case-insensitive\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e1cbddd63dd4db770fc324751af6f2e9d1ccc8"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1e1cbddd63dd4db770fc324751af6f2e9d1ccc8", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/c1e1cbddd63dd4db770fc324751af6f2e9d1ccc8", "committedDate": "2020-09-16T17:08:16Z", "message": "Move caseInsensitiveSort to field instead of method"}, "afterCommit": {"oid": "98356ce8b470ba503c121cd1083f9b9040a560eb", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/98356ce8b470ba503c121cd1083f9b9040a560eb", "committedDate": "2020-09-17T21:36:48Z", "message": "Fix schema to use SortableTextField"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDAzMTYw", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-493003160", "createdAt": "2020-09-21T21:46:06Z", "commit": {"oid": "f52043a5fdfcac5ff9b5d6f9b134b2797c6078ba"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMTo0NjowNlrOHVjhwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMTo0NjowNlrOHVjhwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2NDIyNA==", "bodyText": "\u2757 Truncate the fields like we used to do to save on index space.  Before we were using 127 characters but that was limited by TruncateTokenFilterFactory.\nhttps://github.com/codice/ddf/blob/2.12.x/platform/solr/platform-solr-server-standalone/src/main/resources/solr/conf/schema.xml#L569-L570\nSortableTextField uses a value of 1024.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492364224", "createdAt": "2020-09-21T21:46:06Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -330,6 +333,18 @@ void addFields(Metacard metacard, SolrInputDocument solrInputDocument)\n                 formatIndexName + SchemaFields.SORT_SUFFIX, createCenterPoint(attributeValues));\n           }\n \n+          if (AttributeFormat.STRING.equals(format)\n+              && caseInsensitiveSort\n+              && solrInputDocument.getFieldValue(formatIndexName + SchemaFields.SORT_SUFFIX)\n+                  == null) {\n+            solrInputDocument.addField(\n+                formatIndexName + SchemaFields.SORT_SUFFIX,\n+                attributeValues.stream()\n+                    .map(Object::toString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f52043a5fdfcac5ff9b5d6f9b134b2797c6078ba"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMDU2MjU2", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-493056256", "createdAt": "2020-09-21T23:55:48Z", "commit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMzo1NTo0OFrOHVmSvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwMDowMjo0NFrOHVmaQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwOTUzNQ==", "bodyText": "\u270f\ufe0f Some kind of log message would be useful here to know why there was a NumberFormatException.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492409535", "createdAt": "2020-09-21T23:55:48Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -163,6 +167,13 @@ public DynamicSchemaResolver(List<String> additionalFields) {\n     ConfigurationStore.getInstance().addConfigurationListener(this);\n     this.schemaFields = new SchemaFields();\n     metadataMaximumBytes = getMetadataSizeLimit();\n+    caseInsensitiveSort = \"true\".equals(System.getProperty(\"solr.query.sort.caseInsensitive\"));\n+    try {\n+      textSortCharacterLimit =\n+          Integer.parseInt(System.getProperty(\"solr.index.sort.characterLimit\", \"127\").trim());\n+    } catch (NumberFormatException nfe) {\n+      textSortCharacterLimit = 127;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQwOTkxNg==", "bodyText": "\u270f\ufe0f If you truncate before toLowerCase, then there will be less to make lowercase.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492409916", "createdAt": "2020-09-21T23:57:11Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -330,6 +341,19 @@ void addFields(Metacard metacard, SolrInputDocument solrInputDocument)\n                 formatIndexName + SchemaFields.SORT_SUFFIX, createCenterPoint(attributeValues));\n           }\n \n+          if (AttributeFormat.STRING.equals(format)\n+              && caseInsensitiveSort\n+              && solrInputDocument.getFieldValue(formatIndexName + SchemaFields.SORT_SUFFIX)\n+                  == null) {\n+            solrInputDocument.addField(\n+                formatIndexName + SchemaFields.SORT_SUFFIX,\n+                attributeValues.stream()\n+                    .map(Object::toString)\n+                    .map(String::toLowerCase)\n+                    .map(value -> truncate(value, textSortCharacterLimit))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxMDQxOA==", "bodyText": "\u2757 Filter null values to avoid NPE in following maps.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492410418", "createdAt": "2020-09-21T23:59:12Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/DynamicSchemaResolver.java", "diffHunk": "@@ -330,6 +341,19 @@ void addFields(Metacard metacard, SolrInputDocument solrInputDocument)\n                 formatIndexName + SchemaFields.SORT_SUFFIX, createCenterPoint(attributeValues));\n           }\n \n+          if (AttributeFormat.STRING.equals(format)\n+              && caseInsensitiveSort\n+              && solrInputDocument.getFieldValue(formatIndexName + SchemaFields.SORT_SUFFIX)\n+                  == null) {\n+            solrInputDocument.addField(\n+                formatIndexName + SchemaFields.SORT_SUFFIX,\n+                attributeValues.stream()\n+                    .map(Object::toString)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxMTAyMg==", "bodyText": "\u270f\ufe0f I am not sure if we need to include these properties here if the defaults are good for almost all deployments.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492411022", "createdAt": "2020-09-22T00:01:08Z", "author": {"login": "pklinef"}, "path": "distribution/ddf-common/src/main/resources-filtered/etc/custom.system.properties", "diffHunk": "@@ -96,6 +96,12 @@ solr.commit.nrt.metacardTypes=workspace,metacard.query,metacard.list,query-templ\n solr.highlight.blacklist=metacard-tags\n solr.highlight.enabled=false\n \n+# The number of characters to limit the text sorting fields to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjQxMTQ1Nw==", "bodyText": "\u2757 Use a string field with docValues to improve sorting performance and avoid field cache memory usage.", "url": "https://github.com/codice/ddf/pull/6320#discussion_r492411457", "createdAt": "2020-09-22T00:02:44Z", "author": {"login": "pklinef"}, "path": "platform/solr/solr-schema/src/main/resources/solr/conf/schema.xml", "diffHunk": "@@ -57,6 +57,7 @@\n \n     <dynamicField name=\"*_xml\" type=\"string\" indexed=\"false\" stored=\"true\" multiValued=\"true\" docValues=\"false\"/>\n     <dynamicField name=\"*_txt\" type=\"string\" indexed=\"true\" stored=\"true\" multiValued=\"true\" docValues=\"true\"/>\n+    <dynamicField name=\"*_txt_sort\" type=\"lowercase\" indexed=\"true\" stored=\"false\" multiValued=\"true\" docValues=\"true\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5680507a6b0ca92e724b50b29c143edfe1eb9546"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00fa29d1289661f3c23ca26aadf74bdfc50f6812", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/00fa29d1289661f3c23ca26aadf74bdfc50f6812", "committedDate": "2020-09-22T02:49:41Z", "message": "Enable case-insensitive sorting of solr text fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cd23228180a4515fbbbf49bef8761eb252b4b9d", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/5cd23228180a4515fbbbf49bef8761eb252b4b9d", "committedDate": "2020-09-22T02:52:27Z", "message": "Move caseInsensitiveSort to field instead of method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "956479ca630eb30b43e8e070a3e698babf184f98", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/956479ca630eb30b43e8e070a3e698babf184f98", "committedDate": "2020-09-22T02:52:27Z", "message": "Fix schema to use SortableTextField"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e6bcc31cf2cf5fe116ffc7d853b59c2fea43e9b", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/9e6bcc31cf2cf5fe116ffc7d853b59c2fea43e9b", "committedDate": "2020-09-22T02:53:31Z", "message": "Update property name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11e4162a389ad67f59de2614362651fe62c260e5", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/11e4162a389ad67f59de2614362651fe62c260e5", "committedDate": "2020-09-22T02:53:31Z", "message": "Add unit test, add sort field at ingest time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d86ebbb318ed31823378fb2bd96b529e6730567", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/6d86ebbb318ed31823378fb2bd96b529e6730567", "committedDate": "2020-09-22T02:54:47Z", "message": "Add truncation to sort fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3", "committedDate": "2020-09-22T02:54:47Z", "message": "Change to string field, address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58d7c4907af3aeeac06fcc3e3b99433cdff8d07c", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/58d7c4907af3aeeac06fcc3e3b99433cdff8d07c", "committedDate": "2020-09-22T02:47:09Z", "message": "Change to string field, address comments"}, "afterCommit": {"oid": "7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3", "author": {"user": {"login": "derekwilhelm", "name": null}}, "url": "https://github.com/codice/ddf/commit/7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3", "committedDate": "2020-09-22T02:54:47Z", "message": "Change to string field, address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMTI2NDIy", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-493126422", "createdAt": "2020-09-22T04:54:27Z", "commit": {"oid": "7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjc0MTY5", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-493674169", "createdAt": "2020-09-22T17:06:32Z", "commit": {"oid": "7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjk1Nzg5", "url": "https://github.com/codice/ddf/pull/6320#pullrequestreview-493695789", "createdAt": "2020-09-22T17:34:44Z", "commit": {"oid": "7984aad56fd0c07b07fbbf3bb377c6f3e5ebd6e3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 721, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}