{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4MzAzMjg1", "number": 6062, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOToyMTozMFrOD9he-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODozNDo1MVrOD97GYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODM4MzI4OnYy", "diffSide": "RIGHT", "path": "catalog/opensearch/catalog-opensearch-source/src/main/java/org/codice/ddf/opensearch/source/OpenSearchSource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOToyMTozMFrOGXEeLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjozMjoyNFrOGXJmsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0MzY5Mw==", "bodyText": "I think it would be better if we add this login in the getWebClientForSubject method instead.", "url": "https://github.com/codice/ddf/pull/6062#discussion_r426843693", "createdAt": "2020-05-18T19:21:30Z", "author": {"login": "blen-desta"}, "path": "catalog/opensearch/catalog-opensearch-source/src/main/java/org/codice/ddf/opensearch/source/OpenSearchSource.java", "diffHunk": "@@ -1161,7 +1161,9 @@ private RestUrl newRestUrl(String url) {\n    */\n   private WebClient newOpenSearchClient(String url, Subject subj) {\n     SecureCxfClientFactory<OpenSearch> clientFactory = createClientFactory(url, username, password);\n-    return clientFactory.getWebClientForSubject(subj);\n+    return (subj != null)\n+        ? clientFactory.getWebClientForSubject(subj)\n+        : clientFactory.getWebClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20236c756b5159f8ee62efc3957046939a7cf959"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNzc5NA==", "bodyText": "As-is, passing null to SecureCxfClientFactory::getWebClientForSubject works fine. But the API never specifies what the behavior should be when passed a null value, so this seems like the safer approach.", "url": "https://github.com/codice/ddf/pull/6062#discussion_r426927794", "createdAt": "2020-05-18T22:32:24Z", "author": {"login": "SmithJosh"}, "path": "catalog/opensearch/catalog-opensearch-source/src/main/java/org/codice/ddf/opensearch/source/OpenSearchSource.java", "diffHunk": "@@ -1161,7 +1161,9 @@ private RestUrl newRestUrl(String url) {\n    */\n   private WebClient newOpenSearchClient(String url, Subject subj) {\n     SecureCxfClientFactory<OpenSearch> clientFactory = createClientFactory(url, username, password);\n-    return clientFactory.getWebClientForSubject(subj);\n+    return (subj != null)\n+        ? clientFactory.getWebClientForSubject(subj)\n+        : clientFactory.getWebClient();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0MzY5Mw=="}, "originalCommit": {"oid": "20236c756b5159f8ee62efc3957046939a7cf959"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODU5MzUyOnYy", "diffSide": "RIGHT", "path": "catalog/spatial/csw/spatial-csw-source-common/src/main/java/org/codice/ddf/spatial/ogc/csw/catalog/common/source/AbstractCswSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDozMTo1OVrOGXGhdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDozMTo1OVrOGXGhdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3NzMwMg==", "bodyText": "Same comment as above", "url": "https://github.com/codice/ddf/pull/6062#discussion_r426877302", "createdAt": "2020-05-18T20:31:59Z", "author": {"login": "blen-desta"}, "path": "catalog/spatial/csw/spatial-csw-source-common/src/main/java/org/codice/ddf/spatial/ogc/csw/catalog/common/source/AbstractCswSource.java", "diffHunk": "@@ -794,7 +794,7 @@ public boolean isAvailable(SourceMonitor sourceMonitor) {\n   @Override\n   public SourceResponse query(QueryRequest queryRequest) throws UnsupportedQueryException {\n     Subject subject = (Subject) queryRequest.getPropertyValue(SecurityConstants.SECURITY_SUBJECT);\n-    Csw csw = factory.getClientForSubject(subject);\n+    Csw csw = (subject != null) ? factory.getClientForSubject(subject) : factory.getClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20236c756b5159f8ee62efc3957046939a7cf959"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODU5NDA3OnYy", "diffSide": "RIGHT", "path": "catalog/spatial/csw/spatial-csw-source-common/src/main/java/org/codice/ddf/spatial/ogc/csw/catalog/common/source/AbstractCswSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDozMjoxM1rOGXGh0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDozMjoxM1rOGXGh0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3NzM5NQ==", "bodyText": "Same comment as above", "url": "https://github.com/codice/ddf/pull/6062#discussion_r426877395", "createdAt": "2020-05-18T20:32:13Z", "author": {"login": "blen-desta"}, "path": "catalog/spatial/csw/spatial-csw-source-common/src/main/java/org/codice/ddf/spatial/ogc/csw/catalog/common/source/AbstractCswSource.java", "diffHunk": "@@ -985,9 +985,8 @@ public ResourceResponse retrieveResource(\n   private ResourceResponse retrieveResourceById(\n       Map<String, Serializable> requestProperties, String metacardId)\n       throws ResourceNotFoundException {\n-    Csw csw =\n-        factory.getClientForSubject(\n-            (Subject) requestProperties.get(SecurityConstants.SECURITY_SUBJECT));\n+    Subject subject = (Subject) requestProperties.get(SecurityConstants.SECURITY_SUBJECT);\n+    Csw csw = (subject != null) ? factory.getClientForSubject(subject) : factory.getClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20236c756b5159f8ee62efc3957046939a7cf959"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MjU4MDE3OnYy", "diffSide": "RIGHT", "path": "catalog/spatial/wfs/1.1.0/spatial-wfs-v1_1_0-source/src/main/java/org/codice/ddf/spatial/ogc/wfs/v110/catalog/source/WfsSource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODozNDo1MVrOGXtiAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxODozNDo1MVrOGXtiAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzUxNjQxOA==", "bodyText": "\u270f\ufe0f If we are expecting a Boolean to be here instead of a boolean, it might be worth changing the variable type.", "url": "https://github.com/codice/ddf/pull/6062#discussion_r427516418", "createdAt": "2020-05-19T18:34:51Z", "author": {"login": "bakejeyner"}, "path": "catalog/spatial/wfs/1.1.0/spatial-wfs-v1_1_0-source/src/main/java/org/codice/ddf/spatial/ogc/wfs/v110/catalog/source/WfsSource.java", "diffHunk": "@@ -230,7 +230,7 @@\n \n   private String srsName;\n \n-  private boolean allowRedirects;\n+  private boolean allowRedirects = Boolean.FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0aa9f86c702a8e10db016a3d012224a309e09689"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4593, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}