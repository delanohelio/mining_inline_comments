{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4MjU0MDg0", "number": 6283, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMToxNjo0NVrOEfx3aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo0NDo1MlrOEgEw0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzU4MzEzOnYy", "diffSide": "RIGHT", "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMToxNjo0NVrOHMRwIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNzowODoxNlrOHMY-zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzNTgwOQ==", "bodyText": "\u2753 Is it not enough to simply check for instanceof Map instead?", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482635809", "createdAt": "2020-09-03T01:16:45Z", "author": {"login": "Lambeaux"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -309,6 +317,30 @@ private void handleSuggestionResponse(\n     }\n   }\n \n+  private void handlePartialResults(\n+      QueryResponse solrResponse, Map<String, Serializable> responseProps) {\n+    if (solrResponse.getResponseHeader() != null) {\n+      Boolean partialResults = (Boolean) solrResponse.getResponseHeader().get(\"partialResults\");\n+      if (Boolean.TRUE.equals(partialResults)) {\n+        responseProps.put(\"partial-results\", true);\n+        if (LOGGER.isDebugEnabled()) {\n+          String q = \"unknown\";\n+          if (solrResponse.getResponseHeader().get(\"params\") != null\n+              && solrResponse.getResponseHeader().get(\"params\") instanceof SimpleOrderedMap) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc1NDI1NA==", "bodyText": "It does not appear Map is actually in the type hierarchy of SimpleOrderedMap.  You can see some of the differences from Map in the NamedList JavaDoc.\nhttps://github.com/apache/lucene-solr/blob/a70a47d053954b0f13b7da6f5612432a8ea7a898/solr/solrj/src/java/org/apache/solr/common/util/NamedList.java#L46-L54", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482754254", "createdAt": "2020-09-03T07:08:16Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -309,6 +317,30 @@ private void handleSuggestionResponse(\n     }\n   }\n \n+  private void handlePartialResults(\n+      QueryResponse solrResponse, Map<String, Serializable> responseProps) {\n+    if (solrResponse.getResponseHeader() != null) {\n+      Boolean partialResults = (Boolean) solrResponse.getResponseHeader().get(\"partialResults\");\n+      if (Boolean.TRUE.equals(partialResults)) {\n+        responseProps.put(\"partial-results\", true);\n+        if (LOGGER.isDebugEnabled()) {\n+          String q = \"unknown\";\n+          if (solrResponse.getResponseHeader().get(\"params\") != null\n+              && solrResponse.getResponseHeader().get(\"params\") instanceof SimpleOrderedMap) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzNTgwOQ=="}, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNzU5MTg2OnYy", "diffSide": "RIGHT", "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMToyMToyNlrOHMR0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwMToyOToyOVrOHMR9XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzNzA1Mg==", "bodyText": "\u2753 If you don't get a new Solr metacard client do you have to refresh the bundle to validate the system property change?", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482637052", "createdAt": "2020-09-03T01:21:26Z", "author": {"login": "Lambeaux"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -150,6 +151,11 @@\n   private final int commitNrtCommitWithinMs =\n       Math.max(NumberUtils.toInt(accessProperty(SOLR_COMMIT_NRT_COMMITWITHINMS, \"1000\")), 0);\n \n+  private static final String SOLR_QUERY_TIMEALLOWEDMS = \"solr.query.timeAllowed\";\n+\n+  private final int queryTimeAllowedMs =\n+      Math.max(NumberUtils.toInt(accessProperty(SOLR_QUERY_TIMEALLOWEDMS, \"0\")), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzOTE5Ng==", "bodyText": "Just now saw that in the testing instructions. No big deal.", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482639196", "createdAt": "2020-09-03T01:29:29Z", "author": {"login": "Lambeaux"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -150,6 +151,11 @@\n   private final int commitNrtCommitWithinMs =\n       Math.max(NumberUtils.toInt(accessProperty(SOLR_COMMIT_NRT_COMMITWITHINMS, \"1000\")), 0);\n \n+  private static final String SOLR_QUERY_TIMEALLOWEDMS = \"solr.query.timeAllowed\";\n+\n+  private final int queryTimeAllowedMs =\n+      Math.max(NumberUtils.toInt(accessProperty(SOLR_QUERY_TIMEALLOWEDMS, \"0\")), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjYzNzA1Mg=="}, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxODAyNDgzOnYy", "diffSide": "RIGHT", "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QwNDo1Mzo1M1rOHMV3hA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxODowNTozOVrOHMx4Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwMzIzNg==", "bodyText": "\u270f\ufe0f I wonder if this would be any cleaner with some of these if conditions inverted , though thats purely style so you can keep it whatever way you wish", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482703236", "createdAt": "2020-09-03T04:53:53Z", "author": {"login": "rzwiefel"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -309,6 +317,30 @@ private void handleSuggestionResponse(\n     }\n   }\n \n+  private void handlePartialResults(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4Mjc1ODI2Ng==", "bodyText": "Maybe.  How does this look to you?\n  private void handlePartialResults(\n      QueryResponse solrResponse, Map<String, Serializable> responseProps) {\n    if (solrResponse.getResponseHeader() == null) {\n      return;\n    }\n\n    Boolean partialResults = (Boolean) solrResponse.getResponseHeader().get(\"partialResults\");\n    if (!Boolean.TRUE.equals(partialResults)) {\n      return;\n    }\n\n    responseProps.put(\"partial-results\", true);\n\n    if (!LOGGER.isDebugEnabled()) {\n      return;\n    }\n\n    String q = \"unknown\";\n    if (solrResponse.getResponseHeader().get(\"params\") != null\n        && solrResponse.getResponseHeader().get(\"params\") instanceof SimpleOrderedMap) {\n      q =\n          String.valueOf(\n              ((SimpleOrderedMap) solrResponse.getResponseHeader().get(\"params\")).get(\"q\"));\n    }\n\n    LOGGER.debug(\n        \"Found {} partial results for query [{}] that took {}ms.\",\n        solrResponse.getResults().getNumFound(),\n        q,\n        solrResponse.getQTime());\n  }", "url": "https://github.com/codice/ddf/pull/6283#discussion_r482758266", "createdAt": "2020-09-03T07:16:14Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -309,6 +317,30 @@ private void handleSuggestionResponse(\n     }\n   }\n \n+  private void handlePartialResults(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwMzIzNg=="}, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE2MjEyMg==", "bodyText": "And here's yet another option to consider.\nboolean partialResults = Optional.of(solrResponse)\n  .map(QueryResponse::getResponseHeader)\n  .map(responseHeader -> responseHeader.get(\"partialResults\"))\n  .orElse(false);\n\nif (!partialResults) {\n  return;\n}\n\nresponseProps.put(\"partial-results\", partialResults);\n\n// could keep inline or extract to func\nif (LOGGER.isDebugEnabled()) {\n  String q = Optional.of(solrResponse)\n    .map(QueryResponse::getResponseHeader)\n    .map(responseHeader -> responseHeader.get(\"params\"))\n    .filter(SimpleOrderedMap.class::instanceOf)\n    .map(SimpleOrderedMap.class::cast)\n    .map(params -> params.get(\"q\"))\n    .orElse(\"unknown\");\n\n  LOGGER.debug(\n    \"Found {} partial results for query [{}] that took {}ms.\",\n    solrResponse.getResults().getNumFound(),\n    q,\n    solrResponse.getQTime());\n}", "url": "https://github.com/codice/ddf/pull/6283#discussion_r483162122", "createdAt": "2020-09-03T18:05:39Z", "author": {"login": "rzwiefel"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -309,6 +317,30 @@ private void handleSuggestionResponse(\n     }\n   }\n \n+  private void handlePartialResults(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjcwMzIzNg=="}, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMDY3OTIyOnYy", "diffSide": "RIGHT", "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNjo0NDo1MlrOHMvJKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxNzoyNTo0MVrOHMwkDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzExNzM1NQ==", "bodyText": "what would 0 do? would it not perform the search at all or omit this property? should it be default to something else?", "url": "https://github.com/codice/ddf/pull/6283#discussion_r483117355", "createdAt": "2020-09-03T16:44:52Z", "author": {"login": "lamhuy"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -150,6 +151,11 @@\n   private final int commitNrtCommitWithinMs =\n       Math.max(NumberUtils.toInt(accessProperty(SOLR_COMMIT_NRT_COMMITWITHINMS, \"1000\")), 0);\n \n+  private static final String SOLR_QUERY_TIMEALLOWEDMS = \"solr.query.timeAllowed\";\n+\n+  private final int queryTimeAllowedMs =\n+      Math.max(NumberUtils.toInt(accessProperty(SOLR_QUERY_TIMEALLOWEDMS, \"0\")), 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzE0MDYyMQ==", "bodyText": "Before setting the time allowed on the Solr query, I check if queryTimeAllowedMs is greater than 0.  So this currently disables it.  I was having a hard time coming up with a safe default for everyone's production use case.\nI would like to have a sensible default other than disabling it but I did not want to hold up getting this in while trying to figure out what that value should be.  Ideally it would be something like one second but that assumes everyone will be able to scale their clusters or fix their schemas (and reindex) quick enough to avoid going over that value.  I think it would be safe for the majority of production use cases but I know it is not safe for all of them.  But a value safe for all of them might be so high that it is similar to disabling it.\nI am also not sure how many production use cases might have a small outlier of users that really need to do very complex queries and get the full results back.\nThere is also no feedback from current endpoints to know if you are seeing the full results or a partial result.", "url": "https://github.com/codice/ddf/pull/6283#discussion_r483140621", "createdAt": "2020-09-03T17:25:41Z", "author": {"login": "pklinef"}, "path": "catalog/solr/catalog-solr-core/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -150,6 +151,11 @@\n   private final int commitNrtCommitWithinMs =\n       Math.max(NumberUtils.toInt(accessProperty(SOLR_COMMIT_NRT_COMMITWITHINMS, \"1000\")), 0);\n \n+  private static final String SOLR_QUERY_TIMEALLOWEDMS = \"solr.query.timeAllowed\";\n+\n+  private final int queryTimeAllowedMs =\n+      Math.max(NumberUtils.toInt(accessProperty(SOLR_QUERY_TIMEALLOWEDMS, \"0\")), 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzExNzM1NQ=="}, "originalCommit": {"oid": "a558ed0777f9b26f4a3e898392529ae8424b3bf0"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4580, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}