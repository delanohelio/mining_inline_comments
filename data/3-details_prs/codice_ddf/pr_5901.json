{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTA0MzEw", "number": 5901, "title": "DDF-5900 split interfaces and classes for security APIs", "bodyText": "What does this PR do?\nWho is reviewing it?\n@SmithJosh @bakejeyner\nSelect relevant component teams:\n\nAsk 2 committers to review/merge the PR and tag them here.\n@blen-desta\n@garrettfreibott\n@Lambeaux\n@pklinef\n@stustison\nHow should this be tested?\n\nAny background context you want to provide?\nWhat are the relevant tickets?\nFixes: #5900\nScreenshots\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-03-16T21:29:35Z", "url": "https://github.com/codice/ddf/pull/5901", "merged": true, "mergeCommit": {"oid": "0d9f2824163d87a6a2342e3f16d39a0f72280fb8"}, "closed": true, "closedAt": "2020-03-26T23:01:32Z", "author": {"login": "stustison"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOk4nxgBqjMxMzc5NzE1Njk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRhfCnABqjMxNjk4MDU5NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6798af99250326e9b00a47f994f7aeaae11126b", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/b6798af99250326e9b00a47f994f7aeaae11126b", "committedDate": "2020-03-16T21:26:46Z", "message": "DDF-5900 split interfaces and classes for security APIs"}, "afterCommit": {"oid": "77c929a8a1e2ab248991ad430ea171026ef5a597", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/77c929a8a1e2ab248991ad430ea171026ef5a597", "committedDate": "2020-03-17T15:59:13Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "77c929a8a1e2ab248991ad430ea171026ef5a597", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/77c929a8a1e2ab248991ad430ea171026ef5a597", "committedDate": "2020-03-17T15:59:13Z", "message": "DDF-5900 split interfaces and classes for security APIs"}, "afterCommit": {"oid": "d806793c84229813d299f5bf6aa462989e7219bd", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/d806793c84229813d299f5bf6aa462989e7219bd", "committedDate": "2020-03-17T16:23:04Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d806793c84229813d299f5bf6aa462989e7219bd", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/d806793c84229813d299f5bf6aa462989e7219bd", "committedDate": "2020-03-17T16:23:04Z", "message": "DDF-5900 split interfaces and classes for security APIs"}, "afterCommit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/c235d56fee430391defdfb2e6acbfd20ae36a9b8", "committedDate": "2020-03-17T18:24:45Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2NDI4MjIy", "url": "https://github.com/codice/ddf/pull/5901#pullrequestreview-376428222", "createdAt": "2020-03-17T21:46:01Z", "commit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo0NjowMVrOF3vMVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTo0NjoxOVrOF3vM4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4OTIwNQ==", "bodyText": "\u2753 Are these error messages getting propagated to an end user? If not, can we be more specific? Otherwise, I understand the reason for being vague.", "url": "https://github.com/codice/ddf/pull/5901#discussion_r393989205", "createdAt": "2020-03-17T21:46:01Z", "author": {"login": "Lambeaux"}, "path": "platform/security/filter/security-filter-login/src/main/java/org/codice/ddf/security/filter/login/LoginFilter.java", "diffHunk": "@@ -124,6 +125,9 @@ public void doFilter(\n         (X509Certificate[]) httpRequest.getAttribute(\"javax.servlet.request.X509Certificate\"));\n     token.setRequestURI(httpRequest.getRequestURI());\n \n+    if (securityManager == null) {\n+      throw new AuthenticationException(\"Unable to authenticate user, system is not available.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4OTI3Mg==", "bodyText": "\u2753 Are these error messages getting propagated to an end user? If not, can we be more specific? Otherwise, I understand the reason for being vague.", "url": "https://github.com/codice/ddf/pull/5901#discussion_r393989272", "createdAt": "2020-03-17T21:46:09Z", "author": {"login": "Lambeaux"}, "path": "platform/security/filter/security-filter-login/src/main/java/org/codice/ddf/security/filter/login/LoginFilter.java", "diffHunk": "@@ -190,6 +194,9 @@ public void doFilter(\n    * @param subject Subject to attach to request\n    */\n   private void addToSession(HttpServletRequest httpRequest, Subject subject) {\n+    if (sessionFactory == null) {\n+      throw new SessionException(\"Unable to store user's session.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4OTM0Nw==", "bodyText": "\u2753 Are these error messages getting propagated to an end user? If not, can we be more specific? Otherwise, I understand the reason for being vague.", "url": "https://github.com/codice/ddf/pull/5901#discussion_r393989347", "createdAt": "2020-03-17T21:46:19Z", "author": {"login": "Lambeaux"}, "path": "platform/security/filter/security-filter-web-sso/src/main/java/org/codice/ddf/security/filter/websso/WebSSOFilter.java", "diffHunk": "@@ -208,6 +210,9 @@ private HandlerResult checkForPreviousResultOnSession(HttpServletRequest httpReq\n           Hashing.sha256().hashString(requestedSessionId, StandardCharsets.UTF_8).toString());\n     }\n     if (session == null && requestedSessionId != null) {\n+      if (sessionFactory == null) {\n+        throw new SessionException(\"Unable to verify user's session.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c235d56fee430391defdfb2e6acbfd20ae36a9b8", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/c235d56fee430391defdfb2e6acbfd20ae36a9b8", "committedDate": "2020-03-17T18:24:45Z", "message": "DDF-5900 split interfaces and classes for security APIs"}, "afterCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/ad1f46835852dc55c4870f184b3eb20fa9dc8277", "committedDate": "2020-03-18T22:19:37Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTg4ODM3", "url": "https://github.com/codice/ddf/pull/5901#pullrequestreview-376188837", "createdAt": "2020-03-17T16:15:04Z", "commit": {"oid": "77c929a8a1e2ab248991ad430ea171026ef5a597"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNTowNFrOF3jnZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNjoxNTowNFrOF3jnZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzc5OTUyNw==", "bodyText": "\u2753 The availability of the security manager is optional here but in code, if we don't have it set we throw an exception. Is this here so we don't have issues resolving the dependency?", "url": "https://github.com/codice/ddf/pull/5901#discussion_r393799527", "createdAt": "2020-03-17T16:15:04Z", "author": {"login": "blen-desta"}, "path": "platform/security/interceptor/security-interceptor-guest/src/main/resources/OSGI-INF/blueprint/blueprint.xml", "diffHunk": "@@ -17,7 +17,7 @@\n            xmlns=\"http://www.osgi.org/xmlns/blueprint/v1.0.0\"\n            xsi:schemaLocation=\"http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd\"\n >\n-    <reference id=\"securityManager\" interface=\"ddf.security.service.SecurityManager\"/>\n+    <reference id=\"securityManager\" interface=\"ddf.security.service.SecurityManager\" availability=\"optional\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77c929a8a1e2ab248991ad430ea171026ef5a597"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODM2MDYy", "url": "https://github.com/codice/ddf/pull/5901#pullrequestreview-379836062", "createdAt": "2020-03-23T21:28:20Z", "commit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMToyODoyMVrOF6Yxyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMjoyMTowMVrOF6aPtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2NzY5MA==", "bodyText": "Any reason why this is a singleton instead of an osgi service?", "url": "https://github.com/codice/ddf/pull/5901#discussion_r396767690", "createdAt": "2020-03-23T21:28:21Z", "author": {"login": "bakejeyner"}, "path": "platform/platform-http-proxy/src/main/java/org/codice/ddf/platform/http/proxy/HttpProxy.java", "diffHunk": "@@ -126,8 +126,8 @@ Properties getProperties() throws IOException {\n                 + CXF_CONFIG);\n     Properties properties = new Properties();\n     if (paxConfig.exists() && cxfConfig.exists()) {\n-      properties.putAll(PropertiesLoader.loadProperties(paxConfig.getAbsolutePath()));\n-      properties.putAll(PropertiesLoader.loadProperties(cxfConfig.getAbsolutePath()));\n+      properties.putAll(PropertiesLoader.getInstance().loadProperties(paxConfig.getAbsolutePath()));\n+      properties.putAll(PropertiesLoader.getInstance().loadProperties(cxfConfig.getAbsolutePath()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2ODkyMQ==", "bodyText": "I see the PropertiesLoader's methods toMap() and loadProperties used in conjunction a couple of times. Would it make sense to expose a new method that does both of those steps in one?", "url": "https://github.com/codice/ddf/pull/5901#discussion_r396768921", "createdAt": "2020-03-23T21:30:48Z", "author": {"login": "bakejeyner"}, "path": "platform/security/claims/security-claims-attributequerycommon/src/main/java/org/codice/ddf/security/claims/attributequery/common/AttributeQueryClaimsHandler.java", "diffHunk": "@@ -318,7 +318,9 @@ public void setDestination(String destination) {\n   public void setAttributeMapLocation(String attributeMapLocation) {\n     if (StringUtils.isNotBlank(attributeMapLocation)\n         && !attributeMapLocation.equals(this.attributeMapLocation)) {\n-      attributeMap = PropertiesLoader.toMap(PropertiesLoader.loadProperties(attributeMapLocation));\n+      attributeMap =\n+          PropertiesLoader.getInstance()\n+              .toMap(PropertiesLoader.getInstance().loadProperties(attributeMapLocation));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2OTM1OQ==", "bodyText": "\ud83c\udf89", "url": "https://github.com/codice/ddf/pull/5901#discussion_r396769359", "createdAt": "2020-03-23T21:31:41Z", "author": {"login": "bakejeyner"}, "path": "platform/security/core/security-core-impl/pom.xml", "diffHunk": "@@ -140,17 +302,17 @@\n                                         <limit implementation=\"org.codice.jacoco.LenientLimit\">\n                                             <counter>INSTRUCTION</counter>\n                                             <value>COVEREDRATIO</value>\n-                                            <minimum>0.05</minimum>\n+                                            <minimum>0.56</minimum>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc5MTczNQ==", "bodyText": "\u2753 :nitpick: wonder why this extra newline wasn't picked up by the formatter", "url": "https://github.com/codice/ddf/pull/5901#discussion_r396791735", "createdAt": "2020-03-23T22:21:01Z", "author": {"login": "bakejeyner"}, "path": "platform/security/core/security-core-impl/src/test/groovy/ddf/security/samlp/impl/EntityInformationSpec.groovy", "diffHunk": "@@ -1,14 +1,14 @@\n package ddf.security.samlp.impl\n \n-import ddf.security.samlp.MetadataConfigurationParser\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODg1NzI0", "url": "https://github.com/codice/ddf/pull/5901#pullrequestreview-379885724", "createdAt": "2020-03-23T23:01:07Z", "commit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01055746977f6a3cf52097450c85e12612fd68f", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/e01055746977f6a3cf52097450c85e12612fd68f", "committedDate": "2020-03-26T19:43:17Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ad1f46835852dc55c4870f184b3eb20fa9dc8277", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/ad1f46835852dc55c4870f184b3eb20fa9dc8277", "committedDate": "2020-03-18T22:19:37Z", "message": "DDF-5900 split interfaces and classes for security APIs"}, "afterCommit": {"oid": "e01055746977f6a3cf52097450c85e12612fd68f", "author": {"user": {"login": "stustison", "name": "Scott Tustison"}}, "url": "https://github.com/codice/ddf/commit/e01055746977f6a3cf52097450c85e12612fd68f", "committedDate": "2020-03-26T19:43:17Z", "message": "DDF-5900 split interfaces and classes for security APIs"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 68, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}