{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTEzMjYy", "number": 6249, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjoyMjowOVrOEaL63w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxMzoyM1rOEcHfGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODkzNzI3OnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMjoyMjowOVrOHDdBzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMToyMDoyNFrOHF-yDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM4MzM3NQ==", "bodyText": "this logging should be parameterized", "url": "https://github.com/codice/ddf/pull/6249#discussion_r473383375", "createdAt": "2020-08-19T22:22:09Z", "author": {"login": "bdeining"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -102,4 +112,26 @@ private void deleteJSessionId(HttpServletResponse response) {\n     cookie.setComment(\"EXPIRING COOKIE at \" + System.currentTimeMillis());\n     response.addCookie(cookie);\n   }\n+\n+  private String getRedirectUriMessage() {\n+    String redirectUriMessage = \"\";\n+    if (Strings.isNotBlank(SystemBaseUrl.INTERNAL.getBaseUrl())\n+        && Strings.isNotBlank(redirectUri)) {\n+      try {\n+        URIBuilder redirectUrlBuilder =\n+            new URIBuilder(SystemBaseUrl.INTERNAL.getBaseUrl() + redirectUri);\n+        redirectUriMessage =\n+            redirectUrlBuilder == null ? \"\" : redirectUrlBuilder.build().toString();\n+      } catch (URISyntaxException e) {\n+        LOGGER.debug(\n+            \"Invalid URI of %s set for logout redirect uri. Users will not be redirected to %s upon logout.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5994c99aa6063649f1910023090cf92e1a0ea4ee"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAzMzU0OQ==", "bodyText": "Yeah this is a format string, not a parameterized log string. By parameterized, we mean:\n\"Invalid URI of {} set for logout redirect uri. Users will not be redirected to {} upon logout.\"", "url": "https://github.com/codice/ddf/pull/6249#discussion_r476033549", "createdAt": "2020-08-25T01:20:24Z", "author": {"login": "Lambeaux"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -102,4 +112,26 @@ private void deleteJSessionId(HttpServletResponse response) {\n     cookie.setComment(\"EXPIRING COOKIE at \" + System.currentTimeMillis());\n     response.addCookie(cookie);\n   }\n+\n+  private String getRedirectUriMessage() {\n+    String redirectUriMessage = \"\";\n+    if (Strings.isNotBlank(SystemBaseUrl.INTERNAL.getBaseUrl())\n+        && Strings.isNotBlank(redirectUri)) {\n+      try {\n+        URIBuilder redirectUrlBuilder =\n+            new URIBuilder(SystemBaseUrl.INTERNAL.getBaseUrl() + redirectUri);\n+        redirectUriMessage =\n+            redirectUrlBuilder == null ? \"\" : redirectUrlBuilder.build().toString();\n+      } catch (URISyntaxException e) {\n+        LOGGER.debug(\n+            \"Invalid URI of %s set for logout redirect uri. Users will not be redirected to %s upon logout.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM4MzM3NQ=="}, "originalCommit": {"oid": "5994c99aa6063649f1910023090cf92e1a0ea4ee"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE2MTExOnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowODoyOVrOHGctag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNTowODoyOVrOHGctag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyMzg4Mg==", "bodyText": "\u270f\ufe0f This is more of a redirect path and not a URI.", "url": "https://github.com/codice/ddf/pull/6249#discussion_r476523882", "createdAt": "2020-08-25T15:08:29Z", "author": {"login": "pklinef"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -102,4 +112,26 @@ private void deleteJSessionId(HttpServletResponse response) {\n     cookie.setComment(\"EXPIRING COOKIE at \" + System.currentTimeMillis());\n     response.addCookie(cookie);\n   }\n+\n+  private String getRedirectUriMessage() {\n+    String redirectUriMessage = \"\";\n+    if (Strings.isNotBlank(SystemBaseUrl.INTERNAL.getBaseUrl())\n+        && Strings.isNotBlank(redirectUri)) {\n+      try {\n+        URIBuilder redirectUrlBuilder =\n+            new URIBuilder(SystemBaseUrl.INTERNAL.getBaseUrl() + redirectUri);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5994c99aa6063649f1910023090cf92e1a0ea4ee"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3OTE4MjM1OnYy", "diffSide": "RIGHT", "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxMzoyM1rOHGc7DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQxNToxMzoyM1rOHGc7DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjUyNzM3Mw==", "bodyText": "\u2753 Should we instead add the ability to point to any URL which could include an external security system?  I am not sure if we should always assume DDF will handle logout.  For example, you could logout of Keycloak directly instead of redirecting from the DDF logout servlet.\nhttps://www.keycloak.org/docs/latest/securing_apps/index.html#logout", "url": "https://github.com/codice/ddf/pull/6249#discussion_r476527373", "createdAt": "2020-08-25T15:13:23Z", "author": {"login": "pklinef"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LocalLogoutServlet.java", "diffHunk": "@@ -102,4 +112,26 @@ private void deleteJSessionId(HttpServletResponse response) {\n     cookie.setComment(\"EXPIRING COOKIE at \" + System.currentTimeMillis());\n     response.addCookie(cookie);\n   }\n+\n+  private String getRedirectUriMessage() {\n+    String redirectUriMessage = \"\";\n+    if (Strings.isNotBlank(SystemBaseUrl.INTERNAL.getBaseUrl())\n+        && Strings.isNotBlank(redirectUri)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5994c99aa6063649f1910023090cf92e1a0ea4ee"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4558, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}