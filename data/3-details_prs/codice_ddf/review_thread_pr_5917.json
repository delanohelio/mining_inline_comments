{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMDg1Mjc1", "number": 5917, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNjozNlrODplCjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxOTo0OFrODplHpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTI1MDY5OnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNjozNlrOF41_Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxNjozNlrOF41_Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE0OTA1OQ==", "bodyText": "\u270f\ufe0f Possibly worth changing the method name to maybe something like findBestCollation or something that matches the return value more appropriately.", "url": "https://github.com/codice/ddf/pull/5917#discussion_r395149059", "createdAt": "2020-03-19T16:16:36Z", "author": {"login": "cantstoptheunk"}, "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -260,19 +260,27 @@ public SourceResponse query(QueryRequest request) throws UnsupportedQueryExcepti\n         addDocsToResults(docs, results);\n \n         if (userSpellcheckIsOn && solrSpellcheckHasResults(solrResponse)) {\n-          query.set(\"q\", findQueryToResend(query, solrResponse));\n+          Collation collation = findQueryToResend(query, solrResponse);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9e4f3a236f66b6cec77b506acd0770b1026ac1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0OTI2MzcyOnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNjoxOTo0OFrOF42Huw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzozMToxMFrOF45HZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE1MTI5MQ==", "bodyText": "\u270f\ufe0f Should we do a null check here for the case that the solrResponse.getSpellCheckResponse().getCollatedResults() has size 0 inside the findQueryToResend method which will return null and then we would get an null exception here.", "url": "https://github.com/codice/ddf/pull/5917#discussion_r395151291", "createdAt": "2020-03-19T16:19:48Z", "author": {"login": "cantstoptheunk"}, "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -260,19 +260,27 @@ public SourceResponse query(QueryRequest request) throws UnsupportedQueryExcepti\n         addDocsToResults(docs, results);\n \n         if (userSpellcheckIsOn && solrSpellcheckHasResults(solrResponse)) {\n-          query.set(\"q\", findQueryToResend(query, solrResponse));\n+          Collation collation = findQueryToResend(query, solrResponse);\n+          query.set(\"q\", collation.getCollationQueryString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b9e4f3a236f66b6cec77b506acd0770b1026ac1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE2NjY5NA==", "bodyText": "It won't actually get to this line if that is true.  The if statement above verifies that there are collated results", "url": "https://github.com/codice/ddf/pull/5917#discussion_r395166694", "createdAt": "2020-03-19T16:41:40Z", "author": {"login": "derekwilhelm"}, "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -260,19 +260,27 @@ public SourceResponse query(QueryRequest request) throws UnsupportedQueryExcepti\n         addDocsToResults(docs, results);\n \n         if (userSpellcheckIsOn && solrSpellcheckHasResults(solrResponse)) {\n-          query.set(\"q\", findQueryToResend(query, solrResponse));\n+          Collation collation = findQueryToResend(query, solrResponse);\n+          query.set(\"q\", collation.getCollationQueryString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE1MTI5MQ=="}, "originalCommit": {"oid": "7b9e4f3a236f66b6cec77b506acd0770b1026ac1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwMDM1Ng==", "bodyText": "Nice. Looks good to me then.", "url": "https://github.com/codice/ddf/pull/5917#discussion_r395200356", "createdAt": "2020-03-19T17:31:10Z", "author": {"login": "cantstoptheunk"}, "path": "catalog/core/catalog-core-solr/src/main/java/ddf/catalog/source/solr/SolrMetacardClientImpl.java", "diffHunk": "@@ -260,19 +260,27 @@ public SourceResponse query(QueryRequest request) throws UnsupportedQueryExcepti\n         addDocsToResults(docs, results);\n \n         if (userSpellcheckIsOn && solrSpellcheckHasResults(solrResponse)) {\n-          query.set(\"q\", findQueryToResend(query, solrResponse));\n+          Collation collation = findQueryToResend(query, solrResponse);\n+          query.set(\"q\", collation.getCollationQueryString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTE1MTI5MQ=="}, "originalCommit": {"oid": "7b9e4f3a236f66b6cec77b506acd0770b1026ac1"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4656, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}