{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTEyNzQx", "number": 6355, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMDozN1rOEqajgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMDozN1rOEqajgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyOTEwNzIwOnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxNzozMDozN1rOHcm7UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxODoyMjo0NVrOHcon4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw==", "bodyText": "\u2753 Would this change impact how existing queries (i.e. queries created before this change) are handled ? I suspect it would be best if the code is able to handle both of these falsey values", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499759953", "createdAt": "2020-10-05T17:30:37Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc2NTgzNA==", "bodyText": "This would have no impact on existing queries, since existing queries would have an actual detail-level that was chosen, or an undefined detail-level that equates to allfields.", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499765834", "createdAt": "2020-10-05T17:41:52Z", "author": {"login": "abel-connexta"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3MjE2Ng==", "bodyText": "Ok, if the code i still able to handle undefined then we should be good to go. I'm still curious though, why was this changed to null to begin with? \ud83e\udd14", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499772166", "createdAt": "2020-10-05T17:53:52Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc3NjgxNA==", "bodyText": "Since we want to automatically inject the default Result form within a new Search Form, needed a way to know when a Search form is new. Because what was happening, was that when you tried to update a Search form, and you had previously saved 'All Result' for Result form, if you had a default Result Form, it was overriding your previously saved search form 'All Result'. Hence needed to know when a Search form was new so that the default form could be automatically inject, else, it should display whatever was saved if updating a Search form.", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499776814", "createdAt": "2020-10-05T18:02:04Z", "author": {"login": "abel-connexta"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4MDI0Mw==", "bodyText": "Can we somehow apply the default Result form when the user clicks on + Search Form card instead of changing the underlying model?", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499780243", "createdAt": "2020-10-05T18:08:45Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4NTQ0NQ==", "bodyText": "That was the first thing I thought of doing, but since it does not only apply to + Search Form, but it also apply to wherever a search form is created (i.e. in workspace, when first click on \"Search DDF Intrigue\" or when switching from queries to new queries (from text to \"basic\" or \"advance\" search)", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499785445", "createdAt": "2020-10-05T18:18:27Z", "author": {"login": "abel-connexta"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc4Nzc0Nw==", "bodyText": "ohhh ok, that makes sense \ud83d\udc4d", "url": "https://github.com/codice/ddf/pull/6355#discussion_r499787747", "createdAt": "2020-10-05T18:22:45Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/Query.js", "diffHunk": "@@ -186,7 +186,7 @@ Query.Model = PartialAssociatedModel.extend({\n         type: 'text',\n         isLocal: false,\n         isOutdated: false,\n-        'detail-level': undefined,\n+        'detail-level': null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTc1OTk1Mw=="}, "originalCommit": {"oid": "5ffbfea6e95ec9c798f0821d58e9dcb009044b82"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4481, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}