{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTc1NDM0", "number": 6356, "title": "Address some miscellaneous SonarQube findings", "bodyText": "What does this PR do?\nAddresses some miscellaneous SonarQube findings\nWho is reviewing it?\n@blen-desta @garrettfreibott @bakejeyner @SmithJosh @stustison\nHow should this be tested?\nCI\nAny background context you want to provide?\nhttps://sonarcloud.io/project/issues?id=ddf&resolved=false\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-09-29T23:52:13Z", "url": "https://github.com/codice/ddf/pull/6356", "merged": true, "mergeCommit": {"oid": "51c3a85ace1bc505e1b42aecc2fb16261a92828c"}, "closed": true, "closedAt": "2020-10-21T03:01:22Z", "author": {"login": "emmberk"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNxSzMAFqTQ5OTAwMjEzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUf6AQAH2gAyNDk1MTc1NDM0OjIzYTk1ZTNlZDliZjBkZTFkNmExNjdmMTNmNjc1M2Y0ZGI4N2U3ZWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDAyMTM2", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499002136", "createdAt": "2020-09-29T23:55:57Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMzo1NTo1N1rOHaIEFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowMzo0MFrOHaIYAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1NzE0Mg==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXqAJo2FoAtkfmjZ&open=AVspKXqAJo2FoAtkfmjZ", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497157142", "createdAt": "2020-09-29T23:55:57Z", "author": {"login": "emmberk"}, "path": "catalog/core/catalog-core-camelcomponent/src/main/java/ddf/camel/component/catalog/CatalogEndpoint.java", "diffHunk": "@@ -204,4 +209,26 @@ public boolean isSingleton() {\n   public boolean isMultipleConsumersSupported() {\n     return true;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1NzcyNw==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AWmvBXVx5QE9aC-CxDrF&open=AWmvBXVx5QE9aC-CxDrF", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497157727", "createdAt": "2020-09-29T23:56:48Z", "author": {"login": "emmberk"}, "path": "catalog/core/catalog-core-directorymonitor/src/main/java/org/codice/ddf/catalog/content/monitor/AsyncFileEntry.java", "diffHunk": "@@ -116,8 +117,10 @@ public boolean checkNetwork() {\n       return snapExist();\n     }\n \n-    while (rootParent.getParent().isPresent()) {\n-      rootParent = rootParent.getParent().get();\n+    Optional<AsyncFileEntry> nextParent = rootParent.getParent();\n+    while (nextParent.isPresent()) {\n+      rootParent = nextParent.get();\n+      nextParent = rootParent.getParent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1OTI0OA==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgG&open=AVspKXhRJo2FoAtkfmgG\n\nhttps://sonarcloud.io/project/issues?id=ddf&issues=AVspKXhRJo2FoAtkfmgF&open=AVspKXhRJo2FoAtkfmgF", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497159248", "createdAt": "2020-09-29T23:59:10Z", "author": {"login": "emmberk"}, "path": "catalog/core/catalog-core-validator/src/main/java/ddf/catalog/validation/impl/validator/RangeValidator.java", "diffHunk": "@@ -74,9 +74,9 @@ public RangeValidator(final BigDecimal min, final BigDecimal max, final BigDecim\n     Preconditions.checkArgument(max != null, \"The maximum cannot be null.\");\n     Preconditions.checkArgument(epsilon != null, \"The epsilon cannot be null.\");\n     Preconditions.checkArgument(\n-        min.compareTo(max) == -1, \"The maximum must be greater than the minimum.\");\n+        min.compareTo(max) < 0, \"The maximum must be greater than the minimum.\");\n     Preconditions.checkArgument(\n-        epsilon.compareTo(BigDecimal.ZERO) == 1, \"The epsilon must be greater than 0.\");\n+        epsilon.compareTo(BigDecimal.ZERO) > 0, \"The epsilon must be greater than 0.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE1OTc2Mg==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKYj4Jo2FoAtkfm6O&open=AVspKYj4Jo2FoAtkfm6O", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497159762", "createdAt": "2020-09-29T23:59:54Z", "author": {"login": "emmberk"}, "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -390,4 +391,40 @@ public boolean isQueryable(String propertyName) {\n   public List<String> getTemporalProperties() {\n     return temporalProperties;\n   }\n+\n+  public Set<String> getNonQueryableProperties() {\n+    return Collections.unmodifiableSet(nonQueryableProperties);\n+  }\n+\n+  public String getGmlNamespace() {\n+    return gmlNamespace;\n+  }\n+\n+  public XmlSchema getSchema() {\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MDExNA==", "bodyText": "", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497160114", "createdAt": "2020-09-30T00:00:25Z", "author": {"login": "emmberk"}, "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -305,7 +306,7 @@ private void mapSchemaElement(final XmlSchemaElement element, final QName elemen\n     properties.add(elementName);\n   }\n \n-  private Boolean processGmlType(XmlSchemaElement xmlSchemaElement) {\n+  private boolean processGmlType(XmlSchemaElement xmlSchemaElement) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MTY3NQ==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AV2DU_Zhb85Ws0eWsPPC&open=AV2DU_Zhb85Ws0eWsPPC&types=SECURITY_HOTSPOT", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497161675", "createdAt": "2020-09-30T00:02:49Z", "author": {"login": "emmberk"}, "path": "platform/admin/core/admin-core-insecuredefaults/src/main/java/org/codice/ddf/admin/insecure/defaults/service/InsecureDefaultsCollector.java", "diffHunk": "@@ -27,6 +27,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@SuppressWarnings(\"java:S2068\" /* Intentially hard-coding insecure credentials */)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MjI0MA==", "bodyText": "https://sonarcloud.io/project/issues?id=ddf&issues=AVspKXKRJo2FoAtkfmab&open=AVspKXKRJo2FoAtkfmab&types=SECURITY_HOTSPOT", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497162240", "createdAt": "2020-09-30T00:03:40Z", "author": {"login": "emmberk"}, "path": "platform/admin/core/admin-core-insecuredefaults/src/main/java/org/codice/ddf/admin/insecure/defaults/service/KeystoreValidator.java", "diffHunk": "@@ -35,6 +35,7 @@\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n+@SuppressWarnings(\"java:S2068\" /* Log message about a password */)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDA1MTk0", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499005194", "createdAt": "2020-09-30T00:06:05Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowNjowNVrOHaIeng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDowNjoyMFrOHaIfYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MzkzNA==", "bodyText": "\u2753 Are these the right fields to include?", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497163934", "createdAt": "2020-09-30T00:06:05Z", "author": {"login": "emmberk"}, "path": "catalog/core/catalog-core-camelcomponent/src/main/java/ddf/camel/component/catalog/CatalogEndpoint.java", "diffHunk": "@@ -204,4 +209,26 @@ public boolean isSingleton() {\n   public boolean isMultipleConsumersSupported() {\n     return true;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof CatalogEndpoint)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    CatalogEndpoint that = (CatalogEndpoint) o;\n+    return transformerId.equals(that.getTransformerId())\n+        && contextPath.equals(that.getContextPath())\n+        && mimeType.equals(that.getMimeType());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA==", "bodyText": "\u2753 Are these the right fields to include?", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497164128", "createdAt": "2020-09-30T00:06:20Z", "author": {"login": "emmberk"}, "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -390,4 +391,40 @@ public boolean isQueryable(String propertyName) {\n   public List<String> getTemporalProperties() {\n     return temporalProperties;\n   }\n+\n+  public Set<String> getNonQueryableProperties() {\n+    return Collections.unmodifiableSet(nonQueryableProperties);\n+  }\n+\n+  public String getGmlNamespace() {\n+    return gmlNamespace;\n+  }\n+\n+  public XmlSchema getSchema() {\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof FeatureMetacardType)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    FeatureMetacardType that = (FeatureMetacardType) o;\n+    return featureType.equals(that.getFeatureType())\n+        && nonQueryableProperties.equals(that.getNonQueryableProperties())\n+        && gmlNamespace.equals(that.getGmlNamespace())\n+        && schema.equals(that.getSchema());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NjcxNzIx", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499671721", "createdAt": "2020-09-30T17:45:46Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo0NTo0NlrOHaougg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzo1Mjo0NVrOHao-Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5MjI5MA==", "bodyText": "That's what I would have done \ud83d\udc4d", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497692290", "createdAt": "2020-09-30T17:45:46Z", "author": {"login": "bakejeyner"}, "path": "catalog/core/catalog-core-camelcomponent/src/main/java/ddf/camel/component/catalog/CatalogEndpoint.java", "diffHunk": "@@ -204,4 +209,26 @@ public boolean isSingleton() {\n   public boolean isMultipleConsumersSupported() {\n     return true;\n   }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof CatalogEndpoint)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    CatalogEndpoint that = (CatalogEndpoint) o;\n+    return transformerId.equals(that.getTransformerId())\n+        && contextPath.equals(that.getContextPath())\n+        && mimeType.equals(that.getMimeType());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2MzkzNA=="}, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY5NjI3OQ==", "bodyText": "Personally I would have included all of the fields:\nproperties\ntextualProperties\ngmlProperties\ntemporalProperties\nfeatureType\nnonQueryableProperties\ngmlNamespace\nschema", "url": "https://github.com/codice/ddf/pull/6356#discussion_r497696279", "createdAt": "2020-09-30T17:52:45Z", "author": {"login": "bakejeyner"}, "path": "catalog/spatial/wfs/spatial-wfs-common/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/common/FeatureMetacardType.java", "diffHunk": "@@ -390,4 +391,40 @@ public boolean isQueryable(String propertyName) {\n   public List<String> getTemporalProperties() {\n     return temporalProperties;\n   }\n+\n+  public Set<String> getNonQueryableProperties() {\n+    return Collections.unmodifiableSet(nonQueryableProperties);\n+  }\n+\n+  public String getGmlNamespace() {\n+    return gmlNamespace;\n+  }\n+\n+  public XmlSchema getSchema() {\n+    return schema;\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (!(o instanceof FeatureMetacardType)) {\n+      return false;\n+    }\n+    if (!super.equals(o)) {\n+      return false;\n+    }\n+    FeatureMetacardType that = (FeatureMetacardType) o;\n+    return featureType.equals(that.getFeatureType())\n+        && nonQueryableProperties.equals(that.getNonQueryableProperties())\n+        && gmlNamespace.equals(that.getGmlNamespace())\n+        && schema.equals(that.getSchema());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE2NDEyOA=="}, "originalCommit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5Nzc3NDA5", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499777409", "createdAt": "2020-09-30T20:15:38Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODMwMTQ4", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499830148", "createdAt": "2020-09-30T21:36:44Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODUxMDA5", "url": "https://github.com/codice/ddf/pull/6356#pullrequestreview-499851009", "createdAt": "2020-09-30T22:17:35Z", "commit": {"oid": "941d91b2034d23d269fba4add75821f60fd21ce8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23a95e3ed9bf0de1d6a167f13f6753f4db87e7ec", "author": {"user": {"login": "emmberk", "name": "Emily Berk"}}, "url": "https://github.com/codice/ddf/commit/23a95e3ed9bf0de1d6a167f13f6753f4db87e7ec", "committedDate": "2020-10-20T21:46:08Z", "message": "Address some miscellaneous SonarQube findings"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 773, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}