{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MjczNzcw", "number": 6483, "title": "[2.19.x] G-9036 pan to geos defined on search form", "bodyText": "What does this PR do?\nPreviously, when a user defined any geometries on their search form (i.e., anyGeo, location attribute searches), the search form editor was not panning to these geometries. This PR fixes this behavior by panning to the extent defined by the collection of coordinates of all of the geometries defined on the search form. In other words, it will now pan/zoom to show the geometries.\nWho is reviewing it?\n\nSelect relevant component teams:\n\n@codice/ui\nAsk 2 committers to review/merge the PR and tag them here.\n\nHow should this be tested?\n\n\nbuild, profile:install\ncreate a search form with an anyGeo attribute, draw the geo somewhere away from your Home view\nfill in other necessary fields and save the search form\nopen the search form back up and verify that the map shows the geometry you created in step 2\nedit the search form by adding a location attribute and drawing a geo\nre-open the search form and verify that the map shows the geometries you created in step 2 and step 5\npan to a location on the map with no geometries on it and set it as your new Home\nleave the form and come back, verify that it still pans to the geos\n\nAny background context you want to provide?\nWhat are the relevant tickets?\nFixes: #____\nScreenshots\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-12-28T23:52:33Z", "url": "https://github.com/codice/ddf/pull/6483", "merged": true, "mergeCommit": {"oid": "f13712d27af26b6e718be0007333935b7d692fa0"}, "closed": true, "closedAt": "2021-01-25T22:07:04Z", "author": {"login": "cassandrabailey293"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqu0XUgH2gAyNTQ2MjczNzcwOmFlYWFhNGZkOGRhNDA4NzhkNjg4ZGU5ZGZlMTljYjhlNzBjMDgzNTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdydJX4AH2gAyNTQ2MjczNzcwOjY4Y2I4ZmJkOGFlMmM3MGJmOTliNjViMTE2ZGM0NGE2NjU5M2Q1NGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/aeaaa4fd8da40878d688de9dfe19cb8e70c08358", "committedDate": "2020-12-28T23:34:53Z", "message": "G-9036 pan to geos defined on search form"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3MjA3MTU2", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-567207156", "createdAt": "2021-01-13T13:13:35Z", "commit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTc1MjY5", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-567575269", "createdAt": "2021-01-13T20:03:08Z", "commit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowMzowOFrOITAGEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowMzowOFrOITAGEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NTQwOQ==", "bodyText": "\u2753 I'm curios why we're doing this when we're using the underscore flatten function here: https://github.com/codice/ddf/pull/6483/files#diff-61f3b5db651cfd7e289c041c39274cfa06a5b7e476b54fc20ef9ad5c574a21feR142 ?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556795409", "createdAt": "2021-01-13T20:03:08Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {\n+            const geoFilters = (\n+              this.model.get('filterTemplate').filters || [\n+                this.model.get('filterTemplate'),\n+              ]\n+            ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+            const coords = this.wktToCoords(geoFilters)\n+            Common.queueExecution(() => {\n+              this.map.currentView.map.zoomToExtent(coords)\n+            })\n+          }\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = _.flatten(\n+      wktList.map(wkt => {\n+        if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+          const center = terraformer.parse(wkt.value).coordinates\n+          return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')\n+            .geometry.coordinates[0]\n+        }\n+        return terraformer.parse(wkt.value).coordinates\n+      }),\n+      true\n+    )\n+    return this.createCoordinatePairs(this.flatten(parsedGeoCoords))\n+  },\n+  flatten(arr) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTc2NDI4", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-567576428", "createdAt": "2021-01-13T20:04:46Z", "commit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNDo0NlrOITAJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNDo0NlrOITAJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NjI1OA==", "bodyText": "\u2753 Any specific reason to use function instead of a fat arrow => as in the previous .reduce instance above?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556796258", "createdAt": "2021-01-13T20:04:46Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {\n+            const geoFilters = (\n+              this.model.get('filterTemplate').filters || [\n+                this.model.get('filterTemplate'),\n+              ]\n+            ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+            const coords = this.wktToCoords(geoFilters)\n+            Common.queueExecution(() => {\n+              this.map.currentView.map.zoomToExtent(coords)\n+            })\n+          }\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = _.flatten(\n+      wktList.map(wkt => {\n+        if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+          const center = terraformer.parse(wkt.value).coordinates\n+          return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')\n+            .geometry.coordinates[0]\n+        }\n+        return terraformer.parse(wkt.value).coordinates\n+      }),\n+      true\n+    )\n+    return this.createCoordinatePairs(this.flatten(parsedGeoCoords))\n+  },\n+  flatten(arr) {\n+    return arr.reduce((flat, toFlatten) => {\n+      return flat.concat(\n+        Array.isArray(toFlatten) ? this.flatten(toFlatten) : toFlatten\n+      )\n+    }, [])\n+  },\n+  createCoordinatePairs(arr) {\n+    return arr.reduce(function(result, value, index, array) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY3NTc4MTgw", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-567578180", "createdAt": "2021-01-13T20:07:20Z", "commit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNzoyMFrOITAOrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QyMDowNzoyMFrOITAOrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Njc5NzYxNQ==", "bodyText": "\u270f\ufe0f I would recommend pulling the model attribute into a variable since it's being referenced multiple times here:\nconst filterTemplate = this.model.get('filterTemplate')\n\nalso reversing the predicate would collapse the nesting nicely:\nif (!filterTemplate)\n  return\n<normal code flow without '{}'>", "url": "https://github.com/codice/ddf/pull/6483#discussion_r556797615", "createdAt": "2021-01-13T20:07:20Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -118,10 +123,50 @@ module.exports = Marionette.LayoutView.extend({\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n           this.showQueryForm(collection, id)\n+          if (this.model.get('filterTemplate')) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aeaaa4fd8da40878d688de9dfe19cb8e70c08358"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33e0809c5a3e374829311fc03b4be94d95f3312f", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/33e0809c5a3e374829311fc03b4be94d95f3312f", "committedDate": "2021-01-14T21:11:54Z", "message": "G-9036 remove underscore flatten and formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d14e8af4c5595c075a03a943ea10988bced93e60", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/d14e8af4c5595c075a03a943ea10988bced93e60", "committedDate": "2021-01-15T14:40:16Z", "message": "G-9036 refactor for cleanliness"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNTE1Njg4", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-571515688", "createdAt": "2021-01-19T18:09:13Z", "commit": {"oid": "d14e8af4c5595c075a03a943ea10988bced93e60"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/91538c4b7a5d8100f017d15d11da2db85a350111", "committedDate": "2021-01-19T18:45:01Z", "message": "G-9036 formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcyNDUzNTc3", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-572453577", "createdAt": "2021-01-20T17:19:12Z", "commit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNjE2NTc2", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-573616576", "createdAt": "2021-01-21T18:26:15Z", "commit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxODoyNjoxNVrOIYEFpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxODoyNjoxNVrOIYEFpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjEwMzcxNg==", "bodyText": "\u2753 What is the significance of 64 here? Can we make it a constant with a descriptive name?", "url": "https://github.com/codice/ddf/pull/6483#discussion_r562103716", "createdAt": "2021-01-21T18:26:15Z", "author": {"login": "leo-sakh"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/search-form-editor/search-form-editor.view.js", "diffHunk": "@@ -117,11 +121,48 @@ module.exports = Marionette.LayoutView.extend({\n         showResultFilter: false,\n         selectionInterface: new SelectionInterface(),\n         onMapLoaded: olMap => {\n+          const filterTemplate = this.model.get('filterTemplate')\n           this.showQueryForm(collection, id)\n+          if (!filterTemplate) {\n+            return\n+          }\n+          const geoFilters = (\n+            filterTemplate.filters || [filterTemplate]\n+          ).filter(filter => CQLUtils.isGeoFilter(filter.type))\n+          const coords = this.wktToCoords(geoFilters)\n+          Common.queueExecution(() => {\n+            this.map.currentView.map.zoomToExtent(coords)\n+          })\n         },\n       })\n     )\n   },\n+  wktToCoords(wktList) {\n+    const parsedGeoCoords = wktList.map(wkt => {\n+      if (wkt.value.startsWith('POINT') && parseFloat(wkt.distance) !== 0) {\n+        const center = terraformer.parse(wkt.value).coordinates\n+        return new TurfCircle(center, parseFloat(wkt.distance), 64, 'meters')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNjE2NjQz", "url": "https://github.com/codice/ddf/pull/6483#pullrequestreview-573616643", "createdAt": "2021-01-21T18:26:21Z", "commit": {"oid": "91538c4b7a5d8100f017d15d11da2db85a350111"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ee2db52dbf384ed2e7a95427fa7200dc285e694", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/6ee2db52dbf384ed2e7a95427fa7200dc285e694", "committedDate": "2021-01-21T18:33:52Z", "message": "G-9036 make precision steps a constant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68cb8fbd8ae2c70bf99b65b116dc44a66593d54a", "author": {"user": null}, "url": "https://github.com/codice/ddf/commit/68cb8fbd8ae2c70bf99b65b116dc44a66593d54a", "committedDate": "2021-01-21T23:30:56Z", "message": "G-9036 formatting"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 710, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}