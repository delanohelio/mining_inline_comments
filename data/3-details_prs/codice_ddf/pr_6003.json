{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0OTY2Mzcy", "number": 6003, "title": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration", "bodyText": "What does this PR do?\nSimplifies the Web Context Policy Manager's authentication type configuration by:\n\nRemoving the authentication type configuration per context\nAdding a single auth type config for all web pages\nAdding another auth type config for all endpoints\nKeeping the option to configure multiple auth types per context as a file-based configuration\n\nWho is reviewing it?\n@bakejeyner\n@garrettfreibott\n@ricklarsen\n@SmithJosh\n@stustison\nSelect relevant component teams:\n@codice/security\nHow should this be tested?\n\nTest that changes to the web and endpoint authentication types works as expected\nTest the current (soon to be old) was of configuring auth types is still supported and works\nTo see how to do these and test the documentation see the docs on how to accomplish \u261d\ufe0f\n\nWhat are the relevant tickets?\nFixes: #5996\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-04-17T07:22:28Z", "url": "https://github.com/codice/ddf/pull/6003", "merged": true, "mergeCommit": {"oid": "f15893abeadda8cb8c3ca25638958a0e19c756cb"}, "closed": true, "closedAt": "2020-05-07T19:19:46Z", "author": {"login": "blen-desta"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYcFdPABqjMyNDMxNTE3MDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcerjGaAH2gAyNDA0OTY2MzcyOjFjZWIwMmI0YjA2MzJiN2NmNGM5YThlN2VkNTBlNmU2NGE4ODNkYjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "767667fb5e9b4956c15ecd12393a4e60ce66604c", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/767667fb5e9b4956c15ecd12393a4e60ce66604c", "committedDate": "2020-04-17T07:13:40Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}, "afterCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/9882afb010aae25f2878309fa063a02fa8bf9fca", "committedDate": "2020-04-17T07:23:19Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NTkzODM5", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-396593839", "createdAt": "2020-04-20T16:01:06Z", "commit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoxMDoxMlrOGIcSEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxNjoyNTozMVrOGIc-iQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUwNTE2OQ==", "bodyText": "\u2753 What's the expected use case requiring different auth configurations for endpoints and web pages? I'm unclear why we need this distinction.", "url": "https://github.com/codice/ddf/pull/6003#discussion_r411505169", "createdAt": "2020-04-20T16:10:12Z", "author": {"login": "SmithJosh"}, "path": "distribution/docs/src/main/resources/content/_developing/_devComponents/managed-service-factories.adoc", "diffHunk": "@@ -142,14 +142,8 @@ See the documentation for https://docs.oracle.com/javase/7/docs/api/java/lang/Lo\n .Sample configuration file\n [source,linenums]\n ----\n-authenticationTypes=[ \\\n-  \"/\\=\", \\\n-  \"/admin\\=basic\", \\\n-  \"/system\\=basic\", \\\n-  \"/sources\\=basic\", \\\n-  \"/security-config\\=basic\", \\\n-  \"/search\\=basic\", \\\n-  ]\n+webAuthenticationTypes=\"basic\"\n+endpointAuthenticationTypes=\"\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxMzM0MQ==", "bodyText": "\u2753 What about endpoints that aren't under /services? I.e. Intrigue internal endpoints, the Jolokia endpoints, etc.", "url": "https://github.com/codice/ddf/pull/6003#discussion_r411513341", "createdAt": "2020-04-20T16:21:12Z", "author": {"login": "SmithJosh"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/web-context-policy-manager.adoc", "diffHunk": "@@ -27,14 +27,33 @@ Note that the `SAML` and `OIDC` authentication types require session storage to\n \n === Authentication Types\n \n-As you add REST endpoints, you may need to add different types of authentication through the Web Context Policy Manager.\n+Through the Web Context Policy Manager, authentication types for ${branding} may be configured with the following format:\n \n-Any web context that allows or requires specific authentication types should be added here with the following format:\n+----\n+<AUTH_TYPE>|<AUTH_TYPE|...\n+----\n+\n+Authentication types can be configured separately for:\n+* web pages (these are all context paths that do not start with `/services` such as `/admin` and `/search`)\n+* endpoints (these are all context paths that start with `/services`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTUxNjU1Mw==", "bodyText": "\u2753 Did you change this, or were the docs just wrong?", "url": "https://github.com/codice/ddf/pull/6003#discussion_r411516553", "createdAt": "2020-04-20T16:25:31Z", "author": {"login": "SmithJosh"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/web-context-policy-manager.adoc", "diffHunk": "@@ -64,21 +83,20 @@ Non-Terminating authentication types are authentication types where, once hit, m\n If the client supports the non-terminating authentication type's method of obtaining credentials, it either allows or forbids access to the system.\n However if the client does not support the non-terminating authentication type's method of obtaining credentials, the system will continue to the next configured authentication type.\n \n-`BASIC` is the only terminating authentication type.\n-Every other authentication type is non-terminating.\n+`PKI` is the only non-terminating authentication type.\n+`BASIC`, `OIDC`, and `SAML` are terminating authentication types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2Njk3MDU5", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-396697059", "createdAt": "2020-04-20T18:15:12Z", "commit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxNToxM1rOGIhbaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODoxOToyM1rOGIhlGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU4OTQ4Mw==", "bodyText": "I wonder if this sentence would be clearer if we revised it to If your infrastructure supports multiple authentication methods, you may specify them here.\nI read they may be specified as they may already be there, but I think we are trying to say you have the option to specify, if desired.", "url": "https://github.com/codice/ddf/pull/6003#discussion_r411589483", "createdAt": "2020-04-20T18:15:13Z", "author": {"login": "ricklarsen"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/securing-admin-console.adoc", "diffHunk": "@@ -19,8 +19,7 @@ To set access restrictions on the ${admin-console}, consult the organization's s\n . Select the *Configuration* tab.\n . Select the *Web Context Policy Manager*.\n .. A dialogue will pop up that allows you to edit ${branding} access restrictions.\n-.. Once you have configured your <<{reference-prefix}org.codice.ddf.security.policy.context.impl.PolicyManager,realms>> in your security infrastructure, you can associate them with ${branding} contexts.\n-.. If your infrastructure supports multiple <<{reference-prefix}org.codice.ddf.security.policy.context.impl.PolicyManager,authentication methods>>, they may be specified on a per-context basis.\n+.. If your infrastructure supports multiple <<{reference-prefix}org.codice.ddf.security.policy.context.impl.PolicyManager,authentication methods>>, they may be specified.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTU5MTk2MA==", "bodyText": "\u270f\ufe0f Minor nit-pick to be sure, but \"contrarily\" ? Could we maybe say \"Otherwise\" instead?", "url": "https://github.com/codice/ddf/pull/6003#discussion_r411591960", "createdAt": "2020-04-20T18:19:23Z", "author": {"login": "ricklarsen"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/web-context-policy-manager.adoc", "diffHunk": "@@ -64,21 +83,20 @@ Non-Terminating authentication types are authentication types where, once hit, m\n If the client supports the non-terminating authentication type's method of obtaining credentials, it either allows or forbids access to the system.\n However if the client does not support the non-terminating authentication type's method of obtaining credentials, the system will continue to the next configured authentication type.\n \n-`BASIC` is the only terminating authentication type.\n-Every other authentication type is non-terminating.\n+`PKI` is the only non-terminating authentication type.\n+`BASIC`, `OIDC`, and `SAML` are terminating authentication types.\n \n-For example: assume a context is protected by the non-terminating `SAML` authorization type.\n+For example: assume ${branding} is protected by the terminating `SAML` authorization type.\n The system first checks to see if the client supports the acquisition of SAML credentials.\n \n - If the connecting client is a browser, the system can acquire SAML credentials.\n - If the connecting client is a machine that supports SAML ECP, the system can acquire SAML credentials.\n - If the connecting client is a machine that does not support SAML ECP, the system cannot acquire SAML credentials.\n \n If the system can acquire SAML credentials from the client, the system will attempt to acquire said credentials and either allow or forbid access.\n-If the system cannot acquire SAML credentials from the client, the system will continue to the next configured authentication type.\n+If the system cannot acquire SAML credentials from the client, the system will forbid access.\n \n-Contrarily, assume a context is protected by the terminating `BASIC` authentication type.\n-Once this authentication type is hit, the system either allows or forbids access to the system, without checking if the client supports the acquisition of BASIC credentials.\n+Contrarily, if ${branding} is protected by the non-terminating `PKI` authorization type and the system cannot acquire PKI certificates from the client, the system will continue to the next configured authentication type.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca"}, "originalPosition": 73}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9882afb010aae25f2878309fa063a02fa8bf9fca", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/9882afb010aae25f2878309fa063a02fa8bf9fca", "committedDate": "2020-04-17T07:23:19Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}, "afterCommit": {"oid": "9d6c4286d43cd160440dfc995a505c4d26c40437", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/9d6c4286d43cd160440dfc995a505c4d26c40437", "committedDate": "2020-04-22T19:24:45Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzA1Mzkz", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-399305393", "createdAt": "2020-04-23T17:08:37Z", "commit": {"oid": "9d6c4286d43cd160440dfc995a505c4d26c40437"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyODE4NzU5", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-402818759", "createdAt": "2020-04-29T16:07:07Z", "commit": {"oid": "9d6c4286d43cd160440dfc995a505c4d26c40437"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6", "committedDate": "2020-05-04T23:09:35Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9d6c4286d43cd160440dfc995a505c4d26c40437", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/9d6c4286d43cd160440dfc995a505c4d26c40437", "committedDate": "2020-04-22T19:24:45Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}, "afterCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6", "committedDate": "2020-05-04T23:09:35Z", "message": "DDF-5996 Simplifies the Web Context Policy Manager's authentication type configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDU5NDU4", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-406059458", "createdAt": "2020-05-05T18:43:22Z", "commit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODo0MzoyMlrOGQ2yoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTowNzo0NVrOGQ3phA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyODA5Ng==", "bodyText": "\u270f\ufe0f\nFor example, if you wanted to secure the entire system with the IDP, but still allow PKI authentication for legacy clients that don't understand the SAML ECP specification to connect, you could set Authentication Types for Web Pages and Authentication Types for Endpoints to SAML|PKI.", "url": "https://github.com/codice/ddf/pull/6003#discussion_r420328096", "createdAt": "2020-05-05T18:43:22Z", "author": {"login": "bakejeyner"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/securing-idp-sp.adoc", "diffHunk": "@@ -77,10 +77,8 @@ Set the authentication types in the `WebContextPolicyManager` to SAML.\n . Select the *${ddf-security}* application.\n . Select the *Configuration* tab.\n . Select *Web Context Policy Manager*\n-. Under *Authentication Types*, set the SAML authentication type_ as necessary.\n-For example:\n-- `/search=SAML`\n+. Under *Authentication Types for Web Pages* and *Authentication Types for Endpoints*, set the SAML authentication type_ as necessary.\n \n Other authentication types can also be used in conjunction with the SAML type.\n-For example, if you wanted to secure the entire system with the IDP, but still allow legacy clients that don't understand the SAML ECP specification to connect, you could set `/=SAML|PKI`.\n+For example, if you wanted to secure the entire system with the IDP, but still allow legacy clients that don't understand the SAML ECP specification to connect, you could set *Authentication Types for Web Pages* and *Authentication Types for Endpoints* to `SAML|PKI`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzMzQ3NA==", "bodyText": "\u270f\ufe0f Configuring separate authentication types for web pages or endpoints for specific contexts is supported through ...", "url": "https://github.com/codice/ddf/pull/6003#discussion_r420333474", "createdAt": "2020-05-05T18:52:26Z", "author": {"login": "bakejeyner"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/web-context-policy-manager.adoc", "diffHunk": "@@ -27,14 +27,33 @@ Note that the `SAML` and `OIDC` authentication types require session storage to\n \n === Authentication Types\n \n-As you add REST endpoints, you may need to add different types of authentication through the Web Context Policy Manager.\n+Through the Web Context Policy Manager, authentication types for ${branding} may be configured with the following format:\n \n-Any web context that allows or requires specific authentication types should be added here with the following format:\n+----\n+<AUTH_TYPE>|<AUTH_TYPE|...\n+----\n+\n+Authentication types can be configured separately for:\n+* web pages (these are all context paths that do not start with `/services` such as `/admin` and `/search`)\n+* endpoints (these are all context paths that start with `/services`)\n+\n+Configuring separate authentication types for web pages or endpoints is supported through the `web-context-policy-config.properties` configuration file.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNjU3Nw==", "bodyText": "\u2753 When the file based configuration is present, shouldn't we overwrite the admin consoles authentication type rather than ignore the admin consoles authentication type?\nFor instance: Lets say I specify BASIC in the admin console, and in the file configuration I specify  SAML for /services/csw/subscription. Now when I try to access /admin, should I get prompted for basic credentials (overwrite admin console configuration) or should there be no authentication (ignore admin console configuration)?", "url": "https://github.com/codice/ddf/pull/6003#discussion_r420336577", "createdAt": "2020-05-05T18:58:01Z", "author": {"login": "bakejeyner"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/web-context-policy-manager.adoc", "diffHunk": "@@ -27,14 +27,33 @@ Note that the `SAML` and `OIDC` authentication types require session storage to\n \n === Authentication Types\n \n-As you add REST endpoints, you may need to add different types of authentication through the Web Context Policy Manager.\n+Through the Web Context Policy Manager, authentication types for ${branding} may be configured with the following format:\n \n-Any web context that allows or requires specific authentication types should be added here with the following format:\n+----\n+<AUTH_TYPE>|<AUTH_TYPE|...\n+----\n+\n+Authentication types can be configured separately for:\n+* web pages (these are all context paths that do not start with `/services` such as `/admin` and `/search`)\n+* endpoints (these are all context paths that start with `/services`)\n+\n+Configuring separate authentication types for web pages or endpoints is supported through the `web-context-policy-config.properties` configuration file.\n+* Navigate to `${home_directory}/etc/`\n+* Edit the `web-context-policy-config.properties` file\n+* Restart ${branding}\n+\n+The `web-context-policy-config.properties` file format is:\n \n ----\n-/<CONTEXT>=<AUTH_TYPE>|<AUTH_TYPE|...\n+/<CONTEXT>=<AUTH_TYPE> then <AUTH_TYPE then ...\n ----\n \n+[WARNING]\n+====\n+If the file-based configuration is used, the *authentication type* configuration for web pages and endpoints in the ${admin-console} is ignored.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMzNzg3NQ==", "bodyText": "\u2753 Also, if SAML is a terminating auth type, shouldn't it appear after PKI?\nI.E. PKI|SAML", "url": "https://github.com/codice/ddf/pull/6003#discussion_r420337875", "createdAt": "2020-05-05T19:00:20Z", "author": {"login": "bakejeyner"}, "path": "distribution/docs/src/main/resources/content/_managing/_configuring/securing-idp-sp.adoc", "diffHunk": "@@ -77,10 +77,8 @@ Set the authentication types in the `WebContextPolicyManager` to SAML.\n . Select the *${ddf-security}* application.\n . Select the *Configuration* tab.\n . Select *Web Context Policy Manager*\n-. Under *Authentication Types*, set the SAML authentication type_ as necessary.\n-For example:\n-- `/search=SAML`\n+. Under *Authentication Types for Web Pages* and *Authentication Types for Endpoints*, set the SAML authentication type_ as necessary.\n \n Other authentication types can also be used in conjunction with the SAML type.\n-For example, if you wanted to secure the entire system with the IDP, but still allow legacy clients that don't understand the SAML ECP specification to connect, you could set `/=SAML|PKI`.\n+For example, if you wanted to secure the entire system with the IDP, but still allow legacy clients that don't understand the SAML ECP specification to connect, you could set *Authentication Types for Web Pages* and *Authentication Types for Endpoints* to `SAML|PKI`.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyODA5Ng=="}, "originalCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM0MjE0OA==", "bodyText": "\u270f\ufe0f Maybe leave a comment on what \\\\s+then\\\\s+ is doing. Cause I ain't regex literate\n\u2753 Looks like we now have two authentication type formats:\nPKI|SAML\n\nand\nPKI then SAML\n\nShould we decide on one form and use that throughout the system?", "url": "https://github.com/codice/ddf/pull/6003#discussion_r420342148", "createdAt": "2020-05-05T19:07:45Z", "author": {"login": "bakejeyner"}, "path": "platform/security/policy/security-policy-context/src/main/java/org/codice/ddf/security/policy/context/impl/PolicyManager.java", "diffHunk": "@@ -457,6 +468,40 @@ public boolean getSessionAccess() {\n     return sessionAccess;\n   }\n \n+  public void setPolicyFilePath(String policyFilePath) {\n+    Map<String, String> properties =\n+        PropertiesLoader.getInstance()\n+            .toMap(PropertiesLoader.getInstance().loadProperties(policyFilePath));\n+\n+    if (properties.isEmpty()) {\n+      LOGGER.debug(\"File-based authentication type configuration not found.\");\n+      return;\n+    }\n+\n+    LOGGER.info(\"Proceeding with file-based authentication type configuration ...\");\n+\n+    Map<String, List<String>> contextToAuthTypes = new HashMap<>();\n+\n+    for (Map.Entry<String, String> authTypes : properties.entrySet()) {\n+      List<String> finalAuthTypes = new ArrayList<>();\n+      String[] auths = authTypes.getValue().trim().split(\"\\\\s+then\\\\s+\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "originalPosition": 213}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MTI1NTcz", "url": "https://github.com/codice/ddf/pull/6003#pullrequestreview-406125573", "createdAt": "2020-05-05T20:20:33Z", "commit": {"oid": "f375ca6baa8cfb7e952ba3ac0f1ef11d09d14ec6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1ceb02b4b0632b7cf4c9a8e7ed50e6e64a883db5", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/1ceb02b4b0632b7cf4c9a8e7ed50e6e64a883db5", "committedDate": "2020-05-06T16:48:04Z", "message": "Addressed doc change PR comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4929, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}