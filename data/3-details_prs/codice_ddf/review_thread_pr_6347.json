{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzMTcwODAw", "number": 6347, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowMzowM1rOEnhBUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToyNTowNlrOEoJBSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODcwOTMxOnYy", "diffSide": "LEFT", "path": "distribution/test/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowMzowM1rOHYJsgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowMzowM1rOHYJsgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4NjcyMQ==", "bodyText": "This only works for the check goal. Not useful for aggregate", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495086721", "createdAt": "2020-09-25T16:03:03Z", "author": {"login": "SmithJosh"}, "path": "distribution/test/pom.xml", "diffHunk": "@@ -60,22 +60,4 @@\n             </dependency>\n         </dependencies>\n     </dependencyManagement>\n-    <build>\n-        <plugins>\n-            <!-- Disable vulnerability checks since this project only contains tests -->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e1cc523e58b051d889a7e26f05f395c59b3d4db"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODcyNjE5OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjowODowMVrOHYJ3OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjozMToyN1rOHYKqDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4OTQ2NA==", "bodyText": "\u270f\ufe0f Is this property needed anymore now that there is an itest profile?", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495089464", "createdAt": "2020-09-25T16:08:01Z", "author": {"login": "emmberk"}, "path": "Jenkinsfile", "diffHunk": "@@ -26,7 +26,7 @@ pipeline {\n     }\n     environment {\n         DOCS = 'distribution/docs'\n-        ITESTS = 'distribution/test/itests/test-itests-ddf'\n+        ITESTS = 'distribution/test/itests'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwMjQ3OA==", "bodyText": "Yeah, we use it for the itests build. The \"itests\" profile determines whether the itests are included in the build, but if you just ran mvn install -Pitests, it would include all the other modules in the project as well.\nTo run only the itests, you have to use the -pl flag and specify exactly which modules you want to build - mvn install -Pitests -pl distribution/test/itests/test-itests-ddf", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495102478", "createdAt": "2020-09-25T16:31:27Z", "author": {"login": "SmithJosh"}, "path": "Jenkinsfile", "diffHunk": "@@ -26,7 +26,7 @@ pipeline {\n     }\n     environment {\n         DOCS = 'distribution/docs'\n-        ITESTS = 'distribution/test/itests/test-itests-ddf'\n+        ITESTS = 'distribution/test/itests'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA4OTQ2NA=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODc0NjgzOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoxMzo0NlrOHYKD3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjozNDo0OFrOHYKwzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MjcwMg==", "bodyText": "\u270f\ufe0f Why is -amd needed here?", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495092702", "createdAt": "2020-09-25T16:13:46Z", "author": {"login": "emmberk"}, "path": "Jenkinsfile", "diffHunk": "@@ -96,7 +96,7 @@ pipeline {\n                 withMaven(maven: 'maven-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}') {\n                     sh '''\n                         unset JAVA_TOOL_OPTIONS\n-                        mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS\n+                        mvn install -B -pl $ITESTS,!$ITCORE -amd -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwNDIwNw==", "bodyText": "Here's the description of the -amd flag from the Maven docs:\n-amd, --also-make-dependents\n        If project list is specified, also build projects that depend on projects on the list\n\nIf you just run mvn install -pl distribution/test/itests, it will only build the itests project, not the children. The children are dependent projects, so adding -amd allows us to build the whole project tree under the itests module without specifying each module individually", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495104207", "createdAt": "2020-09-25T16:34:48Z", "author": {"login": "SmithJosh"}, "path": "Jenkinsfile", "diffHunk": "@@ -96,7 +96,7 @@ pipeline {\n                 withMaven(maven: 'maven-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}') {\n                     sh '''\n                         unset JAVA_TOOL_OPTIONS\n-                        mvn install -B -pl $ITESTS -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS\n+                        mvn install -B -pl $ITESTS,!$ITCORE -amd -nsu $DISABLE_DOWNLOAD_PROGRESS_OPTS", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5MjcwMg=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODc2MjM1OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoxODoxOFrOHYKNZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjozNTo0OFrOHYKzBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NTE0MQ==", "bodyText": "\u270f\ufe0f Why not just always scan the zips? Is it because it takes longer to run?", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495095141", "createdAt": "2020-09-25T16:18:18Z", "author": {"login": "emmberk"}, "path": "pom.xml", "diffHunk": "@@ -1048,8 +1040,11 @@\n                 </plugins>\n             </build>\n         </profile>\n+        <!-- Adds all zip build artifacts to the OWASP scan. This includes the kernel, the DDF\n+             distro, etc. Those may include artifacts which aren't actually dependencies of any\n+             DDF modules, so won't appear in a normal scan. -->\n         <profile>\n-            <id>owasp</id>\n+            <id>owasp-dist</id>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwNDc3Mg==", "bodyText": "I just did it this way because that's how it was before. I'm open to changing it if we want", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495104772", "createdAt": "2020-09-25T16:35:48Z", "author": {"login": "SmithJosh"}, "path": "pom.xml", "diffHunk": "@@ -1048,8 +1040,11 @@\n                 </plugins>\n             </build>\n         </profile>\n+        <!-- Adds all zip build artifacts to the OWASP scan. This includes the kernel, the DDF\n+             distro, etc. Those may include artifacts which aren't actually dependencies of any\n+             DDF modules, so won't appear in a normal scan. -->\n         <profile>\n-            <id>owasp</id>\n+            <id>owasp-dist</id>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NTE0MQ=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA5ODc2ODc4OnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNjoyMDoxNlrOHYKRjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToyNDoxNlrOHZDu9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NjIwNg==", "bodyText": "\u270f\ufe0f Shouldn't we always scan the distribution (i.e. zip files), even if this is a PR build? Is this if/else really necessary if it's not scanning changed modules?", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495096206", "createdAt": "2020-09-25T16:20:16Z", "author": {"login": "emmberk"}, "path": "Jenkinsfile", "diffHunk": "@@ -134,9 +134,9 @@ pipeline {\n                     script {\n                         // If this build is not a pull request, run owasp scan on the distribution. Otherwise run incremental scan\n                         if (env.CHANGE_ID == null) {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check dependency-check:aggregate -q -B -Powasp-dist -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests,owasp-dist $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         } else {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEwNTE2Nw==", "bodyText": "Same answer as above: we were previously doing it this way - ignoring the distribution for PR builds", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495105167", "createdAt": "2020-09-25T16:36:37Z", "author": {"login": "SmithJosh"}, "path": "Jenkinsfile", "diffHunk": "@@ -134,9 +134,9 @@ pipeline {\n                     script {\n                         // If this build is not a pull request, run owasp scan on the distribution. Otherwise run incremental scan\n                         if (env.CHANGE_ID == null) {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check dependency-check:aggregate -q -B -Powasp-dist -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests,owasp-dist $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         } else {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NjIwNg=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTExNTIwNA==", "bodyText": "My opinion is that we should always scan the zips. I think the only benefit to doing a different task during PR builds was to only scan changed files. Since the command in this if statement is no longer using gib, I think we should do the same, full scan (i.e. include zip files) on PR builds.", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495115204", "createdAt": "2020-09-25T16:55:59Z", "author": {"login": "emmberk"}, "path": "Jenkinsfile", "diffHunk": "@@ -134,9 +134,9 @@ pipeline {\n                     script {\n                         // If this build is not a pull request, run owasp scan on the distribution. Otherwise run incremental scan\n                         if (env.CHANGE_ID == null) {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check dependency-check:aggregate -q -B -Powasp-dist -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests,owasp-dist $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         } else {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NjIwNg=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTEzOTY1NA==", "bodyText": "I think the only benefit to doing a different task during PR builds was to only scan changed files\n\nWell, the owasp-dist profile wasn't being run on the PR builds before either, and I see no reason why it couldn't be. It seems like an intentional decision to not scan the distro for PRs. I guess the question is why...\nA couple points:\n\nThe unique distro CVEs are not usually DDF's fault directly, but rather because it pulls in a bunch of upstream features from Karaf and other projects. I could see that info mattering sometimes for people putting up PRs (if they're messing with feature files), but in general those CVEs will be unrelated to their changes.\nIf we did scan the distro for PR builds, it's going to take a lot longer to get to the place where we can start failing builds on OWASP scans. There are so many more CVEs in the distro and most aren't even stuff we use at runtime.\n\nWith that in mind, I think it might be better to start with ignoring the distro for PR builds until we cut down on the distro CVEs. It's in our interest to get to the place where we can fail builds again as quickly as possible.", "url": "https://github.com/codice/ddf/pull/6347#discussion_r495139654", "createdAt": "2020-09-25T17:43:46Z", "author": {"login": "SmithJosh"}, "path": "Jenkinsfile", "diffHunk": "@@ -134,9 +134,9 @@ pipeline {\n                     script {\n                         // If this build is not a pull request, run owasp scan on the distribution. Otherwise run incremental scan\n                         if (env.CHANGE_ID == null) {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check dependency-check:aggregate -q -B -Powasp-dist -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests,owasp-dist $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         } else {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NjIwNg=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzNzYyMA==", "bodyText": "Yes, this seems like the original decision we had on PR builds. It is not the ideal state but probably the best balance of performance, maintenance on dependencies, and process at the moment.", "url": "https://github.com/codice/ddf/pull/6347#discussion_r496037620", "createdAt": "2020-09-28T15:24:16Z", "author": {"login": "shaundmorris"}, "path": "Jenkinsfile", "diffHunk": "@@ -134,9 +134,9 @@ pipeline {\n                     script {\n                         // If this build is not a pull request, run owasp scan on the distribution. Otherwise run incremental scan\n                         if (env.CHANGE_ID == null) {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check dependency-check:aggregate -q -B -Powasp-dist -DskipTests=true -DskipStatic=true -pl !$DOCS $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests,owasp-dist $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         } else {\n-                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:check -q -B -Powasp -DskipTests=true -DskipStatic=true -pl !$DOCS -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                            sh 'mvn org.commonjava.maven.plugins:directory-maven-plugin:highest-basedir@directories dependency-check:aggregate -q -B -pl !$DOCS -P !itests $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n                         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTA5NjIwNg=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTIzODczOnYy", "diffSide": "RIGHT", "path": "Jenkinsfile", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToyMTozNlrOHZDiwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToyMTozNlrOHZDiwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzNDQ5Nw==", "bodyText": "Nice idea using a profile.", "url": "https://github.com/codice/ddf/pull/6347#discussion_r496034497", "createdAt": "2020-09-28T15:21:36Z", "author": {"login": "shaundmorris"}, "path": "Jenkinsfile", "diffHunk": "@@ -68,22 +68,22 @@ pipeline {\n             steps {\n                 withMaven(maven: 'maven-latest', globalMavenSettingsConfig: 'default-global-settings', mavenSettingsConfig: 'codice-maven-settings', mavenOpts: '${LARGE_MVN_OPTS} ${LINUX_MVN_RANDOM}') {\n                     sh 'mvn install -B -DskipStatic=true -DskipTests=true $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n-                    sh 'mvn clean install -B -pl !$ITESTS,!$ITCORE -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'\n+                    sh 'mvn clean install -B -P !itests -Dgib.enabled=true -Dgib.referenceBranch=/refs/remotes/origin/$CHANGE_TARGET $DISABLE_DOWNLOAD_PROGRESS_OPTS'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTI2MjgzOnYy", "diffSide": "RIGHT", "path": "distribution/docs/pom.xml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNToyNTowNlrOHZDx4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NToxOVrOHZHWcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzODM3MA==", "bodyText": "\u2754 I assume making the docs provided scope means they won't be evaluated by dependency-check?", "url": "https://github.com/codice/ddf/pull/6347#discussion_r496038370", "createdAt": "2020-09-28T15:25:06Z", "author": {"login": "shaundmorris"}, "path": "distribution/docs/pom.xml", "diffHunk": "@@ -33,16 +33,19 @@\n             <groupId>org.asciidoctor</groupId>\n             <artifactId>asciidoctorj</artifactId>\n             <version>${asciidoctorj.version}</version>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA3NDk5Mw==", "bodyText": "The compile scope is transitive and since the distribution has a dependency on the docs, it had a transitive dependency on asciidoctor and jruby as well. This is to prevent that. The provided scope isn't transitive, so they no longer leak into projects that depend on the docs.\ndependency-check would still scan them (it scans compile, provided, and runtime dependencies), but we skip the docs module.", "url": "https://github.com/codice/ddf/pull/6347#discussion_r496074993", "createdAt": "2020-09-28T16:19:20Z", "author": {"login": "SmithJosh"}, "path": "distribution/docs/pom.xml", "diffHunk": "@@ -33,16 +33,19 @@\n             <groupId>org.asciidoctor</groupId>\n             <artifactId>asciidoctorj</artifactId>\n             <version>${asciidoctorj.version}</version>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzODM3MA=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5Njg4MA==", "bodyText": "gotcha. Thanks!", "url": "https://github.com/codice/ddf/pull/6347#discussion_r496096880", "createdAt": "2020-09-28T16:55:19Z", "author": {"login": "shaundmorris"}, "path": "distribution/docs/pom.xml", "diffHunk": "@@ -33,16 +33,19 @@\n             <groupId>org.asciidoctor</groupId>\n             <artifactId>asciidoctorj</artifactId>\n             <version>${asciidoctorj.version}</version>\n+            <scope>provided</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjAzODM3MA=="}, "originalCommit": {"oid": "9fb3c23dfe59fa25fa25f28a0df07589aab2cccf"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4472, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}