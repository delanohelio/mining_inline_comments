{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjcyOTY4", "number": 5758, "title": "DDF-5757 Fix the DefinitionParser-generated required attributes metacard validators", "bodyText": "What does this PR do?\n\nFixes the DefinitionParser so that the required attributes metacard validators it generates have the correct metacard type names.\nRe-adds the metacard validators section to the JSON definition file section of the documentation.\n\nWho is reviewing it?\n@bennuttle\n@leo-sakh\n@nsuvarna\n@aj-brooks\n@lavoywj\nSelect relevant component teams:\n@codice/core-apis\nAsk 2 committers to review/merge the PR and tag them here.\n@bdeining\n@rzwiefel\nHow should this be tested?\n\nCreate a definition JSON file containing a requiredattributes validator in the metacardvalidators section.\nDrop the file into etc/definitions.\nIngest an invalid metacard of the type the validator is configured for (i.e. the metacard should be missing at least one of the attributes required by the validator).\nVerify the metacard is marked as invalid and that the validation errors say it is missing required attributes.\n\nWhat are the relevant tickets?\nFixes: #5757\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-01-11T00:35:04Z", "url": "https://github.com/codice/ddf/pull/5758", "merged": true, "mergeCommit": {"oid": "ad66e9de710253cdd06b48c5a263d53f5988e7e7"}, "closed": true, "closedAt": "2020-02-24T16:00:05Z", "author": {"login": "jrnorth"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5IARagH2gAyMzYxNjcyOTY4OmQyMGVjOGI5OTI3YWVmNmRhZmFlODFiOWUwODJhNjEwY2FkYjhkZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-ekCggFqTM0ODc1NTIyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8", "author": {"user": {"login": "jrnorth", "name": "Joseph North"}}, "url": "https://github.com/codice/ddf/commit/d20ec8b9927aef6dafae81b9e082a610cadb8de8", "committedDate": "2020-01-11T00:28:09Z", "message": "DDF-5757 Fix the DefinitionParser-generated required attributes metacard validators"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTE0MjU5", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-341914259", "createdAt": "2020-01-13T15:13:32Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTQ3NzM5", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-341947739", "createdAt": "2020-01-13T15:57:53Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTcxNjIx", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-341971621", "createdAt": "2020-01-13T16:29:53Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxOTk5NjU5", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-341999659", "createdAt": "2020-01-13T17:09:19Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTIyMDc5", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-342122079", "createdAt": "2020-01-13T20:36:48Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjY1OTM0", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-344665934", "createdAt": "2020-01-17T15:45:21Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTo0NToyMVrOFe9EAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxNTo0NToyMVrOFe9EAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODAwMjA1MQ==", "bodyText": "\u270f\ufe0f Good opportunity to refactor this whole thing:\n  List<Callable<Boolean>> registerMetacardValidator(\n      final BundleContext context,\n      final Changeset changeset,\n      final Entry<String, List<MetacardValidatorDefinition>> row) {\n    return getMetacardValidators(row.getKey(), row.getValue().get(0))\n        .stream()\n        .map(\n            metacardValidator -> {\n              try {\n                return (Callable<Boolean>)\n                    () -> {\n                      ServiceRegistration<MetacardValidator> registration =\n                          context.registerService(MetacardValidator.class, metacardValidator, null);\n                      changeset.metacardValidatorServices.add(registration);\n                      return registration != null;\n                    };\n              } catch (IllegalStateException ise) {\n                LOGGER.error(\n                    \"Could not register metacard validator for definition: {} {}\",\n                    row.getKey(),\n                    row.getValue(),\n                    ise);\n              }\n\n              return (Callable<Boolean>) () -> Boolean.FALSE;\n            })\n        .collect(Collectors.toList());\n  }\n\n  private List<Callable<Boolean>> registerMetacardValidators(\n      Changeset changeset,\n      List<Map<String, List<MetacardValidatorDefinition>>> metacardValidatorDefinitions) {\n    Function<Entry<String, List<MetacardValidatorDefinition>>, List<Callable<Boolean>>>\n        validatorRegistration =\n            row -> registerMetacardValidator(getBundleContext(), changeset, row);\n\n    return metacardValidatorDefinitions\n        .stream()\n        .map(Map::entrySet)\n        .flatMap(Set::stream)\n        .map(validatorRegistration)\n        .flatMap(List::stream)\n        .collect(Collectors.toList());\n  }", "url": "https://github.com/codice/ddf/pull/5758#discussion_r368002051", "createdAt": "2020-01-17T15:45:21Z", "author": {"login": "leo-sakh"}, "path": "catalog/core/catalog-core-definitionparser/src/main/java/ddf/catalog/definition/impl/DefinitionParser.java", "diffHunk": "@@ -436,7 +436,8 @@ private void processAttribute(\n     for (Map<String, List<MetacardValidatorDefinition>> mvdMap : metacardValidatorDefinitions) {\n       for (Entry<String, List<MetacardValidatorDefinition>> row : mvdMap.entrySet()) {\n         try {\n-          List<MetacardValidator> metacardValidators = getMetacardValidators(row.getValue().get(0));\n+          List<MetacardValidator> metacardValidators =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NjY2MDcy", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-344666072", "createdAt": "2020-01-17T15:45:33Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4NzU1MjI4", "url": "https://github.com/codice/ddf/pull/5758#pullrequestreview-348755228", "createdAt": "2020-01-27T15:34:46Z", "commit": {"oid": "d20ec8b9927aef6dafae81b9e082a610cadb8de8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4958, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}