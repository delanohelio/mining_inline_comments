{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc4ODMyNzM2", "number": 6289, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToxNjozMlrOEgH7IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToxNjozMlrOEgH7IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyMTE5NzEzOnYy", "diffSide": "RIGHT", "path": "catalog/transformer/catalog-transformer-pptx/src/main/java/ddf/catalog/transformer/input/pptx/PptxInputTransformer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wM1QxOToxNjozMlrOHM0O4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQyMTo0ODoxNVrOHOvKsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMDczOQ==", "bodyText": "\u270f\ufe0f Add an itest for ingesting a powerpoint and verifying that the thumbnail metacard attribute is populated to prevent this regression in the future.", "url": "https://github.com/codice/ddf/pull/6289#discussion_r483200739", "createdAt": "2020-09-03T19:16:32Z", "author": {"login": "emmberk"}, "path": "catalog/transformer/catalog-transformer-pptx/src/main/java/ddf/catalog/transformer/input/pptx/PptxInputTransformer.java", "diffHunk": "@@ -150,7 +150,8 @@ private Metacard extractInitialMetadata(InputStream input)\n   private void extractThumbnail(Metacard metacard, InputStream input) throws IOException {\n \n     ClassLoader originalContextClassLoader = Thread.currentThread().getContextClassLoader();\n-    Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+    // This class is arbitrary. It just needs to be part of the bundle exporting POI classes\n+    Thread.currentThread().setContextClassLoader(SlideShowFactory.class.getClassLoader());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba8f525a11f6e9cb7588b08da3bd9d08e9d458bc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTE5OTAwOA==", "bodyText": "Double check that the iTest you add fails without this change.", "url": "https://github.com/codice/ddf/pull/6289#discussion_r485199008", "createdAt": "2020-09-08T21:12:42Z", "author": {"login": "Lambeaux"}, "path": "catalog/transformer/catalog-transformer-pptx/src/main/java/ddf/catalog/transformer/input/pptx/PptxInputTransformer.java", "diffHunk": "@@ -150,7 +150,8 @@ private Metacard extractInitialMetadata(InputStream input)\n   private void extractThumbnail(Metacard metacard, InputStream input) throws IOException {\n \n     ClassLoader originalContextClassLoader = Thread.currentThread().getContextClassLoader();\n-    Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+    // This class is arbitrary. It just needs to be part of the bundle exporting POI classes\n+    Thread.currentThread().setContextClassLoader(SlideShowFactory.class.getClassLoader());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMDczOQ=="}, "originalCommit": {"oid": "ba8f525a11f6e9cb7588b08da3bd9d08e9d458bc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTIxNDg5OQ==", "bodyText": "Credit to @emmberk for writing the itest. Thank you!", "url": "https://github.com/codice/ddf/pull/6289#discussion_r485214899", "createdAt": "2020-09-08T21:48:15Z", "author": {"login": "SmithJosh"}, "path": "catalog/transformer/catalog-transformer-pptx/src/main/java/ddf/catalog/transformer/input/pptx/PptxInputTransformer.java", "diffHunk": "@@ -150,7 +150,8 @@ private Metacard extractInitialMetadata(InputStream input)\n   private void extractThumbnail(Metacard metacard, InputStream input) throws IOException {\n \n     ClassLoader originalContextClassLoader = Thread.currentThread().getContextClassLoader();\n-    Thread.currentThread().setContextClassLoader(getClass().getClassLoader());\n+    // This class is arbitrary. It just needs to be part of the bundle exporting POI classes\n+    Thread.currentThread().setContextClassLoader(SlideShowFactory.class.getClassLoader());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzIwMDczOQ=="}, "originalCommit": {"oid": "ba8f525a11f6e9cb7588b08da3bd9d08e9d458bc"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}