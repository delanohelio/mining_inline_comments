{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTA5NDUz", "number": 5837, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTowNzozMFrODgBH-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTowNzozMFrODgBH-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0ODk5NDQ5OnYy", "diffSide": "RIGHT", "path": "ui/packages/catalog-ui-search/src/main/webapp/component/result-form/result-form.view.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMTowNzozMFrOFqDq6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjowODo1NVrOFqFDQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0NDY0OQ==", "bodyText": "Just curious, what value is shown if allowedValues[0] is false?", "url": "https://github.com/codice/ddf/pull/5837#discussion_r379644649", "createdAt": "2020-02-14T21:07:30Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/result-form/result-form.view.js", "diffHunk": "@@ -53,24 +53,28 @@ module.exports = Marionette.LayoutView.extend({\n   },\n   setupAttributeSpecific() {\n     let excludedList = metacardDefinitions.getMetacardStartingTypes()\n+    const allowedValues = _.filter(\n+      metacardDefinitions.sortedMetacardTypes,\n+      type => !metacardDefinitions.isHiddenTypeExceptThumbnail(type.id)\n+    )\n+      .filter(type => !properties.isHidden(type.id))\n+      .filter(type => !excludedList.hasOwnProperty(type.id))\n+      .map(metacardType => ({\n+        label: metacardType.alias || metacardType.id,\n+        value: metacardType.id,\n+      }))\n     this.basicAttributeSpecific.show(\n       new PropertyView({\n         model: new Property({\n           enumFiltering: true,\n           showValidationIssues: true,\n           enumMulti: true,\n-          enum: _.filter(\n-            metacardDefinitions.sortedMetacardTypes,\n-            type => !metacardDefinitions.isHiddenTypeExceptThumbnail(type.id)\n-          )\n-            .filter(type => !properties.isHidden(type.id))\n-            .filter(type => !excludedList.hasOwnProperty(type.id))\n-            .map(metacardType => ({\n-              label: metacardType.alias || metacardType.id,\n-              value: metacardType.id,\n-            })),\n+          enum: allowedValues,\n           values: this.model.get('descriptors'),\n-          value: [this.model.get('descriptors')],\n+          value:\n+            [this.model.get('descriptors')].size > 0\n+              ? [this.model.get('descriptors')]\n+              : [[allowedValues[0] && allowedValues[0].label]],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47b2bda6ef7ecaf1b38dcec48d2988f473e3daa4"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY2NzI2NQ==", "bodyText": "Nothing - which makes sense, since there would be nothing in the dropdown. Also, you can't submit the form in that case.", "url": "https://github.com/codice/ddf/pull/5837#discussion_r379667265", "createdAt": "2020-02-14T22:08:55Z", "author": {"login": "aj-brooks"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/result-form/result-form.view.js", "diffHunk": "@@ -53,24 +53,28 @@ module.exports = Marionette.LayoutView.extend({\n   },\n   setupAttributeSpecific() {\n     let excludedList = metacardDefinitions.getMetacardStartingTypes()\n+    const allowedValues = _.filter(\n+      metacardDefinitions.sortedMetacardTypes,\n+      type => !metacardDefinitions.isHiddenTypeExceptThumbnail(type.id)\n+    )\n+      .filter(type => !properties.isHidden(type.id))\n+      .filter(type => !excludedList.hasOwnProperty(type.id))\n+      .map(metacardType => ({\n+        label: metacardType.alias || metacardType.id,\n+        value: metacardType.id,\n+      }))\n     this.basicAttributeSpecific.show(\n       new PropertyView({\n         model: new Property({\n           enumFiltering: true,\n           showValidationIssues: true,\n           enumMulti: true,\n-          enum: _.filter(\n-            metacardDefinitions.sortedMetacardTypes,\n-            type => !metacardDefinitions.isHiddenTypeExceptThumbnail(type.id)\n-          )\n-            .filter(type => !properties.isHidden(type.id))\n-            .filter(type => !excludedList.hasOwnProperty(type.id))\n-            .map(metacardType => ({\n-              label: metacardType.alias || metacardType.id,\n-              value: metacardType.id,\n-            })),\n+          enum: allowedValues,\n           values: this.model.get('descriptors'),\n-          value: [this.model.get('descriptors')],\n+          value:\n+            [this.model.get('descriptors')].size > 0\n+              ? [this.model.get('descriptors')]\n+              : [[allowedValues[0] && allowedValues[0].label]],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY0NDY0OQ=="}, "originalCommit": {"oid": "47b2bda6ef7ecaf1b38dcec48d2988f473e3daa4"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4808, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}