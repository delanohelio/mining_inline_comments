{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzODQwNDUw", "number": 5942, "title": "[2.21.x] DDF-5360 Adds the ability to go through OAuth to download a resource", "bodyText": "What does this PR do?\nAdded support for the OAuth Resource Owner Password Credentials Grant\n\n#5607\nAdds the ability to go through OAuth to download a resource\n#5769\ncodice/ddf-ui#83\nChanged user ID based OAuth token storage to session ID to better handle the guest user\n#5682\ncodice/ddf-ui#74\n\nWho is reviewing it?\n@SmithJosh @bakejeyner\nSelect relevant component teams:\n@codice/security\nAsk 2 committers to review/merge the PR and tag them here.\n@emmberk\n@garrettfreibott\n@stustison\nHow should this be tested?\nCreate two sources (S1 and S2) to use OAuth\n\n Both sources should be available\n Test querying S1\n\nShould get a notification to log in\nSign in and re-query\nQuery should succeed with no errors\n\n\n Test querying S2\n\nShould get a notification to authorize the source\nAuthorize and re-query\nQuery should succeed with no errors\n\n\n Test session-based storage works\n\nAfter logging in and querying successfully, sign out of DDF and Keycloak\nSign back in as the same user and try querying\nYou should be prompted to log in to Keycloak again\n\n\n Test querying as guest\n\n\"Sign in\" to intrigue as guest\nQuery a source and sign in to Keycloak\n\"Sign in\" to intrigue as guest in another browser or in incognito mode\nThe second guest should be prompted to sign in before querying a source\n\n\n Test downloading one of the results you get back\n Test downloading an old result\n\nAfter querying a source, remove your oauth tokens by deleting all files under <DDF_HOME>/data/content/store/token\nTry downloading one of the results you had\nYou should get redirected to sign in\n\n\n Verify downloading a resource from an OAuth protected source works. Download using\n\nthe download button\nthe inspector tab\nthe action tab\n\n\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-03-25T21:36:54Z", "url": "https://github.com/codice/ddf/pull/5942", "merged": true, "mergeCommit": {"oid": "b38728a49cf4136c6ab2278d0cc2f578244f67a5"}, "closed": true, "closedAt": "2020-04-02T15:34:18Z", "author": {"login": "blen-desta"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRjDjOgBqjMxNzAxNjY1NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTfKUJABqjMxODk4NTUyMzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c495cff8da3b0be2e26a7a084d2bbf44042d6833", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/c495cff8da3b0be2e26a7a084d2bbf44042d6833", "committedDate": "2020-03-25T21:33:57Z", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource"}, "afterCommit": {"oid": "d52fe4aaa89979af8a8e61c42ae0797d71630bd5", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/d52fe4aaa89979af8a8e61c42ae0797d71630bd5", "committedDate": "2020-03-26T21:31:20Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d52fe4aaa89979af8a8e61c42ae0797d71630bd5", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/d52fe4aaa89979af8a8e61c42ae0797d71630bd5", "committedDate": "2020-03-26T21:31:20Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}, "afterCommit": {"oid": "de2abd3fd3a3cc6835976c98e785726e5b8ec3ae", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/de2abd3fd3a3cc6835976c98e785726e5b8ec3ae", "committedDate": "2020-03-27T18:10:20Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de2abd3fd3a3cc6835976c98e785726e5b8ec3ae", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/de2abd3fd3a3cc6835976c98e785726e5b8ec3ae", "committedDate": "2020-03-27T18:10:20Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}, "afterCommit": {"oid": "d6e18a004891f8e7eeb4031098e4b2d1a71cd1dc", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/d6e18a004891f8e7eeb4031098e4b2d1a71cd1dc", "committedDate": "2020-03-28T00:10:52Z", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6e18a004891f8e7eeb4031098e4b2d1a71cd1dc", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/d6e18a004891f8e7eeb4031098e4b2d1a71cd1dc", "committedDate": "2020-03-28T00:10:52Z", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource"}, "afterCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679", "committedDate": "2020-03-30T19:49:37Z", "message": "Adding session ID to subject"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjcwNjE3", "url": "https://github.com/codice/ddf/pull/5942#pullrequestreview-384270617", "createdAt": "2020-03-30T22:14:46Z", "commit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjoxNDo0NlrOF9-Ntw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMjo1MTo0N1rOF9_I_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUyNjc3NQ==", "bodyText": "\u270f\ufe0f I feel like I've mentioned this before, sorry if I did, but would \"The user Subject is not available.\"  make more sense here?", "url": "https://github.com/codice/ddf/pull/5942#discussion_r400526775", "createdAt": "2020-03-30T22:14:46Z", "author": {"login": "bakejeyner"}, "path": "catalog/plugin/catalog-plugin-oauth/src/main/java/org/codice/ddf/catalog/plugin/oauth/OAuthPlugin.java", "diffHunk": "@@ -140,17 +141,22 @@ public QueryRequest process(Source source, QueryRequest input) throws StopProces\n \n     Object securityAssertion = input.getProperties().get(SECURITY_SUBJECT);\n     if (!(securityAssertion instanceof Subject)) {\n-      LOGGER.warn(\"A user Subject is not available.\");\n-      throw new StopProcessingException(\"A user Subject is not available.\");\n+      LOGGER.warn(\"The user's subject is not available.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU0MTk1MA==", "bodyText": "\u270f\ufe0f getSystemWebClient() may read better", "url": "https://github.com/codice/ddf/pull/5942#discussion_r400541950", "createdAt": "2020-03-30T22:51:47Z", "author": {"login": "bakejeyner"}, "path": "platform/security/rest/security-rest-clientapi/src/main/java/org/codice/ddf/cxf/client/SecureCxfClientFactory.java", "diffHunk": "@@ -42,6 +42,13 @@\n    */\n   WebClient getWebClient();\n \n+  /**\n+   * Returns the WebClient\n+   *\n+   * @return\n+   */\n+  WebClient getWebSystemClient();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679", "committedDate": "2020-03-30T19:49:37Z", "message": "Adding session ID to subject"}, "afterCommit": {"oid": "de3139923ac9786fb9bb15bcd301fd405f7fe78d", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/de3139923ac9786fb9bb15bcd301fd405f7fe78d", "committedDate": "2020-03-30T23:55:40Z", "message": "Adding session ID to subject"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de3139923ac9786fb9bb15bcd301fd405f7fe78d", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/de3139923ac9786fb9bb15bcd301fd405f7fe78d", "committedDate": "2020-03-30T23:55:40Z", "message": "Adding session ID to subject"}, "afterCommit": {"oid": "7b50bdbc20a6cc4f7a5fbcdfb82f3e0e2992c4f1", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/7b50bdbc20a6cc4f7a5fbcdfb82f3e0e2992c4f1", "committedDate": "2020-03-31T01:08:03Z", "message": "Adding session ID to subject"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MzA5MTY0", "url": "https://github.com/codice/ddf/pull/5942#pullrequestreview-384309164", "createdAt": "2020-03-30T23:45:30Z", "commit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMzo0NTozMFrOF-AQQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwMDoyMDo1OVrOF-A6Yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MDE5NA==", "bodyText": "\u270f\ufe0f This seems redundant, given we're already passing the baseUrl and parameters", "url": "https://github.com/codice/ddf/pull/5942#discussion_r400560194", "createdAt": "2020-03-30T23:45:30Z", "author": {"login": "SmithJosh"}, "path": "catalog/plugin/catalog-plugin-oauth/src/main/java/org/codice/ddf/catalog/plugin/oauth/OAuthPlugin.java", "diffHunk": "@@ -300,26 +314,22 @@ private void findExistingTokens(\n         return;\n       }\n \n-      refreshTokens(tokenEntry.getRefreshToken(), oauthSource, userId, metadata);\n+      refreshTokens(tokenEntry.getRefreshToken(), oauthSource, sessionId, metadata);\n     }\n \n     LOGGER.debug(\n         \"Unable to process query. The user needs to authorize to query the {} source.\",\n         oauthSource.getId());\n \n-    try {\n-      URIBuilder uriBuilder = new URIBuilder(AUTHORIZE_SOURCE_ENDPOINT);\n-      uriBuilder.addParameter(USER_ID, userId);\n-      uriBuilder.addParameter(SOURCE_ID, oauthSource.getId());\n-      uriBuilder.addParameter(DISCOVERY_URL, oauthSource.getOauthDiscoveryUrl());\n-\n-      String url = uriBuilder.build().toURL().toString();\n-      throw new OAuthPluginException(oauthSource.getId(), url, AUTH_SOURCE);\n-\n-    } catch (URISyntaxException | MalformedURLException e) {\n-      LOGGER.warn(\"Unable to construct authorization URL.\");\n-      throw new StopProcessingException(\"Unable to construct authorization URL. \" + e.getMessage());\n-    }\n+    Map<String, String> parameters = new HashMap<>();\n+    parameters.put(SOURCE_ID, oauthSource.getId());\n+    parameters.put(DISCOVERY_URL, oauthSource.getOauthDiscoveryUrl());\n+    throw new OAuthPluginException(\n+        oauthSource.getId(),\n+        buildUrl(AUTHORIZE_SOURCE_ENDPOINT, parameters),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU2MzMyMg==", "bodyText": "\u270f\ufe0f Same comment as before - this is redundant. Imo makes more sense to move the constructUrl inside OAuthException", "url": "https://github.com/codice/ddf/pull/5942#discussion_r400563322", "createdAt": "2020-03-30T23:55:50Z", "author": {"login": "SmithJosh"}, "path": "catalog/rest/catalog-rest-service/src/main/java/org/codice/ddf/rest/service/AbstractCatalogService.java", "diffHunk": "@@ -366,6 +374,15 @@ public BinaryContent getDocument(\n         String errorMessage = \"Unable to process request. Data usage limit exceeded: \";\n         LOGGER.debug(errorMessage, e);\n         throw new DataUsageLimitExceededException(errorMessage);\n+      } catch (OAuthPluginException e) {\n+        Map<String, String> parameters = e.getParameters();\n+        String url = constructUrl(httpRequest, e.getBaseUrl(), parameters);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebe5ff8b95af2b83fbcaa2f17ea29e1032f5c679"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDU3MDk3OA==", "bodyText": "\u270f\ufe0f It's gone now, but your previous code change with overriding the getters gave me an idea. You could do something like:\n  public SessionToken(PrincipalCollection principals, String id, String ip) {\n    super(principals, id, ip);\n  }\n\n  public PrincipalCollection getPrincipalCollection() {\n    return (PrincipalCollection) this.principal;\n  }\n\n  public String getId() {\n    return (String) this.credentials;\n  }\n\nSo that it's clearer what SessionToken actually requires.", "url": "https://github.com/codice/ddf/pull/5942#discussion_r400570978", "createdAt": "2020-03-31T00:20:59Z", "author": {"login": "SmithJosh"}, "path": "platform/security/handler/security-handler-api/src/main/java/org/codice/ddf/security/handler/api/SessionToken.java", "diffHunk": "@@ -15,10 +15,6 @@\n \n public class SessionToken extends BaseAuthenticationToken {\n \n-  public SessionToken(Object credentials) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de3139923ac9786fb9bb15bcd301fd405f7fe78d"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b50bdbc20a6cc4f7a5fbcdfb82f3e0e2992c4f1", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/7b50bdbc20a6cc4f7a5fbcdfb82f3e0e2992c4f1", "committedDate": "2020-03-31T01:08:03Z", "message": "Adding session ID to subject"}, "afterCommit": {"oid": "71000aa13971fdad02abacf8aa2a22beac94fdb8", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/71000aa13971fdad02abacf8aa2a22beac94fdb8", "committedDate": "2020-03-31T15:54:29Z", "message": "Adding session ID to subject"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTg2NjY4", "url": "https://github.com/codice/ddf/pull/5942#pullrequestreview-385186668", "createdAt": "2020-04-01T00:08:55Z", "commit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "076b00487a8afde633b919badf976af08ec161c8", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/076b00487a8afde633b919badf976af08ec161c8", "committedDate": "2020-04-01T18:06:47Z", "message": "DDF-5360 Added support for the OAuth Resource Owner Password Credentials Grant"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34902ce978352258dde0685b73e10aae3feca223", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/34902ce978352258dde0685b73e10aae3feca223", "committedDate": "2020-04-01T18:25:26Z", "message": "DDF-5360 Adds the ability to go through OAuth to download a resource"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1ODk0MzQ1", "url": "https://github.com/codice/ddf/pull/5942#pullrequestreview-385894345", "createdAt": "2020-04-01T19:42:31Z", "commit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOTo0MjozMlrOF_P29w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxOTo0ODozNlrOF_QEgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2NDQzOQ==", "bodyText": "\u2753 Aren't these args backwards?", "url": "https://github.com/codice/ddf/pull/5942#discussion_r401864439", "createdAt": "2020-04-01T19:42:32Z", "author": {"login": "stustison"}, "path": "platform/security/idp/security-idp-client/src/main/java/org/codice/ddf/security/idp/client/LogoutRequestService.java", "diffHunk": "@@ -271,7 +271,7 @@ private String extractSubject(Map<String, Object> sessionAttributes) {\n         .map(SecurityTokenHolder::getPrincipals)\n         .filter(Objects::nonNull)\n         .map(PrincipalCollection.class::cast)\n-        .map(SessionToken::new)\n+        .map(principalCollection -> new SessionToken(principalCollection, null, \"127.0.0.1\"))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2NTQzOA==", "bodyText": "We probably need to make a builder for this thing.", "url": "https://github.com/codice/ddf/pull/5942#discussion_r401865438", "createdAt": "2020-04-01T19:44:10Z", "author": {"login": "stustison"}, "path": "platform/security/rest/security-rest-cxfwrapper/src/main/java/org/codice/ddf/cxf/client/impl/SecureCxfClientFactoryImpl.java", "diffHunk": "@@ -399,6 +403,69 @@ public SecureCxfClientFactoryImpl(\n     this.oauthSecurity = oauthSecurity;\n   }\n \n+  /**\n+   * Constructs a factory that will return security-aware cxf clients. Once constructed, use the\n+   * getClient* methods to retrieve a fresh client with the same configuration. Providing {@link\n+   * WebClient} to interfaceClass will create a generic web client.\n+   *\n+   * <p>This factory can and should be cached. The clients it constructs should not be.\n+   *\n+   * @param endpointUrl the remote url to connect to\n+   * @param interfaceClass an interface representing the resource at the remote url\n+   * @param providers optional list of providers to further configure the client\n+   * @param interceptor optional message interceptor for the client\n+   * @param disableCnCheck disable ssl check for common name / host name match\n+   * @param allowRedirects allow this client to follow redirects\n+   * @param connectionTimeout timeout for the connection\n+   * @param receiveTimeout timeout for receiving responses\n+   * @param sourceId the id of the source\n+   * @param discoveryUrl the oauth provider's discovery url\n+   * @param clientId the client id registered with the oauth provider\n+   * @param clientSecret the client secret registered with the oauth provider\n+   * @param username the oauth flow to use\n+   * @param password the oauth flow to use\n+   * @param additionalOauthParameters the oauth flow to use\n+   * @param oauthSecurity class used to set oauth tokens on clients\n+   */\n+  @SuppressWarnings(\"squid:S00107\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTg2NzkwNw==", "bodyText": "\u2753 Isn't this backwards from what is in WebSSOFilter?", "url": "https://github.com/codice/ddf/pull/5942#discussion_r401867907", "createdAt": "2020-04-01T19:48:36Z", "author": {"login": "stustison"}, "path": "platform/security/servlet/security-servlet-logout/src/main/java/org/codice/ddf/security/servlet/logout/LogoutServiceImpl.java", "diffHunk": "@@ -57,7 +57,7 @@ public String getActionProviders(HttpServletRequest request, HttpServletResponse\n     Object token =\n         ((SecurityTokenHolder) session.getAttribute(SecurityConstants.SECURITY_TOKEN_KEY))\n             .getPrincipals();\n-    SessionToken sessionToken = new SessionToken(token);\n+    SessionToken sessionToken = new SessionToken(token, session.getId(), \"127.0.0.1\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c217528c77e4a823fa65e6cd5f3d6bcc1509da4", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/7c217528c77e4a823fa65e6cd5f3d6bcc1509da4", "committedDate": "2020-03-31T18:22:41Z", "message": "Jenkins changes"}, "afterCommit": {"oid": "24d7b184de1e6e566133190eb59c720fc3cdeeb8", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/24d7b184de1e6e566133190eb59c720fc3cdeeb8", "committedDate": "2020-04-01T19:51:31Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bb0eb9d33d1a584cf90af204952d0b0355c956bb", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/bb0eb9d33d1a584cf90af204952d0b0355c956bb", "committedDate": "2020-04-01T22:08:46Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24d7b184de1e6e566133190eb59c720fc3cdeeb8", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/24d7b184de1e6e566133190eb59c720fc3cdeeb8", "committedDate": "2020-04-01T19:51:31Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}, "afterCommit": {"oid": "bb0eb9d33d1a584cf90af204952d0b0355c956bb", "author": {"user": {"login": "blen-desta", "name": "Blen Desta"}}, "url": "https://github.com/codice/ddf/commit/bb0eb9d33d1a584cf90af204952d0b0355c956bb", "committedDate": "2020-04-01T22:08:46Z", "message": "DDF-5360 Changed user ID based OAuth token storage to session ID to better handle the guest user."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4865, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}