{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzODMxMzA2", "number": 5876, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1OTo1NlrODlLwPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1OTo1NlrODlLwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMzE2NDc4OnYy", "diffSide": "RIGHT", "path": "catalog/core/catalog-core-versioning/versioning-common/src/test/groovy/ddf/catalog/core/versioning/impl/DeletedMetacardImplSpec.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1OTo1NlrOFx7rLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxOTo1OTo1NlrOFx7rLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzkwMjI1Mw==", "bodyText": "Nice. I like this test even though this case is rare \u2705 Good stuff.", "url": "https://github.com/codice/ddf/pull/5876#discussion_r387902253", "createdAt": "2020-03-04T19:59:56Z", "author": {"login": "vinamartin"}, "path": "catalog/core/catalog-core-versioning/versioning-common/src/test/groovy/ddf/catalog/core/versioning/impl/DeletedMetacardImplSpec.groovy", "diffHunk": "@@ -0,0 +1,88 @@\n+/**\n+ * Copyright (c) Codice Foundation\n+ * <p>\n+ * This is free software: you can redistribute it and/or modify it under the terms of the GNU Lesser\n+ * General Public License as published by the Free Software Foundation, either version 3 of the\n+ * License, or any later version.\n+ * <p>\n+ * This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without\n+ * even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n+ * Lesser General Public License for more details. A copy of the GNU Lesser General Public License\n+ * is distributed along with this program and can be found at\n+ * <http://www.gnu.org/licenses/lgpl.html>.\n+ */\n+package ddf.catalog.core.versioning.impl\n+\n+import ddf.catalog.core.versioning.DeletedMetacard\n+import ddf.catalog.data.Metacard\n+import ddf.catalog.data.impl.AttributeImpl\n+import ddf.catalog.data.impl.MetacardImpl\n+import org.apache.shiro.subject.Subject\n+import org.apache.shiro.util.ThreadContext\n+import spock.lang.Specification\n+\n+\n+class DeletedMetacardImplSpec extends Specification {\n+\n+    void setup() {\n+        ThreadContext.bind(Mock(Subject))\n+\n+    }\n+\n+    void cleanup() {\n+        ThreadContext.unbindSubject()\n+    }\n+\n+    def \"Tags of metacard being deleted are stored in the deleted metacard\"() {\n+        setup:\n+        def id = \"OriginalMetacardId\"\n+        def title = \"Title\"\n+        def tags = ['a-special-tag', 'a-second-special-tag'] as Set\n+        Metacard metacard = new MetacardImpl().with {\n+            setAttribute(ID, id)\n+            setAttribute(TITLE, title)\n+            setAttribute(new AttributeImpl(TAGS, new ArrayList<>(tags)))\n+            return it\n+        }\n+\n+        when: \"deleted metacards are created from a metacard with specific tags\"\n+        def deletedMetacard = new DeletedMetacardImpl(\n+                \"DeletedMetacardId\",\n+                id,\n+                \"UserSubjectName\",\n+                \"VersionMetacardId\",\n+                metacard)\n+\n+        then: \"deleted metacards have those specific tags for searchability\"\n+        deletedMetacard.\n+                getAttribute(DeletedMetacard.DELETED_METACARD_TAGS)?.\n+                values?.\n+                containsAll(tags)\n+\n+        when: \"deleted metacard has no tags (which would be odd)\"\n+        Metacard metacardNoTags = new MetacardImpl().with {\n+            setAttribute(ID, id)\n+            setAttribute(TITLE, title)\n+            return it\n+        }\n+\n+        def deletedMetacardNoTags = new DeletedMetacardImpl(\n+                \"DeletedMetacardId\",\n+                id,\n+                \"UserSubjectName\",\n+                \"VersionMetacardId\",\n+                metacardNoTags)\n+        then: \"nothing bad happens and there is no deleted_metacard_tags\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf8bd709f4a45b8f7d380cb107ab4dbd8ab87a92"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4818, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}