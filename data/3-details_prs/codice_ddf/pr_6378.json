{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxODU3NTY3", "number": 6378, "title": "[2.19.x] DDF-UI-409 Unable to create new List with filter", "bodyText": "ddf-ui PRs:\n3.4.x codice/ddf-ui#411\n\nWhat does this PR do?\nResolved following List issues:\nIssue 1 - When create empty list with filter(s) from List view when go to Search view and try to add result to list, get error\nIssue 2 - When save workspace after creating a list with filter(s), if open to edit filter(s), filter is reset to default and does not contain changes previously made.\nIssue 3 - Not able to create new list (custom) with filter from Search view\nIssue 4 - Not able to create new list with template that has geometry filter(s) from Search view\nIssue 5 - The Plus icon is too close to word e.g. \"+Create New List\" and \"+Create New List with Result(s)\"\nWho is reviewing it?\n\n@andrewzimmer\n@hayleynorton\n@cassandrabailey293\n@zta6\nSelect relevant component teams:\n\nAsk 2 committers to review/merge the PR and tag them here.\n@Lambeaux\n@mojogitoverhere\nHow should this be tested?\n\n\nbuild / run / install / upload sample datas\nPlay around with the list functionality and try to break it or find pain points.\n\nIssue 1 :\n1. Go to Workspaces, open or click create a New Workspace\n2. Click on 'Lists' tab\n3. Click on \"new list\"\n4. Fill out form and select 'Yes' for \"Limit based on filter\"\n5. Click the \"Edit Filter\" button\n6. Add some fields and click \"Save Filter\"\n7. Click \"Create New List\"\n8. Go to Search tab, and perform a search that return some results\n9. Click on ellipse menu button lower right corner of result\n10. Pull up and clear console log\n11. Click on \"Add / Remove from List\"\n12. Ensure no error is shown on console log and able to add item to list if filter created allows it\nIssue 2 :\n1. Go to Workspaces, open or click create a New Workspace\n2. Click on 'Lists' tab\n3. Click on \"new list\"\n4. Fill out form and select 'Yes' for \"Limit based on filter\"\n5. Click the \"Edit Filter\" button\n6. Add some fields and click \"Save Filter\"\n7. Click \"Create New List\"\n8. Click on the save icon next to workspace title\n9. Click on pencil icon of created list to edit\n10. Click the \"Edit Filter\" button\n11. Ensure previously saved filter are displayed properly\nIssue 3 :\n1. Go to Workspaces, open or click create a New Workspace\n2. Go to Search tab, and perform a search that return some results\n3. Click on ellipse menu button lower right corner of result\n4. Click on \"Add / Remove from List\"  and click \"Create New List\"\n5. Fill out form and select 'Yes' for \"Limit based on filter\"\n6. Click the \"Edit Filter\" button\n7. Add some fields and click \"Save Filter\"\n8. Pull up and clear console log\n9. Click \"Create New List with Result(s)\"\n10. Ensure List is created and if filter accepts this result ensure it is added to list\nIssue 4 :\nAdd List Template:\n1. Go to Admin console via https://localhost:8993/admin/\n2. select \"Search UI\"\n3. Go to 'Configuration' and select 'org.codice.ddf.catalog.ui'\n4. You can scroll down and will see 'List Templates' can add templates in json format(s), e.g.\n{\"id\":\"Pizza Deliveries\", \"list.icon\": \"tasks\", \"list.cql\": \"(\\\"anyText\\\" ILIKE 'pizza')\"}\n5. Add a template that has geometry, e.g.\n{\"id\":\"AllShapes\", \"list.icon\": \"target\", \"list.cql\": \"((INTERSECTS(\\\"anyGeo\\\", POLYGON((13.50494 14.67164,13.50494 31.813497,27.883024 31.813497,27.883024 14.67164,13.50494 14.67164)))) AND (DWITHIN(\\\"anyGeo\\\", POINT(36.74286 6.243506), 675221.85938, meters)) AND (INTERSECTS(\\\"anyGeo\\\", LINESTRING(32.366517 31.086468,42.664471 13.853401))) AND (INTERSECTS(\\\"anyGeo\\\", POLYGON((54.79948 16.980688,45.428244 10.546348,60.352264 5.483269,54.79948 16.980688)))))\"}\n6. Click Save changes\n---------------------\n1. Go to Workspaces, open or click create a New Workspace\n2. Go to Search tab, and perform a search that return some results\n3. Add a location item to one of the result (via Inspector tab -> Details -> '+ Add' -> location, e.g.\nPOLYGON((54.79948 16.980688,45.428244 10.546348,60.352264 5.483269,54.79948 16.980688))\n4. Click on ellipse menu button lower right corner of result (Result you added a location to)\n5. Click on \"Add / Remove from List\"  and click \"Create New List\"\n6. Fill out form and under 'Template' select from drop down, template created in admin console\n7. Pull up and clear console log\n8. Click \"Create New List with Result(s)\"\n9. Ensure List is created and if filter accepts this result ensure it is added to list\nIssue 5 :\n1. Go to Workspaces, open or click create a New Workspace\n2. Click on 'Lists' tab\n3. Click on \"new list\"\n4. Ensure the \"Create New List\" has space between plus ' +' icon and displayed properly\n5. Go to Search tab, and perform a search that return some results\n6. Click on ellipse menu button lower right corner of result\n7. Click on \"Add / Remove from List\" and click \"Create New List\"\n8. Ensure the \"Create New List with Result(s)\" has space between plus ' +' icon and displayed properly\nAny background context you want to provide?\nWhat are the relevant tickets?\ncodice/ddf-ui#409\nScreenshots\n\nIssue 1 - Before\n\nIssue 1 - After\n\nIssue 2 - Before\n\nIssue 2 - After\n\nIssue 3 - Before\n\nIssue 3 - After\n\nIssue 4 - Before\n\nIssue 4 - After\n\nIssue 5 - Before\n\n\nIssue 5 - After\n\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-10-12T22:38:12Z", "url": "https://github.com/codice/ddf/pull/6378", "merged": true, "mergeCommit": {"oid": "5a20375e1704a638c0b0c4e272a7cb591f8093cd"}, "closed": true, "closedAt": "2020-10-23T20:30:59Z", "author": {"login": "abel-connexta"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdR7nHIAH2gAyNTAxODU3NTY3OjI0N2ZiMDY2OGFkNzhjOTA5ZjA0YWIyYTg1ZTI4NTdkYzhjODU2OTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVJqSngFqTUxNTE2MjIyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "247fb0668ad78c909f04ab2a85e2857dc8c85693", "author": {"user": {"login": "abel-connexta", "name": null}}, "url": "https://github.com/codice/ddf/commit/247fb0668ad78c909f04ab2a85e2857dc8c85693", "committedDate": "2020-10-12T22:21:04Z", "message": "DDF-UI-409 Unable to create new List with filter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3MDM0MjQz", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-507034243", "createdAt": "2020-10-13T02:53:32Z", "commit": {"oid": "247fb0668ad78c909f04ab2a85e2857dc8c85693"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzU4NTEw", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-507758510", "createdAt": "2020-10-13T19:24:50Z", "commit": {"oid": "247fb0668ad78c909f04ab2a85e2857dc8c85693"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToyNDo1MFrOHg2BQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOToyNDo1MFrOHg2BQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwMTUzOQ==", "bodyText": "\u2753 why is there an empty span here?", "url": "https://github.com/codice/ddf/pull/6378#discussion_r504201539", "createdAt": "2020-10-13T19:24:50Z", "author": {"login": "cassandrabailey293"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/react-component/list-create/list-create.js", "diffHunk": "@@ -43,6 +43,7 @@ const AddButton = props => {\n       style={{ width: '100%' }}\n     >\n       <span className=\"fa fa-plus\" />\n+      <span> </span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "247fb0668ad78c909f04ab2a85e2857dc8c85693"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzY1ODE5", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-507765819", "createdAt": "2020-10-13T19:35:28Z", "commit": {"oid": "247fb0668ad78c909f04ab2a85e2857dc8c85693"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d", "author": {"user": {"login": "abel-connexta", "name": null}}, "url": "https://github.com/codice/ddf/commit/3378b5a380422e1d7747bb47ec8e16bfedaf8b5d", "committedDate": "2020-10-14T20:03:39Z", "message": "DDF-UI-409 list.cql deprecated in favor of list.filters"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyODkxMjcy", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-512891272", "createdAt": "2020-10-20T15:56:49Z", "commit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNTo1Njo0OVrOHlFK8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODoxNDowMVrOHlK7vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY0NDA4MQ==", "bodyText": "\u270f\ufe0f I think we should add a comment above LIST_CQL on line 31 to explain how it is being deprecated in favor of list.filters and should now be considered read-only", "url": "https://github.com/codice/ddf/pull/6378#discussion_r508644081", "createdAt": "2020-10-20T15:56:49Z", "author": {"login": "mojogitoverhere"}, "path": "catalog/ui/catalog-ui-search/src/main/java/org/codice/ddf/catalog/ui/metacard/workspace/ListMetacardTypeImpl.java", "diffHunk": "@@ -34,6 +34,8 @@\n \n   public static final String LIST_BOOKMARKS = \"list.bookmarks\";\n \n+  public static final String LIST_FILTERS = \"list.filters\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY2NDA2OA==", "bodyText": "\u270f\ufe0f you can still use the shorthand notation without the return here\n      if (list['list.filters']) {\n        list.matchesFilter = this.model.every(result => \n          result.matchesFilters(list['list.filters'])\n        )", "url": "https://github.com/codice/ddf/pull/6378#discussion_r508664068", "createdAt": "2020-10-20T16:16:54Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/component/result-add/result-add.view.js", "diffHunk": "@@ -83,13 +83,13 @@ module.exports = Marionette.LayoutView.extend({\n     let listJSON = store\n       .getCurrentWorkspace()\n       .get('lists')\n-      .toJSON()\n+      .models.map(listModel => listModel.toJSON('keepObjs'))\n     listJSON = listJSON.map(list => {\n       list.matchesFilter = true\n-      if (list['list.cql'] !== '') {\n-        list.matchesFilter = this.model.every(result =>\n-          result.matchesCql(list['list.cql'])\n-        )\n+      if (list['list.filters']) {\n+        list.matchesFilter = this.model.every(result => {\n+          return result.matchesFilters(list['list.filters'])\n+        })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY5MTA3OQ==", "bodyText": "\u2753 This looks like a code smell to me. Does the code expect list.filters to be a string and in some places and an object in others?", "url": "https://github.com/codice/ddf/pull/6378#discussion_r508691079", "createdAt": "2020-10-20T16:57:49Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/List.js", "diffHunk": "@@ -86,6 +112,47 @@ module.exports = Backbone.AssociatedModel.extend(\n         this.updateQuery\n       )\n     },\n+    set(data, ...args) {\n+      if (typeof data === 'object') {\n+        // for backwards compatability\n+        if (data['list.cql'] && !data['list.filters']) {\n+          try {\n+            const filterTree = CQLUtils.transformCQLToFilter(data['list.cql'])\n+            data['list.filters'] = simplifyListFilter(filterTree)\n+          } catch (e) {\n+            console.log('Invalid cql: ' + data['list.cql'])\n+          }\n+          data['list.cql'] = undefined\n+        } else if (\n+          data['list.filters'] &&\n+          typeof data['list.filters'] === 'string'\n+        ) {\n+          try {\n+            data['list.filters'] = JSON.parse(data['list.filters'])\n+          } catch (e) {\n+            data['list.filters'] = undefined\n+          }\n+        }\n+      } else if (data === 'list.filters' && args.length == 1) {\n+        args = [simplifyListFilter(args[0])]\n+      }\n+      if (!IGNORED_DEPRECATED_ATTRIBUTES.includes(data)) {\n+        return Backbone.AssociatedModel.prototype.set.call(this, data, ...args)\n+      }\n+    },\n+    get(attr) {\n+      if (!IGNORED_DEPRECATED_ATTRIBUTES.includes(attr)) {\n+        return Backbone.AssociatedModel.prototype.get.call(this, attr)\n+      }\n+    },\n+    toJSON(...args) {\n+      const json = Backbone.AssociatedModel.prototype.toJSON.call(this, ...args)\n+      const keepObjs = args.length > 0 ? args.includes('keepObjs') : false\n+      if (!keepObjs && typeof json['list.filters'] === 'object') {\n+        json['list.filters'] = JSON.stringify(json['list.filters'])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODczODQ5NA==", "bodyText": "\u2757 If we handle the list.cql backwards compatibility case in the initialize method, I think we will be able to simplify a lot of this logic or remove it completely. Do you think there will be any issues doing it this way?\ninitialize() {\n    if model has list.cql and not list.filters\n        convertCqlToFilters()        \n    }\n\n    // rest of initialize\n}\n\nOr we might want to think about updating the backend to do the conversion for us so that the ui only ever has to worry about list.filters", "url": "https://github.com/codice/ddf/pull/6378#discussion_r508738494", "createdAt": "2020-10-20T18:14:01Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/List.js", "diffHunk": "@@ -86,6 +112,47 @@ module.exports = Backbone.AssociatedModel.extend(\n         this.updateQuery\n       )\n     },\n+    set(data, ...args) {\n+      if (typeof data === 'object') {\n+        // for backwards compatability\n+        if (data['list.cql'] && !data['list.filters']) {\n+          try {\n+            const filterTree = CQLUtils.transformCQLToFilter(data['list.cql'])\n+            data['list.filters'] = simplifyListFilter(filterTree)\n+          } catch (e) {\n+            console.log('Invalid cql: ' + data['list.cql'])\n+          }\n+          data['list.cql'] = undefined\n+        } else if (\n+          data['list.filters'] &&\n+          typeof data['list.filters'] === 'string'\n+        ) {\n+          try {\n+            data['list.filters'] = JSON.parse(data['list.filters'])\n+          } catch (e) {\n+            data['list.filters'] = undefined\n+          }\n+        }\n+      } else if (data === 'list.filters' && args.length == 1) {\n+        args = [simplifyListFilter(args[0])]\n+      }\n+      if (!IGNORED_DEPRECATED_ATTRIBUTES.includes(data)) {\n+        return Backbone.AssociatedModel.prototype.set.call(this, data, ...args)\n+      }\n+    },\n+    get(attr) {\n+      if (!IGNORED_DEPRECATED_ATTRIBUTES.includes(attr)) {\n+        return Backbone.AssociatedModel.prototype.get.call(this, attr)\n+      }\n+    },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3378b5a380422e1d7747bb47ec8e16bfedaf8b5d"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88d32149a0e5825ffa472f9c8d0697e5b7c1b0ae", "author": {"user": {"login": "abel-connexta", "name": null}}, "url": "https://github.com/codice/ddf/commit/88d32149a0e5825ffa472f9c8d0697e5b7c1b0ae", "committedDate": "2020-10-22T17:46:19Z", "message": "DDF-UI-409 Addressed comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0OTg3MTY5", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-514987169", "createdAt": "2020-10-22T18:01:55Z", "commit": {"oid": "88d32149a0e5825ffa472f9c8d0697e5b7c1b0ae"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowNDoyMFrOHmtv5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxODowNDoyMFrOHmtv5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDM1NzQ3OQ==", "bodyText": "\u270f\ufe0f we can move the check on L83 here to reduce the amount of nesting\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              if (data['list.cql']) {\n          \n          \n            \n              if (data['list.cql'] && !data['list.filters']) {", "url": "https://github.com/codice/ddf/pull/6378#discussion_r510357479", "createdAt": "2020-10-22T18:04:20Z", "author": {"login": "mojogitoverhere"}, "path": "ui/packages/catalog-ui-search/src/main/webapp/js/model/List.js", "diffHunk": "@@ -53,13 +54,56 @@ function generateCql(bookmarks) {\n   })\n }\n \n+function simplifyListFilter(listFilters) {\n+  if (!listFilters) {\n+    return listFilters\n+  }\n+  let filtersArray = listFilters.filters || [listFilters]\n+  filtersArray = filtersArray\n+    .filter(filter => !filter.filters) //Only supports one filter group type, no nested filter groups\n+    .map(filter => {\n+      return {\n+        ...filter,\n+        value:\n+          filter.value && filter.value.value\n+            ? filter.value.value\n+            : filter.value,\n+      }\n+    })\n+  return {\n+    type: listFilters.filters ? listFilters.type : 'AND',\n+    filters: filtersArray,\n+  }\n+}\n+\n+function parseList(data) {\n+  // for backwards compatability\n+  if (data['list.cql']) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88d32149a0e5825ffa472f9c8d0697e5b7c1b0ae"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTYyMjIz", "url": "https://github.com/codice/ddf/pull/6378#pullrequestreview-515162223", "createdAt": "2020-10-22T22:24:59Z", "commit": {"oid": "88d32149a0e5825ffa472f9c8d0697e5b7c1b0ae"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 781, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}