{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Njk2NDYw", "number": 6170, "title": "DDF-6169 fixes support for multiple wfs 1.1.0 sources", "bodyText": "What does this PR do?\nFixes the WFS 1.1.0 Source and Wfs Metacard Feature Type Registry to support multiple active sources.\nNote - this does include an API change, but the API is marked experimental.\nWho is reviewing it?\n@jrnorth\n@bdeining\n@rzwiefel\nSelect relevant component teams:\n@codice/core-apis\nAsk 2 committers to review/merge the PR and tag them here.\n@jrnorth\n@bdeining\n@rzwiefel\nHow should this be tested?\n\nConfigure 2 WFS 1.1.0 Federated Sources\nOptional: disable the cache to eliminate this from the test (Catalog Federated Strategy -> Query Result Cache Strategy=None\nQuery both and verify results come back from each\nDisable and then re-enable each source\nRe-verify that a query against both sources work\n\nAny background context you want to provide?\nWhat are the relevant tickets?\nFixes: #6169\nScreenshots\n\nChecklist:\n\n Documentation Updated\n Update / Add Threat Dragon models\n Update / Add Unit Tests\n Update / Add Integration Tests\n\nNotes on Review Process\nPlease see Notes on Review Process for further guidance on requirements for merging and abbreviated reviews.\nReview Comment Legend:\n\n\u270f\ufe0f (Pencil) This comment is a nitpick or style suggestion, no action required for approval. This comment should provide a suggestion either as an in line code snippet or a gist.\n\u2753 (Question Mark) This comment is to gain a clearer understanding of design or code choices, clarification is required but action may not be necessary for approval.\n\u2757 (Exclamation Mark) This comment is critical and requires clarification or action before approval.", "createdAt": "2020-07-07T21:30:24Z", "url": "https://github.com/codice/ddf/pull/6170", "merged": true, "mergeCommit": {"oid": "b3b4f9bf9ca198e9452ffe17b402abb06486e8ff"}, "closed": true, "closedAt": "2020-07-16T18:45:34Z", "author": {"login": "jlcsmith"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcy_d6LgFqTQ0NTA2MDE3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1ieSDgFqTQ1MDA1MTQ5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MDYwMTcy", "url": "https://github.com/codice/ddf/pull/6170#pullrequestreview-445060172", "createdAt": "2020-07-08T19:18:59Z", "commit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MTczMjI0", "url": "https://github.com/codice/ddf/pull/6170#pullrequestreview-445173224", "createdAt": "2020-07-08T22:32:46Z", "commit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0OTc1NzE3", "url": "https://github.com/codice/ddf/pull/6170#pullrequestreview-444975717", "createdAt": "2020-07-08T17:19:51Z", "commit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNzoxOTo1MVrOGux5RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDozNjowMFrOGu9uJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTcwNTE1Ng==", "bodyText": "\u270f\ufe0f Extra parentheses", "url": "https://github.com/codice/ddf/pull/6170#discussion_r451705156", "createdAt": "2020-07-08T17:19:51Z", "author": {"login": "jrnorth"}, "path": "catalog/spatial/wfs/spatial-wfs-metacardtype-registry/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/metacardtype/registry/impl/WfsMetacardTypeRegistryImpl.java", "diffHunk": "@@ -81,7 +82,24 @@ public void registerMetacardType(\n   }\n \n   /** {@inheritDoc} */\n-  public void clear() {\n+  @Override\n+  public void clear(String sourceId) {\n+    Verify.verifyNotNull(sourceId, \"argument 'sourceId' may not be null.\");\n+    for (Iterator<ServiceRegistration<MetacardType>> iter = serviceRegistrations.iterator();\n+        iter.hasNext(); ) {\n+      ServiceRegistration registration = iter.next();\n+      if (registration.getReference() != null\n+          && registration.getReference().getProperty((SOURCE_ID)) != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5ODkxOQ==", "bodyText": "\u270f\ufe0f The feature name stubs can be removed since they won't be called during this test. These feature names don't match the ones used to register the metacard types anyway.", "url": "https://github.com/codice/ddf/pull/6170#discussion_r451898919", "createdAt": "2020-07-09T00:36:00Z", "author": {"login": "jrnorth"}, "path": "catalog/spatial/wfs/spatial-wfs-metacardtype-registry/src/test/java/org/codice/ddf/spatial/ogc/wfs/catalog/metacardtype/registry/impl/WfsMetacardTypeRegistryTest.java", "diffHunk": "@@ -94,13 +96,46 @@ public void testLookupMetacardTypeBySimpleName() {\n   }\n \n   @Test\n-  public void testClear() {\n+  public void testClearAll() {\n     wfsMetacardTypeRegistry.registerMetacardType(\n         mockMetacardType, TEST_SOURCE_ID, TEST_FEATURE_SIMPLE_NAME);\n-    wfsMetacardTypeRegistry.clear();\n+    wfsMetacardTypeRegistry.clearAll();\n     verify(mockServiceRegistration, times(1)).unregister();\n   }\n \n+  @Test\n+  public void testClear() {\n+    ServiceRegistration mockServiceRegistration1 = mock(ServiceRegistration.class);\n+    ServiceRegistration mockServiceRegistration2 = mock(ServiceRegistration.class);\n+    ServiceReference mockServiceReference1 = mock(ServiceReference.class);\n+    ServiceReference mockServiceReference2 = mock(ServiceReference.class);\n+    String featureA = \"featureA\";\n+    String featureB = \"featureB\";\n+\n+    when(mockServiceRegistration1.getReference()).thenReturn(mockServiceReference1);\n+    when(mockServiceRegistration2.getReference()).thenReturn(mockServiceReference2);\n+    when(mockServiceReference1.getProperty(WfsMetacardTypeRegistryImpl.SOURCE_ID))\n+        .thenReturn(TEST_SOURCE_ID);\n+    when(mockServiceReference2.getProperty(WfsMetacardTypeRegistryImpl.SOURCE_ID))\n+        .thenReturn(TEST_SOURCE_ID_2);\n+    when(mockServiceReference1.getProperty(WfsMetacardTypeRegistryImpl.FEATURE_NAME))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d556e755dc3ee76a9a0a9f68b70b82258d215e55", "author": {"user": {"login": "jlcsmith", "name": "Jason Smith"}}, "url": "https://github.com/codice/ddf/commit/d556e755dc3ee76a9a0a9f68b70b82258d215e55", "committedDate": "2020-07-16T16:02:32Z", "message": "DDF-6169 fixes support for multiple wfs 1.1.0 sources"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fc076dccf2aeedda58b68a39324ddf733d34e5a", "author": {"user": {"login": "jlcsmith", "name": "Jason Smith"}}, "url": "https://github.com/codice/ddf/commit/3fc076dccf2aeedda58b68a39324ddf733d34e5a", "committedDate": "2020-07-16T16:02:32Z", "message": "DDF-6169 code cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5OTk5NDg3", "url": "https://github.com/codice/ddf/pull/6170#pullrequestreview-449999487", "createdAt": "2020-07-16T16:08:28Z", "commit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowODoyOFrOGyyE3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNjowODoyOFrOGyyE3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTkwMjQzMQ==", "bodyText": "\u270f\ufe0f You already verify that sourceId is not null.  You could remove the previous line if you do sourceId.equals(registration.getReference().getProperty(SOURCE_ID))", "url": "https://github.com/codice/ddf/pull/6170#discussion_r455902431", "createdAt": "2020-07-16T16:08:28Z", "author": {"login": "pklinef"}, "path": "catalog/spatial/wfs/spatial-wfs-metacardtype-registry/src/main/java/org/codice/ddf/spatial/ogc/wfs/catalog/metacardtype/registry/impl/WfsMetacardTypeRegistryImpl.java", "diffHunk": "@@ -81,7 +82,24 @@ public void registerMetacardType(\n   }\n \n   /** {@inheritDoc} */\n-  public void clear() {\n+  @Override\n+  public void clear(String sourceId) {\n+    Verify.verifyNotNull(sourceId, \"argument 'sourceId' may not be null.\");\n+    for (Iterator<ServiceRegistration<MetacardType>> iter = serviceRegistrations.iterator();\n+        iter.hasNext(); ) {\n+      ServiceRegistration registration = iter.next();\n+      if (registration.getReference() != null\n+          && registration.getReference().getProperty((SOURCE_ID)) != null\n+          && registration.getReference().getProperty(SOURCE_ID).equals(sourceId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac64705b64d4836915c6d2485e9f7f9ca3970bb9", "author": {"user": {"login": "jlcsmith", "name": "Jason Smith"}}, "url": "https://github.com/codice/ddf/commit/ac64705b64d4836915c6d2485e9f7f9ca3970bb9", "committedDate": "2020-07-16T16:41:00Z", "message": "DDF-6169 addresses review commits"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1a7c752b1e043a67e920c0697b078f717774c3aa", "author": {"user": {"login": "jlcsmith", "name": "Jason Smith"}}, "url": "https://github.com/codice/ddf/commit/1a7c752b1e043a67e920c0697b078f717774c3aa", "committedDate": "2020-07-07T21:32:49Z", "message": "DDF-6169 code cleanup"}, "afterCommit": {"oid": "ac64705b64d4836915c6d2485e9f7f9ca3970bb9", "author": {"user": {"login": "jlcsmith", "name": "Jason Smith"}}, "url": "https://github.com/codice/ddf/commit/ac64705b64d4836915c6d2485e9f7f9ca3970bb9", "committedDate": "2020-07-16T16:41:00Z", "message": "DDF-6169 addresses review commits"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwMDUxNDk3", "url": "https://github.com/codice/ddf/pull/6170#pullrequestreview-450051497", "createdAt": "2020-07-16T17:13:55Z", "commit": {"oid": "ac64705b64d4836915c6d2485e9f7f9ca3970bb9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 809, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}