{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODQ5ODM1", "number": 9698, "title": "KAFKA-10811: Correct the MirrorConnectorsIntegrationTest to correctly mask the exit procedures", "bodyText": "Normally the EmbeddedConnectCluster class masks the Exit procedures using within the Connect worker. This normally works great when a single instance of the embedded cluster is used. However, the MirrorConnectorsIntegrationTest uses two EmbeddedConnectCluster instances, and when the first one is stopped it would reset the (static) exit procedures, and any problems during shutdown of the second embedded Connect cluster would cause the worker to shut down the JVM running the tests.\nInstead, the MirrorConnectorsIntegrationTest class should mask the Exit procedures and instruct the EmbeddedConnectClusters instances (via the existing builder method) to not mask the procedures.\nIdeally this should also be backported to 2.7, 2.6, and 2.5 branches.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-04T23:51:48Z", "url": "https://github.com/apache/kafka/pull/9698", "merged": true, "mergeCommit": {"oid": "8db3b1a09af0bad274e07161336994610d616b35"}, "closed": true, "closedAt": "2020-12-07T15:34:35Z", "author": {"login": "rhauch"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjjz3ngH2gAyNTMyODQ5ODM1OmM3MGE1OGNjZTY4OGY5NDYyN2Q0ZDM5ZDBlMzYwOTU1ZjNhMzU5NzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdjuWK5AFqTU0NTgzMDI5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971", "author": {"user": {"login": "rhauch", "name": "Randall Hauch"}}, "url": "https://github.com/apache/kafka/commit/c70a58cce688f94627d4d39d0e360955f3a35971", "committedDate": "2020-12-06T16:47:55Z", "message": "KAFKA-10811: Correct the MirrorConnectorsIntegrationTest to correctly mask the exit procedures\n\nNormally the `EmbeddedConnectCluster` class masks the `Exit` procedures using within the Connect worker. This normally works great when a single instance of the embedded cluster is used. However, the `MirrorConnectorsIntegrationTest` uses two `EmbeddedConnectCluster` instances, and when the first one is stopped it would reset the (static) exit procedures, and any problems during shutdown of the second embedded Connect cluster would cause the worker to shut down the JVM running the tests.\n\nInstead, the `MirrorConnectorsIntegrationTest` class should mask the `Exit` procedures and instruct the `EmbeddedConnectClusters` instances (via the existing builder method) to not mask the procedures."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d45db1b3231ce8f0f5c451ee189f64510bc920ae", "author": {"user": {"login": "rhauch", "name": "Randall Hauch"}}, "url": "https://github.com/apache/kafka/commit/d45db1b3231ce8f0f5c451ee189f64510bc920ae", "committedDate": "2020-12-04T23:50:12Z", "message": "KAFKA-10811: Correct the MirrorConnectorsIntegrationTest to correctly mask the exit procedures\n\nNormally the `EmbeddedConnectCluster` class masks the `Exit` procedures using within the Connect worker. This normally works great when a single instance of the embedded cluster is used. However, the `MirrorConnectorsIntegrationTest` uses two `EmbeddedConnectCluster` instances, and when the first one is stopped it would reset the (static) exit procedures, and any problems during shutdown of the second embedded Connect cluster would cause the worker to shut down the JVM running the tests.\n\nInstead, the `MirrorConnectorsIntegrationTest` class should mask the `Exit` procedures and instruct the `EmbeddedConnectClusters` instances (via the existing builder method) to not mask the procedures."}, "afterCommit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971", "author": {"user": {"login": "rhauch", "name": "Randall Hauch"}}, "url": "https://github.com/apache/kafka/commit/c70a58cce688f94627d4d39d0e360955f3a35971", "committedDate": "2020-12-06T16:47:55Z", "message": "KAFKA-10811: Correct the MirrorConnectorsIntegrationTest to correctly mask the exit procedures\n\nNormally the `EmbeddedConnectCluster` class masks the `Exit` procedures using within the Connect worker. This normally works great when a single instance of the embedded cluster is used. However, the `MirrorConnectorsIntegrationTest` uses two `EmbeddedConnectCluster` instances, and when the first one is stopped it would reset the (static) exit procedures, and any problems during shutdown of the second embedded Connect cluster would cause the worker to shut down the JVM running the tests.\n\nInstead, the `MirrorConnectorsIntegrationTest` class should mask the `Exit` procedures and instruct the `EmbeddedConnectClusters` instances (via the existing builder method) to not mask the procedures."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1NzI5NTE3", "url": "https://github.com/apache/kafka/pull/9698#pullrequestreview-545729517", "createdAt": "2020-12-06T17:20:06Z", "commit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODMwMjk0", "url": "https://github.com/apache/kafka/pull/9698#pullrequestreview-545830294", "createdAt": "2020-12-07T04:55:47Z", "commit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNDo1NTo0OFrOIAV-Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNTowMjo1OFrOIAWGgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzMDg3NQ==", "bodyText": "It seems exitProcedure and haltProcedure can be local variable", "url": "https://github.com/apache/kafka/pull/9698#discussion_r537230875", "createdAt": "2020-12-07T04:55:48Z", "author": {"login": "chia7712"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -75,14 +74,45 @@\n     private static final int RECORD_CONSUME_DURATION_MS = 20_000;\n     private static final int OFFSET_SYNC_DURATION_MS = 30_000;\n \n-    private final AtomicBoolean exited = new AtomicBoolean(false);\n+    private volatile boolean shuttingDown;\n     private Map<String, String> mm2Props;\n     private MirrorMakerConfig mm2Config;\n     private EmbeddedConnectCluster primary;\n     private EmbeddedConnectCluster backup;\n \n+    private Exit.Procedure exitProcedure;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzIzMzAyNA==", "bodyText": "How about using Utils.closeQuietly to replace this nested try-block?", "url": "https://github.com/apache/kafka/pull/9698#discussion_r537233024", "createdAt": "2020-12-07T05:02:58Z", "author": {"login": "chia7712"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -194,20 +224,27 @@ private void waitUntilMirrorMakerIsRunning(EmbeddedConnectCluster connectCluster\n \n     @After\n     public void close() {\n-        for (String x : primary.connectors()) {\n-            primary.deleteConnector(x);\n-        }\n-        for (String x : backup.connectors()) {\n-            backup.deleteConnector(x);\n-        }\n-        deleteAllTopics(primary.kafka());\n-        deleteAllTopics(backup.kafka());\n-        primary.stop();\n-        backup.stop();\n         try {\n-            assertFalse(exited.get());\n+            for (String x : primary.connectors()) {\n+                primary.deleteConnector(x);\n+            }\n+            for (String x : backup.connectors()) {\n+                backup.deleteConnector(x);\n+            }\n+            deleteAllTopics(primary.kafka());\n+            deleteAllTopics(backup.kafka());\n         } finally {\n-            Exit.resetExitProcedure();\n+            shuttingDown = true;\n+            try {\n+                try {\n+                    primary.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c70a58cce688f94627d4d39d0e360955f3a35971"}, "originalPosition": 123}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2569, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}