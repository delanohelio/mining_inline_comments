{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2NzA5NDY5", "number": 8782, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzoxMDoyOFrOEB1vWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjowM1rOEB60oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzY0NTA3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzoxMDoyOFrOGd7mxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzoxMDoyOFrOGd7mxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDAzODQ2OQ==", "bodyText": "How about renaming pendingCommitTxn to pendingCompleteTxn", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434038469", "createdAt": "2020-06-02T17:10:28Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "diffHunk": "@@ -215,8 +215,6 @@ class TransactionMarkerChannelManager(config: KafkaConfig,\n   }\n \n   private def writeTxnCompletion(pendingCommitTxn: PendingCompleteTxn): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44d281555a4d7f624fe9e7c6585550bfdb477702"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDAxNTk4OnYy", "diffSide": "LEFT", "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODozOTo0MVrOGd_RcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODozOTo0MVrOGd_RcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA5ODU0NQ==", "bodyText": "Multiple threads may see the transaction still as pending and attempt completion.", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434098545", "createdAt": "2020-06-02T18:39:41Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "diffHunk": "@@ -285,15 +280,16 @@ class TransactionMarkerChannelManager(config: KafkaConfig,\n     }\n   }\n \n-  private def maybeWriteTxnCompletion(transactionalId: String): Unit = {\n-    Option(transactionsWithPendingMarkers.get(transactionalId)).foreach { pendingCommitTxn =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9d1d5607db8d30bda2fb4c2c689f8d6b8d32c0e8"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDM1NDcyOnYy", "diffSide": "LEFT", "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoyMTo0OVrOGeCm-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMDoyMTo0OVrOGeCm-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE1MzIxMA==", "bodyText": "The change to use mock instead of niceMock led to a failure because of an unexpected append to the log. It seemed like this call was not necessary to test the behavior we were interested in here, so I removed it rather than adding the expected call to append.", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434153210", "createdAt": "2020-06-02T20:21:49Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -221,7 +221,6 @@ class TransactionMarkerChannelManagerTest {\n     EasyMock.replay(metadataCache)\n \n     channelManager.addTxnMarkersToSend(coordinatorEpoch, txnResult, txnMetadata1, txnMetadata1.prepareComplete(time.milliseconds()))\n-    channelManager.addTxnMarkersToSend(coordinatorEpoch, txnResult, txnMetadata2, txnMetadata2.prepareComplete(time.milliseconds()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ3NjQ2OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMTozNlrOGeD1cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNjoxMjoxNVrOGejRbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzI5Nw==", "bodyText": "Does this test cover concurrent calls to maybeWriteTxnCompletion?", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434173297", "createdAt": "2020-06-02T21:01:36Z", "author": {"login": "guozhangwang"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -86,6 +90,70 @@ class TransactionMarkerChannelManagerTest {\n       .anyTimes()\n   }\n \n+  @Test\n+  def shouldOnlyWriteTxnCompletionOnce(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIxODMyNg==", "bodyText": "It does. I was trying to setup this test to fit how we're likely hitting this in practice. In the call to addTxnMarkersToSend, before calling maybeWriteTxnCompletion, we have to acquire the lock. It is possible that the caller fails to acquire the lock before the markers finish getting written and the transaction gets completed in the request completion handler.", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434218326", "createdAt": "2020-06-02T22:54:05Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -86,6 +90,70 @@ class TransactionMarkerChannelManagerTest {\n       .anyTimes()\n   }\n \n+  @Test\n+  def shouldOnlyWriteTxnCompletionOnce(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzI5Nw=="}, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDI1ODk1Mg==", "bodyText": "Got it, so when the bug still exist this test would probably not fail consistently, but would be flaky, right?", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434258952", "createdAt": "2020-06-03T01:23:15Z", "author": {"login": "guozhangwang"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -86,6 +90,70 @@ class TransactionMarkerChannelManagerTest {\n       .anyTimes()\n   }\n \n+  @Test\n+  def shouldOnlyWriteTxnCompletionOnce(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzI5Nw=="}, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMwNjU1Ng==", "bodyText": "It fails deterministically without the fix.", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434306556", "createdAt": "2020-06-03T04:52:21Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -86,6 +90,70 @@ class TransactionMarkerChannelManagerTest {\n       .anyTimes()\n   }\n \n+  @Test\n+  def shouldOnlyWriteTxnCompletionOnce(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzI5Nw=="}, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY4ODM2Ng==", "bodyText": "Ah yes, I missed the txnMetadata2.lock.lock() before starting the scheduler, thanks.", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434688366", "createdAt": "2020-06-03T16:12:15Z", "author": {"login": "guozhangwang"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -86,6 +90,70 @@ class TransactionMarkerChannelManagerTest {\n       .anyTimes()\n   }\n \n+  @Test\n+  def shouldOnlyWriteTxnCompletionOnce(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzI5Nw=="}, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNDQ3Nzc2OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjowM1rOGeD2TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMTowMjowM1rOGeD2TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MzUxNw==", "bodyText": "Nice catch. Not sure why they did not fail before :)", "url": "https://github.com/apache/kafka/pull/8782#discussion_r434173517", "createdAt": "2020-06-02T21:02:03Z", "author": {"login": "guozhangwang"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionMarkerChannelManagerTest.scala", "diffHunk": "@@ -291,7 +358,7 @@ class TransactionMarkerChannelManagerTest {\n \n     val response = new WriteTxnMarkersResponse(createPidErrorMap(Errors.NONE))\n     for (requestAndHandler <- requestAndHandlers) {\n-      requestAndHandler.handler.onComplete(new ClientResponse(new RequestHeader(ApiKeys.PRODUCE, 0, \"client\", 1),\n+      requestAndHandler.handler.onComplete(new ClientResponse(new RequestHeader(ApiKeys.WRITE_TXN_MARKERS, 0, \"client\", 1),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c52dc75c8e7a970d2bd8708dbdccb8cf44d8dd0f"}, "originalPosition": 109}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2496, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}