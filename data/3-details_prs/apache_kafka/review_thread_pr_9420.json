{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMDg0NTQ4", "number": 9420, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjoyNDozNVrOFL7ATA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjoyNDozNVrOFL7ATA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ4MDQ1Mzg4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNlQyMjoyNDozNVrOIPYIpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNDoxOTo0MVrOIPuIhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk5NDk4MQ==", "bodyText": "Thanks for this @dongjinleekr !\nIt's kind of a bummer that we actually create this file while defining the configurations, since it results in leaking temp directories, even if users set this config to a different value.\nDo you think we can do this in a lazy fashion?", "url": "https://github.com/apache/kafka/pull/9420#discussion_r552994981", "createdAt": "2021-01-06T22:24:35Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -602,7 +603,7 @@\n                     REPLICATION_FACTOR_DOC)\n             .define(STATE_DIR_CONFIG,\n                     Type.STRING,\n-                    \"/tmp/kafka-streams\",\n+                    Utils.getTempDir().resolve(\"kafka-streams\").toAbsolutePath().toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b474cbe848282652396ff6d030047df63b5efd0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAxMDA0OQ==", "bodyText": "Good point John. Maybe we should just use System.getProperty(\"java.io.tmpdir\") here?\nWe have already code in place in StateDirectory constructor to create the ./kafka-streams sub-directory. Might be good enough without any additional changes?", "url": "https://github.com/apache/kafka/pull/9420#discussion_r553010049", "createdAt": "2021-01-06T23:08:28Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -602,7 +603,7 @@\n                     REPLICATION_FACTOR_DOC)\n             .define(STATE_DIR_CONFIG,\n                     Type.STRING,\n-                    \"/tmp/kafka-streams\",\n+                    Utils.getTempDir().resolve(\"kafka-streams\").toAbsolutePath().toString(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk5NDk4MQ=="}, "originalCommit": {"oid": "7b474cbe848282652396ff6d030047df63b5efd0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1NTM5OQ==", "bodyText": "@vvcephei @mjsax Totally agree. Since I am now finalizing KAFKA-8403 now, I will fix this with a integration test after that. \ud83d\ude4f", "url": "https://github.com/apache/kafka/pull/9420#discussion_r553355399", "createdAt": "2021-01-07T14:19:41Z", "author": {"login": "dongjinleekr"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -602,7 +603,7 @@\n                     REPLICATION_FACTOR_DOC)\n             .define(STATE_DIR_CONFIG,\n                     Type.STRING,\n-                    \"/tmp/kafka-streams\",\n+                    Utils.getTempDir().resolve(\"kafka-streams\").toAbsolutePath().toString(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1Mjk5NDk4MQ=="}, "originalCommit": {"oid": "7b474cbe848282652396ff6d030047df63b5efd0"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1762, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}