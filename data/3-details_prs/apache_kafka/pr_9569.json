{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NDc2MjAw", "number": 9569, "title": "KAFKA-10687: make ProduceRespone only returns INVALID_PRODUCER_EPOCH", "bodyText": "In KIP-588, we added the new PRODUCER_FENCED error code 90 to represent existing ProducerFencedException, which would be unknown error for producer client who sends ProduceRequest and doesn't know how to handle it. The fix is to revise the error code back to the known INVALID_PRODUCER_EPOCH in the ProduceResponse.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-11-06T03:51:11Z", "url": "https://github.com/apache/kafka/pull/9569", "merged": true, "mergeCommit": {"oid": "e7090173eeb72ba5c125ded2ec1cbf63cb5c0674"}, "closed": true, "closedAt": "2020-11-18T03:56:39Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZyXIwAFqTUyNDkyODQ0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABddh9cQgH2gAyNTE2NDc2MjAwOjhkZWY0NTEwMjU3YjExY2QxYTRjYWFlYjkxNjk0NGM0NGIzZDBlYzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0OTI4NDQz", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-524928443", "createdAt": "2020-11-06T08:05:16Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNToxNlrOHujvkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQwODowNToxNlrOHujvkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODU4MjE2Mg==", "bodyText": "\"..always return INVALID_PRODUCER_EPOCH as the partitioner leader ..\"", "url": "https://github.com/apache/kafka/pull/9569#discussion_r518582162", "createdAt": "2020-11-06T08:05:16Z", "author": {"login": "edenhill"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -609,6 +609,12 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       mergedResponseStatus.forKeyValue { (topicPartition, status) =>\n         if (status.error != Errors.NONE) {\n+          if (status.error == Errors.PRODUCER_FENCED) {\n+            // Produce request should always return the INVALID_PRODUCER_EPOCH to as", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1MjM3NDQx", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-525237441", "createdAt": "2020-11-06T15:07:08Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "119c883285b55d34ee43e2bf2e348e90cfc356a5", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/119c883285b55d34ee43e2bf2e348e90cfc356a5", "committedDate": "2020-11-10T21:52:11Z", "message": "make ProduceRespone only returns INVALID_PRODUCER_EPOCH"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06624823ae31cb8f291fe0a9d846178a7aabf39d", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/06624823ae31cb8f291fe0a9d846178a7aabf39d", "committedDate": "2020-11-10T21:52:11Z", "message": "comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b2a8c3b9c89514ddcc2dd0c56292106ffac9c95", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/7b2a8c3b9c89514ddcc2dd0c56292106ffac9c95", "committedDate": "2020-11-10T21:52:11Z", "message": "remove INVALID_PRODUCER_EPOCH retry"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78b170734627a753ecd03cbbd6896b449b647352", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/78b170734627a753ecd03cbbd6896b449b647352", "committedDate": "2020-11-10T22:00:03Z", "message": "test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "78b170734627a753ecd03cbbd6896b449b647352", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/78b170734627a753ecd03cbbd6896b449b647352", "committedDate": "2020-11-10T22:00:03Z", "message": "test fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjQ0NjUz", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-527644653", "createdAt": "2020-11-10T22:03:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjcxNzM4", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-527671738", "createdAt": "2020-11-10T22:50:54Z", "commit": {"oid": "78b170734627a753ecd03cbbd6896b449b647352"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjo1MDo1NFrOHwyt6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMjo1NzozMVrOHwy4-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNDY0OQ==", "bodyText": "I feel this is not the right place to fix on broker: if we think produce request should never see a fenced producer exception, we should just modify ProducerStateManager#checkProducerEpoch to throw InvalidProducerEpochException instead.", "url": "https://github.com/apache/kafka/pull/9569#discussion_r520924649", "createdAt": "2020-11-10T22:50:54Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -609,6 +609,12 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       mergedResponseStatus.forKeyValue { (topicPartition, status) =>\n         if (status.error != Errors.NONE) {\n+          if (status.error == Errors.PRODUCER_FENCED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b170734627a753ecd03cbbd6896b449b647352"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDkyNzQ4MQ==", "bodyText": "If we are going to expose this exception, then 1) it cannot be in the internals package, 2) public API javadocs should include this exception, also explains what users should do when getting this error. 3) KIP-588 should include this since it is now a publicly throwable exception.", "url": "https://github.com/apache/kafka/pull/9569#discussion_r520927481", "createdAt": "2020-11-10T22:57:31Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/common/internals/InvalidProducerEpochException.java", "diffHunk": "@@ -16,14 +16,15 @@\n  */\n package org.apache.kafka.common.internals;\n \n-import org.apache.kafka.common.errors.RetriableException;\n+import org.apache.kafka.clients.producer.KafkaProducer;\n+import org.apache.kafka.common.errors.ApiException;\n \n /**\n  * This exception indicates that the produce request sent to the partition leader\n- * contains a non-matching producer epoch. When encountering this exception, the ongoing transaction\n- * will be aborted and can be retried.\n+ * contains a non-matching producer epoch. When encountering this exception, user should abort the ongoing transaction\n+ * by calling {@link KafkaProducer#abortTransaction()} to reinitialize the producer state.\n  */\n-public class InvalidProducerEpochException extends RetriableException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78b170734627a753ecd03cbbd6896b449b647352"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d827ea6d65804339d37f5baf1dc7fe82268388f", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/1d827ea6d65804339d37f5baf1dc7fe82268388f", "committedDate": "2020-11-11T05:00:12Z", "message": "make InvalidProducerEpoch public"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1d827ea6d65804339d37f5baf1dc7fe82268388f", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/1d827ea6d65804339d37f5baf1dc7fe82268388f", "committedDate": "2020-11-11T05:00:12Z", "message": "make InvalidProducerEpoch public"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "833a0b0dbda0ce67d69d407c7300935a3e9e9255", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/833a0b0dbda0ce67d69d407c7300935a3e9e9255", "committedDate": "2020-11-13T00:45:58Z", "message": "test fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5Nzc2MDQ1", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-529776045", "createdAt": "2020-11-13T06:16:33Z", "commit": {"oid": "833a0b0dbda0ce67d69d407c7300935a3e9e9255"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxNjozNFrOHydlPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNjoxNzoyNFrOHydmGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTUxOA==", "bodyText": "For both these two functions: are we certain that InvalidProducerEpochException could be thrown directly from the call? For sendOffsetsToTransaction we are sending a commit-offset request to the consumer coordinator which should not get this error code, and for both AddPartitionsToTxn and EndTxn responses we should only have INVALID_PRODUCER_EPOCH error for version <= 1, right?\nEven if they are thrown, then we should add them in the throws as well similar to ProducerFencedException, right?", "url": "https://github.com/apache/kafka/pull/9569#discussion_r522675518", "createdAt": "2020-11-13T06:16:34Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -713,6 +715,8 @@ public void sendOffsetsToTransaction(Map<TopicPartition, OffsetAndMetadata> offs\n      *         does not support transactions (i.e. if its version is lower than 0.11.0.0)\n      * @throws org.apache.kafka.common.errors.AuthorizationException fatal error indicating that the configured\n      *         transactional.id is not authorized. See the exception for more details\n+     * @throws org.apache.kafka.common.errors.InvalidProducerEpochException if the producer has attempted to produce with an old epoch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "833a0b0dbda0ce67d69d407c7300935a3e9e9255"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjY3NTczNw==", "bodyText": "Let's add a comment why we change this to the InvalidProducerEpochException.", "url": "https://github.com/apache/kafka/pull/9569#discussion_r522675737", "createdAt": "2020-11-13T06:17:24Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/log/ProducerStateManager.scala", "diffHunk": "@@ -203,7 +203,7 @@ private[log] class ProducerAppendInfo(val topicPartition: TopicPartition,\n       if (origin == AppendOrigin.Replication) {\n         warn(message)\n       } else {\n-        throw new ProducerFencedException(message)\n+        throw new InvalidProducerEpochException(message)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "833a0b0dbda0ce67d69d407c7300935a3e9e9255"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0983acb93367bd2a5aaa13ab1659569f9512ae5f", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/0983acb93367bd2a5aaa13ab1659569f9512ae5f", "committedDate": "2020-11-13T17:24:03Z", "message": "more comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e935ac284f39b4dc2315a4aa9b4236b09408b5a5", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/e935ac284f39b4dc2315a4aa9b4236b09408b5a5", "committedDate": "2020-11-16T23:50:01Z", "message": "add stream side handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyODU2NTYx", "url": "https://github.com/apache/kafka/pull/9569#pullrequestreview-532856561", "createdAt": "2020-11-17T22:12:55Z", "commit": {"oid": "e935ac284f39b4dc2315a4aa9b4236b09408b5a5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoxMjo1NlrOH1NnLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjoxMjo1NlrOH1NnLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU1OTU5OQ==", "bodyText": "nit: InvalidProducerEpochException.", "url": "https://github.com/apache/kafka/pull/9569#discussion_r525559599", "createdAt": "2020-11-17T22:12:56Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/Callback.java", "diffHunk": "@@ -40,6 +40,7 @@\n      *                  RecordTooLargeException\n      *                  UnknownServerException\n      *                  UnknownProducerIdException\n+     *                  InvalidProducerEpoch", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e935ac284f39b4dc2315a4aa9b4236b09408b5a5"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8def4510257b11cd1a4caaeb916944c44b3d0ec3", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/8def4510257b11cd1a4caaeb916944c44b3d0ec3", "committedDate": "2020-11-17T23:15:01Z", "message": "nit"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2716, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}