{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDYzNjA0", "number": 9380, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNDowMlrOErZ7EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozOTo1MFrOErZ-8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQ4OTQ0OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNDowMlrOHeKHQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNDowMlrOHeKHQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NTAyNA==", "bodyText": "it located -> it is located\nin /tmp directory -> in the (default) /tmp/kafka-streams directory ?", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501385024", "createdAt": "2020-10-08T00:34:02Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "diffHunk": "@@ -446,7 +446,9 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(filteredOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to {} for global stores: {}\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to {} for global stores: {}.\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQ5MTg3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNToxN1rOHeKInA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNToxN1rOHeKInA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NTM3Mg==", "bodyText": "Do we know that it will resolve the problem? Maybe better:\nChanging the location of state.dir may resolve the problem", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501385372", "createdAt": "2020-10-08T00:35:17Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "diffHunk": "@@ -446,7 +446,9 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(filteredOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to {} for global stores: {}\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to {} for global stores: {}.\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +\n+                \" You can change location for state.dir to resolve problem\", checkpointFile, e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQ5NDkxOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateDirectory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozNzowN1rOHeKKcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMToxMDo0MVrOHeKrnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NTg0MQ==", "bodyText": "Wondering if this should go into StreamsConfig ?", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501385841", "createdAt": "2020-10-08T00:37:07Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateDirectory.java", "diffHunk": "@@ -98,6 +98,10 @@ public StateDirectory(final StreamsConfig config, final Time time, final boolean\n             throw new ProcessorStateException(\n                 String.format(\"state directory [%s] doesn't exist and couldn't be created\", stateDir.getPath()));\n         }\n+        if (stateDirName.startsWith(\"/tmp\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5NDMzNQ==", "bodyText": "Actually maybe we should wrap it in an if hasPersistentStores so that users won't get this warning if they don't have any persistent state", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501394335", "createdAt": "2020-10-08T01:10:41Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateDirectory.java", "diffHunk": "@@ -98,6 +98,10 @@ public StateDirectory(final StreamsConfig config, final Time time, final boolean\n             throw new ProcessorStateException(\n                 String.format(\"state directory [%s] doesn't exist and couldn't be created\", stateDir.getPath()));\n         }\n+        if (stateDirName.startsWith(\"/tmp\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NTg0MQ=="}, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzOTQ5OTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMDozOTo1MFrOHeKNGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwMjowMjo1N1rOHeLcLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NjUyMg==", "bodyText": "Hmmm... Not sure if I can follow? Why?\nAlso, if you run multiple instances on the same machine, it seems to be the same as running multiple threads in the same KafkaStreams client?\nAlso, if you configure different state directories, local state cannot be shared what might be wasteful?\nCan you elaborate on this sentence?", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501386522", "createdAt": "2020-10-08T00:39:50Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -603,7 +603,11 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(checkpointingOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to [{}]\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to [{}].\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +\n+                \" You can change location for state.dir to resolve problem.\" +\n+                \" This can also occur due to running multiple instances on the same machine using the same state dir.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MjI2Ng==", "bodyText": "@mjsax you can't run multiple instances on the same machine with the same state.dir. For one thing, the locking mechanism is per-process*. If you run two different instances then you can get an active task on one instance and the corresponding standby on another. They would each think they owned the lock for that task directory, and concurrently access it (leading to the FileNotFoundException if one of them deletes the checkpoint, for example)\n*on some systems. On others it isn't, but then you hit the opposite problem where a task is deadlocked because the other process grabbed the lock for its directory first", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501392266", "createdAt": "2020-10-08T01:02:05Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -603,7 +603,11 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(checkpointingOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to [{}]\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to [{}].\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +\n+                \" You can change location for state.dir to resolve problem.\" +\n+                \" This can also occur due to running multiple instances on the same machine using the same state dir.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NjUyMg=="}, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM5MzcyNA==", "bodyText": "Currently, running multiple threads within an instance is not the same as running multiple instances on the same machine in the same state dir. I suppose technically if you could configure the two instances to have the same client UUID then the task assignor would make sure not to assign the same active/standby task to anyone on that machine, but I think there might be some unexpected side effects to running two separates instances with the same UUID.\nAnyways, if you're aware of the problem enough to configure the client Ids directly, you should be aware enough to just configure to use separate state.dirs. I don't think I buy the argument about it being wasteful just because there's really no reason to ever do this in a production app. But people seem to do it in testing all the time, and run into this issue, hence the warning here", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501393724", "createdAt": "2020-10-08T01:08:03Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -603,7 +603,11 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(checkpointingOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to [{}]\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to [{}].\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +\n+                \" You can change location for state.dir to resolve problem.\" +\n+                \" This can also occur due to running multiple instances on the same machine using the same state dir.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NjUyMg=="}, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQwNjc2NQ==", "bodyText": "Thanks for clarification @ableegoldman!", "url": "https://github.com/apache/kafka/pull/9380#discussion_r501406765", "createdAt": "2020-10-08T02:02:57Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -603,7 +603,11 @@ public void checkpoint() {\n         try {\n             checkpointFile.write(checkpointingOffsets);\n         } catch (final IOException e) {\n-            log.warn(\"Failed to write offset checkpoint file to [{}]\", checkpointFile, e);\n+            log.warn(\"Failed to write offset checkpoint file to [{}].\" +\n+                \" This may occur if OS cleaned the state.dir in case when it located in /tmp directory.\" +\n+                \" You can change location for state.dir to resolve problem.\" +\n+                \" This can also occur due to running multiple instances on the same machine using the same state dir.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTM4NjUyMg=="}, "originalCommit": {"oid": "704b7063e7588c2e55c2d06e298d60a7a90765b9"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1706, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}