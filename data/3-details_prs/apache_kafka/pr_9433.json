{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMzAzNTgy", "number": 9433, "title": "KAFKA-10607: Consistent behaviour for response errorCounts()", "bodyText": "", "createdAt": "2020-10-14T11:25:55Z", "url": "https://github.com/apache/kafka/pull/9433", "merged": true, "mergeCommit": {"oid": "407808964a140cb27e5d745db32a471db11e235a"}, "closed": true, "closedAt": "2020-11-20T07:30:04Z", "author": {"login": "tombentley"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUDEXKAFqTUxMTY5MTk3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABetqv34gFqTcxNDI2NDIzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNjkxOTc1", "url": "https://github.com/apache/kafka/pull/9433#pullrequestreview-511691975", "createdAt": "2020-10-19T12:10:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mzk3NjY1", "url": "https://github.com/apache/kafka/pull/9433#pullrequestreview-519397665", "createdAt": "2020-10-29T07:38:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozODozMFrOHqPfPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwNzozODozMFrOHqPfPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA1NTk5OA==", "bodyText": "typo: specificly -> specifically", "url": "https://github.com/apache/kafka/pull/9433#discussion_r514055998", "createdAt": "2020-10-29T07:38:30Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java", "diffHunk": "@@ -55,6 +55,11 @@ public ByteBuffer serialize(ApiKeys apiKey, short version, int correlationId) {\n         return RequestUtils.serialize(header.toStruct(), toStruct(version));\n     }\n \n+    /**\n+     * The number of each type of error in the response, including {@link Errors#NONE} and top-level errors as well as\n+     * more specificly scoped errors (such as topic or partition-level errors).", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MTQzNzUy", "url": "https://github.com/apache/kafka/pull/9433#pullrequestreview-527143752", "createdAt": "2020-11-10T12:17:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxNzo0OFrOHwZ6ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQxMjoxNzo0OFrOHwZ6ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDUxODMzOQ==", "bodyText": "pardon me, why to make this change?", "url": "https://github.com/apache/kafka/pull/9433#discussion_r520518339", "createdAt": "2020-11-10T12:17:48Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java", "diffHunk": "@@ -1921,7 +1929,7 @@ private CreateAclsResponse createCreateAclsResponse() {\n         return new CreateAclsResponse(new CreateAclsResponseData().setResults(asList(\n             new CreateAclsResponseData.AclCreationResult(),\n             new CreateAclsResponseData.AclCreationResult()\n-                .setErrorCode(Errors.INVALID_REQUEST.code())\n+                .setErrorCode(Errors.NONE.code())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8db3e89ce98745b372e7290e2849821737546b78", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/8db3e89ce98745b372e7290e2849821737546b78", "committedDate": "2020-11-19T17:00:57Z", "message": "KAFKA-10607: Consistent behaviour for response errorCounts()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9dd395ea57ac3e6fc3f3f891c65433955b0bba", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/cb9dd395ea57ac3e6fc3f3f891c65433955b0bba", "committedDate": "2020-11-19T17:00:57Z", "message": "typo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "committedDate": "2020-11-19T17:00:57Z", "message": "Add a test for all RPCs that Errors.NONE is included in the count"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/468d16f26c0f2ec32fb10f1e1bb003bcc62612d4", "committedDate": "2020-11-19T17:00:57Z", "message": "Add a test for all RPCs that Errors.NONE is included in the count"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NzE0MjY0MjMy", "url": "https://github.com/apache/kafka/pull/9433#pullrequestreview-714264232", "createdAt": "2021-07-24T22:43:16Z", "commit": {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yNFQyMjo0MzoxN1rOKEvA4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wNy0yNFQyMjo0MzoxN1rOKEvA4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDY3NjA1MzIxOA==", "bodyText": "Why did we change this?", "url": "https://github.com/apache/kafka/pull/9433#discussion_r676053218", "createdAt": "2021-07-24T22:43:17Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/MetadataResponse.java", "diffHunk": "@@ -109,8 +109,10 @@ public int throttleTimeMs() {\n     @Override\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> errorCounts = new HashMap<>();\n-        data.topics().forEach(metadata ->\n-            updateErrorCounts(errorCounts, Errors.forCode(metadata.errorCode())));\n+        data.topics().forEach(metadata -> {\n+            metadata.partitions().forEach(p -> updateErrorCounts(errorCounts, Errors.forCode(p.errorCode())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468d16f26c0f2ec32fb10f1e1bb003bcc62612d4"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 542, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}