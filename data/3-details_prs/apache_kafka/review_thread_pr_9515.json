{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMjAwNDI0", "number": 9515, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDo0NzozMVrOEym17g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyMzo1MlrOEz0LoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNTAwNjU0OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDo0NzozMVrOHpWDXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwMDo0NzozMVrOHpWDXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzExNDk3Mg==", "bodyText": "Nothing really changed here, but we use to just leave tasks in CREATED and call them \"restoring\" so I had to fix this up so they really were RESTORING", "url": "https://github.com/apache/kafka/pull/9515#discussion_r513114972", "createdAt": "2020-10-28T00:47:31Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/TaskManagerTest.java", "diffHunk": "@@ -2479,7 +2502,7 @@ public void shouldTransmitProducerMetrics() {\n             allTasks.put(task.id(), (StateMachineTask) task);\n         }\n         for (final Task task : restoringTasks) {\n-            assertThat(task.state(), not(Task.State.RUNNING));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxNjE4ODg2OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQwOToyMjo0MVrOHpgytw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxODoxNjo1MFrOHp3lew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI5MDkzNQ==", "bodyText": "Are there also other task states, we need to consider here except CREATED? What about CLOSED or SUSPENDED?", "url": "https://github.com/apache/kafka/pull/9515#discussion_r513290935", "createdAt": "2020-10-28T09:22:41Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -671,7 +672,7 @@ void handleLostAll() {\n         // just have an empty changelogOffsets map.\n         for (final TaskId id : union(HashSet::new, lockedTaskDirectories, tasks.keySet())) {\n             final Task task = tasks.get(id);\n-            if (task != null) {\n+            if (task != null && task.state() != State.CREATED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY2NDM3OQ==", "bodyText": "Ahh, good catch: the task returns changelog offsets ultimately from the ProcessorStateManager's stores map, which is cleared during close. So we should fall through to the checkpoint file for CLOSED tasks as well (technically there's currently no way for a CLOSED task to be in the TaskManager's tasks map when the member sends a JoinGroup, since we remove it from the tasks immediately upon close, but that may not always be the case so better safe than sorry.\nFor SUSPENDED we should still rely on the task's. changelog offsets since it doesn't do the checkpoint or clearing out of stores during suspend. (Actually very little happens in suspend at the moment)", "url": "https://github.com/apache/kafka/pull/9515#discussion_r513664379", "createdAt": "2020-10-28T18:16:50Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -671,7 +672,7 @@ void handleLostAll() {\n         // just have an empty changelogOffsets map.\n         for (final TaskId id : union(HashSet::new, lockedTaskDirectories, tasks.keySet())) {\n             final Task task = tasks.get(id);\n-            if (task != null) {\n+            if (task != null && task.state() != State.CREATED) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzI5MDkzNQ=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzY3Nzc3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyMzo1MlrOHrRVsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDoyMzo1MlrOHrRVsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTEzNDg5Ng==", "bodyText": "A unit test for the CLOSED case is missing.", "url": "https://github.com/apache/kafka/pull/9515#discussion_r515134896", "createdAt": "2020-10-30T14:23:52Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -671,7 +672,8 @@ void handleLostAll() {\n         // just have an empty changelogOffsets map.\n         for (final TaskId id : union(HashSet::new, lockedTaskDirectories, tasks.keySet())) {\n             final Task task = tasks.get(id);\n-            if (task != null) {\n+            // Closed and uninitialized tasks don't have any offsets so we should read directly from the checkpoint\n+            if (task != null && task.state() != State.CREATED && task.state() != State.CLOSED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4005, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}