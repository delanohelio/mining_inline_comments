{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MTM1ODYy", "number": 8116, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoxOTowOVrODfuyUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoyMDozMlrODfuzqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk4OTk1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoxOTowOVrOFpm52w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoxOTowOVrOFpm52w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3MzMzOQ==", "bodyText": "I added the exception to the log message, so we can see where the TaskMigratedException is actually caused.", "url": "https://github.com/apache/kafka/pull/8116#discussion_r379173339", "createdAt": "2020-02-13T23:19:09Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -701,10 +701,13 @@ private void runLoop() {\n                     enforceRebalance();\n                 }\n             } catch (final TaskMigratedException ignoreAndRejoinGroup) {\n-                log.warn(\"Detected task {} that got migrated to another thread. \" +\n-                        \"This implies that this thread missed a rebalance and dropped out of the consumer group. \" +\n-                        \"Will try to rejoin the consumer group. Below is the detailed description of the task:\\n{}\",\n-                    ignoreAndRejoinGroup.migratedTask().id(), ignoreAndRejoinGroup.migratedTask().toString(\">\"));\n+                log.warn(\"Detected task \" + ignoreAndRejoinGroup.migratedTask().id() +\n+                             \" that got migrated to another thread. This implies that this thread missed\" +\n+                             \" a rebalance and dropped out of the consumer group. Will try to rejoin the\" +\n+                             \" consumer group. Below is the detailed description of the task:\\n\" +\n+                             ignoreAndRejoinGroup.migratedTask().toString(\">\"),\n+                         ignoreAndRejoinGroup\n+                         );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e506b287ec56d67d4e70c2b42b6fd432067c6ba3"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTk5MzM5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMzoyMDozMlrOFpm70Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMDo1MTozNlrOFqDUvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3Mzg0MQ==", "bodyText": "Judging from the stacktrace generated in the prior logging change, this is where we're throwing a TaskMigratedException, even though this block is an \"unclean close\". Just trying out ignoring the exception to see what happens.", "url": "https://github.com/apache/kafka/pull/8116#discussion_r379173841", "createdAt": "2020-02-13T23:20:32Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -655,7 +655,11 @@ void suspend(final boolean clean,\n             }\n         } else {\n             // In the case of unclean close we still need to make sure all the stores are flushed before closing any\n-            super.flushState();\n+            try {\n+                stateMgr.flush();\n+            } catch (final ProcessorStateException e) {\n+                // ignore any exceptions while flushing (all stores would have had a chance to flush anyway)\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e506b287ec56d67d4e70c2b42b6fd432067c6ba3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTUyNTc0MQ==", "bodyText": "Just to clarify we should only swallow under dirty suspension (in trunk it is wrapped in close) right? For clean close / suspend if it throws we would capture it and wrap as TaskMigrated still and then handle them by closing the task as dirty (in that second try we would swallow).", "url": "https://github.com/apache/kafka/pull/8116#discussion_r379525741", "createdAt": "2020-02-14T16:29:33Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -655,7 +655,11 @@ void suspend(final boolean clean,\n             }\n         } else {\n             // In the case of unclean close we still need to make sure all the stores are flushed before closing any\n-            super.flushState();\n+            try {\n+                stateMgr.flush();\n+            } catch (final ProcessorStateException e) {\n+                // ignore any exceptions while flushing (all stores would have had a chance to flush anyway)\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3Mzg0MQ=="}, "originalCommit": {"oid": "e506b287ec56d67d4e70c2b42b6fd432067c6ba3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYzODk3NA==", "bodyText": "That's right", "url": "https://github.com/apache/kafka/pull/8116#discussion_r379638974", "createdAt": "2020-02-14T20:51:36Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -655,7 +655,11 @@ void suspend(final boolean clean,\n             }\n         } else {\n             // In the case of unclean close we still need to make sure all the stores are flushed before closing any\n-            super.flushState();\n+            try {\n+                stateMgr.flush();\n+            } catch (final ProcessorStateException e) {\n+                // ignore any exceptions while flushing (all stores would have had a chance to flush anyway)\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE3Mzg0MQ=="}, "originalCommit": {"oid": "e506b287ec56d67d4e70c2b42b6fd432067c6ba3"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4019, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}