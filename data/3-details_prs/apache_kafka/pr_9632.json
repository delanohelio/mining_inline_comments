{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTUyNTI3", "number": 9632, "title": "KAFKA-10702; Skip bookkeeping of empty transactions", "bodyText": "Compacted topics can accumulate a large number of empty transaction markers as the data from the transactions gets cleaned. For each transaction, there is some bookkeeping that leaders and followers must do to keep the transaction index up to date. The cost of this overhead can degrade performance when a replica needs to catch up if the log has mostly empty or small transactions. This patch improves the cost by skipping over empty transactions since these will have no effect on the last stable offset and do not need to be reflected in the transaction index.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-11-20T21:11:05Z", "url": "https://github.com/apache/kafka/pull/9632", "merged": true, "mergeCommit": {"oid": "e7de280b0f1c7a924293dba79be77f56a08d0e15"}, "closed": true, "closedAt": "2020-11-30T22:48:28Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABded3WYAH2gAyNTI0OTUyNTI3OjRhNjFjNTMwYjhmMzMxZWVhMGRjODBlYjMxYmFlMjZhMzZmNTJkNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdhsl3TgFqTU0MTMyNTUwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4a61c530b8f331eea0dc80eb31bae26a36f52d6b", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/4a61c530b8f331eea0dc80eb31bae26a36f52d6b", "committedDate": "2020-11-20T21:02:40Z", "message": "KAFKA-10702; Skip transaction bookkeeping of empty transactions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODIxOTEx", "url": "https://github.com/apache/kafka/pull/9632#pullrequestreview-535821911", "createdAt": "2020-11-20T22:35:44Z", "commit": {"oid": "4a61c530b8f331eea0dc80eb31bae26a36f52d6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjozNTo0NFrOH3i_Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjozNTo0NFrOH3i_Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAwNjkzNQ==", "bodyText": "Could you check my understanding? If we have a a non-empty currentTxnFirstOffset value (indicating a non-empty transaction), we'll return a valid CompletedTxn, otherwise we will return None. For the empty transactions this means that we aren't accumulating completed transactions. This saves us from having to call lastStableOffset on every empty completed transaction https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/log/Log.scala#L1240?", "url": "https://github.com/apache/kafka/pull/9632#discussion_r528006935", "createdAt": "2020-11-20T22:35:44Z", "author": {"login": "lbradstreet"}, "path": "core/src/main/scala/kafka/log/ProducerStateManager.scala", "diffHunk": "@@ -301,26 +304,28 @@ private[log] class ProducerAppendInfo(val topicPartition: TopicPartition,\n     }\n   }\n \n-  def appendEndTxnMarker(endTxnMarker: EndTransactionMarker,\n-                         producerEpoch: Short,\n-                         offset: Long,\n-                         timestamp: Long): CompletedTxn = {\n+  def appendEndTxnMarker(\n+    endTxnMarker: EndTransactionMarker,\n+    producerEpoch: Short,\n+    offset: Long,\n+    timestamp: Long\n+  ): Option[CompletedTxn] = {\n     checkProducerEpoch(producerEpoch, offset)\n     checkCoordinatorEpoch(endTxnMarker, offset)\n \n-    val firstOffset = updatedEntry.currentTxnFirstOffset match {\n-      case Some(txnFirstOffset) => txnFirstOffset\n-      case None =>\n-        transactions += new TxnMetadata(producerId, offset)\n-        offset\n+    // Only emit the `CompletedTxn` for non-empty transactions. A transaction marker\n+    // without any associated data will not have any impact on the last stable offset\n+    // and would not need to be reflected in the transaction index.\n+    val completedTxn = updatedEntry.currentTxnFirstOffset.map { firstOffset =>\n+      CompletedTxn(producerId, firstOffset, offset, endTxnMarker.controlType == ControlRecordType.ABORT)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a61c530b8f331eea0dc80eb31bae26a36f52d6b"}, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99894fcfa96d090e8042085a45227b94d07fc872", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/99894fcfa96d090e8042085a45227b94d07fc872", "committedDate": "2020-11-30T19:59:13Z", "message": "Fix failed test `LogTest.testAppendToTransactionIndexFailure`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMzI1NTA2", "url": "https://github.com/apache/kafka/pull/9632#pullrequestreview-541325506", "createdAt": "2020-11-30T21:53:55Z", "commit": {"oid": "99894fcfa96d090e8042085a45227b94d07fc872"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2443, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}