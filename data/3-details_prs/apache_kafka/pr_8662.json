{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDEyOTQ2", "number": 8662, "title": "HOTFIX: skip listOffsets request for newly created changelog topics", "bodyText": "This seems to be the final piece in the EosBetaUpgradeTest flakiness puzzle. From time to time the listOffsets request would fail during the initial startup rebalance, causing a probing rebalance to be scheduled for 10 min later (rather than immediately after). The assignor was newly creating the changelogs and then almost immediately calling listOffsets which then failed as the internal topics were not yet ready.\nTo avoid this race condition, we keep track of which changelogs we just created and skip fetching the end offsets for them. If a changelog did not exist before this moment, we can safely assume that its end offset is zero.", "createdAt": "2020-05-12T22:45:01Z", "url": "https://github.com/apache/kafka/pull/8662", "merged": true, "mergeCommit": {"oid": "4e722021a916a2a4183210dae70e6c95df2b5593"}, "closed": true, "closedAt": "2020-05-14T20:53:29Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgskj8gFqTQxMDQ4MzczOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABchQl92AH2gAyNDE3MDEyOTQ2OmRmMjRmNmUzNTExNjBkZTk3YWU2NjRkYWY0ZjQzM2FiZjU0MzM0ZDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDgzNzM4", "url": "https://github.com/apache/kafka/pull/8662#pullrequestreview-410483738", "createdAt": "2020-05-12T23:07:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzoyNFrOGUcBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzowNzoyNFrOGUcBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA4Mzc4OQ==", "bodyText": "Am I crazy or is this entire block not actually doing anything?", "url": "https://github.com/apache/kafka/pull/8662#discussion_r424083789", "createdAt": "2020-05-12T23:07:24Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1520,38 +1534,6 @@ private static void validateActiveTaskEncoding(final List<TopicPartition> partit\n         }\n     }\n \n-    /**\n-     * Internal helper function that creates a Kafka topic\n-     *\n-     * @param topicPartitions Map that contains the topic names to be created with the number of partitions\n-     */\n-    private void prepareTopic(final Map<String, InternalTopicConfig> topicPartitions) {\n-        log.debug(\"Starting to validate internal topics {} in partition assignor.\", topicPartitions);\n-\n-        // first construct the topics to make ready\n-        final Map<String, InternalTopicConfig> topicsToMakeReady = new HashMap<>();\n-\n-        for (final InternalTopicConfig topic : topicPartitions.values()) {\n-            final Optional<Integer> numPartitions = topic.numberOfPartitions();\n-            if (!numPartitions.isPresent()) {\n-                throw new StreamsException(\n-                    String.format(\"%sTopic [%s] number of partitions not defined\",\n-                                  logPrefix, topic.name())\n-                );\n-            }\n-            if (!topic.hasEnforcedNumberOfPartitions()) {\n-                topic.setNumberOfPartitions(numPartitions.get());\n-            }\n-            topicsToMakeReady.put(topic.name(), topic);\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 150}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTA3OTc3", "url": "https://github.com/apache/kafka/pull/8662#pullrequestreview-410507977", "createdAt": "2020-05-13T00:20:22Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoyMDoyMlrOGUdVfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QwMDoyMDoyMlrOGUdVfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDEwNTM0MQ==", "bodyText": "I like immutability. Should we call this allExpetcedChangelogPartitions and introduce allExistingChangelogPartitions = allExpetcedChangelogPartitions - newlyCreatedChangelogs", "url": "https://github.com/apache/kafka/pull/8662#discussion_r424105341", "createdAt": "2020-05-13T00:20:22Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -755,16 +753,25 @@ private TaskAssignor createTaskAssignor(final boolean lagComputationSuccessful)\n     private boolean populateClientStatesMap(final Map<UUID, ClientState> clientStates,\n                                             final Map<UUID, ClientMetadata> clientMetadataMap,\n                                             final Map<TopicPartition, TaskId> taskForPartition,\n-                                            final Map<TaskId, Set<TopicPartition>> changelogsByStatefulTask) {\n+                                            final Map<TaskId, Set<TopicPartition>> changelogsByStatefulTask,\n+                                            final Set<String> newlyCreatedChangelogs) {\n         boolean fetchEndOffsetsSuccessful;\n         Map<TaskId, Long> allTaskEndOffsetSums;\n         try {\n-            final Collection<TopicPartition> allChangelogPartitions = changelogsByStatefulTask.values().stream()\n-                                                                          .flatMap(Collection::stream)\n-                                                                          .collect(Collectors.toList());\n+            final Collection<TopicPartition> allExistingChangelogPartitions =", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTA4Mjcz", "url": "https://github.com/apache/kafka/pull/8662#pullrequestreview-410508273", "createdAt": "2020-05-13T00:21:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMzI0MTE1", "url": "https://github.com/apache/kafka/pull/8662#pullrequestreview-411324115", "createdAt": "2020-05-13T21:48:55Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0ODo1NVrOGVEvbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMTo0ODo1NVrOGVEvbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDc1MDk1OA==", "bodyText": "Don't we need to reply adminClient, too?", "url": "https://github.com/apache/kafka/pull/8662#discussion_r424750958", "createdAt": "2020-05-13T21:48:55Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1862,6 +1866,35 @@ public void shouldThrowIllegalStateExceptionIfAnyTopicsMissingFromChangelogEndOf\n         assertThrows(IllegalStateException.class, () -> partitionAssignor.assign(metadata, new GroupSubscription(subscriptions)));\n     }\n \n+    @Test\n+    public void shouldSkipListOffsetsRequestForNewlyCreatedChangelogTopics() {\n+        adminClient = EasyMock.createMock(AdminClient.class);\n+        final ListOffsetsResult result = EasyMock.createNiceMock(ListOffsetsResult.class);\n+        final KafkaFutureImpl<Map<TopicPartition, ListOffsetsResultInfo>> allFuture = new KafkaFutureImpl<>();\n+        allFuture.complete(emptyMap());\n+\n+        expect(adminClient.listOffsets(emptyMap())).andStubReturn(result);\n+        expect(result.all()).andReturn(allFuture);\n+\n+        builder.addSource(null, \"source1\", null, null, null, \"topic1\");\n+        builder.addProcessor(\"processor1\", new MockProcessorSupplier(), \"source1\");\n+        builder.addStateStore(new MockKeyValueStoreBuilder(\"store1\", false), \"processor1\");\n+\n+        subscriptions.put(\"consumer10\",\n+                          new Subscription(\n+                              singletonList(\"topic1\"),\n+                              defaultSubscriptionInfo.encode()\n+                          ));\n+\n+        EasyMock.replay(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dff6e11c4056adc492c92ead746fb097c9cfaec0", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/dff6e11c4056adc492c92ead746fb097c9cfaec0", "committedDate": "2020-05-13T21:51:24Z", "message": "skip listOffsets request for newly-made changelogs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0f8577acdd9d265520331f6343438681312bb1f", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/e0f8577acdd9d265520331f6343438681312bb1f", "committedDate": "2020-05-13T21:51:24Z", "message": "minor fix to newlycreatedTopics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "652ea3a3fdf24f672892be62d22cf22277e1ada0", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/652ea3a3fdf24f672892be62d22cf22277e1ada0", "committedDate": "2020-05-13T21:51:24Z", "message": "Ignore for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8124ae155128137688dc159698e9129c3f499ab", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/e8124ae155128137688dc159698e9129c3f499ab", "committedDate": "2020-05-13T21:51:24Z", "message": "github review and add test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbc13b492ea6a93ea5ed014146343164f05fec31", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/fbc13b492ea6a93ea5ed014146343164f05fec31", "committedDate": "2020-05-13T22:06:43Z", "message": "remove Ignore annotation at last"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fbc13b492ea6a93ea5ed014146343164f05fec31", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/fbc13b492ea6a93ea5ed014146343164f05fec31", "committedDate": "2020-05-13T22:06:43Z", "message": "remove Ignore annotation at last"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjc1MTU5", "url": "https://github.com/apache/kafka/pull/8662#pullrequestreview-411275159", "createdAt": "2020-05-13T20:29:05Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDoyOTowNVrOGVCXfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QyMDozODowOVrOGVCpaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxMjA2MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        LOG.warn(\"listOffsets request failed due to \", e);\n          \n          \n            \n                        LOG.warn(\"listOffsets request failed.\", e);\n          \n      \n    \n    \n  \n\nThanks! (minor suggestion to make the log message more typical)", "url": "https://github.com/apache/kafka/pull/8662#discussion_r424712060", "createdAt": "2020-05-13T20:29:05Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ClientUtils.java", "diffHunk": "@@ -105,6 +109,7 @@ public static String getTaskProducerClientId(final String threadClientId, final\n                 endOffsets = future.get(timeout.toMillis(), TimeUnit.MILLISECONDS);\n             }\n         } catch (final TimeoutException | RuntimeException | InterruptedException | ExecutionException e) {\n+            LOG.warn(\"listOffsets request failed due to \", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDcxNjY0OQ==", "bodyText": "It's not what you signed up for, but I'm wondering if we should at least submit a Jira to give some of these AdminClient methods a \"full consistency\" mode. In other words, since the command returns a future anyway, it would be nice to be able to tell it not to return until it can guarantee the topic will appear to be fully created on all brokers.\nI'm mildly concerned that we're just kicking the can down the road a little ways with this PR. I.e., we let the assignment happen, but then some other metadata (or data) operation for that topic will just fail shortly thereafter.\nMore generally, we jump through a lot of hoops in our own tests to try and make sure that the topics are really, actually created (or deleted) before proceeding with the test, and I'm sure that our users also suffer from the same problem in their testing and production code.", "url": "https://github.com/apache/kafka/pull/8662#discussion_r424716649", "createdAt": "2020-05-13T20:38:09Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopicManager.java", "diffHunk": "@@ -169,6 +173,9 @@ public void makeReady(final Map<String, InternalTopicConfig> topics) {\n             log.error(timeoutAndRetryError);\n             throw new StreamsException(timeoutAndRetryError);\n         }\n+        log.debug(\"Completed validating internal topics and created {}\", newlyCreatedTopics);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df24f6e351160de97ae664daf4f433abf54334d1", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/df24f6e351160de97ae664daf4f433abf54334d1", "committedDate": "2020-05-14T17:05:32Z", "message": "Minor log change suggestion\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 979, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}