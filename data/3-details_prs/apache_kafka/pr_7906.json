{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMjQ0Nzgy", "number": 7906, "title": "KAFKA-9383: Expose consumer group metadata", "bodyText": "Expose consumer group metadata to empower transactional producer do offset commit with more credentials, such as generation.id, member.id and group.instance.id. The change happens essentially in ConsumerCoordinator where we maintain an internal reference of the group metadata and update it every time we are in a rejoin callback. The exposed struct is a deep-copy instead of the actual object living inside the ConsumerCoordinator to avoid impact from caller.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-01-08T01:39:07Z", "url": "https://github.com/apache/kafka/pull/7906", "merged": true, "mergeCommit": {"oid": "e9cde112cd47d88c3e256881a70035c0fd31c022"}, "closed": true, "closedAt": "2020-01-09T17:35:00Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4LDm1gH2gAyMzYwMjQ0NzgyOjk3ZDM1YjlmMDE2YjM3NjZmNzIxMjQ5NzUyZDQ4NWY5MDFkMjljMjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4g6fKAFqTM0MDI2NTI3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "97d35b9f016b3766f721249752d485f901d29c24", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/97d35b9f016b3766f721249752d485f901d29c24", "committedDate": "2020-01-08T01:27:35Z", "message": "Expose consumer group metadata"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjA3NTMy", "url": "https://github.com/apache/kafka/pull/7906#pullrequestreview-339607532", "createdAt": "2020-01-08T01:40:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTo0MDowMVrOFbKvJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwMTo0MDowMVrOFbKvJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDAzMTc4MQ==", "bodyText": "Make reusable parameters for easier assertion calls, as some of the ids are not exposed from inside helper function.", "url": "https://github.com/apache/kafka/pull/7906#discussion_r364031781", "createdAt": "2020-01-08T01:40:01Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -148,6 +149,8 @@\n     private final int autoCommitIntervalMs = 500;\n \n     private final String groupId = \"mock-group\";\n+    private final String memberId = \"memberId\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/e761cfae1457d672fc2f895ddd4b1d07fd6a8349", "committedDate": "2020-01-08T01:46:33Z", "message": "minor improvement"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/e761cfae1457d672fc2f895ddd4b1d07fd6a8349", "committedDate": "2020-01-08T01:46:33Z", "message": "minor improvement"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5NjQzMjA1", "url": "https://github.com/apache/kafka/pull/7906#pullrequestreview-339643205", "createdAt": "2020-01-08T04:40:46Z", "commit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0MDo0N1rOFbMjRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQwNDo0OToyM1rOFbMoMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MTUwOQ==", "bodyText": "This is not introduced by this PR but: the fields can be declared final?", "url": "https://github.com/apache/kafka/pull/7906#discussion_r364061509", "createdAt": "2020-01-08T04:40:47Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerGroupMetadata.java", "diffHunk": "@@ -18,6 +18,10 @@\n \n import java.util.Optional;\n \n+/**\n+ * A metadata struct containing the consumer group information.\n+ * Note: Any change to this class is considered public and requires a KIP.\n+ */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2MjE1Mw==", "bodyText": "Why we want to return a clone of the groupMetadata? If we can declare all the fields as final, and whenever we update we always create a new ConsumerGroupMetadata object, then I think we can safely return the cached object directly.", "url": "https://github.com/apache/kafka/pull/7906#discussion_r364062153", "createdAt": "2020-01-08T04:45:05Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java", "diffHunk": "@@ -815,6 +820,15 @@ public boolean refreshCommittedOffsetsIfNeeded(Timer timer) {\n         return null;\n     }\n \n+    /**\n+     * Return the consumer group metadata.\n+     *\n+     * @return the current consumer group metadata\n+     */\n+    public ConsumerGroupMetadata groupMetadata() {\n+        return new ConsumerGroupMetadata(groupMetadata);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDA2Mjc2OQ==", "bodyText": "Since this callback is not synchronized and nor does the getter groupMetadata(), we should declare this cached object volatile.", "url": "https://github.com/apache/kafka/pull/7906#discussion_r364062769", "createdAt": "2020-01-08T04:49:23Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinator.java", "diffHunk": "@@ -387,8 +392,8 @@ protected void onJoinComplete(int generation,\n         maybeUpdateJoinedSubscription(assignedPartitions);\n \n         // give the assignor a chance to update internal state based on the received assignment\n-        ConsumerGroupMetadata metadata = new ConsumerGroupMetadata(rebalanceConfig.groupId, generation, memberId, rebalanceConfig.groupInstanceId);\n-        assignor.onAssignment(assignment, metadata);\n+        groupMetadata = new ConsumerGroupMetadata(rebalanceConfig.groupId, generation, memberId, rebalanceConfig.groupInstanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e761cfae1457d672fc2f895ddd4b1d07fd6a8349"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928c95e56ed2e1a6b19e79de8ed69ab6217b9368", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/928c95e56ed2e1a6b19e79de8ed69ab6217b9368", "committedDate": "2020-01-09T00:01:59Z", "message": "remove copy constructor and make fields final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwMjY1Mjcy", "url": "https://github.com/apache/kafka/pull/7906#pullrequestreview-340265272", "createdAt": "2020-01-09T02:55:32Z", "commit": {"oid": "928c95e56ed2e1a6b19e79de8ed69ab6217b9368"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2204, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}