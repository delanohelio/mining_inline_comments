{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTQ0NTEw", "number": 9013, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0Njo1N1rOEN4PrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDoyOToxNVrOEN-oyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTg4NDYwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0Njo1N1rOGwuoJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0Njo1N1rOGwuoJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc0ODc3Mg==", "bodyText": "align parameters", "url": "https://github.com/apache/kafka/pull/9013#discussion_r453748772", "createdAt": "2020-07-13T15:46:57Z", "author": {"login": "abbccdda"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -579,9 +579,19 @@ private void maybeOverrideClientId(Map<String, Object> configs) {\n         }\n     }\n \n+    /**\n+     * @deprecated Since 2.7.0. This will be removed in a future major release.\n+     */\n+    @Deprecated\n     public static Map<String, Object> addDeserializerToConfig(Map<String, Object> configs,\n                                                               Deserializer<?> keyDeserializer,\n                                                               Deserializer<?> valueDeserializer) {\n+        return appendDeserializerToConfig(configs, keyDeserializer, valueDeserializer);\n+    }\n+\n+    static Map<String, Object> appendDeserializerToConfig(Map<String, Object> configs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTg5MDY2OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0ODozMVrOGwusDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo0ODozMVrOGwusDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc0OTc3Mg==", "bodyText": "Same here, one parameter per line and align", "url": "https://github.com/apache/kafka/pull/9013#discussion_r453749772", "createdAt": "2020-07-13T15:48:31Z", "author": {"login": "abbccdda"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java", "diffHunk": "@@ -492,8 +492,17 @@ private static String parseAcks(String acksString) {\n         }\n     }\n \n+    /**\n+     * @deprecated Since 2.7.0. This will be removed in a future major release.\n+     */\n+    @Deprecated\n     public static Map<String, Object> addSerializerToConfig(Map<String, Object> configs,\n                                                             Serializer<?> keySerializer, Serializer<?> valueSerializer) {\n+        return appendSerializerToConfig(configs, keySerializer, valueSerializer);\n+    }\n+\n+    static Map<String, Object> appendSerializerToConfig(Map<String, Object> configs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTkwMjY1OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerConfigTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1MToyNFrOGwuzkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1MToyNFrOGwuzkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MTY5Nw==", "bodyText": "nit: change the test name to testAppendDeserializerToConfig", "url": "https://github.com/apache/kafka/pull/9013#discussion_r453751697", "createdAt": "2020-07-13T15:51:24Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/ConsumerConfigTest.java", "diffHunk": "@@ -100,24 +101,24 @@ public void testDeserializerToMapConfig() {\n         Map<String, Object> configs = new HashMap<>();\n         configs.put(ConsumerConfig.KEY_DESERIALIZER_CLASS_CONFIG, keyDeserializerClass);\n         configs.put(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializerClass);\n-        Map<String, Object> newConfigs = ConsumerConfig.addDeserializerToConfig(configs, null, null);\n+        Map<String, Object> newConfigs = ConsumerConfig.appendDeserializerToConfig(configs, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyOTkwMzk4OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/ProducerConfigTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1MTo0MlrOGwu0XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QxNTo1MTo0MlrOGwu0XQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzc1MTkwMQ==", "bodyText": "Similar here, change test name to match function.", "url": "https://github.com/apache/kafka/pull/9013#discussion_r453751901", "createdAt": "2020-07-13T15:51:42Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/ProducerConfigTest.java", "diffHunk": "@@ -68,24 +69,24 @@ public void testSerializerToMapConfig() {\n         Map<String, Object> configs = new HashMap<>();\n         configs.put(ProducerConfig.KEY_SERIALIZER_CLASS_CONFIG, keySerializerClass);\n         configs.put(ProducerConfig.VALUE_SERIALIZER_CLASS_CONFIG, valueSerializerClass);\n-        Map<String, Object> newConfigs = ProducerConfig.addSerializerToConfig(configs, null, null);\n+        Map<String, Object> newConfigs = ProducerConfig.appendSerializerToConfig(configs, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMDkzMTkyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDoyOToxNVrOGw4pvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMDoyOToxNVrOGw4pvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzkxMzAyMQ==", "bodyText": "nit: I don't feel strong about the style here, but maybe we should consider align with other functions which has the first parameter on the same line with function name.", "url": "https://github.com/apache/kafka/pull/9013#discussion_r453913021", "createdAt": "2020-07-13T20:29:15Z", "author": {"login": "abbccdda"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/ProducerConfig.java", "diffHunk": "@@ -492,8 +492,19 @@ private static String parseAcks(String acksString) {\n         }\n     }\n \n+    /**\n+     * @deprecated Since 2.7.0. This will be removed in a future major release.\n+     */\n+    @Deprecated\n     public static Map<String, Object> addSerializerToConfig(Map<String, Object> configs,\n                                                             Serializer<?> keySerializer, Serializer<?> valueSerializer) {\n+        return appendSerializerToConfig(configs, keySerializer, valueSerializer);\n+    }\n+\n+    static Map<String, Object> appendSerializerToConfig(\n+            Map<String, Object> configs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68137cdf9de3368dc93b9c3f9a9bfeee6e694afe"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2253, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}