{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk4MjczNTQ3", "number": 8417, "title": "KAFKA-8955: Add an AbstractResponse#errorCounts(Stream) and tidy", "bodyText": "Add AbstractResponse#errorCounts(Stream) to avoid having to call\nAbstractResponse#errorCounts(Collection) with a computed collection.\nA microbenchmark showed that using errorCounts(Stream) was\naround 7.5 times faster than errorCounts(Collection). Using forEach()\nloops with updateErrorCounts() is slightly faster, but is usually more\ncode.\nUse updateErrorMap() consistently.\nReplace for statements with forEach() for consistency.\nUse singleton errorMap() consistently.", "createdAt": "2020-04-03T16:36:00Z", "url": "https://github.com/apache/kafka/pull/8417", "merged": true, "mergeCommit": {"oid": "8429310cdba3c76cd41cf80ee013be96cf1c0e07"}, "closed": true, "closedAt": "2020-04-23T06:26:34Z", "author": {"login": "tombentley"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcUDjGIgH2gAyMzk4MjczNTQ3OmZjMDViZGFlNjE3MzMyZjJmNjc5MmY3YTM5NDQ1OWFkMjZhNDA5NDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaIxW-AFqTM5ODIyMjM2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fc05bdae617332f2f6792f7a394459ad26a40941", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/fc05bdae617332f2f6792f7a394459ad26a40941", "committedDate": "2020-04-03T16:32:37Z", "message": "KAFKA-8955: Add an AbstractResponse#errorCounts(Stream) and tidy\n\n* Add AbstractResponse#errorCounts(Stream) to avoid having to call\n  AbstractResponse#errorCounts(Collection) with a computed collection.\n\n* Use updateErrorMap() consistently.\n\n* Replace a couple of forEach() with for statements for consistency.\n\n* Use singleton errorMap() consistently."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzYyODkw", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-387762890", "createdAt": "2020-04-04T22:09:24Z", "commit": {"oid": "fc05bdae617332f2f6792f7a394459ad26a40941"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMjowOToyNVrOGA198w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQyMjowOToyNVrOGA198w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzUzNzM5NQ==", "bodyText": "It seems like the previous approach is actually more concise and as clear?", "url": "https://github.com/apache/kafka/pull/8417#discussion_r403537395", "createdAt": "2020-04-04T22:09:25Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/DescribeGroupsResponse.java", "diffHunk": "@@ -129,9 +129,9 @@ public int throttleTimeMs() {\n     @Override\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> errorCounts = new HashMap<>();\n-        data.groups().forEach(describedGroup -> {\n+        for (DescribedGroup describedGroup : data.groups()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc05bdae617332f2f6792f7a394459ad26a40941"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b546df8d5e7dda548cf2baef27a86a04da53dc79", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/b546df8d5e7dda548cf2baef27a86a04da53dc79", "committedDate": "2020-04-06T08:58:18Z", "message": "for \u2192 forEach"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/0db2d9adfdd491bf185f688dfd87e9742e40bc47", "committedDate": "2020-04-06T16:10:06Z", "message": "More for \u2192 forEach"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTYwMzY1", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-391560365", "createdAt": "2020-04-10T17:22:31Z", "commit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyMjozMlrOGEAmCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNzoyNDo1MlrOGEAp0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1NzIyNg==", "bodyText": "it seems this implementation can be replaced by #errorCounts(Stream<Errors>)", "url": "https://github.com/apache/kafka/pull/8417#discussion_r406857226", "createdAt": "2020-04-10T17:22:32Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java", "diffHunk": "@@ -57,6 +59,10 @@ public ByteBuffer serialize(ApiKeys apiKey, short version, int correlationId) {\n         return Collections.singletonMap(error, 1);\n     }\n \n+    protected Map<Errors, Integer> errorCounts(Stream<Errors> errors) {\n+        return errors.collect(Collectors.groupingBy(e -> e, Collectors.summingInt(e -> 1)));\n+    }\n+\n     protected Map<Errors, Integer> errorCounts(Collection<Errors> errors) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg1ODE5NQ==", "bodyText": "Could we leverage the new method errorCounts(Stream<Errors>)? For example:\nreturn errorCounts(data.results().stream().map(result -> Errors.forCode(result.errorCode())));", "url": "https://github.com/apache/kafka/pull/8417#discussion_r406858195", "createdAt": "2020-04-10T17:24:52Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/CreatePartitionsResponse.java", "diffHunk": "@@ -52,10 +51,9 @@ protected Struct toStruct(short version) {\n     @Override\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> counts = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDU0MjM1", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-396454235", "createdAt": "2020-04-20T13:31:01Z", "commit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozMTowMVrOGIUjbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozMTowMVrOGIUjbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM3ODU0MA==", "bodyText": "@tombentley Have we done any testing to verify that this way of doing things is no slower than the old way?", "url": "https://github.com/apache/kafka/pull/8417#discussion_r411378540", "createdAt": "2020-04-20T13:31:01Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java", "diffHunk": "@@ -57,6 +59,10 @@ public ByteBuffer serialize(ApiKeys apiKey, short version, int correlationId) {\n         return Collections.singletonMap(error, 1);\n     }\n \n+    protected Map<Errors, Integer> errorCounts(Stream<Errors> errors) {\n+        return errors.collect(Collectors.groupingBy(e -> e, Collectors.summingInt(e -> 1)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDU1NjEx", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-396455611", "createdAt": "2020-04-20T13:32:43Z", "commit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozMjo0M1rOGIUn3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozMjo0M1rOGIUn3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM3OTY3OA==", "bodyText": "We can probably update updateErrorsCounts to use getOrDefault (I can't comment on the relevant line directly).", "url": "https://github.com/apache/kafka/pull/8417#discussion_r411379678", "createdAt": "2020-04-20T13:32:43Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AbstractResponse.java", "diffHunk": "@@ -57,6 +59,10 @@ public ByteBuffer serialize(ApiKeys apiKey, short version, int correlationId) {\n         return Collections.singletonMap(error, 1);\n     }\n \n+    protected Map<Errors, Integer> errorCounts(Stream<Errors> errors) {\n+        return errors.collect(Collectors.groupingBy(e -> e, Collectors.summingInt(e -> 1)));\n+    }\n+\n     protected Map<Errors, Integer> errorCounts(Collection<Errors> errors) {\n         Map<Errors, Integer> errorCounts = new HashMap<>();\n         for (Errors error : errors)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NDU3NDgx", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-396457481", "createdAt": "2020-04-20T13:34:56Z", "commit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozNDo1NlrOGIUuJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzozNDo1NlrOGIUuJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM4MTI4Nw==", "bodyText": "Indenting seems wrong?", "url": "https://github.com/apache/kafka/pull/8417#discussion_r411381287", "createdAt": "2020-04-20T13:34:56Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AlterPartitionReassignmentsResponse.java", "diffHunk": "@@ -66,14 +64,13 @@ public int throttleTimeMs() {\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> counts = new HashMap<>();\n         Errors topLevelErr = Errors.forCode(data.errorCode());\n-        counts.put(topLevelErr, counts.getOrDefault(topLevelErr, 0) + 1);\n+        updateErrorCounts(counts, topLevelErr);\n \n-        for (ReassignableTopicResponse topicResponse : data.responses()) {\n-            for (ReassignablePartitionResponse partitionResponse : topicResponse.partitions()) {\n-                Errors error = Errors.forCode(partitionResponse.errorCode());\n-                counts.put(error, counts.getOrDefault(error, 0) + 1);\n-            }\n-        }\n+        data.responses().forEach(topicResponse ->\n+                topicResponse.partitions().forEach(partitionResponse ->\n+                updateErrorCounts(counts, Errors.forCode(partitionResponse.errorCode()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db2d9adfdd491bf185f688dfd87e9742e40bc47"}, "originalPosition": 24}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f2b0db049d54e7f412a5be9a3f97f266d9aaa44", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/7f2b0db049d54e7f412a5be9a3f97f266d9aaa44", "committedDate": "2020-04-21T15:27:52Z", "message": "getOrDefault()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dbf59d3921d353f7d4e18df62310f0dd7ece4b4", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/2dbf59d3921d353f7d4e18df62310f0dd7ece4b4", "committedDate": "2020-04-21T15:27:52Z", "message": "indent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b6f4b8de807754e86a061d184e43fe208bdb9a1", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/6b6f4b8de807754e86a061d184e43fe208bdb9a1", "committedDate": "2020-04-21T15:27:52Z", "message": "Benchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c", "committedDate": "2020-04-21T15:30:53Z", "message": "Revert \"Benchmark\"\n\nThis reverts commit 6b6f4b8de807754e86a061d184e43fe208bdb9a1."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTgwMjcz", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-398180273", "createdAt": "2020-04-22T13:18:12Z", "commit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzoxODoxMlrOGJ17lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzoyMzoyMFrOGJ2LEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3Mzk3NA==", "bodyText": "Indent.", "url": "https://github.com/apache/kafka/pull/8417#discussion_r412973974", "createdAt": "2020-04-22T13:18:12Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AlterPartitionReassignmentsResponse.java", "diffHunk": "@@ -66,14 +64,12 @@ public int throttleTimeMs() {\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> counts = new HashMap<>();\n         Errors topLevelErr = Errors.forCode(data.errorCode());\n-        counts.put(topLevelErr, counts.getOrDefault(topLevelErr, 0) + 1);\n+        updateErrorCounts(counts, topLevelErr);\n \n-        for (ReassignableTopicResponse topicResponse : data.responses()) {\n-            for (ReassignablePartitionResponse partitionResponse : topicResponse.partitions()) {\n-                Errors error = Errors.forCode(partitionResponse.errorCode());\n-                counts.put(error, counts.getOrDefault(error, 0) + 1);\n-            }\n-        }\n+        data.responses().forEach(topicResponse ->\n+            topicResponse.partitions().forEach(partitionResponse ->\n+            updateErrorCounts(counts, Errors.forCode(partitionResponse.errorCode()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NDEyOA==", "bodyText": "Maybe inline.", "url": "https://github.com/apache/kafka/pull/8417#discussion_r412974128", "createdAt": "2020-04-22T13:18:25Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AlterPartitionReassignmentsResponse.java", "diffHunk": "@@ -66,14 +64,12 @@ public int throttleTimeMs() {\n     public Map<Errors, Integer> errorCounts() {\n         Map<Errors, Integer> counts = new HashMap<>();\n         Errors topLevelErr = Errors.forCode(data.errorCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NjkyOA==", "bodyText": "Is there a reason why we are not doing the map within the flatMap?", "url": "https://github.com/apache/kafka/pull/8417#discussion_r412976928", "createdAt": "2020-04-22T13:21:59Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/OffsetCommitResponse.java", "diffHunk": "@@ -95,13 +94,8 @@ public OffsetCommitResponseData data() {\n \n     @Override\n     public Map<Errors, Integer> errorCounts() {\n-        List<Errors> errors = new ArrayList<>();\n-        for (OffsetCommitResponseTopic topic : data.topics()) {\n-            for (OffsetCommitResponsePartition partition : topic.partitions()) {\n-                errors.add(Errors.forCode(partition.errorCode()));\n-            }\n-        }\n-        return errorCounts(errors);\n+        return errorCounts(data.topics().stream().flatMap(topicResult -> topicResult.partitions().stream())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk3NzkzOA==", "bodyText": "Any reason why we don't do the map inside the flatMap?", "url": "https://github.com/apache/kafka/pull/8417#discussion_r412977938", "createdAt": "2020-04-22T13:23:20Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/TxnOffsetCommitResponse.java", "diffHunk": "@@ -91,7 +91,9 @@ public int throttleTimeMs() {\n \n     @Override\n     public Map<Errors, Integer> errorCounts() {\n-        return errorCounts(errors().values());\n+        return errorCounts(data.topics().stream()\n+                .flatMap(topic -> topic.partitions().stream())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8da16bfd88e1c0e84dc99fa362e6e4b5762e95c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc52740ff70d790bdc2927a6000ef45b682e119f", "author": {"user": {"login": "tombentley", "name": "Tom Bentley"}}, "url": "https://github.com/apache/kafka/commit/dc52740ff70d790bdc2927a6000ef45b682e119f", "committedDate": "2020-04-22T13:39:55Z", "message": "Review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MjIyMzY4", "url": "https://github.com/apache/kafka/pull/8417#pullrequestreview-398222368", "createdAt": "2020-04-22T14:01:16Z", "commit": {"oid": "dc52740ff70d790bdc2927a6000ef45b682e119f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 78, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}