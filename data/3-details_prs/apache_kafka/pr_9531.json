{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyNTI1MTE0", "number": 9531, "title": "KAFKA-10661; Add new resigned state for graceful shutdown/initialization", "bodyText": "When initializing the raft state machine after shutting down as a leader, we were previously entering the \"unattached\" state, which means we have no leader and no voted candidate. This was a bug because it allowed a reinitialized leader to cast a vote for a candidate in the same epoch that it was already the leader of. This patch fixes the problem by introducing a new \"resigned\" state which allows us to retain the leader state so that we cannot change our vote and we will not accept additional appends.\nThis patch also revamps the shutdown logic to make use of the new \"resigned\" state. Previously we had a separate path in KafkaRaftClient.poll for the shutdown logic which resulted in some duplication. Instead now we incorporate shutdown behavior into each state's respective logic.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-10-29T19:49:31Z", "url": "https://github.com/apache/kafka/pull/9531", "merged": true, "mergeCommit": {"oid": "f49c6c203f6ce5c4eb643907c7f164b47db65989"}, "closed": true, "closedAt": "2020-11-09T20:52:29Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXitPkgFqTUyMDQ2NzA5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABda4NlJgBqjM5NzQ5NDU0NzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwNDY3MDk5", "url": "https://github.com/apache/kafka/pull/9531#pullrequestreview-520467099", "createdAt": "2020-10-30T08:43:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0Mzo0MVrOHrFwZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQwODo0Mzo0MVrOHrFwZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDk0NTEyNQ==", "bodyText": "If the cluster resigns from candidateState, it will also send EndQuorumEpochRequest to all voters?", "url": "https://github.com/apache/kafka/pull/9531#discussion_r514945125", "createdAt": "2020-10-30T08:43:41Z", "author": {"login": "dengziming"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -1543,9 +1516,40 @@ private long maybeAppendBatches(\n         return timeUnitFlush;\n     }\n \n+    private long pollResigned(long currentTimeMs) throws IOException {\n+        GracefulShutdown shutdown = this.shutdown.get();\n+        ResignedState state = quorum.resignedStateOrThrow();\n+\n+        long endQuorumBackoffMs = maybeSendRequests(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODg2MDI1", "url": "https://github.com/apache/kafka/pull/9531#pullrequestreview-520886025", "createdAt": "2020-10-30T17:29:31Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyOTozMVrOHrZEYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoyOTozMVrOHrZEYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI2MTUzNw==", "bodyText": "If we are shutting down, why we still want to care about election at all?", "url": "https://github.com/apache/kafka/pull/9531#discussion_r515261537", "createdAt": "2020-10-30T17:29:31Z", "author": {"login": "guozhangwang"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -1543,9 +1516,40 @@ private long maybeAppendBatches(\n         return timeUnitFlush;\n     }\n \n+    private long pollResigned(long currentTimeMs) throws IOException {\n+        GracefulShutdown shutdown = this.shutdown.get();\n+        ResignedState state = quorum.resignedStateOrThrow();\n+\n+        long endQuorumBackoffMs = maybeSendRequests(\n+            currentTimeMs,\n+            state.unackedVoters(),\n+            () -> buildEndQuorumEpochRequest(state.preferredSuccessors())\n+        );\n+\n+        final long stateTimeoutMs;\n+        if (shutdown != null) {\n+            // If we are shutting down, then we will remain in the resigned state\n+            // until either the shutdown expires or an election bumps the epoch", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTE0MzU2", "url": "https://github.com/apache/kafka/pull/9531#pullrequestreview-521114356", "createdAt": "2020-10-31T05:25:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNToyNTowM1rOHrlFKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQwNToyNTowM1rOHrlFKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTQ1ODM0NA==", "bodyText": "should this be Math.min(shutdown.remainingTimeMs(), minRequestBackoffMs, state.remainingElectionTimeMs(currentTimeMs))", "url": "https://github.com/apache/kafka/pull/9531#discussion_r515458344", "createdAt": "2020-10-31T05:25:03Z", "author": {"login": "dengziming"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -1560,9 +1558,34 @@ private long pollLeader(long currentTimeMs) {\n         return Math.min(timeUntilFlush, timeUntilSend);\n     }\n \n+    private long maybeSendVoteRequests(\n+        CandidateState state,\n+        long currentTimeMs\n+    ) {\n+        // Continue sending Vote requests as long as we still have a chance to win the election\n+        if (!state.isVoteRejected()) {\n+            return maybeSendRequests(\n+                currentTimeMs,\n+                state.unrecordedVoters(),\n+                this::buildVoteRequest\n+            );\n+        }\n+        return Long.MAX_VALUE;\n+    }\n+\n     private long pollCandidate(long currentTimeMs) throws IOException {\n         CandidateState state = quorum.candidateStateOrThrow();\n-        if (state.isBackingOff()) {\n+        GracefulShutdown shutdown = this.shutdown.get();\n+\n+        if (shutdown != null) {\n+            // If we happen to shutdown while we are a candidate, we will continue\n+            // with the current election until one of the following conditions is met:\n+            //  1) we are elected as leader (which allows us to resign)\n+            //  2) another leader is elected\n+            //  3) the shutdown timer expires\n+            long minRequestBackoffMs = maybeSendVoteRequests(state, currentTimeMs);\n+            return Math.min(shutdown.remainingTimeMs(), minRequestBackoffMs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 224}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI1OTIwNjgw", "url": "https://github.com/apache/kafka/pull/9531#pullrequestreview-525920680", "createdAt": "2020-11-09T04:44:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDo0NDoxOFrOHve0Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwNDo1MDo1MFrOHve5og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU0OTk1OA==", "bodyText": "Why the behavior of pollFollowerAsVoter and pollVoted are different when shutting down? Could the former case still help in casting and completing a vote as well?", "url": "https://github.com/apache/kafka/pull/9531#discussion_r519549958", "createdAt": "2020-11-09T04:44:18Z", "author": {"login": "guozhangwang"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -1601,7 +1618,12 @@ private long pollFollower(long currentTimeMs) throws IOException {\n     }\n \n     private long pollFollowerAsVoter(FollowerState state, long currentTimeMs) throws IOException {\n-        if (state.hasFetchTimeoutExpired(currentTimeMs)) {\n+        GracefulShutdown shutdown = this.shutdown.get();\n+        if (shutdown != null) {\n+            // If we are a follower, then we can shutdown immediately. We want to\n+            // skip the transition to candidate in any case.\n+            return 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 250}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTU1MTM5NA==", "bodyText": "Makes me thinking: if we have an even number sized quorum (say 2N), and the leader is resigning. Then before the leader shutdown we need N+1 votes, while after the leader shutdown, the quorum size shrink to 2N-1 and we would only need N votes. So if the resigning leader gives it a vote to a candidate and then shutdown, while the candidates thinks they only need N votes, would that potentially result in two candidates claiming victory --- somehow this sounds quite close to the real world :P --- each with N votes while one of them has the vote from the resigned leader?", "url": "https://github.com/apache/kafka/pull/9531#discussion_r519551394", "createdAt": "2020-11-09T04:50:50Z", "author": {"login": "guozhangwang"}, "path": "raft/src/main/java/org/apache/kafka/raft/QuorumState.java", "diffHunk": "@@ -21,18 +21,21 @@\n import org.slf4j.Logger;\n \n import java.io.IOException;\n+import java.util.Collections;\n import java.util.HashSet;\n+import java.util.List;\n import java.util.Optional;\n import java.util.OptionalInt;\n import java.util.Random;\n import java.util.Set;\n import java.util.stream.Collectors;\n \n /**\n- * This class is responsible for managing the current state of this node and ensuring only\n- * valid state transitions.\n+ * This class is responsible for managing the current state of this node and ensuring\n+ * only valid state transitions. Below we define the possible state transitions and\n+ * how they are triggered:\n  *\n- * Unattached =>\n+ * Unattached|Resigned =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "579169d7ae9c6c128b13c269dc7af148775cfca3", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/579169d7ae9c6c128b13c269dc7af148775cfca3", "committedDate": "2020-11-09T17:26:52Z", "message": "KAFKA-10661; Add new resigned state for graceful shutdown/initialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "40d11d182db914310b25c85085fe088f466bc56a", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/40d11d182db914310b25c85085fe088f466bc56a", "committedDate": "2020-11-09T17:26:52Z", "message": "Use resigned state only for leaders"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95ceb1a8d35cb2692b98eab9637ca203a6f06828", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/95ceb1a8d35cb2692b98eab9637ca203a6f06828", "committedDate": "2020-11-09T17:26:52Z", "message": "Fix compilation error in `RequestQuotaTest`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "631ba91121a26b0171ab490c92991e628ce3658c", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/631ba91121a26b0171ab490c92991e628ce3658c", "committedDate": "2020-11-09T17:26:52Z", "message": "Remove unused variable in `KafkaNetworkChannelTest`"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "631ba91121a26b0171ab490c92991e628ce3658c", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/631ba91121a26b0171ab490c92991e628ce3658c", "committedDate": "2020-11-09T17:26:52Z", "message": "Remove unused variable in `KafkaNetworkChannelTest`"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2634, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}