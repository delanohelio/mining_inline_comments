{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1ODk4OTUx", "number": 9726, "title": "KAFKA-10833: Expose task configurations in Connect REST API (KIP-661)", "bodyText": "This PR adds a new REST endpoint to Connect: GET /{connector}/tasks-config, that returns the configuration of all tasks for the connector.\nThis changes is for KIP-661\nCo-authored-by: Mickael Maison mickael.maison@gmail.com\nCo-authored-by: Oliver Dineen dineeno@uk.ibm.com\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-10T12:24:14Z", "url": "https://github.com/apache/kafka/pull/9726", "merged": true, "mergeCommit": {"oid": "b78fa9cea24b9f0abff45ca873a49cdb7370430d"}, "closed": true, "closedAt": "2021-02-05T01:01:07Z", "author": {"login": "mimaison"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABd2EpYfAFqTU4MDk4NDg2MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd28Y-qAH2gAyNTM1ODk4OTUxOmYxZGViMTZkNDhjMjRkYzFlZjVmYTAxMWEwNTUwZTQ1ZjQ5Zjg5ODE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwOTg0ODYx", "url": "https://github.com/apache/kafka/pull/9726#pullrequestreview-580984861", "createdAt": "2021-02-02T04:55:45Z", "commit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwNDo1NTo0NVrOId_pVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMlQwNTowODo0NlrOId_32g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODMyMjM5MA==", "bodyText": "I see the symmetry with connectorInfo above. But here we return a map, in which case it might be safer and nicer to return an empty map? Wdyt?\nIn terms of response the result will be the same because if the connector is found it will always have a map of maps.", "url": "https://github.com/apache/kafka/pull/9726#discussion_r568322390", "createdAt": "2021-02-02T04:55:45Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/AbstractHerder.java", "diffHunk": "@@ -265,6 +265,20 @@ public ConnectorInfo connectorInfo(String connector) {\n         );\n     }\n \n+    protected Map<ConnectorTaskId, Map<String, String>> buildTasksConfig(String connector) {\n+        final ClusterConfigState configState = configBackingStore.snapshot();\n+\n+        if (!configState.contains(connector))\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODMyNTAzOQ==", "bodyText": "I agree with your choice to preserve symmetry. Yet some features need to find their way to the codebase eventually. There's a PR in progress to apply some basic modernization and reduce boilerplate. Want to use a lambda and skip the need to synchronize merges with: #9867 ?", "url": "https://github.com/apache/kafka/pull/9726#discussion_r568325039", "createdAt": "2021-02-02T05:05:02Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java", "diffHunk": "@@ -744,6 +744,29 @@ public Void call() throws Exception {\n         );\n     }\n \n+    @Override\n+    public void tasksConfig(String connName, final Callback<Map<ConnectorTaskId, Map<String, String>>> callback) {\n+        log.trace(\"Submitting tasks config request {}\", connName);\n+\n+        addRequest(\n+                new Callable<Void>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODMyNTM2Mw==", "bodyText": "If you change above, don't forget to check with empty here.", "url": "https://github.com/apache/kafka/pull/9726#discussion_r568325363", "createdAt": "2021-02-02T05:06:04Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/standalone/StandaloneHerder.java", "diffHunk": "@@ -434,4 +434,15 @@ public int hashCode() {\n             return Objects.hash(seq);\n         }\n     }\n+\n+    @Override\n+    public void tasksConfig(String connName, Callback<Map<ConnectorTaskId, Map<String, String>>> callback) {\n+        Map<ConnectorTaskId, Map<String, String>> tasksConfig = buildTasksConfig(connName);\n+        if (tasksConfig == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODMyNTU4NQ==", "bodyText": "nit: extra line", "url": "https://github.com/apache/kafka/pull/9726#discussion_r568325585", "createdAt": "2021-02-02T05:06:55Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java", "diffHunk": "@@ -519,6 +519,38 @@ public void testGetConnectorConfigConnectorNotFound() throws Throwable {\n         PowerMock.verifyAll();\n     }\n \n+    @Test\n+    public void testGetTasksConfig() throws Throwable {\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2ODMyNjEwNg==", "bodyText": "Should we add one more test to test multiple tasks with multiple config properties?", "url": "https://github.com/apache/kafka/pull/9726#discussion_r568326106", "createdAt": "2021-02-02T05:08:46Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResourceTest.java", "diffHunk": "@@ -519,6 +519,38 @@ public void testGetConnectorConfigConnectorNotFound() throws Throwable {\n         PowerMock.verifyAll();\n     }\n \n+    @Test\n+    public void testGetTasksConfig() throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "828ebf650e4c9b8c9c4da74f047179dfb82edb9c", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/828ebf650e4c9b8c9c4da74f047179dfb82edb9c", "committedDate": "2021-02-04T18:36:38Z", "message": "KAFKA-10833: Expose task configurations in Connect REST API\n\nThis PR adds a new REST endpoint to Connect: GET /{connector}/tasks-config, that returns the configuration of all tasks for the connector.\n\nCo-authored-by: Mickael Maison <mickael.maison@gmail.com>\nCo-authored-by: Oliver Dineen <dineeno@uk.ibm.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "696531961c6b53dd6489008fbd0dbb0da3d0ada1", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/696531961c6b53dd6489008fbd0dbb0da3d0ada1", "committedDate": "2021-02-04T19:54:48Z", "message": "Address feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28a0b26b768903a925a69c288be5415212d8504a", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/28a0b26b768903a925a69c288be5415212d8504a", "committedDate": "2020-12-10T12:16:07Z", "message": "KAFKA-10833: Expose task configurations in Connect REST API\n\nThis PR adds a new REST endpoint to Connect: GET /{connector}/tasks-config, that returns the configuration of all tasks for the connector.\n\nCo-authored-by: Mickael Maison <mickael.maison@gmail.com>\nCo-authored-by: Oliver Dineen <dineeno@uk.ibm.com>"}, "afterCommit": {"oid": "696531961c6b53dd6489008fbd0dbb0da3d0ada1", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/696531961c6b53dd6489008fbd0dbb0da3d0ada1", "committedDate": "2021-02-04T19:54:48Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgzNzY0MDQ4", "url": "https://github.com/apache/kafka/pull/9726#pullrequestreview-583764048", "createdAt": "2021-02-04T19:58:26Z", "commit": {"oid": "696531961c6b53dd6489008fbd0dbb0da3d0ada1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQxOTo1ODoyNlrOIgE5sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wNFQxOTo1ODoyNlrOIgE5sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU3MDUwNTY1MA==", "bodyText": "nit: this alignment might be a bit off. We can follow the pattern of 2 tabs with first and last line on their own if that looks better I guess.", "url": "https://github.com/apache/kafka/pull/9726#discussion_r570505650", "createdAt": "2021-02-04T19:58:26Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/rest/resources/ConnectorsResource.java", "diffHunk": "@@ -188,6 +188,16 @@ public ConnectorInfo getConnector(final @PathParam(\"connector\") String connector\n         return completeOrForwardRequest(cb, \"/connectors/\" + connector + \"/config\", \"GET\", headers, null, forward);\n     }\n \n+    @GET\n+    @Path(\"/{connector}/tasks-config\")\n+    public Map<ConnectorTaskId, Map<String, String>> getTasksConfig(final @PathParam(\"connector\") String connector,\n+                                                  final @Context HttpHeaders headers,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "696531961c6b53dd6489008fbd0dbb0da3d0ada1"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1deb16d48c24dc1ef5fa011a0550e45f49f8981", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/f1deb16d48c24dc1ef5fa011a0550e45f49f8981", "committedDate": "2021-02-04T22:10:44Z", "message": "Fix alignment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2220, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}