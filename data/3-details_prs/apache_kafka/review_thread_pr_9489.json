{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA5Mjg3ODQ2", "number": 9489, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDoyNDo0OFrOE3d0XQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTo0NDo0MFrOE4OLSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTk1Njc3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDoyNDo0OFrOHw00xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDoyNDo0OFrOHw00xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk1OTE3NA==", "bodyText": "Could we log the owned task here as well?", "url": "https://github.com/apache/kafka/pull/9489#discussion_r520959174", "createdAt": "2020-11-11T00:24:48Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,14 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this when we actually processed some records to avoid flooding INFO-level logs when there are\n+            // no records on the input topics\n+            if (totalProcessed > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f9dd7840f5f1da6811597ce499337e100dab07"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2NTk3MTY2OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMDozMToxOVrOHw09WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQwMjo1NTowNFrOHw6tfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2MTM2OA==", "bodyText": "Is it important to make the distinction between \"Processed zero records, going to poll again\" and \"Finished processing 0 records, going to poll again\"?\nAlso if we are not saying its processed anything maybe we should log what it is pulling from", "url": "https://github.com/apache/kafka/pull/9489#discussion_r520961368", "createdAt": "2020-11-11T00:31:19Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,14 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this when we actually processed some records to avoid flooding INFO-level logs when there are\n+            // no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Finished processing {} records, going to poll again\", totalProcessed);\n+            } else {\n+                log.debug(\"Processed zero records, going to poll again\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65f9dd7840f5f1da6811597ce499337e100dab07"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk3MDk3Mg==", "bodyText": "Reworked it a bit, lmk what you think", "url": "https://github.com/apache/kafka/pull/9489#discussion_r520970972", "createdAt": "2020-11-11T00:54:36Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,14 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this when we actually processed some records to avoid flooding INFO-level logs when there are\n+            // no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Finished processing {} records, going to poll again\", totalProcessed);\n+            } else {\n+                log.debug(\"Processed zero records, going to poll again\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2MTM2OA=="}, "originalCommit": {"oid": "65f9dd7840f5f1da6811597ce499337e100dab07"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTA1NTYxNQ==", "bodyText": "Looks good", "url": "https://github.com/apache/kafka/pull/9489#discussion_r521055615", "createdAt": "2020-11-11T02:55:04Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,14 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this when we actually processed some records to avoid flooding INFO-level logs when there are\n+            // no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Finished processing {} records, going to poll again\", totalProcessed);\n+            } else {\n+                log.debug(\"Processed zero records, going to poll again\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDk2MTM2OA=="}, "originalCommit": {"oid": "65f9dd7840f5f1da6811597ce499337e100dab07"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzg2NDYxOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTo0MTozMlrOHyAxWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMjo1Njo1M1rOHyXuuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIwMzQ4Mg==", "bodyText": "This line looks about the same as L665. I'm wondering if we really need the \"else\" in this case.", "url": "https://github.com/apache/kafka/pull/9489#discussion_r522203482", "createdAt": "2020-11-12T15:41:32Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,16 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this at INFO when we actually processed some records to avoid flooding INFO-level logs when\n+            // there are no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Processed {} records for tasks {}, polling for more records now\",\n+                         totalProcessed, taskManager.activeTaskIds());\n+            } else {\n+                log.debug(\"Processed {} records for tasks {}, polling for more records now\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385fd21d07e8ecf890faaba64ea21025da3c3181"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU3OTY0MQ==", "bodyText": "Fair enough", "url": "https://github.com/apache/kafka/pull/9489#discussion_r522579641", "createdAt": "2020-11-13T02:56:53Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,16 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this at INFO when we actually processed some records to avoid flooding INFO-level logs when\n+            // there are no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Processed {} records for tasks {}, polling for more records now\",\n+                         totalProcessed, taskManager.activeTaskIds());\n+            } else {\n+                log.debug(\"Processed {} records for tasks {}, polling for more records now\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIwMzQ4Mg=="}, "originalCommit": {"oid": "385fd21d07e8ecf890faaba64ea21025da3c3181"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzg3OTc5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNTo0NDo0MFrOHyA7Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMzoyODo0OFrOHyYbJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIwNTk1OQ==", "bodyText": "Since this is at the end of runOnce, I'm wondering if it also makes sense to log whether we committed or punctuated, and whether/how many records we polled at the beginning of the method.\nBasically, it seems like, if it's a good idea to log some information once per cycle, then it's probably a good idea to summarize everything you'd want to know.", "url": "https://github.com/apache/kafka/pull/9489#discussion_r522205959", "createdAt": "2020-11-12T15:44:40Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,16 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this at INFO when we actually processed some records to avoid flooding INFO-level logs when\n+            // there are no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Processed {} records for tasks {}, polling for more records now\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "385fd21d07e8ecf890faaba64ea21025da3c3181"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjU5MTAxMw==", "bodyText": "Yeah good call. I promoted one of the debug logs you added earlier to log the number of records polled at INFO. I think this should be reasonable but we can always demote it again if it's still showing up too frequently", "url": "https://github.com/apache/kafka/pull/9489#discussion_r522591013", "createdAt": "2020-11-13T03:28:48Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -703,6 +703,16 @@ void runOnce() {\n             // we record the ratio out of the while loop so that the accumulated latency spans over\n             // multiple iterations with reasonably large max.num.records and hence is less vulnerable to outliers\n             taskManager.recordTaskProcessRatio(totalProcessLatency, now);\n+\n+            // Only log this at INFO when we actually processed some records to avoid flooding INFO-level logs when\n+            // there are no records on the input topics\n+            if (totalProcessed > 0) {\n+                log.info(\"Processed {} records for tasks {}, polling for more records now\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjIwNTk1OQ=="}, "originalCommit": {"oid": "385fd21d07e8ecf890faaba64ea21025da3c3181"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3966, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}