{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MTY1Njg5", "number": 8891, "title": "KAFKA-10143: Improve test coverage for throttle changes during reassignment", "bodyText": "In KIP-455, we changed the behavior of the reassignment tool so that the --additional flag is required in order to use the command to alter the throttle. This patch improves the documentation to make this clearer and adds some integration tests to validate the behavior.\nThis patch also contains a few minor code quality improvements:\n\nFactor out a helper calculateCurrentMoveMap from calculateMoveMap to compute the current move map, which makes the logic easier to follow\nRename calculateMoveMap to calculateProposedMoveMap to make intention clearer\nSplit modifyBrokerThrottles into two methods modifyLogDirThrottle and modifyInterBrokerThrottle\nMove logic to compute leader and follower throttles into a new method modifyReassignmentThrottle, which takes it out of the execution path when log dir throttles are changed\nMinor stylistic improvements such as replacing .map.flatten with .flatMap\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-18T00:46:56Z", "url": "https://github.com/apache/kafka/pull/8891", "merged": true, "mergeCommit": {"oid": "aba9036eb681597911343510e246de4fc547a479"}, "closed": true, "closedAt": "2020-10-12T19:36:47Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcshorfgFqTQzMzQ4NTEzNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR2701ABqjM4Njc1MTQ3NDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDg1MTM0", "url": "https://github.com/apache/kafka/pull/8891#pullrequestreview-433485134", "createdAt": "2020-06-18T17:10:03Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzoxMDowM1rOGl4nQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNzoxMDowM1rOGl4nQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjM3ODA0OA==", "bodyText": "It would be good to include the flags needed to pass in a throttle in this message", "url": "https://github.com/apache/kafka/pull/8891#discussion_r442378048", "createdAt": "2020-06-18T17:10:03Z", "author": {"login": "cmccabe"}, "path": "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala", "diffHunk": "@@ -930,6 +935,38 @@ object ReassignPartitionsCommand extends Logging {\n     (brokerListToReassign, topicsToReassign)\n   }\n \n+  /**\n+   * The entry point for --alter-throttles. At least one throttle value must be provided.\n+   *\n+   * @param admin The Admin instance to use\n+   * @param interBrokerThrottle The new inter-broker throttle or -1 to leave it unchanged\n+   * @param logDirThrottle The new alter-log-dir throttle or -1 to leave it unchanged\n+   */\n+  def alterThrottles(admin: Admin,\n+                     interBrokerThrottle: Long,\n+                     logDirThrottle: Long): Unit = {\n+    if (interBrokerThrottle < 0 && logDirThrottle < 0) {\n+      throw new TerseReassignmentFailureException(\"No valid throttle values provided to --alter-throttle\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjg2Mzkw", "url": "https://github.com/apache/kafka/pull/8891#pullrequestreview-433686390", "createdAt": "2020-06-18T22:21:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyMTo1NlrOGmCGcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyMTo1NlrOGmCGcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzMzQ4OA==", "bodyText": "seems to break the symmetry a bit, doesn't it?  Although, I don't feel strongly about this.", "url": "https://github.com/apache/kafka/pull/8891#discussion_r442533488", "createdAt": "2020-06-18T22:21:56Z", "author": {"login": "cmccabe"}, "path": "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala", "diffHunk": "@@ -1685,10 +1702,9 @@ object ReassignPartitionsCommand extends Logging {\n       opts.cancelOpt -> collection.immutable.Seq(\n         opts.reassignmentJsonFileOpt\n       ),\n-      opts.listOpt -> collection.immutable.Seq(\n-      )\n+      opts.listOpt -> collection.immutable.Seq.empty", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 340}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjg5MDMz", "url": "https://github.com/apache/kafka/pull/8891#pullrequestreview-433689033", "createdAt": "2020-06-18T22:28:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyODoxOVrOGmCOzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMjoyODoxOVrOGmCOzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjUzNTYzMA==", "bodyText": "It seems like the thing to agree on is the final state, right?  This comparison is taking into account the current replica set which may change over the course of the reassignment...", "url": "https://github.com/apache/kafka/pull/8891#discussion_r442535630", "createdAt": "2020-06-18T22:28:19Z", "author": {"login": "cmccabe"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -647,8 +647,14 @@ class KafkaController(val config: KafkaConfig,\n         info(s\"Skipping reassignment of $tp since the topic is currently being deleted\")\n         new ApiError(Errors.UNKNOWN_TOPIC_OR_PARTITION, \"The partition does not exist.\")\n       } else {\n-        val assignedReplicas = controllerContext.partitionReplicaAssignment(tp)\n-        if (assignedReplicas.nonEmpty) {\n+        val assignment = controllerContext.partitionFullReplicaAssignment(tp)\n+        if (assignment == ReplicaAssignment.empty) {\n+          new ApiError(Errors.UNKNOWN_TOPIC_OR_PARTITION, \"The partition does not exist.\")\n+        } else if (assignment == reassignment) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NTAyMzI3", "url": "https://github.com/apache/kafka/pull/8891#pullrequestreview-434502327", "createdAt": "2020-06-21T13:39:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMzozOTo1NlrOGmsCNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMVQxMzozOTo1NlrOGmsCNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzIyMDUzNQ==", "bodyText": "It does nothing now when the value is equal to 0. Does it break compatibility (Although we had said that  The throttle rate should be at least 1 KB/s.)?  By contrast, the new method modifyInterBrokerThrottle send request even if the value is 0. why?", "url": "https://github.com/apache/kafka/pull/8891#discussion_r443220535", "createdAt": "2020-06-21T13:39:56Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala", "diffHunk": "@@ -962,22 +963,18 @@ object ReassignPartitionsCommand extends Logging {\n     verifyBrokerIds(adminClient, proposedParts.values.flatten.toSet)\n     val currentParts = getReplicaAssignmentForPartitions(adminClient, proposedParts.keySet.toSet)\n     println(currentPartitionReplicaAssignmentToString(proposedParts, currentParts))\n-    if (interBrokerThrottle >= 0 || logDirThrottle >= 0) {\n+\n+    if (interBrokerThrottle > 0 || logDirThrottle > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 72}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2MDQ5MDY3", "url": "https://github.com/apache/kafka/pull/8891#pullrequestreview-506049067", "createdAt": "2020-10-10T00:56:14Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDo1NjoxNFrOHfb35g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMTowMzoxNlrOHfb62g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNDU4Mg==", "bodyText": "Nit: this can go on the line above?", "url": "https://github.com/apache/kafka/pull/8891#discussion_r502724582", "createdAt": "2020-10-10T00:56:14Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala", "diffHunk": "@@ -1213,22 +1211,38 @@ object ReassignPartitionsCommand extends Logging {\n    * @return                  A map from partition objects to error strings.\n    */\n   def cancelPartitionReassignments(adminClient: Admin,\n-                                  reassignments: Set[TopicPartition])\n+                                   reassignments: Set[TopicPartition])\n   : Map[TopicPartition, Throwable] = {\n     val results: Map[TopicPartition, KafkaFuture[Void]] =\n       adminClient.alterPartitionReassignments(reassignments.map {\n           (_, (None: Option[NewPartitionReassignment]).asJava)\n         }.toMap.asJava).values().asScala\n     results.flatMap {\n-      case (part, future) => {\n+      case (part, future) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 143}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNDg3MA==", "bodyText": "Nit: if you're using triple quotes, you don't need to end them at every line.", "url": "https://github.com/apache/kafka/pull/8891#discussion_r502724870", "createdAt": "2020-10-10T00:58:52Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/admin/ReassignPartitionsIntegrationTest.scala", "diffHunk": "@@ -162,6 +162,39 @@ class ReassignPartitionsIntegrationTest extends ZooKeeperTestHarness {\n       localLogOrException(part).highWatermark)\n   }\n \n+  @Test\n+  def testAlterReassignmentThrottle(): Unit = {\n+    cluster = new ReassignPartitionsTestCluster(zkConnect)\n+    cluster.setup()\n+    cluster.produceMessages(\"foo\", 0, 50)\n+    cluster.produceMessages(\"baz\", 2, 60)\n+    val assignment = \"\"\"{\"version\":1,\"partitions\":\"\"\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNTIwNA==", "bodyText": "Nit: can we just use string interpolation?", "url": "https://github.com/apache/kafka/pull/8891#discussion_r502725204", "createdAt": "2020-10-10T01:01:52Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/admin/ReassignPartitionsIntegrationTest.scala", "diffHunk": "@@ -407,17 +423,90 @@ class ReassignPartitionsIntegrationTest extends ZooKeeperTestHarness {\n     waitForBrokerLevelThrottles(unthrottledBrokerConfigs)\n \n     // Wait for the directory movement to complete.\n-    waitForVerifyAssignment(cluster.adminClient, assignment, true,\n+    waitForVerifyAssignment(cluster.adminClient, reassignment.json, true,\n         VerifyAssignmentResult(Map(\n-          new TopicPartition(\"foo\", 0) -> PartitionReassignmentState(Seq(0, 1, 2), Seq(0, 1, 2), true)\n+          topicPartition -> PartitionReassignmentState(Seq(0, 1, 2), Seq(0, 1, 2), true)\n         ), false, Map(\n-          new TopicPartitionReplica(\"foo\", 0, 0) -> CompletedMoveState(newFoo1Dir)\n+          new TopicPartitionReplica(topicPartition.topic, topicPartition.partition, 0) ->\n+            CompletedMoveState(reassignment.targetDir)\n         ), false))\n \n     val info1 = new BrokerDirs(cluster.adminClient.describeLogDirs(0.to(4).\n         map(_.asInstanceOf[Integer]).asJavaCollection), 0)\n-    assertEquals(newFoo1Dir,\n-      info1.curLogDirs.getOrElse(new TopicPartition(\"foo\", 0), \"\"))\n+    assertEquals(reassignment.targetDir,\n+      info1.curLogDirs.getOrElse(topicPartition, \"\"))\n+  }\n+\n+  @Test\n+  def testAlterLogDirReassignmentThrottle(): Unit = {\n+    val topicPartition = new TopicPartition(\"foo\", 0)\n+\n+    cluster = new ReassignPartitionsTestCluster(zkConnect)\n+    cluster.setup()\n+    cluster.produceMessages(topicPartition.topic, topicPartition.partition, 700)\n+\n+    val targetBrokerId = 0\n+    val replicas = Seq(0, 1, 2)\n+    val reassignment = buildLogDirReassignment(topicPartition, targetBrokerId, replicas)\n+\n+    // Start the replica move with a low throttle so it does not complete\n+    val initialLogDirThrottle = 1L\n+    runExecuteAssignment(cluster.adminClient, false, reassignment.json,\n+      interBrokerThrottle = -1L, initialLogDirThrottle)\n+    waitForLogDirThrottle(Set(0), initialLogDirThrottle)\n+\n+    // Now increase the throttle and verify that the log dir movement completes\n+    val updatedLogDirThrottle = 3000000L\n+    runExecuteAssignment(cluster.adminClient, additional = true, reassignment.json,\n+      interBrokerThrottle = -1L, replicaAlterLogDirsThrottle = updatedLogDirThrottle)\n+    waitForLogDirThrottle(Set(0), updatedLogDirThrottle)\n+\n+    waitForVerifyAssignment(cluster.adminClient, reassignment.json, true,\n+      VerifyAssignmentResult(Map(\n+        topicPartition -> PartitionReassignmentState(Seq(0, 1, 2), Seq(0, 1, 2), true)\n+      ), false, Map(\n+        new TopicPartitionReplica(topicPartition.topic, topicPartition.partition, targetBrokerId) ->\n+          CompletedMoveState(reassignment.targetDir)\n+      ), false))\n+  }\n+\n+  case class LogDirReassignment(json: String, currentDir: String, targetDir: String)\n+\n+  private def buildLogDirReassignment(topicPartition: TopicPartition,\n+                                      brokerId: Int,\n+                                      replicas: Seq[Int]): LogDirReassignment = {\n+\n+    val describeLogDirsResult = cluster.adminClient.describeLogDirs(\n+      0.to(4).map(_.asInstanceOf[Integer]).asJavaCollection)\n+\n+    val logDirInfo = new BrokerDirs(describeLogDirsResult, brokerId)\n+    assertTrue(logDirInfo.futureLogDirs.isEmpty)\n+\n+    val currentDir = logDirInfo.curLogDirs(topicPartition)\n+    val newDir = logDirInfo.logDirs.find(!_.equals(currentDir)).get\n+\n+    val logDirs = replicas.map { replicaId =>\n+      if (replicaId == brokerId)\n+        \"\\\"%s\\\"\".format(newDir)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 291}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcyNTMzOA==", "bodyText": "Nit: move replica to the previous line?", "url": "https://github.com/apache/kafka/pull/8891#discussion_r502725338", "createdAt": "2020-10-10T01:03:16Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/admin/ReassignPartitionsCommand.scala", "diffHunk": "@@ -1213,22 +1211,38 @@ object ReassignPartitionsCommand extends Logging {\n    * @return                  A map from partition objects to error strings.\n    */\n   def cancelPartitionReassignments(adminClient: Admin,\n-                                  reassignments: Set[TopicPartition])\n+                                   reassignments: Set[TopicPartition])\n   : Map[TopicPartition, Throwable] = {\n     val results: Map[TopicPartition, KafkaFuture[Void]] =\n       adminClient.alterPartitionReassignments(reassignments.map {\n           (_, (None: Option[NewPartitionReassignment]).asJava)\n         }.toMap.asJava).values().asScala\n     results.flatMap {\n-      case (part, future) => {\n+      case (part, future) =>\n         try {\n           future.get()\n           None\n         } catch {\n           case t: ExecutionException => Some(part, t.getCause())\n         }\n+    }\n+  }\n+\n+  private def calculateCurrentMoveMap(currentReassignments: Map[TopicPartition, PartitionReassignment]): MoveMap = {\n+    val moveMap = new mutable.HashMap[String, mutable.Map[Int, PartitionMove]]()\n+    // Add the current reassignments to the move map.\n+    currentReassignments.foreach { case (part, reassignment) =>\n+      val move = PartitionMove(new mutable.HashSet[Int](), new mutable.HashSet[Int]())\n+      reassignment.replicas.forEach {\n+        replica => move.sources += replica", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 159}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ddb423c8616bfde40a562b9ba6ff03922d835a", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/38ddb423c8616bfde40a562b9ba6ff03922d835a", "committedDate": "2020-10-12T16:49:09Z", "message": "KAFKA-10143; Restore ability to change throttle of active reassignment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a53a5f5f0d0875b405f4eac1fd7a56054583c60f", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/a53a5f5f0d0875b405f4eac1fd7a56054583c60f", "committedDate": "2020-10-12T16:49:09Z", "message": "Drop --alter-throttle and modify integration tests to use --additional instead"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f82c84abdb1bdf8eada086f369b6ca3571ca5c9", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/9f82c84abdb1bdf8eada086f369b6ca3571ca5c9", "committedDate": "2020-10-12T16:49:09Z", "message": "Revert changes in controller and throttle range check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2b340f502a469ff68f66da24b711aa969891779", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/b2b340f502a469ff68f66da24b711aa969891779", "committedDate": "2020-10-12T16:49:09Z", "message": "Fix stylistic issues"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b2b340f502a469ff68f66da24b711aa969891779", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/b2b340f502a469ff68f66da24b711aa969891779", "committedDate": "2020-10-12T16:49:09Z", "message": "Fix stylistic issues"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 657, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}