{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDM5NDM5", "number": 8270, "title": "KAFKA-9216: Enforce internal config topic settings for Connect workers during startup", "bodyText": "Currently, if Kafka Connect will create its config backing topic with a fire and forget approach.\nThis is fine unless someone has manually created that topic already with the wrong partition count.\nIn such a case Kafka Connect \"may\" run for some time.\nEspecially if it's in standalone mode and once switched to distributed mode it will almost certainly fail.\nTo counter this I've added a check when the KafkaConfigBackingStore is starting.\nThis check will throw a ConfigException if there is more than one partition in the backing store.\nThis exception is then caught upstream and logged by either:\n\nclass: DistributedHerder, method: run\nclass: ConnectStandalone, method: main\n\nAfter a review I don't believe it impacts any other upstream code.\nFinally, to supper this new functionality I've added a public method to KafkaBasedLog which returns the partition count and a variable to store this.\nAnd, I've created a unit test in KafkaConfigBackingStoreTest to verify the behaviour.", "createdAt": "2020-03-11T01:32:29Z", "url": "https://github.com/apache/kafka/pull/8270", "merged": true, "mergeCommit": {"oid": "9a0b694a6686d0dc165d7dab54be0f77535582fa"}, "closed": true, "closedAt": "2020-06-07T19:42:01Z", "author": {"login": "Evelyn-Bayes"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcSPIeSgFqTM4MzM2MTA3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpBIDsgFqTQyNTg0NzI1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMzYxMDc1", "url": "https://github.com/apache/kafka/pull/8270#pullrequestreview-383361075", "createdAt": "2020-03-29T00:21:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDoyMToyNFrOF9NV1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOVQwMDo0NzozMlrOF9NdgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjAzNw==", "bodyText": "nit: related to the naming comment above.", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726037", "createdAt": "2020-03-29T00:21:24Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java", "diffHunk": "@@ -759,6 +787,11 @@ private void expectConfigure() throws Exception {\n                 .andReturn(storeLog);\n     }\n \n+    private void expectGetPartitionCount(int partitionCount) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjA0Mw==", "bodyText": "nit: traditionally we skip the get/set prefixes in method names in this code base (there maybe a few counter examples floating around).\nHow about, partitionCount?", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726043", "createdAt": "2020-03-29T00:21:32Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -237,6 +239,9 @@ public void send(K key, V value, org.apache.kafka.clients.producer.Callback call\n         producer.send(new ProducerRecord<>(topic, key, value), callback);\n     }\n \n+    public int getPartitionCount() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyNjA0NQ==", "bodyText": "we have the topic name as member variable topic. Probably best if we use it as well.\nHere's a suggestion, after checking https://kafka.apache.org/documentation/#connect_running\n            String msg = String.format(\"Topic '%s' supplied via the '%s' property is required \"\n                    + \"to have a single partition in order to guarantee consistency of \"\n                    + \"connector configurations but found %d partitions.\",\n                    topic, DistributedConfig.CONFIG_TOPIC_CONFIG, partitionCount);\n            throw new ConfigException(msg);", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399726045", "createdAt": "2020-03-29T00:21:35Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java", "diffHunk": "@@ -249,6 +249,13 @@ public void start() {\n         // Before startup, callbacks are *not* invoked. You can grab a snapshot after starting -- just take care that\n         // updates can continue to occur in the background\n         configLog.start();\n+\n+        int partitionCount = configLog.getPartitionCount();\n+        if (partitionCount > 1) {\n+            throw new ConfigException(\"KafkaConfigBackingStore must have exactly 1 partition but found \" + partitionCount + \", check topic set by \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTcyODAwMQ==", "bodyText": "The test looks great!\nBut fyi, we have org.junit.Assert.assertThrows; and org.hamcrest.MatcherAssert.assertThat, org.hamcrest.CoreMatchers.containsString in our disposal now, that allow for better assertions in tests that throw exceptions (added the full classnames because they are conflicts with deprecated methods in junit)", "url": "https://github.com/apache/kafka/pull/8270#discussion_r399728001", "createdAt": "2020-03-29T00:47:32Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/storage/KafkaConfigBackingStoreTest.java", "diffHunk": "@@ -751,6 +764,21 @@ public void testPutTaskConfigsDoesNotResolveAllInconsistencies() throws Exceptio\n         PowerMock.verifyAll();\n     }\n \n+    @Test(expected = ConfigException.class)\n+    public void testExceptionOnStartWhenConfigTopicHasMultiplePartitions() throws Exception {\n+        expectConfigure();\n+        expectStart(Collections.emptyList(), Collections.emptyMap());\n+\n+        expectGetPartitionCount(2);\n+\n+        PowerMock.replayAll();\n+\n+        configStorage.setupAndCreateKafkaBasedLog(TOPIC, DEFAULT_DISTRIBUTED_CONFIG);\n+        configStorage.start();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab2cd8d11d360e63b378e298d3201a23fa04d0dd", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/ab2cd8d11d360e63b378e298d3201a23fa04d0dd", "committedDate": "2020-06-07T14:34:33Z", "message": "KAFKA-9216: Throw exception when KafkaConfigBackingStore has more then 1 partition"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b419bb50854965e863abdba9bfd7e07d6efd6929", "author": {"user": {"login": "rhauch", "name": "Randall Hauch"}}, "url": "https://github.com/apache/kafka/commit/b419bb50854965e863abdba9bfd7e07d6efd6929", "committedDate": "2020-06-07T15:17:33Z", "message": "KAFKA-9216: Incorporated feedback from review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1ODQ3MjUw", "url": "https://github.com/apache/kafka/pull/8270#pullrequestreview-425847250", "createdAt": "2020-06-07T19:35:41Z", "commit": {"oid": "b419bb50854965e863abdba9bfd7e07d6efd6929"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 223, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}