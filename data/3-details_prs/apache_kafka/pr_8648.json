{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NDQxNTIw", "number": 8648, "title": "KAFKA-9966: add internal assignment listener to stabilize eos-beta upgrade test", "bodyText": "Adds an internal assignment listener interface with a callback that exposes the assignment stability. A useful implementation that tracks the number of stable assignments is available in IntegrationTestUtils,  and leveraged to fix the flaky EOSBetaUpgradeTest, but any implementation can be plugged in to meet the specific needs of a test.", "createdAt": "2020-05-12T02:07:06Z", "url": "https://github.com/apache/kafka/pull/8648", "merged": true, "mergeCommit": {"oid": "53875bb043c9062078887453a5c09216ae12e89c"}, "closed": true, "closedAt": "2020-05-13T21:50:10Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgpjQ2gBqjMzMjkwMjI1NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgttEkgFqTQxMDUwOTY5NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDQ1Mzcz", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410445373", "createdAt": "2020-05-12T21:45:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0NTowOFrOGUaFWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMTo0NTowOFrOGUaFWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA1MjA1OQ==", "bodyText": "Why do we use getLogPrefix() -- our code style always omit the get prefix -- should be just logPrefix() (Similar below for other methods)", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424052059", "createdAt": "2020-05-12T21:45:08Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -185,24 +187,25 @@ public String toString() {\n     public void configure(final Map<String, ?> configs) {\n         final AssignorConfiguration assignorConfiguration = new AssignorConfiguration(configs);\n \n-        logPrefix = assignorConfiguration.logPrefix();\n+        logPrefix = assignorConfiguration.getLogPrefix();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "37bf2a6bbd0f20837dcdfac2692667206b91b70e", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/37bf2a6bbd0f20837dcdfac2692667206b91b70e", "committedDate": "2020-05-12T22:34:19Z", "message": "refactor AssignorConfiguration some, add listener for callback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "37bf2a6bbd0f20837dcdfac2692667206b91b70e", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/37bf2a6bbd0f20837dcdfac2692667206b91b70e", "committedDate": "2020-05-12T22:34:19Z", "message": "refactor AssignorConfiguration some, add listener for callback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21e51d2535ac9c648de50e870f59e07bf9b61b13", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/21e51d2535ac9c648de50e870f59e07bf9b61b13", "committedDate": "2020-05-12T22:37:51Z", "message": "remove get prefix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3654b4712eb6f8236f4bdf20bd58abddd7de6d97", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/3654b4712eb6f8236f4bdf20bd58abddd7de6d97", "committedDate": "2020-05-12T22:40:08Z", "message": "keep Ignore for now"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2", "committedDate": "2020-05-12T22:45:22Z", "message": "checkstyle"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDc2NzY0", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410476764", "createdAt": "2020-05-12T22:50:06Z", "commit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MDowN1rOGUbp8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MDowN1rOGUbp8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3NzgwOA==", "bodyText": "This is the only non-cosmetic change in this class, along with the interface added below", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424077808", "createdAt": "2020-05-12T22:50:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java", "diffHunk": "@@ -340,6 +319,27 @@ public TaskAssignor getTaskAssignor() {\n         }\n     }\n \n+    public AssignmentListener assignmentListener() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 247}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDc4MTMw", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410478130", "createdAt": "2020-05-12T22:53:16Z", "commit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MzoxNlrOGUbuXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MzoxNlrOGUbuXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3ODk0Mw==", "bodyText": "Sorry for all the lines of changes here, but the inconsistent method signatures and object construction was making this class hard to follow. All I'm doing here is making the methods conform to the same style, and moving the construction of any config that isn't needed elsewhere to its getter method. This allows us to remove a lot of these class variables", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424078943", "createdAt": "2020-05-12T22:53:16Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java", "diffHunk": "@@ -47,59 +47,21 @@\n \n     private final String logPrefix;\n     private final Logger log;\n-    private final AssignmentConfigs assignmentConfigs;\n-    @SuppressWarnings(\"deprecation\")\n-    private final org.apache.kafka.streams.processor.PartitionGrouper partitionGrouper;\n-    private final String userEndPoint;\n     private final TaskManager taskManager;\n-    private final StreamsMetadataState streamsMetadataState;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDc5MTIx", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410479121", "createdAt": "2020-05-12T22:55:41Z", "commit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1NTo0MVrOGUbxdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1NTo0MVrOGUbxdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3OTczNQ==", "bodyText": "This one actually might not be necessary, but I thought it was useful as a sanity check especially since we're trying to access the stores in some places", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424079735", "createdAt": "2020-05-12T22:55:41Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -906,29 +912,22 @@ public void close() { }\n         return streams;\n     }\n \n-    private void waitForStateTransition(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed,\n-                                        final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> expected)\n-            throws Exception {\n-\n+    private void waitForRunning(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 245}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDkyMjI0", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410492224", "createdAt": "2020-05-12T23:30:04Z", "commit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "state": "COMMENTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzozMDowNFrOGUcdrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMzo0MToyNlrOGUcrLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MTA1NA==", "bodyText": "Do we know if the corresponding \"getters\" are called often or not? I guess the main idea behind having those member variables was to \"parse\" the config once as it's immutable anyway instead of each time a getter is called?", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424091054", "createdAt": "2020-05-12T23:30:04Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/AssignorConfiguration.java", "diffHunk": "@@ -47,59 +47,21 @@\n \n     private final String logPrefix;\n     private final Logger log;\n-    private final AssignmentConfigs assignmentConfigs;\n-    @SuppressWarnings(\"deprecation\")\n-    private final org.apache.kafka.streams.processor.PartitionGrouper partitionGrouper;\n-    private final String userEndPoint;\n     private final TaskManager taskManager;\n-    private final StreamsMetadataState streamsMetadataState;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3ODk0Mw=="}, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MjE3Nw==", "bodyText": "Agreed.", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424092177", "createdAt": "2020-05-12T23:33:51Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -906,29 +912,22 @@ public void close() { }\n         return streams;\n     }\n \n-    private void waitForStateTransition(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed,\n-                                        final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> expected)\n-            throws Exception {\n-\n+    private void waitForRunning(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed) throws Exception {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3OTczNQ=="}, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 245}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MjM3MA==", "bodyText": "Seems this could fail if observed is empty?\nAlso, could we simplify this? We are only interested in RUNNING  state, right? So no need to check the previous state?", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424092370", "createdAt": "2020-05-12T23:34:34Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -906,29 +912,22 @@ public void close() { }\n         return streams;\n     }\n \n-    private void waitForStateTransition(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed,\n-                                        final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> expected)\n-            throws Exception {\n-\n+    private void waitForRunning(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed) throws Exception {\n         waitForCondition(\n-            () -> observed.equals(expected),\n+            () -> observed.get(observed.size() - 1).equals(new KeyValue<>(State.REBALANCING, State.RUNNING)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 248}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MjkzOA==", "bodyText": "Why this change?", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424092938", "createdAt": "2020-05-12T23:36:24Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1274,6 +1274,7 @@ public void shouldThrowExceptionIfApplicationServerConfigIsNotHostPortPair() {\n \n     @Test\n     public void shouldThrowExceptionIfApplicationServerConfigPortIsNotAnInteger() {\n+        createDefaultMockTaskManager();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5MzgwMQ==", "bodyText": "So far we always pass in assignmentListener.numStableAssignments() + 1 -- hence, I am wondering if we need to pass it at all?", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424093801", "createdAt": "2020-05-12T23:39:03Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -261,24 +241,24 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n             streams1Alpha.setStateListener(\n                 (newState, oldState) -> stateTransitions1.add(KeyValue.pair(oldState, newState))\n             );\n+            int expectedNumStableAssignments = assignmentListener.numStableAssignments() + 1;\n             streams1Alpha.cleanUp();\n             streams1Alpha.start();\n-            waitForStateTransition(\n-                stateTransitions1,\n-                Arrays.asList(\n-                    KeyValue.pair(KafkaStreams.State.CREATED, KafkaStreams.State.REBALANCING),\n-                    KeyValue.pair(KafkaStreams.State.REBALANCING, KafkaStreams.State.RUNNING)\n-                )\n-            );\n+            assignmentListener.waitForNextStableAssignment(expectedNumStableAssignments, MAX_WAIT_TIME_MS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA5NDUwOA==", "bodyText": "Why do we need this? If we don't inject an error, we start phase 6 in RUNNING state and it should not rebalance.", "url": "https://github.com/apache/kafka/pull/8648#discussion_r424094508", "createdAt": "2020-05-12T23:41:26Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -466,6 +452,9 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 verifyCommitted(expectedCommittedResult);\n                 expectedUncommittedResult.addAll(expectedCommittedResult);\n             } else {\n+                waitForRunning(stateTransitions1);\n+                waitForRunning(stateTransitions2);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4c3ed65adbf43cc76b7ae42169cba32d9bc59f2"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "959e2217b04157736fd729fa4109901d3ea08496", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/959e2217b04157736fd729fa4109901d3ea08496", "committedDate": "2020-05-13T00:20:40Z", "message": "github review changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNTA5Njk1", "url": "https://github.com/apache/kafka/pull/8648#pullrequestreview-410509695", "createdAt": "2020-05-13T00:26:37Z", "commit": {"oid": "959e2217b04157736fd729fa4109901d3ea08496"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 949, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}