{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMzY4MTc1", "number": 8602, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMTowOToyOFrOD40KDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjo1Mzo1MlrOD56Ajg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTAxMzg5OnYy", "diffSide": "LEFT", "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wM1QyMTowOToyOFrOGPviKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoxNzozNFrOGQKGTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE2MDYxNw==", "bodyText": "We are now relying on the lifecycle methods to close the producer and consumer. Did you do that to simplify the code, i.e. it has no impact on the behavior of the test?", "url": "https://github.com/apache/kafka/pull/8602#discussion_r419160617", "createdAt": "2020-05-03T21:09:28Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "diffHunk": "@@ -130,13 +129,10 @@ class TransactionsBounceTest extends KafkaServerTestHarness {\n         iteration += 1\n       }\n     } finally {\n-      producer.close()\n-      consumer.close()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740dbb0fb893ef1fa3da5e86fe13f7f547671146"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5NTg1NQ==", "bodyText": "Yeah, I thought it is a preferred pattern to simplify cleanup a little bit in test cases. It does not change the behavior of the test.", "url": "https://github.com/apache/kafka/pull/8602#discussion_r419595855", "createdAt": "2020-05-04T17:17:34Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "diffHunk": "@@ -130,13 +129,10 @@ class TransactionsBounceTest extends KafkaServerTestHarness {\n         iteration += 1\n       }\n     } finally {\n-      producer.close()\n-      consumer.close()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTE2MDYxNw=="}, "originalCommit": {"oid": "740dbb0fb893ef1fa3da5e86fe13f7f547671146"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMDQ1ODM4OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNjo1Mzo1MlrOGRcTUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNzowMzowMlrOGRcrdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk0MjY3Mg==", "bodyText": "I was checking the difference between what we do now and before and noticed that we have this line in the helper method we were using previously:\n\nprops.put(ProducerConfig.REQUEST_TIMEOUT_MS_CONFIG, deliveryTimeoutMs.toString)\n\nThat seems a bit questionable. Should we remove it from that method?", "url": "https://github.com/apache/kafka/pull/8602#discussion_r420942672", "createdAt": "2020-05-06T16:53:52Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "diffHunk": "@@ -156,17 +152,26 @@ class TransactionsBounceTest extends KafkaServerTestHarness {\n \n     val expectedValues = (0 until numInputRecords).toSet\n     assertEquals(s\"Missing messages: ${expectedValues -- recordSet}\", expectedValues, recordSet)\n+  }\n \n-    verifyingConsumer.close()\n+  private def createTransactionalProducer(transactionalId: String) = {\n+    val props = new Properties()\n+    props.put(ProducerConfig.ACKS_CONFIG, \"all\")\n+    props.put(ProducerConfig.BATCH_SIZE_CONFIG, \"512\")\n+    props.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, transactionalId)\n+    props.put(ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG, \"true\")\n+    createProducer(configOverrides = props)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "740dbb0fb893ef1fa3da5e86fe13f7f547671146"}, "originalPosition": 102}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk0ODg1Mg==", "bodyText": "Nice catch. Yeah, let me fix that.", "url": "https://github.com/apache/kafka/pull/8602#discussion_r420948852", "createdAt": "2020-05-06T17:03:02Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsBounceTest.scala", "diffHunk": "@@ -156,17 +152,26 @@ class TransactionsBounceTest extends KafkaServerTestHarness {\n \n     val expectedValues = (0 until numInputRecords).toSet\n     assertEquals(s\"Missing messages: ${expectedValues -- recordSet}\", expectedValues, recordSet)\n+  }\n \n-    verifyingConsumer.close()\n+  private def createTransactionalProducer(transactionalId: String) = {\n+    val props = new Properties()\n+    props.put(ProducerConfig.ACKS_CONFIG, \"all\")\n+    props.put(ProducerConfig.BATCH_SIZE_CONFIG, \"512\")\n+    props.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, transactionalId)\n+    props.put(ProducerConfig.ENABLE_IDEMPOTENCE_CONFIG, \"true\")\n+    createProducer(configOverrides = props)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDk0MjY3Mg=="}, "originalCommit": {"oid": "740dbb0fb893ef1fa3da5e86fe13f7f547671146"}, "originalPosition": 102}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2861, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}