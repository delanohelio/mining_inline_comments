{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTU4MDkw", "number": 8190, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozMjo1MVrODjq1EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozMzoxOVrODjq1hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzI4NDY1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozMjo1MVrOFvm7Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwNTo0MzozNlrOFvqFOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng==", "bodyText": "This is the actual fix.", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385465166", "createdAt": "2020-02-28T01:32:51Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -744,7 +744,9 @@ public void run() {\n     private void runLoop() {\n         subscribeConsumer();\n \n-        while (isRunning()) {\n+        // if the thread is still in the middle of a rebalance, we should keep polling\n+        // until the rebalance is completed before we close and commit the tasks\n+        while (isRunning() || taskManager.isRebalanceInProgress()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNjM2NA==", "bodyText": "We need to avoid adding these new records to the PartitionGroup down on line 825 or else they'll be included in the offsets committed", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385516364", "createdAt": "2020-02-28T05:41:27Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -744,7 +744,9 @@ public void run() {\n     private void runLoop() {\n         subscribeConsumer();\n \n-        while (isRunning()) {\n+        // if the thread is still in the middle of a rebalance, we should keep polling\n+        // until the rebalance is completed before we close and commit the tasks\n+        while (isRunning() || taskManager.isRebalanceInProgress()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng=="}, "originalCommit": {"oid": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTUxNjg1Nw==", "bodyText": "If we need to poll more than once to complete the rebalance for example", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385516857", "createdAt": "2020-02-28T05:43:36Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -744,7 +744,9 @@ public void run() {\n     private void runLoop() {\n         subscribeConsumer();\n \n-        while (isRunning()) {\n+        // if the thread is still in the middle of a rebalance, we should keep polling\n+        // until the rebalance is completed before we close and commit the tasks\n+        while (isRunning() || taskManager.isRebalanceInProgress()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTE2Ng=="}, "originalCommit": {"oid": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4NzI4NTgyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozMzoxOVrOFvm77Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQwMTozMzoxOVrOFvm77Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTQ2NTMyNQ==", "bodyText": "We need to put this out of the loop since if we get an error code, we should still set the flag so that thread can complete shutdown.", "url": "https://github.com/apache/kafka/pull/8190#discussion_r385465325", "createdAt": "2020-02-28T01:33:19Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -50,10 +50,10 @@ public void onPartitionsAssigned(final Collection<TopicPartition> partitions) {\n             log.error(\"Received error code {} - shutdown\", streamThread.getAssignmentErrorCode());\n             streamThread.shutdown();\n         } else {\n-            taskManager.handleRebalanceComplete();\n-\n             streamThread.setState(State.PARTITIONS_ASSIGNED);\n         }\n+\n+        taskManager.handleRebalanceComplete();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe4ca0705121babfbe23ca0e758cdc9dfedfd7cc"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4123, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}