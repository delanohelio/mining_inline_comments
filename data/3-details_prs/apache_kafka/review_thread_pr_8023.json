{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5Mzk3MTAw", "number": 8023, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNToxNDowMlrODcIwAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNjoyNlrODfOafg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODMwMDgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNToxNDowMlrOFkBknA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNToxNDowMlrOFkBknA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMxODgxMg==", "bodyText": "Add \"DEPRECATED, use --bootstrap-server instead; ignored if --bootstrap-server is specified\"", "url": "https://github.com/apache/kafka/pull/8023#discussion_r373318812", "createdAt": "2020-01-31T05:14:02Z", "author": {"login": "rondagostino"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -125,7 +129,11 @@ object ConsoleProducer {\n       .withRequiredArg\n       .describedAs(\"topic\")\n       .ofType(classOf[String])\n-    val brokerListOpt = parser.accepts(\"broker-list\", \"REQUIRED: The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED: The server(s) to connect to.\")\n+      .withRequiredArg\n+      .describedAs(\"server to connect to\")\n+      .ofType(classOf[String])\n+    val brokerListOpt = parser.accepts(\"broker-list\", \"The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODMxMjI3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNToyNDozNFrOFkBrWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzoxNTowN1rOFmal9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMDUzNg==", "bodyText": "You can define bootstrapServerOpt with .requiredUnless(\"broker-list\") as long as you define broker-list first; then the parser will check everything for you automatically.  Also technically not REQUIRED since --broker-list is only being deprecated and not removed.  So probably \"REQUIRED unless --broker-list is specified\" is more accurate.  Also, need to update ConsoleProducerTest to test valid and invalid option combinations.", "url": "https://github.com/apache/kafka/pull/8023#discussion_r373320536", "createdAt": "2020-01-31T05:24:34Z", "author": {"login": "rondagostino"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -125,7 +129,11 @@ object ConsoleProducer {\n       .withRequiredArg\n       .describedAs(\"topic\")\n       .ofType(classOf[String])\n-    val brokerListOpt = parser.accepts(\"broker-list\", \"REQUIRED: The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED: The server(s) to connect to.\")\n+      .withRequiredArg", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNTkwOQ==", "bodyText": "Updated with suggestion", "url": "https://github.com/apache/kafka/pull/8023#discussion_r375825909", "createdAt": "2020-02-06T13:15:07Z", "author": {"login": "mitchell-h"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -125,7 +129,11 @@ object ConsoleProducer {\n       .withRequiredArg\n       .describedAs(\"topic\")\n       .ofType(classOf[String])\n-    val brokerListOpt = parser.accepts(\"broker-list\", \"REQUIRED: The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED: The server(s) to connect to.\")\n+      .withRequiredArg", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyMDUzNg=="}, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODM1OTQ3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjowNTozOVrOFkCHfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzoxNToxMlrOFmamDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyNzc0MA==", "bodyText": "No need to manually check these if you use .requiredUnless(\"broker-list\").", "url": "https://github.com/apache/kafka/pull/8023#discussion_r373327740", "createdAt": "2020-01-31T06:05:39Z", "author": {"login": "rondagostino"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -220,11 +228,28 @@ object ConsoleProducer {\n     options = tryParse(parser, args)\n \n     CommandLineUtils.printHelpAndExitIfNeeded(this, \"This tool helps to read data from standard input and publish it to Kafka.\")\n-    CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNTkzMw==", "bodyText": "Updated with requiredUnless", "url": "https://github.com/apache/kafka/pull/8023#discussion_r375825933", "createdAt": "2020-02-06T13:15:12Z", "author": {"login": "mitchell-h"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -220,11 +228,28 @@ object ConsoleProducer {\n     options = tryParse(parser, args)\n \n     CommandLineUtils.printHelpAndExitIfNeeded(this, \"This tool helps to read data from standard input and publish it to Kafka.\")\n-    CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyNzc0MA=="}, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwODM2NTYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNjoxMDozN1rOFkCLGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzoxNToxOVrOFmamTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyODY2NQ==", "bodyText": "Probably want to do something like this:\nval brokerHostsAndPorts = options.valueOf(if (options.has(bootstrapServerOpt)) bootstrapServerOpt else brokerListOpt)\nToolsUtils.validatePortOrDie(parser, brokerHostsAndPorts)", "url": "https://github.com/apache/kafka/pull/8023#discussion_r373328665", "createdAt": "2020-01-31T06:10:37Z", "author": {"login": "rondagostino"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -220,11 +228,28 @@ object ConsoleProducer {\n     options = tryParse(parser, args)\n \n     CommandLineUtils.printHelpAndExitIfNeeded(this, \"This tool helps to read data from standard input and publish it to Kafka.\")\n-    CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+\n+    if (!options.has(bootstrapServerOpt) && !options.has(brokerListOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, bootstrapServerOpt)\n+\n+    if (options.has(bootstrapServerOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, bootstrapServerOpt)\n+\n+    if (options.has(brokerListOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+\n \n     val topic = options.valueOf(topicOpt)\n+\n+    val bootstrapServer = options.valueOf(bootstrapServerOpt)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgyNTk5Ng==", "bodyText": "Updated with suggestion", "url": "https://github.com/apache/kafka/pull/8023#discussion_r375825996", "createdAt": "2020-02-06T13:15:19Z", "author": {"login": "mitchell-h"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -220,11 +228,28 @@ object ConsoleProducer {\n     options = tryParse(parser, args)\n \n     CommandLineUtils.printHelpAndExitIfNeeded(this, \"This tool helps to read data from standard input and publish it to Kafka.\")\n-    CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+\n+    if (!options.has(bootstrapServerOpt) && !options.has(brokerListOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, bootstrapServerOpt)\n+\n+    if (options.has(bootstrapServerOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, bootstrapServerOpt)\n+\n+    if (options.has(brokerListOpt))\n+      CommandLineUtils.checkRequiredArgs(parser, options, topicOpt, brokerListOpt)\n+\n \n     val topic = options.valueOf(topicOpt)\n+\n+    val bootstrapServer = options.valueOf(bootstrapServerOpt)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzMyODY2NQ=="}, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTA2MTM1OnYy", "diffSide": "RIGHT", "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMVQwMzoxMDoyOFrOFkcHjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxNzo1OToyMVrOFnWMVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1Mzc0Mg==", "bodyText": "We also want to deprecate the old options. Typically we just prefix the description with DEPRECATED. See for example, the --zookeeper argument use in TopicCommand. We could also print a warning, but it may be overkill.", "url": "https://github.com/apache/kafka/pull/8023#discussion_r373753742", "createdAt": "2020-02-01T03:10:28Z", "author": {"login": "hachikuji"}, "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "diffHunk": "@@ -503,10 +503,17 @@ private static ArgumentParser argParser() {\n                 .newArgumentParser(\"verifiable-consumer\")\n                 .defaultHelp(true)\n                 .description(\"This tool consumes messages from a specific topic and emits consumer events (e.g. group rebalances, received messages, and offsets committed) as JSON objects to STDOUT.\");\n+        parser.addArgument(\"--bootstrap-server\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMjM5MQ==", "bodyText": "Updated", "url": "https://github.com/apache/kafka/pull/8023#discussion_r376802391", "createdAt": "2020-02-09T17:59:21Z", "author": {"login": "mitchell-h"}, "path": "tools/src/main/java/org/apache/kafka/tools/VerifiableConsumer.java", "diffHunk": "@@ -503,10 +503,17 @@ private static ArgumentParser argParser() {\n                 .newArgumentParser(\"verifiable-consumer\")\n                 .defaultHelp(true)\n                 .description(\"This tool consumes messages from a specific topic and emits consumer events (e.g. group rebalances, received messages, and offsets committed) as JSON objects to STDOUT.\");\n+        parser.addArgument(\"--bootstrap-server\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzc1Mzc0Mg=="}, "originalCommit": {"oid": "9a84cb1fdffa23ff06151923f65792c1060c8b5a"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNDUzODA1OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxMzo0MToyNVrOFmbYWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wOVQxODowNToyMVrOFnWOAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzODgwOA==", "bodyText": "The document \"The broker list string in the form HOST1:PORT1,HOST2:PORT2.\" is useful to terminal user. Could we keep it?", "url": "https://github.com/apache/kafka/pull/8023#discussion_r375838808", "createdAt": "2020-02-06T13:41:25Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -125,10 +129,15 @@ object ConsoleProducer {\n       .withRequiredArg\n       .describedAs(\"topic\")\n       .ofType(classOf[String])\n-    val brokerListOpt = parser.accepts(\"broker-list\", \"REQUIRED: The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+    val brokerListOpt = parser.accepts(\"broker-list\", \"DEPRECATED, use --bootstrap-server instead; ignored if --bootstrap-server is specified.  The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n       .withRequiredArg\n       .describedAs(\"broker-list\")\n       .ofType(classOf[String])\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED unless --broker-list(deprecated) is specified. The server(s) to connect to.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e44ecdc07e086ac89897688bc524d6ee788d307"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjgwMjgxOQ==", "bodyText": "Fixed and updated.  Thanks.", "url": "https://github.com/apache/kafka/pull/8023#discussion_r376802819", "createdAt": "2020-02-09T18:05:21Z", "author": {"login": "mitchell-h"}, "path": "core/src/main/scala/kafka/tools/ConsoleProducer.scala", "diffHunk": "@@ -125,10 +129,15 @@ object ConsoleProducer {\n       .withRequiredArg\n       .describedAs(\"topic\")\n       .ofType(classOf[String])\n-    val brokerListOpt = parser.accepts(\"broker-list\", \"REQUIRED: The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+    val brokerListOpt = parser.accepts(\"broker-list\", \"DEPRECATED, use --bootstrap-server instead; ignored if --bootstrap-server is specified.  The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n       .withRequiredArg\n       .describedAs(\"broker-list\")\n       .ofType(classOf[String])\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED unless --broker-list(deprecated) is specified. The server(s) to connect to.\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTgzODgwOA=="}, "originalCommit": {"oid": "7e44ecdc07e086ac89897688bc524d6ee788d307"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDY4MjI2OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/tools/ConsumerPerformance.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNTozNVrOFozX8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNTozNVrOFozX8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMyOTA3Mg==", "bodyText": "Should we also add The broker list string in the form HOST1:PORT1,HOST2:PORT2. to this message?", "url": "https://github.com/apache/kafka/pull/8023#discussion_r378329072", "createdAt": "2020-02-12T15:35:35Z", "author": {"login": "stanislavkozlovski"}, "path": "core/src/main/scala/kafka/tools/ConsumerPerformance.scala", "diffHunk": "@@ -202,9 +203,14 @@ object ConsumerPerformance extends LazyLogging {\n   }\n \n   class ConsumerPerfConfig(args: Array[String]) extends PerfConfig(args) {\n-    val bootstrapServersOpt = parser.accepts(\"broker-list\", \"REQUIRED: The server(s) to connect to.\")\n-      .withRequiredArg()\n-      .describedAs(\"host\")\n+    val brokerListOpt = parser.accepts(\"broker-list\", \"DEPRECATED, use --bootstrap-server instead; ignored if --bootstrap-server is specified.  The broker list string in the form HOST1:PORT1,HOST2:PORT2.\")\n+      .withRequiredArg\n+      .describedAs(\"broker-list\")\n+      .ofType(classOf[String])\n+    val bootstrapServerOpt = parser.accepts(\"bootstrap-server\", \"REQUIRED unless --broker-list(deprecated) is specified. The server(s) to connect to.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359190fc37d337a37243657827b26b4000ea569d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDY4NDg1OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNjowN1rOFozZgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNjowN1rOFozZgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMyOTQ3Mw==", "bodyText": "nit: camelCase naming would be bootstrapServerValidArgs", "url": "https://github.com/apache/kafka/pull/8023#discussion_r378329473", "createdAt": "2020-02-12T15:36:07Z", "author": {"login": "stanislavkozlovski"}, "path": "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala", "diffHunk": "@@ -37,20 +37,45 @@ class ConsoleProducerTest {\n     \"--property\",\n     \"key.separator=#\"\n   )\n-\n+  val bootStrapServerValidArgs: Array[String] = Array(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359190fc37d337a37243657827b26b4000ea569d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0MDY4NjA2OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNjoyN1rOFozaSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQxNTozNjoyN1rOFozaSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODMyOTY3NQ==", "bodyText": "nit: ditto on the camel case", "url": "https://github.com/apache/kafka/pull/8023#discussion_r378329675", "createdAt": "2020-02-12T15:36:27Z", "author": {"login": "stanislavkozlovski"}, "path": "core/src/test/scala/unit/kafka/tools/ConsoleProducerTest.scala", "diffHunk": "@@ -37,20 +37,45 @@ class ConsoleProducerTest {\n     \"--property\",\n     \"key.separator=#\"\n   )\n-\n+  val bootStrapServerValidArgs: Array[String] = Array(\n+    \"--bootstrap-server\",\n+    \"localhost:1003,localhost:1004\",\n+    \"--topic\",\n+    \"t3\",\n+    \"--property\",\n+    \"parse.key=true\",\n+    \"--property\",\n+    \"key.separator=#\"\n+  )\n   val invalidArgs: Array[String] = Array(\n     \"--t\", // not a valid argument\n     \"t3\"\n   )\n+  val bootStrapserverOverride: Array[String] = Array(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "359190fc37d337a37243657827b26b4000ea569d"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4161, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}