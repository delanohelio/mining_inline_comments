{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MTM2NTUz", "number": 8011, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMDoxMVrODbrPGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1NDo0OFrODb92Lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzQ2NTIwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozMDoxMVrOFjTAFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDoxNjozN1rOFjb5KQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1NTc5Ng==", "bodyText": "Just to clarify my understanding, we will now retry \"forever\" with a lower request timeout (30s), but the total time spent attempting to satisfy a request will be bound by the new default.api.timeout.ms config or the explicit timeout given in the request options (if set)", "url": "https://github.com/apache/kafka/pull/8011#discussion_r372555796", "createdAt": "2020-01-29T18:30:11Z", "author": {"login": "mumrah"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java", "diffHunk": "@@ -154,10 +156,16 @@\n                                         CONNECTIONS_MAX_IDLE_MS_DOC)\n                                 .define(RETRIES_CONFIG,\n                                         Type.INT,\n-                                        5,\n-                                        atLeast(0),\n+                                        Integer.MAX_VALUE,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc0711cdb10fa4aea8c4bf67fbb8bca82ed22e4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcwMTQ4MQ==", "bodyText": "Yes, the number of retries is unbounded by default, but the time spent retrying now has a proper bound (60s).", "url": "https://github.com/apache/kafka/pull/8011#discussion_r372701481", "createdAt": "2020-01-30T00:16:37Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/AdminClientConfig.java", "diffHunk": "@@ -154,10 +156,16 @@\n                                         CONNECTIONS_MAX_IDLE_MS_DOC)\n                                 .define(RETRIES_CONFIG,\n                                         Type.INT,\n-                                        5,\n-                                        atLeast(0),\n+                                        Integer.MAX_VALUE,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU1NTc5Ng=="}, "originalCommit": {"oid": "edc0711cdb10fa4aea8c4bf67fbb8bca82ed22e4"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzQ5MTkwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozODo1N1rOFjTRAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODozODo1N1rOFjTRAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU2MDEyOQ==", "bodyText": "Could we move this extra initialization logic to the factories and let the constructor accept the two new values? That we also allow us to make them final.", "url": "https://github.com/apache/kafka/pull/8011#discussion_r372560129", "createdAt": "2020-01-29T18:38:57Z", "author": {"login": "mumrah"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -500,9 +506,9 @@ private KafkaAdminClient(AdminClientConfig config,\n                              KafkaClient client,\n                              TimeoutProcessorFactory timeoutProcessorFactory,\n                              LogContext logContext) {\n-        this.defaultTimeoutMs = config.getInt(AdminClientConfig.REQUEST_TIMEOUT_MS_CONFIG);\n         this.clientId = clientId;\n         this.log = logContext.logger(KafkaAdminClient.class);\n+        configureDefaultApiTimeoutMsAndRequestTimeoutMs(config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc0711cdb10fa4aea8c4bf67fbb8bca82ed22e4"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMzUwMDYzOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQxODo0MTo1NlrOFjTWvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQwMDoyOTo0MFrOFjcHNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU2MTU5OQ==", "bodyText": "There are a few other calls to calcTimeoutMsRemainingAsInt, do we need to consider the overall request timeout there as well?", "url": "https://github.com/apache/kafka/pull/8011#discussion_r372561599", "createdAt": "2020-01-29T18:41:56Z", "author": {"login": "mumrah"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -993,16 +1019,18 @@ private long sendEligibleCalls(long now) {\n                     continue;\n                 }\n                 Call call = calls.remove(0);\n-                int timeoutMs = calcTimeoutMsRemainingAsInt(now, call.deadlineMs);\n+                int requestTimeoutMs = Math.min(KafkaAdminClient.this.requestTimeoutMs,\n+                        calcTimeoutMsRemainingAsInt(now, call.deadlineMs));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edc0711cdb10fa4aea8c4bf67fbb8bca82ed22e4"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjcwNTA3OQ==", "bodyText": "I looked at the other callers and it seems they are just checking if the deadline has been reached. We have to do the min here since the request timeout may be smaller than the remaining time before the deadline.", "url": "https://github.com/apache/kafka/pull/8011#discussion_r372705079", "createdAt": "2020-01-30T00:29:40Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -993,16 +1019,18 @@ private long sendEligibleCalls(long now) {\n                     continue;\n                 }\n                 Call call = calls.remove(0);\n-                int timeoutMs = calcTimeoutMsRemainingAsInt(now, call.deadlineMs);\n+                int requestTimeoutMs = Math.min(KafkaAdminClient.this.requestTimeoutMs,\n+                        calcTimeoutMsRemainingAsInt(now, call.deadlineMs));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjU2MTU5OQ=="}, "originalCommit": {"oid": "edc0711cdb10fa4aea8c4bf67fbb8bca82ed22e4"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjUwMjA4OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1MTo0MVrOFjwEGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1MTo0MVrOFjwEGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMTk2MQ==", "bodyText": "Should this say\n\nclient operations that do not explicitly accept a timeout\n\nor\n\nclient operations that do not specify a timeout", "url": "https://github.com/apache/kafka/pull/8011#discussion_r373031961", "createdAt": "2020-01-30T15:51:41Z", "author": {"login": "mumrah"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -141,6 +141,10 @@\n                                                            + \"The value must be set lower than <code>session.timeout.ms</code>, but typically should be set no higher \"\n                                                            + \"than 1/3 of that value. It can be adjusted even lower to control the expected time for normal rebalances.\";\n \n+    public static final String DEFAULT_API_TIMEOUT_MS_CONFIG = \"default.api.timeout.ms\";\n+    public static final String DEFAULT_API_TIMEOUT_MS_DOC = \"Specifies the timeout (in milliseconds) for client APIs. \" +\n+            \"This configuration is used as the default timeout for all client operations that do not explicitly accept a <code>timeout</code> parameter.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ad7c907b5e4b226d3f5cf27181c1251a8a5067f"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNjUxNDM4OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNTo1NDo0OFrOFjwL0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxNzoxMToxN1rOFjy88g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMzkzOA==", "bodyText": "This could even be static now, yes?", "url": "https://github.com/apache/kafka/pull/8011#discussion_r373033938", "createdAt": "2020-01-30T15:54:48Z", "author": {"login": "mumrah"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -520,8 +527,29 @@ private KafkaAdminClient(AdminClientConfig config,\n         thread.start();\n     }\n \n-    Time time() {\n-        return time;\n+    /**\n+     * If a default.api.timeout.ms has been explicitly specified, raise an error if it conflicts with request.timeout.ms.\n+     * If no default.api.timeout.ms has been configured, then set its value as the max of the default and request.timeout.ms. Also we should probably log a warning.\n+     * Otherwise, use the provided values for both configurations.\n+     *\n+     * @param config The configuration\n+     */\n+    private int configureDefaultApiTimeoutMs(AdminClientConfig config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ad7c907b5e4b226d3f5cf27181c1251a8a5067f"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzA3OTI4Mg==", "bodyText": "We still have the log message, which is a bit annoying. Guess I will leave it as is unless you feel strongly about it.", "url": "https://github.com/apache/kafka/pull/8011#discussion_r373079282", "createdAt": "2020-01-30T17:11:17Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -520,8 +527,29 @@ private KafkaAdminClient(AdminClientConfig config,\n         thread.start();\n     }\n \n-    Time time() {\n-        return time;\n+    /**\n+     * If a default.api.timeout.ms has been explicitly specified, raise an error if it conflicts with request.timeout.ms.\n+     * If no default.api.timeout.ms has been configured, then set its value as the max of the default and request.timeout.ms. Also we should probably log a warning.\n+     * Otherwise, use the provided values for both configurations.\n+     *\n+     * @param config The configuration\n+     */\n+    private int configureDefaultApiTimeoutMs(AdminClientConfig config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzAzMzkzOA=="}, "originalCommit": {"oid": "4ad7c907b5e4b226d3f5cf27181c1251a8a5067f"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4433, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}