{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNjAxNjEy", "number": 7911, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzoyNDozOFrODW2YEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzoyNDozOFrODW2YEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1Mjg2MTYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzoyNDozOFrOFb1rOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxNDowMTowM1rOFb2v8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDczNTI5MA==", "bodyText": "Another thing to consider for a separate PR: this method seems highly inefficient. We take all the keys in the cache and do a bunch of transformations. It seems like we should avoid that, no? Intuitively, we would do a filter operation first and then transform only the cache items that match.", "url": "https://github.com/apache/kafka/pull/7911#discussion_r364735290", "createdAt": "2020-01-09T13:24:38Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -188,7 +188,9 @@ class AclAuthorizer extends Authorizer with Logging {\n     val deleteExceptions = new mutable.HashMap[AclBinding, ApiException]()\n     val filters = aclBindingFilters.asScala.zipWithIndex\n     inWriteLock(lock) {\n-      val resourcesToUpdate = aclCache.keys.map { resource =>\n+      // Find all potentially matching resource patterns from the provided filters and ACL cache and apply the filters\n+      val resources = aclCache.keys ++ filters.map(_._1.patternFilter).filter(_.matchesAtMostOne).flatMap(filterToResources)\n+      val resourcesToUpdate = resources.map { resource =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NDIwMA==", "bodyText": "I will do https://issues.apache.org/jira/browse/KAFKA-8847 first to remove references to the old classes and deprecate those. And that would avoid a lot of the unnecessary conversions. I can see if more can be done to improve this in the same PR.", "url": "https://github.com/apache/kafka/pull/7911#discussion_r364744200", "createdAt": "2020-01-09T13:43:49Z", "author": {"login": "rajinisivaram"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -188,7 +188,9 @@ class AclAuthorizer extends Authorizer with Logging {\n     val deleteExceptions = new mutable.HashMap[AclBinding, ApiException]()\n     val filters = aclBindingFilters.asScala.zipWithIndex\n     inWriteLock(lock) {\n-      val resourcesToUpdate = aclCache.keys.map { resource =>\n+      // Find all potentially matching resource patterns from the provided filters and ACL cache and apply the filters\n+      val resources = aclCache.keys ++ filters.map(_._1.patternFilter).filter(_.matchesAtMostOne).flatMap(filterToResources)\n+      val resourcesToUpdate = resources.map { resource =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDczNTI5MA=="}, "originalCommit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1Mjg4Mg==", "bodyText": "Sounds good.", "url": "https://github.com/apache/kafka/pull/7911#discussion_r364752882", "createdAt": "2020-01-09T14:01:03Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -188,7 +188,9 @@ class AclAuthorizer extends Authorizer with Logging {\n     val deleteExceptions = new mutable.HashMap[AclBinding, ApiException]()\n     val filters = aclBindingFilters.asScala.zipWithIndex\n     inWriteLock(lock) {\n-      val resourcesToUpdate = aclCache.keys.map { resource =>\n+      // Find all potentially matching resource patterns from the provided filters and ACL cache and apply the filters\n+      val resources = aclCache.keys ++ filters.map(_._1.patternFilter).filter(_.matchesAtMostOne).flatMap(filterToResources)\n+      val resourcesToUpdate = resources.map { resource =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDczNTI5MA=="}, "originalCommit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4461, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}