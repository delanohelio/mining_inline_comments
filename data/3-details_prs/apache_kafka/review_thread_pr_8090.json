{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODIwMTc3", "number": 8090, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowNjo0M1rODi0MVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowNjo0M1rODi0MVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3ODMzMzAzOnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowNjo0M1rOFuRgeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTozNTozNlrOFuSb9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NTY1Nw==", "bodyText": "What about just making childClasses a Set<String>, since String.join(...) takes an Iterable? Arguably it's not much different, but it's more in line with other uses of String.join.\nOr, maybe better yet, what about just joining with the stream? Something like:\n            String childClassNames = Stream.of(transformationCls.getClasses())\n                                           .filter(transformationCls::isAssignableFrom)\n                                           .filter(c -> !Modifier.isAbstract(c.getModifiers()))\n                                           .filter(c -> Modifier.isPublic(c.getModifiers()))\n                                           .map(Class::getName)\n                                           .collect(Collectors.joining(\", \"));\n            String message = childClassNames.trim().isEmpty() ?\n                             \"Transformation is abstract and cannot be created.\" :\n                             \"Transformation is abstract and cannot be created. Did you mean \" + childClassNames + \"?\";", "url": "https://github.com/apache/kafka/pull/8090#discussion_r384065657", "createdAt": "2020-02-25T19:06:43Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java", "diffHunk": "@@ -329,11 +331,25 @@ static ConfigDef getConfigDefFromTransformation(String key, Class<?> transformat\n         if (transformationCls == null || !Transformation.class.isAssignableFrom(transformationCls)) {\n             throw new ConfigException(key, String.valueOf(transformationCls), \"Not a Transformation\");\n         }\n+        if (Modifier.isAbstract(transformationCls.getModifiers())) {\n+            String[] childClasses = Stream.of(transformationCls.getClasses())\n+                .filter(transformationCls::isAssignableFrom)\n+                .filter(c -> !Modifier.isAbstract(c.getModifiers()))\n+                .filter(c -> Modifier.isPublic(c.getModifiers()))\n+                .map(Class::getName)\n+                .toArray(String[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA4MDg4Ng==", "bodyText": "That works for me. I'll change it.", "url": "https://github.com/apache/kafka/pull/8090#discussion_r384080886", "createdAt": "2020-02-25T19:35:36Z", "author": {"login": "jcustenborder"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java", "diffHunk": "@@ -329,11 +331,25 @@ static ConfigDef getConfigDefFromTransformation(String key, Class<?> transformat\n         if (transformationCls == null || !Transformation.class.isAssignableFrom(transformationCls)) {\n             throw new ConfigException(key, String.valueOf(transformationCls), \"Not a Transformation\");\n         }\n+        if (Modifier.isAbstract(transformationCls.getModifiers())) {\n+            String[] childClasses = Stream.of(transformationCls.getClasses())\n+                .filter(transformationCls::isAssignableFrom)\n+                .filter(c -> !Modifier.isAbstract(c.getModifiers()))\n+                .filter(c -> Modifier.isPublic(c.getModifiers()))\n+                .map(Class::getName)\n+                .toArray(String[]::new);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NTY1Nw=="}, "originalCommit": {"oid": "a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4273, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}