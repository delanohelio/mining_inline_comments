{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MjYwNTM5", "number": 8805, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODo1OToxOVrOEDlRtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowMToxOVrOEDoC_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTkxOTI2OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODo1OToxOVrOGgrzgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1NToxM1rOGguI9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNTMxNQ==", "bodyText": "Can we make this a little easier to understand for most users? I think it might be sufficient to add some combination of:\n\nwhat this means (e.g., the worker was partitioned and missed at least one rebalance rounds, likely due to a network issue), and\nwhat resulted (e.g., the workers gave up its tasks in case the cluster had reassigned them to another worker).\n\nAnd, should this be debug or info or warn? Warn seems wrong, since the user shouldn't do anything, but excessive #s of these could signal the need for additional tuning. WDYT?", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436925315", "createdAt": "2020-06-08T18:59:19Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -159,6 +163,13 @@ private Long ensureLeaderConfig(long maxOffset, WorkerCoordinator coordinator) {\n         // Base set: The previous assignment of connectors-and-tasks is a standalone snapshot that\n         // can be used to calculate derived sets\n         log.debug(\"Previous assignments: {}\", previousAssignment);\n+        int lastCompletedGenerationId = coordinator.lastCompletedGenerationId();\n+        if (previousGenerationId != lastCompletedGenerationId) {\n+            log.debug(\"Emptying previous assignments due to generation mismatch between previous \"\n+                    + \"generation ID {} and last completed generation ID {} since the last assignment: {}\",\n+                    previousGenerationId, lastCompletedGenerationId, previousAssignment);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1MDMwNQ==", "bodyText": "This is related to the leader's internal bookkeeping when it calculates a new assignment. It's not related to the tasks that a worker (even the leader) is actually running.\nEmptying/clearing the previous assignment might result in some tasks shuffling around, because the leader will calculate an assignment from scratch, but it doesn't affect running tasks. The new computed assignment will send assignment and/or revocations as needed based on a) what tasks each worker has reported running in this round and which tasks are configured in the config topic. Another way to say this is that the leader won't bother detecting lost tasks in this round. Every unassigned task will be treated as a new task.\nYou are right on the log message not conveying that meaning exactly. How about:\nlog.debug(\"Clearing the view of previous assignments due to generation mismatch between \"\n                    + \"previous generation ID {} and last completed generation ID {}. \",\n                    previousGenerationId, lastCompletedGenerationId);\nlog.debug(\"This can happen if the leader fails to sync the assignment within a \" \n                    + \"rebalancing round. The following view of previous assignments might be \"\n                    + \"outdated and will be ignored by the leader in the current computation of \" \n                    + \"new assignments. Possibly outdated previous assignments: {}\", previousAssignment);", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436950305", "createdAt": "2020-06-08T19:29:24Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -159,6 +163,13 @@ private Long ensureLeaderConfig(long maxOffset, WorkerCoordinator coordinator) {\n         // Base set: The previous assignment of connectors-and-tasks is a standalone snapshot that\n         // can be used to calculate derived sets\n         log.debug(\"Previous assignments: {}\", previousAssignment);\n+        int lastCompletedGenerationId = coordinator.lastCompletedGenerationId();\n+        if (previousGenerationId != lastCompletedGenerationId) {\n+            log.debug(\"Emptying previous assignments due to generation mismatch between previous \"\n+                    + \"generation ID {} and last completed generation ID {} since the last assignment: {}\",\n+                    previousGenerationId, lastCompletedGenerationId, previousAssignment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNTMxNQ=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1MTQ3NQ==", "bodyText": "Also, given that the previous assignments are printed in debug, I think it makes sense to keep these log messages in debug as well.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436951475", "createdAt": "2020-06-08T19:31:33Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -159,6 +163,13 @@ private Long ensureLeaderConfig(long maxOffset, WorkerCoordinator coordinator) {\n         // Base set: The previous assignment of connectors-and-tasks is a standalone snapshot that\n         // can be used to calculate derived sets\n         log.debug(\"Previous assignments: {}\", previousAssignment);\n+        int lastCompletedGenerationId = coordinator.lastCompletedGenerationId();\n+        if (previousGenerationId != lastCompletedGenerationId) {\n+            log.debug(\"Emptying previous assignments due to generation mismatch between previous \"\n+                    + \"generation ID {} and last completed generation ID {} since the last assignment: {}\",\n+                    previousGenerationId, lastCompletedGenerationId, previousAssignment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNTMxNQ=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTEyMA==", "bodyText": "Sounds good, though it'd be better to have a single (long) log message to prevent them from being separated by other log messages from other threads.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436961120", "createdAt": "2020-06-08T19:50:36Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -159,6 +163,13 @@ private Long ensureLeaderConfig(long maxOffset, WorkerCoordinator coordinator) {\n         // Base set: The previous assignment of connectors-and-tasks is a standalone snapshot that\n         // can be used to calculate derived sets\n         log.debug(\"Previous assignments: {}\", previousAssignment);\n+        int lastCompletedGenerationId = coordinator.lastCompletedGenerationId();\n+        if (previousGenerationId != lastCompletedGenerationId) {\n+            log.debug(\"Emptying previous assignments due to generation mismatch between previous \"\n+                    + \"generation ID {} and last completed generation ID {} since the last assignment: {}\",\n+                    previousGenerationId, lastCompletedGenerationId, previousAssignment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNTMxNQ=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzU3Mg==", "bodyText": "I agree. The length will be very similar anyways.\nI'm pushing a commit to address your comments.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436963572", "createdAt": "2020-06-08T19:55:13Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -159,6 +163,13 @@ private Long ensureLeaderConfig(long maxOffset, WorkerCoordinator coordinator) {\n         // Base set: The previous assignment of connectors-and-tasks is a standalone snapshot that\n         // can be used to calculate derived sets\n         log.debug(\"Previous assignments: {}\", previousAssignment);\n+        int lastCompletedGenerationId = coordinator.lastCompletedGenerationId();\n+        if (previousGenerationId != lastCompletedGenerationId) {\n+            log.debug(\"Emptying previous assignments due to generation mismatch between previous \"\n+                    + \"generation ID {} and last completed generation ID {} since the last assignment: {}\",\n+                    previousGenerationId, lastCompletedGenerationId, previousAssignment);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNTMxNQ=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTkyNjQ4OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTowMDo1OVrOGgr4CA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1MDo1OVrOGguAVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNjQ3Mg==", "bodyText": "Similar comment to that above.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436926472", "createdAt": "2020-06-08T19:00:59Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -361,6 +369,14 @@ protected void handleLostAssignments(ConnectorsAndTasks lostAssignments,\n         log.debug(\"Found the following connectors and tasks missing from previous assignments: \"\n                 + lostAssignments);\n \n+        if (previousMembers.size() == memberConfigs.size() && scheduledRebalance <= 0) {\n+            log.debug(\"Group size is same between rebalances. Lost assignments are probably due to lost SyncGroup \"\n+                    + \"responses. Treating lost tasks as new tasks\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk1Mzc5NQ==", "bodyText": "How about:\nlog.debug(\"The number of workers remained the same between rebalances. The missing \" \n                    + \"assignments that the leader is detecting are probably due to some workers \" \n                    + \"failing to receive the new assignments in the previous rebalance. Will \"\n                    + \"reassign missing tasks as new tasks\");", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436953795", "createdAt": "2020-06-08T19:35:53Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -361,6 +369,14 @@ protected void handleLostAssignments(ConnectorsAndTasks lostAssignments,\n         log.debug(\"Found the following connectors and tasks missing from previous assignments: \"\n                 + lostAssignments);\n \n+        if (previousMembers.size() == memberConfigs.size() && scheduledRebalance <= 0) {\n+            log.debug(\"Group size is same between rebalances. Lost assignments are probably due to lost SyncGroup \"\n+                    + \"responses. Treating lost tasks as new tasks\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNjQ3Mg=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 89}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTM2NA==", "bodyText": "Sounds good.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436961364", "createdAt": "2020-06-08T19:50:59Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -361,6 +369,14 @@ protected void handleLostAssignments(ConnectorsAndTasks lostAssignments,\n         log.debug(\"Found the following connectors and tasks missing from previous assignments: \"\n                 + lostAssignments);\n \n+        if (previousMembers.size() == memberConfigs.size() && scheduledRebalance <= 0) {\n+            log.debug(\"Group size is same between rebalances. Lost assignments are probably due to lost SyncGroup \"\n+                    + \"responses. Treating lost tasks as new tasks\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkyNjQ3Mg=="}, "originalCommit": {"oid": "a0332e53309181c37b56f3a58da1434dee99945a"}, "originalPosition": 89}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjM3MzEwOnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMTowMToxOVrOGgwQ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMToxOToyOVrOGgw0-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5ODM5Ng==", "bodyText": "Is it enough to trust that the # of workers has not changed, or should we compare the members, via something like:\nif (previousMembers.equals(memberConfigs.keySet()) && scheduledRebalance <= 0) {\n\nIOW, what happens if one worker disappeared about the same time that an operator added a new worker?\nIIUC from the integration tests, this logic actually doesn't care which of these is the case -- all of the task assignments that were lost will be reassigned anyway, so it doesn't matter if the worker that gets those new assignments is the old worker that came back or a new worker. Is that right?", "url": "https://github.com/apache/kafka/pull/8805#discussion_r436998396", "createdAt": "2020-06-08T21:01:19Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -361,6 +373,16 @@ protected void handleLostAssignments(ConnectorsAndTasks lostAssignments,\n         log.debug(\"Found the following connectors and tasks missing from previous assignments: \"\n                 + lostAssignments);\n \n+        if (previousMembers.size() == memberConfigs.size() && scheduledRebalance <= 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6de42a49e746e520493cd5ac08fc5b3e61f43b11"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzAwNzYxMQ==", "bodyText": "I like the idea of checking the member configs. Could probably allow us to avoid duplicate tasks, even in this rare scenario of replacement of a departing node within the rebalance round itself.", "url": "https://github.com/apache/kafka/pull/8805#discussion_r437007611", "createdAt": "2020-06-08T21:19:29Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/IncrementalCooperativeAssignor.java", "diffHunk": "@@ -361,6 +373,16 @@ protected void handleLostAssignments(ConnectorsAndTasks lostAssignments,\n         log.debug(\"Found the following connectors and tasks missing from previous assignments: \"\n                 + lostAssignments);\n \n+        if (previousMembers.size() == memberConfigs.size() && scheduledRebalance <= 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk5ODM5Ng=="}, "originalCommit": {"oid": "6de42a49e746e520493cd5ac08fc5b3e61f43b11"}, "originalPosition": 91}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2518, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}