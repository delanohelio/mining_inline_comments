{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNjA0MzM0", "number": 8063, "title": "HOTFIX: Fix two test failures in JDK11", "bodyText": "StoreChangelogReaderTest.shouldRequestCommittedOffsetsAndHandleTimeoutException[1] This is due to stricter ternary operator type casting\n\n\nKStreamImplTest.shouldSupportTriggerMaterializedWithKTableFromKStream\nThis is added recently where String typed values for <String, Integer>, in J8 it is allowed but in J11 it is not allowed.\n\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-02-07T21:15:33Z", "url": "https://github.com/apache/kafka/pull/8063", "merged": true, "mergeCommit": {"oid": "a6c9e96bd396cea58da3e9d206b0bd907e8c7543"}, "closed": true, "closedAt": "2020-02-07T21:51:38Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcCF9UdAH2gAyMzcyNjA0MzM0OjEyNzI0ZGM2NTBiZDUzZmVhM2Y5ODVmYzgxOWNmOTNhNDAxMmZmY2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcCGhbAAH2gAyMzcyNjA0MzM0OmQxZDExZDViZTFiNzFjZGVhM2E2NDcwMmM1NzQ5YzFiYzVhODc5ZWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "12724dc650bd53fea3f985fc819cf93a4012ffcc", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/12724dc650bd53fea3f985fc819cf93a4012ffcc", "committedDate": "2020-02-07T21:10:26Z", "message": "fix two failures in JDK11"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDUyNDI3", "url": "https://github.com/apache/kafka/pull/8063#pullrequestreview-355452427", "createdAt": "2020-02-07T21:38:17Z", "commit": {"oid": "12724dc650bd53fea3f985fc819cf93a4012ffcc"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTozODoxN1rOFnLCWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTozODoxN1rOFnLCWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxOTYwOQ==", "bodyText": "Did you mean to remove this println?", "url": "https://github.com/apache/kafka/pull/8063#discussion_r376619609", "createdAt": "2020-02-07T21:38:17Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KStreamImplTest.java", "diffHunk": "@@ -2935,29 +2935,32 @@ public void shouldSupportTriggerMaterializedWithKTableFromKStream() {\n             inputTopic.pipeInput(\"C\", \"yellow\", 15L);\n             inputTopic.pipeInput(\"D\", \"green\", 11L);\n \n-            final Map<String, Integer> expectedStore = new HashMap<>();\n-            expectedStore.putIfAbsent(\"A\", 1);\n-            expectedStore.putIfAbsent(\"B\", 6);\n-            expectedStore.putIfAbsent(\"C\", 24);\n-            expectedStore.putIfAbsent(\"D\", 6);\n+            final Map<String, String> expectedStore = new HashMap<>();\n+            expectedStore.putIfAbsent(\"A\", \"1\");\n+            expectedStore.putIfAbsent(\"B\", \"6\");\n+            expectedStore.putIfAbsent(\"C\", \"24\");\n+            expectedStore.putIfAbsent(\"D\", \"6\");\n \n             assertEquals(expectedStore, asMap(store));\n \n             assertEquals(\n                 asList(\n-                    new TestRecord<>(\"A\", 6, Instant.ofEpochMilli(10)),\n-                    new TestRecord<>(\"B\", 6, Instant.ofEpochMilli(9)),\n-                    new TestRecord<>(\"A\", 1, Instant.ofEpochMilli(12)),\n-                    new TestRecord<>(\"C\", 24, Instant.ofEpochMilli(15)),\n-                    new TestRecord<>(\"D\", 6, Instant.ofEpochMilli(11))),\n+                    new TestRecord<>(\"A\", \"6\", Instant.ofEpochMilli(10)),\n+                    new TestRecord<>(\"B\", \"6\", Instant.ofEpochMilli(9)),\n+                    new TestRecord<>(\"A\", \"1\", Instant.ofEpochMilli(12)),\n+                    new TestRecord<>(\"C\", \"24\", Instant.ofEpochMilli(15)),\n+                    new TestRecord<>(\"D\", \"6\", Instant.ofEpochMilli(11))),\n                 outputTopic.readRecordsToList());\n \n         }\n     }\n \n     private static Map<String, String> asMap(final KeyValueStore<String, String> store) {\n         final HashMap<String, String> result = new HashMap<>();\n-        store.all().forEachRemaining(kv -> result.put(kv.key, kv.value));\n+        store.all().forEachRemaining(kv -> {\n+            System.out.println(kv);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12724dc650bd53fea3f985fc819cf93a4012ffcc"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d11d5be1b71cdea3a64702c5749c1bc5a879eb", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/d1d11d5be1b71cdea3a64702c5749c1bc5a879eb", "committedDate": "2020-02-07T21:49:52Z", "message": "github comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}