{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4ODc2NTg3", "number": 8820, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNDowMVrOEDIR8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjozMzoyMlrOEDI4EA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzE2ODQ5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNDowMVrOGgAgWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0MzoyMFrOGgAtKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNTg5OQ==", "bodyText": "Maybe easier to make this writeCheckpointIfNeeded:\n    private void writeCheckpointIfNeeded() {\n        if (checkpointNeeded) {\n            stateMgr.checkpoint(checkpoint);\n            checkpointNeeded = false;\n        }\n    }\n\nFor this case, the caller does not need to check the checkpointNeeded flag?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436215899", "createdAt": "2020-06-06T00:34:01Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint\n                     executeAndMaybeSwallow(false, stateMgr::flush, \"state manager flush\", log);\n                 }\n \n                 break;\n \n             case RESTORING:\n                 executeAndMaybeSwallow(clean, stateMgr::flush, \"state manager flush\", log);\n-                checkpoint = Collections.emptyMap();\n+                scheduleCheckpoint(emptyMap());\n \n                 break;\n \n             case SUSPENDED:\n             case CLOSED:\n                 // not need to checkpoint, since when suspending we've already committed the state\n-                checkpoint = null; // `null` indicates to not write a checkpoint\n-\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Unknown state \" + state() + \" while prepare closing active task \" + id);\n         }\n+    }\n \n-        return checkpoint;\n+    private void scheduleCheckpoint(final Map<TopicPartition, Long> checkpoint) {\n+        this.checkpoint = checkpoint;\n+        this.checkpointNeeded = true;\n+    }\n+\n+    private void writeCheckpoint() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxOTE3OA==", "bodyText": "Sounds good", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436219178", "createdAt": "2020-06-06T00:43:20Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint\n                     executeAndMaybeSwallow(false, stateMgr::flush, \"state manager flush\", log);\n                 }\n \n                 break;\n \n             case RESTORING:\n                 executeAndMaybeSwallow(clean, stateMgr::flush, \"state manager flush\", log);\n-                checkpoint = Collections.emptyMap();\n+                scheduleCheckpoint(emptyMap());\n \n                 break;\n \n             case SUSPENDED:\n             case CLOSED:\n                 // not need to checkpoint, since when suspending we've already committed the state\n-                checkpoint = null; // `null` indicates to not write a checkpoint\n-\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Unknown state \" + state() + \" while prepare closing active task \" + id);\n         }\n+    }\n \n-        return checkpoint;\n+    private void scheduleCheckpoint(final Map<TopicPartition, Long> checkpoint) {\n+        this.checkpoint = checkpoint;\n+        this.checkpointNeeded = true;\n+    }\n+\n+    private void writeCheckpoint() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNTg5OQ=="}, "originalCommit": null, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzE3MzMxOnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzozMlrOGgAjXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzozMlrOGgAjXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNjY3MQ==", "bodyText": "Do we need to set checkpointNeeded = false here?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436216671", "createdAt": "2020-06-06T00:37:32Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzE3NDI1OnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzo1MlrOGgAj9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzo1MlrOGgAj9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNjgyMA==", "bodyText": "As above?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436216820", "createdAt": "2020-06-06T00:37:52Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint\n                     executeAndMaybeSwallow(false, stateMgr::flush, \"state manager flush\", log);\n                 }\n \n                 break;\n \n             case RESTORING:\n                 executeAndMaybeSwallow(clean, stateMgr::flush, \"state manager flush\", log);\n-                checkpoint = Collections.emptyMap();\n+                scheduleCheckpoint(emptyMap());\n \n                 break;\n \n             case SUSPENDED:\n             case CLOSED:\n                 // not need to checkpoint, since when suspending we've already committed the state\n-                checkpoint = null; // `null` indicates to not write a checkpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzE5OTE1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0OTo0N1rOGgAzYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMToxMDowNVrOGgA77A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDc2OQ==", "bodyText": "I think we could just reset any checkpoint at the beginning, so that we only do checkpointing if this call thinks so. @mjsax", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436220769", "createdAt": "2020-06-06T00:49:47Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -546,14 +547,14 @@ public void closeAndRecycleState() {\n      *                 otherwise, just close open resources\n      * @throws TaskMigratedException if the task producer got fenced (EOS)\n      */\n-    private Map<TopicPartition, Long> prepareClose(final boolean clean) {\n-        final Map<TopicPartition, Long> checkpoint;\n+    private void prepareClose(final boolean clean) {\n+        // Reset any previously scheduled checkpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMjk1Ng==", "bodyText": "That should work.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436222956", "createdAt": "2020-06-06T01:10:05Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -546,14 +547,14 @@ public void closeAndRecycleState() {\n      *                 otherwise, just close open resources\n      * @throws TaskMigratedException if the task producer got fenced (EOS)\n      */\n-    private Map<TopicPartition, Long> prepareClose(final boolean clean) {\n-        final Map<TopicPartition, Long> checkpoint;\n+    private void prepareClose(final boolean clean) {\n+        // Reset any previously scheduled checkpoint.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDc2OQ=="}, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 64}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzIxNTM5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMToxMDo0MlrOGgA8Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjoyNjowN1rOGgBU5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMzAyNw==", "bodyText": "A if (clean) should be sufficient now", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436223027", "createdAt": "2020-06-06T01:10:42Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -598,9 +606,9 @@ public void closeAndRecycleState() {\n      *  3. finally release the state manager lock\n      * </pre>\n      */\n-    private void close(final boolean clean, final Map<TopicPartition, Long> checkpoint) {\n-        if (clean && checkpoint != null) {\n-            executeAndMaybeSwallow(clean, () -> stateMgr.checkpoint(checkpoint), \"state manager checkpoint\", log);\n+    private void close(final boolean clean) {\n+        if (clean && checkpointNeeded) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTM0OQ==", "bodyText": "Make sense", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436229349", "createdAt": "2020-06-06T02:26:07Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -598,9 +606,9 @@ public void closeAndRecycleState() {\n      *  3. finally release the state manager lock\n      * </pre>\n      */\n-    private void close(final boolean clean, final Map<TopicPartition, Long> checkpoint) {\n-        if (clean && checkpoint != null) {\n-            executeAndMaybeSwallow(clean, () -> stateMgr.checkpoint(checkpoint), \"state manager checkpoint\", log);\n+    private void close(final boolean clean) {\n+        if (clean && checkpointNeeded) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMzAyNw=="}, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzI2NjA4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjozMzoyMlrOGgBWvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQxNTo0NTowOFrOGgEUyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg==", "bodyText": "Do we need two parameters here? Could we still just use one Map<TopicPartition, Long> checkpoint, and then in writeCheckpointIfNeed if it is not null write it and then set it to null.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436229822", "createdAt": "2020-06-06T02:33:22Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzMzM4Mg==", "bodyText": "I actually had a similar thought, but I am torn though. Using two variables required to keep them \"in sync\" was is not great. However, using null is less explicit... Thus overall I am fine either way as both seems to provide the overall same good/bad ratio.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436233382", "createdAt": "2020-06-06T03:28:27Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg=="}, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzNzQyNg==", "bodyText": "A third option is Optional<Map<TopicPartition, Long>> which explicitly states the checkpoint  is null. However, I think the benefit here is minimal, as checkpointNeeded sounds like a better state variable, than relying on the struct itself.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436237426", "createdAt": "2020-06-06T04:42:27Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg=="}, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIzODgwNA==", "bodyText": "Actually I'm not too concerned of relying on null to indicate no need to checkpoint, what I originally pointed out is that we are unnecessarily accumulating and then distributing checkpoints between task manager and task, which is already resolved in your PR. So I'd suggest we still just use a single nullable Map.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436238804", "createdAt": "2020-06-06T05:07:14Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg=="}, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjI3ODQ3Mw==", "bodyText": "Cool", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436278473", "createdAt": "2020-06-06T15:45:08Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg=="}, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2540, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}