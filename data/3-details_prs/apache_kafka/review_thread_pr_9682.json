{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTEzMTAy", "number": 9682, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMDo0OVrOFAV-TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNzoyNlrOFAXlgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTA0MzMzOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMDo0OVrOH-ldCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMDo0OVrOH-ldCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzQwMw==", "bodyText": "Current trunk code returns the old value 2222 for this instead of the newly configured 1111.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535387403", "createdAt": "2020-12-03T16:30:49Z", "author": {"login": "prat0318"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    // Even if One property is invalid, the below should get correctly updated.\n+    assertEquals(1111, configs.messageMaxBytes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTI5MTk1OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNDowNlrOH-n2bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzozNzowNFrOH-o1Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNjY3MQ==", "bodyText": "How about invalidProps.keys.foreach(props.remove)? it is still one line.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535426671", "createdAt": "2020-12-03T17:14:06Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala", "diffHunk": "@@ -467,7 +467,9 @@ class DynamicBrokerConfig(private val kafkaConfig: KafkaConfig) extends Logging\n             case _: Exception => true\n           }\n         }\n-        invalidProps.foreach(props.remove)\n+        invalidProps.foreach {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjc4Mg==", "bodyText": "done.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442782", "createdAt": "2020-12-03T17:37:04Z", "author": {"login": "prat0318"}, "path": "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala", "diffHunk": "@@ -467,7 +467,9 @@ class DynamicBrokerConfig(private val kafkaConfig: KafkaConfig) extends Logging\n             case _: Exception => true\n           }\n         }\n-        invalidProps.foreach(props.remove)\n+        invalidProps.foreach {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNjY3MQ=="}, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTMwNTkwOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNzowM1rOH-n-6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzozNzoxMVrOH-o1zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyODg0MA==", "bodyText": "Could you replace Int.MaxValue by Defaults.MaxConnections?", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535428840", "createdAt": "2020-12-03T17:17:03Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjg5NA==", "bodyText": "done.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442894", "createdAt": "2020-12-03T17:37:11Z", "author": {"login": "prat0318"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyODg0MA=="}, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTMwNzU1OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNzoyN1rOH-n_5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzozNzoxN1rOH-o2FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyOTA5NA==", "bodyText": "\"Originals\" -> \"default value\"", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535429094", "createdAt": "2020-12-03T17:17:27Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ0Mjk2NQ==", "bodyText": "done.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535442965", "createdAt": "2020-12-03T17:37:17Z", "author": {"login": "prat0318"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyOTA5NA=="}, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}