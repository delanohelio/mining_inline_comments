{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NzkzNzY5", "number": 8644, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNjo1MlrOD_2wow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0NjoyOFrOECfGaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4Mjg0MDY3OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQyMTozNjo1MlrOGaxLUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzozODozOFrOGddbMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTg3NQ==", "bodyText": "In the KIP this field is called use_first_dns_ip, I think it was agreed in the discussion to remove the s", "url": "https://github.com/apache/kafka/pull/8644#discussion_r430721875", "createdAt": "2020-05-26T21:36:52Z", "author": {"login": "mimaison"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IPS(\"use_first_dns_ips\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c205b970f6deb5cb4f0edeb4a8b86fc5af01c07"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3MTc1Ng==", "bodyText": "I edited the PR to include this change.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431571756", "createdAt": "2020-05-28T04:15:16Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IPS(\"use_first_dns_ips\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTg3NQ=="}, "originalCommit": {"oid": "2c205b970f6deb5cb4f0edeb4a8b86fc5af01c07"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2ODAwMg==", "bodyText": "@mimaison Based on @ijuma 's suggestion, I am not adding use_first_dns_ip. I am going to deprecate default as the value and make use_all_dns_ips as the default value.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432768002", "createdAt": "2020-05-29T22:32:15Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IPS(\"use_first_dns_ips\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTg3NQ=="}, "originalCommit": {"oid": "2c205b970f6deb5cb4f0edeb4a8b86fc5af01c07"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc3Mjc2MA==", "bodyText": "I agree it makes sense to not introduce this new value. It's unfortunate the old value is called default but hopefully we'll remove it in the next major release.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432772760", "createdAt": "2020-05-29T22:50:12Z", "author": {"login": "mimaison"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IPS(\"use_first_dns_ips\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTg3NQ=="}, "originalCommit": {"oid": "2c205b970f6deb5cb4f0edeb4a8b86fc5af01c07"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0Mzk4NQ==", "bodyText": "ok. resolving this conversation.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r433543985", "createdAt": "2020-06-01T23:38:38Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IPS(\"use_first_dns_ips\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDcyMTg3NQ=="}, "originalCommit": {"oid": "2c205b970f6deb5cb4f0edeb4a8b86fc5af01c07"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODA3ODcwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDoyNzoyMFrOGblNtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQyMzo1MTo1OFrOGddpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ==", "bodyText": "@badaiaqrandista We should replace this if/else with a switch statement so that we are forced to handle every case. That makes it easier to avoid issues if we add new elements to the enum. Also, can we please add tests?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431574455", "createdAt": "2020-05-28T04:27:20Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjAxNw==", "bodyText": "Btw, it seems that we are changing the behavior of RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY as well, right? Before, we would only use the first DNS IP for that option in the non bootstrap path. It would be good to make that clear in the KIP.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431576017", "createdAt": "2020-05-28T04:34:20Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyMjUwNQ==", "bodyText": "Yes, you are correct. If client.dns.lookup=RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY , then it will resolves the hostname to IP address using the default behaviour.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431622505", "createdAt": "2020-05-28T07:02:46Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk3NDIwOQ==", "bodyText": "I've changed this into switch/case and updated the KIP.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431974209", "createdAt": "2020-05-28T16:38:46Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDk4OQ==", "bodyText": "Can we remove the default since we handled all the cases?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432864989", "createdAt": "2020-05-30T15:44:55Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NzU2MQ==", "bodyText": "ok. will remove the default.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r433547561", "createdAt": "2020-06-01T23:51:58Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,11 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n+        if (ClientDnsLookup.USE_FIRST_DNS_IP == clientDnsLookup) {\n             return Collections.singletonList(addresses[0]);\n+        } else {\n+            // ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup || ClientDnsLookup.DEFAULT == clientDnsLookup\n+            return filterPreferredAddresses(addresses);\n         }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NDQ1NQ=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4ODA4OTMzOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDozNTowMlrOGblUZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQyMjozMDoxM1rOGcuB6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjE2NA==", "bodyText": "We said this would be deprecated for removal in 3.0. Let's mention that in the documentation and add a warning if this is selected.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431576164", "createdAt": "2020-05-28T04:35:02Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IP(\"use_first_dns_ip\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjMzNg==", "bodyText": "Thinking about it, maybe we should not add this at all. We could deprecate default and switch the config default to use_all_dns_ips. Thoughts @badaiaqrandista and @rajinisivaram?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431576336", "createdAt": "2020-05-28T04:35:49Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IP(\"use_first_dns_ip\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjE2NA=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTYyMTQ2OQ==", "bodyText": "I think that is a better idea, instead of introducing new value that would be removed soon.\nClientDnsLookup.DEFAULT is used in few places in core (server):\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/KafkaServer.scala#L520\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/ReplicaFetcherBlockingSend.scala#L92\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/controller/ControllerChannelManager.scala#L156\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala#L82\nAnd a couple of tools:\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/tools/ReplicaVerificationTool.scala#L482\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/admin/BrokerApiVersionsCommand.scala#L299\nIt is also used literally in a lot of test cases under clients.\nI did not want to touch too many code in the first go. Should I change them all in this KIP or leave them until we remove ClientDnsLookup.DEFAULT in 3.0 ?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431621469", "createdAt": "2020-05-28T07:00:13Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IP(\"use_first_dns_ip\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjE2NA=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTk5MDk4MQ==", "bodyText": "@badaiaqrandista I think you should change it in the non test code in this PR. For the test code, we can do it in a separate PR.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r431990981", "createdAt": "2020-05-28T17:05:40Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IP(\"use_first_dns_ip\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjE2NA=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjc2NzQ2Ng==", "bodyText": "Ok. I have changed core code to use ClientDnsLookup.USE_ALL_DNS_IPS and leaving all clients tests except ClientUtilsTest.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432767466", "createdAt": "2020-05-29T22:30:13Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientDnsLookup.java", "diffHunk": "@@ -22,7 +22,8 @@\n \n     DEFAULT(\"default\"),\n     USE_ALL_DNS_IPS(\"use_all_dns_ips\"),\n-    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\");\n+    RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY(\"resolve_canonical_bootstrap_servers_only\"),\n+    USE_FIRST_DNS_IP(\"use_first_dns_ip\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3NjE2NA=="}, "originalCommit": {"oid": "af17aa6c4c510bf6792b98e461ea493448639f50"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjExODkxOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNTo0NDowM1rOGcz-sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjoxNDoxOVrOGeFwFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDk0NQ==", "bodyText": "This will warn on every resolve. We should probably add the warning when we get the config value from ConsumerConfig, ProducerConfig and AdminClientConfig.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432864945", "createdAt": "2020-05-30T15:44:03Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0NDIyNg==", "bodyText": "ok. will move the warn there.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r433544226", "createdAt": "2020-06-01T23:39:40Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDk0NQ=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE2ODQ4MQ==", "bodyText": "I'm adding the check and the warning to the constructor of KafkaProducer, KafkaConsumer and KafkaAdminClient because the log context does not exist in the Config classes.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434168481", "createdAt": "2020-06-02T20:52:18Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDk0NQ=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwNDY5Mw==", "bodyText": "Nevermind. I've added the warning to Config classes.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434204693", "createdAt": "2020-06-02T22:14:19Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NDk0NQ=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjEyMTA5OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNTo0ODowNlrOGcz_zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMzoyMzozNFrOGeHJHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTIyOA==", "bodyText": "Can we clarify that resolve_canonical_bootstrap_servers_only applies to the boostrap urls only. For advertised servers, both use_all_dns_ips and resolve_canonical_bootstrap_servers behave the same.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432865228", "createdAt": "2020-05-30T15:48:06Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -42,9 +42,11 @@\n                                                        + \"servers (you may want more than one, though, in case a server is down).\";\n \n     public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n-    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups. If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n-                                                       + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.\"\n-                                                       + \" If the value is <code>resolve_canonical_bootstrap_servers_only</code> each entry will be resolved and expanded into a list of canonical names.\";\n+    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups.\"\n+                                                       + \" If set to <code>use_all_dns_ips</code>, attempt to connect to all IP addresses returned by the lookup and use the first one that connects successfully.\"\n+                                                       + \" If set to <code>default</code>, connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.\"\n+                                                       + \" If set to <code>resolve_canonical_bootstrap_servers_only</code>, each entry will be resolved and expanded into a list of canonical names.\"\n+                                                       + \" Note that <code>default</code> is deprecated and will be removed in future release.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE3MTU4OQ==", "bodyText": "Sorry, I do not understand why you are referring to \"advertised servers\". Instead, I have changed the explanation to clarify that this only applies \"if bootstrap hostname is an alias to multiple canonical names\".", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434171589", "createdAt": "2020-06-02T20:58:12Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -42,9 +42,11 @@\n                                                        + \"servers (you may want more than one, though, in case a server is down).\";\n \n     public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n-    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups. If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n-                                                       + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.\"\n-                                                       + \" If the value is <code>resolve_canonical_bootstrap_servers_only</code> each entry will be resolved and expanded into a list of canonical names.\";\n+    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups.\"\n+                                                       + \" If set to <code>use_all_dns_ips</code>, attempt to connect to all IP addresses returned by the lookup and use the first one that connects successfully.\"\n+                                                       + \" If set to <code>default</code>, connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.\"\n+                                                       + \" If set to <code>resolve_canonical_bootstrap_servers_only</code>, each entry will be resolved and expanded into a list of canonical names.\"\n+                                                       + \" Note that <code>default</code> is deprecated and will be removed in future release.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTIyOA=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE5NjkwMA==", "bodyText": "Each of these configs have an impact on bootstrap and advertized servers. So, we should be clear on what they do for each case.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434196900", "createdAt": "2020-06-02T21:54:15Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -42,9 +42,11 @@\n                                                        + \"servers (you may want more than one, though, in case a server is down).\";\n \n     public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n-    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups. If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n-                                                       + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.\"\n-                                                       + \" If the value is <code>resolve_canonical_bootstrap_servers_only</code> each entry will be resolved and expanded into a list of canonical names.\";\n+    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups.\"\n+                                                       + \" If set to <code>use_all_dns_ips</code>, attempt to connect to all IP addresses returned by the lookup and use the first one that connects successfully.\"\n+                                                       + \" If set to <code>default</code>, connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.\"\n+                                                       + \" If set to <code>resolve_canonical_bootstrap_servers_only</code>, each entry will be resolved and expanded into a list of canonical names.\"\n+                                                       + \" Note that <code>default</code> is deprecated and will be removed in future release.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTIyOA=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIyNzQ4Ng==", "bodyText": "Config doc updated.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434227486", "createdAt": "2020-06-02T23:23:34Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -42,9 +42,11 @@\n                                                        + \"servers (you may want more than one, though, in case a server is down).\";\n \n     public static final String CLIENT_DNS_LOOKUP_CONFIG = \"client.dns.lookup\";\n-    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups. If set to <code>use_all_dns_ips</code> then, when the lookup returns multiple IP addresses for a hostname,\"\n-                                                       + \" they will all be attempted to connect to before failing the connection. Applies to both bootstrap and advertised servers.\"\n-                                                       + \" If the value is <code>resolve_canonical_bootstrap_servers_only</code> each entry will be resolved and expanded into a list of canonical names.\";\n+    public static final String CLIENT_DNS_LOOKUP_DOC = \"Controls how the client uses DNS lookups.\"\n+                                                       + \" If set to <code>use_all_dns_ips</code>, attempt to connect to all IP addresses returned by the lookup and use the first one that connects successfully.\"\n+                                                       + \" If set to <code>default</code>, connect to the first IP address returned by the lookup, even if the lookup returns multiple IP addresses.\"\n+                                                       + \" If set to <code>resolve_canonical_bootstrap_servers_only</code>, each entry will be resolved and expanded into a list of canonical names.\"\n+                                                       + \" Note that <code>default</code> is deprecated and will be removed in future release.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTIyOA=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjEyMTI4OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNTo0ODozNlrOGcz_5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjoyODowOVrOGeGDmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTI1Mg==", "bodyText": "Why do we need this change?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432865252", "createdAt": "2020-05-30T15:48:36Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "diffHunk": "@@ -102,7 +102,7 @@ public void testResolveUnknownHostException() throws UnknownHostException {\n \n     @Test\n     public void testResolveDnsLookup() throws UnknownHostException {\n-        assertEquals(1, ClientUtils.resolve(\"localhost\", ClientDnsLookup.DEFAULT).size());\n+        assertEquals(1, ClientUtils.resolve(\"kafka.apache.org\", ClientDnsLookup.DEFAULT).size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzU0ODE0Mg==", "bodyText": "because kafka.apache.org resolves to 2 IP addresses. and I want to be sure that DEFAULT only returns 1 of them.\nlocalhost resolves to 1 IP address.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r433548142", "createdAt": "2020-06-01T23:53:57Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "diffHunk": "@@ -102,7 +102,7 @@ public void testResolveUnknownHostException() throws UnknownHostException {\n \n     @Test\n     public void testResolveDnsLookup() throws UnknownHostException {\n-        assertEquals(1, ClientUtils.resolve(\"localhost\", ClientDnsLookup.DEFAULT).size());\n+        assertEquals(1, ClientUtils.resolve(\"kafka.apache.org\", ClientDnsLookup.DEFAULT).size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTI1Mg=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzg4OTcxMw==", "bodyText": "Can you add a comment about this?", "url": "https://github.com/apache/kafka/pull/8644#discussion_r433889713", "createdAt": "2020-06-02T13:49:40Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "diffHunk": "@@ -102,7 +102,7 @@ public void testResolveUnknownHostException() throws UnknownHostException {\n \n     @Test\n     public void testResolveDnsLookup() throws UnknownHostException {\n-        assertEquals(1, ClientUtils.resolve(\"localhost\", ClientDnsLookup.DEFAULT).size());\n+        assertEquals(1, ClientUtils.resolve(\"kafka.apache.org\", ClientDnsLookup.DEFAULT).size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTI1Mg=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwOTY4OA==", "bodyText": "Added.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434209688", "createdAt": "2020-06-02T22:28:09Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClientUtilsTest.java", "diffHunk": "@@ -102,7 +102,7 @@ public void testResolveUnknownHostException() throws UnknownHostException {\n \n     @Test\n     public void testResolveDnsLookup() throws UnknownHostException {\n-        assertEquals(1, ClientUtils.resolve(\"localhost\", ClientDnsLookup.DEFAULT).size());\n+        assertEquals(1, ClientUtils.resolve(\"kafka.apache.org\", ClientDnsLookup.DEFAULT).size());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTI1Mg=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY5NjEyMjEzOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMFQxNTo1MDoyNlrOGc0AZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMjoxNDozNFrOGeFwXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTM4MQ==", "bodyText": "Can we add a test that passes RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY showing that we now get multiple addresses instead of only the first one. That's one of the changes in this PR.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r432865381", "createdAt": "2020-05-30T15:50:26Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");\n+                return Collections.singletonList(addresses[0]);\n+            case USE_ALL_DNS_IPS:\n+            case RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY:\n+                return filterPreferredAddresses(addresses);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDIwNDc2Nw==", "bodyText": "Added.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r434204767", "createdAt": "2020-06-02T22:14:34Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientUtils.java", "diffHunk": "@@ -108,10 +108,15 @@ public static ChannelBuilder createChannelBuilder(AbstractConfig config, Time ti\n \n     static List<InetAddress> resolve(String host, ClientDnsLookup clientDnsLookup) throws UnknownHostException {\n         InetAddress[] addresses = InetAddress.getAllByName(host);\n-        if (ClientDnsLookup.USE_ALL_DNS_IPS == clientDnsLookup) {\n-            return filterPreferredAddresses(addresses);\n-        } else {\n-            return Collections.singletonList(addresses[0]);\n+        switch (clientDnsLookup) {\n+            case DEFAULT:\n+                log.warn(\"Configuration 'client.dns.lookup' value 'default' is deprecated and will be removed in the future version.\");\n+                return Collections.singletonList(addresses[0]);\n+            case USE_ALL_DNS_IPS:\n+            case RESOLVE_CANONICAL_BOOTSTRAP_SERVERS_ONLY:\n+                return filterPreferredAddresses(addresses);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjg2NTM4MQ=="}, "originalCommit": {"oid": "d2a882d11496a414fbb2913ffb8876d5ec0be12e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMDQyMTUzOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQwOTo0NjoyOFrOGe-IxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMToyMDo1NFrOGfBP5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODUxNw==", "bodyText": "We don't need to call toString()", "url": "https://github.com/apache/kafka/pull/8644#discussion_r435128517", "createdAt": "2020-06-04T09:46:28Z", "author": {"login": "mimaison"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -167,4 +176,13 @@\n         }\n         return rval;\n     }\n+\n+    public static void warnIfDeprecatedDnsLookupValue(AbstractConfig config) {\n+        String clientDnsLookupValue = config.getString(CLIENT_DNS_LOOKUP_CONFIG);\n+        if (clientDnsLookupValue.equals(ClientDnsLookup.DEFAULT.toString()))\n+            log.warn(\"Configuration '{}' with value '{}' is deprecated and will be removed in \" +\n+                \"future version. Please use '{}' or another non-deprecated value.\",\n+                CLIENT_DNS_LOOKUP_CONFIG, ClientDnsLookup.DEFAULT.toString(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12fba36967687077979e23c3918b15cb1647f0fc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTE3OTQ5NQ==", "bodyText": "Done.", "url": "https://github.com/apache/kafka/pull/8644#discussion_r435179495", "createdAt": "2020-06-04T11:20:54Z", "author": {"login": "badaiaqrandista"}, "path": "clients/src/main/java/org/apache/kafka/clients/CommonClientConfigs.java", "diffHunk": "@@ -167,4 +176,13 @@\n         }\n         return rval;\n     }\n+\n+    public static void warnIfDeprecatedDnsLookupValue(AbstractConfig config) {\n+        String clientDnsLookupValue = config.getString(CLIENT_DNS_LOOKUP_CONFIG);\n+        if (clientDnsLookupValue.equals(ClientDnsLookup.DEFAULT.toString()))\n+            log.warn(\"Configuration '{}' with value '{}' is deprecated and will be removed in \" +\n+                \"future version. Please use '{}' or another non-deprecated value.\",\n+                CLIENT_DNS_LOOKUP_CONFIG, ClientDnsLookup.DEFAULT.toString(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTEyODUxNw=="}, "originalCommit": {"oid": "12fba36967687077979e23c3918b15cb1647f0fc"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2560, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}