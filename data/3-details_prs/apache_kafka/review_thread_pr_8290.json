{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3NTIxNzIx", "number": 8290, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDoxOToyNVrODn2XUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDoxOToyNVrODn2XUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzMTExNzYwOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/integration/kafka/api/BaseQuotaTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNDoxOToyNVrOF2FanA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQwMDo0Njo0OVrOF2WwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI1NjE1Ng==", "bodyText": "Does this really need 10 minutes? One minute itself seems like a long time for the tests. Should we send larger messages to get the test to complete faster?", "url": "https://github.com/apache/kafka/pull/8290#discussion_r392256156", "createdAt": "2020-03-13T14:19:25Z", "author": {"login": "rajinisivaram"}, "path": "core/src/test/scala/integration/kafka/api/BaseQuotaTest.scala", "diffHunk": "@@ -194,19 +212,24 @@ abstract class QuotaTestClients(topic: String,\n   }\n \n   def consumeUntilThrottled(maxRecords: Int, waitForRequestCompletion: Boolean = true): Int = {\n+    val longTimeoutMs = TimeUnit.MINUTES.toMillis(10)\n+    val shortTimeoutMs = TimeUnit.MINUTES.toMillis(1)\n+\n     consumer.subscribe(Collections.singleton(topic))\n     var numConsumed = 0\n     var throttled = false\n+    val startMs = System.currentTimeMillis\n     do {\n       numConsumed += consumer.poll(Duration.ofMillis(100L)).count\n       val metric = throttleMetric(QuotaType.Fetch, consumerClientId)\n       throttled = metric != null && metricValue(metric) > 0\n-    }  while (numConsumed < maxRecords && !throttled)\n+    }  while (numConsumed < maxRecords && !throttled && System.currentTimeMillis < startMs + longTimeoutMs)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49a7fc93aeacd5a16dc825295c2ad65ba33edc9c"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjU0MDIxMQ==", "bodyText": "I did such a long timeout because before there was no timeout, wanted to make sure it is enough. I verified that each test runs just 20-30 seconds max. I updated the code to use 1 minute for a timeout.", "url": "https://github.com/apache/kafka/pull/8290#discussion_r392540211", "createdAt": "2020-03-14T00:46:49Z", "author": {"login": "apovzner"}, "path": "core/src/test/scala/integration/kafka/api/BaseQuotaTest.scala", "diffHunk": "@@ -194,19 +212,24 @@ abstract class QuotaTestClients(topic: String,\n   }\n \n   def consumeUntilThrottled(maxRecords: Int, waitForRequestCompletion: Boolean = true): Int = {\n+    val longTimeoutMs = TimeUnit.MINUTES.toMillis(10)\n+    val shortTimeoutMs = TimeUnit.MINUTES.toMillis(1)\n+\n     consumer.subscribe(Collections.singleton(topic))\n     var numConsumed = 0\n     var throttled = false\n+    val startMs = System.currentTimeMillis\n     do {\n       numConsumed += consumer.poll(Duration.ofMillis(100L)).count\n       val metric = throttleMetric(QuotaType.Fetch, consumerClientId)\n       throttled = metric != null && metricValue(metric) > 0\n-    }  while (numConsumed < maxRecords && !throttled)\n+    }  while (numConsumed < maxRecords && !throttled && System.currentTimeMillis < startMs + longTimeoutMs)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI1NjE1Ng=="}, "originalCommit": {"oid": "49a7fc93aeacd5a16dc825295c2ad65ba33edc9c"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3327, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}