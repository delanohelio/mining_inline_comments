{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTc4NTEz", "number": 8306, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1Nzo1NlrODojsEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTowMzo0MlrODo4y3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODU0MzUyOnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1Nzo1NlrOF3LcWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwMTo1Nzo1NlrOF3LcWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzQwMzQ4Mg==", "bodyText": "Just moved these (getInfo) down to the end", "url": "https://github.com/apache/kafka/pull/8306#discussion_r393403482", "createdAt": "2020-03-17T01:57:56Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -211,45 +219,16 @@ private void createMockTaskManager(final Set<TaskId> prevTasks,\n         builder.buildTopology();\n     }\n \n-    private Map<String, Subscription> subscriptions;\n-\n     @Before\n     public void setUp() {\n-        if (subscriptions != null) {\n-            subscriptions.clear();\n-        } else {\n-            subscriptions = new HashMap<>();\n-        }\n-    }\n-\n-    private static SubscriptionInfo getInfo(final int version,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5ae5590505776d515d3b7462cf7cbaa2bde9ec"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTk1OTcwOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDo1MTo0NlrOF3tkVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMDo1MTo0NlrOF3tkVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2MjU4Mg==", "bodyText": "Nice.", "url": "https://github.com/apache/kafka/pull/8306#discussion_r393962582", "createdAt": "2020-03-17T20:51:46Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -440,18 +418,15 @@ public void testEagerSubscription() {\n         final UUID processId = UUID.randomUUID();\n         createMockTaskManager(prevTasks, standbyTasks, processId, builder);\n         EasyMock.replay(taskManager);\n-\n-        streamsMetadataState = EasyMock.createNiceMock(StreamsMetadataState.class);\n-        configurePartitionAssignor(emptyMap());\n-        partitionAssignor.setRebalanceProtocol(RebalanceProtocol.EAGER);\n+        configurePartitionAssignorWith(Collections.singletonMap(StreamsConfig.UPGRADE_FROM_CONFIG, StreamsConfig.UPGRADE_FROM_23));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5ae5590505776d515d3b7462cf7cbaa2bde9ec"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjAwMTU4OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMTowMzo0MlrOF3t-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjo1MjoyM1rOF3w1zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2OTI1Ng==", "bodyText": "nit: the mocked task manager would just call getTaskOffsetSums(...) so maybe we can just call taskManager.getTaskOffsetSums() here? Ditto elsewhere.", "url": "https://github.com/apache/kafka/pull/8306#discussion_r393969256", "createdAt": "2020-03-17T21:03:42Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -482,10 +455,7 @@ public void testCooperativeSubscription() {\n         Collections.sort(subscription.topics());\n         assertEquals(asList(\"topic1\", \"topic2\"), subscription.topics());\n \n-        final Set<TaskId> standbyTasks = new HashSet<>(cachedTasks);\n-        standbyTasks.removeAll(prevTasks);\n-\n-        final SubscriptionInfo info = getInfo(processId, getTaskOffsetSums(prevTasks, cachedTasks), null);\n+        final SubscriptionInfo info = getInfo(processId, getTaskOffsetSums(prevTasks, standbyTasks), null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad5ae5590505776d515d3b7462cf7cbaa2bde9ec"}, "originalPosition": 224}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAxNjIwNg==", "bodyText": "We want to stub the task offsets for cases where we just care about the task sets themselves, much of this will end up being rewritten in the next few KIP-441 PRs. But I think we can clean this up a bit more, I'll ping you for another review soon", "url": "https://github.com/apache/kafka/pull/8306#discussion_r394016206", "createdAt": "2020-03-17T22:52:23Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -482,10 +455,7 @@ public void testCooperativeSubscription() {\n         Collections.sort(subscription.topics());\n         assertEquals(asList(\"topic1\", \"topic2\"), subscription.topics());\n \n-        final Set<TaskId> standbyTasks = new HashSet<>(cachedTasks);\n-        standbyTasks.removeAll(prevTasks);\n-\n-        final SubscriptionInfo info = getInfo(processId, getTaskOffsetSums(prevTasks, cachedTasks), null);\n+        final SubscriptionInfo info = getInfo(processId, getTaskOffsetSums(prevTasks, standbyTasks), null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk2OTI1Ng=="}, "originalCommit": {"oid": "ad5ae5590505776d515d3b7462cf7cbaa2bde9ec"}, "originalPosition": 224}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3344, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}