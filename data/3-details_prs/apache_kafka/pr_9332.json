{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMTA3Mzkw", "number": 9332, "title": "KAFKA-10511; Ensure monotonic start epoch/offset updates in `MockLog`", "bodyText": "There is a minor difference in behavior between the epoch caching logic in MockLog from the behavior in LeaderEpochFileCache. The latter ensures that every new epoch/start offset entry added to the cache increases monotonically over the previous entries. This patch brings the behavior of MockLog in line.\nIt also simplifies the assignEpochStartOffset api in ReplicatedLog. We always intend to use the log end offset, so this patch removes the start offset parameter.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-24T00:10:39Z", "url": "https://github.com/apache/kafka/pull/9332", "merged": true, "mergeCommit": {"oid": "dbe3e4a4cccce06836b59c2f3853669e008eb58f"}, "closed": true, "closedAt": "2020-09-29T00:16:56Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdL1ijrgH2gAyNDkyMTA3MzkwOjE0ZTBjYWI1ZTMzNWIyNjE5ZDhmMTdjOTk5YWFjNmExYzY0OGI0NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNcKOvAFqTQ5Nzk2NDM1Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/14e0cab5e335b2619d8f17c999aac6a1c648b465", "committedDate": "2020-09-23T23:53:07Z", "message": "KAFKA-10511; Ensure monotonic start epoch/offset updates in `MockLog`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1MjQ3OTI1", "url": "https://github.com/apache/kafka/pull/9332#pullrequestreview-495247925", "createdAt": "2020-09-24T06:15:50Z", "commit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjoxNTo1MFrOHXLLDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQwNjoxOTowMFrOHXLPfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MjM0OQ==", "bodyText": "So the idea is to wipe out the older epoch (as epoch - 1)'s end offset, and the search for (epoch - 1) would give (epoch - 2) end offset? In the case where we put leader change message in mock log, this should never happen right?", "url": "https://github.com/apache/kafka/pull/9332#discussion_r494062349", "createdAt": "2020-09-24T06:15:50Z", "author": {"login": "abbccdda"}, "path": "raft/src/test/java/org/apache/kafka/raft/MockLog.java", "diffHunk": "@@ -310,10 +310,10 @@ public LogFetchInfo read(long startOffset, Isolation isolation) {\n     }\n \n     @Override\n-    public void assignEpochStartOffset(int epoch, long startOffset) {\n-        if (startOffset != endOffset().offset)\n-            throw new IllegalArgumentException(\n-                \"Can only assign epoch for the end offset \" + endOffset().offset + \", but get offset \" + startOffset);\n+    public void initializeLeaderEpoch(int epoch) {\n+        long startOffset = endOffset().offset;\n+        epochStartOffsets.removeIf(epochStartOffset ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MjY3Ng==", "bodyText": "I thought this is a test for end offset?", "url": "https://github.com/apache/kafka/pull/9332#discussion_r494062676", "createdAt": "2020-09-24T06:16:46Z", "author": {"login": "abbccdda"}, "path": "raft/src/test/java/org/apache/kafka/raft/MockLogTest.java", "diffHunk": "@@ -370,6 +365,23 @@ public void testReadOutOfRangeOffset() {\n             Isolation.UNCOMMITTED));\n     }\n \n+    @Test\n+    public void testMonotonicEpochStartOffset() {\n+        appendBatch(5, 1);\n+        assertEquals(5L, log.endOffset().offset);\n+\n+        log.initializeLeaderEpoch(2);\n+        assertEquals(Optional.of(new OffsetAndEpoch(5L, 1)), log.endOffsetForEpoch(1));\n+        assertEquals(Optional.of(new OffsetAndEpoch(5L, 2)), log.endOffsetForEpoch(2));\n+\n+        // Initialize a new epoch at the same end offset. The epoch cache ensures\n+        // that the start offset of each retained epoch increases monotonically.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2MzQ4NA==", "bodyText": "So the reason that this is safe is because we no longer try assigning offset other than the end offset?", "url": "https://github.com/apache/kafka/pull/9332#discussion_r494063484", "createdAt": "2020-09-24T06:19:00Z", "author": {"login": "abbccdda"}, "path": "raft/src/test/java/org/apache/kafka/raft/RaftEventSimulationTest.java", "diffHunk": "@@ -712,11 +712,6 @@ void initializeElection(ElectionState election) {\n \n             nodes.values().forEach(state -> {\n                 state.store.writeElectionState(election);\n-                if (election.hasLeader()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTY0MzU3", "url": "https://github.com/apache/kafka/pull/9332#pullrequestreview-497964357", "createdAt": "2020-09-28T23:26:46Z", "commit": {"oid": "14e0cab5e335b2619d8f17c999aac6a1c648b465"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 681, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}