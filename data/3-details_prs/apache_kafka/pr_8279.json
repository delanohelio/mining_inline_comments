{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2OTI4MjE2", "number": 8279, "title": "KAFKA-9706: Handle null keys/values in Flatten transformation", "bodyText": "Fix DataException thrown when handling tombstone events with null value\nPasses through original record when finding a tombstone record\nAdd tests for schema and schemaless data\n\nSigned-off-by: Greg Harris gregh@confluent.io\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-11T21:26:46Z", "url": "https://github.com/apache/kafka/pull/8279", "merged": true, "mergeCommit": {"oid": "2c969b14d358f902ef7037395a4f8a0a2b79a611"}, "closed": true, "closedAt": "2020-03-30T22:09:27Z", "author": {"login": "gharris1727"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcMt9BMgH2gAyMzg2OTI4MjE2OjU4ZDA1ODM0YWVmY2NjOGIyMmQxZTRlZWM4MjkzN2M0YjE3YjU5NTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcSzEsKAH2gAyMzg2OTI4MjE2OmE1ZGIzYWQ3YjZhN2YwNmViNmQyYTViZGM2ZGE3NzI4NDBjNWRmNDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "58d05834aefccc8b22d1e4eec82937c4b17b5950", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/58d05834aefccc8b22d1e4eec82937c4b17b5950", "committedDate": "2020-03-11T21:25:33Z", "message": "KAFKA-9706: Handle null keys/values in Flatten transformation\n\n* Fix DataException thrown when handling tombstone events with null value\n* Passes through original record when finding a tombstone record\n* Add tests for schema and schemaless data\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTU0NDEx", "url": "https://github.com/apache/kafka/pull/8279#pullrequestreview-373154411", "createdAt": "2020-03-11T22:00:02Z", "commit": {"oid": "58d05834aefccc8b22d1e4eec82937c4b17b5950"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/94942a8e18e04b52ccf9d5a698c4d0145cb89a8f", "committedDate": "2020-03-25T19:48:26Z", "message": "Inline misleadingly named isTombstoneRecord function\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MDc5MjI4", "url": "https://github.com/apache/kafka/pull/8279#pullrequestreview-384079228", "createdAt": "2020-03-30T17:33:18Z", "commit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxNzozMzoxOFrOF90pjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODowMzo0N1rOF910qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDA2MQ==", "bodyText": "nit: remove blank line", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370061", "createdAt": "2020-03-30T17:33:18Z", "author": {"login": "kkonstantine"}, "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDEzNg==", "bodyText": "nit: remove blank line", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370136", "createdAt": "2020-03-30T17:33:23Z", "author": {"login": "kkonstantine"}, "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+\n+        final SourceRecord transformedRecord = xformValue.apply(record);\n+\n+        assertEquals(null, transformedRecord.value());\n+        assertEquals(null, transformedRecord.valueSchema());\n+    }\n+\n+    @Test\n+    public void tombstoneEventWithSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final Schema simpleStructSchema = SchemaBuilder.struct().name(\"name\").version(1).doc(\"doc\").field(\"magic\", Schema.OPTIONAL_INT64_SCHEMA).build();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM3MDE5MQ==", "bodyText": "nit: remove blank line", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400370191", "createdAt": "2020-03-30T17:33:27Z", "author": {"login": "kkonstantine"}, "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);\n+\n+        final SourceRecord transformedRecord = xformValue.apply(record);\n+\n+        assertEquals(null, transformedRecord.value());\n+        assertEquals(null, transformedRecord.valueSchema());\n+    }\n+\n+    @Test\n+    public void tombstoneEventWithSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final Schema simpleStructSchema = SchemaBuilder.struct().name(\"name\").version(1).doc(\"doc\").field(\"magic\", Schema.OPTIONAL_INT64_SCHEMA).build();\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            simpleStructSchema, null);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDM4OTI5MQ==", "bodyText": "in AK tab space is equal to 4 single spaces. We need two tabs here. Checkstyle might not complain because it's tests. But line 139 has an example of correct indentation.", "url": "https://github.com/apache/kafka/pull/8279#discussion_r400389291", "createdAt": "2020-03-30T18:03:47Z", "author": {"login": "kkonstantine"}, "path": "connect/transforms/src/test/java/org/apache/kafka/connect/transforms/FlattenTest.java", "diffHunk": "@@ -297,4 +297,32 @@ public void testOptionalAndDefaultValuesNested() {\n         Schema transformedOptFieldSchema = SchemaBuilder.string().optional().defaultValue(\"child_default\").build();\n         assertEquals(transformedOptFieldSchema, transformedSchema.field(\"opt_field\").schema());\n     }\n+\n+    @Test\n+    public void tombstoneEventWithoutSchemaShouldPassThrough() {\n+        xformValue.configure(Collections.<String, String>emptyMap());\n+\n+        final SourceRecord record = new SourceRecord(null, null, \"test\", 0,\n+            null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94942a8e18e04b52ccf9d5a698c4d0145cb89a8f"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/a5db3ad7b6a7f06eb6d2a5bdc6da772840c5df46", "committedDate": "2020-03-30T18:47:00Z", "message": "Fix whitespace and indentation\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 237, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}