{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc2NDMyMjYx", "number": 8130, "title": "MINOR: trivial cleanups, javadoc errors, omitted StateStore tests, etc.", "bodyText": "Add omitted [WindowStoreBuilderTest, TimestampedWindowStoreBuilderTest]#shouldThrowNullPointerIfMetricsScopeIsNull: Other StateStores has it.\nImprove Stores Javadoc\nRemove unused method + duplicated parameters\nRemove duplicated spaces\nRemove unthrown Exceptions + align javadoc parameters\nRemove unnecessary public from [Sink,Source]TaskContext\nAdd omitted WindowStore, SessionStore test cases: GlobalStateStoreProviderTest, StreamThreadStateStoreProviderTest (Compare it with KeyValueStore counterpart cases.)\nFix MeteredTimestampedWindowStore javadoc\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-02-18T05:58:18Z", "url": "https://github.com/apache/kafka/pull/8130", "merged": true, "mergeCommit": {"oid": "8d4bbf22ad1918dd03300fa48221b71563286f8e"}, "closed": true, "closedAt": "2020-10-08T02:08:31Z", "author": {"login": "dongjinleekr"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcHrSAKABqjMwNjgwMjEyMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQPMe3ABqjM4NTEzNDI5NzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzAzNzcx", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-387703771", "createdAt": "2020-04-04T14:24:29Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNDoyNDoyOVrOGAyN0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNDoyNDoyOVrOGAyN0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ3NTkyMw==", "bodyText": "n -> \"In\"", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403475923", "createdAt": "2020-04-04T14:24:29Z", "author": {"login": "omkreddy"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -807,7 +807,7 @@ public void abortTransaction() throws ProducerFencedException {\n      * data.\n      * </p>\n      * <p>\n-     * Some transactional send errors cannot be resolved with a call to {@link #abortTransaction()}.  In particular,\n+     * Some transactional send errors cannot be resolved with a call to {@link #abortTransaction()}. n particular,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE3MTMw", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-387717130", "createdAt": "2020-04-04T17:11:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxMToyN1rOGAzQfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxMToyN1rOGAzQfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mjk4OA==", "bodyText": "Just to clarify. To put two blanks between two sentences is a writing style that goes back to classic type writers -- having a larger space between sentences makes it easier to read. Hence, removing all those double-blanks (to correct writing style) is just a lot of \"noise\" with no real value...\nWe can still merge this PR (as you put a lot of work into it already), however, I would encourage you to not do such PRs in the future. It's just additional review load (and committers already cannot handle the current load...) with no real value and thus a \"waste\" of your own time as well as the reviewer's time.", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403492988", "createdAt": "2020-04-04T17:11:27Z", "author": {"login": "mjsax"}, "path": "clients/src/main/java/org/apache/kafka/clients/FetchSessionHandler.java", "diffHunk": "@@ -47,7 +47,7 @@\n  * and over, without explicitly enumerating all the partitions in the request and the\n  * response.\n  *\n- * FetchSessionHandler tracks the partitions which are in the session.  It also\n+ * FetchSessionHandler tracks the partitions which are in the session. It also", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE3MzAx", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-387717301", "createdAt": "2020-04-04T17:13:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxMzo0MlrOGAzRcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxMzo0MlrOGAzRcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzIzNQ==", "bodyText": "This is public API and cannot just be removed. Why do you think it should be removed?", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493235", "createdAt": "2020-04-04T17:13:42Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/WindowedSerdes.java", "diffHunk": "@@ -64,14 +64,6 @@ public SessionWindowedSerde(final Serde<T> inner) {\n         return new TimeWindowedSerde<>(Serdes.serdeFrom(type));\n     }\n \n-    /**\n-     * Construct a {@code TimeWindowedSerde} object to deserialize changelog topic\n-     * for the specified inner class type and window size.\n-     */\n-    static public <T> Serde<Windowed<T>> timeWindowedSerdeFrom(final Class<T> type, final long windowSize) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE3NzM4", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-387717738", "createdAt": "2020-04-04T17:19:45Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxOTo0NVrOGAzTzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoxOTo0NVrOGAzTzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzgzNg==", "bodyText": "Where do we pass a null value? Also, where is the MetricScope in this test?", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493836", "createdAt": "2020-04-04T17:19:45Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/TimestampedWindowStoreBuilderTest.java", "diffHunk": "@@ -179,4 +179,9 @@ public void shouldThrowNullPointerIfTimeIsNull() {\n         new TimestampedWindowStoreBuilder<>(supplier, Serdes.String(), Serdes.String(), null);\n     }\n \n+    @Test(expected = NullPointerException.class)\n+    public void shouldThrowNullPointerIfMetricsScopeIsNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NzE3Nzg2", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-387717786", "createdAt": "2020-04-04T17:20:16Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoyMDoxNlrOGAzT_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNFQxNzoyMDoxNlrOGAzT_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5Mzg4NA==", "bodyText": "Same question as above?", "url": "https://github.com/apache/kafka/pull/8130#discussion_r403493884", "createdAt": "2020-04-04T17:20:16Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/WindowStoreBuilderTest.java", "diffHunk": "@@ -134,4 +134,9 @@ public void shouldThrowNullPointerIfTimeIsNull() {\n         new WindowStoreBuilder<>(supplier, Serdes.String(), Serdes.String(), null);\n     }\n \n+    @Test(expected = NullPointerException.class)\n+    public void shouldThrowNullPointerIfMetricsScopeIsNull() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzA4NDk4", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-499708498", "createdAt": "2020-09-30T18:35:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNTo0OFrOHaqcAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNTo0OFrOHaqcAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDMyMA==", "bodyText": "@guozhangwang Is this ok? I am not familiar with this part of the code. If false the default anyway?", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497720320", "createdAt": "2020-09-30T18:35:48Z", "author": {"login": "mjsax"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2419,7 +2419,7 @@ class Log(@volatile private var _dir: File,\n \n       // replace old segment with new ones\n       info(s\"Replacing overflowed segment $segment with split segments $newSegments\")\n-      replaceSegments(newSegments.toList, List(segment), isRecoveredSwapFile = false)\n+      replaceSegments(newSegments.toList, List(segment))", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5NzA4ODI0", "url": "https://github.com/apache/kafka/pull/8130#pullrequestreview-499708824", "createdAt": "2020-09-30T18:36:14Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoxNFrOHaqc6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODozNjoxNFrOHaqc6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcyMDU1NA==", "bodyText": "@dongjinleekr Seems you did not revert this change yet.", "url": "https://github.com/apache/kafka/pull/8130#discussion_r497720554", "createdAt": "2020-09-30T18:36:14Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/WindowedSerdes.java", "diffHunk": "@@ -64,14 +64,6 @@ public SessionWindowedSerde(final Serde<T> inner) {\n         return new TimeWindowedSerde<>(Serdes.serdeFrom(type));\n     }\n \n-    /**\n-     * Construct a {@code TimeWindowedSerde} object to deserialize changelog topic\n-     * for the specified inner class type and window size.\n-     */\n-    static public <T> Serde<Windowed<T>> timeWindowedSerdeFrom(final Class<T> type, final long windowSize) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzQ5MzIzNQ=="}, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7991605d84d9e84e39587443bcc65b82f3326271", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/7991605d84d9e84e39587443bcc65b82f3326271", "committedDate": "2020-10-07T15:47:53Z", "message": "Add omitted [WindowStoreBuilderTest, TimestampedWindowStoreBuilderTest]#shouldThrowNullPointerIfMetricsScopeIsNull: Other StateStores has it."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cfe008fbd517a20e4c28aa2de6c84692bea0bc7", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/7cfe008fbd517a20e4c28aa2de6c84692bea0bc7", "committedDate": "2020-10-07T15:47:53Z", "message": "Improve Stores Javadoc\n\n1. Fix javadoc typo: Stores#timestampedWindowStoreBuilder, windows-store -> window-store (Compare with Stores#timestampedKeyValueStoreBuilder)\n2. Add omitted IllegalArgumentException condition in Stores#lruMap.\n3. Add omitted IllegalArgumentException condition in WindowBytesStoreSupplier methods."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f9f171610fa2e13c10387b1765924f91fa992c4", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/3f9f171610fa2e13c10387b1765924f91fa992c4", "committedDate": "2020-10-07T15:47:53Z", "message": "Remove unused method + duplicated parameters\n\n1. Remove unused method: TimeWindowedSerde#timeWindowedSerdeFrom(Class, long)\n2. Remove duplicated parameter: Log#splitOverflowedSegment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bdc180ef6041be375c34cc4644904cb5e0995a2", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/9bdc180ef6041be375c34cc4644904cb5e0995a2", "committedDate": "2020-10-07T15:47:54Z", "message": "Remove unthrown Exceptions: TaskManager, ProduceBenchWorker"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bede35cef55008e089f8ea5b95c3aef4824dd2a8", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/bede35cef55008e089f8ea5b95c3aef4824dd2a8", "committedDate": "2020-10-07T15:47:54Z", "message": "Remove unnecessary public from [Sink,Source]TaskContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f895311913681a3bec079c55b415ae0a50cbd70", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/1f895311913681a3bec079c55b415ae0a50cbd70", "committedDate": "2020-10-07T15:47:54Z", "message": "Fix incorrect MeteredTimestampedWindowStore javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9525c50c525c8fa2382b81ec9c53661a2ab1580", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/b9525c50c525c8fa2382b81ec9c53661a2ab1580", "committedDate": "2020-10-07T15:47:55Z", "message": "Remove duplicated entity in checkstyle/import-control.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ada16b49c61068e0d80e057fdada1c5dbf205452", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/ada16b49c61068e0d80e057fdada1c5dbf205452", "committedDate": "2020-10-07T15:47:55Z", "message": "Add omitted WindowStore, SessionStore test cases: GlobalStateStoreProviderTest, StreamThreadStateStoreProviderTest (Note: compare with KeyValueStore cases.)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d581d152530d43dd2f15684f1a766ee34afb572a", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/d581d152530d43dd2f15684f1a766ee34afb572a", "committedDate": "2020-10-07T15:47:55Z", "message": "Update [KeyValue,TimestampedKeyValue,WindowStore,TimestampedWindowStore]BuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull: now checks Exception message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc7194d838ce746a310d84be22f3f15a8f6640ce", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/fc7194d838ce746a310d84be22f3f15a8f6640ce", "committedDate": "2020-10-07T15:47:56Z", "message": "Give BytesStoreSupplier mock with name to [KeyValue,TimestampedKeyValue,WindowStore,TimestampedWindowStore]BuilderTest#shouldThrowNullPointerIfMetricsScopeIsNull; No exceptions are thrown now."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df01c352d84fe1364e75978292c2b54500dc56b0", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/df01c352d84fe1364e75978292c2b54500dc56b0", "committedDate": "2020-10-07T15:47:56Z", "message": "Add metricsScope nullity check to [KeyValue,TimestampedKeyValue,Window,TimestampedWindow,Session]StoreBuilder constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29d766afe504cade3fd8dfb8cf966e0cb83c67bf", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/29d766afe504cade3fd8dfb8cf966e0cb83c67bf", "committedDate": "2020-10-07T15:47:57Z", "message": "Add nullity check in 'WindowStoreBuilder' constructor. (For parity with 'TimestampedWindowStoreBuilder', 'SessionStoreBuilder', etc.)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac6ac58c18513f653b8757dee4a686cb431e9779", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/ac6ac58c18513f653b8757dee4a686cb431e9779", "committedDate": "2020-10-07T15:47:57Z", "message": "Remove unthrown Exception in SessionStoreBuilderTest#setUp"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "958cb5b5819d2d65f353c445b94f58915f7e5853", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/958cb5b5819d2d65f353c445b94f58915f7e5853", "committedDate": "2020-10-07T15:47:57Z", "message": "Fix typo in `XXXStoreBuilder` validation methods\n\n- `KeyValueStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `TimestampedKeyValueStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `TimestampedWindowStoreBuilder`: `bytesStoreSupplier` \u2192 `storeSupplier`\n- `SessionStoreBuilder`: `supplier` \u2192 `storeSupplier`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dff84f2cf87a54fe7b6ce55ef0ac4371eb86af18", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/dff84f2cf87a54fe7b6ce55ef0ac4371eb86af18", "committedDate": "2020-10-07T15:47:58Z", "message": "Remove unused variables: RocksDBStore, SuppressionIntegrationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92dda54b2d23ef95cad3e575f4bc9a6df09641d", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/e92dda54b2d23ef95cad3e575f4bc9a6df09641d", "committedDate": "2020-10-07T15:47:58Z", "message": "Remove redundant type parameters from AbstractJoinIntegrationTest, SuppressScenarioTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6972309253301b252acdf85d48d0dba758cff5b5", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/6972309253301b252acdf85d48d0dba758cff5b5", "committedDate": "2020-10-07T15:50:34Z", "message": "Revert WindowedSerdes#timeWindowedSerdeFrom(Class, long)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f7a73ff0e1027602e7590cea21e2c5973a76973", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/9f7a73ff0e1027602e7590cea21e2c5973a76973", "committedDate": "2020-10-07T16:01:52Z", "message": "Add supplier mock object in TimestampedKeyValueStoreMaterializerTest#shouldCreateKeyValueStoreWithTheProvidedInnerStore to return metricScope: without it, NullPointerExcepion is thrown during TimestampedKeyValueStore instance creation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9f7a73ff0e1027602e7590cea21e2c5973a76973", "author": {"user": {"login": "dongjinleekr", "name": "Lee Dongjin"}}, "url": "https://github.com/apache/kafka/commit/9f7a73ff0e1027602e7590cea21e2c5973a76973", "committedDate": "2020-10-07T16:01:52Z", "message": "Add supplier mock object in TimestampedKeyValueStoreMaterializerTest#shouldCreateKeyValueStoreWithTheProvidedInnerStore to return metricScope: without it, NullPointerExcepion is thrown during TimestampedKeyValueStore instance creation."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1473, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}