{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTM2NzY2", "number": 8479, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1NzozMFrOEIkTuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzo0OVrOEKPwoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDE4OTM3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQyMzo1NzozMFrOGom-Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDowNTozN1rOGpPt9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg==", "bodyText": "It's probably better to do this in Partition.makeFollower() instead of here. That way, we only skip partitions that have incurred ZK error.\nAlso, the same ZK exception can happen in Partition.makeLeader(). So, we want to do the same thing there as well.", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445234702", "createdAt": "2020-06-24T23:57:30Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "diffHunk": "@@ -1556,6 +1557,11 @@ class ReplicaManager(val config: KafkaConfig,\n             error(s\"Error while making broker the follower for partition $partition with leader \" +\n               s\"$newLeaderBrokerId in dir $dirOpt\", e)\n             responseMap.put(partition.topicPartition, Errors.KAFKA_STORAGE_ERROR)\n+          case e: ZooKeeperClientException =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfa33eb9e87dfde769b39de4d6065921fa80c6bd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTc0ODU0NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445748544", "createdAt": "2020-06-25T18:16:07Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "diffHunk": "@@ -1556,6 +1557,11 @@ class ReplicaManager(val config: KafkaConfig,\n             error(s\"Error while making broker the follower for partition $partition with leader \" +\n               s\"$newLeaderBrokerId in dir $dirOpt\", e)\n             responseMap.put(partition.topicPartition, Errors.KAFKA_STORAGE_ERROR)\n+          case e: ZooKeeperClientException =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg=="}, "originalCommit": {"oid": "dfa33eb9e87dfde769b39de4d6065921fa80c6bd"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwMjMyNg==", "bodyText": "@junrao -- let me know if there's additional changes to be made. Thanks.", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445902326", "createdAt": "2020-06-26T00:05:37Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "diffHunk": "@@ -1556,6 +1557,11 @@ class ReplicaManager(val config: KafkaConfig,\n             error(s\"Error while making broker the follower for partition $partition with leader \" +\n               s\"$newLeaderBrokerId in dir $dirOpt\", e)\n             responseMap.put(partition.topicPartition, Errors.KAFKA_STORAGE_ERROR)\n+          case e: ZooKeeperClientException =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTIzNDcwMg=="}, "originalCommit": {"oid": "dfa33eb9e87dfde769b39de4d6065921fa80c6bd"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODM1MjI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoxNDoxNFrOGpP2ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo0NTo1M1rOGpSw8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNDU0Nw==", "bodyText": "The message seem inaccurate since we only skip this partition now. Ditto in makeFollower().", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445904547", "createdAt": "2020-06-26T00:14:14Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MjI0MA==", "bodyText": "That makes sense. That will be reflected. \ud83d\udc4d", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445952240", "createdAt": "2020-06-26T03:45:53Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNDU0Nw=="}, "originalCommit": {"oid": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODM2MDEzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoxOToyOFrOGpP7kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMzo1MDowM1rOGpS0ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNTgxMA==", "bodyText": "Do we need ' before \"?\nAlso, the text could probably be sth like \"ZooKeeper client error occurred while becoming leader for $topicPartition.\"\nDitto in makeFollower().", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445905810", "createdAt": "2020-06-26T00:19:28Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +\n+            s\"ZooKeeper disconnect occurred.\", e)\n+          error(s\"ZooKeeper client occurred while rendering a $topicPartition's leader through zkClient.'\", e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTk1MzEzMA==", "bodyText": "\ud83d\udc4d , have made that change. Thanks @junrao", "url": "https://github.com/apache/kafka/pull/8479#discussion_r445953130", "createdAt": "2020-06-26T03:50:03Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"Because a ZooKeeper client exception has occurred, completed become leader \" +\n+            s\"state change from epoch $leaderEpoch only for those updated partitions with before \" +\n+            s\"ZooKeeper disconnect occurred.\", e)\n+          error(s\"ZooKeeper client occurred while rendering a $topicPartition's leader through zkClient.'\", e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNTgxMA=="}, "originalCommit": {"oid": "c3300a9033f6f63fa00d64d7bd01b5f7f3f91cdc"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc4MDg2OTE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzowNzoyN1rOGpoX6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxNzozMzowNlrOGppHzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA==", "bodyText": "We probably can just keep the state change logging. Also, the logging level probably should be error instead of info. Ditto below.", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446306280", "createdAt": "2020-06-26T17:07:27Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"A ZooKeeper client exception has occurred and makeLeader will be skipping the \" +\n+            s\"state change for the partition with leader epoch: $leaderEpoch \", e)\n+          error(s\"ZooKeeper client error occurred while this partition was becoming the leader for $topicPartition.\", e)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "889e375c094d87e2c97a8076c8ce2b347b5efe94"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwOTUzMg==", "bodyText": "Thanks @junrao -- I will make the logging level to error.\nCould you clarify what you mean by keep the state change logging?", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446309532", "createdAt": "2020-06-26T17:14:19Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"A ZooKeeper client exception has occurred and makeLeader will be skipping the \" +\n+            s\"state change for the partition with leader epoch: $leaderEpoch \", e)\n+          error(s\"ZooKeeper client error occurred while this partition was becoming the leader for $topicPartition.\", e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}, "originalCommit": {"oid": "889e375c094d87e2c97a8076c8ce2b347b5efe94"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxNjY2OA==", "bodyText": "I meant removing the line in 509 of error(s\"ZooKeeper client .", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446316668", "createdAt": "2020-06-26T17:29:23Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"A ZooKeeper client exception has occurred and makeLeader will be skipping the \" +\n+            s\"state change for the partition with leader epoch: $leaderEpoch \", e)\n+          error(s\"ZooKeeper client error occurred while this partition was becoming the leader for $topicPartition.\", e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}, "originalCommit": {"oid": "889e375c094d87e2c97a8076c8ce2b347b5efe94"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMxODU0MA==", "bodyText": "Makes sense. Would appreciate a review on the change -- @junrao .", "url": "https://github.com/apache/kafka/pull/8479#discussion_r446318540", "createdAt": "2020-06-26T17:33:06Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,16 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      } catch {\n+        case e: ZooKeeperClientException =>\n+          stateChangeLogger.info(s\"A ZooKeeper client exception has occurred and makeLeader will be skipping the \" +\n+            s\"state change for the partition with leader epoch: $leaderEpoch \", e)\n+          error(s\"ZooKeeper client error occurred while this partition was becoming the leader for $topicPartition.\", e)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjMwNjI4MA=="}, "originalCommit": {"oid": "889e375c094d87e2c97a8076c8ce2b347b5efe94"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MTc5NDI0OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxOToyNzo0OVrOGrLVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxOToyMzo1MlrOGryiQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg==", "bodyText": "Do we need this? Ditto below.", "url": "https://github.com/apache/kafka/pull/8479#discussion_r447927722", "createdAt": "2020-06-30T19:27:49Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,15 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f95844a4bbaa855f69eeffb5e19182de171936fc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODUyNzMyMQ==", "bodyText": "@andrewchoi5 : I was asking if we could change\nthis.createLogIfNotExists()\nto\ncreateLogIfNotExists()", "url": "https://github.com/apache/kafka/pull/8479#discussion_r448527321", "createdAt": "2020-07-01T17:56:10Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,15 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg=="}, "originalCommit": {"oid": "f95844a4bbaa855f69eeffb5e19182de171936fc"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODU2OTkyMg==", "bodyText": "@junrao  -- Got it. I misunderstood it for something else. Updated!", "url": "https://github.com/apache/kafka/pull/8479#discussion_r448569922", "createdAt": "2020-07-01T19:23:52Z", "author": {"login": "andrewchoi5"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -499,7 +500,15 @@ class Partition(val topicPartition: TopicPartition,\n         addingReplicas = addingReplicas,\n         removingReplicas = removingReplicas\n       )\n-      createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)\n+      try {\n+        this.createLogIfNotExists(partitionState.isNew, isFutureReplica = false, highWatermarkCheckpoints)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzkyNzcyMg=="}, "originalCommit": {"oid": "f95844a4bbaa855f69eeffb5e19182de171936fc"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2990, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}