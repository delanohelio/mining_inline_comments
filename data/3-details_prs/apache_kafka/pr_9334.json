{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMjg5NDU3", "number": 9334, "title": "KAFKA-10516; Disable automatic retry of `THROTTLING_QUOTA_EXCEEDED` errors in the `kafka-topics` command (KIP-599)", "bodyText": "This PR does two things:\n\nAs stated in KIP-599, we'd like to disable the automatic retry of THROTTLING_QUOTA_EXCEEDED errors in order to avoid letting the command hangs until default.api.timeout.ms is reached.\nChange the default value of ErrorMessage to null in the DeleteTopicsResponse. I have noted that it defaults to an empty string at the moment. The Admin client only uses the default message when the ErrorMessage is null so we end up with an empty message provided back to the user when ErrorMessage is not explicitly set by the broker.\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-24T08:47:58Z", "url": "https://github.com/apache/kafka/pull/9334", "merged": true, "mergeCommit": {"oid": "89485fe137588531744752bd772aabe78cd4f374"}, "closed": true, "closedAt": "2020-09-25T14:57:20Z", "author": {"login": "dajac"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLtQKXgH2gAyNDkyMjg5NDU3Ojk0NGZlZDU4N2U2ZGIwMzc4NmY4YzBkMzBiMmRjMWQ3MTU2YjhmZDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdMXD7ZAFqTQ5NjQ5OTgxNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "944fed587e6db03786f8c0d30b2dc1d7156b8fd0", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/944fed587e6db03786f8c0d30b2dc1d7156b8fd0", "committedDate": "2020-09-23T14:13:47Z", "message": "DeleteTopicsResponse's ErrorMessage must be null by default otherwise clients do not fallback to the default error message."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d76fc60ffc314be5425f99fcc8516a679a4326d6", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/d76fc60ffc314be5425f99fcc8516a679a4326d6", "committedDate": "2020-09-24T08:42:38Z", "message": "Disable automatic retry of ThrottlingQuotaExceededException in `kafka-topics` command"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abefd506b997f414227fa57fe83a07bd557dfb46", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/abefd506b997f414227fa57fe83a07bd557dfb46", "committedDate": "2020-09-24T09:55:49Z", "message": "checkstyle :)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1ODIxNjUx", "url": "https://github.com/apache/kafka/pull/9334#pullrequestreview-495821651", "createdAt": "2020-09-24T18:03:27Z", "commit": {"oid": "abefd506b997f414227fa57fe83a07bd557dfb46"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODowMzoyN1rOHXmgKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxODozMToxNlrOHXnnfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUxMDEyMQ==", "bodyText": "Couldn't we just use error(message, e)?", "url": "https://github.com/apache/kafka/pull/9334#discussion_r494510121", "createdAt": "2020-09-24T18:03:27Z", "author": {"login": "rajinisivaram"}, "path": "core/src/main/scala/kafka/admin/TopicCommand.scala", "diffHunk": "@@ -69,16 +71,26 @@ object TopicCommand extends Logging {\n       else if (opts.hasDeleteOption)\n         topicService.deleteTopic(opts)\n     } catch {\n+      case e: ExecutionException =>\n+        if (e.getCause != null)\n+          printException(e.getCause)\n+        else\n+          printException(e)\n+        exitCode = 1\n       case e: Throwable =>\n-        println(\"Error while executing topic command : \" + e.getMessage)\n-        error(Utils.stackTrace(e))\n+        printException(e)\n         exitCode = 1\n     } finally {\n       topicService.close()\n       Exit.exit(exitCode)\n     }\n   }\n \n+  private def printException(e: Throwable): Unit = {\n+    println(\"Error while executing topic command : \" + e.getMessage)\n+    error(Utils.stackTrace(e))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abefd506b997f414227fa57fe83a07bd557dfb46"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyNzUwMw==", "bodyText": "May be worth importing org.mockito.Mockito._ and  org.mockito.ArgumentMatchers._ to avoid repeating the class name everywhere.", "url": "https://github.com/apache/kafka/pull/9334#discussion_r494527503", "createdAt": "2020-09-24T18:30:28Z", "author": {"login": "rajinisivaram"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -844,4 +851,72 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     assertEquals(2, rows.size)\n     rows(0).startsWith(s\"Topic:$testTopicName\\tPartitionCount:1\")\n   }\n+\n+  @Test\n+  def testCreateTopicDoesNotRetryThrottlingQuotaExceededException(): Unit = {\n+    val adminClient = Mockito.mock(classOf[Admin])\n+    val topicService = AdminClientTopicService(adminClient)\n+\n+    val result = AdminClientTestUtils.createTopicsResult(testTopicName, Errors.THROTTLING_QUOTA_EXCEEDED.exception())\n+    Mockito.when(adminClient.createTopics(ArgumentMatchers.any(), ArgumentMatchers.any())).thenReturn(result)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abefd506b997f414227fa57fe83a07bd557dfb46"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDUyODM4MA==", "bodyText": "We could just use Optional.empty instead of creating in Scala and converting?", "url": "https://github.com/apache/kafka/pull/9334#discussion_r494528380", "createdAt": "2020-09-24T18:31:16Z", "author": {"login": "rajinisivaram"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -844,4 +851,72 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     assertEquals(2, rows.size)\n     rows(0).startsWith(s\"Topic:$testTopicName\\tPartitionCount:1\")\n   }\n+\n+  @Test\n+  def testCreateTopicDoesNotRetryThrottlingQuotaExceededException(): Unit = {\n+    val adminClient = Mockito.mock(classOf[Admin])\n+    val topicService = AdminClientTopicService(adminClient)\n+\n+    val result = AdminClientTestUtils.createTopicsResult(testTopicName, Errors.THROTTLING_QUOTA_EXCEEDED.exception())\n+    Mockito.when(adminClient.createTopics(ArgumentMatchers.any(), ArgumentMatchers.any())).thenReturn(result)\n+\n+    assertThrows(classOf[ThrottlingQuotaExceededException],\n+      () => topicService.createTopic(new TopicCommandOptions(Array(\"--topic\", testTopicName))))\n+\n+    val expectedNewTopic = new NewTopic(testTopicName, Option.empty[Integer].asJava, Option.empty[java.lang.Short].asJava)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abefd506b997f414227fa57fe83a07bd557dfb46"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac04463df97aad9ca5f2b8ce959ed1e9c5de17ec", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/ac04463df97aad9ca5f2b8ce959ed1e9c5de17ec", "committedDate": "2020-09-25T07:49:05Z", "message": "Address Rajini's feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDk5ODE0", "url": "https://github.com/apache/kafka/pull/9334#pullrequestreview-496499814", "createdAt": "2020-09-25T14:56:26Z", "commit": {"oid": "ac04463df97aad9ca5f2b8ce959ed1e9c5de17ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 685, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}