{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDUyMTg1", "number": 8145, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjowODoxOFrODh7kQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMDo1OTo0NVrODiDTsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA1NTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjowODoxOFrOFs8LbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQyMDowODo1MFrOFtDMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ==", "bodyText": "Do we still need this here? When we call unsubscribe later, it'll invoke:\n            if (generation() != Generation.NO_GENERATION) {\n                e = invokePartitionsRevoked(droppedPartitions);\n            } else {\n                e = invokePartitionsLost(droppedPartitions);\n            }\n\nIt seems like it might be better to just let the consumer manage the task lifecycle, since we may not have lost all the tasks.\nWDYT about removing this line and just setting the needRebalance flag?", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382667629", "createdAt": "2020-02-21T16:08:18Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxNjE2MQ==", "bodyText": "Make sense to me, either way we should be able to hit handleLostAll, just one question would be, could we guarantee that the tasks are always matching the assigned partitions? If consumer doesn't own any partition but we still have tasks not cleaned up, this could block us from triggering the callback.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382716161", "createdAt": "2020-02-21T17:42:11Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcyNDE2MQ==", "bodyText": "I'm not 100% sure, but I'd be surprised if we could ever have a task for a partition we don't have assigned. If you're concerned about it, we can just disregard this topic for now.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382724161", "createdAt": "2020-02-21T18:00:07Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczODY5MQ==", "bodyText": "@vvcephei @abbccdda there happen to have a discussion that validates this :) https://github.com/apache/kafka/pull/8087/files#r382735615", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382738691", "createdAt": "2020-02-21T18:31:58Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NzczOQ==", "bodyText": "I agree we should remove the direct handleLostAll call here and leave it to enforceRebalance to appropriately handle the TaskMigratedException scenario", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382767739", "createdAt": "2020-02-21T19:35:40Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODAyNA==", "bodyText": "IMO we should never call the handleXXX methods from outside the rebalance callbacks", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382768024", "createdAt": "2020-02-21T19:36:17Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc4MjU3Nw==", "bodyText": "Actually, due to a race condition with the heartbeat thread it seems we are not safe to assume unsubscribe will invoke onPartitionsLost in which case we would end up throwing TaskMigratedException due to invoking onPartitionsRevoked. I think we should fix this more soundly in trunk at the consumer level, but for 2.5 the best way/only way to handle it from Streams is to catch this exception and then invoke handleLostAll directly from the Streamthread. See discussion here", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382782577", "createdAt": "2020-02-21T20:08:50Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2NzYyOQ=="}, "originalCommit": null, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTA2NTEyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNjoxMToxN1rOFs8R3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTozMjoyNFrOFtCMpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng==", "bodyText": "Side remark: It's really not great to catch Throwable and reinterpret it, since it encompasses both Error and Exception. I.e., We might catch an OutOfMemoryError and wrap it as a TaskMigratedException, which would obviously be bad.\nWhat do you think about changing these on the side to just catch RuntimeException or Exception?", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382669276", "createdAt": "2020-02-21T16:11:17Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxMzIzNA==", "bodyText": "That sounds good", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382713234", "createdAt": "2020-02-21T17:35:57Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTUzNQ==", "bodyText": "Actually I think we should not interpret everything as TaskMigrated --> if it is due to a recoverable fenced issue e.g. the thrown exception would already be a TaskMigratedException. So I think we should not capture any here instead.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382739535", "createdAt": "2020-02-21T18:33:55Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NzYxNQ==", "bodyText": "I think handleRevocation cannot guarantee to catch all exceptions as TaskMigrated correct?", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382747615", "createdAt": "2020-02-21T18:51:45Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2NjI0NA==", "bodyText": "I think Guozhang's point is that handleRevocation might throw other exceptions (eg IllegalStateException) which we should not convert to TaskMigratedException because they are fatal while TaskMigrated is recoverable", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382766244", "createdAt": "2020-02-21T19:32:24Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -71,12 +72,7 @@ public void onPartitionsRevoked(final Collection<TopicPartition> partitions) {\n             try {\n                 taskManager.handleRevocation(partitions);\n             } catch (final Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY2OTI3Ng=="}, "originalCommit": null, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2OTQ5ODA4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxODozNDo0NFrOFtAltw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxOTo0NjozMFrOFtClkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ==", "bodyText": "Why not trigger rebalance immediately but defer it to the next iteration? Is it to make sure we capture any exceptions from the enforceRebalance? I thought this function should never throw any new exception since we already close all tasks as lost.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382739895", "createdAt": "2020-02-21T18:34:44Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0MDYyMA==", "bodyText": "Also cc @ableegoldman who's working on the new consumer API to replace enforceRebalance.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382740620", "createdAt": "2020-02-21T18:36:24Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc0NDY5NQ==", "bodyText": "John and I were discussing whether to remove the call to handleLostAll here :)", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382744695", "createdAt": "2020-02-21T18:45:29Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc2ODQ2Mw==", "bodyText": "Also +1 on this -- just call enforceRebalance directly here (and remove the handleLostAll first call handleLostAll)", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382768463", "createdAt": "2020-02-21T19:37:16Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, "originalCommit": null, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjc3MjYyNQ==", "bodyText": "Actually do we even need the needRebalance flag? For version probing we just call enforceRebalance directly, and for TaskMigratedException it seems we should do the same. Maybe at some point in the future we will need to introduce it again, but for now it seems like we can get away with no rebalanceException AND no needRebalance flag", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382772625", "createdAt": "2020-02-21T19:46:30Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -761,7 +761,7 @@ private void runLoop() {\n                     \"Will close out all assigned tasks and rejoin the consumer group.\");\n \n                 taskManager.handleLostAll();\n-                enforceRebalance();\n+                needRebalance = true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjczOTg5NQ=="}, "originalCommit": null, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MDMyMzcxOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMDo1OTo0NVrOFtIfJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwMzo1MzoyOVrOFtJWfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTI4Ng==", "bodyText": "Hmm.. do we want to capture all Exceptions as TaskMigratedException? I actually think it's okay to not capture anything here since only StreamsException or TaskMigratedException would be thrown here.", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382869286", "createdAt": "2020-02-22T00:59:45Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -97,16 +91,10 @@ public void onPartitionsLost(final Collection<TopicPartition> partitions) {\n         try {\n             // close all active tasks as lost but don't try to commit offsets as we no longer own them\n             taskManager.handleLostAll();\n-        } catch (final Throwable t) {\n-            log.error(\n-                \"Error caught during partitions lost, \" +\n-                    \"will abort the current process and re-throw at the end of rebalance: \",\n-                t\n-            );\n-            streamThread.setRebalanceException(t);\n+        } catch (final Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg4MzQ1Mw==", "bodyText": "Sounds good", "url": "https://github.com/apache/kafka/pull/8145#discussion_r382883453", "createdAt": "2020-02-22T03:53:29Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -97,16 +91,10 @@ public void onPartitionsLost(final Collection<TopicPartition> partitions) {\n         try {\n             // close all active tasks as lost but don't try to commit offsets as we no longer own them\n             taskManager.handleLostAll();\n-        } catch (final Throwable t) {\n-            log.error(\n-                \"Error caught during partitions lost, \" +\n-                    \"will abort the current process and re-throw at the end of rebalance: \",\n-                t\n-            );\n-            streamThread.setRebalanceException(t);\n+        } catch (final Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg2OTI4Ng=="}, "originalCommit": null, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4059, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}