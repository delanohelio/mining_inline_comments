{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5ODgyOTAz", "number": 8568, "title": "KAFKA-9176: Retry on getting local stores from KafkaStreams", "bodyText": "This PR fixes and improves two major issues:\n\n\nWhen calling KafkaStreams#store we can always get an InvalidStateStoreException, and even waiting for Streams state to become RUNNING is not sufficient (this is also how OptimizedKTableIntegrationTest failed). So I wrapped all the function with a Util wrapper that captures and retries on that exception.\n\n\nWhile trouble-shooting this issue, I also realized a potential bug in test-util's produceKeyValuesSynchronously, which creates a new producer for each of the record to send in that batch --- i.e. if you are sending N records with a single call, within that call it will create N producers used to send one record each, which is very slow and costly.\n\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-28T04:58:55Z", "url": "https://github.com/apache/kafka/pull/8568", "merged": true, "mergeCommit": {"oid": "11fc953c05eb2c8db61c61bc765aa8be0598d638"}, "closed": true, "closedAt": "2020-04-28T22:04:20Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb8d-egH2gAyNDA5ODgyOTAzOmY5MzY4NDhhODY5OTJkNzc5ZmEzNzcwM2M0YTRhN2I4M2ZjMzA3Mjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccLQQAAH2gAyNDA5ODgyOTAzOjU3YTJjMzliY2RlZDhlY2JkZjBmNDQzNTIwZWQ3Mzg1ZjRjZTBkYmY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/f936848a86992d779fa37703c4a4a7b83fc30727", "committedDate": "2020-04-28T04:49:05Z", "message": "wrap around getting stores"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxNDk3OTk0", "url": "https://github.com/apache/kafka/pull/8568#pullrequestreview-401497994", "createdAt": "2020-04-28T04:59:22Z", "commit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNDo1OToyMlrOGNCmpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNTowMTowNFrOGNCoyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzMzNQ==", "bodyText": "This is fix 2).", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416327335", "createdAt": "2020-04-28T04:59:22Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java", "diffHunk": "@@ -210,16 +210,21 @@ public static void cleanStateAfterTest(final EmbeddedKafkaCluster cluster, final\n                                                             final Properties producerConfig,\n                                                             final Headers headers,\n                                                             final Time time,\n-                                                            final boolean enableTransactions)\n-        throws ExecutionException, InterruptedException {\n-        for (final KeyValue<K, V> record : records) {\n-            produceKeyValuesSynchronouslyWithTimestamp(topic,\n-                Collections.singleton(record),\n-                producerConfig,\n-                headers,\n-                time.milliseconds(),\n-                enableTransactions);\n-            time.sleep(1L);\n+                                                            final boolean enableTransactions) {\n+\n+        try (final Producer<K, V> producer = new KafkaProducer<>(producerConfig)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzM4Ng==", "bodyText": "Those functions are not used anywhere, ditto below.", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416327386", "createdAt": "2020-04-28T04:59:36Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java", "diffHunk": "@@ -599,13 +595,6 @@ public static void waitForCompletion(final KafkaStreams streams,\n         return waitUntilFinalKeyValueRecordsReceived(consumerConfig, topic, expectedRecords, waitTime, false);\n     }\n \n-    public static <K, V> List<KeyValueTimestamp<K, V>> waitUntilFinalKeyValueTimestampRecordsReceived(final Properties consumerConfig,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzY3MQ==", "bodyText": "This is a minor fix, that we should retry this condition.", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416327671", "createdAt": "2020-04-28T05:00:29Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -163,8 +159,10 @@ public void shouldApplyUpdatesToStandbyStore() throws Exception {\n         // Assert that all messages in the second batch were processed in a timely manner\n         assertThat(semaphore.tryAcquire(batch2NumMessages, 60, TimeUnit.SECONDS), is(equalTo(true)));\n \n-        // Assert that the current value in store reflects all messages being processed\n-        assertThat(newActiveStore.get(key), is(equalTo(totalNumMessages - 1)));\n+        TestUtils.retryOnExceptionWithTimeout(100, 60 * 1000, () -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzg4MQ==", "bodyText": "This is a fix to the test itself: with caching the records are delayed sending to the sink topics.", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416327881", "createdAt": "2020-04-28T05:01:04Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -227,10 +225,11 @@ private Properties streamsConfiguration() {\n         config.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         config.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         config.put(StreamsConfig.NUM_STANDBY_REPLICAS_CONFIG, 1);\n+        config.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 100);\n+        config.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDc1NzMy", "url": "https://github.com/apache/kafka/pull/8568#pullrequestreview-402075732", "createdAt": "2020-04-28T17:52:25Z", "commit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1MjoyNVrOGNgB_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1MjoyNVrOGNgB_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgwOTQ2OQ==", "bodyText": "OptimizedKTableIntegrationTest.shouldApplyUpdatesToStandbyStore still failed on one of the builds at this line :/\nBut, at least we got farther into the test before it failed so I'd say this is still an improvement \ud83d\ude04", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416809469", "createdAt": "2020-04-28T17:52:25Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -163,8 +159,10 @@ public void shouldApplyUpdatesToStandbyStore() throws Exception {\n         // Assert that all messages in the second batch were processed in a timely manner\n         assertThat(semaphore.tryAcquire(batch2NumMessages, 60, TimeUnit.SECONDS), is(equalTo(true)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDgxMzAz", "url": "https://github.com/apache/kafka/pull/8568#pullrequestreview-402081303", "createdAt": "2020-04-28T17:59:41Z", "commit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1OTo0MVrOGNgUUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxNzo1OTo0MVrOGNgUUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjgxNDE2Mw==", "bodyText": "Why do we have to check for null now?", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416814163", "createdAt": "2020-04-28T17:59:41Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "diffHunk": "@@ -158,8 +158,9 @@ public void shouldKStreamGlobalKTableLeftJoin() throws Exception {\n \n         produceGlobalTableValues();\n \n-        final ReadOnlyKeyValueStore<Long, String> replicatedStore =\n-            kafkaStreams.store(StoreQueryParameters.fromNameAndType(globalStore, QueryableStoreTypes.keyValueStore()));\n+        final ReadOnlyKeyValueStore<Long, String> replicatedStore = IntegrationTestUtils\n+            .getStore(globalStore, kafkaStreams, QueryableStoreTypes.keyValueStore());\n+        assertNotNull(replicatedStore);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMjExMjI3", "url": "https://github.com/apache/kafka/pull/8568#pullrequestreview-402211227", "createdAt": "2020-04-28T21:05:30Z", "commit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "state": "APPROVED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMTowNTozMFrOGNm5cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMToxNDozN1rOGNnNlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyMTk3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        .getStore(300000L, storeName, streams, QueryableStoreTypes.keyValueStore());\n          \n          \n            \n                        .getStore(300_000L, storeName, streams, QueryableStoreTypes.keyValueStore());", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416921971", "createdAt": "2020-04-28T21:05:30Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosIntegrationTest.java", "diffHunk": "@@ -810,21 +808,9 @@ private void writeInputData(final List<KeyValue<Long, Long>> records) throws Exc\n     }\n \n     private void verifyStateStore(final KafkaStreams streams,\n-                                  final Set<KeyValue<Long, Long>> expectedStoreContent) {\n-        ReadOnlyKeyValueStore<Long, Long> store = null;\n-\n-        final long maxWaitingTime = System.currentTimeMillis() + 300000L;\n-        while (System.currentTimeMillis() < maxWaitingTime) {\n-            try {\n-                store = streams.store(StoreQueryParameters.fromNameAndType(storeName, QueryableStoreTypes.keyValueStore()));\n-                break;\n-            } catch (final InvalidStateStoreException okJustRetry) {\n-                try {\n-                    Thread.sleep(5000L);\n-                } catch (final Exception ignore) { }\n-            }\n-        }\n-\n+                                  final Set<KeyValue<Long, Long>> expectedStoreContent) throws InterruptedException {\n+        final ReadOnlyKeyValueStore<Long, Long> store = IntegrationTestUtils\n+            .getStore(300000L, storeName, streams, QueryableStoreTypes.keyValueStore());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyNTgxMw==", "bodyText": "not a huge deal, but technically, these should have brackets.", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416925813", "createdAt": "2020-04-28T21:12:18Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StoreUpgradeIntegrationTest.java", "diffHunk": "@@ -337,8 +336,11 @@ public void shouldProxyKeyValueStoreToTimestampedKeyValueStoreUsingPapi() throws\n         TestUtils.waitForCondition(\n             () -> {\n                 try {\n-                    final ReadOnlyKeyValueStore<K, V> store =\n-                        kafkaStreams.store(StoreQueryParameters.fromNameAndType(STORE_NAME, QueryableStoreTypes.keyValueStore()));\n+                    final ReadOnlyKeyValueStore<K, V> store = IntegrationTestUtils.getStore(STORE_NAME, kafkaStreams, QueryableStoreTypes.keyValueStore());\n+\n+                    if (store == null)\n+                        return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyNjk4NQ==", "bodyText": "I guess the flush at the end makes it synchronous anyway?", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416926985", "createdAt": "2020-04-28T21:14:22Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java", "diffHunk": "@@ -269,24 +271,20 @@ public static void cleanStateAfterTest(final EmbeddedKafkaCluster cluster, final\n      * @param <K>                 Key type of the data records\n      * @param <V>                 Value type of the data records\n      */\n-    @SuppressWarnings(\"WeakerAccess\")\n     public static <K, V> void produceKeyValuesSynchronouslyWithTimestamp(final String topic,\n                                                                          final Collection<KeyValue<K, V>> records,\n                                                                          final Properties producerConfig,\n                                                                          final Headers headers,\n                                                                          final Long timestamp,\n-                                                                         final boolean enableTransactions)\n-            throws ExecutionException, InterruptedException {\n+                                                                         final boolean enableTransactions) {\n \n         try (final Producer<K, V> producer = new KafkaProducer<>(producerConfig)) {\n             if (enableTransactions) {\n                 producer.initTransactions();\n                 producer.beginTransaction();\n             }\n             for (final KeyValue<K, V> record : records) {\n-                final Future<RecordMetadata> f = producer.send(\n-                    new ProducerRecord<>(topic, null, timestamp, record.key, record.value, headers));\n-                f.get();\n+                producer.send(new ProducerRecord<>(topic, null, timestamp, record.key, record.value, headers));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 124}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkyNzEyNg==", "bodyText": "thanks for the cleanup", "url": "https://github.com/apache/kafka/pull/8568#discussion_r416927126", "createdAt": "2020-04-28T21:14:37Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/utils/IntegrationTestUtils.java", "diffHunk": "@@ -599,13 +595,6 @@ public static void waitForCompletion(final KafkaStreams streams,\n         return waitUntilFinalKeyValueRecordsReceived(consumerConfig, topic, expectedRecords, waitTime, false);\n     }\n \n-    public static <K, V> List<KeyValueTimestamp<K, V>> waitUntilFinalKeyValueTimestampRecordsReceived(final Properties consumerConfig,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjMyNzM4Ng=="}, "originalCommit": {"oid": "f936848a86992d779fa37703c4a4a7b83fc30727"}, "originalPosition": 152}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4bb8463e529e5e9c631c7dd05b3427d6320e98a9", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/4bb8463e529e5e9c631c7dd05b3427d6320e98a9", "committedDate": "2020-04-28T21:44:42Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K9176-get-store-with-exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57a2c39bcded8ecbdf0f443520ed7385f4ce0dbf", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/57a2c39bcded8ecbdf0f443520ed7385f4ce0dbf", "committedDate": "2020-04-28T22:02:40Z", "message": "github comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1256, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}