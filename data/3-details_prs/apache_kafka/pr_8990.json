{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1Mjk5ODkx", "number": 8990, "title": "KAFKA-10243; ConcurrentModificationException while processing connection setup timeouts", "bodyText": "This PR fixes a bug introduced in #8683.\nWhile processing connection set up timeouts, we are iterating through the connecting nodes to process timeouts and we disconnect within the loop, removing the entry from the set in the loop that it iterating over the set. That raises an ConcurrentModificationException exception. The current unit test did not catch this because it was using only one node.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-07-07T09:54:32Z", "url": "https://github.com/apache/kafka/pull/8990", "merged": true, "mergeCommit": {"oid": "47cbbf2752affc2a511cbe5cb926692d74e6a9cf"}, "closed": true, "closedAt": "2020-07-07T15:48:44Z", "author": {"login": "dajac"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyirq3AH2gAyNDQ1Mjk5ODkxOmY2YWZkYTJhNjZmYThjODUyMDA3YzUyOTIyN2NiNjFmNmMxYWIyOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyqFutAFqTQ0NDE0Mzk2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f6afda2a66fa8c852007c529227cb61f6c1ab29a", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/f6afda2a66fa8c852007c529227cb61f6c1ab29a", "committedDate": "2020-07-07T09:46:46Z", "message": "KAFKA-10243; ConcurrentModificationException while processing connection setup timeouts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "479a681be259332804dde4d65082b56c531be4d1", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/479a681be259332804dde4d65082b56c531be4d1", "committedDate": "2020-07-07T09:54:11Z", "message": "cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzQ1NDI3", "url": "https://github.com/apache/kafka/pull/8990#pullrequestreview-443745427", "createdAt": "2020-07-07T10:02:42Z", "commit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDowMjo0M1rOGt3stQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMDowNDo1OFrOGt3xVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MTY2OQ==", "bodyText": "We can use connectingNodes.stream().filter?", "url": "https://github.com/apache/kafka/pull/8990#discussion_r450751669", "createdAt": "2020-07-07T10:02:43Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -440,6 +441,20 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n         return now - lastConnectAttemptMs(id) > connectionSetupTimeoutMs(id);\n     }\n \n+    /**\n+     * Return the Set of nodes whose connection setup has timed out.\n+     * @param now the current time in ms\n+     */\n+    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+        Set<String> nodes = new HashSet<>();\n+        for (String nodeId : connectingNodes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MjAyMQ==", "bodyText": "nit: connections => connection", "url": "https://github.com/apache/kafka/pull/8990#discussion_r450752021", "createdAt": "2020-07-07T10:03:24Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java", "diffHunk": "@@ -365,4 +367,48 @@ public void testExponentialConnectionSetupTimeout() {\n                 connectionSetupTimeoutMs * connectionSetupTimeoutJitter);\n         assertTrue(connectionStates.connectingNodes().contains(nodeId1));\n     }\n+\n+    @Test\n+    public void testTimedOutConnections() {\n+        // Initiate two connections\n+        connectionStates.connecting(nodeId1, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+        connectionStates.connecting(nodeId2, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Expect no timed out connections\n+        assertTrue(connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds()).isEmpty());\n+\n+        // Advance time by half of the connection setup timeout\n+        time.sleep(connectionSetupTimeoutMs / 2);\n+\n+        // Initiate a third connections", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MjIxOA==", "bodyText": "typo: for for", "url": "https://github.com/apache/kafka/pull/8990#discussion_r450752218", "createdAt": "2020-07-07T10:03:50Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java", "diffHunk": "@@ -365,4 +367,48 @@ public void testExponentialConnectionSetupTimeout() {\n                 connectionSetupTimeoutMs * connectionSetupTimeoutJitter);\n         assertTrue(connectionStates.connectingNodes().contains(nodeId1));\n     }\n+\n+    @Test\n+    public void testTimedOutConnections() {\n+        // Initiate two connections\n+        connectionStates.connecting(nodeId1, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+        connectionStates.connecting(nodeId2, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Expect no timed out connections\n+        assertTrue(connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds()).isEmpty());\n+\n+        // Advance time by half of the connection setup timeout\n+        time.sleep(connectionSetupTimeoutMs / 2);\n+\n+        // Initiate a third connections\n+        connectionStates.connecting(nodeId3, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Advance time beyond the connection setup timeout (+ max jitter) for the first two connections\n+        time.sleep((long) (connectionSetupTimeoutMs / 2 + connectionSetupTimeoutMs * connectionSetupTimeoutJitter));\n+\n+        // Expect two timed out connections.\n+        Set<String> timedOutConnections = connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds());\n+        assertEquals(2, timedOutConnections.size());\n+        assertTrue(timedOutConnections.contains(nodeId1));\n+        assertTrue(timedOutConnections.contains(nodeId2));\n+\n+        // Disconnect the first two connections\n+        connectionStates.disconnected(nodeId1, time.milliseconds());\n+        connectionStates.disconnected(nodeId2, time.milliseconds());\n+\n+        // Advance time beyond the connection setup timeout (+ max jitter) for for the third connections", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1MjI5NQ==", "bodyText": "one?", "url": "https://github.com/apache/kafka/pull/8990#discussion_r450752295", "createdAt": "2020-07-07T10:03:58Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java", "diffHunk": "@@ -365,4 +367,48 @@ public void testExponentialConnectionSetupTimeout() {\n                 connectionSetupTimeoutMs * connectionSetupTimeoutJitter);\n         assertTrue(connectionStates.connectingNodes().contains(nodeId1));\n     }\n+\n+    @Test\n+    public void testTimedOutConnections() {\n+        // Initiate two connections\n+        connectionStates.connecting(nodeId1, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+        connectionStates.connecting(nodeId2, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Expect no timed out connections\n+        assertTrue(connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds()).isEmpty());\n+\n+        // Advance time by half of the connection setup timeout\n+        time.sleep(connectionSetupTimeoutMs / 2);\n+\n+        // Initiate a third connections\n+        connectionStates.connecting(nodeId3, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Advance time beyond the connection setup timeout (+ max jitter) for the first two connections\n+        time.sleep((long) (connectionSetupTimeoutMs / 2 + connectionSetupTimeoutMs * connectionSetupTimeoutJitter));\n+\n+        // Expect two timed out connections.\n+        Set<String> timedOutConnections = connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds());\n+        assertEquals(2, timedOutConnections.size());\n+        assertTrue(timedOutConnections.contains(nodeId1));\n+        assertTrue(timedOutConnections.contains(nodeId2));\n+\n+        // Disconnect the first two connections\n+        connectionStates.disconnected(nodeId1, time.milliseconds());\n+        connectionStates.disconnected(nodeId2, time.milliseconds());\n+\n+        // Advance time beyond the connection setup timeout (+ max jitter) for for the third connections\n+        time.sleep((long) (connectionSetupTimeoutMs / 2 + connectionSetupTimeoutMs * connectionSetupTimeoutJitter));\n+\n+        // Expect two timed out connections.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDc1Mjg1Mg==", "bodyText": "nit: assertEquals(0, ...) may be better here so we know how many in the case of failure?", "url": "https://github.com/apache/kafka/pull/8990#discussion_r450752852", "createdAt": "2020-07-07T10:04:58Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/clients/ClusterConnectionStatesTest.java", "diffHunk": "@@ -365,4 +367,48 @@ public void testExponentialConnectionSetupTimeout() {\n                 connectionSetupTimeoutMs * connectionSetupTimeoutJitter);\n         assertTrue(connectionStates.connectingNodes().contains(nodeId1));\n     }\n+\n+    @Test\n+    public void testTimedOutConnections() {\n+        // Initiate two connections\n+        connectionStates.connecting(nodeId1, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+        connectionStates.connecting(nodeId2, time.milliseconds(), \"localhost\", ClientDnsLookup.DEFAULT);\n+\n+        // Expect no timed out connections\n+        assertTrue(connectionStates.nodesWithConnectionSetupTimeout(time.milliseconds()).isEmpty());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "479a681be259332804dde4d65082b56c531be4d1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1e7b165894495282f0fa1decd7239ea42a6f7ec", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/c1e7b165894495282f0fa1decd7239ea42a6f7ec", "committedDate": "2020-07-07T10:16:01Z", "message": "Address Rajini's feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNzU4NTQ0", "url": "https://github.com/apache/kafka/pull/8990#pullrequestreview-443758544", "createdAt": "2020-07-07T10:21:34Z", "commit": {"oid": "c1e7b165894495282f0fa1decd7239ea42a6f7ec"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0MTQzOTYy", "url": "https://github.com/apache/kafka/pull/8990#pullrequestreview-444143962", "createdAt": "2020-07-07T18:24:33Z", "commit": {"oid": "c1e7b165894495282f0fa1decd7239ea42a6f7ec"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoyNDozM1rOGuKgpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxODoyNDozM1rOGuKgpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTA1OTg3Ng==", "bodyText": "Do we need a Set here? Not sure we need to pay the cost of creating the HashSet, etc.", "url": "https://github.com/apache/kafka/pull/8990#discussion_r451059876", "createdAt": "2020-07-07T18:24:33Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -440,6 +442,16 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n         return now - lastConnectAttemptMs(id) > connectionSetupTimeoutMs(id);\n     }\n \n+    /**\n+     * Return the Set of nodes whose connection setup has timed out.\n+     * @param now the current time in ms\n+     */\n+    public Set<String> nodesWithConnectionSetupTimeout(long now) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e7b165894495282f0fa1decd7239ea42a6f7ec"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1194, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}