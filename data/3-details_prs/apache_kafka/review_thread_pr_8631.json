{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1MDQ1Njk0", "number": 8631, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOToxNjoxMVrOD7kEYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOToxNjoxMVrOD7kEYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzNzgzNTIzOnYy", "diffSide": "RIGHT", "path": "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQwOToxNjoxMVrOGT9qFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjowODo1MlrOGUauEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjMyNg==", "bodyText": "Would this test still pass, even without the global table?", "url": "https://github.com/apache/kafka/pull/8631#discussion_r423586326", "createdAt": "2020-05-12T09:16:11Z", "author": {"login": "big-andy-coates"}, "path": "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java", "diffHunk": "@@ -467,23 +471,62 @@ public void shouldThrowForUnknownTopicDeprecated() {\n     }\n \n     @Test\n-    public void shouldGetSinkTopicNames() {\n+    public void shouldCaptureSinkTopicNamesIfWrittenInto() {\n         testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n \n-        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n+        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n         assertThat(testDriver.producedTopicNames(), hasItem(SINK_TOPIC_1));\n     }\n \n     @Test\n-    public void shouldGetInternalTopicNames() {\n-        testDriver = new TopologyTestDriver(setupTopologyWithInternalTopic(), config);\n+    public void shouldCaptureInternalTopicNamesIfWrittenInto() {\n+        testDriver = new TopologyTestDriver(\n+            setupTopologyWithInternalTopic(\"table1\", \"table2\", \"join\"),\n+            config\n+        );\n+\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n         pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\"\n+            ))\n+        );\n+\n+        pipeRecord(SOURCE_TOPIC_2, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table2-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-registration-topic\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-store-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-response-topic\"\n+            ))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldCaptureGlobalTopicNameIfWrittenInto() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b94b59e26b27c4290ebb44f67f0034cd8f52db71"}, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA2MjQ4MQ==", "bodyText": "Yes, the SOURCE_TOPCI_1 should be added to the set of produced topics in any case. It's more like a \"reverse\" check, i.e., that it does not fail with a to() operation that reuses the \"global topic name\".\nI was not 100% sure if this test is strictly necessary, but thought it can't hurt either.", "url": "https://github.com/apache/kafka/pull/8631#discussion_r424062481", "createdAt": "2020-05-12T22:08:52Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java", "diffHunk": "@@ -467,23 +471,62 @@ public void shouldThrowForUnknownTopicDeprecated() {\n     }\n \n     @Test\n-    public void shouldGetSinkTopicNames() {\n+    public void shouldCaptureSinkTopicNamesIfWrittenInto() {\n         testDriver = new TopologyTestDriver(setupSourceSinkTopology(), config);\n \n-        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n+        pipeRecord(SOURCE_TOPIC_1, testRecord1);\n         assertThat(testDriver.producedTopicNames(), hasItem(SINK_TOPIC_1));\n     }\n \n     @Test\n-    public void shouldGetInternalTopicNames() {\n-        testDriver = new TopologyTestDriver(setupTopologyWithInternalTopic(), config);\n+    public void shouldCaptureInternalTopicNamesIfWrittenInto() {\n+        testDriver = new TopologyTestDriver(\n+            setupTopologyWithInternalTopic(\"table1\", \"table2\", \"join\"),\n+            config\n+        );\n+\n+        assertThat(testDriver.producedTopicNames(), is(Collections.emptySet()));\n \n         pipeRecord(SOURCE_TOPIC_1, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\"\n+            ))\n+        );\n+\n+        pipeRecord(SOURCE_TOPIC_2, testRecord1);\n+        assertThat(\n+            testDriver.producedTopicNames(),\n+            equalTo(mkSet(\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-repartition\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table1-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-table2-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-registration-topic\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-store-changelog\",\n+                config.getProperty(StreamsConfig.APPLICATION_ID_CONFIG) + \"-join-subscription-response-topic\"\n+            ))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldCaptureGlobalTopicNameIfWrittenInto() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzU4NjMyNg=="}, "originalCommit": {"oid": "b94b59e26b27c4290ebb44f67f0034cd8f52db71"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2914, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}