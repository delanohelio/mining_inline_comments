{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDI1MzIw", "number": 8527, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDo1MDozNVrOD1OKTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMjowMFrOD1OcPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTMzMTMzOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDo1MDozNVrOGKjF8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQyMDoyOTowMVrOGLoEvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxMzkwNw==", "bodyText": "Hmm.  Do we need this if we have passwordConfigs?", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413713907", "createdAt": "2020-04-23T10:50:35Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala", "diffHunk": "@@ -1408,13 +1408,23 @@ class DynamicBrokerReconfigurationTest extends ZooKeeperTestHarness with SaslSet\n     sslStoreProps.put(KafkaConfig.PasswordEncoderSecretProp, kafkaConfig.passwordEncoderSecret.map(_.value).orNull)\n     zkClient.makeSurePersistentPathExists(ConfigEntityChangeNotificationZNode.path)\n \n-    val args = Array(\"--zookeeper\", kafkaConfig.zkConnect,\n-      \"--alter\", \"--add-config\", sslStoreProps.asScala.map { case (k, v) => s\"$k=$v\" }.mkString(\",\"),\n-      \"--entity-type\", \"brokers\",\n-      \"--entity-name\", kafkaConfig.brokerId.toString)\n-    ConfigCommand.main(args)\n+    val entityType = ConfigType.Broker\n+    val entityName = kafkaConfig.brokerId.toString\n \n+    val passwordConfigs = sslStoreProps.asScala.keySet.filter(DynamicBrokerConfig.isPasswordConfig)\n+    val passwordEncoderConfigs = new Properties\n+    passwordEncoderConfigs ++= sslStoreProps.asScala.filter { case (key, _) => key.startsWith(\"password.encoder.\") }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDg0NDA5NQ==", "bodyText": "Good catch. Deleted.", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414844095", "createdAt": "2020-04-24T20:29:01Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/integration/kafka/server/DynamicBrokerReconfigurationTest.scala", "diffHunk": "@@ -1408,13 +1408,23 @@ class DynamicBrokerReconfigurationTest extends ZooKeeperTestHarness with SaslSet\n     sslStoreProps.put(KafkaConfig.PasswordEncoderSecretProp, kafkaConfig.passwordEncoderSecret.map(_.value).orNull)\n     zkClient.makeSurePersistentPathExists(ConfigEntityChangeNotificationZNode.path)\n \n-    val args = Array(\"--zookeeper\", kafkaConfig.zkConnect,\n-      \"--alter\", \"--add-config\", sslStoreProps.asScala.map { case (k, v) => s\"$k=$v\" }.mkString(\",\"),\n-      \"--entity-type\", \"brokers\",\n-      \"--entity-name\", kafkaConfig.brokerId.toString)\n-    ConfigCommand.main(args)\n+    val entityType = ConfigType.Broker\n+    val entityName = kafkaConfig.brokerId.toString\n \n+    val passwordConfigs = sslStoreProps.asScala.keySet.filter(DynamicBrokerConfig.isPasswordConfig)\n+    val passwordEncoderConfigs = new Properties\n+    passwordEncoderConfigs ++= sslStoreProps.asScala.filter { case (key, _) => key.startsWith(\"password.encoder.\") }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxMzkwNw=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTM2NDI4OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/DeleteTopicTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMDo1ODo0M1rOGKjZbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMToyNToyNlrOGLuQEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxODg5Mw==", "bodyText": "There should be a \"get\" here to ensure that we actually create the partitions before shutting down, right?", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413718893", "createdAt": "2020-04-23T10:58:43Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/unit/kafka/admin/DeleteTopicTest.scala", "diffHunk": "@@ -227,8 +227,10 @@ class DeleteTopicTest extends ZooKeeperTestHarness {\n     }, s\"Not all replicas for topic $topic are in states of either ReplicaDeletionSuccessful or OfflineReplica\")\n \n     // increase the partition count for topic\n-    val topicCommandOptions = new TopicCommand.TopicCommandOptions(Array(\"--zookeeper\", zkConnect, \"--alter\", \"--topic\", topic, \"--partitions\", \"2\"))\n-    new ZookeeperTopicService(zkClient).alterTopic(topicCommandOptions)\n+    val props = new Properties()\n+    props.setProperty(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, TestUtils.getBrokerListStrFromServers(servers))\n+    val adminClient = Admin.create(props)\n+    adminClient.createPartitions(Map(topic -> NewPartitions.increaseTo(2)).asJava)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk0NTI5Nw==", "bodyText": "Good catch. Although this will return an API exception (can't increase partition number during topic deletion), we still need to wait for the completion.", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414945297", "createdAt": "2020-04-25T01:25:26Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/unit/kafka/admin/DeleteTopicTest.scala", "diffHunk": "@@ -227,8 +227,10 @@ class DeleteTopicTest extends ZooKeeperTestHarness {\n     }, s\"Not all replicas for topic $topic are in states of either ReplicaDeletionSuccessful or OfflineReplica\")\n \n     // increase the partition count for topic\n-    val topicCommandOptions = new TopicCommand.TopicCommandOptions(Array(\"--zookeeper\", zkConnect, \"--alter\", \"--topic\", topic, \"--partitions\", \"2\"))\n-    new ZookeeperTopicService(zkClient).alterTopic(topicCommandOptions)\n+    val props = new Properties()\n+    props.setProperty(AdminClientConfig.BOOTSTRAP_SERVERS_CONFIG, TestUtils.getBrokerListStrFromServers(servers))\n+    val adminClient = Admin.create(props)\n+    adminClient.createPartitions(Map(topic -> NewPartitions.increaseTo(2)).asJava)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxODg5Mw=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTM3MDM5OnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMDoyMlrOGKjdVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMjowODoyMlrOGLuuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxOTg5Mg==", "bodyText": "This is a good change since the test is not specifically testing the legacy mode (so it should use the new mode)  Keep this one", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413719892", "createdAt": "2020-04-23T11:00:22Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -255,7 +225,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowBrokersListWithVerifyOption(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1Mjk5MA==", "bodyText": "ok", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414952990", "createdAt": "2020-04-25T02:08:22Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -255,7 +225,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowBrokersListWithVerifyOption(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxOTg5Mg=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTM3MTAxOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMDozMFrOGKjdrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMjowODozMlrOGLuuOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxOTk4Mw==", "bodyText": "keep this change", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413719983", "createdAt": "2020-04-23T11:00:30Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -275,7 +245,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowTopicsOptionWithVerify(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1MzAxNw==", "bodyText": "ok", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414953017", "createdAt": "2020-04-25T02:08:32Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -275,7 +245,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowTopicsOptionWithVerify(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcxOTk4Mw=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 74}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTM3MTUyOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMDozN1rOGKjeAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMjowODoyOFrOGLuuKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyMDA2Ng==", "bodyText": "keep this change", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413720066", "createdAt": "2020-04-23T11:00:37Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -265,7 +235,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowThrottleWithVerifyOption(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1MzAwMw==", "bodyText": "ok", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414953003", "createdAt": "2020-04-25T02:08:28Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/unit/kafka/admin/ReassignPartitionsCommandArgsTest.scala", "diffHunk": "@@ -265,7 +235,7 @@ class ReassignPartitionsCommandArgsTest {\n   @Test\n   def shouldNotAllowThrottleWithVerifyOption(): Unit = {\n     val args = Array(\n-      \"--zookeeper\", \"localhost:1234\",\n+      \"--bootstrap-server\", \"localhost:1234\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyMDA2Ng=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MTM3NzI2OnYy", "diffSide": "LEFT", "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxMTowMjowMFrOGKjhdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQwMjoyMDo1N1rOGLu2SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyMDk1MA==", "bodyText": "It's weird that this is even in this file.  This should be moved to TopicCommandWithZKClientTest.scala, I think", "url": "https://github.com/apache/kafka/pull/8527#discussion_r413720950", "createdAt": "2020-04-23T11:02:00Z", "author": {"login": "cmccabe"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -293,13 +293,6 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     }\n   }\n \n-  @Test\n-  def testCreateWithUnspecifiedReplicationFactorAndPartitionsWithZkClient(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDk1NTA4MQ==", "bodyText": "Yes. If we are ignoring the tests instead of deleting the tests, we should move this one into TopicCommandWithZKClientTest.scala", "url": "https://github.com/apache/kafka/pull/8527#discussion_r414955081", "createdAt": "2020-04-25T02:20:57Z", "author": {"login": "ctan888"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -293,13 +293,6 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     }\n   }\n \n-  @Test\n-  def testCreateWithUnspecifiedReplicationFactorAndPartitionsWithZkClient(): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzcyMDk1MA=="}, "originalCommit": {"oid": "9385a654005731670888e74d4efc3be0ad18cc1d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3058, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}