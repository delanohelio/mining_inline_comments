{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3MTYwNTk3", "number": 9005, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNzoyNlrOENGfaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNzo0MFrOENGfgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTczMjg5OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNzoyNlrOGvmN8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQxOTowNDowN1rOGwComA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MjQxNw==", "bodyText": "I found it was always true because we are comparing a list of tasks with a list of partitions ;)", "url": "https://github.com/apache/kafka/pull/9005#discussion_r452562417", "createdAt": "2020-07-10T00:37:26Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1402,9 +1404,13 @@ public void shouldTriggerImmediateRebalanceOnTasksRevoked() {\n         final Map<String, Assignment> assignment = partitionAssignor.assign(metadata, new GroupSubscription(subscriptions)).groupAssignment();\n \n         // Verify at least one partition was revoked\n-        assertThat(assignment.get(CONSUMER_1).partitions(), not(allTasks));\n+        assertThat(assignment.get(CONSUMER_1).partitions(), not(allPartitions));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea374849fa3278cc3db3907896833e43459127df"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU3MDA0NA==", "bodyText": "Whoops", "url": "https://github.com/apache/kafka/pull/9005#discussion_r452570044", "createdAt": "2020-07-10T01:09:24Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1402,9 +1404,13 @@ public void shouldTriggerImmediateRebalanceOnTasksRevoked() {\n         final Map<String, Assignment> assignment = partitionAssignor.assign(metadata, new GroupSubscription(subscriptions)).groupAssignment();\n \n         // Verify at least one partition was revoked\n-        assertThat(assignment.get(CONSUMER_1).partitions(), not(allTasks));\n+        assertThat(assignment.get(CONSUMER_1).partitions(), not(allPartitions));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MjQxNw=="}, "originalCommit": {"oid": "ea374849fa3278cc3db3907896833e43459127df"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzAyNzk5Mg==", "bodyText": "Oh, boy...", "url": "https://github.com/apache/kafka/pull/9005#discussion_r453027992", "createdAt": "2020-07-10T19:04:07Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1402,9 +1404,13 @@ public void shouldTriggerImmediateRebalanceOnTasksRevoked() {\n         final Map<String, Assignment> assignment = partitionAssignor.assign(metadata, new GroupSubscription(subscriptions)).groupAssignment();\n \n         // Verify at least one partition was revoked\n-        assertThat(assignment.get(CONSUMER_1).partitions(), not(allTasks));\n+        assertThat(assignment.get(CONSUMER_1).partitions(), not(allPartitions));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MjQxNw=="}, "originalCommit": {"oid": "ea374849fa3278cc3db3907896833e43459127df"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyMTczMzE1OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNzo0MFrOGvmOJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMFQwMDozNzo0MFrOGvmOJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjU2MjQ2OA==", "bodyText": "Verified that without the fix, this line will fail.", "url": "https://github.com/apache/kafka/pull/9005#discussion_r452562468", "createdAt": "2020-07-10T00:37:40Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1402,9 +1404,13 @@ public void shouldTriggerImmediateRebalanceOnTasksRevoked() {\n         final Map<String, Assignment> assignment = partitionAssignor.assign(metadata, new GroupSubscription(subscriptions)).groupAssignment();\n \n         // Verify at least one partition was revoked\n-        assertThat(assignment.get(CONSUMER_1).partitions(), not(allTasks));\n+        assertThat(assignment.get(CONSUMER_1).partitions(), not(allPartitions));\n         assertThat(assignment.get(CONSUMER_2).partitions(), equalTo(emptyList()));\n \n+        // Verify that stateless revoked tasks would not be assigned as standbys\n+        assertThat(AssignmentInfo.decode(assignment.get(CONSUMER_2).userData()).activeTasks(), equalTo(emptyList()));\n+        assertThat(AssignmentInfo.decode(assignment.get(CONSUMER_2).userData()).standbyTasks(), equalTo(emptyMap()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea374849fa3278cc3db3907896833e43459127df"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2239, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}