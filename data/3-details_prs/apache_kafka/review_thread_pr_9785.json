{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1MTgzNDEz", "number": 9785, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxOToxNVrOFI5kIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNTo1ODoxNVrOFM8bvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0ODc2MDY3OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxMDoxOToxNVrOILEp8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNjozMjozMlrOIQ5i3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MTUyMQ==", "bodyText": "@ijuma Should we remove hamcrest? Removing it causes a bigger patch. The benefit of removing it is that our test assert get more consistent.", "url": "https://github.com/apache/kafka/pull/9785#discussion_r548481521", "createdAt": "2020-12-24T10:19:15Z", "author": {"login": "chia7712"}, "path": "build.gradle", "diffHunk": "@@ -1782,8 +1782,8 @@ project(':log4j-appender') {\n     compile libs.slf4jlog4j\n \n     testCompile project(':clients').sourceSets.test.output\n-    testCompile libs.junitJupiterApi\n-    testCompile libs.junitVintageEngine\n+    testCompile libs.junitJupiter\n+    testCompile libs.hamcrest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDUyMDY2OA==", "bodyText": "see #9520 (comment) so keeping libs.hamcrest is fine.", "url": "https://github.com/apache/kafka/pull/9785#discussion_r554520668", "createdAt": "2021-01-10T06:43:46Z", "author": {"login": "chia7712"}, "path": "build.gradle", "diffHunk": "@@ -1782,8 +1782,8 @@ project(':log4j-appender') {\n     compile libs.slf4jlog4j\n \n     testCompile project(':clients').sourceSets.test.output\n-    testCompile libs.junitJupiterApi\n-    testCompile libs.junitVintageEngine\n+    testCompile libs.junitJupiter\n+    testCompile libs.hamcrest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MTUyMQ=="}, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU5MDk0Mw==", "bodyText": "Thank you .\nYou are so strong that you can track a lot of issues simultaneously !", "url": "https://github.com/apache/kafka/pull/9785#discussion_r554590943", "createdAt": "2021-01-10T16:32:32Z", "author": {"login": "g1geordie"}, "path": "build.gradle", "diffHunk": "@@ -1782,8 +1782,8 @@ project(':log4j-appender') {\n     compile libs.slf4jlog4j\n \n     testCompile project(':clients').sourceSets.test.output\n-    testCompile libs.junitJupiterApi\n-    testCompile libs.junitVintageEngine\n+    testCompile libs.junitJupiter\n+    testCompile libs.hamcrest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODQ4MTUyMQ=="}, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ5MTE3MzcyOnYy", "diffSide": "RIGHT", "path": "log4j-appender/src/test/java/org/apache/kafka/log4jappender/KafkaLog4jAppenderTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNTo1ODoxNVrOIQ5StQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xMFQxNjo0ODo1OVrOIQ5rAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU4NjgwNQ==", "bodyText": "What is the reason for having assertDoesNotThrow here and below? The test will fail if an exception is thrown, so seems like unnecessary noise.", "url": "https://github.com/apache/kafka/pull/9785#discussion_r554586805", "createdAt": "2021-01-10T15:58:15Z", "author": {"login": "ijuma"}, "path": "log4j-appender/src/test/java/org/apache/kafka/log4jappender/KafkaLog4jAppenderTest.java", "diffHunk": "@@ -130,55 +116,51 @@ public void testLog4jAppends() {\n         for (int i = 1; i <= 5; ++i) {\n             logger.error(getMessage(i));\n         }\n-\n-        Assert.assertEquals(\n-            5, (getMockKafkaLog4jAppender()).getHistory().size());\n+        assertEquals(getMockKafkaLog4jAppender().getHistory().size(), 5);\n     }\n \n-    @Test(expected = RuntimeException.class)\n-    public void testLog4jAppendsWithSyncSendAndSimulateProducerFailShouldThrowException() {\n+    @Test\n+    public void testSyncSendAndSimulateProducerFailShouldThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, false);\n \n-        logger.error(getMessage(0));\n+        assertThrows(RuntimeException.class, () -> logger.error(getMessage(0)));\n     }\n \n     @Test\n-    public void testLog4jAppendsWithSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n+    public void testSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, true);\n \n-        logger.error(getMessage(0));\n+        assertDoesNotThrow(() -> logger.error(getMessage(0)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU4OTMxNw==", "bodyText": "I considered it is a kind of highlight. However, it is unnecessary in this test case as it is the final line. @g1geordie WDYT? Should we file a PR to remove this unnecessary noise?", "url": "https://github.com/apache/kafka/pull/9785#discussion_r554589317", "createdAt": "2021-01-10T16:18:42Z", "author": {"login": "chia7712"}, "path": "log4j-appender/src/test/java/org/apache/kafka/log4jappender/KafkaLog4jAppenderTest.java", "diffHunk": "@@ -130,55 +116,51 @@ public void testLog4jAppends() {\n         for (int i = 1; i <= 5; ++i) {\n             logger.error(getMessage(i));\n         }\n-\n-        Assert.assertEquals(\n-            5, (getMockKafkaLog4jAppender()).getHistory().size());\n+        assertEquals(getMockKafkaLog4jAppender().getHistory().size(), 5);\n     }\n \n-    @Test(expected = RuntimeException.class)\n-    public void testLog4jAppendsWithSyncSendAndSimulateProducerFailShouldThrowException() {\n+    @Test\n+    public void testSyncSendAndSimulateProducerFailShouldThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, false);\n \n-        logger.error(getMessage(0));\n+        assertThrows(RuntimeException.class, () -> logger.error(getMessage(0)));\n     }\n \n     @Test\n-    public void testLog4jAppendsWithSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n+    public void testSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, true);\n \n-        logger.error(getMessage(0));\n+        assertDoesNotThrow(() -> logger.error(getMessage(0)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU4NjgwNQ=="}, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 153}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU5MzAyNQ==", "bodyText": "As you think .  I just point out where we do the check .\nI will file a MINOR to change that    . Thank you", "url": "https://github.com/apache/kafka/pull/9785#discussion_r554593025", "createdAt": "2021-01-10T16:48:59Z", "author": {"login": "g1geordie"}, "path": "log4j-appender/src/test/java/org/apache/kafka/log4jappender/KafkaLog4jAppenderTest.java", "diffHunk": "@@ -130,55 +116,51 @@ public void testLog4jAppends() {\n         for (int i = 1; i <= 5; ++i) {\n             logger.error(getMessage(i));\n         }\n-\n-        Assert.assertEquals(\n-            5, (getMockKafkaLog4jAppender()).getHistory().size());\n+        assertEquals(getMockKafkaLog4jAppender().getHistory().size(), 5);\n     }\n \n-    @Test(expected = RuntimeException.class)\n-    public void testLog4jAppendsWithSyncSendAndSimulateProducerFailShouldThrowException() {\n+    @Test\n+    public void testSyncSendAndSimulateProducerFailShouldThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, false);\n \n-        logger.error(getMessage(0));\n+        assertThrows(RuntimeException.class, () -> logger.error(getMessage(0)));\n     }\n \n     @Test\n-    public void testLog4jAppendsWithSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n+    public void testSyncSendWithoutIgnoringExceptionsShouldNotThrowException() {\n         Properties props = getLog4jConfig(true);\n         props.put(\"log4j.appender.KAFKA.IgnoreExceptions\", \"false\");\n         PropertyConfigurator.configure(props);\n \n         MockKafkaLog4jAppender mockKafkaLog4jAppender = getMockKafkaLog4jAppender();\n         replaceProducerWithMocked(mockKafkaLog4jAppender, true);\n \n-        logger.error(getMessage(0));\n+        assertDoesNotThrow(() -> logger.error(getMessage(0)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NDU4NjgwNQ=="}, "originalCommit": {"oid": "2640cf19647cc3667bbde1a70ffde47abaeeb6e4"}, "originalPosition": 153}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3560, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}