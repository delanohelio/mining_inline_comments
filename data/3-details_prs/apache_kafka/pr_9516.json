{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTExMzA5OTA5", "number": 9516, "title": "MINOR: make Send and Receive work with TransferableChannel rather than Gat\u2026", "bodyText": "BlockingChannel was removed by cc4dce9 so it is time to refactor Send and NetworkReceive to remove ScatteringByteChannel and GatheringByteChannel.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-10-28T06:19:54Z", "url": "https://github.com/apache/kafka/pull/9516", "merged": true, "mergeCommit": {"oid": "d84a82c32db94be9c5dbdc155c38a3775e6882eb"}, "closed": true, "closedAt": "2020-12-16T00:51:41Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdW3d0VgBqjM5Mjk1NDk1MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmaihoAFqTU1MjQ2MDEyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNTY0NzM3", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-533564737", "createdAt": "2020-11-18T15:30:05Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTozMDowNlrOH1zZNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTozMDowNlrOH1zZNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE3ODYxNA==", "bodyText": "I had tried making this change, but it turns out we still have places where we use GatheringByteChannel, so not sure it's worth it.", "url": "https://github.com/apache/kafka/pull/9516#discussion_r526178614", "createdAt": "2020-11-18T15:30:06Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/common/network/TransportLayerUtils.java", "diffHunk": "@@ -0,0 +1,156 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.network;\n+\n+import org.apache.kafka.common.errors.AuthenticationException;\n+\n+import java.io.IOException;\n+import java.nio.ByteBuffer;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.GatheringByteChannel;\n+import java.nio.channels.SelectionKey;\n+import java.nio.channels.SocketChannel;\n+import java.security.Principal;\n+\n+public final class TransportLayerUtils {\n+    private TransportLayerUtils() {\n+    }\n+\n+    /**\n+     * Create a TransportLayer based on GatheringByteChannel. This helper method is used by testing only and noted that\n+     * not all methods of TransportLayer are supported.\n+     * @param channel channel\n+     * @return a TransportLayer\n+     */\n+    public static TransportLayer toTransportLayer(GatheringByteChannel channel) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9369c7a67a66f55e1f0a93d8414d03a6e10ea410", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/9369c7a67a66f55e1f0a93d8414d03a6e10ea410", "committedDate": "2020-11-18T17:17:14Z", "message": "ByteBufferChannel to ByteBufferTransportLayer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9369c7a67a66f55e1f0a93d8414d03a6e10ea410", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/9369c7a67a66f55e1f0a93d8414d03a6e10ea410", "committedDate": "2020-11-18T17:17:14Z", "message": "ByteBufferChannel to ByteBufferTransportLayer"}, "afterCommit": {"oid": "8d6c1f6b755b02047976188bbfb6be78a444ada1", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/8d6c1f6b755b02047976188bbfb6be78a444ada1", "committedDate": "2020-12-09T16:06:51Z", "message": "ByteBufferChannel to ByteBufferTransportLayer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzcxNTY0", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-548371564", "createdAt": "2020-12-09T16:33:45Z", "commit": {"oid": "8d6c1f6b755b02047976188bbfb6be78a444ada1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjozMzo0NVrOICd9dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxNjozMzo0NVrOICd9dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTQ1ODkzMg==", "bodyText": "Do we need to change this? It seems like what we had before was good enough.", "url": "https://github.com/apache/kafka/pull/9516#discussion_r539458932", "createdAt": "2020-12-09T16:33:45Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/network/NetworkReceive.java", "diffHunk": "@@ -89,7 +88,8 @@ public boolean complete() {\n         return !size.hasRemaining() && buffer != null && !buffer.hasRemaining();\n     }\n \n-    public long readFrom(ScatteringByteChannel channel) throws IOException {\n+    @Override\n+    public long readFrom(TransportLayer channel) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8d6c1f6b755b02047976188bbfb6be78a444ada1"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d6c1f6b755b02047976188bbfb6be78a444ada1", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/8d6c1f6b755b02047976188bbfb6be78a444ada1", "committedDate": "2020-12-09T16:06:51Z", "message": "ByteBufferChannel to ByteBufferTransportLayer"}, "afterCommit": {"oid": "c2b996ec11dcd30302ad352371df19ec0fcdd694", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/c2b996ec11dcd30302ad352371df19ec0fcdd694", "committedDate": "2020-12-10T04:20:33Z", "message": "MINOR: make Send and Record work with WritableChannel rather than GatheringByteChannel"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODE1NjAy", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-548815602", "createdAt": "2020-12-10T04:46:55Z", "commit": {"oid": "c2b996ec11dcd30302ad352371df19ec0fcdd694"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDo0Njo1NlrOIC1WnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNDo0Njo1NlrOIC1WnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg0MjIwNA==", "bodyText": "Maybe we should call it TransferableChannel since it adds a transferFrom method. And let's add some brief class javadoc explaining why we have this interface.", "url": "https://github.com/apache/kafka/pull/9516#discussion_r539842204", "createdAt": "2020-12-10T04:46:56Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/network/WritableChannel.java", "diffHunk": "@@ -0,0 +1,45 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.network;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.GatheringByteChannel;\n+\n+public interface WritableChannel extends GatheringByteChannel {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c2b996ec11dcd30302ad352371df19ec0fcdd694"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjIzNjky", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-549223692", "createdAt": "2020-12-10T14:01:27Z", "commit": {"oid": "a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowMToyN1rOIDKrnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowMToyN1rOIDKrnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5MTY0Nw==", "bodyText": "I would replace this comment with:\n\nExtends GatheringByteChannel with the minimal set of methods required by the Send interface. Supporting TLS and efficient zero copy transfers are the main reasons for the additional methods.", "url": "https://github.com/apache/kafka/pull/9516#discussion_r540191647", "createdAt": "2020-12-10T14:01:27Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/network/TransferableChannel.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.network;\n+\n+import java.io.IOException;\n+import java.nio.channels.FileChannel;\n+import java.nio.channels.GatheringByteChannel;\n+\n+/**\n+ * TransportLayer is a fat interface so it is a bit weird to use TransportLayer in write-only path.\n+ * Hence, we extract all write-related methods from TransportLayer to be a new interface - TransferableChannel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5MjI4Mjgz", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-549228283", "createdAt": "2020-12-10T14:06:22Z", "commit": {"oid": "a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowNjoyMlrOIDK5Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQxNDowNjoyMlrOIDK5Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDE5NTEzMA==", "bodyText": "I don't think you can use this as a general class as it stands. A previous PR changed it to be non general, it seems:\n    @Override\n    public long write(ByteBuffer[] srcs, int offset, int length) {\n        int position = buf.position();\n        for (int i = 0; i < length; i++) {\n            ByteBuffer src = srcs[i].duplicate();\n            if (i == 0) {\n                src.position(src.position() + offset);\n            }\n            buf.put(src);\n        }\n        return buf.position() - position;\n    }", "url": "https://github.com/apache/kafka/pull/9516#discussion_r540195130", "createdAt": "2020-12-10T14:06:22Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/common/record/LazyDownConversionRecordsTest.java", "diffHunk": "@@ -160,20 +161,21 @@ private static MemoryRecords convertRecords(MemoryRecords recordsToConvert, byte\n                     inputRecords, toMagic, 0L, Time.SYSTEM);\n             LazyDownConversionRecordsSend lazySend = lazyRecords.toSend();\n             File outputFile = tempFile();\n-            FileChannel channel = FileChannel.open(outputFile.toPath(), StandardOpenOption.READ, StandardOpenOption.WRITE);\n-\n-            int written = 0;\n-            while (written < bytesToConvert)\n-                written += lazySend.writeTo(channel, written, bytesToConvert - written);\n-\n-            FileRecords convertedRecords = FileRecords.open(outputFile, true, (int) channel.size(), false);\n-            ByteBuffer convertedRecordsBuffer = ByteBuffer.allocate(convertedRecords.sizeInBytes());\n-            convertedRecords.readInto(convertedRecordsBuffer, 0);\n-\n-            // cleanup\n-            convertedRecords.close();\n-            channel.close();\n-\n+            ByteBuffer convertedRecordsBuffer;\n+            try (FileChannel fileChannel = FileChannel.open(outputFile.toPath(), StandardOpenOption.READ, StandardOpenOption.WRITE)) {\n+                ByteBuffer buf;\n+                try (org.apache.kafka.common.requests.ByteBufferChannel channel =\n+                             new org.apache.kafka.common.requests.ByteBufferChannel(bytesToConvert)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/a15ce0eb865b01d61dd55b2f9e2fd357de8ffb1f", "committedDate": "2020-12-10T05:11:55Z", "message": "rename WritableChannel to TransferableChannel"}, "afterCommit": {"oid": "b59f50105a946960d73f2c644cdff49a26939ca6", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/b59f50105a946960d73f2c644cdff49a26939ca6", "committedDate": "2020-12-10T19:33:44Z", "message": "address review comments; cleanup; fix bugs; more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa65b8f2939a7e466771de1dce350bbb74b0d35", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/6aa65b8f2939a7e466771de1dce350bbb74b0d35", "committedDate": "2020-12-14T09:16:31Z", "message": "MINOR: make Send and Record work with WritableChannel rather than GatheringByteChannel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54cd485c23f10899a151c53f2c7d409f1d9c7217", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/54cd485c23f10899a151c53f2c7d409f1d9c7217", "committedDate": "2020-12-14T09:16:31Z", "message": "rename WritableChannel to TransferableChannel"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af22fa260294546b841d0c3532faeda99905c2a8", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/af22fa260294546b841d0c3532faeda99905c2a8", "committedDate": "2020-12-14T09:16:31Z", "message": "address review comments; cleanup; fix bugs; more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36d223192a0a8105f812bf5765dd755d03c7a3c7", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/36d223192a0a8105f812bf5765dd755d03c7a3c7", "committedDate": "2020-12-14T09:16:31Z", "message": "revert cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "71d79437c562dfc18be2da6976807f33b473ebc8", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/71d79437c562dfc18be2da6976807f33b473ebc8", "committedDate": "2020-12-10T20:41:58Z", "message": "revert cleanup"}, "afterCommit": {"oid": "36d223192a0a8105f812bf5765dd755d03c7a3c7", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/36d223192a0a8105f812bf5765dd755d03c7a3c7", "committedDate": "2020-12-14T09:16:31Z", "message": "revert cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9c14a9c8f913aebba7296eb40bcbbf8c806616a", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/a9c14a9c8f913aebba7296eb40bcbbf8c806616a", "committedDate": "2020-12-15T13:34:55Z", "message": "Use @see javadoc tag"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNDYwMTIw", "url": "https://github.com/apache/kafka/pull/9516#pullrequestreview-552460120", "createdAt": "2020-12-15T13:41:36Z", "commit": {"oid": "36d223192a0a8105f812bf5765dd755d03c7a3c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2900, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}