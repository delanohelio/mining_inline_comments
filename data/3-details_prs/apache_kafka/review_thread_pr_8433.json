{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5NzY5NDg0", "number": 8433, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozMDozOVrODvSytg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozMDozOVrODvSytg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwOTE3NTU4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozMDozOVrOGBouOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQyMDozNjoxMFrOGBo5zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODk1Mg==", "bodyText": "It seems like this would have initially appeared unnecessary because we already removed it on L230 when we first put it into the dirtyTasks map. But what appears to have happened is that we actually got an exception during commit, and added some more tasks in L252-L253, which were not removed from the task map.\nWhat is the overall algorithm here? Offhand, it seems like we should only remove the task after we know it is closed, which means we should delete the iterator.remove(); on L230 and keep the line you've added here, along with adding a similar line between L264-265 (after closeClean). I'm also wondering if we should really do closeDirty on L271, or just add it to dirtyTasks. If we keep it there, then we also need to remove it from the task map at that location.", "url": "https://github.com/apache/kafka/pull/8433#discussion_r404368952", "createdAt": "2020-04-06T20:30:39Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -277,6 +277,7 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n         for (final Task task : dirtyTasks) {\n             task.closeDirty();\n             cleanUpTaskProducer(task, taskCloseExceptions);\n+            tasks.remove(task.id());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5e3ab130c795ff49e85fc7b2f6810766ae67e9a3"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM3MTkxOA==", "bodyText": "Thanks for the question @vvcephei , the overall algorithm is like we are adding more tasks into the dirty task list to cleanup on L252-253, as the whole pre-commit + commit section fails. I could see that doing a separate removal here is misleading, so I will try to move this logic up to the catch block where we actually augment the dirtyTasks map.", "url": "https://github.com/apache/kafka/pull/8433#discussion_r404371918", "createdAt": "2020-04-06T20:36:10Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -277,6 +277,7 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n         for (final Task task : dirtyTasks) {\n             task.closeDirty();\n             cleanUpTaskProducer(task, taskCloseExceptions);\n+            tasks.remove(task.id());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDM2ODk1Mg=="}, "originalCommit": {"oid": "5e3ab130c795ff49e85fc7b2f6810766ae67e9a3"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3218, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}