{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1OTQ4NzQw", "number": 9645, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozMjo0OFrOE8XaWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzozNTo1OFrOE8gUMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzMzNTk1OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/header/internals/RecordHeader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozMjo0OFrOH4cYMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozMjo0OFrOH4cYMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0NzI1MQ==", "bodyText": "cc @chia7712 since you changed related code recently.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r528947251", "createdAt": "2020-11-23T19:32:48Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/header/internals/RecordHeader.java", "diffHunk": "@@ -70,7 +70,7 @@ public boolean equals(Object o) {\n \n     @Override\n     public int hashCode() {\n-        int result = key() != null ? key().hashCode() : 0;\n+        int result = key().hashCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93157a949a441fad26d375c52643cf9464adbce2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxNzMzODg0OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxOTozMzo0M1rOH4cZ-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzozNDo0MFrOH4qljg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0NzcwNg==", "bodyText": "@rondagostino looks like the original implementation didn't achieve the goal. I added a test that failed without this change.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r528947706", "createdAt": "2020-11-23T19:33:43Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "diffHunk": "@@ -49,8 +53,11 @@ public static ScramMechanism fromType(byte type) {\n      *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n      */\n     public static ScramMechanism fromMechanismName(String mechanismName) {\n-        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n-        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;\n+        String normalizedMechanism = mechanismName.replace('-', '_');\n+        return Arrays.stream(VALUES)\n+            .filter(mechanism -> mechanism.name().equals(normalizedMechanism))\n+            .findFirst()\n+            .orElse(UNKNOWN);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93157a949a441fad26d375c52643cf9464adbce2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk4NjE5MA==", "bodyText": "Ah, you are right: valueOf() Throws: IllegalArgumentException - if the specified enum type has no constant with the specified name, or the specified class object does not represent an enum type.\nThanks for catching/testing for/fixing it.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r528986190", "createdAt": "2020-11-23T20:47:29Z", "author": {"login": "rondagostino"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "diffHunk": "@@ -49,8 +53,11 @@ public static ScramMechanism fromType(byte type) {\n      *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n      */\n     public static ScramMechanism fromMechanismName(String mechanismName) {\n-        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n-        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;\n+        String normalizedMechanism = mechanismName.replace('-', '_');\n+        return Arrays.stream(VALUES)\n+            .filter(mechanism -> mechanism.name().equals(normalizedMechanism))\n+            .findFirst()\n+            .orElse(UNKNOWN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0NzcwNg=="}, "originalCommit": {"oid": "93157a949a441fad26d375c52643cf9464adbce2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE4MDA0Ng==", "bodyText": "@rondagostino do we need to cherry-pick this change to the 2.7 branch? I am not sure under which context this method is used and whether it's important enough to backport.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r529180046", "createdAt": "2020-11-24T03:34:40Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "diffHunk": "@@ -49,8 +53,11 @@ public static ScramMechanism fromType(byte type) {\n      *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n      */\n     public static ScramMechanism fromMechanismName(String mechanismName) {\n-        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n-        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;\n+        String normalizedMechanism = mechanismName.replace('-', '_');\n+        return Arrays.stream(VALUES)\n+            .filter(mechanism -> mechanism.name().equals(normalizedMechanism))\n+            .findFirst()\n+            .orElse(UNKNOWN);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODk0NzcwNg=="}, "originalCommit": {"oid": "93157a949a441fad26d375c52643cf9464adbce2"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODc5NDc0OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMzozNTo1OFrOH4qm_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNDo1Njo0NlrOH4r-mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE4MDQxNA==", "bodyText": "Could we reuse mechanismName (https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java#L79) so we don't need this duplicate replacement.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r529180414", "createdAt": "2020-11-24T03:35:58Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "diffHunk": "@@ -49,8 +53,11 @@ public static ScramMechanism fromType(byte type) {\n      *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n      */\n     public static ScramMechanism fromMechanismName(String mechanismName) {\n-        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n-        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;\n+        String normalizedMechanism = mechanismName.replace('-', '_');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "773f64e9906dcd147afec4eec1c73b17836dacbc"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTIwMjg0MA==", "bodyText": "Good suggestion, applied it.", "url": "https://github.com/apache/kafka/pull/9645#discussion_r529202840", "createdAt": "2020-11-24T04:56:46Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ScramMechanism.java", "diffHunk": "@@ -49,8 +53,11 @@ public static ScramMechanism fromType(byte type) {\n      *     Salted Challenge Response Authentication Mechanism (SCRAM) SASL and GSS-API Mechanisms, Section 4</a>\n      */\n     public static ScramMechanism fromMechanismName(String mechanismName) {\n-        ScramMechanism retvalFoundMechanism = ScramMechanism.valueOf(mechanismName.replace('-', '_'));\n-        return retvalFoundMechanism != null ? retvalFoundMechanism : UNKNOWN;\n+        String normalizedMechanism = mechanismName.replace('-', '_');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTE4MDQxNA=="}, "originalCommit": {"oid": "773f64e9906dcd147afec4eec1c73b17836dacbc"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3613, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}