{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyODg0Nzk5", "number": 9428, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMTowMVrOEtQSPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMTowMVrOEtQSPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1ODg4MTg4OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollectionTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMTowMVrOHg8a9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMzowMTowMVrOHg8a9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDMwNjQyMg==", "bodyText": "Could make this assertion a little stronger:\n            assertEquals(new TestElement(i, i), coll.find(elements.get(i)));", "url": "https://github.com/apache/kafka/pull/9428#discussion_r504306422", "createdAt": "2020-10-13T23:01:01Z", "author": {"login": "hachikuji"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ImplicitLinkedHashCollectionTest.java", "diffHunk": "@@ -596,4 +598,25 @@ public void testMoveToEnd() {\n         Assert.assertThrows(RuntimeException.class, () ->\n             coll.moveToEnd(new TestElement(4, 4)));\n     }\n-}\n+\n+    @Test\n+    public void testRemovals() {\n+        ImplicitLinkedHashCollection<TestElement> coll = new ImplicitLinkedHashCollection<>();\n+        List<TestElement> elements  = new ArrayList<>();\n+        for (int i = 0; i < 100; i++) {\n+            TestElement element  = new TestElement(i, i); //random.nextInt(0x7fff) << 16 | i, i);\n+            elements.add(element);\n+            coll.add(element);\n+        }\n+        assertEquals(100, coll.size());\n+        Iterator<TestElement> iter = coll.iterator();\n+        for (int i = 0; i < 50; i++) {\n+            iter.next();\n+            iter.remove();\n+        }\n+        assertEquals(50, coll.size());\n+        for (int i = 50; i < 100; i++) {\n+            assertNotNull(coll.find(elements.get(i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d05df48ca3fbcaac97474acfe507c932afc321e4"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1765, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}