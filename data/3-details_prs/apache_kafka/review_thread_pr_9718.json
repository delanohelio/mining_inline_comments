{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0OTQyNzE0", "number": 9718, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzoxNjoyNFrOFDuzLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDo1NjoxMFrOFEMTBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5NDU2ODE0OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/log/Log.scala", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzoxNjoyNFrOIDh2bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo1Nzo1OFrOIDi7wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MTI0NA==", "bodyText": "This seems too large as a companion method. I am also not sure that we should pass along Log to this method since it exposes all internal states in Log, which make it harder to track usage.", "url": "https://github.com/apache/kafka/pull/9718#discussion_r540571244", "createdAt": "2020-12-10T23:16:24Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2670,6 +2573,112 @@ object Log {\n   private def isLogFile(file: File): Boolean =\n     file.getPath.endsWith(LogFileSuffix)\n \n+  // Rebuild producer state until lastOffset. This method may be called from the recovery code path, and thus must be\n+  // free of all side-effects, i.e. it must not update any log-specific state.\n+  private def rebuildProducerState(log: Log,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d348bcc12f9e8b2ddf0552c089945b4eda67538"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MzA4Mg==", "bodyText": "That is true. Do you feel the original approach in f0466b2 was better, where, we didn't move methods into a companion object? I'd be happy to revert to that.", "url": "https://github.com/apache/kafka/pull/9718#discussion_r540573082", "createdAt": "2020-12-10T23:20:15Z", "author": {"login": "kowshik"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2670,6 +2573,112 @@ object Log {\n   private def isLogFile(file: File): Boolean =\n     file.getPath.endsWith(LogFileSuffix)\n \n+  // Rebuild producer state until lastOffset. This method may be called from the recovery code path, and thus must be\n+  // free of all side-effects, i.e. it must not update any log-specific state.\n+  private def rebuildProducerState(log: Log,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MTI0NA=="}, "originalCommit": {"oid": "6d348bcc12f9e8b2ddf0552c089945b4eda67538"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4ODk5NA==", "bodyText": "We can probably keep the two other two simpler methods (without Log as the input) as the companion methods.", "url": "https://github.com/apache/kafka/pull/9718#discussion_r540588994", "createdAt": "2020-12-10T23:57:58Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2670,6 +2573,112 @@ object Log {\n   private def isLogFile(file: File): Boolean =\n     file.getPath.endsWith(LogFileSuffix)\n \n+  // Rebuild producer state until lastOffset. This method may be called from the recovery code path, and thus must be\n+  // free of all side-effects, i.e. it must not update any log-specific state.\n+  private def rebuildProducerState(log: Log,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU3MTI0NA=="}, "originalCommit": {"oid": "6d348bcc12f9e8b2ddf0552c089945b4eda67538"}, "originalPosition": 140}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM5OTQwMTAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/log/Log.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMDo1NjoxMFrOIENJ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQyMTowNDowM1rOIENpdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4MDc1MA==", "bodyText": "Perhaps this could be name loadProducersFromRecords?", "url": "https://github.com/apache/kafka/pull/9718#discussion_r541280750", "createdAt": "2020-12-11T20:56:10Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2670,6 +2645,34 @@ object Log {\n   private def isLogFile(file: File): Boolean =\n     file.getPath.endsWith(LogFileSuffix)\n \n+  private def loadProducersFromLog(producerStateManager: ProducerStateManager, records: Records): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d798b7d884bd11e43884318ae3fc8d12e635c40"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4ODgyMg==", "bodyText": "Done", "url": "https://github.com/apache/kafka/pull/9718#discussion_r541288822", "createdAt": "2020-12-11T21:04:03Z", "author": {"login": "kowshik"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -2670,6 +2645,34 @@ object Log {\n   private def isLogFile(file: File): Boolean =\n     file.getPath.endsWith(LogFileSuffix)\n \n+  private def loadProducersFromLog(producerStateManager: ProducerStateManager, records: Records): Unit = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTI4MDc1MA=="}, "originalCommit": {"oid": "5d798b7d884bd11e43884318ae3fc8d12e635c40"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3737, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}