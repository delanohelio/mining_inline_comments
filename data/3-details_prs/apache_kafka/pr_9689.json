{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNDA5MTA3", "number": 9689, "title": "KAFKA-10740; Replace OffsetsForLeaderEpochRequest.PartitionData with automated protocol", "bodyText": "This patch follows up #9547. It refactors AbstractFetcherThread and its descendants to use OffsetForLeaderEpochRequestData.OffsetForLeaderPartition instead of OffsetsForLeaderEpochRequest.PartitionData. The patch relies on existing tests.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-04T09:33:33Z", "url": "https://github.com/apache/kafka/pull/9689", "merged": true, "mergeCommit": {"oid": "02a30a51ebaace6f42d1fd9027fcf3345179a52e"}, "closed": true, "closedAt": "2020-12-17T16:40:38Z", "author": {"login": "dajac"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdkGr0WABqjQwODM3NzM1MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnDZaKgBqjQxMjUwNTUzNDM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "430882d7025f2d8a895f55237b701717596cfc7d", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/430882d7025f2d8a895f55237b701717596cfc7d", "committedDate": "2020-12-07T08:30:31Z", "message": "cleanup"}, "afterCommit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/3db69e9e7a4d55887a44c8a407c950e9c17efeff", "committedDate": "2020-12-08T09:25:18Z", "message": "KAFKA-10740; Replace OffsetsForLeaderEpochRequest.PartitionData with automated protocol"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MTIwMDA1", "url": "https://github.com/apache/kafka/pull/9689#pullrequestreview-548120005", "createdAt": "2020-12-09T12:11:32Z", "commit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxMTozMlrOICRfcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMjoxMTozMlrOICRfcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTI1NDY0MQ==", "bodyText": "Should it call setPartition?", "url": "https://github.com/apache/kafka/pull/9689#discussion_r539254641", "createdAt": "2020-12-09T12:11:32Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherThread.scala", "diffHunk": "@@ -160,7 +161,9 @@ abstract class AbstractFetcherThread(name: String,\n       if (state.isTruncating) {\n         latestEpoch(tp) match {\n           case Some(epoch) if isOffsetForLeaderEpochSupported =>\n-            partitionsWithEpochs += tp -> new EpochData(Optional.of(state.currentLeaderEpoch), epoch)\n+            partitionsWithEpochs += tp -> new EpochData()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NjcyNTUz", "url": "https://github.com/apache/kafka/pull/9689#pullrequestreview-548672553", "createdAt": "2020-12-09T22:37:34Z", "commit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjozNzozNVrOICsuvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMjozOToxNFrOICsxzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwMDkyNg==", "bodyText": "Could we use RequestUtils.getLeaderEpoch?", "url": "https://github.com/apache/kafka/pull/9689#discussion_r539700926", "createdAt": "2020-12-09T22:37:35Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/OffsetsForLeaderEpochRequest.java", "diffHunk": "@@ -143,30 +127,24 @@ public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n         return new OffsetsForLeaderEpochResponse(responseData);\n     }\n \n-    public static class PartitionData {\n-        public final Optional<Integer> currentLeaderEpoch;\n-        public final int leaderEpoch;\n-\n-        public PartitionData(Optional<Integer> currentLeaderEpoch, int leaderEpoch) {\n-            this.currentLeaderEpoch = currentLeaderEpoch;\n-            this.leaderEpoch = leaderEpoch;\n-        }\n-\n-        @Override\n-        public String toString() {\n-            StringBuilder bld = new StringBuilder();\n-            bld.append(\"(currentLeaderEpoch=\").append(currentLeaderEpoch).\n-                append(\", leaderEpoch=\").append(leaderEpoch).\n-                append(\")\");\n-            return bld.toString();\n-        }\n-    }\n-\n     /**\n      * Check whether a broker allows Topic-level permissions in order to use the\n      * OffsetForLeaderEpoch API. Old versions require Cluster permission.\n      */\n     public static boolean supportsTopicPermission(short latestUsableVersion) {\n         return latestUsableVersion >= 3;\n     }\n+\n+    /**\n+     * Exposed `OffsetForLeaderPartition.currentLeaderEpoch` as an `java.util.Optional`.\n+     *\n+     * Classes auto-generated based on the protocol do not support `java.util.Optional` yet. This\n+     * is a temporary workaround until that work is completed.\n+     */\n+    public static Optional<Integer> currentLeaderEpochOpt(OffsetForLeaderPartition offsetForLeaderPartition) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTcwMTcxMQ==", "bodyText": "Maybe we can use scala.compat.java8.OptionConverters._?", "url": "https://github.com/apache/kafka/pull/9689#discussion_r539701711", "createdAt": "2020-12-09T22:39:14Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherThread.scala", "diffHunk": "@@ -268,11 +271,12 @@ abstract class AbstractFetcherThread(name: String,\n             fetchOffsets.put(tp, offsetTruncationState)\n \n         case Errors.FENCED_LEADER_EPOCH =>\n-          if (onPartitionFenced(tp, latestEpochsForPartitions.get(tp).flatMap {\n-            p =>\n-              if (p.currentLeaderEpoch.isPresent) Some(p.currentLeaderEpoch.get())\n-              else None\n-          })) partitionsWithError += tp\n+          val currentLeaderEpoch = latestEpochsForPartitions.get(tp) match {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3db69e9e7a4d55887a44c8a407c950e9c17efeff"}, "originalPosition": 46}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMzY4Mjc5", "url": "https://github.com/apache/kafka/pull/9689#pullrequestreview-551368279", "createdAt": "2020-12-14T13:33:39Z", "commit": {"oid": "26056e004d293bed8c6f123b259c0867ed54cb1e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzozMzozOVrOIFQniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQxMzozMzozOVrOIFQniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjM4NjA1Ng==", "bodyText": "There are some duplicate code. Maybe we can unify them in this PR (or we can address it in follow-up) ?\n\nhttps://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java#L1399\nhttps://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java#L1553\nhttps://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/record/FileRecords.java#L358\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala#L1124\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/KafkaApis.scala#L534\nhttps://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/server/ReplicaManager.scala#L1890", "url": "https://github.com/apache/kafka/pull/9689#discussion_r542386056", "createdAt": "2020-12-14T13:33:39Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/RequestUtils.java", "diffHunk": "@@ -34,7 +34,7 @@\n \n     private RequestUtils() {}\n \n-    static Optional<Integer> getLeaderEpoch(int leaderEpoch) {\n+    public static Optional<Integer> getLeaderEpoch(int leaderEpoch) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "26056e004d293bed8c6f123b259c0867ed54cb1e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMjQ4NTIz", "url": "https://github.com/apache/kafka/pull/9689#pullrequestreview-553248523", "createdAt": "2020-12-16T01:23:43Z", "commit": {"oid": "26056e004d293bed8c6f123b259c0867ed54cb1e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "52278ac4f4a0c3c3160b3fa313381bcba242a60e", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/52278ac4f4a0c3c3160b3fa313381bcba242a60e", "committedDate": "2020-12-17T13:17:21Z", "message": "KAFKA-10740; Replace OffsetsForLeaderEpochRequest.PartitionData with automated protocol"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "101bbf912bd4b1aee541f08c07a83259b7bf9a1b", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/101bbf912bd4b1aee541f08c07a83259b7bf9a1b", "committedDate": "2020-12-17T13:17:22Z", "message": "Address review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d998c32b864c4c7bc199cb1746f60ff77633cf6e", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/d998c32b864c4c7bc199cb1746f60ff77633cf6e", "committedDate": "2020-12-17T13:17:22Z", "message": "remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f22942a41ee5ed60766908115509aaa0047c9ec", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/5f22942a41ee5ed60766908115509aaa0047c9ec", "committedDate": "2020-12-17T13:17:22Z", "message": "address review"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26056e004d293bed8c6f123b259c0867ed54cb1e", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/26056e004d293bed8c6f123b259c0867ed54cb1e", "committedDate": "2020-12-14T10:52:18Z", "message": "address review"}, "afterCommit": {"oid": "5f22942a41ee5ed60766908115509aaa0047c9ec", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/5f22942a41ee5ed60766908115509aaa0047c9ec", "committedDate": "2020-12-17T13:17:22Z", "message": "address review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2546, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}