{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTAyOTk3", "number": 8359, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDowMFrODrgT7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDo0M1rODrgUdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTQ0NzQ4OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDowMFrOF74tsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMjowNjoxNVrOF9DMfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTUwNA==", "bodyText": "minus two lines this method is the same as the above configureConnector. Should we refactor the common parts into a putConnectorConfig method or something?", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398339504", "createdAt": "2020-03-26T06:20:00Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODcxNzEzMw==", "bodyText": "@kkonstantine Yes we could do that, should we make putConnectorConfig a public or private method? If we were to implement the new shared method, I'm thinking it could take a url and a config, and return a type of Response.", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398717133", "createdAt": "2020-03-26T16:34:47Z", "author": {"login": "dosvath"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTUwNA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODkyODgyOQ==", "bodyText": "I'd recommend protected, in case we need to subclass in the future.\nAlso, I'd say, let's return a String from responseToString(response) which your new method will parse to get the ConfigInfos object then. Otherwise, it's close to what requestPut does already. wdyt?\nRe: the input arguments, yes I agree, url and config make sense.", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398928829", "createdAt": "2020-03-26T22:24:14Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTUwNA=="}, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTU1OTgwNg==", "bodyText": "I like that approach, updated.", "url": "https://github.com/apache/kafka/pull/8359#discussion_r399559806", "createdAt": "2020-03-27T22:06:15Z", "author": {"login": "dosvath"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTUwNA=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2OTQ0ODg0OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDo0M1rOF74ugg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDo0M1rOF74ugg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTcxNA==", "bodyText": "there's responseToString below, which increases the similarities with configureConnector", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398339714", "createdAt": "2020-03-26T06:20:43Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)\n+        throws JsonProcessingException {\n+        String url = endpointForResource(String.format(\"connector-plugins/%s/config/validate\", connClassName));\n+        ObjectMapper mapper = new ObjectMapper();\n+        String content;\n+        try {\n+            content = mapper.writeValueAsString(connConfig);\n+        } catch (IOException e) {\n+            throw new ConnectException(\"Could not serialize connector configuration and execute PUT request\");\n+        }\n+        Response response = requestPut(url, content);\n+        if (response.getStatus() < Response.Status.BAD_REQUEST.getStatusCode()) {\n+            return mapper.readValue(response.getEntity().toString(), ConfigInfos.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3106, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}