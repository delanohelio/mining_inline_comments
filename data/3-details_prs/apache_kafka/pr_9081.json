{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzY4ODc0", "number": 9081, "title": "KAFKA-10309: KafkaProducer's sendOffsetsToTransaction should not block infinitively", "bodyText": "This PR will change KafkaProducer#sendOffsetsToTransaction to be affected by max.block.ms to avoid blocking infinitively.", "createdAt": "2020-07-26T15:55:24Z", "url": "https://github.com/apache/kafka/pull/9081", "merged": true, "mergeCommit": {"oid": "783a6451f5f8c50dbe151caf5e76b74917690364"}, "closed": true, "closedAt": "2020-07-29T22:38:28Z", "author": {"login": "sasakitoa"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4u5ZZAH2gAyNDU2NzY4ODc0OjI1YTdjZWJlOTE3ODg5Y2I2NDVmZjg3YzZlZmZjODY5Y2ZjNTFhOTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5j14rAFqTQ1NzE5NjYxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95", "author": {"user": {"login": "sasakitoa", "name": "Sasaki Toru"}}, "url": "https://github.com/apache/kafka/commit/25a7cebe917889cb645ff87c6effc869cfc51a95", "committedDate": "2020-07-26T15:24:10Z", "message": "Modified KafkaProducer.sendOffsetsToTransaction() to be affected with max.block.ms."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDI1MTIy", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-455425122", "createdAt": "2020-07-27T01:52:53Z", "commit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo1Mjo1M1rOG3RS5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMTo1Mjo1M1rOG3RS5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwODIyOA==", "bodyText": "javadoc for this method should be updated as well.", "url": "https://github.com/apache/kafka/pull/9081#discussion_r460608228", "createdAt": "2020-07-27T01:52:53Z", "author": {"login": "huxihx"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -687,7 +687,7 @@ public void sendOffsetsToTransaction(Map<TopicPartition, OffsetAndMetadata> offs\n         throwIfProducerClosed();\n         TransactionalRequestResult result = transactionManager.sendOffsetsToTransaction(offsets, groupMetadata);\n         sender.wakeup();\n-        result.await();\n+        result.await(maxBlockTimeMs, TimeUnit.MILLISECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDI2ODIz", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-455426823", "createdAt": "2020-07-27T02:00:27Z", "commit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjowMDoyN1rOG3RZVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwMjowMDoyN1rOG3RZVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDYwOTg3Ng==", "bodyText": "Using Map(new TopicPartition(topic1, 0) -> new OffsetAndMetadata(0)).asJava is better. No need to import scala.collection.mutable package.", "url": "https://github.com/apache/kafka/pull/9081#discussion_r460609876", "createdAt": "2020-07-27T02:00:27Z", "author": {"login": "huxihx"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsTest.scala", "diffHunk": "@@ -406,6 +406,26 @@ class TransactionsTest extends KafkaServerTestHarness {\n     TestUtils.waitUntilTrue(() => offsetAndMetadata.equals(consumer.committed(Set(tp).asJava).get(tp)), \"cannot read committed offset\")\n   }\n \n+  @Test(expected = classOf[TimeoutException])\n+  def testSendOffsetsToTransactionTimeout(): Unit = {\n+    val producer = createTransactionalProducer(\"transactionProducer\", maxBlockMs = 1000)\n+    producer.initTransactions()\n+    producer.beginTransaction()\n+    producer.send(new ProducerRecord[Array[Byte], Array[Byte]](topic1, \"foo\".getBytes, \"bar\".getBytes))\n+\n+    for (i <- 0 until servers.size)\n+      killBroker(i)\n+\n+    val offsets = new mutable.HashMap[TopicPartition, OffsetAndMetadata]().asJava\n+    offsets.put(new TopicPartition(topic1, 0), new OffsetAndMetadata(0))\n+    try {\n+      producer.sendOffsetsToTransaction(offsets, \"test-group\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NDU2ODAx", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-455456801", "createdAt": "2020-07-27T03:55:04Z", "commit": {"oid": "25a7cebe917889cb645ff87c6effc869cfc51a95"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d5e4984f4c5287513b47ddecf6ccb7de9e90268", "author": {"user": {"login": "sasakitoa", "name": "Sasaki Toru"}}, "url": "https://github.com/apache/kafka/commit/3d5e4984f4c5287513b47ddecf6ccb7de9e90268", "committedDate": "2020-07-28T01:31:03Z", "message": "Improved java doc and related test code (adapt review comments from @huxihx)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2Mjk2ODcy", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-456296872", "createdAt": "2020-07-28T04:39:53Z", "commit": {"oid": "3d5e4984f4c5287513b47ddecf6ccb7de9e90268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDozOTo1M1rOG38VYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDozOTo1M1rOG38VYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxMzM3Nw==", "bodyText": "nit: could use servers.indices", "url": "https://github.com/apache/kafka/pull/9081#discussion_r461313377", "createdAt": "2020-07-28T04:39:53Z", "author": {"login": "abbccdda"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsTest.scala", "diffHunk": "@@ -406,6 +406,26 @@ class TransactionsTest extends KafkaServerTestHarness {\n     TestUtils.waitUntilTrue(() => offsetAndMetadata.equals(consumer.committed(Set(tp).asJava).get(tp)), \"cannot read committed offset\")\n   }\n \n+  @Test(expected = classOf[TimeoutException])\n+  def testSendOffsetsToTransactionTimeout(): Unit = {\n+    val producer = createTransactionalProducer(\"transactionProducer\", maxBlockMs = 1000)\n+    producer.initTransactions()\n+    producer.beginTransaction()\n+    producer.send(new ProducerRecord[Array[Byte], Array[Byte]](topic1, \"foo\".getBytes, \"bar\".getBytes))\n+\n+    for (i <- 0 until servers.size)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5e4984f4c5287513b47ddecf6ccb7de9e90268"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU2Mjk3MTI1", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-456297125", "createdAt": "2020-07-28T04:40:48Z", "commit": {"oid": "3d5e4984f4c5287513b47ddecf6ccb7de9e90268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDo0MDo0OVrOG38WPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOFQwNDo0MDo0OVrOG38WPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTMxMzU5Nw==", "bodyText": "Do we have unit test coverage for other transaction API max blocking as well? Do you mind adding them as separate tests and share the same module?", "url": "https://github.com/apache/kafka/pull/9081#discussion_r461313597", "createdAt": "2020-07-28T04:40:49Z", "author": {"login": "abbccdda"}, "path": "core/src/test/scala/integration/kafka/api/TransactionsTest.scala", "diffHunk": "@@ -406,6 +406,26 @@ class TransactionsTest extends KafkaServerTestHarness {\n     TestUtils.waitUntilTrue(() => offsetAndMetadata.equals(consumer.committed(Set(tp).asJava).get(tp)), \"cannot read committed offset\")\n   }\n \n+  @Test(expected = classOf[TimeoutException])\n+  def testSendOffsetsToTransactionTimeout(): Unit = {\n+    val producer = createTransactionalProducer(\"transactionProducer\", maxBlockMs = 1000)\n+    producer.initTransactions()\n+    producer.beginTransaction()\n+    producer.send(new ProducerRecord[Array[Byte], Array[Byte]](topic1, \"foo\".getBytes, \"bar\".getBytes))\n+\n+    for (i <- 0 until servers.size)\n+      killBroker(i)\n+\n+    try {\n+      producer.sendOffsetsToTransaction(Map(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d5e4984f4c5287513b47ddecf6ccb7de9e90268"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e5675d44a5e1eb618eafe8cba43cb6417e8be2e1", "author": {"user": {"login": "sasakitoa", "name": "Sasaki Toru"}}, "url": "https://github.com/apache/kafka/commit/e5675d44a5e1eb618eafe8cba43cb6417e8be2e1", "committedDate": "2020-07-28T14:21:06Z", "message": "Change how to get broker indices from size to indices."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c20bcab28c5f75d8d380e4f7008e0282f790b49", "author": {"user": {"login": "sasakitoa", "name": "Sasaki Toru"}}, "url": "https://github.com/apache/kafka/commit/8c20bcab28c5f75d8d380e4f7008e0282f790b49", "committedDate": "2020-07-28T16:02:51Z", "message": "Add timeout test for initTransactions, commitTransaction, abortTransaction using same method."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3MTk2NjEx", "url": "https://github.com/apache/kafka/pull/9081#pullrequestreview-457196611", "createdAt": "2020-07-29T05:05:18Z", "commit": {"oid": "8c20bcab28c5f75d8d380e4f7008e0282f790b49"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 944, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}