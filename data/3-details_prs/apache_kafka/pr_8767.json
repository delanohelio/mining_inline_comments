{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1NjMzNDQ4", "number": 8767, "title": "KAFKA-10060 GroupMetadataManager should not log if there are no offse\u2026", "bodyText": "address @ijuma comment\n\nI think the expired offsets one can be removed if there are no offsets to expire.\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-05-31T16:08:48Z", "url": "https://github.com/apache/kafka/pull/8767", "merged": true, "mergeCommit": {"oid": "36aa3664343ee8a72b27d4ee6b1ccc8ce323d421"}, "closed": true, "closedAt": "2020-05-31T21:59:41Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcmt-9XAFqTQyMTUwNzcyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcmy-82gFqTQyMTUzMTIzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTA3NzI3", "url": "https://github.com/apache/kafka/pull/8767#pullrequestreview-421507727", "createdAt": "2020-05-31T16:09:41Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjowOTo0MVrOGc52fQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjowOTo0MVrOGc52fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MTE0OQ==", "bodyText": "create another GroupMetadataManager to override the methods we want to verify", "url": "https://github.com/apache/kafka/pull/8767#discussion_r432961149", "createdAt": "2020-05-31T16:09:41Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala", "diffHunk": "@@ -85,21 +82,47 @@ class GroupMetadataManagerTest {\n       offsetsTopicCompressionCodec = config.offsetsTopicCompressionCodec,\n       offsetCommitTimeoutMs = config.offsetCommitTimeoutMs,\n       offsetCommitRequiredAcks = config.offsetCommitRequiredAcks)\n+  }\n \n-    defaultOffsetRetentionMs = offsetConfig.offsetsRetentionMs\n-\n+  private[this] def mockKafkaZkClient: KafkaZkClient = {\n     // make two partitions of the group topic to make sure some partitions are not owned by the coordinator\n-    zkClient = EasyMock.createNiceMock(classOf[KafkaZkClient])\n+    val zkClient: KafkaZkClient = EasyMock.createNiceMock(classOf[KafkaZkClient])\n     EasyMock.expect(zkClient.getTopicPartitionCount(Topic.GROUP_METADATA_TOPIC_NAME)).andReturn(Some(2))\n     EasyMock.replay(zkClient)\n+    zkClient\n+  }\n \n+  @Before\n+  def setUp(): Unit = {\n+    defaultOffsetRetentionMs = offsetConfig.offsetsRetentionMs\n     metrics = new kMetrics()\n     time = new MockTime\n     replicaManager = EasyMock.createNiceMock(classOf[ReplicaManager])\n-    groupMetadataManager = new GroupMetadataManager(0, ApiVersion.latestVersion, offsetConfig, replicaManager, zkClient, time, metrics)\n+    groupMetadataManager = new GroupMetadataManager(0, ApiVersion.latestVersion, offsetConfig, replicaManager,\n+      mockKafkaZkClient, time, metrics)\n     partition = EasyMock.niceMock(classOf[Partition])\n   }\n \n+  @Test\n+  def testLogInfoFromCleanupGroupMetadata(): Unit = {\n+    var expiredOffsets: Int = 0\n+    var infoCount = 0\n+    val gmm = new GroupMetadataManager(0, ApiVersion.latestVersion, offsetConfig, replicaManager, mockKafkaZkClient, time, metrics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTA3NzE2", "url": "https://github.com/apache/kafka/pull/8767#pullrequestreview-421507716", "createdAt": "2020-05-31T16:09:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjowOTozNVrOGc52dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0zMVQxNjoxMTo0M1rOGc53Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MTE0MA==", "bodyText": "Nit: no need for braces.", "url": "https://github.com/apache/kafka/pull/8767#discussion_r432961140", "createdAt": "2020-05-31T16:09:35Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupMetadataManager.scala", "diffHunk": "@@ -786,7 +786,9 @@ class GroupMetadataManager(brokerId: Int,\n       group.removeExpiredOffsets(currentTimestamp, config.offsetsRetentionMs)\n     })\n     offsetExpiredSensor.record(numOffsetsRemoved)\n-    info(s\"Removed $numOffsetsRemoved expired offsets in ${time.milliseconds() - currentTimestamp} milliseconds.\")\n+    if (numOffsetsRemoved > 0) {\n+      info(s\"Removed $numOffsetsRemoved expired offsets in ${time.milliseconds() - currentTimestamp} milliseconds.\")\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjk2MTM1OQ==", "bodyText": "Nit: we don't use private[this] for tests. It's mostly a micro-optimization is not particularly useful for tests (private provides good enough semantics).", "url": "https://github.com/apache/kafka/pull/8767#discussion_r432961359", "createdAt": "2020-05-31T16:11:43Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/unit/kafka/coordinator/group/GroupMetadataManagerTest.scala", "diffHunk": "@@ -85,21 +82,47 @@ class GroupMetadataManagerTest {\n       offsetsTopicCompressionCodec = config.offsetsTopicCompressionCodec,\n       offsetCommitTimeoutMs = config.offsetCommitTimeoutMs,\n       offsetCommitRequiredAcks = config.offsetCommitRequiredAcks)\n+  }\n \n-    defaultOffsetRetentionMs = offsetConfig.offsetsRetentionMs\n-\n+  private[this] def mockKafkaZkClient: KafkaZkClient = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ece74d094cb186bff1316062c0199c56461dc5e", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/8ece74d094cb186bff1316062c0199c56461dc5e", "committedDate": "2020-05-31T16:33:43Z", "message": "KAFKA-10060 GroupMetadataManager should not log if there are no offsets to expire"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8ece74d094cb186bff1316062c0199c56461dc5e", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/8ece74d094cb186bff1316062c0199c56461dc5e", "committedDate": "2020-05-31T16:33:43Z", "message": "KAFKA-10060 GroupMetadataManager should not log if there are no offsets to expire"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTMxMjM2", "url": "https://github.com/apache/kafka/pull/8767#pullrequestreview-421531236", "createdAt": "2020-05-31T21:59:13Z", "commit": {"oid": "8ece74d094cb186bff1316062c0199c56461dc5e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 800, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}