{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExNTAwNDE1", "number": 8591, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowNDo1NFrOD4DvAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToyMTo1M1rOD4fPpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwMTA4MDM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/security/authorizer/AclEntry.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowNDo1NFrOGOq3Sg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0zMFQxNDowNDo1NFrOGOq3Sg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODAzNTUzMA==", "bodyText": "Nit: e -> _.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418035530", "createdAt": "2020-04-30T14:04:54Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclEntry.scala", "diffHunk": "@@ -92,6 +95,23 @@ object AclEntry {\n     }.getOrElse(Set.empty)\n   }\n \n+  /**\n+   * Parse a JSON string into a JsonValue if possible. `None` is returned if `input` is not valid JSON. This method is currently used\n+   * to read the already stored invalid ACLs JSON which was persisted using older versions of Kafka (prior to Kafka 1.1.0). KAFKA-6319\n+   */\n+  private def parseBytesWithAclFallback(input: Array[Byte]): Option[JsonValue] = {\n+    // Before 1.0.1, Json#encode did not escape backslash or any other special characters. SSL principals\n+    // stored in ACLs may contain backslash as an escape char, making the JSON generated in earlier versions invalid.\n+    // Escape backslash and retry to handle these strings which may have been persisted in ZK.\n+    // Note that this does not handle all special characters (e.g. non-escaped double quotes are not supported)\n+    Json.tryParseBytes(input) match {\n+      case Left(e) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "438d010f53963bfb6a364466ac28e0e59a013895"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTU3MDgwOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/security/authorizer/AclEntryTest.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToxNDo1M1rOGPV7Dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToxNDo1M1rOGPV7Dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MTAwNg==", "bodyText": "Need to revert this. It is causing the build to fail.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418741006", "createdAt": "2020-05-01T21:14:53Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/security/authorizer/AclEntryTest.scala", "diffHunk": "@@ -23,27 +23,28 @@ import org.apache.kafka.common.acl.AclOperation.READ\n import org.apache.kafka.common.acl.AclPermissionType.{ALLOW, DENY}\n import org.apache.kafka.common.security.auth.KafkaPrincipal\n import org.junit.{Assert, Test}\n-import org.scalatestplus.junit.JUnitSuite\n \n-import scala.jdk.CollectionConverters._\n+import scala.collection.JavaConverters._", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTU4NzU3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/utils/Json.scala", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMToyMTo1M1rOGPWE2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQxNToyMzowMFrOGRYakQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ==", "bodyText": "I'm probably missing something obvious, but I found the following callers of this function: DeleteRecordsCommand, LeaderElectionCommand, PreferredReplicaLeaderElectionCommand, and ReassignPartitionsCommand. As far as I can tell, none of these uses involve the parsing of ACLs. Did we lose this compatibility handling at some point or is there some magic invocation?", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418743515", "createdAt": "2020-05-01T21:21:53Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2NjE0MQ==", "bodyText": "The compatibility fix was only required for ACLs, but we added it here to keep the fix small for backporting. The idea was to move to the appropriate place soon after, but it got stuck for a while. Do you have some concerns?", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418766141", "createdAt": "2020-05-01T22:37:12Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3ODQ3MA==", "bodyText": "Discussed this offline with @hachikuji. I had misunderstood his point. It looks like the compatibility code has not been used since 1.1.0:\n9b44c3e#diff-81f2ec590f4e047be7e3a7e5267cbc9aR60", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418778470", "createdAt": "2020-05-01T23:30:28Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc3ODYwMw==", "bodyText": "Maybe we should just drop this code.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r418778603", "createdAt": "2020-05-01T23:31:07Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA0MDU2Nw==", "bodyText": "I looks like parseFull is used in a couple of places as Json mentioned but I can perhaps just delegate this to parseBytes like this below and can continue using that in the mentioned callers.\ndef parseFull(input: String): Option[JsonValue] = parseBytes(input.getBytes(Charset.defaultCharset()))\n\nOr shall I just get rid of this code and use parseBytes everywhere?", "url": "https://github.com/apache/kafka/pull/8591#discussion_r420040567", "createdAt": "2020-05-05T11:32:05Z", "author": {"login": "viktorsomogyi"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNDg1Ng==", "bodyText": "This code is fine as it is. We are suggesting that we don't need parseBytesWithAclFallback in AclEntry.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r420124856", "createdAt": "2020-05-05T13:51:07Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDc1Mzk5Mw==", "bodyText": "Ok, then I misunderstood it too. :)\nHowever isn't it possible that this issue resurfaces again if we remove this? I suspect the user who raised it may still use 1.0 where it got fixed and when they upgrade they'd run into this again. Or am I missing something else too?", "url": "https://github.com/apache/kafka/pull/8591#discussion_r420753993", "createdAt": "2020-05-06T12:33:46Z", "author": {"login": "viktorsomogyi"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDgwMjk3OQ==", "bodyText": "@viktorsomogyi I think the argument is that if no-one complained since 1.1 which was released more than 2 years ago, then maybe this issue is very rare.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r420802979", "createdAt": "2020-05-06T13:46:11Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDg3ODk5Mw==", "bodyText": "Ok, that's fair. I've uploaded the changes.", "url": "https://github.com/apache/kafka/pull/8591#discussion_r420878993", "createdAt": "2020-05-06T15:23:00Z", "author": {"login": "viktorsomogyi"}, "path": "core/src/main/scala/kafka/utils/Json.scala", "diffHunk": "@@ -35,16 +35,7 @@ object Json {\n    */\n   def parseFull(input: String): Option[JsonValue] =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc0MzUxNQ=="}, "originalCommit": {"oid": "fec67e0b523c6b7070b4083afb9ae29478afd36b"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2849, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}