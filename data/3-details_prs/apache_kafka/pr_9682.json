{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTEzMTAy", "number": 9682, "title": "KAFKA-10803: Fix improper removal of bad dynamic config", "bodyText": "There is a bug in how incorrect dynamic config keys are removed from the original Properties list, resulting in persisting the improper configs in the properties list.\nThis eventually results in exception being thrown while parsing the list by KafkaConfig ctor, resulting in skipping of the complete dynamic list (including the correct ones).\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)\n\nreviewers: @rajinisivaram @omkreddy", "createdAt": "2020-12-03T16:29:20Z", "url": "https://github.com/apache/kafka/pull/9682", "merged": true, "mergeCommit": {"oid": "155f2c06fbadc7a1a7a15cd2a2d5c2b7e72de0eb"}, "closed": true, "closedAt": "2020-12-04T03:59:40Z", "author": {"login": "prat0318"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdilcvAAH2gAyNTMxOTEzMTAyOmNhN2RhZTZmZjEzN2Q1YjBkOTEyYzgzOTI3NGVlMGNmMmNlYWE5N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdimvqngFqTU0NDIxMzY4MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "author": {"user": {"login": "prat0318", "name": "Prateek Agarwal"}}, "url": "https://github.com/apache/kafka/commit/ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a", "committedDate": "2020-12-03T16:08:32Z", "message": "Fix improper removal of bad dynamic config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MTQ1MTc1", "url": "https://github.com/apache/kafka/pull/9682#pullrequestreview-544145175", "createdAt": "2020-12-03T16:30:49Z", "commit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMDo0OVrOH-ldCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNjozMDo0OVrOH-ldCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTM4NzQwMw==", "bodyText": "Current trunk code returns the old value 2222 for this instead of the newly configured 1111.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535387403", "createdAt": "2020-12-03T16:30:49Z", "author": {"login": "prat0318"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    // Even if One property is invalid, the below should get correctly updated.\n+    assertEquals(1111, configs.messageMaxBytes)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MTkxNzYw", "url": "https://github.com/apache/kafka/pull/9682#pullrequestreview-544191760", "createdAt": "2020-12-03T17:14:06Z", "commit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNDowNlrOH-n2bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzoxNzoyN1rOH-n_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyNjY3MQ==", "bodyText": "How about invalidProps.keys.foreach(props.remove)? it is still one line.", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535426671", "createdAt": "2020-12-03T17:14:06Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/DynamicBrokerConfig.scala", "diffHunk": "@@ -467,7 +467,9 @@ class DynamicBrokerConfig(private val kafkaConfig: KafkaConfig) extends Logging\n             case _: Exception => true\n           }\n         }\n-        invalidProps.foreach(props.remove)\n+        invalidProps.foreach {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyODg0MA==", "bodyText": "Could you replace Int.MaxValue by Defaults.MaxConnections?", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535428840", "createdAt": "2020-12-03T17:17:03Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals\n+    assertEquals(Int.MaxValue, configs.maxConnections)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQyOTA5NA==", "bodyText": "\"Originals\" -> \"default value\"", "url": "https://github.com/apache/kafka/pull/9682#discussion_r535429094", "createdAt": "2020-12-03T17:17:27Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/server/DynamicBrokerConfigTest.scala", "diffHunk": "@@ -400,6 +400,33 @@ class DynamicBrokerConfigTest {\n     newprops.put(KafkaConfig.BackgroundThreadsProp, \"100\")\n     dynamicBrokerConfig.updateBrokerConfig(0, newprops)\n   }\n+\n+  @Test\n+  def testImproperConfigsAreRemoved(): Unit = {\n+    val props = TestUtils.createBrokerConfig(0, TestUtils.MockZkConnect)\n+    val configs = KafkaConfig(props)\n+\n+    assertEquals(Int.MaxValue, configs.maxConnections)\n+    assertEquals(1048588, configs.messageMaxBytes)\n+\n+    var newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"9999\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"2222\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    assertEquals(9999, configs.maxConnections)\n+    assertEquals(2222, configs.messageMaxBytes)\n+\n+    newProps = new Properties()\n+    newProps.put(KafkaConfig.MaxConnectionsProp, \"INVALID_INT\")\n+    newProps.put(KafkaConfig.MessageMaxBytesProp, \"1111\")\n+\n+    configs.dynamicConfig.updateDefaultConfig(newProps)\n+    // Invalid value should be skipped and reassigned as Originals", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca7dae6ff137d5b0d912c839274ee0cf2ceaa97a"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f747aa559ca92325b822f5f92e432fe3cb76d30c", "author": {"user": {"login": "prat0318", "name": "Prateek Agarwal"}}, "url": "https://github.com/apache/kafka/commit/f747aa559ca92325b822f5f92e432fe3cb76d30c", "committedDate": "2020-12-03T17:36:20Z", "message": "Add review suggestions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjEzNjgw", "url": "https://github.com/apache/kafka/pull/9682#pullrequestreview-544213680", "createdAt": "2020-12-03T17:39:07Z", "commit": {"oid": "f747aa559ca92325b822f5f92e432fe3cb76d30c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2531, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}