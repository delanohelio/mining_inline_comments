{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ5MDU3NzEz", "number": 9022, "title": "KAFKA-10158: Fix flaky testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress", "bodyText": "Set replica.fetch.max.bytes to 1 and produce multiple record batches to allow\nfor throttling to take place. This helps avoid a race condition where the\nreassignment would complete more quickly than expected causing an\nassertion to fail some times.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-07-14T19:00:54Z", "url": "https://github.com/apache/kafka/pull/9022", "merged": true, "mergeCommit": {"oid": "99472c54f01e1f654a3ccb774a7857f10d69e2e3"}, "closed": true, "closedAt": "2020-07-26T15:28:48Z", "author": {"login": "bdbyrne"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc06xuWgH2gAyNDQ5MDU3NzEzOjhmMzg1MjhiOTg4YTI4N2M0MTQyZjg3ZDQyYmZkNjJmNWI0Mjg0NDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4a1pPAFqTQ1NTI5MzU5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/8f38528b988a287c4142f87d42bfd62f5b428449", "committedDate": "2020-07-14T18:58:57Z", "message": "KAFKA-10158: Improve test behavior and resolve flakiness of\n  TopicCommandWithAdminClientTest#\n  testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4MzgyOTY0", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448382964", "createdAt": "2020-07-14T19:01:40Z", "commit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTowMTo0MFrOGxhN6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTowMTo0MFrOGxhN6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ==", "bodyText": "Note that although we're bumping this to 1000, it should be a single produce batch with really small data, so on the order of a couple KBs.", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454577641", "createdAt": "2020-07-14T19:01:40Z", "author": {"login": "bdbyrne"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mzk0Mzc5", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448394379", "createdAt": "2020-07-14T19:18:35Z", "commit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxODozNlrOGxhyIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxODozNlrOGxhyIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjkxMg==", "bodyText": "It might be worth adding a comment somewhere in testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress to describe what was done in the replicaFetchMaxBytes def and why.", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454586912", "createdAt": "2020-07-14T19:18:36Z", "author": {"login": "lbradstreet"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Mzk1MDUy", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448395052", "createdAt": "2020-07-14T19:19:36Z", "commit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxOTozNlrOGxh0Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToxOTozNlrOGxh0Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NzQ2Mg==", "bodyText": "Why did we remove this? We still need the throttle to be set so that the replica doesn't join the ISR. It could easily do this even if it only fetches a message at a time. The idea with the new replica fetch max bytes setting is to give the broker a chance to throttle itself before joining the ISR.", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454587462", "createdAt": "2020-07-14T19:19:36Z", "author": {"login": "lbradstreet"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)\n \n     val brokerIds = servers.map(_.config.brokerId)\n-    TestUtils.setReplicationThrottleForPartitions(adminClient, brokerIds, Set(tp), throttleBytes = 1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDA5MjQw", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448409240", "createdAt": "2020-07-14T19:41:07Z", "commit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0MTowOFrOGxig_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOTo0NDoxOFrOGxinfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODkxMQ==", "bodyText": "So each message creates its own ProducerRecord, I was under the assumption that the limit to fetch expands to a single record, and not the batch itself. Or am I misunderstanding?", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454598911", "createdAt": "2020-07-14T19:41:08Z", "author": {"login": "bdbyrne"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU3NzY0MQ=="}, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5ODk1Mg==", "bodyText": "Done.", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454598952", "createdAt": "2020-07-14T19:41:12Z", "author": {"login": "bdbyrne"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NjkxMg=="}, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDYwMDU3NA==", "bodyText": "Added back, but to clarify - are you suggesting the high watermark could still be at 0 (or relatively low) even after producing the messages? Or just that both combined are a more effective throttle, essentially putting it at 1 record/sec?", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454600574", "createdAt": "2020-07-14T19:44:18Z", "author": {"login": "bdbyrne"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -672,11 +677,9 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     adminClient.createTopics(\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n-    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 1000, acks = -1)\n \n     val brokerIds = servers.map(_.config.brokerId)\n-    TestUtils.setReplicationThrottleForPartitions(adminClient, brokerIds, Set(tp), throttleBytes = 1)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU4NzQ2Mg=="}, "originalCommit": {"oid": "8f38528b988a287c4142f87d42bfd62f5b428449"}, "originalPosition": 27}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f22f684a5d63725e07974fdffca9b5c6516c76a9", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/f22f684a5d63725e07974fdffca9b5c6516c76a9", "committedDate": "2020-07-14T20:02:33Z", "message": "(address comments)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92499138238e0e6b219a9f5af22b736ab704ca56", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/92499138238e0e6b219a9f5af22b736ab704ca56", "committedDate": "2020-07-14T20:19:23Z", "message": "(move throttle removal to below reassignment check)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDYxNTYy", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448461562", "createdAt": "2020-07-14T20:59:00Z", "commit": {"oid": "92499138238e0e6b219a9f5af22b736ab704ca56"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMDo1OTowMFrOGxlGhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQyMDo1OTowMFrOGxlGhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDY0MTI4NQ==", "bodyText": "Do we want to leave a comment here to say that we are trying to ensure that messages are produced in multiple batches? I do wonder if there's a better way to achieve this via a producer setting, e.g. batch.size?", "url": "https://github.com/apache/kafka/pull/9022#discussion_r454641285", "createdAt": "2020-07-14T20:59:00Z", "author": {"login": "lbradstreet"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -673,10 +678,14 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n       Collections.singletonList(new NewTopic(testTopicName, partitions, replicationFactor).configs(configMap))).all().get()\n     waitForTopicCreated(testTopicName)\n     TestUtils.generateAndProduceMessages(servers, testTopicName, numMessages = 10, acks = -1)\n+    Thread.sleep(10)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92499138238e0e6b219a9f5af22b736ab704ca56"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4NDYyMzc3", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-448462377", "createdAt": "2020-07-14T21:00:12Z", "commit": {"oid": "92499138238e0e6b219a9f5af22b736ab704ca56"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f28cc408a9544a72ca872b9cc934472f87de4ef", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/5f28cc408a9544a72ca872b9cc934472f87de4ef", "committedDate": "2020-07-15T21:58:20Z", "message": "(add comment)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5Mzg2ODMz", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-449386833", "createdAt": "2020-07-15T22:27:41Z", "commit": {"oid": "5f28cc408a9544a72ca872b9cc934472f87de4ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoyNzo0MlrOGyTeZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQyMjoyNzo0MlrOGyTeZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTQwMTA2MA==", "bodyText": "It's always an annoyance with Junit that there is no way for the test case to override initialization in a @Before. What we often end up doing is removing the annotation and calling the setup method explicitly in each test case. I slightly prefer that option since it is easier to understand, but not sure it is possible since we're extending KafkaServerTestHarness, which has its own initialization logic. For the sake of argument, would it be possible to set max fetch bytes to 1 for all tests? Either that or maybe we should just produce more data in the test case.", "url": "https://github.com/apache/kafka/pull/9022#discussion_r455401060", "createdAt": "2020-07-15T22:27:42Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/admin/TopicCommandWithAdminClientTest.scala", "diffHunk": "@@ -56,12 +56,17 @@ class TopicCommandWithAdminClientTest extends KafkaServerTestHarness with Loggin\n     zkConnect = zkConnect,\n     rackInfo = Map(0 -> \"rack1\", 1 -> \"rack2\", 2 -> \"rack2\", 3 -> \"rack1\", 4 -> \"rack3\", 5 -> \"rack3\"),\n     numPartitions = numPartitions,\n-    defaultReplicationFactor = defaultReplicationFactor\n+    defaultReplicationFactor = defaultReplicationFactor,\n+    replicaFetchMaxBytes = replicaFetchMaxBytes(),\n   ).map(KafkaConfig.fromProps)\n \n   private val numPartitions = 1\n   private val defaultReplicationFactor = 1.toShort\n \n+  private def replicaFetchMaxBytes() =\n+    if (testName.getMethodName == \"testDescribeUnderReplicatedPartitionsWhenReassignmentIsInProgress\") Some(1)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5f28cc408a9544a72ca872b9cc934472f87de4ef"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc0ba49f1c8600387cc1a724a140b9f20ad9a04e", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/cc0ba49f1c8600387cc1a724a140b9f20ad9a04e", "committedDate": "2020-07-16T18:45:21Z", "message": "(address comments, fix build)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDY5NTcx", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-451069571", "createdAt": "2020-07-18T17:02:27Z", "commit": {"oid": "cc0ba49f1c8600387cc1a724a140b9f20ad9a04e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d1f31be6eb02fa8b20eedce703153946b9fbda7", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/0d1f31be6eb02fa8b20eedce703153946b9fbda7", "committedDate": "2020-07-25T15:56:57Z", "message": "Minor fixes\n\n- Remove Thread.sleep\n- Don't change signature of `TestUtils.createBrokerConfigs` for\ninfrequently used parameter.\n- Remove unnecessary `()`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjkzNTkw", "url": "https://github.com/apache/kafka/pull/9022#pullrequestreview-455293590", "createdAt": "2020-07-25T16:01:58Z", "commit": {"oid": "0d1f31be6eb02fa8b20eedce703153946b9fbda7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1284, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}