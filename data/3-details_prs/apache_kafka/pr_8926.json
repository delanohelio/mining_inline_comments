{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjAzMjM1", "number": 8926, "title": "KAFKA-10166: always write checkpoint before closing an (initialized) task", "bodyText": "This should address at least some of the excessive TaskCorruptedExceptions we've been seeing lately. Basically, at the moment we only commit tasks if commitNeeded is true -- this seems obvious by definition. But the problem is we do some essential cleanup in postCommit that should always be done before a task is closed:\n\nclear the PartitionGroup\nwrite the checkpoint\n\n2 is actually fine to skip when commitNeeded = false with ALOS, as we will have already written a checkpoint during the last commit. But for EOS, we only write the checkpoint before a close -- so even if there is no new pending data since the last commit, we have to write the current offsets. If we don't, the task will be assumed dirty and we will run into our friend the TaskCorruptedException during (re)initialization.\nTo fix this, we should just always call prepareCommit and postCommit at the TaskManager level. Within the task, it can decide whether or not to actually do something in those methods based on commitNeeded.\nOne subtle issue is that we still need to avoid checkpointing a task that was still in CREATED, to avoid potentially overwriting an existing checkpoint with uninitialized empty offsets. Unfortunately we always suspend a task before closing and committing, so we lose the information about whether the task as in CREATED or RUNNING/RESTORING by the time we get to the checkpoint. For this we introduce a special flag to keep track of whether a suspended task should actually be checkpointed or not", "createdAt": "2020-06-25T01:37:13Z", "url": "https://github.com/apache/kafka/pull/8926", "merged": true, "mergeCommit": {"oid": "30df089631cf3c7667b609e2b9689cb02230c64e"}, "closed": true, "closedAt": "2020-06-26T22:11:56Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuklHJgFqTQzNzExNTQxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcvGSGBgBqjM0ODc0MDEwNTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTE1NDE1", "url": "https://github.com/apache/kafka/pull/8926#pullrequestreview-437115415", "createdAt": "2020-06-25T01:43:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0Mzo0M1rOGooqIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0Mzo0M1rOGooqIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2MjM2OQ==", "bodyText": "This was another \"sort-of bug\": if we hit an exception in handleRevocation we wouldn't finish committing the active tasks, so commitNeeded could still be true. But of course, if we hit an exception earlier, we would have thrown it up to ConsumerCoordinator which would only save the first exception, so this didn't really do anything", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445262369", "createdAt": "2020-06-25T01:43:43Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -242,18 +242,16 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n \n         for (final Task task : tasksToClose) {\n             try {\n-                task.suspend(); // Should be a no-op for active tasks since they're suspended in handleRevocation\n-                if (task.commitNeeded()) {\n-                    if (task.isActive()) {\n-                        log.error(\"Active task {} was revoked and should have already been committed\", task.id());\n-                        throw new IllegalStateException(\"Revoked active task was not committed during handleRevocation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3MTE1OTU0", "url": "https://github.com/apache/kafka/pull/8926#pullrequestreview-437115954", "createdAt": "2020-06-25T01:45:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0NTozN1rOGoorwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0NTozN1rOGoorwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2Mjc4NA==", "bodyText": "We can actually simplify the standby task shutdown a LOT", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445262784", "createdAt": "2020-06-25T01:45:37Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -813,27 +821,6 @@ void shutdown(final boolean clean) {\n                 tasksToCloseDirty.add(task);\n             }\n         }\n-\n-        for (final Task task : tasksToCommit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 158}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTQyNDA2", "url": "https://github.com/apache/kafka/pull/8926#pullrequestreview-437942406", "createdAt": "2020-06-26T00:24:27Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNDoyN1rOGpQASg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNzowMVrOGpQCww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNzAxOA==", "bodyText": "If we are not committing these tasks, should we call their postCommit?", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445907018", "createdAt": "2020-06-26T00:24:27Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -469,21 +465,27 @@ void handleRevocation(final Collection<TopicPartition> revokedPartitions) {\n             throw suspendException;\n         }\n \n+        final Map<TaskId, Map<TopicPartition, OffsetAndMetadata>> consumedOffsetsAndMetadataPerTask = new HashMap<>();\n+        prepareCommitAndAddOffsetsToMap(revokedTasks, consumedOffsetsAndMetadataPerTask);\n+\n         // If using eos-beta, if we must commit any task then we must commit all of them\n         // TODO: when KAFKA-9450 is done this will be less expensive, and we can simplify by always committing everything\n-        if (processingMode ==  EXACTLY_ONCE_BETA && !tasksToCommit.isEmpty()) {\n-            tasksToCommit.addAll(additionalTasksForCommitting);\n-        }\n-\n-        final Map<TaskId, Map<TopicPartition, OffsetAndMetadata>> consumedOffsetsAndMetadataPerTask = new HashMap<>();\n-        for (final Task task : tasksToCommit) {\n-            final Map<TopicPartition, OffsetAndMetadata> committableOffsets = task.prepareCommit();\n-            consumedOffsetsAndMetadataPerTask.put(task.id(), committableOffsets);\n+        if (processingMode ==  EXACTLY_ONCE_BETA && !consumedOffsetsAndMetadataPerTask.isEmpty()) {\n+            prepareCommitAndAddOffsetsToMap(additionalTasksForCommitting, consumedOffsetsAndMetadataPerTask);\n         }\n \n         commitOffsetsOrTransaction(consumedOffsetsAndMetadataPerTask);\n \n-        for (final Task task : tasksToCommit) {\n+        for (final Task task : revokedTasks) {\n+            try {\n+                task.postCommit();\n+            } catch (final RuntimeException e) {\n+                log.error(\"Exception caught while post-committing task \" + task.id(), e);\n+                firstException.compareAndSet(null, e);\n+            }\n+        }\n+\n+        for (final Task task : additionalTasksForCommitting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNzY1MQ==", "bodyText": "Makes sense.", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445907651", "createdAt": "2020-06-26T00:27:01Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -813,27 +821,6 @@ void shutdown(final boolean clean) {\n                 tasksToCloseDirty.add(task);\n             }\n         }\n-\n-        for (final Task task : tasksToCommit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2Mjc4NA=="}, "originalCommit": null, "originalPosition": 158}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8112341e1162b8e4d03afa74c5355a152c0d5d4", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/b8112341e1162b8e4d03afa74c5355a152c0d5d4", "committedDate": "2020-06-26T16:56:10Z", "message": "always invoke postCommit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "251214a0703e0788206c2a8d39f3a7fdd318d4af", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/251214a0703e0788206c2a8d39f3a7fdd318d4af", "committedDate": "2020-06-26T16:56:10Z", "message": "always call prepareCommit as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3032052f911b0e3ded98750a206ea77345768c60", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/3032052f911b0e3ded98750a206ea77345768c60", "committedDate": "2020-06-26T16:56:10Z", "message": "fix standby shutdown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3c6afd6e636b45c7b6a6b43d93f301cb69f55aa", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/f3c6afd6e636b45c7b6a6b43d93f301cb69f55aa", "committedDate": "2020-06-26T16:56:10Z", "message": "dont throw if prepare/postCommitting CREATED"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13b0ee1df558dea7ec18f9d181ec36ddd456aa95", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/13b0ee1df558dea7ec18f9d181ec36ddd456aa95", "committedDate": "2020-06-26T16:56:10Z", "message": "add checkpointNeeded flag"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d3a7718e700be4f43f9a3220ff783bc1bc1bb2c", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/7d3a7718e700be4f43f9a3220ff783bc1bc1bb2c", "committedDate": "2020-06-26T16:56:10Z", "message": "cleaning up StreamTask tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a24df9d7b3e9638ba35896d044c8959cf21e9f62", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/a24df9d7b3e9638ba35896d044c8959cf21e9f62", "committedDate": "2020-06-26T16:56:10Z", "message": "fixing up standby task tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6715667258e077163d9368c49c07220076b8ccc", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/f6715667258e077163d9368c49c07220076b8ccc", "committedDate": "2020-06-26T16:56:10Z", "message": "cleaning up TM tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4125b363105af8402294e40e2872a91fd5e3ab31", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/4125b363105af8402294e40e2872a91fd5e3ab31", "committedDate": "2020-06-26T16:58:30Z", "message": "fix TTD"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4125b363105af8402294e40e2872a91fd5e3ab31", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/4125b363105af8402294e40e2872a91fd5e3ab31", "committedDate": "2020-06-26T16:58:30Z", "message": "fix TTD"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 728, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}