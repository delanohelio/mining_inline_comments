{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MTMwMDcy", "number": 9555, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODoyNDo0NVrOE1yX-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODoyNDo0NVrOE1yX-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0ODM1MzIxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/network/SocketServer.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxODoyNDo0NVrOHuQpOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxOTo1NzoxOVrOHuUOeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2OTI0MA==", "bodyText": "Good point and definitely agree that config.interBrokerListenerName could be expensive as we call it several times per accepting a new connection.\nThe issue here is that interBrokerListenerName is a dynamic config. So, you will need to update the cached value on changes to that config; similar how we notify ConnectionQuotas about config changes from SocketServer.reconfigure().", "url": "https://github.com/apache/kafka/pull/9555#discussion_r518269240", "createdAt": "2020-11-05T18:24:45Z", "author": {"login": "apovzner"}, "path": "core/src/main/scala/kafka/network/SocketServer.scala", "diffHunk": "@@ -1189,6 +1189,7 @@ class ConnectionQuotas(config: KafkaConfig, time: Time, metrics: Metrics) extend\n   @volatile private var defaultMaxConnectionsPerIp: Int = config.maxConnectionsPerIp\n   @volatile private var maxConnectionsPerIpOverrides = config.maxConnectionsPerIpOverrides.map { case (host, count) => (InetAddress.getByName(host), count) }\n   @volatile private var brokerMaxConnections = config.maxConnections\n+  @volatile private var interBrokerListenerName = config.interBrokerListenerName", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI4MzYwMA==", "bodyText": "interBrokerListenerName is apparently not a dynamic config.\nsee DynamicBrokerReconfigurationTest.testAdvertisedListenerUpdate\n...\n    // Verify updating inter-broker listener\n    val props = new Properties\n    props.put(KafkaConfig.InterBrokerListenerNameProp, SecureExternal)\n    try {\n      reconfigureServers(props, perBrokerConfig = true, (KafkaConfig.InterBrokerListenerNameProp, SecureExternal))\n      fail(\"Inter-broker listener cannot be dynamically updated\")\n   }\n\nI don't think we allow updating inter broker listener at all, so I think we can remove the test I added. I actually wasn't sure if we allowed it or not, but the code seems to suggest that it isn't.", "url": "https://github.com/apache/kafka/pull/9555#discussion_r518283600", "createdAt": "2020-11-05T18:49:26Z", "author": {"login": "splett2"}, "path": "core/src/main/scala/kafka/network/SocketServer.scala", "diffHunk": "@@ -1189,6 +1189,7 @@ class ConnectionQuotas(config: KafkaConfig, time: Time, metrics: Metrics) extend\n   @volatile private var defaultMaxConnectionsPerIp: Int = config.maxConnectionsPerIp\n   @volatile private var maxConnectionsPerIpOverrides = config.maxConnectionsPerIpOverrides.map { case (host, count) => (InetAddress.getByName(host), count) }\n   @volatile private var brokerMaxConnections = config.maxConnections\n+  @volatile private var interBrokerListenerName = config.interBrokerListenerName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2OTI0MA=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODMyNzkyOA==", "bodyText": "You are right -- I saw that test and thought it was a dynamic config, but the test was verifying that it cannot be updated. I see now that KIP-226 lists that as future work, cool.", "url": "https://github.com/apache/kafka/pull/9555#discussion_r518327928", "createdAt": "2020-11-05T19:57:19Z", "author": {"login": "apovzner"}, "path": "core/src/main/scala/kafka/network/SocketServer.scala", "diffHunk": "@@ -1189,6 +1189,7 @@ class ConnectionQuotas(config: KafkaConfig, time: Time, metrics: Metrics) extend\n   @volatile private var defaultMaxConnectionsPerIp: Int = config.maxConnectionsPerIp\n   @volatile private var maxConnectionsPerIpOverrides = config.maxConnectionsPerIpOverrides.map { case (host, count) => (InetAddress.getByName(host), count) }\n   @volatile private var brokerMaxConnections = config.maxConnections\n+  @volatile private var interBrokerListenerName = config.interBrokerListenerName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODI2OTI0MA=="}, "originalCommit": null, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3799, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}