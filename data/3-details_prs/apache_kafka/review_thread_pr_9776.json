{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzODkzOTgw", "number": 9776, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNjowOToyM1rOFIn6xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNjowOToyM1rOFIn6xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0NTg2OTQ5OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxNjowOToyM1rOIKpNrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQwNDoxOToyMlrOIK-LpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAzMTkxOQ==", "bodyText": "Is this error message from java standard library? If so, does it got different on different location (i.e different language)?", "url": "https://github.com/apache/kafka/pull/9776#discussion_r548031919", "createdAt": "2020-12-23T16:09:23Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java", "diffHunk": "@@ -414,7 +416,7 @@ public void testReadWhenOptionalDataMissingAtTheEndIsNotTolerated() {\n         oldFormat.writeTo(buffer);\n         buffer.flip();\n         SchemaException e = assertThrows(SchemaException.class, () -> newSchema.read(buffer));\n-        e.getMessage().contains(\"Error reading field 'field2': java.nio.BufferUnderflowException\");\n+        assertThat(e.getMessage(), containsString(\"Error reading field 'field2': java.nio.BufferUnderflowException\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2564b34fea874091297b1df85fd95c53da3ba81"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM3NTA5Nw==", "bodyText": "The SchemaException is throw by KAFKA.\nit's message is  fix string + field info   +  e.msg || e.className\nthe lastest string here is className\nbut It's seems to me that only check the prefix is more better", "url": "https://github.com/apache/kafka/pull/9776#discussion_r548375097", "createdAt": "2020-12-24T04:17:11Z", "author": {"login": "g1geordie"}, "path": "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java", "diffHunk": "@@ -414,7 +416,7 @@ public void testReadWhenOptionalDataMissingAtTheEndIsNotTolerated() {\n         oldFormat.writeTo(buffer);\n         buffer.flip();\n         SchemaException e = assertThrows(SchemaException.class, () -> newSchema.read(buffer));\n-        e.getMessage().contains(\"Error reading field 'field2': java.nio.BufferUnderflowException\");\n+        assertThat(e.getMessage(), containsString(\"Error reading field 'field2': java.nio.BufferUnderflowException\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAzMTkxOQ=="}, "originalCommit": {"oid": "f2564b34fea874091297b1df85fd95c53da3ba81"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODM3NTQ2MA==", "bodyText": "You are right. Checking Error reading field 'field2' should be enough for this test case.", "url": "https://github.com/apache/kafka/pull/9776#discussion_r548375460", "createdAt": "2020-12-24T04:19:22Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/protocol/types/ProtocolSerializationTest.java", "diffHunk": "@@ -414,7 +416,7 @@ public void testReadWhenOptionalDataMissingAtTheEndIsNotTolerated() {\n         oldFormat.writeTo(buffer);\n         buffer.flip();\n         SchemaException e = assertThrows(SchemaException.class, () -> newSchema.read(buffer));\n-        e.getMessage().contains(\"Error reading field 'field2': java.nio.BufferUnderflowException\");\n+        assertThat(e.getMessage(), containsString(\"Error reading field 'field2': java.nio.BufferUnderflowException\"));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODAzMTkxOQ=="}, "originalCommit": {"oid": "f2564b34fea874091297b1df85fd95c53da3ba81"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3543, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}