{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE2NDM1Njg4", "number": 9568, "title": "KAFKA-10689: fix windowed FKJ topology and put checks in assignor to avoid infinite loops", "bodyText": "Two pieces:\n\nFix bug in StreamSinkNode#writeToTopology to make sure it always calls the addSink overload with the specific topic name, when it exists, so that this topic gets tracked in the InternalTopologyBuilder's nodeToSinkTopic map. The sink topics are used by the StreamsPartitionAssignor to resolve the upstream subtopology of a repartition source topic, for whom that repartition topic will be a sink. Without this information the SPA gets stuck permanently during a rebalance\nImprove the SPA's setRepartitionTopicMetadataNumberOfPartitions() method to break out of the loop if we aren't making any progress, to avoid infinitely looping if we ever have another bug like KAFKA-10689. If the SPA hasn't updated the known partition numbers for any repartition topic in the current outer loop, then we know that it's stuck and should throw a TaskAssignmentException to shut down the application", "createdAt": "2020-11-06T01:24:58Z", "url": "https://github.com/apache/kafka/pull/9568", "merged": true, "mergeCommit": {"oid": "e71cb7ab11f85ce793aa337f185a20866ed3dc20"}, "closed": true, "closedAt": "2020-11-18T00:57:54Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdb8QYLgFqTUyOTYxODYzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdcQY6-gBqjM5OTU4MTIzMDg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjE4NjM3", "url": "https://github.com/apache/kafka/pull/9568#pullrequestreview-529618637", "createdAt": "2020-11-13T00:45:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0NToyM1rOHyUzfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0NToyM1rOHyUzfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUzMTcxMA==", "bodyText": "Would it be easier to do\n  if (!progressMadeThisIteration) {\n    throw new TaskAssignmentException(\"Failed to compute number of partitions for all repartition topics\");\n  }\n} while (numPartitionsNeeded);\n\n(and don't have the if (numPartitionsNeeded) after the while loop)\nI guess both is correct and it might be a matter of taste. Also don't have a strong opinion about it. It's just an idea.", "url": "https://github.com/apache/kafka/pull/9568#discussion_r522531710", "createdAt": "2020-11-13T00:45:23Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -575,17 +577,22 @@ private void setRepartitionTopicMetadataNumberOfPartitions(final Map<String, Int\n                             }\n                         }\n \n-                        // if we still have not found the right number of partitions,\n-                        // another iteration is needed\n                         if (numPartitions == null) {\n                             numPartitionsNeeded = true;\n+                            log.trace(\"Unable to determine number of partitions for {}, another iteration is needed\",\n+                                      repartitionSourceTopic);\n                         } else {\n-                            repartitionTopicMetadata.get(topicName).setNumberOfPartitions(numPartitions);\n+                            repartitionTopicMetadata.get(repartitionSourceTopic).setNumberOfPartitions(numPartitions);\n+                            progressMadeThisIteration = true;\n                         }\n                     }\n                 }\n             }\n-        } while (numPartitionsNeeded);\n+        } while (numPartitionsNeeded && progressMadeThisIteration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 68}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjE5MjU2", "url": "https://github.com/apache/kafka/pull/9568#pullrequestreview-529619256", "createdAt": "2020-11-13T00:45:44Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0NTo0NFrOHyUz2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwMDo0NTo0NFrOHyUz2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjUzMTgwMg==", "bodyText": "Do we need this commet?", "url": "https://github.com/apache/kafka/pull/9568#discussion_r522531802", "createdAt": "2020-11-13T00:45:44Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/InternalTopicIntegrationTest.java", "diffHunk": "@@ -135,6 +141,37 @@ private Admin createAdminClient() {\n         return Admin.create(adminClientConfig);\n     }\n \n+    /*\n+     * This test just ensures that that the assignor does not get stuck during partition number resolution\n+     *  for internal repartition topics. See KAFKA-10689\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI5NjIxNzg3", "url": "https://github.com/apache/kafka/pull/9568#pullrequestreview-529621787", "createdAt": "2020-11-13T00:51:19Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffd1982a59d80fa7e14a92ee1179c2b9db974e0e", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/ffd1982a59d80fa7e14a92ee1179c2b9db974e0e", "committedDate": "2020-11-13T22:38:50Z", "message": "fix logic in StreamSinkNode"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d23a66a408a121e3480a9e3bddba02f0ad187510", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/d23a66a408a121e3480a9e3bddba02f0ad187510", "committedDate": "2020-11-13T22:38:50Z", "message": "minor renamings in SPA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18ad4aac7af9efdedabdf3c3bfd5d89d9ab56b7d", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/18ad4aac7af9efdedabdf3c3bfd5d89d9ab56b7d", "committedDate": "2020-11-13T22:38:50Z", "message": "add integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "949e59d1fe677decaa695aa3a35e80f363170b35", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/949e59d1fe677decaa695aa3a35e80f363170b35", "committedDate": "2020-11-13T22:38:50Z", "message": "break loop if not making progress, add unit test for SPA"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10c0fd9ca268dad72dfecfe16e3e8040b49dee17", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/10c0fd9ca268dad72dfecfe16e3e8040b49dee17", "committedDate": "2020-11-13T22:38:51Z", "message": "ClassFanOutComplexity violation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "527e219ea0fafec5a7a96f92f98894ac2d3519c4", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/527e219ea0fafec5a7a96f92f98894ac2d3519c4", "committedDate": "2020-11-14T00:10:14Z", "message": "review suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab43672abe356c775fa2d5c6a7bde4cb0c00b0a3", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/ab43672abe356c775fa2d5c6a7bde4cb0c00b0a3", "committedDate": "2020-11-14T00:12:25Z", "message": "fix condition"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ab43672abe356c775fa2d5c6a7bde4cb0c00b0a3", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/ab43672abe356c775fa2d5c6a7bde4cb0c00b0a3", "committedDate": "2020-11-14T00:12:25Z", "message": "fix condition"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2712, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}