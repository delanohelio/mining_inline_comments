{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczODAwODA1", "number": 9223, "title": "KAFKA-10438 Lazy initialization of record header to reduce memory usa\u2026", "bodyText": "issue: https://issues.apache.org/jira/browse/KAFKA-10438\nThere is no checks for header key so instantiating key (bytes to string) is unnecessary. The risk of this PR is the exception of converting byte[] to string can't be discovered quickly (the conversion error is rare so it should be fine).\nJMH RESULT\n\nops: +12%\nThe optimization of memory usage is very small as the cost of creating extra ByteBuffer is almost same to byte array copy (used to construct String). Using large key results in better improvement but I don't think large key is common case.\n\nBEFORE\nBenchmark                                                                     (bufferSupplierStr)  (bytes)  (compressionType)  (headerKeySize)  (maxBatchSize)  (maxHeaderSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score      Error   Units\nRecordBatchIterationBenchmark.measureValidation                                        NO_CACHING   RANDOM               NONE               10             200                5           1000                 2  thrpt   15  2035938.174 \u00b1 1653.566   ops/s\nRecordBatchIterationBenchmark.measureValidation:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM               NONE               10             200                5           1000                 2  thrpt   15     2040.000 \u00b1    0.001    B/op\n\nBenchmark                                                                     (bufferSupplierStr)  (bytes)  (compressionType)  (headerKeySize)  (maxBatchSize)  (maxHeaderSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score      Error   Units\nRecordBatchIterationBenchmark.measureValidation                                        NO_CACHING   RANDOM               NONE               30             200                5           1000                 2  thrpt   15  1979193.376 \u00b1 1239.286   ops/s\nRecordBatchIterationBenchmark.measureValidation:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM               NONE               30             200                5           1000                 2  thrpt   15     2120.000 \u00b1    0.001    B/op\n\nAFTER\nBenchmark                                                                     (bufferSupplierStr)  (bytes)  (compressionType)  (headerKeySize)  (maxBatchSize)  (maxHeaderSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score      Error   Units\nRecordBatchIterationBenchmark.measureValidation                                        NO_CACHING   RANDOM               NONE               10             200                5           1000                 2  thrpt   15  2289115.973 \u00b1 2661.856   ops/s\nRecordBatchIterationBenchmark.measureValidation:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM               NONE               10             200                5           1000                 2  thrpt   15     2032.000 \u00b1    0.001    B/op\n\nBenchmark                                                                     (bufferSupplierStr)  (bytes)  (compressionType)  (headerKeySize)  (maxBatchSize)  (maxHeaderSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score     Error   Units\nRecordBatchIterationBenchmark.measureValidation                                        NO_CACHING   RANDOM               NONE               30             200                5           1000                 2  thrpt   15  2222625.706 \u00b1 908.358   ops/s\nRecordBatchIterationBenchmark.measureValidation:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM               NONE               30             200                5           1000                 2  thrpt   15     2040.000 \u00b1   0.001    B/op\n\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-08-26T10:09:35Z", "url": "https://github.com/apache/kafka/pull/9223", "merged": true, "mergeCommit": {"oid": "4b6d8da9fd5bbc7e90c062c4d2131437183349a0"}, "closed": true, "closedAt": "2020-09-21T15:03:49Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDwSBQAFqTQ3ODE1NTMwMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLEsH4gFqTQ5MjcwNTE5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTU1MzAy", "url": "https://github.com/apache/kafka/pull/9223#pullrequestreview-478155302", "createdAt": "2020-08-29T21:14:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQyMToxNDowOFrOHJd_zQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQyMToxNDowOFrOHJd_zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY5MDcwMQ==", "bodyText": "Since we parse the header lazily now, what is causing this exception?", "url": "https://github.com/apache/kafka/pull/9223#discussion_r479690701", "createdAt": "2020-08-29T21:14:08Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/common/record/DefaultRecordTest.java", "diffHunk": "@@ -270,7 +270,7 @@ public void testInvalidNumHeadersPartial() throws IOException {\n         DefaultRecord.readPartiallyFrom(inputStream, skipArray, 0L, 0L, RecordBatch.NO_SEQUENCE, null);\n     }\n \n-    @Test(expected = StringIndexOutOfBoundsException.class)\n+    @Test(expected = InvalidRecordException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1MDcyNTYz", "url": "https://github.com/apache/kafka/pull/9223#pullrequestreview-485072563", "createdAt": "2020-09-09T14:31:59Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMTo1OVrOHPKUFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDozMTo1OVrOHPKUFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY1OTY3MA==", "bodyText": "Why did we change this?", "url": "https://github.com/apache/kafka/pull/9223#discussion_r485659670", "createdAt": "2020-09-09T14:31:59Z", "author": {"login": "ijuma"}, "path": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/RecordBatchIterationBenchmark.java", "diffHunk": "@@ -142,15 +169,15 @@ private ByteBuffer createBatch(int batchSize) {\n                     break;\n             }\n \n-            builder.append(0, null, value);\n+            builder.append(0, null, value, headers);\n         }\n         return builder.build().buffer();\n     }\n \n     @Benchmark\n     public void measureValidation(Blackhole bh) throws IOException {\n         MemoryRecords records = MemoryRecords.readableRecords(singleBatchBuffer.duplicate());\n-        LogValidator.validateMessagesAndAssignOffsetsCompressed(records, new TopicPartition(\"a\", 0),\n+        LogValidator.validateMessagesAndAssignOffsets(records, new TopicPartition(\"a\", 0),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNTk2MTk4", "url": "https://github.com/apache/kafka/pull/9223#pullrequestreview-490596198", "createdAt": "2020-09-17T13:30:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozMDoxOVrOHTiR6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzozMDoxOVrOHTiR6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI0NjYzNA==", "bodyText": "Maybe this should be BaseRecordBatchBenchmark?", "url": "https://github.com/apache/kafka/pull/9223#discussion_r490246634", "createdAt": "2020-09-17T13:30:19Z", "author": {"login": "ijuma"}, "path": "jmh-benchmarks/src/main/java/org/apache/kafka/jmh/record/RecordBatchBenchmarkSuite.java", "diffHunk": "@@ -0,0 +1,149 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.jmh.record;\n+\n+import kafka.server.BrokerTopicStats;\n+import org.apache.kafka.common.header.Header;\n+import org.apache.kafka.common.record.AbstractRecords;\n+import org.apache.kafka.common.record.BufferSupplier;\n+import org.apache.kafka.common.record.CompressionType;\n+import org.apache.kafka.common.record.MemoryRecords;\n+import org.apache.kafka.common.record.MemoryRecordsBuilder;\n+import org.apache.kafka.common.record.Record;\n+import org.apache.kafka.common.record.RecordBatch;\n+import org.apache.kafka.common.record.TimestampType;\n+import org.openjdk.jmh.annotations.Param;\n+import org.openjdk.jmh.annotations.Scope;\n+import org.openjdk.jmh.annotations.Setup;\n+import org.openjdk.jmh.annotations.State;\n+\n+import java.nio.ByteBuffer;\n+import java.util.Arrays;\n+import java.util.Random;\n+import java.util.stream.IntStream;\n+\n+import static org.apache.kafka.common.record.RecordBatch.CURRENT_MAGIC_VALUE;\n+\n+@State(Scope.Benchmark)\n+public abstract class RecordBatchBenchmarkSuite {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e56301321c5e6b6079cdda05518ade1c62d4c492", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/e56301321c5e6b6079cdda05518ade1c62d4c492", "committedDate": "2020-09-18T15:44:01Z", "message": "KAFKA-10438 Lazy initialization of record header to reduce memory usage in validating records"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac00bdd53aacd420d46a66b8fe03d87ef06b273b", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/ac00bdd53aacd420d46a66b8fe03d87ef06b273b", "committedDate": "2020-09-18T15:44:01Z", "message": "add header to RecordBatchIterationBenchmark"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd9a985e55dd65d4390bf944289e54cdc12867ee", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/dd9a985e55dd65d4390bf944289e54cdc12867ee", "committedDate": "2020-09-18T15:44:01Z", "message": "separate uncompressed jmh"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c603a454cafd0a48074ed14623c817a88751a9ea", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/c603a454cafd0a48074ed14623c817a88751a9ea", "committedDate": "2020-09-18T15:45:32Z", "message": "rename RecordBatchBenchmarkSuite to BaseRecordBatchBenchmark"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c603a454cafd0a48074ed14623c817a88751a9ea", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/c603a454cafd0a48074ed14623c817a88751a9ea", "committedDate": "2020-09-18T15:45:32Z", "message": "rename RecordBatchBenchmarkSuite to BaseRecordBatchBenchmark"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNzA1MTk4", "url": "https://github.com/apache/kafka/pull/9223#pullrequestreview-492705198", "createdAt": "2020-09-21T14:58:13Z", "commit": {"oid": "c603a454cafd0a48074ed14623c817a88751a9ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 824, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}