{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMjgwOTA2", "number": 9765, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowODo0N1rOFHSpoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NjoyNlrOFHTr5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMTg5OTIwOnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODowODo0N1rOIItSkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzowOToxNFrOIN5vwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTU1NQ==", "bodyText": "It's hard to tell if this actually reproduces the issue or not due to the heavy mocking required. Is there a more direct way to reproduce? Maybe in RebalanceSourceConnectorsIntegrationTest or similar? Even if the IT ends up being flaky, having that repro would boost confidence in this fix.", "url": "https://github.com/apache/kafka/pull/9765#discussion_r546001555", "createdAt": "2020-12-18T18:08:47Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java", "diffHunk": "@@ -566,6 +566,112 @@ public Boolean answer() throws Throwable {\n         PowerMock.verifyAll();\n     }\n \n+    @Test\n+    public void testRevoke() throws TimeoutException {\n+        revokeAndReassign(false);\n+    }\n+\n+    @Test\n+    public void testIncompleteRebalanceBeforeRevoke() throws TimeoutException {\n+        revokeAndReassign(true);\n+    }\n+\n+    public void revokeAndReassign(boolean incompleteRebalance) throws TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1375f01da6ce979307f7ba52362b453166c2d39e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0ODUxMw==", "bodyText": "Yeah, this test was a bit difficult to wrap my head around at first, but I think it's the best way to target this section of the code. I don't believe that adding a new flakey test is prudent, and making a non-flakey test with less mocks might end up to be harder to follow than this mocked test.\nI think what would be a good test to add would be a variant which replaced this contrived reading-config-offset-topic-failure with a genuine WakeupException thrown from the end of tick, which I believe is the true root cause of this issue most of the time. This is not easy with the boilerplate in this test as-is, and requires a little bit of refactoring to set up the rebalance during that block.", "url": "https://github.com/apache/kafka/pull/9765#discussion_r551448513", "createdAt": "2021-01-04T17:09:14Z", "author": {"login": "gharris1727"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/distributed/DistributedHerderTest.java", "diffHunk": "@@ -566,6 +566,112 @@ public Boolean answer() throws Throwable {\n         PowerMock.verifyAll();\n     }\n \n+    @Test\n+    public void testRevoke() throws TimeoutException {\n+        revokeAndReassign(false);\n+    }\n+\n+    @Test\n+    public void testIncompleteRebalanceBeforeRevoke() throws TimeoutException {\n+        revokeAndReassign(true);\n+    }\n+\n+    public void revokeAndReassign(boolean incompleteRebalance) throws TimeoutException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAwMTU1NQ=="}, "originalCommit": {"oid": "1375f01da6ce979307f7ba52362b453166c2d39e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzMjA2ODg0OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NjoyNlrOIIu5Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQxODo1NjoyNlrOIIu5Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjAyNzg2Mg==", "bodyText": "Maybe add a comment explaining why the additional check is needed.", "url": "https://github.com/apache/kafka/pull/9765#discussion_r546027862", "createdAt": "2020-12-18T18:56:26Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/distributed/DistributedHerder.java", "diffHunk": "@@ -1740,7 +1741,7 @@ public void onRevoked(String leader, Collection<String> connectors, Collection<C\n             // Note that since we don't reset the assignment, we don't revoke leadership here. During a rebalance,\n             // it is still important to have a leader that can write configs, offsets, etc.\n \n-            if (rebalanceResolved) {\n+            if (rebalanceResolved || currentProtocolVersion >= CONNECT_PROTOCOL_V1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1375f01da6ce979307f7ba52362b453166c2d39e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3525, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}