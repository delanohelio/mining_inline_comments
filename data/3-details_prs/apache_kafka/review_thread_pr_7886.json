{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NjExMTU4", "number": 7886, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxOTowMTozN1rODZAm_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTo0NDo0NFrODZuEgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NTUwOTc0OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxOTowMTozN1rOFfLwyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOVQwMjozMjo0NFrOFfM21Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0Mjg5MQ==", "bodyText": "What do you think about adding this field only if the group instance id is not null?", "url": "https://github.com/apache/kafka/pull/7886#discussion_r368242891", "createdAt": "2020-01-18T19:01:37Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -249,20 +249,21 @@ object ConsumerGroupCommand extends Logging {\n       for ((groupId, (state, assignments)) <- members) {\n         if (shouldPrintMemberState(groupId, state, size(assignments))) {\n           // find proper columns width\n-          var (maxGroupLen, maxConsumerIdLen, maxHostLen, maxClientIdLen) = (15, 15, 15, 15)\n+          var (maxGroupLen, maxConsumerIdLen, maxGroupInstanceIdLen, maxHostLen, maxClientIdLen) = (15, 15, 17, 15, 15)\n           assignments match {\n             case None => // do nothing\n             case Some(memberAssignments) =>\n               memberAssignments.foreach { memberAssignment =>\n                 maxGroupLen = Math.max(maxGroupLen, memberAssignment.group.length)\n                 maxConsumerIdLen = Math.max(maxConsumerIdLen, memberAssignment.consumerId.length)\n+                maxGroupInstanceIdLen =  Math.max(maxGroupInstanceIdLen, memberAssignment.groupInstanceId.length)\n                 maxHostLen = Math.max(maxHostLen, memberAssignment.host.length)\n                 maxClientIdLen = Math.max(maxClientIdLen, memberAssignment.clientId.length)\n               }\n           }\n \n-          print(s\"\\n%${-maxGroupLen}s %${-maxConsumerIdLen}s %${-maxHostLen}s %${-maxClientIdLen}s %-15s \"\n-            .format(\"GROUP\", \"CONSUMER-ID\", \"HOST\", \"CLIENT-ID\", \"#PARTITIONS\"))\n+          print(s\"\\n%${-maxGroupLen}s %${-maxConsumerIdLen}s %${-maxGroupInstanceIdLen}s %${-maxHostLen}s %${-maxClientIdLen}s %-15s \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI2MDgyMQ==", "bodyText": "I originally thought about that, but then I realize that group instance id in the same consumer-group may have both null and not null, so I give up.\nI now also think it's better to remove this field if all the group instance id is null, I will change it.", "url": "https://github.com/apache/kafka/pull/7886#discussion_r368260821", "createdAt": "2020-01-19T02:32:44Z", "author": {"login": "dengziming"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -249,20 +249,21 @@ object ConsumerGroupCommand extends Logging {\n       for ((groupId, (state, assignments)) <- members) {\n         if (shouldPrintMemberState(groupId, state, size(assignments))) {\n           // find proper columns width\n-          var (maxGroupLen, maxConsumerIdLen, maxHostLen, maxClientIdLen) = (15, 15, 15, 15)\n+          var (maxGroupLen, maxConsumerIdLen, maxGroupInstanceIdLen, maxHostLen, maxClientIdLen) = (15, 15, 17, 15, 15)\n           assignments match {\n             case None => // do nothing\n             case Some(memberAssignments) =>\n               memberAssignments.foreach { memberAssignment =>\n                 maxGroupLen = Math.max(maxGroupLen, memberAssignment.group.length)\n                 maxConsumerIdLen = Math.max(maxConsumerIdLen, memberAssignment.consumerId.length)\n+                maxGroupInstanceIdLen =  Math.max(maxGroupInstanceIdLen, memberAssignment.groupInstanceId.length)\n                 maxHostLen = Math.max(maxHostLen, memberAssignment.host.length)\n                 maxClientIdLen = Math.max(maxClientIdLen, memberAssignment.clientId.length)\n               }\n           }\n \n-          print(s\"\\n%${-maxGroupLen}s %${-maxConsumerIdLen}s %${-maxHostLen}s %${-maxClientIdLen}s %-15s \"\n-            .format(\"GROUP\", \"CONSUMER-ID\", \"HOST\", \"CLIENT-ID\", \"#PARTITIONS\"))\n+          print(s\"\\n%${-maxGroupLen}s %${-maxConsumerIdLen}s %${-maxGroupInstanceIdLen}s %${-maxHostLen}s %${-maxClientIdLen}s %-15s \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0Mjg5MQ=="}, "originalCommit": null, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4Mjk1ODEwOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNTo0NDo0NFrOFgRGKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwNzo1MzozM1rOFkDnrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3ODg1OQ==", "bodyText": "nit: it's a little surprising to see nullGroupInstanceId and groupInstanceId.length in the same expression. I'd expect that to be an NPE if I didn't see how it is called. I think I'd suggest inverting this. Instead of nullGroupInstanceId, how about includeGroupInstanceId? Then this becomes\nincludeGroupInstanceId = includeGroupInstanceId || memberAssignment.groupInstanceId.length > 0", "url": "https://github.com/apache/kafka/pull/7886#discussion_r369378859", "createdAt": "2020-01-22T05:44:44Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -249,20 +249,27 @@ object ConsumerGroupCommand extends Logging {\n       for ((groupId, (state, assignments)) <- members) {\n         if (shouldPrintMemberState(groupId, state, size(assignments))) {\n           // find proper columns width\n-          var (maxGroupLen, maxConsumerIdLen, maxHostLen, maxClientIdLen) = (15, 15, 15, 15)\n+          var (maxGroupLen, maxConsumerIdLen, maxGroupInstanceIdLen, maxHostLen, maxClientIdLen, nullGroupInstanceId) = (15, 15, 17, 15, 15, true)\n           assignments match {\n             case None => // do nothing\n             case Some(memberAssignments) =>\n               memberAssignments.foreach { memberAssignment =>\n                 maxGroupLen = Math.max(maxGroupLen, memberAssignment.group.length)\n                 maxConsumerIdLen = Math.max(maxConsumerIdLen, memberAssignment.consumerId.length)\n+                maxGroupInstanceIdLen =  Math.max(maxGroupInstanceIdLen, memberAssignment.groupInstanceId.length)\n                 maxHostLen = Math.max(maxHostLen, memberAssignment.host.length)\n                 maxClientIdLen = Math.max(maxClientIdLen, memberAssignment.clientId.length)\n+                nullGroupInstanceId = nullGroupInstanceId && memberAssignment.groupInstanceId.length == 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzM1MjM2NA==", "bodyText": "Hi @hachikuji , thank you for your suggestion, it's very useful to me, done!", "url": "https://github.com/apache/kafka/pull/7886#discussion_r373352364", "createdAt": "2020-01-31T07:53:33Z", "author": {"login": "dengziming"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -249,20 +249,27 @@ object ConsumerGroupCommand extends Logging {\n       for ((groupId, (state, assignments)) <- members) {\n         if (shouldPrintMemberState(groupId, state, size(assignments))) {\n           // find proper columns width\n-          var (maxGroupLen, maxConsumerIdLen, maxHostLen, maxClientIdLen) = (15, 15, 15, 15)\n+          var (maxGroupLen, maxConsumerIdLen, maxGroupInstanceIdLen, maxHostLen, maxClientIdLen, nullGroupInstanceId) = (15, 15, 17, 15, 15, true)\n           assignments match {\n             case None => // do nothing\n             case Some(memberAssignments) =>\n               memberAssignments.foreach { memberAssignment =>\n                 maxGroupLen = Math.max(maxGroupLen, memberAssignment.group.length)\n                 maxConsumerIdLen = Math.max(maxConsumerIdLen, memberAssignment.consumerId.length)\n+                maxGroupInstanceIdLen =  Math.max(maxGroupInstanceIdLen, memberAssignment.groupInstanceId.length)\n                 maxHostLen = Math.max(maxHostLen, memberAssignment.host.length)\n                 maxClientIdLen = Math.max(maxClientIdLen, memberAssignment.clientId.length)\n+                nullGroupInstanceId = nullGroupInstanceId && memberAssignment.groupInstanceId.length == 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTM3ODg1OQ=="}, "originalCommit": null, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4442, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}