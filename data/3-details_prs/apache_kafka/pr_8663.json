{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3MDgzODA3", "number": 8663, "title": "KAFKA-9985: Sink connector may exhaust broker when writing in DLQ", "bodyText": "When a sink connector is configured with a DLQ and its topic is the same (or matches) as the topic in which the connector reads, the broker and/or connector might be exhausted in case the record send to the topic is invalid.\nBased on the broker/connect config, the connector might fail throwing a RecordTooLargeException previous to exhaust the broker/connector.\nThis patch also adds a test case for this.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-05-13T02:58:53Z", "url": "https://github.com/apache/kafka/pull/8663", "merged": true, "mergeCommit": {"oid": "45fb78edd42057f3fc8c28892b8948c3f36cf017"}, "closed": true, "closedAt": "2020-06-11T00:58:01Z", "author": {"login": "mmolimar"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgv1wngH2gAyNDE3MDgzODA3Ojk4MDZiZDhhNmZmOTQ2ODkyMjNmMmJmNzYxZDFjYzkyNDU1YzM2NTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqBfB9AFqTQyODQ3NDE4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9806bd8a6ff94689223f2bf761d1cc92455c3659", "author": {"user": {"login": "mmolimar", "name": "Mario Molina"}}, "url": "https://github.com/apache/kafka/commit/9806bd8a6ff94689223f2bf761d1cc92455c3659", "committedDate": "2020-05-13T02:55:55Z", "message": "Validate topic name against DQL topic in Sink connector config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMTIxMTIx", "url": "https://github.com/apache/kafka/pull/8663#pullrequestreview-411121121", "createdAt": "2020-05-13T16:57:16Z", "commit": {"oid": "9806bd8a6ff94689223f2bf761d1cc92455c3659"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjo1NzoxNlrOGU68Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzowNDowNVrOGU7NEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5MDQxOQ==", "bodyText": "I think we can use a utility method provided by the ConfigDef class here:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String[] topics = props.get(SinkTask.TOPICS_CONFIG).split(\",\");\n          \n          \n            \n                            Arrays.setAll(topics, i -> topics[i].trim());\n          \n          \n            \n                            if (Arrays.asList(topics).contains(dlqTopic)) {\n          \n          \n            \n                            List<String> topics = (List<String>) ConfigDef.parseType(SinkTask.TOPICS_CONFIG, props.get(SinkTask.TOPICS_CONFIG), ConfigDef.Type.LIST);\n          \n          \n            \n                            if (topics.contains(dlqTopic)) {", "url": "https://github.com/apache/kafka/pull/8663#discussion_r424590419", "createdAt": "2020-05-13T16:57:16Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java", "diffHunk": "@@ -96,6 +99,26 @@ public static void validate(Map<String, String> props) {\n             throw new ConfigException(\"Must configure one of \" +\n                 SinkTask.TOPICS_CONFIG + \" or \" + SinkTask.TOPICS_REGEX_CONFIG);\n         }\n+\n+        if (hasDlqTopicConfig) {\n+            String dlqTopic = props.get(DLQ_TOPIC_NAME_CONFIG).trim();\n+            if (hasTopicsConfig) {\n+                String[] topics = props.get(SinkTask.TOPICS_CONFIG).split(\",\");\n+                Arrays.setAll(topics, i -> topics[i].trim());\n+                if (Arrays.asList(topics).contains(dlqTopic)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9806bd8a6ff94689223f2bf761d1cc92455c3659"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU5NDcwNQ==", "bodyText": "nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                throw new ConfigException(DLQ_TOPIC_NAME_CONFIG + \" has a topic name which matches in \" +\n          \n          \n            \n                                    SinkTask.TOPICS_REGEX_CONFIG);\n          \n          \n            \n                                throw new ConfigException(DLQ_TOPIC_NAME_CONFIG + \" has a topic name which matches the regex in \" +\n          \n          \n            \n                                    SinkTask.TOPICS_REGEX_CONFIG);", "url": "https://github.com/apache/kafka/pull/8663#discussion_r424594705", "createdAt": "2020-05-13T17:04:05Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java", "diffHunk": "@@ -96,6 +99,26 @@ public static void validate(Map<String, String> props) {\n             throw new ConfigException(\"Must configure one of \" +\n                 SinkTask.TOPICS_CONFIG + \" or \" + SinkTask.TOPICS_REGEX_CONFIG);\n         }\n+\n+        if (hasDlqTopicConfig) {\n+            String dlqTopic = props.get(DLQ_TOPIC_NAME_CONFIG).trim();\n+            if (hasTopicsConfig) {\n+                String[] topics = props.get(SinkTask.TOPICS_CONFIG).split(\",\");\n+                Arrays.setAll(topics, i -> topics[i].trim());\n+                if (Arrays.asList(topics).contains(dlqTopic)) {\n+                    throw new ConfigException(DLQ_TOPIC_NAME_CONFIG + \" has a topic name which is already in \" +\n+                        SinkTask.TOPICS_CONFIG);\n+                }\n+            }\n+            if (hasTopicsRegexConfig) {\n+                String topicsRegexStr = props.get(SinkTask.TOPICS_REGEX_CONFIG);\n+                Pattern pattern = Pattern.compile(topicsRegexStr);\n+                if (pattern.matcher(dlqTopic).matches()) {\n+                    throw new ConfigException(DLQ_TOPIC_NAME_CONFIG + \" has a topic name which matches in \" +\n+                        SinkTask.TOPICS_REGEX_CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9806bd8a6ff94689223f2bf761d1cc92455c3659"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b", "author": {"user": {"login": "mmolimar", "name": "Mario Molina"}}, "url": "https://github.com/apache/kafka/commit/d9f55aed36097b74b0953b180e8d4dec882cd04b", "committedDate": "2020-05-13T18:30:40Z", "message": "Adding parseTopicsList method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjAzOTQ5", "url": "https://github.com/apache/kafka/pull/8663#pullrequestreview-411203949", "createdAt": "2020-05-13T18:46:40Z", "commit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0Njo0MVrOGU-9nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0Njo0MVrOGU-9nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NjI4NA==", "bodyText": "Is this necessary? Doesn't seem like it actually breaks anything if the user specifies duplicate topics. And if we do want to enforce constraints about non-empty topics and/or no duplicated topics, we can do that with a Validator for that property when it's defined in the ConfigDef.", "url": "https://github.com/apache/kafka/pull/8663#discussion_r424656284", "createdAt": "2020-05-13T18:46:41Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java", "diffHunk": "@@ -108,6 +132,20 @@ public static boolean hasTopicsRegexConfig(Map<String, String> props) {\n         return topicsRegexStr != null && !topicsRegexStr.trim().isEmpty();\n     }\n \n+    public static boolean hasDlqTopicConfig(Map<String, String> props) {\n+        String dqlTopicStr = props.get(DLQ_TOPIC_NAME_CONFIG);\n+        return dqlTopicStr != null && !dqlTopicStr.trim().isEmpty();\n+    }\n+\n+    public static List<String> parseTopicsList(Map<String, String> props) {\n+        List<String> topics = (List<String>) ConfigDef.parseType(TOPICS_CONFIG, props.get(TOPICS_CONFIG), Type.LIST);\n+        return topics\n+                .stream()\n+                .filter(topic -> !topic.isEmpty())\n+                .distinct()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExMjE4NjY2", "url": "https://github.com/apache/kafka/pull/8663#pullrequestreview-411218666", "createdAt": "2020-05-13T19:06:49Z", "commit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDExNDUyMTM4", "url": "https://github.com/apache/kafka/pull/8663#pullrequestreview-411452138", "createdAt": "2020-05-14T04:11:29Z", "commit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDoxMToyOVrOGVLaXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNDoxMToyOVrOGVLaXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDg2MDI1NA==", "bodyText": "Should we log the topic name for this exception? For example, has a topic name (xxx) which", "url": "https://github.com/apache/kafka/pull/8663#discussion_r424860254", "createdAt": "2020-05-14T04:11:29Z", "author": {"login": "chia7712"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/SinkConnectorConfig.java", "diffHunk": "@@ -96,6 +101,25 @@ public static void validate(Map<String, String> props) {\n             throw new ConfigException(\"Must configure one of \" +\n                 SinkTask.TOPICS_CONFIG + \" or \" + SinkTask.TOPICS_REGEX_CONFIG);\n         }\n+\n+        if (hasDlqTopicConfig) {\n+            String dlqTopic = props.get(DLQ_TOPIC_NAME_CONFIG).trim();\n+            if (hasTopicsConfig) {\n+                List<String> topics = parseTopicsList(props);\n+                if (topics.contains(dlqTopic)) {\n+                    throw new ConfigException(DLQ_TOPIC_NAME_CONFIG + \" has a topic name which is already in \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9f55aed36097b74b0953b180e8d4dec882cd04b"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d990ca8c20525437a0cbb2bdd7f4316b1bfc43b", "author": {"user": {"login": "mmolimar", "name": "Mario Molina"}}, "url": "https://github.com/apache/kafka/commit/5d990ca8c20525437a0cbb2bdd7f4316b1bfc43b", "committedDate": "2020-05-22T19:13:48Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-9985"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "199f47a1e292c0d0ca9e9b4d6a752e0844737cde", "author": {"user": {"login": "mmolimar", "name": "Mario Molina"}}, "url": "https://github.com/apache/kafka/commit/199f47a1e292c0d0ca9e9b4d6a752e0844737cde", "committedDate": "2020-05-22T19:48:31Z", "message": "Suppress warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93ca5b5aae5f4ba816aaa4956e9914e8e9ae61ef", "author": {"user": {"login": "rhauch", "name": "Randall Hauch"}}, "url": "https://github.com/apache/kafka/commit/93ca5b5aae5f4ba816aaa4956e9914e8e9ae61ef", "committedDate": "2020-06-10T22:32:36Z", "message": "KAFKA-9985: Minor changes to improve readability of exception messages"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NDc0MTg3", "url": "https://github.com/apache/kafka/pull/8663#pullrequestreview-428474187", "createdAt": "2020-06-10T22:34:42Z", "commit": {"oid": "93ca5b5aae5f4ba816aaa4956e9914e8e9ae61ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 982, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}