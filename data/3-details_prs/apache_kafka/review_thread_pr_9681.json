{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxODQ0Nzky", "number": 9681, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNDozNFrOFATAmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNTowNFrOFATBpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODU1NzY5OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNDozNFrOH-gyWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNDozNFrOH-gyWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxMDkzOQ==", "bodyText": "Last time we forgot to move this line into the try-catch-clause.", "url": "https://github.com/apache/kafka/pull/9681#discussion_r535310939", "createdAt": "2020-12-03T15:04:34Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java", "diffHunk": "@@ -136,13 +136,13 @@ public void shouldQueryOnlyActivePartitionStoresByDefault() throws Exception {\n \n             final boolean kafkaStreams1IsActive = (keyQueryMetadata.activeHost().port() % 2) == 1;\n \n-            // Assert that only active is able to query for a key by default\n-            assertThat(kafkaStreams1IsActive ? store1.get(key) : store2.get(key), is(notNullValue()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d5ba426ecb604974cb035ba57f5dcf7e1c009e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1ODU2MDM2OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNTowNFrOH-gz5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNTowNTowNFrOH-gz5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMxMTMzMw==", "bodyText": "I thought this is easier readable.", "url": "https://github.com/apache/kafka/pull/9681#discussion_r535311333", "createdAt": "2020-12-03T15:05:04Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StoreQueryIntegrationTest.java", "diffHunk": "@@ -136,13 +136,13 @@ public void shouldQueryOnlyActivePartitionStoresByDefault() throws Exception {\n \n             final boolean kafkaStreams1IsActive = (keyQueryMetadata.activeHost().port() % 2) == 1;\n \n-            // Assert that only active is able to query for a key by default\n-            assertThat(kafkaStreams1IsActive ? store1.get(key) : store2.get(key), is(notNullValue()));\n             try {\n                 if (kafkaStreams1IsActive) {\n+                    assertThat(store1.get(key), is(notNullValue()));\n                     assertThat(store2.get(key), is(nullValue()));\n                 } else {\n                     assertThat(store1.get(key), is(nullValue()));\n+                    assertThat(store2.get(key), is(notNullValue()));\n                 }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64d5ba426ecb604974cb035ba57f5dcf7e1c009e"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3659, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}