{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU4MjM0ODMx", "number": 9096, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0NTo0MlrOET1paA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzo1ODo0NFrOEUJJyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5MjM3MzUyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQyMDo0NTo0MlrOG5zMzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQwMjoyNDoxOFrOG55-yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDg3OA==", "bodyText": "nit: I don't think we need steps here, which makes it hard to squeeze in more comments later.", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463260878", "createdAt": "2020-07-30T20:45:42Z", "author": {"login": "abbccdda"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "diffHunk": "@@ -163,6 +183,7 @@ private boolean allSubscriptionsEqual(Set<String> allTopics,\n         Map<String, List<TopicPartition>> assignment = new HashMap<>(\n             consumerToOwnedPartitions.keySet().stream().collect(Collectors.toMap(c -> c, c -> new ArrayList<>(minQuota))));\n \n+        // step 1: Reassign as many previously owned partitions as possible", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "741df127fc0795878814fcc0244e590c724acea6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzM3MTk3OQ==", "bodyText": "Updated. Thanks @abbccdda .", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463371979", "createdAt": "2020-07-31T02:24:18Z", "author": {"login": "showuon"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "diffHunk": "@@ -163,6 +183,7 @@ private boolean allSubscriptionsEqual(Set<String> allTopics,\n         Map<String, List<TopicPartition>> assignment = new HashMap<>(\n             consumerToOwnedPartitions.keySet().stream().collect(Collectors.toMap(c -> c, c -> new ArrayList<>(minQuota))));\n \n+        // step 1: Reassign as many previously owned partitions as possible", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzI2MDg3OA=="}, "originalCommit": {"oid": "741df127fc0795878814fcc0244e590c724acea6"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTU2OTM2OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzo1ODo0NFrOG6RLyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNzo1ODo0NFrOG6RLyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc1MjEzOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * 1. Reassign as many previously owned partitions as possible\n          \n          \n            \n                 * 1. Reassign as many previously owned partitions as possible, up to the maxQuota", "url": "https://github.com/apache/kafka/pull/9096#discussion_r463752139", "createdAt": "2020-07-31T17:58:44Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractStickyAssignor.java", "diffHunk": "@@ -144,15 +144,35 @@ private boolean allSubscriptionsEqual(Set<String> allTopics,\n         return true;\n     }\n \n+\n+    /**\n+     * This constrainedAssign optimizes the assignment algorithm when all consumers were subscribed to same set of topics.\n+     * The method includes the following steps:\n+     *\n+     * 1. Reassign as many previously owned partitions as possible", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "005d64c45a4f42b14f3e3f66d7fdfd1d886732fe"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2036, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}