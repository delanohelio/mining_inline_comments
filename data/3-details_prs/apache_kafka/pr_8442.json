{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTYzNzUx", "number": 8442, "title": "KAFKA-9830: Implement AutoCloseable in ErrorReporter and subclasses", "bodyText": "The DeadLetterQueueReporter has a KafkaProducer that it must close to clean up resources\nCurrently, the producer and its threads are leaked every time a task is stopped\nResponsibility for cleaning up ErrorReporters is transitively assigned to the\nProcessingContext, RetryWithToleranceOperator, and WorkerSinkTask/WorkerSinkTask classes\nOne new unit test in ErrorReporterTest asserts that the producer is closed by the dlq reporter\n\nSigned-off-by: Greg Harris gregh@confluent.io\nMore detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-08T00:17:59Z", "url": "https://github.com/apache/kafka/pull/8442", "merged": true, "mergeCommit": {"oid": "0ee19e87d2b1e5e94323ca8bcac5089bf4b3f1af"}, "closed": true, "closedAt": "2020-04-30T00:07:02Z", "author": {"login": "gharris1727"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVchVxgH2gAyNDAwNTYzNzUxOmExMGNkOWNjNDQ5MTU2NDhjMDlmYmRhMzIyYzM4NjE2MTgyMTk1M2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcchiH3AFqTQwMzExOTkxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a10cd9cc44915648c09fbda322c386161821953b", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/a10cd9cc44915648c09fbda322c386161821953b", "committedDate": "2020-04-08T00:12:15Z", "message": "KAFKA-9830: Implement AutoCloseable in ErrorReporter and subclasses\n\n* The DeadLetterQueueReporter has a KafkaProducer that it must close to clean up resources\n* Currently, the producer and it's threads are leaked every time a task is stopped\n* Responsibility for cleaning up ErrorReporters is transitively assigned to the\n    ProcessingContext, RetryWithToleranceOperator, and WorkerSinkTask/WorkerSinkTask classes\n* One new unit test in ErrorReporterTest asserts that the producer is closed by the dlq reporter\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTc3NjUy", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389577652", "createdAt": "2020-04-08T00:25:27Z", "commit": {"oid": "a10cd9cc44915648c09fbda322c386161821953b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoyNToyOFrOGCaz4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDoyNToyOFrOGCaz4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4OTYwMA==", "bodyText": "want to add this as a default implementation in the ErrorReporter interface?", "url": "https://github.com/apache/kafka/pull/8442#discussion_r405189600", "createdAt": "2020-04-08T00:25:28Z", "author": {"login": "wicknicks"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/LogReporter.java", "diffHunk": "@@ -69,4 +69,7 @@ String message(ProcessingContext context) {\n                 context.toString(connConfig.includeRecordDetailsInErrorLog()));\n     }\n \n+    @Override\n+    public void close() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10cd9cc44915648c09fbda322c386161821953b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60bd1d43655ff7127f4e7c18ee884d53dfc7605c", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/60bd1d43655ff7127f4e7c18ee884d53dfc7605c", "committedDate": "2020-04-08T00:38:39Z", "message": "Make no-op close a default method in ErrorReporter for backwards-compatibility\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTgyMDcy", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389582072", "createdAt": "2020-04-08T00:40:24Z", "commit": {"oid": "a10cd9cc44915648c09fbda322c386161821953b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDo0MDoyNFrOGCbERg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDo0MDoyNFrOGCbERg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE5Mzc5OA==", "bodyText": "If I read this correctly, the guarantee here is that if a DLQ reporter is closed, its internal Kafka producer will also be closed.\nDo you think it would also make sense to add a test to ensure that when a WorkerSinkTask and WorkerSourceTask  are shut down, and/or a RetryWithToleranceOperator is closed, the underlying ErrorReporter instances are closed as well?", "url": "https://github.com/apache/kafka/pull/8442#discussion_r405193798", "createdAt": "2020-04-08T00:40:24Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/errors/ErrorReporterTest.java", "diffHunk": "@@ -146,6 +146,20 @@ public void testReportDLQTwice() {\n         PowerMock.verifyAll();\n     }\n \n+    @Test\n+    public void testCloseDLQ() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a10cd9cc44915648c09fbda322c386161821953b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/9973816a0e52b7bc0f4d619c1f8e326a5807bdfc", "committedDate": "2020-04-08T01:16:16Z", "message": "Add test that WorkerSourceTask/WorkerSinkTask close ErrorReporters on task stop.\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NTk0NDM1", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389594435", "createdAt": "2020-04-08T01:23:20Z", "commit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NjE0MTU5", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389614159", "createdAt": "2020-04-08T02:31:07Z", "commit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NzczMDQ4", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389773048", "createdAt": "2020-04-08T08:48:22Z", "commit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0ODoyMlrOGClO4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo0ODoyMlrOGClO4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2MDM1Mg==", "bodyText": "The exception caused by reporter will break this loop. Should we keep the exception and then throw it after all reporters are closed?", "url": "https://github.com/apache/kafka/pull/8442#discussion_r405360352", "createdAt": "2020-04-08T08:48:22Z", "author": {"login": "chia7712"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/ProcessingContext.java", "diffHunk": "@@ -216,4 +216,10 @@ public void reporters(Collection<ErrorReporter> reporters) {\n         this.reporters = reporters;\n     }\n \n+    @Override\n+    public void close() throws Exception {\n+        for (ErrorReporter reporter : reporters) {\n+            reporter.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5Nzc0Nzk5", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-389774799", "createdAt": "2020-04-08T08:50:40Z", "commit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo1MDo0MFrOGClUsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwODo1MDo0MFrOGClUsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM2MTg0Mw==", "bodyText": "Is Exception in method signature necessary? the method signature of ErrorReporter#close don't include checked exception.", "url": "https://github.com/apache/kafka/pull/8442#discussion_r405361843", "createdAt": "2020-04-08T08:50:40Z", "author": {"login": "chia7712"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/ProcessingContext.java", "diffHunk": "@@ -216,4 +216,10 @@ public void reporters(Collection<ErrorReporter> reporters) {\n         this.reporters = reporters;\n     }\n \n+    @Override\n+    public void close() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9973816a0e52b7bc0f4d619c1f8e326a5807bdfc"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5173af7c0bab92a5aca8ec593eb5e7dcdeef9c75", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/5173af7c0bab92a5aca8ec593eb5e7dcdeef9c75", "committedDate": "2020-04-08T16:19:06Z", "message": "Remove throws from new close methods where no checked exception is thrown.\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/a23c4566c147c671c51ef4a8774afc15cb39b022", "committedDate": "2020-04-08T16:45:57Z", "message": "Handle exceptions from closing each reporter to collect as suppressed exceptions\n\nAlso add a test to verify that multiple reporters are closed despite exceptions\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzYyNjM3", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-402362637", "createdAt": "2020-04-29T04:50:00Z", "commit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDo1MDowMFrOGNvozg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNTozNzoxMVrOGNwWYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2NTE2Ng==", "bodyText": "This is common enough that there's a util for that and is used extensively:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        retryWithToleranceOperator.close();\n          \n          \n            \n                    } catch (Throwable t) {\n          \n          \n            \n                        log.warn(\"Could not close retry operator\", t);\n          \n          \n            \n                    }\n          \n          \n            \n                    Utils.closeQuietly(retryWithToleranceOperator, \"retry operator\");", "url": "https://github.com/apache/kafka/pull/8442#discussion_r417065166", "createdAt": "2020-04-29T04:50:00Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSourceTask.java", "diffHunk": "@@ -170,6 +170,11 @@ protected void close() {\n         } catch (Throwable t) {\n             log.warn(\"Could not close transformation chain\", t);\n         }\n+        try {\n+            retryWithToleranceOperator.close();\n+        } catch (Throwable t) {\n+            log.warn(\"Could not close retry operator\", t);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA2NTMxNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try {\n          \n          \n            \n                        retryWithToleranceOperator.close();\n          \n          \n            \n                    } catch (Throwable t) {\n          \n          \n            \n                        log.warn(\"Could not close retry operator\", t);\n          \n          \n            \n                    }\n          \n          \n            \n                    Utils.closeQuietly(retryWithToleranceOperator, \"retry operator\");", "url": "https://github.com/apache/kafka/pull/8442#discussion_r417065315", "createdAt": "2020-04-29T04:50:36Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerSinkTask.java", "diffHunk": "@@ -175,6 +175,11 @@ protected void close() {\n         } catch (Throwable t) {\n             log.warn(\"Could not close transformation chain\", t);\n         }\n+        try {\n+            retryWithToleranceOperator.close();\n+        } catch (Throwable t) {\n+            log.warn(\"Could not close retry operator\", t);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NDU3Mg==", "bodyText": "Regardless how high performance we want this code to be, as a matter of principle we shouldn't create an exception (and pay the cost of filling its stacktrace during instantiation) if we don't need to throw it.\nI sketched a modification just with a +1 line, but feel free to adjust to your style of preference.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    ConnectException e = new ConnectException(\"Failed to close all reporters\");\n          \n          \n            \n                    for (ErrorReporter reporter : reporters) {\n          \n          \n            \n                        try {\n          \n          \n            \n                            reporter.close();\n          \n          \n            \n                        } catch (Throwable t) {\n          \n          \n            \n                            e.addSuppressed(t);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    if (e.getSuppressed().length > 0) {\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }\n          \n          \n            \n                    ConnectException e = null;\n          \n          \n            \n                    for (ErrorReporter reporter : reporters) {\n          \n          \n            \n                        try {\n          \n          \n            \n                            reporter.close();\n          \n          \n            \n                        } catch (Throwable t) {\n          \n          \n            \n                            e = e == null ? new ConnectException(\"Failed to close all reporters\") : e;\n          \n          \n            \n                            e.addSuppressed(t);\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    if (e != null) {\n          \n          \n            \n                        throw e;\n          \n          \n            \n                    }", "url": "https://github.com/apache/kafka/pull/8442#discussion_r417074572", "createdAt": "2020-04-29T05:28:43Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/ProcessingContext.java", "diffHunk": "@@ -216,4 +217,18 @@ public void reporters(Collection<ErrorReporter> reporters) {\n         this.reporters = reporters;\n     }\n \n+    @Override\n+    public void close() {\n+        ConnectException e = new ConnectException(\"Failed to close all reporters\");\n+        for (ErrorReporter reporter : reporters) {\n+            try {\n+                reporter.close();\n+            } catch (Throwable t) {\n+                e.addSuppressed(t);\n+            }\n+        }\n+        if (e.getSuppressed().length > 0) {\n+            throw e;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NjgzMw==", "bodyText": "Here's a nice blog re: exception costs and when they occur:\nhttps://shipilev.net/blog/2014/exceptional-performance", "url": "https://github.com/apache/kafka/pull/8442#discussion_r417076833", "createdAt": "2020-04-29T05:37:11Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/errors/ProcessingContext.java", "diffHunk": "@@ -216,4 +217,18 @@ public void reporters(Collection<ErrorReporter> reporters) {\n         this.reporters = reporters;\n     }\n \n+    @Override\n+    public void close() {\n+        ConnectException e = new ConnectException(\"Failed to close all reporters\");\n+        for (ErrorReporter reporter : reporters) {\n+            try {\n+                reporter.close();\n+            } catch (Throwable t) {\n+                e.addSuppressed(t);\n+            }\n+        }\n+        if (e.getSuppressed().length > 0) {\n+            throw e;\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3NDU3Mg=="}, "originalCommit": {"oid": "a23c4566c147c671c51ef4a8774afc15cb39b022"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a101cd71114aee1d239d7cd61543c2f3e91fe893", "author": {"user": {"login": "gharris1727", "name": "Greg Harris"}}, "url": "https://github.com/apache/kafka/commit/a101cd71114aee1d239d7cd61543c2f3e91fe893", "committedDate": "2020-04-29T18:25:17Z", "message": "Use Utils.closeQuietly and defer creation of exception in loop\n\nSigned-off-by: Greg Harris <gregh@confluent.io>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAzMTE5OTEw", "url": "https://github.com/apache/kafka/pull/8442#pullrequestreview-403119910", "createdAt": "2020-04-30T00:00:06Z", "commit": {"oid": "a101cd71114aee1d239d7cd61543c2f3e91fe893"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1406, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}