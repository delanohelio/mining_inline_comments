{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQzOTI3OTA5", "number": 9777, "title": "KAFKA-7940: wait until we've got the expected partition size", "bodyText": "The test will create 99 partitions in a topic, and expect we can get the partition info after 15 seconds. If we can't get the partition info within 15 secs, we'll get the error:\norg.scalatest.exceptions.TestFailedException: Partition [group1_largeTopic,69] metadata not propagated after 15000 ms\n\nObviously, 15 secs is not enough to complete the 99 partitions creation under slow system. So, fix it by explicitly wait until we've got the expected partition size before retrieving each partition info.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-22T07:25:38Z", "url": "https://github.com/apache/kafka/pull/9777", "merged": true, "mergeCommit": {"oid": "7feb55731ea9a86f81e8b1ed2b8dc44dba546dfe"}, "closed": true, "closedAt": "2021-02-01T18:16:29Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdokz5-gH2gAyNTQzOTI3OTA5OjE1OTkwZDc5MThlMGUwZTg2YTJjZTU4OTZkMjY4YTgwN2Q4Yzg4OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd17MvOAFqTU4MDYzMjI5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "15990d7918e0e0e86a2ce5896d268a807d8c8898", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/15990d7918e0e0e86a2ce5896d268a807d8c8898", "committedDate": "2020-12-22T06:47:29Z", "message": "KAFKA-7940: wait until we've got the expected partition size before get partition leader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac9affb7a2a0400a3b1441cb1d4e927cccc373e0", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/ac9affb7a2a0400a3b1441cb1d4e927cccc373e0", "committedDate": "2021-01-27T06:09:54Z", "message": "KAFKA-7940: remove uecessary Class name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/f7b3f528ba538d4e70369409fe26dfae16760f3e", "committedDate": "2021-01-27T06:14:19Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-7940"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5NjQzNTUw", "url": "https://github.com/apache/kafka/pull/9777#pullrequestreview-579643550", "createdAt": "2021-01-29T21:51:22Z", "commit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMTo1MToyMlrOIc12rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMTo1MjowNlrOIc13rQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzExMzM4OQ==", "bodyText": "Can we use server.metadataCache?", "url": "https://github.com/apache/kafka/pull/9777#discussion_r567113389", "createdAt": "2021-01-29T21:51:22Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/utils/TestUtils.scala", "diffHunk": "@@ -885,6 +891,24 @@ object TestUtils extends Logging {\n     ), \"Timed out waiting for broker metadata to propagate to all servers\", timeout)\n   }\n \n+  /**\n+   * Wait until the expected number of partitions is in the metadata cache in each broker.\n+   *\n+   * @param servers The list of servers that the metadata should reach to\n+   * @param topic The topic name\n+   * @param expectedNumPartitions The expected number of partitions\n+   */\n+  def waitUntilMetadataIsPropagatedWithExpectedSize(servers: Seq[KafkaServer], topic: String, expectedNumPartitions: Int): Unit = {\n+    waitUntilTrue(\n+      () => servers.forall { server =>\n+        server.dataPlaneRequestProcessor.metadataCache.numPartitions(topic) match {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzExMzY0NQ==", "bodyText": "What do you think about more concise names?\nwaitUntilMetadataIsPropagatedWithExpectedSize -> waitForAllPartitionMetadata\nwaitUntilMetadataIsPropagated -> waitForPartitionMetadata\nI wonder if this would be more useful if we return the partition metadata: Map[TopicPartition, UpdateMetadataPartitionState. Then we could probably skip the calls to waitUntilMetadataIsPropagated and waitUntilLeaderIsElectedOrChanged above.", "url": "https://github.com/apache/kafka/pull/9777#discussion_r567113645", "createdAt": "2021-01-29T21:52:06Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/utils/TestUtils.scala", "diffHunk": "@@ -885,6 +891,24 @@ object TestUtils extends Logging {\n     ), \"Timed out waiting for broker metadata to propagate to all servers\", timeout)\n   }\n \n+  /**\n+   * Wait until the expected number of partitions is in the metadata cache in each broker.\n+   *\n+   * @param servers The list of servers that the metadata should reach to\n+   * @param topic The topic name\n+   * @param expectedNumPartitions The expected number of partitions\n+   */\n+  def waitUntilMetadataIsPropagatedWithExpectedSize(servers: Seq[KafkaServer], topic: String, expectedNumPartitions: Int): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc5NjQ4NzQw", "url": "https://github.com/apache/kafka/pull/9777#pullrequestreview-579648740", "createdAt": "2021-01-29T22:00:51Z", "commit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMjowMDo1MVrOIc2GVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQyMjowMDo1MVrOIc2GVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzExNzM5Nw==", "bodyText": "As mentioned in the other comment, this is probably good enough. The extra validations below seem like overkill.", "url": "https://github.com/apache/kafka/pull/9777#discussion_r567117397", "createdAt": "2021-01-29T22:00:51Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/utils/TestUtils.scala", "diffHunk": "@@ -349,10 +349,13 @@ object TestUtils extends Logging {\n       !hasSessionExpirationException},\n       s\"Can't create topic $topic\")\n \n+    // wait until we've got the expected partition size\n+    waitUntilMetadataIsPropagatedWithExpectedSize(servers, topic, numPartitions)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f7b3f528ba538d4e70369409fe26dfae16760f3e"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73d9cfc120cc92a25babb62eccd61ac73619dee9", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/73d9cfc120cc92a25babb62eccd61ac73619dee9", "committedDate": "2021-02-01T08:54:37Z", "message": "KAFKA-7940: remve unneeded wait and rename methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a5aaabe9d6d29e9876ba7bd94c40633041b296e", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/0a5aaabe9d6d29e9876ba7bd94c40633041b296e", "committedDate": "2021-02-01T08:48:16Z", "message": "KAFKA-7940: remve unneeded wait and rename methods"}, "afterCommit": {"oid": "73d9cfc120cc92a25babb62eccd61ac73619dee9", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/73d9cfc120cc92a25babb62eccd61ac73619dee9", "committedDate": "2021-02-01T08:54:37Z", "message": "KAFKA-7940: remve unneeded wait and rename methods"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwMzY3NTMy", "url": "https://github.com/apache/kafka/pull/9777#pullrequestreview-580367532", "createdAt": "2021-02-01T13:48:01Z", "commit": {"oid": "73d9cfc120cc92a25babb62eccd61ac73619dee9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxMzo0ODowMVrOIdiCnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wMVQxMzo0ODowMVrOIdiCnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NzgzNzM0Mw==", "bodyText": "Don't replace them with waitForAllPartitionsMetadata because I'm afraid it'll break the original testing purposes. And same as other places.", "url": "https://github.com/apache/kafka/pull/9777#discussion_r567837343", "createdAt": "2021-02-01T13:48:01Z", "author": {"login": "showuon"}, "path": "core/src/test/scala/unit/kafka/admin/AddPartitionsTest.scala", "diffHunk": "@@ -137,12 +137,12 @@ class AddPartitionsTest extends BaseRequestTest {\n     adminZkClient.addPartitions(topic3, topic3Assignment, adminZkClient.getBrokerMetadatas(), 7)\n \n     // read metadata from a broker and verify the new topic partitions exist\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 1)\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 2)\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 3)\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 4)\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 5)\n-    TestUtils.waitUntilMetadataIsPropagated(servers, topic3, 6)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 1)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 2)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 3)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 4)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 5)\n+    TestUtils.waitForPartitionMetadata(servers, topic3, 6)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73d9cfc120cc92a25babb62eccd61ac73619dee9"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgwNjMyMjk0", "url": "https://github.com/apache/kafka/pull/9777#pullrequestreview-580632294", "createdAt": "2021-02-01T18:13:32Z", "commit": {"oid": "73d9cfc120cc92a25babb62eccd61ac73619dee9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2366, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}