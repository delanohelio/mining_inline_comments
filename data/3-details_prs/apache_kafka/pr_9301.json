{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MDI2MDQ4", "number": 9301, "title": "KAFKA-10482: Fix flaky testDynamicListenerConnectionCreationRateQuota", "bodyText": "The flaky test is because we have race condition in testDynamicListenerConnectionCreationRateQuota. We set the initialConnectionCount with the global shared connectionCount in the verifyConnectionRate method, but we have multi-thread test cases, which might get the wrong initialConnectionCount. And later the waiting close will never complete since the expected initialConnectionCount is wrong.\nEx:\n\nThe error message is:\nkafka.network.DynamicConnectionQuotaTest > testDynamicListenerConnectionCreationRateQuota FAILED\njava.util.concurrent.ExecutionException: org.scalatest.exceptions.TestFailedException: Connections not closed (initial = 2 current = 1)\nat java.base/java.util.concurrent.FutureTask.report(FutureTask.java:122)\nat java.base/java.util.concurrent.FutureTask.get(FutureTask.java:205)\nat kafka.network.DynamicConnectionQuotaTest.testDynamicListenerConnectionCreationRateQuota(DynamicConnectionQuotaTest.scala:219)\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-18T02:18:31Z", "url": "https://github.com/apache/kafka/pull/9301", "merged": true, "mergeCommit": {"oid": "e9251a11dc60122893c7bcfb2be36c3cd0521902"}, "closed": true, "closedAt": "2020-09-23T11:34:47Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJ78ElAH2gAyNDg5MDI2MDQ4OmQ4Njg2ODM5YWVlOWFmYTQyODQ3MjQxZjdmODE1NDU0MjUwZmMzYWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLq9U6AFqTQ5NDU2MjUxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8686839aee9afa42847241f7f815454250fc3ae", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/d8686839aee9afa42847241f7f815454250fc3ae", "committedDate": "2020-09-18T02:12:34Z", "message": "KAFKA-10482: fix initialConnectionCount variable race condition issue"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMjM4ODQ1", "url": "https://github.com/apache/kafka/pull/9301#pullrequestreview-491238845", "createdAt": "2020-09-18T08:04:40Z", "commit": {"oid": "d8686839aee9afa42847241f7f815454250fc3ae"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/0b7a0b3e3d4df26812fa554e8ec7344a72453505", "committedDate": "2020-09-18T11:46:05Z", "message": "KAFKA-10482: address reviewer's comments to extract the waitConnectionClose method out"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/0b7a0b3e3d4df26812fa554e8ec7344a72453505", "committedDate": "2020-09-18T11:46:05Z", "message": "KAFKA-10482: address reviewer's comments to extract the waitConnectionClose method out"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxNDA4Njg0", "url": "https://github.com/apache/kafka/pull/9301#pullrequestreview-491408684", "createdAt": "2020-09-18T12:12:47Z", "commit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjoxMjo0N1rOHUKkyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMjoxNDowNFrOHUKnAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkwNjgyNg==", "bodyText": "Shouldn't we put this after waiting for the futures (next line)?", "url": "https://github.com/apache/kafka/pull/9301#discussion_r490906826", "createdAt": "2020-09-18T12:12:47Z", "author": {"login": "dajac"}, "path": "core/src/test/scala/integration/kafka/network/DynamicConnectionQuotaTest.scala", "diffHunk": "@@ -202,6 +208,7 @@ class DynamicConnectionQuotaTest extends BaseRequestTest {\n     val futures = newListenerNames.map { listener =>\n       executor.submit((() => verifyConnectionRate(3, listenerConnRateLimit, listener)): Runnable)\n     }\n+    waitForConnectionCloseToInitState(initialConnectionCount)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkwNjkxMQ==", "bodyText": "Same comment as above.", "url": "https://github.com/apache/kafka/pull/9301#discussion_r490906911", "createdAt": "2020-09-18T12:12:58Z", "author": {"login": "dajac"}, "path": "core/src/test/scala/integration/kafka/network/DynamicConnectionQuotaTest.scala", "diffHunk": "@@ -215,6 +222,7 @@ class DynamicConnectionQuotaTest extends BaseRequestTest {\n       verifyConnectionRate(18, newPlaintextRateLimit, \"PLAINTEXT\")): Runnable)\n     val externalFuture = executor.submit((() =>\n       verifyConnectionRate(5, listenerConnRateLimit, \"EXTERNAL\")): Runnable)\n+    waitForConnectionCloseToInitState(initialConnectionCount)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDkwNzM5NA==", "bodyText": "How about calling this waitForConnectionCount and renaming initialConnectionCount to expectedConnectionCount? That makes the helper more generic.", "url": "https://github.com/apache/kafka/pull/9301#discussion_r490907394", "createdAt": "2020-09-18T12:14:04Z", "author": {"login": "dajac"}, "path": "core/src/test/scala/integration/kafka/network/DynamicConnectionQuotaTest.scala", "diffHunk": "@@ -317,6 +325,12 @@ class DynamicConnectionQuotaTest extends BaseRequestTest {\n     }\n   }\n \n+  private def waitForConnectionCloseToInitState(initialConnectionCount: Int): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0b7a0b3e3d4df26812fa554e8ec7344a72453505"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22d240571de45b3ea3573c3428a6c17efe862092", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/22d240571de45b3ea3573c3428a6c17efe862092", "committedDate": "2020-09-18T13:11:30Z", "message": "KAFKA-10482: address reviewer's comment to refactor the codes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzMjA3NzQ5", "url": "https://github.com/apache/kafka/pull/9301#pullrequestreview-493207749", "createdAt": "2020-09-22T07:56:01Z", "commit": {"oid": "22d240571de45b3ea3573c3428a6c17efe862092"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo1NjowMlrOHVuQ9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNzo1ODowNVrOHVuVwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0MDE1MA==", "bodyText": "This comment is irrelevant now. I would just say that this is the expected connection count after each run.", "url": "https://github.com/apache/kafka/pull/9301#discussion_r492540150", "createdAt": "2020-09-22T07:56:02Z", "author": {"login": "dajac"}, "path": "core/src/test/scala/integration/kafka/network/DynamicConnectionQuotaTest.scala", "diffHunk": "@@ -179,17 +179,23 @@ class DynamicConnectionQuotaTest extends BaseRequestTest {\n     reconfigureServers(props, perBrokerConfig = true, (KafkaConfig.ListenersProp, newListeners))\n     waitForListener(\"EXTERNAL\")\n \n+    // we need to set the initialConnectionCount earlier and pass to verifyConnectionRate method\n+    // so that the race condition won't occur for the following multi-thread test cases", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d240571de45b3ea3573c3428a6c17efe862092"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjU0MTM3OA==", "bodyText": "nit: I would remove this comment. I think that the method is self-explanatory now.", "url": "https://github.com/apache/kafka/pull/9301#discussion_r492541378", "createdAt": "2020-09-22T07:58:05Z", "author": {"login": "dajac"}, "path": "core/src/test/scala/integration/kafka/network/DynamicConnectionQuotaTest.scala", "diffHunk": "@@ -317,6 +325,12 @@ class DynamicConnectionQuotaTest extends BaseRequestTest {\n     }\n   }\n \n+  // make sure the connection count state is the same as the expectedConnectionCount", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22d240571de45b3ea3573c3428a6c17efe862092"}, "originalPosition": 44}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e2714c6b4d0b73c36893c365998380cfaf724f6", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/8e2714c6b4d0b73c36893c365998380cfaf724f6", "committedDate": "2020-09-22T08:18:51Z", "message": "KAFKA-10482: address reviewer's comment to rephrase the comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0Mzk2MTk3", "url": "https://github.com/apache/kafka/pull/9301#pullrequestreview-494396197", "createdAt": "2020-09-23T07:58:22Z", "commit": {"oid": "8e2714c6b4d0b73c36893c365998380cfaf724f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NTYyNTEw", "url": "https://github.com/apache/kafka/pull/9301#pullrequestreview-494562510", "createdAt": "2020-09-23T11:33:24Z", "commit": {"oid": "8e2714c6b4d0b73c36893c365998380cfaf724f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 644, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}