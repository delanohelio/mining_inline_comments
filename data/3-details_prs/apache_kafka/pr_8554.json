{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTc5MjY2", "number": 8554, "title": "KAFKA-9919: Add logging to KafkaBasedLog::readToLogEnd", "bodyText": "Jira ticket\nJust some simple logging additions that should make life easier when the worker can't get caught up to the end of an internal topic.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-25T22:24:30Z", "url": "https://github.com/apache/kafka/pull/8554", "merged": true, "mergeCommit": {"oid": "cc02dd6e3b937c9a84142e6fea40bee9ac484ab7"}, "closed": true, "closedAt": "2020-04-30T03:42:14Z", "author": {"login": "C0urante"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcbNrKggH2gAyNDA4OTc5MjY2OmY1YzAxNDA5MjI1OTg3YmQwNWQxMDViZmEzYTM0ZDE2YWRiY2U1NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccR2sIgFqTQwMjM3NjQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/f5c01409225987bd05d105bfa3a34d16adbce576", "committedDate": "2020-04-25T22:17:57Z", "message": "KAFKA-9919: Add logging to KafkaBasedLog::readToLogEnd"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDQyMDk4", "url": "https://github.com/apache/kafka/pull/8554#pullrequestreview-400442098", "createdAt": "2020-04-25T23:59:54Z", "commit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNzYxNzI2", "url": "https://github.com/apache/kafka/pull/8554#pullrequestreview-400761726", "createdAt": "2020-04-27T09:05:05Z", "commit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzUxNDA5", "url": "https://github.com/apache/kafka/pull/8554#pullrequestreview-402351409", "createdAt": "2020-04-29T04:00:27Z", "commit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowMDoyOFrOGNu-IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDoxMzoyNVrOGNvJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NDI0MQ==", "bodyText": "unboxing will happen in the comparison in the if branch anyways, so probably better to do it early declaring the type long here.", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417054241", "createdAt": "2020-04-29T04:00:28Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\n          \n          \n            \n                                    \"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                    endOffset,\n          \n          \n            \n                                    topicPartition,\n          \n          \n            \n                                    lastConsumedOffset);\n          \n          \n            \n                                log.trace(\"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                        endOffset, topicPartition, lastConsumedOffset);\n          \n      \n    \n    \n  \n\nnit: multiline calls don't need to be on their own line in AK and tab is equal to 4 spaces (here we need 2 tabs)", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055199", "createdAt": "2020-04-29T04:04:42Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n                     it.remove();\n-                else {\n+                } else {\n+                    log.trace(\n+                        \"Behind end offset {} for {}; last-consumed offset is {}\",\n+                        endOffset,\n+                        topicPartition,\n+                        lastConsumedOffset);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTg4NQ==", "bodyText": "given that the previous messages say \"Reading to ...\" maybe it would make sense to say:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n          \n          \n            \n                                log.trace(\"Read to end offset {} for {}\", endOffset, topicPartition);", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055885", "createdAt": "2020-04-29T04:07:37Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NzEyNg==", "bodyText": "Similar to the above, seeing a message that says read might be easier to read in context than consumed.\nHow about:\nBehind end offset {} for {}; last-read offset is {}", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417057126", "createdAt": "2020-04-29T04:13:25Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n                     it.remove();\n-                else {\n+                } else {\n+                    log.trace(\n+                        \"Behind end offset {} for {}; last-consumed offset is {}\",\n+                        endOffset,\n+                        topicPartition,\n+                        lastConsumedOffset);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ=="}, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a66f1fc87a66add15c77a52fa0a7b02b8ff6df3", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/8a66f1fc87a66add15c77a52fa0a7b02b8ff6df3", "committedDate": "2020-04-29T05:12:29Z", "message": "KAFKA-9919: Apply suggestions from code review\n\nCo-Authored-By: Konstantine Karantasis <konstantine@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36c8e2c976828d7ef5d64bfac81de386b5a9a275", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/36c8e2c976828d7ef5d64bfac81de386b5a9a275", "committedDate": "2020-04-29T05:13:24Z", "message": "KAFKA-9919: Address code review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzc2NDc3", "url": "https://github.com/apache/kafka/pull/8554#pullrequestreview-402376477", "createdAt": "2020-04-29T05:44:05Z", "commit": {"oid": "36c8e2c976828d7ef5d64bfac81de386b5a9a275"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1227, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}