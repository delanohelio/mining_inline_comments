{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTU2MjQ5", "number": 9435, "title": "KAFKA-10606: Disable auto topic creation for fetch-all-topic-metadata request", "bodyText": "There is a bug that causes fetch-all-topic-metadata requests triggering\nauto topic creation. Details are described in KAFKA-10606. This is the\nsimplest way to fix this bug on the broker side.", "createdAt": "2020-10-14T18:18:31Z", "url": "https://github.com/apache/kafka/pull/9435", "merged": true, "mergeCommit": {"oid": "ff88874e0de4aa1ce177330869e0ddf4a4ba2732"}, "closed": true, "closedAt": "2020-12-09T15:31:05Z", "author": {"login": "Lincong"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUoD4pABqjM5MDIyNzQ2MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkbUitgBqjQwODg5MzY1Nzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMzg4MDMw", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-513388030", "createdAt": "2020-10-21T07:39:23Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozOToyM1rOHleSRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozOToyM1rOHleSRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA1NTU1OQ==", "bodyText": "If we pass false to getTopicMetadata, it generates UNKNOWN_TOPIC_OR_PARTITION when the topic is removed, right? If so, does client-side need to handle such error? For example, KafkaAdminClient#listTopics should filter out those \"nonexistent\" topics (https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java#L1717). Otherwise, users want to get all \"existent\" topics but response say a_topic is \"nonexistent\".", "url": "https://github.com/apache/kafka/pull/9435#discussion_r509055559", "createdAt": "2020-10-21T07:39:23Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -1236,9 +1236,19 @@ class KafkaApis(val requestChannel: RequestChannel,\n     val topicMetadata =\n       if (authorizedTopics.isEmpty)\n         Seq.empty[MetadataResponseTopic]\n-      else\n-        getTopicMetadata(metadataRequest.allowAutoTopicCreation, authorizedTopics, request.context.listenerName,\n-          errorUnavailableEndpoints, errorUnavailableListeners)\n+      else {\n+        // KAFKA-10606: If this request is to get metadata for all topics, auto topic creation should not be allowed\n+        // The special handling is necessary on broker side because allowAutoTopicCreation is hard coded to true\n+        // for backward compatibility on client side.\n+        val allowAutoTopicCreation = (!metadataRequest.isAllTopics) && metadataRequest.allowAutoTopicCreation", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTA3NDc5", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-534107479", "createdAt": "2020-11-19T06:12:19Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjoxMjoxOVrOH2OICA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNjoxMjoxOVrOH2OICA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYxNjU4NA==", "bodyText": "Could we do this filter early? For example, how about filtering getTopicMetadata directly? That makes all fixes be in one place and following authorized ops can skip \"unknown partition/topic\" as well.", "url": "https://github.com/apache/kafka/pull/9435#discussion_r526616584", "createdAt": "2020-11-19T06:12:19Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -1333,7 +1343,17 @@ class KafkaApis(val requestChannel: RequestChannel,\n       }\n     }\n \n-    val completeTopicMetadata = topicMetadata ++ unauthorizedForCreateTopicMetadata ++ unauthorizedForDescribeTopicMetadata\n+    val completeTopicMetadata = (if (metadataRequest.isAllTopics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2MzE5MTM3", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-536319137", "createdAt": "2020-11-23T10:00:28Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDowMDoyOFrOH4GUKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMDowMDoyOFrOH4GUKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODU4NTc2OA==", "bodyText": "Could we remove this @Before code? Changing modifier of metadataCache from \"val\" to \"var\" is enough.", "url": "https://github.com/apache/kafka/pull/9435#discussion_r528585768", "createdAt": "2020-11-23T10:00:28Z", "author": {"login": "chia7712"}, "path": "core/src/test/scala/unit/kafka/server/KafkaApisTest.scala", "diffHunk": "@@ -107,6 +108,11 @@ class KafkaApisTest {\n   private val time = new MockTime\n   private val clientId = \"\"\n \n+  @Before\n+  def setUp(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NTk3MzQ2", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-538597346", "createdAt": "2020-11-25T15:12:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToxMjoxMlrOH5329A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxNToxMjoxMlrOH5329A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDQ0NjA2OA==", "bodyText": "Could we not avoid this altogether instead of doing the filter later?", "url": "https://github.com/apache/kafka/pull/9435#discussion_r530446068", "createdAt": "2020-11-25T15:12:12Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -1250,13 +1251,23 @@ class KafkaApis(val requestChannel: RequestChannel,\n             metadataResponseTopic(Errors.INVALID_REPLICATION_FACTOR, topic, true, util.Collections.emptyList())\n           else\n             topicMetadata\n-        } else if (allowAutoTopicCreation && config.autoCreateTopicsEnable) {\n+        } else if (!isFetchAllMetadata && allowAutoTopicCreation && config.autoCreateTopicsEnable) {\n+          // KAFKA-10606: If this request is to get metadata for all topics, auto topic creation should not be allowed\n+          // The special handling is necessary on broker side because allowAutoTopicCreation is hard coded to true\n+          // for backward compatibility on client side.\n           createTopic(topic, config.numPartitions, config.defaultReplicationFactor)\n         } else {\n           metadataResponseTopic(Errors.UNKNOWN_TOPIC_OR_PARTITION, topic, false, util.Collections.emptyList())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "38f9de2566e79a6967e2615f59ededa14e930557", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/38f9de2566e79a6967e2615f59ededa14e930557", "committedDate": "2020-12-01T19:02:55Z", "message": "KAFKA-10606 Change UNKNOWN_TOPIC_OR_PARTITION filtering"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjUwNjg0", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-543650684", "createdAt": "2020-12-03T06:52:13Z", "commit": {"oid": "38f9de2566e79a6967e2615f59ededa14e930557"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjo1MjoxNFrOH9-sRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNjo1MjoxNFrOH9-sRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDc1MjMyNg==", "bodyText": "Is Some/None more readable than List/Nil?", "url": "https://github.com/apache/kafka/pull/9435#discussion_r534752326", "createdAt": "2020-12-03T06:52:14Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -1243,19 +1244,30 @@ class KafkaApis(val requestChannel: RequestChannel,\n       topicResponses\n     } else {\n       val nonExistentTopics = topics.diff(topicResponses.map(_.name).toSet)\n-      val responsesForNonExistentTopics = nonExistentTopics.map { topic =>\n+      val responsesForNonExistentTopics = nonExistentTopics.flatMap { topic =>\n         if (isInternal(topic)) {\n           val topicMetadata = createInternalTopic(topic)\n-          if (topicMetadata.errorCode == Errors.COORDINATOR_NOT_AVAILABLE.code)\n-            metadataResponseTopic(Errors.INVALID_REPLICATION_FACTOR, topic, true, util.Collections.emptyList())\n-          else\n-            topicMetadata\n+          List(\n+            if (topicMetadata.errorCode == Errors.COORDINATOR_NOT_AVAILABLE.code)\n+              metadataResponseTopic(Errors.INVALID_REPLICATION_FACTOR, topic, true, util.Collections.emptyList())\n+            else\n+              topicMetadata\n+          )\n+        } else if (isFetchAllMetadata) {\n+          // KAFKA-10606: If this request is to get metadata for all topics, auto topic creation should not be allowed\n+          // The special handling is necessary on broker side because allowAutoTopicCreation is hard coded to true\n+          // for backward compatibility on client side.\n+          //\n+          // However, in previous versions, UNKNOWN_TOPIC_OR_PARTITION won't happen on fetch all metadata,\n+          // so, for backward-compatibility, we need to skip these not founds during fetch all metadata here.\n+          Nil", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f9de2566e79a6967e2615f59ededa14e930557"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38f9de2566e79a6967e2615f59ededa14e930557", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/38f9de2566e79a6967e2615f59ededa14e930557", "committedDate": "2020-12-01T19:02:55Z", "message": "KAFKA-10606 Change UNKNOWN_TOPIC_OR_PARTITION filtering"}, "afterCommit": {"oid": "779f6f3274d4fdf38179ab87939bb3c8b71ba82e", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/779f6f3274d4fdf38179ab87939bb3c8b71ba82e", "committedDate": "2020-12-03T09:43:36Z", "message": "KAFKA-10606 Fix styling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MDYwMTc0", "url": "https://github.com/apache/kafka/pull/9435#pullrequestreview-544060174", "createdAt": "2020-12-03T15:17:46Z", "commit": {"oid": "779f6f3274d4fdf38179ab87939bb3c8b71ba82e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxNzo0NlrOH-hdcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNToxNzo0NlrOH-hdcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTMyMTk3MQ==", "bodyText": "We don't usually include JIRA references in the code unless it's a very complex issue. I think the comment here could be something like:\n\"A metadata request for all topics should never result in topic auto creation. A topic may be deleted between the creation of topics and topicResponses, so we make sure to always return None for this case.\"", "url": "https://github.com/apache/kafka/pull/9435#discussion_r535321971", "createdAt": "2020-12-03T15:17:46Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -1243,19 +1244,30 @@ class KafkaApis(val requestChannel: RequestChannel,\n       topicResponses\n     } else {\n       val nonExistentTopics = topics.diff(topicResponses.map(_.name).toSet)\n-      val responsesForNonExistentTopics = nonExistentTopics.map { topic =>\n+      val responsesForNonExistentTopics = nonExistentTopics.flatMap { topic =>\n         if (isInternal(topic)) {\n           val topicMetadata = createInternalTopic(topic)\n-          if (topicMetadata.errorCode == Errors.COORDINATOR_NOT_AVAILABLE.code)\n-            metadataResponseTopic(Errors.INVALID_REPLICATION_FACTOR, topic, true, util.Collections.emptyList())\n-          else\n-            topicMetadata\n+          Some(\n+            if (topicMetadata.errorCode == Errors.COORDINATOR_NOT_AVAILABLE.code)\n+              metadataResponseTopic(Errors.INVALID_REPLICATION_FACTOR, topic, true, util.Collections.emptyList())\n+            else\n+              topicMetadata\n+          )\n+        } else if (isFetchAllMetadata) {\n+          // KAFKA-10606: If this request is to get metadata for all topics, auto topic creation should not be allowed\n+          // The special handling is necessary on broker side because allowAutoTopicCreation is hard coded to true\n+          // for backward compatibility on client side.\n+          //\n+          // However, in previous versions, UNKNOWN_TOPIC_OR_PARTITION won't happen on fetch all metadata,\n+          // so, for backward-compatibility, we need to skip these not founds during fetch all metadata here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "779f6f3274d4fdf38179ab87939bb3c8b71ba82e"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63d7cd6e3757641a0d613979a9a0808b414f2acf", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/63d7cd6e3757641a0d613979a9a0808b414f2acf", "committedDate": "2020-12-03T18:42:52Z", "message": "KAFKA-10606 Update comments"}, "afterCommit": {"oid": "b6b6713db60cee8d779eee6e1ee2936e6d05e27a", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/b6b6713db60cee8d779eee6e1ee2936e6d05e27a", "committedDate": "2020-12-06T10:14:37Z", "message": "KAFKA-10606 Update comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b6b6713db60cee8d779eee6e1ee2936e6d05e27a", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/b6b6713db60cee8d779eee6e1ee2936e6d05e27a", "committedDate": "2020-12-06T10:14:37Z", "message": "KAFKA-10606 Update comments"}, "afterCommit": {"oid": "6778e69a3547a50437ff99a48a4eee490856ec49", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/6778e69a3547a50437ff99a48a4eee490856ec49", "committedDate": "2020-12-08T07:12:34Z", "message": "KAFKA-10606 Update comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06ca7b07da658215b0dd20ce66bde31772de36fe", "author": {"user": {"login": "Lincong", "name": "Lincong Li"}}, "url": "https://github.com/apache/kafka/commit/06ca7b07da658215b0dd20ce66bde31772de36fe", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Disable auto topic creation for fetch-all-topic-metadata request\n\nThere is a bug that causes fetch-all-topic-metadata request triggering\nauto topic creation. Details are described in KAFKA-10606. This is the\nsimplest way to fix this bug on the broker side."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e16b036c3fca20f6080b93676f89685e6661b680", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/e16b036c3fca20f6080b93676f89685e6661b680", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Add unit test and more comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f66e0660e8d0ff6dc36a6c90b3f4a523c0e1de3", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/1f66e0660e8d0ff6dc36a6c90b3f4a523c0e1de3", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Filter out UNKNOWN_TOPIC_OR_PARTITION in fetch all metadata response"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e01660e05dedc8ffdb8360862f8c4252077bfa9d", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/e01660e05dedc8ffdb8360862f8c4252077bfa9d", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Fix build error in Scala 2.12"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f59039d4f9ebd1ef1d860638d2fcddf6430b0424", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/f59039d4f9ebd1ef1d860638d2fcddf6430b0424", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Move UNKNOWN_TOPIC_OR_PARTITION filtering to getTopicMetadata"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa047316c1b13239b296c65a12aff3f69dc2780", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/6aa047316c1b13239b296c65a12aff3f69dc2780", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Change @Before method to constructor setup in KafkaApiTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "61fa5b0f694af01329594b673e0e9278b5b56514", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/61fa5b0f694af01329594b673e0e9278b5b56514", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Change UNKNOWN_TOPIC_OR_PARTITION filtering"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74832766bd1b55da41be3d5c0e424ebbfa6f45db", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/74832766bd1b55da41be3d5c0e424ebbfa6f45db", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Fix styling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19e323e7df90d0268de476c87db6819e293902b0", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/19e323e7df90d0268de476c87db6819e293902b0", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Update comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6778e69a3547a50437ff99a48a4eee490856ec49", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/6778e69a3547a50437ff99a48a4eee490856ec49", "committedDate": "2020-12-08T07:12:34Z", "message": "KAFKA-10606 Update comments"}, "afterCommit": {"oid": "19e323e7df90d0268de476c87db6819e293902b0", "author": {"user": {"login": "lmr3796", "name": "Ting-Chou Lin"}}, "url": "https://github.com/apache/kafka/commit/19e323e7df90d0268de476c87db6819e293902b0", "committedDate": "2020-12-09T09:28:10Z", "message": "KAFKA-10606 Update comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 549, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}