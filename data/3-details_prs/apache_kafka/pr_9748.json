{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NTk1NTc5", "number": 9748, "title": "MINOR: Simplify ApiKeys by relying on ApiMessageType", "bodyText": "The naming for ListOffsets was inconsistent, in some places it was ListOffset and in others\nit was ListOffsets. Picked the latter since it was used in metrics and the protocol documentation\nand made it consistent.\nRemoved unused methods in ApiKeys.\nDeleted CommonFields.\nAdded lowestSupportedVersion and highestSupportedVersion to ApiMessageType\nRemoved tests in MessageTest that are no longer relevant.\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-14T15:42:17Z", "url": "https://github.com/apache/kafka/pull/9748", "merged": true, "mergeCommit": {"oid": "782175dfbc4a6694ae9a3970cd92ebd20647bc7e"}, "closed": true, "closedAt": "2020-12-16T14:33:11Z", "author": {"login": "ijuma"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmPyqMAFqTU1MjAyMzcxNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmoxXkgFqTU1MzM4NDQ4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDIzNzE2", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-552023716", "createdAt": "2020-12-15T00:55:24Z", "commit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMDo1NToyNFrOIFzygg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMTowNzoyNVrOIF0E9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk2MjMwNg==", "bodyText": "It is a bit weird that messageType.name and messageType.name() return different string.", "url": "https://github.com/apache/kafka/pull/9748#discussion_r542962306", "createdAt": "2020-12-15T00:55:24Z", "author": {"login": "chia7712"}, "path": "generator/src/main/java/org/apache/kafka/message/ApiMessageTypeGenerator.java", "diffHunk": "@@ -169,7 +169,7 @@ private void generateEnumValues() {\n     }\n \n     private void generateInstanceVariables() {\n-        buffer.printf(\"private final String name;%n\");\n+        buffer.printf(\"public final String name;%n\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk2NjM5Nw==", "bodyText": "Could we fix the comment about \"name\" as it is used to be a part of metrics name (see https://github.com/apache/kafka/blob/trunk/core/src/main/scala/kafka/network/RequestChannel.scala#L239). The origin comment is stale.", "url": "https://github.com/apache/kafka/pull/9748#discussion_r542966397", "createdAt": "2020-12-15T01:05:47Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -343,9 +174,15 @@ public Struct parseResponse(short version, ByteBuffer buffer) {\n                 throw new IllegalStateException(\"Response schema for api \" + name + \" for version \" + i + \" is null\");\n         }\n \n+        this.messageType = messageType;\n+        this.id = id;\n+        this.name = name;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "originalPosition": 369}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk2NzAyOQ==", "bodyText": "this method is never used.", "url": "https://github.com/apache/kafka/pull/9748#discussion_r542967029", "createdAt": "2020-12-15T01:07:25Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/message/MessageTest.java", "diffHunk": "@@ -952,40 +904,6 @@ public String toString() {\n         }\n     }\n \n-    private static void compareTypes(Schema schemaA, Schema schemaB) {\n-        compareTypes(new NamedType(\"schemaA\", schemaA),\n-                     new NamedType(\"schemaB\", schemaB));\n-    }\n-\n-    private static void compareTypes(NamedType typeA, NamedType typeB) {\n-        List<NamedType> listA = flatten(typeA);\n-        List<NamedType> listB = flatten(typeB);\n-        if (listA.size() != listB.size()) {\n-            throw new RuntimeException(\"Can't match up structures: typeA has \" +\n-                Utils.join(listA, \", \") + \", but typeB has \" +\n-                Utils.join(listB, \", \"));\n-        }\n-        for (int i = 0; i < listA.size(); i++) {\n-            NamedType entryA = listA.get(i);\n-            NamedType entryB = listB.get(i);\n-            if (!entryA.hasSimilarType(entryB)) {\n-                throw new RuntimeException(\"Type \" + entryA + \" in schema A \" +\n-                    \"does not match type \" + entryB + \" in schema B.\");\n-            }\n-            if (entryA.type.isNullable() != entryB.type.isNullable()) {\n-                throw new RuntimeException(String.format(\n-                    \"Type %s in Schema A is %s, but type %s in \" +\n-                        \"Schema B is %s\",\n-                    entryA, entryA.type.isNullable() ? \"nullable\" : \"non-nullable\",\n-                    entryB, entryB.type.isNullable() ? \"nullable\" : \"non-nullable\"));\n-            }\n-            if (entryA.type.isArray()) {\n-                compareTypes(new NamedType(entryA.name, entryA.type.arrayElementType().get()),\n-                             new NamedType(entryB.name, entryB.type.arrayElementType().get()));\n-            }\n-        }\n-    }\n-\n     /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "originalPosition": 100}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyMDMzNTQy", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-552033542", "createdAt": "2020-12-15T01:20:41Z", "commit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMToyMDo0MVrOIF0YqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwMToyMzo0OVrOIF0dVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk3MjA3Mw==", "bodyText": "It seems to me this check should be moved to ApiMessageTypeGenerator as it is a generated code from json.", "url": "https://github.com/apache/kafka/pull/9748#discussion_r542972073", "createdAt": "2020-12-15T01:20:41Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -289,49 +129,40 @@ public Struct parseResponse(short version, ByteBuffer buffer) {\n     /** indicates whether the API is enabled for forwarding **/\n     public final boolean forwardable;\n \n-    public final Schema[] requestSchemas;\n-    public final Schema[] responseSchemas;\n     public final boolean requiresDelayedAllocation;\n \n-    ApiKeys(int id, String name, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, false, requestSchemas, responseSchemas);\n-    }\n+    public final ApiMessageType messageType;\n \n-    ApiKeys(int id, String name, boolean clusterAction, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, RecordBatch.MAGIC_VALUE_V0, requestSchemas, responseSchemas);\n+    ApiKeys(ApiMessageType messageType) {\n+        this(messageType, false);\n     }\n \n-    ApiKeys(int id, String name, Schema[] requestSchemas, Schema[] responseSchemas, boolean forwardable) {\n-        this(id, name, false, RecordBatch.MAGIC_VALUE_V0, true, requestSchemas, responseSchemas, forwardable);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction) {\n+        this(messageType, clusterAction, RecordBatch.MAGIC_VALUE_V0, false);\n     }\n \n-    ApiKeys(int id, String name, boolean clusterAction, boolean isEnabled, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, RecordBatch.MAGIC_VALUE_V0, isEnabled, requestSchemas, responseSchemas, false);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction, boolean forwardable) {\n+        this(messageType, clusterAction, RecordBatch.MAGIC_VALUE_V0, forwardable);\n     }\n \n-    ApiKeys(int id, String name, boolean clusterAction, byte minRequiredInterBrokerMagic,\n-            Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, minRequiredInterBrokerMagic, true, requestSchemas, responseSchemas, false);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction, byte minRequiredInterBrokerMagic, boolean forwardable) {\n+        this(messageType, clusterAction, minRequiredInterBrokerMagic, forwardable, true);\n     }\n \n     ApiKeys(\n-        int id,\n-        String name,\n+        ApiMessageType messageType,\n         boolean clusterAction,\n         byte minRequiredInterBrokerMagic,\n-        boolean isEnabled,\n-        Schema[] requestSchemas,\n-        Schema[] responseSchemas,\n-        boolean forwardable\n+        boolean forwardable,\n+        boolean isEnabled\n     ) {\n+        short id = messageType.apiKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "originalPosition": 348}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mjk3MzI3MA==", "bodyText": "ditto", "url": "https://github.com/apache/kafka/pull/9748#discussion_r542973270", "createdAt": "2020-12-15T01:23:49Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -289,49 +129,40 @@ public Struct parseResponse(short version, ByteBuffer buffer) {\n     /** indicates whether the API is enabled for forwarding **/\n     public final boolean forwardable;\n \n-    public final Schema[] requestSchemas;\n-    public final Schema[] responseSchemas;\n     public final boolean requiresDelayedAllocation;\n \n-    ApiKeys(int id, String name, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, false, requestSchemas, responseSchemas);\n-    }\n+    public final ApiMessageType messageType;\n \n-    ApiKeys(int id, String name, boolean clusterAction, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, RecordBatch.MAGIC_VALUE_V0, requestSchemas, responseSchemas);\n+    ApiKeys(ApiMessageType messageType) {\n+        this(messageType, false);\n     }\n \n-    ApiKeys(int id, String name, Schema[] requestSchemas, Schema[] responseSchemas, boolean forwardable) {\n-        this(id, name, false, RecordBatch.MAGIC_VALUE_V0, true, requestSchemas, responseSchemas, forwardable);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction) {\n+        this(messageType, clusterAction, RecordBatch.MAGIC_VALUE_V0, false);\n     }\n \n-    ApiKeys(int id, String name, boolean clusterAction, boolean isEnabled, Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, RecordBatch.MAGIC_VALUE_V0, isEnabled, requestSchemas, responseSchemas, false);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction, boolean forwardable) {\n+        this(messageType, clusterAction, RecordBatch.MAGIC_VALUE_V0, forwardable);\n     }\n \n-    ApiKeys(int id, String name, boolean clusterAction, byte minRequiredInterBrokerMagic,\n-            Schema[] requestSchemas, Schema[] responseSchemas) {\n-        this(id, name, clusterAction, minRequiredInterBrokerMagic, true, requestSchemas, responseSchemas, false);\n+    ApiKeys(ApiMessageType messageType, boolean clusterAction, byte minRequiredInterBrokerMagic, boolean forwardable) {\n+        this(messageType, clusterAction, minRequiredInterBrokerMagic, forwardable, true);\n     }\n \n     ApiKeys(\n-        int id,\n-        String name,\n+        ApiMessageType messageType,\n         boolean clusterAction,\n         byte minRequiredInterBrokerMagic,\n-        boolean isEnabled,\n-        Schema[] requestSchemas,\n-        Schema[] responseSchemas,\n-        boolean forwardable\n+        boolean forwardable,\n+        boolean isEnabled\n     ) {\n+        short id = messageType.apiKey();\n         if (id < 0)\n             throw new IllegalArgumentException(\"id must not be negative, id: \" + id);\n-        this.id = (short) id;\n-        this.name = name;\n-        this.clusterAction = clusterAction;\n-        this.minRequiredInterBrokerMagic = minRequiredInterBrokerMagic;\n-        this.isEnabled = isEnabled;\n \n+        Schema[] requestSchemas = messageType.requestSchemas();\n+        Schema[] responseSchemas = messageType.responseSchemas();\n+        String name = messageType.name;\n         if (requestSchemas.length != responseSchemas.length)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322"}, "originalPosition": 360}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddad298d011353a6d188e53e9bcf00a26eda9496", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/ddad298d011353a6d188e53e9bcf00a26eda9496", "committedDate": "2020-12-15T06:44:23Z", "message": "MINOR: Simplify ApiKeys by relying on ApiMessageType and removing unused methods"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18eec5b2f609f546a55dd06999b64b1176841322", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/18eec5b2f609f546a55dd06999b64b1176841322", "committedDate": "2020-12-14T15:41:28Z", "message": "MINOR: Simplify ApiKeys by relying on ApiMessageType and removing unused methods"}, "afterCommit": {"oid": "ddad298d011353a6d188e53e9bcf00a26eda9496", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/ddad298d011353a6d188e53e9bcf00a26eda9496", "committedDate": "2020-12-15T06:44:23Z", "message": "MINOR: Simplify ApiKeys by relying on ApiMessageType and removing unused methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89ee566e466cd58023c6a4cac64893bfcf38b570", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/89ee566e466cd58023c6a4cac64893bfcf38b570", "committedDate": "2020-12-15T15:03:54Z", "message": "ListOffset -> ListOffsets for consistency with the existing API name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69ae2114341290febe3d3360773b2ac25fd923d3", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/69ae2114341290febe3d3360773b2ac25fd923d3", "committedDate": "2020-12-15T15:07:32Z", "message": "Remove unused method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53b72a8c2099c3a2bd746490b20b0db3628f6737", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/53b72a8c2099c3a2bd746490b20b0db3628f6737", "committedDate": "2020-12-15T15:07:43Z", "message": "Fix OffsetFetchResponseTest failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0378e08bd0c802b50ba8b7857158ee0dfee95b63", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/0378e08bd0c802b50ba8b7857158ee0dfee95b63", "committedDate": "2020-12-15T15:24:26Z", "message": "Don't assume ids are dense in ApiKeys and simplify the code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd7e8ea3d303e33b7af4cac3744680f666876024", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/dd7e8ea3d303e33b7af4cac3744680f666876024", "committedDate": "2020-12-15T15:34:37Z", "message": "Generate `highestSupportedVersion` and `lowestSupportedVersion`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc67beabe5124ac903bd42d085af08da5d0e2d2c", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/dc67beabe5124ac903bd42d085af08da5d0e2d2c", "committedDate": "2020-12-15T15:58:39Z", "message": "Replace checks in ApiKeys with unit tests in ApiMessageTypeTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37a7778af304326d41df5c60f754cf62ff4876f9", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/37a7778af304326d41df5c60f754cf62ff4876f9", "committedDate": "2020-12-15T16:03:20Z", "message": "Merge remote-tracking branch 'apache-github/trunk' into simplify-api-keys\n\n* apache-github/trunk:\n  KAFKA-10776: Add version attribute in RequestsPerSec metrics documentation (#9661)\n  KAFKA-10854: fix flaky testConnectionRatePerIp test (#9752)\n  KAFKA-10525: Emit JSONs with new auto-generated schema (KIP-673) (#9526)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/e8dc54737c14d60069348f23e71499bdb01f11b5", "committedDate": "2020-12-15T16:19:22Z", "message": "Fix compilation errors due to merge"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2afb85db4d484378b308e6bcad52a4b875f5f3ad", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/2afb85db4d484378b308e6bcad52a4b875f5f3ad", "committedDate": "2020-12-15T16:17:43Z", "message": "Fix compilation errors due to merge"}, "afterCommit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/e8dc54737c14d60069348f23e71499bdb01f11b5", "committedDate": "2020-12-15T16:19:22Z", "message": "Fix compilation errors due to merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMjE5MzQy", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-553219342", "createdAt": "2020-12-16T01:02:07Z", "commit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTowMjowN1rOIGm5Mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMTowMjowN1rOIGm5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzc5OTYwMg==", "bodyText": "Does it need to check duplicate id?", "url": "https://github.com/apache/kafka/pull/9748#discussion_r543799602", "createdAt": "2020-12-16T01:02:07Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -157,124 +38,76 @@\n  * Identifiers for all the Kafka APIs\n  */\n public enum ApiKeys {\n-    PRODUCE(0, \"Produce\", ProduceRequestData.SCHEMAS, ProduceResponseData.SCHEMAS),\n-    FETCH(1, \"Fetch\", FetchRequestData.SCHEMAS, FetchResponseData.SCHEMAS),\n-    LIST_OFFSETS(2, \"ListOffsets\", ListOffsetRequestData.SCHEMAS, ListOffsetResponseData.SCHEMAS),\n-    METADATA(3, \"Metadata\", MetadataRequestData.SCHEMAS, MetadataResponseData.SCHEMAS),\n-    LEADER_AND_ISR(4, \"LeaderAndIsr\", true, LeaderAndIsrRequestData.SCHEMAS, LeaderAndIsrResponseData.SCHEMAS),\n-    STOP_REPLICA(5, \"StopReplica\", true, StopReplicaRequestData.SCHEMAS, StopReplicaResponseData.SCHEMAS),\n-    UPDATE_METADATA(6, \"UpdateMetadata\", true, UpdateMetadataRequestData.SCHEMAS, UpdateMetadataResponseData.SCHEMAS),\n-    CONTROLLED_SHUTDOWN(7, \"ControlledShutdown\", true, ControlledShutdownRequestData.SCHEMAS,\n-            ControlledShutdownResponseData.SCHEMAS),\n-    OFFSET_COMMIT(8, \"OffsetCommit\", OffsetCommitRequestData.SCHEMAS, OffsetCommitResponseData.SCHEMAS),\n-    OFFSET_FETCH(9, \"OffsetFetch\", OffsetFetchRequestData.SCHEMAS, OffsetFetchResponseData.SCHEMAS),\n-    FIND_COORDINATOR(10, \"FindCoordinator\", FindCoordinatorRequestData.SCHEMAS,\n-            FindCoordinatorResponseData.SCHEMAS),\n-    JOIN_GROUP(11, \"JoinGroup\", JoinGroupRequestData.SCHEMAS, JoinGroupResponseData.SCHEMAS),\n-    HEARTBEAT(12, \"Heartbeat\", HeartbeatRequestData.SCHEMAS, HeartbeatResponseData.SCHEMAS),\n-    LEAVE_GROUP(13, \"LeaveGroup\", LeaveGroupRequestData.SCHEMAS, LeaveGroupResponseData.SCHEMAS),\n-    SYNC_GROUP(14, \"SyncGroup\", SyncGroupRequestData.SCHEMAS, SyncGroupResponseData.SCHEMAS),\n-    DESCRIBE_GROUPS(15, \"DescribeGroups\", DescribeGroupsRequestData.SCHEMAS,\n-            DescribeGroupsResponseData.SCHEMAS),\n-    LIST_GROUPS(16, \"ListGroups\", ListGroupsRequestData.SCHEMAS, ListGroupsResponseData.SCHEMAS),\n-    SASL_HANDSHAKE(17, \"SaslHandshake\", SaslHandshakeRequestData.SCHEMAS, SaslHandshakeResponseData.SCHEMAS),\n-    API_VERSIONS(18, \"ApiVersions\", ApiVersionsRequestData.SCHEMAS, ApiVersionsResponseData.SCHEMAS) {\n-        @Override\n-        public Struct parseResponse(short version, ByteBuffer buffer) {\n-            // Fallback to version 0 for ApiVersions response. If a client sends an ApiVersionsRequest\n-            // using a version higher than that supported by the broker, a version 0 response is sent\n-            // to the client indicating UNSUPPORTED_VERSION.\n-            return parseResponse(version, buffer, (short) 0);\n-        }\n-    },\n-    CREATE_TOPICS(19, \"CreateTopics\", CreateTopicsRequestData.SCHEMAS, CreateTopicsResponseData.SCHEMAS, true),\n-    DELETE_TOPICS(20, \"DeleteTopics\", DeleteTopicsRequestData.SCHEMAS, DeleteTopicsResponseData.SCHEMAS, true),\n-    DELETE_RECORDS(21, \"DeleteRecords\", DeleteRecordsRequestData.SCHEMAS, DeleteRecordsResponseData.SCHEMAS),\n-    INIT_PRODUCER_ID(22, \"InitProducerId\", InitProducerIdRequestData.SCHEMAS, InitProducerIdResponseData.SCHEMAS),\n-    OFFSET_FOR_LEADER_EPOCH(23, \"OffsetForLeaderEpoch\", false, OffsetForLeaderEpochRequestData.SCHEMAS,\n-        OffsetForLeaderEpochResponseData.SCHEMAS),\n-    ADD_PARTITIONS_TO_TXN(24, \"AddPartitionsToTxn\", false, RecordBatch.MAGIC_VALUE_V2,\n-            AddPartitionsToTxnRequestData.SCHEMAS, AddPartitionsToTxnResponseData.SCHEMAS),\n-    ADD_OFFSETS_TO_TXN(25, \"AddOffsetsToTxn\", false, RecordBatch.MAGIC_VALUE_V2, AddOffsetsToTxnRequestData.SCHEMAS,\n-            AddOffsetsToTxnResponseData.SCHEMAS),\n-    END_TXN(26, \"EndTxn\", false, RecordBatch.MAGIC_VALUE_V2, EndTxnRequestData.SCHEMAS, EndTxnResponseData.SCHEMAS),\n-    WRITE_TXN_MARKERS(27, \"WriteTxnMarkers\", true, RecordBatch.MAGIC_VALUE_V2, WriteTxnMarkersRequestData.SCHEMAS,\n-            WriteTxnMarkersResponseData.SCHEMAS),\n-    TXN_OFFSET_COMMIT(28, \"TxnOffsetCommit\", false, RecordBatch.MAGIC_VALUE_V2, TxnOffsetCommitRequestData.SCHEMAS,\n-            TxnOffsetCommitResponseData.SCHEMAS),\n-    DESCRIBE_ACLS(29, \"DescribeAcls\", DescribeAclsRequestData.SCHEMAS, DescribeAclsResponseData.SCHEMAS),\n-    CREATE_ACLS(30, \"CreateAcls\", CreateAclsRequestData.SCHEMAS, CreateAclsResponseData.SCHEMAS, true),\n-    DELETE_ACLS(31, \"DeleteAcls\", DeleteAclsRequestData.SCHEMAS, DeleteAclsResponseData.SCHEMAS, true),\n-    DESCRIBE_CONFIGS(32, \"DescribeConfigs\", DescribeConfigsRequestData.SCHEMAS,\n-             DescribeConfigsResponseData.SCHEMAS),\n-    ALTER_CONFIGS(33, \"AlterConfigs\", AlterConfigsRequestData.SCHEMAS,\n-            AlterConfigsResponseData.SCHEMAS, true),\n-    ALTER_REPLICA_LOG_DIRS(34, \"AlterReplicaLogDirs\", AlterReplicaLogDirsRequestData.SCHEMAS,\n-            AlterReplicaLogDirsResponseData.SCHEMAS),\n-    DESCRIBE_LOG_DIRS(35, \"DescribeLogDirs\", DescribeLogDirsRequestData.SCHEMAS,\n-            DescribeLogDirsResponseData.SCHEMAS),\n-    SASL_AUTHENTICATE(36, \"SaslAuthenticate\", SaslAuthenticateRequestData.SCHEMAS,\n-            SaslAuthenticateResponseData.SCHEMAS),\n-    CREATE_PARTITIONS(37, \"CreatePartitions\", CreatePartitionsRequestData.SCHEMAS,\n-            CreatePartitionsResponseData.SCHEMAS, true),\n-    CREATE_DELEGATION_TOKEN(38, \"CreateDelegationToken\", CreateDelegationTokenRequestData.SCHEMAS,\n-            CreateDelegationTokenResponseData.SCHEMAS, true),\n-    RENEW_DELEGATION_TOKEN(39, \"RenewDelegationToken\", RenewDelegationTokenRequestData.SCHEMAS,\n-            RenewDelegationTokenResponseData.SCHEMAS, true),\n-    EXPIRE_DELEGATION_TOKEN(40, \"ExpireDelegationToken\", ExpireDelegationTokenRequestData.SCHEMAS,\n-            ExpireDelegationTokenResponseData.SCHEMAS, true),\n-    DESCRIBE_DELEGATION_TOKEN(41, \"DescribeDelegationToken\", DescribeDelegationTokenRequestData.SCHEMAS,\n-            DescribeDelegationTokenResponseData.SCHEMAS),\n-    DELETE_GROUPS(42, \"DeleteGroups\", DeleteGroupsRequestData.SCHEMAS, DeleteGroupsResponseData.SCHEMAS),\n-    ELECT_LEADERS(43, \"ElectLeaders\", ElectLeadersRequestData.SCHEMAS,\n-            ElectLeadersResponseData.SCHEMAS),\n-    INCREMENTAL_ALTER_CONFIGS(44, \"IncrementalAlterConfigs\", IncrementalAlterConfigsRequestData.SCHEMAS,\n-            IncrementalAlterConfigsResponseData.SCHEMAS, true),\n-    ALTER_PARTITION_REASSIGNMENTS(45, \"AlterPartitionReassignments\", AlterPartitionReassignmentsRequestData.SCHEMAS,\n-            AlterPartitionReassignmentsResponseData.SCHEMAS, true),\n-    LIST_PARTITION_REASSIGNMENTS(46, \"ListPartitionReassignments\", ListPartitionReassignmentsRequestData.SCHEMAS,\n-            ListPartitionReassignmentsResponseData.SCHEMAS),\n-    OFFSET_DELETE(47, \"OffsetDelete\", OffsetDeleteRequestData.SCHEMAS, OffsetDeleteResponseData.SCHEMAS),\n-    DESCRIBE_CLIENT_QUOTAS(48, \"DescribeClientQuotas\", DescribeClientQuotasRequestData.SCHEMAS,\n-            DescribeClientQuotasResponseData.SCHEMAS),\n-    ALTER_CLIENT_QUOTAS(49, \"AlterClientQuotas\", AlterClientQuotasRequestData.SCHEMAS,\n-            AlterClientQuotasResponseData.SCHEMAS, true),\n-    DESCRIBE_USER_SCRAM_CREDENTIALS(50, \"DescribeUserScramCredentials\", DescribeUserScramCredentialsRequestData.SCHEMAS,\n-            DescribeUserScramCredentialsResponseData.SCHEMAS),\n-    ALTER_USER_SCRAM_CREDENTIALS(51, \"AlterUserScramCredentials\", AlterUserScramCredentialsRequestData.SCHEMAS,\n-            AlterUserScramCredentialsResponseData.SCHEMAS, true),\n-    VOTE(52, \"Vote\", true, false,\n-        VoteRequestData.SCHEMAS, VoteResponseData.SCHEMAS),\n-    BEGIN_QUORUM_EPOCH(53, \"BeginQuorumEpoch\", true, false,\n-        BeginQuorumEpochRequestData.SCHEMAS, BeginQuorumEpochResponseData.SCHEMAS),\n-    END_QUORUM_EPOCH(54, \"EndQuorumEpoch\", true, false,\n-        EndQuorumEpochRequestData.SCHEMAS, EndQuorumEpochResponseData.SCHEMAS),\n-    DESCRIBE_QUORUM(55, \"DescribeQuorum\", true, false,\n-        DescribeQuorumRequestData.SCHEMAS, DescribeQuorumResponseData.SCHEMAS),\n-    ALTER_ISR(56, \"AlterIsr\", true, AlterIsrRequestData.SCHEMAS, AlterIsrResponseData.SCHEMAS),\n-    UPDATE_FEATURES(57, \"UpdateFeatures\",\n-        UpdateFeaturesRequestData.SCHEMAS, UpdateFeaturesResponseData.SCHEMAS, true),\n-    ENVELOPE(58, \"Envelope\", true, false, EnvelopeRequestData.SCHEMAS, EnvelopeResponseData.SCHEMAS);\n-\n-    private static final ApiKeys[] ID_TO_TYPE;\n-    private static final int MIN_API_KEY = 0;\n-    public static final int MAX_API_KEY;\n-\n+    PRODUCE(ApiMessageType.PRODUCE),\n+    FETCH(ApiMessageType.FETCH),\n+    LIST_OFFSETS(ApiMessageType.LIST_OFFSETS),\n+    METADATA(ApiMessageType.METADATA),\n+    LEADER_AND_ISR(ApiMessageType.LEADER_AND_ISR, true),\n+    STOP_REPLICA(ApiMessageType.STOP_REPLICA, true),\n+    UPDATE_METADATA(ApiMessageType.UPDATE_METADATA, true),\n+    CONTROLLED_SHUTDOWN(ApiMessageType.CONTROLLED_SHUTDOWN, true),\n+    OFFSET_COMMIT(ApiMessageType.OFFSET_COMMIT),\n+    OFFSET_FETCH(ApiMessageType.OFFSET_FETCH),\n+    FIND_COORDINATOR(ApiMessageType.FIND_COORDINATOR),\n+    JOIN_GROUP(ApiMessageType.JOIN_GROUP),\n+    HEARTBEAT(ApiMessageType.HEARTBEAT),\n+    LEAVE_GROUP(ApiMessageType.LEAVE_GROUP),\n+    SYNC_GROUP(ApiMessageType.SYNC_GROUP),\n+    DESCRIBE_GROUPS(ApiMessageType.DESCRIBE_GROUPS),\n+    LIST_GROUPS(ApiMessageType.LIST_GROUPS),\n+    SASL_HANDSHAKE(ApiMessageType.SASL_HANDSHAKE),\n+    API_VERSIONS(ApiMessageType.API_VERSIONS),\n+    CREATE_TOPICS(ApiMessageType.CREATE_TOPICS, false, true),\n+    DELETE_TOPICS(ApiMessageType.DELETE_TOPICS, false, true),\n+    DELETE_RECORDS(ApiMessageType.DELETE_RECORDS),\n+    INIT_PRODUCER_ID(ApiMessageType.INIT_PRODUCER_ID),\n+    OFFSET_FOR_LEADER_EPOCH(ApiMessageType.OFFSET_FOR_LEADER_EPOCH),\n+    ADD_PARTITIONS_TO_TXN(ApiMessageType.ADD_PARTITIONS_TO_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    ADD_OFFSETS_TO_TXN(ApiMessageType.ADD_OFFSETS_TO_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    END_TXN(ApiMessageType.END_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    WRITE_TXN_MARKERS(ApiMessageType.WRITE_TXN_MARKERS, true, RecordBatch.MAGIC_VALUE_V2, false),\n+    TXN_OFFSET_COMMIT(ApiMessageType.TXN_OFFSET_COMMIT, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    DESCRIBE_ACLS(ApiMessageType.DESCRIBE_ACLS),\n+    CREATE_ACLS(ApiMessageType.CREATE_ACLS, false, true),\n+    DELETE_ACLS(ApiMessageType.DELETE_ACLS, false, true),\n+    DESCRIBE_CONFIGS(ApiMessageType.DESCRIBE_CONFIGS),\n+    ALTER_CONFIGS(ApiMessageType.ALTER_CONFIGS, false, true),\n+    ALTER_REPLICA_LOG_DIRS(ApiMessageType.ALTER_REPLICA_LOG_DIRS),\n+    DESCRIBE_LOG_DIRS(ApiMessageType.DESCRIBE_LOG_DIRS),\n+    SASL_AUTHENTICATE(ApiMessageType.SASL_AUTHENTICATE),\n+    CREATE_PARTITIONS(ApiMessageType.CREATE_PARTITIONS, false, true),\n+    CREATE_DELEGATION_TOKEN(ApiMessageType.CREATE_DELEGATION_TOKEN, false, true),\n+    RENEW_DELEGATION_TOKEN(ApiMessageType.RENEW_DELEGATION_TOKEN, false, true),\n+    EXPIRE_DELEGATION_TOKEN(ApiMessageType.EXPIRE_DELEGATION_TOKEN, false, true),\n+    DESCRIBE_DELEGATION_TOKEN(ApiMessageType.DESCRIBE_DELEGATION_TOKEN),\n+    DELETE_GROUPS(ApiMessageType.DELETE_GROUPS),\n+    ELECT_LEADERS(ApiMessageType.ELECT_LEADERS),\n+    INCREMENTAL_ALTER_CONFIGS(ApiMessageType.INCREMENTAL_ALTER_CONFIGS, false, true),\n+    ALTER_PARTITION_REASSIGNMENTS(ApiMessageType.ALTER_PARTITION_REASSIGNMENTS, false, true),\n+    LIST_PARTITION_REASSIGNMENTS(ApiMessageType.LIST_PARTITION_REASSIGNMENTS),\n+    OFFSET_DELETE(ApiMessageType.OFFSET_DELETE),\n+    DESCRIBE_CLIENT_QUOTAS(ApiMessageType.DESCRIBE_CLIENT_QUOTAS),\n+    ALTER_CLIENT_QUOTAS(ApiMessageType.ALTER_CLIENT_QUOTAS, false, true),\n+    DESCRIBE_USER_SCRAM_CREDENTIALS(ApiMessageType.DESCRIBE_USER_SCRAM_CREDENTIALS),\n+    ALTER_USER_SCRAM_CREDENTIALS(ApiMessageType.ALTER_USER_SCRAM_CREDENTIALS, false, true),\n+    VOTE(ApiMessageType.VOTE, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    BEGIN_QUORUM_EPOCH(ApiMessageType.BEGIN_QUORUM_EPOCH, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    END_QUORUM_EPOCH(ApiMessageType.END_QUORUM_EPOCH, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    DESCRIBE_QUORUM(ApiMessageType.DESCRIBE_QUORUM, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    ALTER_ISR(ApiMessageType.ALTER_ISR, true),\n+    UPDATE_FEATURES(ApiMessageType.UPDATE_FEATURES, false, true),\n+    ENVELOPE(ApiMessageType.ENVELOPE, true, RecordBatch.MAGIC_VALUE_V0, false, false);\n+\n+    private static final Map<Integer, ApiKeys> ID_TO_TYPE = new HashMap<>();\n     static {\n-        int maxKey = -1;\n-        for (ApiKeys key : ApiKeys.values())\n-            maxKey = Math.max(maxKey, key.id);\n-        ApiKeys[] idToType = new ApiKeys[maxKey + 1];\n         for (ApiKeys key : ApiKeys.values())\n-            idToType[key.id] = key;\n-        ID_TO_TYPE = idToType;\n-        MAX_API_KEY = maxKey;\n+            ID_TO_TYPE.put((int) key.id, key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5"}, "originalPosition": 314}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMjM2MTMx", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-553236131", "createdAt": "2020-12-16T01:15:06Z", "commit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMToxNTowN1rOIGnMOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMToxNTowN1rOIGnMOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzgwNDQ3NA==", "bodyText": "Is 'short' type more suitable?", "url": "https://github.com/apache/kafka/pull/9748#discussion_r543804474", "createdAt": "2020-12-16T01:15:07Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -361,69 +172,35 @@ private static boolean shouldRetainsBufferReference(Schema[] requestSchemas) {\n     }\n \n     public static ApiKeys forId(int id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8dc54737c14d60069348f23e71499bdb01f11b5"}, "originalPosition": 409}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73099b47f0021b3ba7961cc491204b73d9aa5d86", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/73099b47f0021b3ba7961cc491204b73d9aa5d86", "committedDate": "2020-12-16T05:07:42Z", "message": "Clarifying comment in ApiKeys"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzcxMDI0", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-553371024", "createdAt": "2020-12-16T05:40:08Z", "commit": {"oid": "73099b47f0021b3ba7961cc491204b73d9aa5d86"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNTo0MDowOFrOIGyQ3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwNTo0MDowOFrOIGyQ3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzk4NTg4Ng==", "bodyText": "It seems to me this initialization can be rewrite by following code.\n    private static final Map<Integer, ApiKeys> ID_TO_TYPE = Arrays.stream(ApiKeys.values())\n            .collect(Collectors.toMap(key -> (int) key.id, Function.identity()));\n\nThe benefit is that he static block can be removed.", "url": "https://github.com/apache/kafka/pull/9748#discussion_r543985886", "createdAt": "2020-12-16T05:40:08Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -157,124 +38,78 @@\n  * Identifiers for all the Kafka APIs\n  */\n public enum ApiKeys {\n-    PRODUCE(0, \"Produce\", ProduceRequestData.SCHEMAS, ProduceResponseData.SCHEMAS),\n-    FETCH(1, \"Fetch\", FetchRequestData.SCHEMAS, FetchResponseData.SCHEMAS),\n-    LIST_OFFSETS(2, \"ListOffsets\", ListOffsetRequestData.SCHEMAS, ListOffsetResponseData.SCHEMAS),\n-    METADATA(3, \"Metadata\", MetadataRequestData.SCHEMAS, MetadataResponseData.SCHEMAS),\n-    LEADER_AND_ISR(4, \"LeaderAndIsr\", true, LeaderAndIsrRequestData.SCHEMAS, LeaderAndIsrResponseData.SCHEMAS),\n-    STOP_REPLICA(5, \"StopReplica\", true, StopReplicaRequestData.SCHEMAS, StopReplicaResponseData.SCHEMAS),\n-    UPDATE_METADATA(6, \"UpdateMetadata\", true, UpdateMetadataRequestData.SCHEMAS, UpdateMetadataResponseData.SCHEMAS),\n-    CONTROLLED_SHUTDOWN(7, \"ControlledShutdown\", true, ControlledShutdownRequestData.SCHEMAS,\n-            ControlledShutdownResponseData.SCHEMAS),\n-    OFFSET_COMMIT(8, \"OffsetCommit\", OffsetCommitRequestData.SCHEMAS, OffsetCommitResponseData.SCHEMAS),\n-    OFFSET_FETCH(9, \"OffsetFetch\", OffsetFetchRequestData.SCHEMAS, OffsetFetchResponseData.SCHEMAS),\n-    FIND_COORDINATOR(10, \"FindCoordinator\", FindCoordinatorRequestData.SCHEMAS,\n-            FindCoordinatorResponseData.SCHEMAS),\n-    JOIN_GROUP(11, \"JoinGroup\", JoinGroupRequestData.SCHEMAS, JoinGroupResponseData.SCHEMAS),\n-    HEARTBEAT(12, \"Heartbeat\", HeartbeatRequestData.SCHEMAS, HeartbeatResponseData.SCHEMAS),\n-    LEAVE_GROUP(13, \"LeaveGroup\", LeaveGroupRequestData.SCHEMAS, LeaveGroupResponseData.SCHEMAS),\n-    SYNC_GROUP(14, \"SyncGroup\", SyncGroupRequestData.SCHEMAS, SyncGroupResponseData.SCHEMAS),\n-    DESCRIBE_GROUPS(15, \"DescribeGroups\", DescribeGroupsRequestData.SCHEMAS,\n-            DescribeGroupsResponseData.SCHEMAS),\n-    LIST_GROUPS(16, \"ListGroups\", ListGroupsRequestData.SCHEMAS, ListGroupsResponseData.SCHEMAS),\n-    SASL_HANDSHAKE(17, \"SaslHandshake\", SaslHandshakeRequestData.SCHEMAS, SaslHandshakeResponseData.SCHEMAS),\n-    API_VERSIONS(18, \"ApiVersions\", ApiVersionsRequestData.SCHEMAS, ApiVersionsResponseData.SCHEMAS) {\n-        @Override\n-        public Struct parseResponse(short version, ByteBuffer buffer) {\n-            // Fallback to version 0 for ApiVersions response. If a client sends an ApiVersionsRequest\n-            // using a version higher than that supported by the broker, a version 0 response is sent\n-            // to the client indicating UNSUPPORTED_VERSION.\n-            return parseResponse(version, buffer, (short) 0);\n-        }\n-    },\n-    CREATE_TOPICS(19, \"CreateTopics\", CreateTopicsRequestData.SCHEMAS, CreateTopicsResponseData.SCHEMAS, true),\n-    DELETE_TOPICS(20, \"DeleteTopics\", DeleteTopicsRequestData.SCHEMAS, DeleteTopicsResponseData.SCHEMAS, true),\n-    DELETE_RECORDS(21, \"DeleteRecords\", DeleteRecordsRequestData.SCHEMAS, DeleteRecordsResponseData.SCHEMAS),\n-    INIT_PRODUCER_ID(22, \"InitProducerId\", InitProducerIdRequestData.SCHEMAS, InitProducerIdResponseData.SCHEMAS),\n-    OFFSET_FOR_LEADER_EPOCH(23, \"OffsetForLeaderEpoch\", false, OffsetForLeaderEpochRequestData.SCHEMAS,\n-        OffsetForLeaderEpochResponseData.SCHEMAS),\n-    ADD_PARTITIONS_TO_TXN(24, \"AddPartitionsToTxn\", false, RecordBatch.MAGIC_VALUE_V2,\n-            AddPartitionsToTxnRequestData.SCHEMAS, AddPartitionsToTxnResponseData.SCHEMAS),\n-    ADD_OFFSETS_TO_TXN(25, \"AddOffsetsToTxn\", false, RecordBatch.MAGIC_VALUE_V2, AddOffsetsToTxnRequestData.SCHEMAS,\n-            AddOffsetsToTxnResponseData.SCHEMAS),\n-    END_TXN(26, \"EndTxn\", false, RecordBatch.MAGIC_VALUE_V2, EndTxnRequestData.SCHEMAS, EndTxnResponseData.SCHEMAS),\n-    WRITE_TXN_MARKERS(27, \"WriteTxnMarkers\", true, RecordBatch.MAGIC_VALUE_V2, WriteTxnMarkersRequestData.SCHEMAS,\n-            WriteTxnMarkersResponseData.SCHEMAS),\n-    TXN_OFFSET_COMMIT(28, \"TxnOffsetCommit\", false, RecordBatch.MAGIC_VALUE_V2, TxnOffsetCommitRequestData.SCHEMAS,\n-            TxnOffsetCommitResponseData.SCHEMAS),\n-    DESCRIBE_ACLS(29, \"DescribeAcls\", DescribeAclsRequestData.SCHEMAS, DescribeAclsResponseData.SCHEMAS),\n-    CREATE_ACLS(30, \"CreateAcls\", CreateAclsRequestData.SCHEMAS, CreateAclsResponseData.SCHEMAS, true),\n-    DELETE_ACLS(31, \"DeleteAcls\", DeleteAclsRequestData.SCHEMAS, DeleteAclsResponseData.SCHEMAS, true),\n-    DESCRIBE_CONFIGS(32, \"DescribeConfigs\", DescribeConfigsRequestData.SCHEMAS,\n-             DescribeConfigsResponseData.SCHEMAS),\n-    ALTER_CONFIGS(33, \"AlterConfigs\", AlterConfigsRequestData.SCHEMAS,\n-            AlterConfigsResponseData.SCHEMAS, true),\n-    ALTER_REPLICA_LOG_DIRS(34, \"AlterReplicaLogDirs\", AlterReplicaLogDirsRequestData.SCHEMAS,\n-            AlterReplicaLogDirsResponseData.SCHEMAS),\n-    DESCRIBE_LOG_DIRS(35, \"DescribeLogDirs\", DescribeLogDirsRequestData.SCHEMAS,\n-            DescribeLogDirsResponseData.SCHEMAS),\n-    SASL_AUTHENTICATE(36, \"SaslAuthenticate\", SaslAuthenticateRequestData.SCHEMAS,\n-            SaslAuthenticateResponseData.SCHEMAS),\n-    CREATE_PARTITIONS(37, \"CreatePartitions\", CreatePartitionsRequestData.SCHEMAS,\n-            CreatePartitionsResponseData.SCHEMAS, true),\n-    CREATE_DELEGATION_TOKEN(38, \"CreateDelegationToken\", CreateDelegationTokenRequestData.SCHEMAS,\n-            CreateDelegationTokenResponseData.SCHEMAS, true),\n-    RENEW_DELEGATION_TOKEN(39, \"RenewDelegationToken\", RenewDelegationTokenRequestData.SCHEMAS,\n-            RenewDelegationTokenResponseData.SCHEMAS, true),\n-    EXPIRE_DELEGATION_TOKEN(40, \"ExpireDelegationToken\", ExpireDelegationTokenRequestData.SCHEMAS,\n-            ExpireDelegationTokenResponseData.SCHEMAS, true),\n-    DESCRIBE_DELEGATION_TOKEN(41, \"DescribeDelegationToken\", DescribeDelegationTokenRequestData.SCHEMAS,\n-            DescribeDelegationTokenResponseData.SCHEMAS),\n-    DELETE_GROUPS(42, \"DeleteGroups\", DeleteGroupsRequestData.SCHEMAS, DeleteGroupsResponseData.SCHEMAS),\n-    ELECT_LEADERS(43, \"ElectLeaders\", ElectLeadersRequestData.SCHEMAS,\n-            ElectLeadersResponseData.SCHEMAS),\n-    INCREMENTAL_ALTER_CONFIGS(44, \"IncrementalAlterConfigs\", IncrementalAlterConfigsRequestData.SCHEMAS,\n-            IncrementalAlterConfigsResponseData.SCHEMAS, true),\n-    ALTER_PARTITION_REASSIGNMENTS(45, \"AlterPartitionReassignments\", AlterPartitionReassignmentsRequestData.SCHEMAS,\n-            AlterPartitionReassignmentsResponseData.SCHEMAS, true),\n-    LIST_PARTITION_REASSIGNMENTS(46, \"ListPartitionReassignments\", ListPartitionReassignmentsRequestData.SCHEMAS,\n-            ListPartitionReassignmentsResponseData.SCHEMAS),\n-    OFFSET_DELETE(47, \"OffsetDelete\", OffsetDeleteRequestData.SCHEMAS, OffsetDeleteResponseData.SCHEMAS),\n-    DESCRIBE_CLIENT_QUOTAS(48, \"DescribeClientQuotas\", DescribeClientQuotasRequestData.SCHEMAS,\n-            DescribeClientQuotasResponseData.SCHEMAS),\n-    ALTER_CLIENT_QUOTAS(49, \"AlterClientQuotas\", AlterClientQuotasRequestData.SCHEMAS,\n-            AlterClientQuotasResponseData.SCHEMAS, true),\n-    DESCRIBE_USER_SCRAM_CREDENTIALS(50, \"DescribeUserScramCredentials\", DescribeUserScramCredentialsRequestData.SCHEMAS,\n-            DescribeUserScramCredentialsResponseData.SCHEMAS),\n-    ALTER_USER_SCRAM_CREDENTIALS(51, \"AlterUserScramCredentials\", AlterUserScramCredentialsRequestData.SCHEMAS,\n-            AlterUserScramCredentialsResponseData.SCHEMAS, true),\n-    VOTE(52, \"Vote\", true, false,\n-        VoteRequestData.SCHEMAS, VoteResponseData.SCHEMAS),\n-    BEGIN_QUORUM_EPOCH(53, \"BeginQuorumEpoch\", true, false,\n-        BeginQuorumEpochRequestData.SCHEMAS, BeginQuorumEpochResponseData.SCHEMAS),\n-    END_QUORUM_EPOCH(54, \"EndQuorumEpoch\", true, false,\n-        EndQuorumEpochRequestData.SCHEMAS, EndQuorumEpochResponseData.SCHEMAS),\n-    DESCRIBE_QUORUM(55, \"DescribeQuorum\", true, false,\n-        DescribeQuorumRequestData.SCHEMAS, DescribeQuorumResponseData.SCHEMAS),\n-    ALTER_ISR(56, \"AlterIsr\", true, AlterIsrRequestData.SCHEMAS, AlterIsrResponseData.SCHEMAS),\n-    UPDATE_FEATURES(57, \"UpdateFeatures\",\n-        UpdateFeaturesRequestData.SCHEMAS, UpdateFeaturesResponseData.SCHEMAS, true),\n-    ENVELOPE(58, \"Envelope\", true, false, EnvelopeRequestData.SCHEMAS, EnvelopeResponseData.SCHEMAS);\n-\n-    private static final ApiKeys[] ID_TO_TYPE;\n-    private static final int MIN_API_KEY = 0;\n-    public static final int MAX_API_KEY;\n-\n+    PRODUCE(ApiMessageType.PRODUCE),\n+    FETCH(ApiMessageType.FETCH),\n+    LIST_OFFSETS(ApiMessageType.LIST_OFFSETS),\n+    METADATA(ApiMessageType.METADATA),\n+    LEADER_AND_ISR(ApiMessageType.LEADER_AND_ISR, true),\n+    STOP_REPLICA(ApiMessageType.STOP_REPLICA, true),\n+    UPDATE_METADATA(ApiMessageType.UPDATE_METADATA, true),\n+    CONTROLLED_SHUTDOWN(ApiMessageType.CONTROLLED_SHUTDOWN, true),\n+    OFFSET_COMMIT(ApiMessageType.OFFSET_COMMIT),\n+    OFFSET_FETCH(ApiMessageType.OFFSET_FETCH),\n+    FIND_COORDINATOR(ApiMessageType.FIND_COORDINATOR),\n+    JOIN_GROUP(ApiMessageType.JOIN_GROUP),\n+    HEARTBEAT(ApiMessageType.HEARTBEAT),\n+    LEAVE_GROUP(ApiMessageType.LEAVE_GROUP),\n+    SYNC_GROUP(ApiMessageType.SYNC_GROUP),\n+    DESCRIBE_GROUPS(ApiMessageType.DESCRIBE_GROUPS),\n+    LIST_GROUPS(ApiMessageType.LIST_GROUPS),\n+    SASL_HANDSHAKE(ApiMessageType.SASL_HANDSHAKE),\n+    API_VERSIONS(ApiMessageType.API_VERSIONS),\n+    CREATE_TOPICS(ApiMessageType.CREATE_TOPICS, false, true),\n+    DELETE_TOPICS(ApiMessageType.DELETE_TOPICS, false, true),\n+    DELETE_RECORDS(ApiMessageType.DELETE_RECORDS),\n+    INIT_PRODUCER_ID(ApiMessageType.INIT_PRODUCER_ID),\n+    OFFSET_FOR_LEADER_EPOCH(ApiMessageType.OFFSET_FOR_LEADER_EPOCH),\n+    ADD_PARTITIONS_TO_TXN(ApiMessageType.ADD_PARTITIONS_TO_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    ADD_OFFSETS_TO_TXN(ApiMessageType.ADD_OFFSETS_TO_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    END_TXN(ApiMessageType.END_TXN, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    WRITE_TXN_MARKERS(ApiMessageType.WRITE_TXN_MARKERS, true, RecordBatch.MAGIC_VALUE_V2, false),\n+    TXN_OFFSET_COMMIT(ApiMessageType.TXN_OFFSET_COMMIT, false, RecordBatch.MAGIC_VALUE_V2, false),\n+    DESCRIBE_ACLS(ApiMessageType.DESCRIBE_ACLS),\n+    CREATE_ACLS(ApiMessageType.CREATE_ACLS, false, true),\n+    DELETE_ACLS(ApiMessageType.DELETE_ACLS, false, true),\n+    DESCRIBE_CONFIGS(ApiMessageType.DESCRIBE_CONFIGS),\n+    ALTER_CONFIGS(ApiMessageType.ALTER_CONFIGS, false, true),\n+    ALTER_REPLICA_LOG_DIRS(ApiMessageType.ALTER_REPLICA_LOG_DIRS),\n+    DESCRIBE_LOG_DIRS(ApiMessageType.DESCRIBE_LOG_DIRS),\n+    SASL_AUTHENTICATE(ApiMessageType.SASL_AUTHENTICATE),\n+    CREATE_PARTITIONS(ApiMessageType.CREATE_PARTITIONS, false, true),\n+    CREATE_DELEGATION_TOKEN(ApiMessageType.CREATE_DELEGATION_TOKEN, false, true),\n+    RENEW_DELEGATION_TOKEN(ApiMessageType.RENEW_DELEGATION_TOKEN, false, true),\n+    EXPIRE_DELEGATION_TOKEN(ApiMessageType.EXPIRE_DELEGATION_TOKEN, false, true),\n+    DESCRIBE_DELEGATION_TOKEN(ApiMessageType.DESCRIBE_DELEGATION_TOKEN),\n+    DELETE_GROUPS(ApiMessageType.DELETE_GROUPS),\n+    ELECT_LEADERS(ApiMessageType.ELECT_LEADERS),\n+    INCREMENTAL_ALTER_CONFIGS(ApiMessageType.INCREMENTAL_ALTER_CONFIGS, false, true),\n+    ALTER_PARTITION_REASSIGNMENTS(ApiMessageType.ALTER_PARTITION_REASSIGNMENTS, false, true),\n+    LIST_PARTITION_REASSIGNMENTS(ApiMessageType.LIST_PARTITION_REASSIGNMENTS),\n+    OFFSET_DELETE(ApiMessageType.OFFSET_DELETE),\n+    DESCRIBE_CLIENT_QUOTAS(ApiMessageType.DESCRIBE_CLIENT_QUOTAS),\n+    ALTER_CLIENT_QUOTAS(ApiMessageType.ALTER_CLIENT_QUOTAS, false, true),\n+    DESCRIBE_USER_SCRAM_CREDENTIALS(ApiMessageType.DESCRIBE_USER_SCRAM_CREDENTIALS),\n+    ALTER_USER_SCRAM_CREDENTIALS(ApiMessageType.ALTER_USER_SCRAM_CREDENTIALS, false, true),\n+    VOTE(ApiMessageType.VOTE, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    BEGIN_QUORUM_EPOCH(ApiMessageType.BEGIN_QUORUM_EPOCH, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    END_QUORUM_EPOCH(ApiMessageType.END_QUORUM_EPOCH, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    DESCRIBE_QUORUM(ApiMessageType.DESCRIBE_QUORUM, true, RecordBatch.MAGIC_VALUE_V0, false, false),\n+    ALTER_ISR(ApiMessageType.ALTER_ISR, true),\n+    UPDATE_FEATURES(ApiMessageType.UPDATE_FEATURES, false, true),\n+    ENVELOPE(ApiMessageType.ENVELOPE, true, RecordBatch.MAGIC_VALUE_V0, false, false);\n+\n+    private static final Map<Integer, ApiKeys> ID_TO_TYPE = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73099b47f0021b3ba7961cc491204b73d9aa5d86"}, "originalPosition": 304}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e0f72bfb6d16817228132c9825e4f24afa1bd3", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/d6e0f72bfb6d16817228132c9825e4f24afa1bd3", "committedDate": "2020-12-16T06:14:35Z", "message": "Simplify ID_TO_TYPE generation via stream API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzg0NDg0", "url": "https://github.com/apache/kafka/pull/9748#pullrequestreview-553384484", "createdAt": "2020-12-16T06:16:29Z", "commit": {"oid": "d6e0f72bfb6d16817228132c9825e4f24afa1bd3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2302, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}