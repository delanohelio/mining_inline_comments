{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MDc1NTg3", "number": 9344, "title": "MINOR; Preserve ThrottlingQuotaExceededException when request timeouts after being retried due to a quota violation (KIP-599)", "bodyText": "KIP-599 had proposed to keep returning the ThrottlingQuotaExceededException to the called even when the request times out due to reaching default.api.timeout.ms. The current implementation does not cover this yet.\nFrom KIP-599:\n\nOnce default.api.timeout.ms has been reached, the topics which were throttled will return the ThrottlingQuotaExceededException to the caller.\n\nThis PR adds the logic to preserve the ThrottlingQuotaExceededException when topics are retried. The throttleTimeMs is also adjusted accordingly as the request could remain pending or in-flight for quite a long time.\nI have run various tests on clusters with enabled quotas and I, indeed, find it better to preserve the exception. Otherwise, the caller does not really understand what is going on. This allows the caller to take the appropriate measure and also to take the throttleTimeMs into consideration.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-28T11:27:24Z", "url": "https://github.com/apache/kafka/pull/9344", "merged": true, "mergeCommit": {"oid": "a0fec75d3cee3d23bd517fe0acc65270a6cb0f88"}, "closed": true, "closedAt": "2020-09-29T14:17:38Z", "author": {"login": "dajac"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNRvPPAH2gAyNDk0MDc1NTg3OjBmODcxN2Y2NzQ2ODBiMDc0OWVjMzZjODQwOTNhZmYyNDdmZmFlNzQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNna5yAFqTQ5ODQxNzk5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f8717f674680b0749ec36c84093aff247ffae74", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/0f8717f674680b0749ec36c84093aff247ffae74", "committedDate": "2020-09-28T11:18:14Z", "message": "When a create topics, create partitions or delete topics request is retried, ThrottlingQuotaExceededException is returned to the called if the request timeouts."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3ODIwNTE0", "url": "https://github.com/apache/kafka/pull/9344#pullrequestreview-497820514", "createdAt": "2020-09-28T19:11:25Z", "commit": {"oid": "0f8717f674680b0749ec36c84093aff247ffae74"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOToxMToyNlrOHZMCWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxOToxNjo1OVrOHZMNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3MzY1OQ==", "bodyText": "Do we want to return quota exceeded in all cases? Apart from timeouts, it seems like we should propagate failures rather an earlier quota exceeded exception?  That is, if we were throttled for 5 millis and then see a failure, the failure is more useful than the fact that we were throttled for 5 millis?", "url": "https://github.com/apache/kafka/pull/9344#discussion_r496173659", "createdAt": "2020-09-28T19:11:26Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -1554,6 +1575,11 @@ private ConfigEntry configEntry(CreatableTopicConfigs config) {\n \n             @Override\n             void handleFailure(Throwable throwable) {\n+                // If there were any topics retries due to a quota exceeded exception, we propagate\n+                // the initial error back to the caller.\n+                completeQuotaExceededException(futures, quotaExceededExceptions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8717f674680b0749ec36c84093aff247ffae74"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjE3NjQ3Mg==", "bodyText": "I can see why we return the delta, but this looks odd when it says throttled with a time of zero.", "url": "https://github.com/apache/kafka/pull/9344#discussion_r496176472", "createdAt": "2020-09-28T19:16:59Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "diffHunk": "@@ -733,7 +733,9 @@ public void testCreateTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeO\n             time.sleep(defaultApiTimeout + 1);\n \n             assertNull(result.values().get(\"topic1\").get());\n-            TestUtils.assertFutureThrows(result.values().get(\"topic2\"), TimeoutException.class);\n+            ThrottlingQuotaExceededException e = TestUtils.assertFutureThrows(result.values().get(\"topic2\"),\n+                ThrottlingQuotaExceededException.class);\n+            assertEquals(0, e.throttleTimeMs());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f8717f674680b0749ec36c84093aff247ffae74"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af778cebd3094bd154e466ba9c2a5e05ec4297fb", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/af778cebd3094bd154e466ba9c2a5e05ec4297fb", "committedDate": "2020-09-29T08:49:37Z", "message": "only propagate back the error if the request timed out"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mjg4MjA2", "url": "https://github.com/apache/kafka/pull/9344#pullrequestreview-498288206", "createdAt": "2020-09-29T09:36:31Z", "commit": {"oid": "af778cebd3094bd154e466ba9c2a5e05ec4297fb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozNjozMlrOHZkxuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOTozNjozMlrOHZkxuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU3OTAwMw==", "bodyText": "Perhaps we could make this maybeCompleteQuotaExceededException and pass in the throwable, so that we can do the check for TimeoutException in that helper method rather than in every handleFailure?", "url": "https://github.com/apache/kafka/pull/9344#discussion_r496579003", "createdAt": "2020-09-29T09:36:32Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -1554,6 +1575,13 @@ private ConfigEntry configEntry(CreatableTopicConfigs config) {\n \n             @Override\n             void handleFailure(Throwable throwable) {\n+                // If there were any topics retries due to a quota exceeded exception, we propagate\n+                // the initial error back to the caller if the request timed out.\n+                if (options.shouldRetryOnQuotaViolation() && throwable instanceof TimeoutException) {\n+                    completeQuotaExceededException(futures, quotaExceededExceptions,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "af778cebd3094bd154e466ba9c2a5e05ec4297fb"}, "originalPosition": 83}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "503e39180f57eb0d2fc71266ee54c3e97ac4b3a9", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/503e39180f57eb0d2fc71266ee54c3e97ac4b3a9", "committedDate": "2020-09-29T11:34:38Z", "message": "Address comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NDE3OTkz", "url": "https://github.com/apache/kafka/pull/9344#pullrequestreview-498417993", "createdAt": "2020-09-29T12:33:56Z", "commit": {"oid": "503e39180f57eb0d2fc71266ee54c3e97ac4b3a9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 691, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}