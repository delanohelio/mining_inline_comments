{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyOTEyNjMz", "number": 7963, "title": "KAFKA-9235; Ensure transaction coordinator resigns after replica deletion", "bodyText": "During a reassignment, it can happen that the current leader of a partition is demoted and removed from the replica set at the same time. In this case, we rely on the StopReplica request in order to stop replica fetchers and to clear the group coordinator cache. This patch adds similar logic to ensure that the transaction coordinator state cache also gets cleared.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-01-15T01:19:50Z", "url": "https://github.com/apache/kafka/pull/7963", "merged": true, "mergeCommit": {"oid": "fbe2e604cc5b5a82afa3ec6eda956294fe5fea17"}, "closed": true, "closedAt": "2020-01-16T21:50:25Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6bGNEgH2gAyMzYyOTEyNjMzOjY2ZTM3OGMyNzNmODliMDkxODE1NmYwMTkwODYzODQ0M2YyZjYxNzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6tj2EgFqTM0MzU3NDIyNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "66e378c273f89b0918156f01908638443f2f6172", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/66e378c273f89b0918156f01908638443f2f6172", "committedDate": "2020-01-15T01:16:45Z", "message": "KAFKA-9235; Ensure transaction coordinator is stopped after replica deletion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTQyOTAz", "url": "https://github.com/apache/kafka/pull/7963#pullrequestreview-342942903", "createdAt": "2020-01-15T01:27:39Z", "commit": {"oid": "66e378c273f89b0918156f01908638443f2f6172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToyNzozOVrOFdq_Gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMToyNzozOVrOFdq_Gw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1NzMwNw==", "bodyText": "Note I got rid of this because there didn't seem to be a strong reason to do transaction state unloading asynchronously (all we do is remove a key from a map).", "url": "https://github.com/apache/kafka/pull/7963#discussion_r366657307", "createdAt": "2020-01-15T01:27:39Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionStateManager.scala", "diffHunk": "@@ -90,9 +90,6 @@ class TransactionStateManager(brokerId: Int,\n   /** partitions of transaction topic that are being loaded, state lock should be called BEFORE accessing this set */\n   private[transaction] val loadingPartitions: mutable.Set[TransactionPartitionAndLeaderEpoch] = mutable.Set()\n \n-  /** partitions of transaction topic that are being removed, state lock should be called BEFORE accessing this set */\n-  private[transaction] val leavingPartitions: mutable.Set[TransactionPartitionAndLeaderEpoch] = mutable.Set()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e378c273f89b0918156f01908638443f2f6172"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyOTQ1Mzc0", "url": "https://github.com/apache/kafka/pull/7963#pullrequestreview-342945374", "createdAt": "2020-01-15T01:37:18Z", "commit": {"oid": "66e378c273f89b0918156f01908638443f2f6172"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTozNzoxOFrOFdrHXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwMTozNzoxOFrOFdrHXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjY1OTQyMQ==", "bodyText": "Minor test bug fix here.", "url": "https://github.com/apache/kafka/pull/7963#discussion_r366659421", "createdAt": "2020-01-15T01:37:18Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/coordinator/transaction/TransactionStateManagerTest.scala", "diffHunk": "@@ -106,11 +107,103 @@ class TransactionStateManagerTest {\n \n     assertEquals(Right(None), transactionManager.getTransactionState(transactionalId1))\n     assertEquals(Right(CoordinatorEpochAndTxnMetadata(coordinatorEpoch, txnMetadata1)),\n-      transactionManager.putTransactionStateIfNotExists(transactionalId1, txnMetadata1))\n+      transactionManager.putTransactionStateIfNotExists(txnMetadata1))\n     assertEquals(Right(Some(CoordinatorEpochAndTxnMetadata(coordinatorEpoch, txnMetadata1))),\n       transactionManager.getTransactionState(transactionalId1))\n-    assertEquals(Right(CoordinatorEpochAndTxnMetadata(coordinatorEpoch, txnMetadata1)),\n-      transactionManager.putTransactionStateIfNotExists(transactionalId1, txnMetadata2))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66e378c273f89b0918156f01908638443f2f6172"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNTc0MjI3", "url": "https://github.com/apache/kafka/pull/7963#pullrequestreview-343574227", "createdAt": "2020-01-15T22:47:25Z", "commit": {"oid": "66e378c273f89b0918156f01908638443f2f6172"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2014, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}