{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNzI3MzQw", "number": 9607, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo1ODozNVrOE6RVHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo1ODo1MVrOE6RVeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTM2Nzk2OnYy", "diffSide": "RIGHT", "path": "docs/streams/developer-guide/dsl-api.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo1ODozNVrOH1O88Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNzo1MDowM1rOH1g0LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MTU1Mw==", "bodyText": "Maybe we should say non-windowed KTable -- \"plain\" does not sound technical.", "url": "https://github.com/apache/kafka/pull/9607#discussion_r525581553", "createdAt": "2020-11-17T22:58:35Z", "author": {"login": "mjsax"}, "path": "docs/streams/developer-guide/dsl-api.html", "diffHunk": "@@ -870,6 +870,12 @@ <h4 class=\"anchor-heading\"><a id=\"streams_concepts_globalktable\" class=\"anchor-l\n                 <p id=\"streams-developer-guide-dsl-transformations-stateful-overview\">Stateful transformations depend on state for processing inputs and producing outputs and require a <a class=\"reference internal\" href=\"../architecture.html#streams_architecture_state\"><span class=\"std std-ref\">state store</span></a> associated with the stream processor. For example, in aggregating operations, a windowing state store is used to collect the latest aggregation results per\n                     window. In join operations, a windowing state store is used to collect all of the records received so far within the\n                     defined window boundary.</p>\n+\t\t<p><b>Note:</b> Following store types are used regardless of the possibly specified type (via the parameter <code class=\"docutils literal\"><span class=\"pre\">materialized</span></code>):\n+\t\t<ul class=\"simple\">\n+\t\t    <li>non-windowed aggregations and plain KTables use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedKeyValueStore.html\">TimestampedKeyValueStore</a>s</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39eb477f02b189cd40f9594b2537088a2d594b8e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3NDIyMA==", "bodyText": "OK, will do.", "url": "https://github.com/apache/kafka/pull/9607#discussion_r525874220", "createdAt": "2020-11-18T07:50:03Z", "author": {"login": "fml2"}, "path": "docs/streams/developer-guide/dsl-api.html", "diffHunk": "@@ -870,6 +870,12 @@ <h4 class=\"anchor-heading\"><a id=\"streams_concepts_globalktable\" class=\"anchor-l\n                 <p id=\"streams-developer-guide-dsl-transformations-stateful-overview\">Stateful transformations depend on state for processing inputs and producing outputs and require a <a class=\"reference internal\" href=\"../architecture.html#streams_architecture_state\"><span class=\"std std-ref\">state store</span></a> associated with the stream processor. For example, in aggregating operations, a windowing state store is used to collect the latest aggregation results per\n                     window. In join operations, a windowing state store is used to collect all of the records received so far within the\n                     defined window boundary.</p>\n+\t\t<p><b>Note:</b> Following store types are used regardless of the possibly specified type (via the parameter <code class=\"docutils literal\"><span class=\"pre\">materialized</span></code>):\n+\t\t<ul class=\"simple\">\n+\t\t    <li>non-windowed aggregations and plain KTables use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedKeyValueStore.html\">TimestampedKeyValueStore</a>s</li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MTU1Mw=="}, "originalCommit": {"oid": "39eb477f02b189cd40f9594b2537088a2d594b8e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NTM2ODg5OnYy", "diffSide": "RIGHT", "path": "docs/streams/developer-guide/dsl-api.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMjo1ODo1MVrOH1O9iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNzo1MDozNFrOH1g1WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MTcwNA==", "bodyText": "kstream-kstream -> KStream-KStream", "url": "https://github.com/apache/kafka/pull/9607#discussion_r525581704", "createdAt": "2020-11-17T22:58:51Z", "author": {"login": "mjsax"}, "path": "docs/streams/developer-guide/dsl-api.html", "diffHunk": "@@ -870,6 +870,12 @@ <h4 class=\"anchor-heading\"><a id=\"streams_concepts_globalktable\" class=\"anchor-l\n                 <p id=\"streams-developer-guide-dsl-transformations-stateful-overview\">Stateful transformations depend on state for processing inputs and producing outputs and require a <a class=\"reference internal\" href=\"../architecture.html#streams_architecture_state\"><span class=\"std std-ref\">state store</span></a> associated with the stream processor. For example, in aggregating operations, a windowing state store is used to collect the latest aggregation results per\n                     window. In join operations, a windowing state store is used to collect all of the records received so far within the\n                     defined window boundary.</p>\n+\t\t<p><b>Note:</b> Following store types are used regardless of the possibly specified type (via the parameter <code class=\"docutils literal\"><span class=\"pre\">materialized</span></code>):\n+\t\t<ul class=\"simple\">\n+\t\t    <li>non-windowed aggregations and plain KTables use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedKeyValueStore.html\">TimestampedKeyValueStore</a>s</li>\n+\t\t    <li>time-windowed aggregations and kstream-kstream joins use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedWindowStore.html\">TimestampedWindowStore</a>s</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39eb477f02b189cd40f9594b2537088a2d594b8e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTg3NDUyMQ==", "bodyText": "OK, will do.\nWhy did the build fail?", "url": "https://github.com/apache/kafka/pull/9607#discussion_r525874521", "createdAt": "2020-11-18T07:50:34Z", "author": {"login": "fml2"}, "path": "docs/streams/developer-guide/dsl-api.html", "diffHunk": "@@ -870,6 +870,12 @@ <h4 class=\"anchor-heading\"><a id=\"streams_concepts_globalktable\" class=\"anchor-l\n                 <p id=\"streams-developer-guide-dsl-transformations-stateful-overview\">Stateful transformations depend on state for processing inputs and producing outputs and require a <a class=\"reference internal\" href=\"../architecture.html#streams_architecture_state\"><span class=\"std std-ref\">state store</span></a> associated with the stream processor. For example, in aggregating operations, a windowing state store is used to collect the latest aggregation results per\n                     window. In join operations, a windowing state store is used to collect all of the records received so far within the\n                     defined window boundary.</p>\n+\t\t<p><b>Note:</b> Following store types are used regardless of the possibly specified type (via the parameter <code class=\"docutils literal\"><span class=\"pre\">materialized</span></code>):\n+\t\t<ul class=\"simple\">\n+\t\t    <li>non-windowed aggregations and plain KTables use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedKeyValueStore.html\">TimestampedKeyValueStore</a>s</li>\n+\t\t    <li>time-windowed aggregations and kstream-kstream joins use <a class=\"reference external\" href=\"/{{version}}/javadoc/org/apache/kafka/streams/state/TimestampedWindowStore.html\">TimestampedWindowStore</a>s</li>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTU4MTcwNA=="}, "originalCommit": {"oid": "39eb477f02b189cd40f9594b2537088a2d594b8e"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3871, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}