{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5MDMzODE1", "number": 9744, "title": "KAFKA-10062: Add a method to retrieve the current timestamp as known by the Streams app", "bodyText": "KIP 622: https://cwiki.apache.org/confluence/display/KAFKA/KIP-622%3A+Add+currentSystemTimeMs+and+currentStreamTimeMs+to+ProcessorContext\njira: https://issues.apache.org/jira/browse/KAFKA-10062\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-13T22:33:06Z", "url": "https://github.com/apache/kafka/pull/9744", "merged": true, "mergeCommit": {"oid": "029f5a136ae2c74f7f93e716bcc30ce90d8241ad"}, "closed": true, "closedAt": "2021-03-10T22:26:24Z", "author": {"login": "rohitrmd"}, "timelineItems": {"totalCount": 33, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlCLHVgH2gAyNTM5MDMzODE1OmQ0M2RkZGZkNDE0MDkwZWNhZmUzZjBjODM1MjNhOTYxMzZjMWY2ZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABeBkWPJgH2gAyNTM5MDMzODE1OmRkMTY2OTZjZDZjNDQ4NWFlYjg2NDliNDhjNGU4MWQ0MDJiYzg1N2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d43dddfd414090ecafe3f0c83523a96136c1f6e7", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/d43dddfd414090ecafe3f0c83523a96136c1f6e7", "committedDate": "2020-12-11T06:44:23Z", "message": "initial set of changes for returning time constructs from processor contexts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c9f96659ee70486bc70615610231138951f4c7d", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/5c9f96659ee70486bc70615610231138951f4c7d", "committedDate": "2020-12-12T08:20:15Z", "message": "added tests in MockProcessorContextTest and TopologyTestDriverTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c066de331414a4739abf93ac8ca63280eefa9288", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/c066de331414a4739abf93ac8ca63280eefa9288", "committedDate": "2020-12-12T08:33:00Z", "message": "fixed merge conflicts with latest trunk"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f67bae1412fd8b40ad91cda2bc9f5403b0620667", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/f67bae1412fd8b40ad91cda2bc9f5403b0620667", "committedDate": "2020-12-12T08:42:08Z", "message": "refactoring for naming convention and removing redundant method from InternalProcessorContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f15ddd35669e70224800dadfeac5b0edd991d456", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/f15ddd35669e70224800dadfeac5b0edd991d456", "committedDate": "2020-12-13T21:27:39Z", "message": "fixed naming for currentSystemTimeMs method in StreamTask"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "37f2e322f19d50dce9e4ac8fab9ad9165d804a8b", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/37f2e322f19d50dce9e4ac8fab9ad9165d804a8b", "committedDate": "2020-12-13T21:50:12Z", "message": "added unsupported methods to storeToProcessorContextAdapter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "520df6f1019ec3805436c4f8203b0cc4577295c5", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/520df6f1019ec3805436c4f8203b0cc4577295c5", "committedDate": "2020-12-13T21:53:32Z", "message": "added tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49e0075339e28f7da12a432135b96a1d73fe47e3", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/49e0075339e28f7da12a432135b96a1d73fe47e3", "committedDate": "2020-12-23T04:01:59Z", "message": "getting rid of current system time from bstractProcessorContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23da9d15f5305e3b715c56f7357cfa15c11d46d9", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/23da9d15f5305e3b715c56f7357cfa15c11d46d9", "committedDate": "2020-12-23T06:08:33Z", "message": "adding new test method to StreamTask to set wall clock time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39f8586ba650cd9c8d8accdd1792ca6414c04b48", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/39f8586ba650cd9c8d8accdd1792ca6414c04b48", "committedDate": "2020-12-23T06:23:58Z", "message": "removing get/set currSystemMs method from Abstract processor context"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/b9dfc196aaee91f4fa23fe6563261c6f2d01ac33", "committedDate": "2020-12-24T05:26:55Z", "message": "global context impl has to return system time"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5MzU4MTc5", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-559358179", "createdAt": "2020-12-29T02:32:07Z", "commit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "state": "COMMENTED", "comments": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMjozMjowN1rOIMFo-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwMzozMjo0NlrOIMGNpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0NjIzNA==", "bodyText": "nit: Return without s -- we use imperative to write JavaDocs.\nI would remove cached and add a dedicated second sentence about it. Also wall-clock time and system time are synonymous and thus wall-clock system time sounds a little odd.\nWhat about:\nReturn the current system timestamp (also called wall-clock time) in milliseconds.\n<p>\nNote: this method returns the internally cached system timestamp from the Kafka Stream runtime. Thus, it may return a different value compared to `System.currentTimeMillis()`.\n<p>\nFor a global processor, Kafka Streams does not cache system time and thus calling this method will return the same value as `System.currentTimeMillis()`.\n\n@return the current system timestamp in milliseconds", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549546234", "createdAt": "2020-12-29T02:32:07Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +289,17 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Returns current cached wall-clock system timestamp in milliseconds.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0NjY4Nw==", "bodyText": "What about:\nReturn the current stream-time in milliseconds.\n<p>\nStream-time is the maximum observed {@link TimestampExtractor record timestamp} so far\n(including the currently processed record), i.e., it can be considered a high-watermark.\nStream-time is tracked on a per-task basis and is preserved across restarts and during task migration.\n<p>\nNote: this method is not supported for global processors (cf. {@link Topology#addGlobalStore(...)}\nand {@link StreamsBuilder#addGlobalStore(...)}, because there is no concept of stream-time for this case.\nCalling this method in a global processor with result in an {@link UnsupportedOperationException}.\n\n@return the current stream-time in milliseconds", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549546687", "createdAt": "2020-12-29T02:35:19Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +289,17 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Returns current cached wall-clock system timestamp in milliseconds.\n+     *\n+     * @return the current cached wall-clock system timestamp in milliseconds\n+     */\n+    long currentSystemTimeMs();\n+\n+    /**\n+     * Returns the maximum timestamp of any record yet processed by the task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0NzMzMQ==", "bodyText": "Why do we throw here? It seems to be safe to get the time from delegate object? We only disable forward but nothing else. (same below)", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549547331", "createdAt": "2020-12-29T02:39:01Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ForwardingDisabledProcessorContext.java", "diffHunk": "@@ -166,4 +166,14 @@ public long timestamp() {\n     public Map<String, Object> appConfigsWithPrefix(final String prefix) {\n         return delegate.appConfigsWithPrefix(prefix);\n     }\n+\n+    @Override\n+    public long currentSystemTimeMs() {\n+        throw new UnsupportedOperationException(\"this method is not supported in ForwardingDisabledProcessor context\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0ODEzOA==", "bodyText": "This makes sense, but we might want to document this somewhere else, ie, in the corresponding docs. To be fair, not sure atm, if we have much content about it and/or where it add it?\nWe should for sure document it in the JavaDocs, ie, the ProcessorContext interface. (cf my comment above)\nAbout the error message:\nthrow new UnsupportedOperationException(\"There is no concept of stream-time for a global processor.\");", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549548138", "createdAt": "2020-12-29T02:44:38Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalProcessorContextImpl.java", "diffHunk": "@@ -115,6 +116,16 @@ public void commit() {\n         //no-op\n     }\n \n+    @Override\n+    public long currentSystemTimeMs() {\n+        return Time.SYSTEM.milliseconds();\n+    }\n+\n+    @Override\n+    public long currentStreamTimeMs() {\n+        throw new UnsupportedOperationException(\"this method is not supported in global processor context.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0OTYwNg==", "bodyText": "We should pass in a Time reference to the GlobalProcessorContextImpl and call time.milliseconds() here -- otherwise, we cannot mock the time (cf. TopologyTestDriver) for testing", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549549606", "createdAt": "2020-12-29T02:54:15Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalProcessorContextImpl.java", "diffHunk": "@@ -115,6 +116,16 @@ public void commit() {\n         //no-op\n     }\n \n+    @Override\n+    public long currentSystemTimeMs() {\n+        return Time.SYSTEM.milliseconds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU0OTk4OA==", "bodyText": "We should align the error message to the ones from above: \"StateStores can't access system time.\" (same below).", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549549988", "createdAt": "2020-12-29T02:56:21Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreToProcessorContextAdapter.java", "diffHunk": "@@ -160,4 +160,14 @@ public long timestamp() {\n     public Map<String, Object> appConfigsWithPrefix(final String prefix) {\n         return delegate.appConfigsWithPrefix(prefix);\n     }\n+\n+    @Override\n+    public long currentSystemTimeMs() {\n+        throw new UnsupportedOperationException(\"this method is not supported in StoreToProcessorContextAdapter\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MDQ0MQ==", "bodyText": "Why is this public now? It seems it's only newly called in ProcessorContextImpl that is in the same package and thus it can stay (default) package-private.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549550441", "createdAt": "2020-12-29T02:58:47Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -1111,13 +1111,21 @@ RecordCollector recordCollector() {\n         return recordCollector;\n     }\n \n+    public long streamTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MDY0Mg==", "bodyText": "As above: seems this can be package-private?", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549550642", "createdAt": "2020-12-29T03:00:08Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -1111,13 +1111,21 @@ RecordCollector recordCollector() {\n         return recordCollector;\n     }\n \n+    public long streamTime() {\n+        return partitionGroup.streamTime();\n+    }\n+\n+    public long currentSystemTimeMs() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MDgwNg==", "bodyText": "Yes, Time is always wall-clock time -- comment seems unnecessary", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549550806", "createdAt": "2020-12-29T03:01:30Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -70,7 +70,8 @@\n     // visible for testing\n     static final byte LATEST_MAGIC_BYTE = 1;\n \n-    private final Time time;\n+    // This time is wall clock time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MDg1OA==", "bodyText": "I think we should keep this as final (compare my other comments).", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549550858", "createdAt": "2020-12-29T03:01:55Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -70,7 +70,8 @@\n     // visible for testing\n     static final byte LATEST_MAGIC_BYTE = 1;\n \n-    private final Time time;\n+    // This time is wall clock time\n+    private Time time;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MDk0OQ==", "bodyText": "I don't think we need this method (cf. my other comment in the test code where it is used).", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549550949", "createdAt": "2020-12-29T03:02:26Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -1111,13 +1111,21 @@ RecordCollector recordCollector() {\n         return recordCollector;\n     }\n \n+    public long streamTime() {\n+        return partitionGroup.streamTime();\n+    }\n+\n+    public long currentSystemTimeMs() {\n+        return time.milliseconds(); \n+    }\n+\n     // below are visible for testing only\n     int numBuffered() {\n         return partitionGroup.numBuffered();\n     }\n \n-    long streamTime() {\n-        return partitionGroup.streamTime();\n+    void setTime(final Time time) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MTIyOQ==", "bodyText": "This test seems not to be useful, as it tests the TestProcessorContext from below.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549551229", "createdAt": "2020-12-29T03:04:19Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/AbstractProcessorContextTest.java", "diffHunk": "@@ -179,6 +179,10 @@ public void appConfigsShouldReturnUnrecognizedValues() {\n             equalTo(\"user-supplied-value\"));\n     }\n \n+    @Test(expected = UnsupportedOperationException.class)\n+    public void shouldThrowOnCurrentStreamTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MTYyMg==", "bodyText": "This should be two tests, one for each method.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549551622", "createdAt": "2020-12-29T03:06:37Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorContextImplTest.java", "diffHunk": "@@ -555,6 +559,12 @@ public void shouldThrowUnsupportedOperationExceptionOnRecordContext() {\n         );\n     }\n \n+    @Test\n+    public void shouldMatchSystemAndStreamTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MjMzNQ==", "bodyText": "Thanks for adding a test!!!\nWould you mind to add tests for all other methods of StoreToProcessorContextAdapter, too, to get full test coverage as a side improvement?", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549552335", "createdAt": "2020-12-29T03:11:05Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreToProcessorContextAdapterTest.java", "diffHunk": "@@ -0,0 +1,48 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.processor.internals;\n+\n+import org.apache.kafka.streams.processor.ProcessorContext;\n+import org.apache.kafka.streams.processor.StateStoreContext;\n+import org.easymock.EasyMockRunner;\n+import org.easymock.Mock;\n+import org.easymock.MockType;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+@RunWith(EasyMockRunner.class)\n+public class StoreToProcessorContextAdapterTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1Mjc2OA==", "bodyText": "We have already a global MockTime object in this test that we should reused instead of creating a new one. This way, we can avoid to add setTime and keep the Time member variable final. -- Or is there a reason why we cannot reuse the global MockTime object?\nAlso, I don't really see any call to the newly added methods in this test, so why do we change this test method at all?", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549552768", "createdAt": "2020-12-29T03:14:01Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -494,7 +494,9 @@ public void process(final Record<Integer, Integer> record) {\n \n         // e2e latency = 10\n         task.addRecords(partition1, singletonList(getConsumerRecord(0, 0L)));\n-        task.process(10L);\n+        time = new MockTime(0L, 10L, 0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MjgwMQ==", "bodyText": "Why do we not keep task.process(10L); ? Similar below.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549552801", "createdAt": "2020-12-29T03:14:16Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -494,7 +494,9 @@ public void process(final Record<Integer, Integer> record) {\n \n         // e2e latency = 10\n         task.addRecords(partition1, singletonList(getConsumerRecord(0, 0L)));\n-        task.process(10L);\n+        time = new MockTime(0L, 10L, 0L);\n+        task.setTime(time);\n+        task.process(time.milliseconds());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MzI0Mw==", "bodyText": "nit: revert insert of additional space", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549553243", "createdAt": "2020-12-29T03:16:44Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/test/InternalMockProcessorContext.java", "diffHunk": "@@ -116,7 +117,7 @@ public InternalMockProcessorContext(final StreamsMetricsImpl streamsMetrics) {\n         );\n     }\n \n-    public InternalMockProcessorContext(final File stateDir,\n+    public  InternalMockProcessorContext(final File stateDir,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1MzUzOQ==", "bodyText": "We should pass in a Time parameter into the constructor of InternalMockProcessorContext and return time.milliseconds() here so we can mock the time.\nIf this method is unused, it's also ok to just throw an exception for now and we add mocking capabilities later when needed.\n(Same below.)", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549553539", "createdAt": "2020-12-29T03:18:36Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/test/InternalMockProcessorContext.java", "diffHunk": "@@ -369,6 +370,16 @@ public long timestamp() {\n         return recordContext.timestamp();\n     }\n \n+    @Override\n+    public long currentSystemTimeMs() {\n+        return Time.SYSTEM.milliseconds();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1Mzg0MA==", "bodyText": "The purpose of this class seems to be to allow mocking the time -- given that we add proper time support now, I am wondering if we can actually delete the whole class?", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549553840", "createdAt": "2020-12-29T03:20:53Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/test/MockInternalProcessorContext.java", "diffHunk": "@@ -55,14 +55,9 @@ public MockInternalProcessorContext(final Properties config, final TaskId taskId\n         super(config, taskId, stateDir);\n     }\n \n-    @Override\n-    public void setSystemTimeMs(long timeMs) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1NDA0NQ==", "bodyText": "Nit: I guess we could add support if needed. Maybe better say \"Not implemented yet.\" ? (Same below.)", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549554045", "createdAt": "2020-12-29T03:22:24Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/test/NoOpProcessorContext.java", "diffHunk": "@@ -120,6 +120,16 @@ public Cancellable schedule(final Duration interval,\n     @Override\n     public void commit() {}\n \n+    @Override\n+    public long currentSystemTimeMs() {\n+        throw new UnsupportedOperationException(\"this method is not supported in NoOpProcessorContext\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1NDA4OQ==", "bodyText": "I don't think we need this change. The new test you added below, seem to re-test ProcessorContextImpl that is already tested in ProcessorContextImplTest and thus we don't need those.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549554089", "createdAt": "2020-12-29T03:22:51Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java", "diffHunk": "@@ -505,7 +506,7 @@ private void setupTask(final StreamsConfig streamsConfig,\n                 streamsMetrics\n             );\n \n-            final InternalProcessorContext context = new ProcessorContextImpl(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1NTAxOQ==", "bodyText": "timestamp is the current record timestamp and thus should not be returned here (same below).\nI seems, we need to actually extend this test-util class, what is a small change to the KIP. Note, that test-utils are public API and thus those changes also need a KIP. You don't need to worry about your KIP, we can just update it accordingly.\nSeems, we need to have two more internal fields, one for each time. The public API change would be to add corresponding setters. We might also rename setTimestamp to setRecordTimestamp for clarity, we we would have three setters for record, system, and stream time.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549555019", "createdAt": "2020-12-29T03:28:34Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java", "diffHunk": "@@ -261,6 +261,16 @@ public TaskId taskId() {\n         return config.originalsWithPrefix(prefix);\n     }\n \n+    @Override\n+    public long currentSystemTimeMs() {\n+        return timestamp;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1NTYyMw==", "bodyText": "I think we can remove those two new tests.\nIf you really want to test it, you should rather add a Processor to the Topology that gets the current system and stream time and verify it this way, ie, we should rather add an integration test than a unit test.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r549555623", "createdAt": "2020-12-29T03:32:46Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/test/java/org/apache/kafka/streams/TopologyTestDriverTest.java", "diffHunk": "@@ -1878,4 +1877,33 @@ public void shouldRespectTaskIdling() {\n             );\n         }\n     }\n+\n+    @Test\n+    public void shouldMatchSystemTime() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/3c0d99d24295618d657005607cf5d5a0c88bed83", "committedDate": "2021-01-04T06:57:15Z", "message": "part 1: made changes as per review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODMyNDcz", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-566832473", "createdAt": "2021-01-13T01:38:19Z", "commit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMTozODoyMFrOIScMLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMTozODoyMFrOIScMLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIwNzE1MQ==", "bodyText": "nit (not introduced in this PR, but would be a nice side cleanup): rename to currentSystemTime(...)", "url": "https://github.com/apache/kafka/pull/9744#discussion_r556207151", "createdAt": "2021-01-13T01:38:20Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorContextUtils.java", "diffHunk": "@@ -39,9 +39,7 @@ private ProcessorContextUtils() {}\n      * removing the need for this method.\n      */\n     public static long getCurrentSystemTime(final ProcessorContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83"}, "originalPosition": 3}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY2ODMzMjY0", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-566833264", "createdAt": "2021-01-13T01:40:34Z", "commit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMTo0MDozNFrOIScO1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xM1QwMTo0MDozNFrOIScO1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIwNzgzMQ==", "bodyText": "@guozhangwang -- I am just wondering if removing this variable (what I think conceptually makes sense) might have an perf impact as it seems currentSystemTimeMs acts as some kind of cache -- and instead of using the cached time, we would call time.currentTimeMillis() in ProcessorContextImpl#forwardInternal() now.\nThoughts?", "url": "https://github.com/apache/kafka/pull/9744#discussion_r556207831", "createdAt": "2021-01-13T01:40:34Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.java", "diffHunk": "@@ -45,7 +45,6 @@\n     private boolean initialized;\n     protected ProcessorRecordContext recordContext;\n     protected ProcessorNode<?, ?, ?, ?> currentNode;\n-    private long currentSystemTimeMs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca2e80091864359d102805c12c167ec2c43e512d", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/ca2e80091864359d102805c12c167ec2c43e512d", "committedDate": "2021-01-17T19:41:41Z", "message": "part 2: made changes as per review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d124ff5c647c483e6501f3cf301be9c9c5f3dc6c", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/d124ff5c647c483e6501f3cf301be9c9c5f3dc6c", "committedDate": "2021-01-18T20:55:12Z", "message": "part 3: review: added time parameter to InternalMockProcessorContext constructor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2df788fd336646572bd41b3e90c2de9b736fb371", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/2df788fd336646572bd41b3e90c2de9b736fb371", "committedDate": "2021-01-19T01:57:13Z", "message": "part 4: review: added separate stream and system time fields in MockProcessorContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82e0d9307d44a935431e27f22a5db3635d4dcc0", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/e82e0d9307d44a935431e27f22a5db3635d4dcc0", "committedDate": "2021-01-24T03:19:33Z", "message": "part 5; minor refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2103993cd2555d2575375cdee434e203980b903b", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/2103993cd2555d2575375cdee434e203980b903b", "committedDate": "2021-01-24T06:44:39Z", "message": "part 6: added tests for StoreToProcessorContextAdapter"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2OTQzNDE1", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-576943415", "createdAt": "2021-01-27T03:03:18Z", "commit": {"oid": "2103993cd2555d2575375cdee434e203980b903b"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QwMzowMzoxOVrOIa0ZQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yN1QwMzoyNDowMVrOIa0x_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDk5MjMyMQ==", "bodyText": "typo: with -> will", "url": "https://github.com/apache/kafka/pull/9744#discussion_r564992321", "createdAt": "2021-01-27T03:03:19Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,36 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to `System.currentTimeMillis()`.\n+     * <p>\n+     *\n+     * For a global processor, Kafka Streams does not cache system time and thus calling this method will return\n+     * the same value as `System.currentTimeMillis()`.\n+     *\n+     * @return the current system timestamp in milliseconds\n+     */\n+    long currentSystemTimeMs();\n+\n+    /**\n+     * Return the current stream-time in milliseconds.\n+     *\n+     * <p>\n+     * Stream-time is the maximum observed {@link TimestampExtractor record timestamp} so far\n+     * (including the currently processed record), i.e., it can be considered a high-watermark.\n+     * Stream-time is tracked on a per-task basis and is preserved across restarts and during task migration.\n+     * <p>\n+     *\n+     * Note: this method is not supported for global processors (cf. {@link Topology#addGlobalStore} (...)\n+     * and {@link StreamsBuilder#addGlobalStore} (...),\n+     * because there is no concept of stream-time for this case.\n+     * Calling this method in a global processor with result in an {@link UnsupportedOperationException}.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2103993cd2555d2575375cdee434e203980b903b"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDk5MjcyOQ==", "bodyText": "nit:\n`System.currentTimeMillis()` -> {@code System.currentTimeMillis()} \n\nor: {link System#currentTimeMillis()}", "url": "https://github.com/apache/kafka/pull/9744#discussion_r564992729", "createdAt": "2021-01-27T03:04:45Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,36 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to `System.currentTimeMillis()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2103993cd2555d2575375cdee434e203980b903b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDk5Mjc1Ng==", "bodyText": "as above", "url": "https://github.com/apache/kafka/pull/9744#discussion_r564992756", "createdAt": "2021-01-27T03:04:51Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,36 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to `System.currentTimeMillis()`.\n+     * <p>\n+     *\n+     * For a global processor, Kafka Streams does not cache system time and thus calling this method will return\n+     * the same value as `System.currentTimeMillis()`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2103993cd2555d2575375cdee434e203980b903b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDk5MzI1NQ==", "bodyText": "@rohitrmd did you see Guozhang comment? Seems we should not remove this variable (what is a little unfortunate, but I guess desirable behavior) -- maybe we can rename it to cachedSystemTimeMs?\nI guess we want the caching for the GlobalProcessorContext, too? (For this case, we would need to update the JavaDocs of the ProcessorContext interface accordingly.)\nWe should also add a test for the corresponding contest-test classes that they don't advance system time automatically, but only in the advance is triggered explicitly.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r564993255", "createdAt": "2021-01-27T03:06:23Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractProcessorContext.java", "diffHunk": "@@ -45,7 +45,6 @@\n     private boolean initialized;\n     protected ProcessorRecordContext recordContext;\n     protected ProcessorNode<?, ?, ?, ?> currentNode;\n-    private long currentSystemTimeMs;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1NjIwNzgzMQ=="}, "originalCommit": {"oid": "3c0d99d24295618d657005607cf5d5a0c88bed83"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDk5ODY1NA==", "bodyText": "I guess a follow up PR works, too.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r564998654", "createdAt": "2021-01-27T03:24:01Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/test/MockInternalProcessorContext.java", "diffHunk": "@@ -55,14 +55,9 @@ public MockInternalProcessorContext(final Properties config, final TaskId taskId\n         super(config, taskId, stateDir);\n     }\n \n-    @Override\n-    public void setSystemTimeMs(long timeMs) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU1Mzg0MA=="}, "originalCommit": {"oid": "b9dfc196aaee91f4fa23fe6563261c6f2d01ac33"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e39671daa11c2393b789e9ac3921aa099db6f037", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/e39671daa11c2393b789e9ac3921aa099db6f037", "committedDate": "2021-01-29T05:52:26Z", "message": "part 7: review: refactored comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b464a30cabd8533060349c3a9c7bf94cdde51572", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/b464a30cabd8533060349c3a9c7bf94cdde51572", "committedDate": "2021-02-07T03:25:53Z", "message": "part 9: review: added cached time to AbstractProcessorContext"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c74fa5863da649d82008f3a4ab8f157c39b8199", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/8c74fa5863da649d82008f3a4ab8f157c39b8199", "committedDate": "2021-02-07T03:32:44Z", "message": "Merge branch 'trunk' into KAFKA-10062"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69c680579f575695bc3dd62587683a7ad55156a1", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/69c680579f575695bc3dd62587683a7ad55156a1", "committedDate": "2021-02-07T04:07:23Z", "message": "minor refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b95faccf8a2d6152a39a6f89544bb2bb26c644b2", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/b95faccf8a2d6152a39a6f89544bb2bb26c644b2", "committedDate": "2021-02-10T05:12:07Z", "message": "part 10: review fix comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjAzMjgwMzM4", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-603280338", "createdAt": "2021-03-03T19:43:30Z", "commit": {"oid": "b95faccf8a2d6152a39a6f89544bb2bb26c644b2"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wM1QxOTo0MzozMFrOIvi-eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wNFQwMTo0MTo0OFrOIvxFTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4NjcyNzAzMw==", "bodyText": "nit. can be removed", "url": "https://github.com/apache/kafka/pull/9744#discussion_r586727033", "createdAt": "2021-03-03T19:43:30Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,33 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to {@code System.currentTimeMillis()} .\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b95faccf8a2d6152a39a6f89544bb2bb26c644b2"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU4Njk1ODE1OA==", "bodyText": "This class is public API, so we cannot remove setTimestamp but can only deprecate it.\nWe also need to update the KIP to mention the deprecation and the newly added methods.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r586958158", "createdAt": "2021-03-04T01:41:48Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java", "diffHunk": "@@ -353,11 +371,19 @@ public void setHeaders(final Headers headers) {\n      * The context exposes this metadata for use in the processor. Normally, they are set by the Kafka Streams framework,\n      * but for the purpose of driving unit tests, you can set it directly. Setting this attribute doesn't affect the others.\n      *\n-     * @param timestamp A record timestamp\n+     * @param recordTimestamp A record timestamp\n      */\n     @SuppressWarnings({\"WeakerAccess\", \"unused\"})\n-    public void setTimestamp(final long timestamp) {\n-        this.timestamp = timestamp;\n+    public void setRecordTimestamp(final long recordTimestamp) {\n+        this.recordTimestamp = recordTimestamp;\n+    }\n+\n+    public void setCurrentSystemTimeMs(final long currentSystemTimeMs) {\n+        this.currentSystemTimeMs = currentSystemTimeMs;\n+    }\n+\n+    public void setCurrentStreamTimeMs(final long currentStreamTimeMs) {\n+        this.currentStreamTimeMs = currentStreamTimeMs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b95faccf8a2d6152a39a6f89544bb2bb26c644b2"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85405047d8d0e5782aebabf91a430a8888898d4d", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/85405047d8d0e5782aebabf91a430a8888898d4d", "committedDate": "2021-03-05T02:20:16Z", "message": "part 11: review :made changes as per review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c", "author": {"user": {"login": "rohitrmd", "name": "Rohit Deshpande"}}, "url": "https://github.com/apache/kafka/commit/d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c", "committedDate": "2021-03-05T02:48:40Z", "message": "fix incorrect comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NjA4MTU1OTQz", "url": "https://github.com/apache/kafka/pull/9744#pullrequestreview-608155943", "createdAt": "2021-03-09T22:20:44Z", "commit": {"oid": "d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wOVQyMjoyMDo0NFrOIzZg8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMy0wOVQyMjoyMjoyM1rOIzZnSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDc2NjMyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Thus, it may return a different value compared to {@code System.currentTimeMillis()}\n          \n          \n            \n                 * Thus, it may return a different value compared to {@code System.currentTimeMillis()}.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r590766321", "createdAt": "2021-03-09T22:20:44Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,33 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to {@code System.currentTimeMillis()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDc2NjQ2MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * <p>", "url": "https://github.com/apache/kafka/pull/9744#discussion_r590766461", "createdAt": "2021-03-09T22:20:56Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java", "diffHunk": "@@ -289,4 +291,33 @@ Cancellable schedule(final Duration interval,\n      */\n     Map<String, Object> appConfigsWithPrefix(final String prefix);\n \n+    /**\n+     * Return the current system timestamp (also called wall-clock time) in milliseconds.\n+     *\n+     * <p>\n+     * Note: this method returns the internally cached system timestamp from the Kafka Stream runtime.\n+     * Thus, it may return a different value compared to {@code System.currentTimeMillis()}\n+     * <p>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU5MDc2Nzk0Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @deprecated Use {@link MockProcessorContext#setRecordTimestamp(long)} instead.\n          \n          \n            \n                 * @deprecated Since 3.0.0; use {@link MockProcessorContext#setRecordTimestamp(long)} instead.", "url": "https://github.com/apache/kafka/pull/9744#discussion_r590767946", "createdAt": "2021-03-09T22:22:23Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java", "diffHunk": "@@ -354,10 +372,31 @@ public void setHeaders(final Headers headers) {\n      * but for the purpose of driving unit tests, you can set it directly. Setting this attribute doesn't affect the others.\n      *\n      * @param timestamp A record timestamp\n+     * @deprecated Use {@link MockProcessorContext#setRecordTimestamp(long)} instead.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d49ab3a184b1ad186fc2a19e29bab3bc3e424a1c"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0e3446e4c0f19f16ec359af7cb5847a25297a2d", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/a0e3446e4c0f19f16ec359af7cb5847a25297a2d", "committedDate": "2021-03-09T22:22:53Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cfd394ababc343fc958250f5c800d8d206447776", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/cfd394ababc343fc958250f5c800d8d206447776", "committedDate": "2021-03-09T22:22:59Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/ProcessorContext.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd16696cd6c4485aeb8649b48c4e81d402bc857d", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/dd16696cd6c4485aeb8649b48c4e81d402bc857d", "committedDate": "2021-03-09T22:23:11Z", "message": "Update streams/test-utils/src/main/java/org/apache/kafka/streams/processor/MockProcessorContext.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2288, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}