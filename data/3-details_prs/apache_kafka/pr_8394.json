{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NDA3OTE2", "number": 8394, "title": "KAFKA-8107; Flaky Test kafka.api.ClientIdQuotaTest.testQuotaOverrideDelete", "bodyText": "This PR adds a waitForQuotaUpdate after the quotas are removed. It also changes the default request quota to Long.MaxValue.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-31T15:19:59Z", "url": "https://github.com/apache/kafka/pull/8394", "merged": true, "mergeCommit": {"oid": "4c9f5cf7c3217cf802ce233a0093586dcf5a1b7c"}, "closed": true, "closedAt": "2020-04-07T20:32:17Z", "author": {"login": "dajac"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTEr_ngH2gAyMzk2NDA3OTE2OmQ5ZmZlZDY0ZTFiNTEzMTZhY2U2ZTYzMGI0Y2NiNjA4ZDM5ZjdlZGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcVYgpEAFqTM4OTQyNzEwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d9ffed64e1b51316ace6e630b4ccb608d39f7eda", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/d9ffed64e1b51316ace6e630b4ccb608d39f7eda", "committedDate": "2020-03-31T15:18:19Z", "message": "KAFKA-8107; Flaky Test kafka.api.ClientIdQuotaTest.testQuotaOverrideDelete"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0OTQ0OTc5", "url": "https://github.com/apache/kafka/pull/8394#pullrequestreview-384944979", "createdAt": "2020-03-31T17:19:33Z", "commit": {"oid": "d9ffed64e1b51316ace6e630b4ccb608d39f7eda"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MzAzNzI2", "url": "https://github.com/apache/kafka/pull/8394#pullrequestreview-385303726", "createdAt": "2020-04-01T06:45:36Z", "commit": {"oid": "d9ffed64e1b51316ace6e630b4ccb608d39f7eda"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjo0NTozNlrOF-y25g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjo0NTozNlrOF-y25g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM4OTI4Ng==", "bodyText": "Why do we use Long.MaxValue here and Int.MaxValue in the base class?", "url": "https://github.com/apache/kafka/pull/8394#discussion_r401389286", "createdAt": "2020-04-01T06:45:36Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/api/ClientIdQuotaTest.scala", "diffHunk": "@@ -26,6 +26,10 @@ class ClientIdQuotaTest extends BaseQuotaTest {\n   override def producerClientId = \"QuotasTestProducer-!@#$%^&*()\"\n   override def consumerClientId = \"QuotasTestConsumer-!@#$%^&*()\"\n \n+  // The test does not setup a default request limit and thus default to Long.MaxValue\n+  // which is the default value used when a quota does not exist.\n+  override def defaultRequestQuota: Double = Long.MaxValue\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9ffed64e1b51316ace6e630b4ccb608d39f7eda"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b044647ab82055a61520c33f43b11057f030fc7", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/5b044647ab82055a61520c33f43b11057f030fc7", "committedDate": "2020-04-03T12:12:46Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5MTIxODQ1", "url": "https://github.com/apache/kafka/pull/8394#pullrequestreview-389121845", "createdAt": "2020-04-07T13:35:53Z", "commit": {"oid": "5b044647ab82055a61520c33f43b11057f030fc7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNTo1M1rOGCD3mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzozNTo1M1rOGCD3mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxMzcyMw==", "bodyText": "Can you please add a toDouble call here? This silent conversion triggers a warning in Scala 2.13.", "url": "https://github.com/apache/kafka/pull/8394#discussion_r404813723", "createdAt": "2020-04-07T13:35:53Z", "author": {"login": "ijuma"}, "path": "core/src/test/scala/integration/kafka/api/BaseQuotaTest.scala", "diffHunk": "@@ -57,9 +57,9 @@ abstract class BaseQuotaTest extends IntegrationTestHarness {\n   this.consumerConfig.setProperty(ConsumerConfig.FETCH_MAX_WAIT_MS_CONFIG, \"0\")\n \n   // Low enough quota that a producer sending a small payload in a tight loop should get throttled\n-  val defaultProducerQuota = 8000\n-  val defaultConsumerQuota = 2500\n-  val defaultRequestQuota = Int.MaxValue\n+  val defaultProducerQuota: Long = 8000\n+  val defaultConsumerQuota: Long = 2500\n+  val defaultRequestQuota: Double = Long.MaxValue", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b044647ab82055a61520c33f43b11057f030fc7"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "33a35b8ac4655d749e342f73c1ad2862ddb10d11", "author": {"user": {"login": "dajac", "name": "David Jacot"}}, "url": "https://github.com/apache/kafka/commit/33a35b8ac4655d749e342f73c1ad2862ddb10d11", "committedDate": "2020-04-07T15:34:06Z", "message": "Address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg5NDI3MTA1", "url": "https://github.com/apache/kafka/pull/8394#pullrequestreview-389427105", "createdAt": "2020-04-07T19:31:52Z", "commit": {"oid": "33a35b8ac4655d749e342f73c1ad2862ddb10d11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 13, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}