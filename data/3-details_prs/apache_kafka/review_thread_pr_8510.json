{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDM5NTkx", "number": 8510, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxOTo1Njo0N1rODzQdAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxOTo1Njo0N1rODzQdAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1MDczNTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQxOTo1Njo0N1rOGHtyYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xOFQyMDo1OTo0M1rOGHuMgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MzM5Mw==", "bodyText": "nit: for line 147 could we use the rocksDBStore as well?", "url": "https://github.com/apache/kafka/pull/8510#discussion_r410743393", "createdAt": "2020-04-18T19:56:47Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java", "diffHunk": "@@ -137,62 +142,57 @@ private InternalMockProcessorContext getProcessorContext(final RecordingLevel re\n         return getProcessorContext(streamsProps);\n     }\n \n-    @After\n-    public void tearDown() {\n-        rocksDBStore.close();\n-    }\n-\n     @Test\n     public void shouldAddStatisticsToInjectedMetricsRecorderWhenRecordingLevelIsDebug() {\n         final RocksDBStore store = getRocksDBStoreWithRocksDBMetricsRecorder();\n-        final InternalMockProcessorContext mockContext = getProcessorContext(RecordingLevel.DEBUG);\n+        context = getProcessorContext(RecordingLevel.DEBUG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e33832531c88179e7da42b4436c6f0f6a40f0b00"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc1MDA4Mw==", "bodyText": "I left it out intentionally because we always cause #close on this rocksDBStore and this causes this test to fail.\nIt's just because of the mock, so we could instead add some expect... lines at the end of the test, but it seemed cleaner to just use a local RocksDBStore here", "url": "https://github.com/apache/kafka/pull/8510#discussion_r410750083", "createdAt": "2020-04-18T20:59:43Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/RocksDBStoreTest.java", "diffHunk": "@@ -137,62 +142,57 @@ private InternalMockProcessorContext getProcessorContext(final RecordingLevel re\n         return getProcessorContext(streamsProps);\n     }\n \n-    @After\n-    public void tearDown() {\n-        rocksDBStore.close();\n-    }\n-\n     @Test\n     public void shouldAddStatisticsToInjectedMetricsRecorderWhenRecordingLevelIsDebug() {\n         final RocksDBStore store = getRocksDBStoreWithRocksDBMetricsRecorder();\n-        final InternalMockProcessorContext mockContext = getProcessorContext(RecordingLevel.DEBUG);\n+        context = getProcessorContext(RecordingLevel.DEBUG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDc0MzM5Mw=="}, "originalCommit": {"oid": "e33832531c88179e7da42b4436c6f0f6a40f0b00"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3038, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}