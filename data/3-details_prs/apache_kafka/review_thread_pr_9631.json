{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI0OTMzOTgx", "number": 9631, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0OToyMlrOE8cUbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0OToyMlrOE8cUbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxODEzOTk3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QyMzo0OToyMlrOH4j50g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQyMzoxMDozN1rOH8RfqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA3MDU0Ng==", "bodyText": "For the reassignment case, once the controller shrinks the assigned replica set, the next step is for the controller to remove the remove replica from ISR and bump up the leader epoch. The shrunk isr will then be propagated to the leader. With fold(true), we allow to leader to shrink ISR immediately. This might be ok, but is unnecessary work since the controller will be doing that soon.\nAnother option is to use fold(false). This way, the leader won't shrink the removed replica from ISR. Only the controller will do.", "url": "https://github.com/apache/kafka/pull/9631#discussion_r529070546", "createdAt": "2020-11-23T23:49:22Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -947,9 +947,10 @@ class Partition(val topicPartition: TopicPartition,\n                                   leaderEndOffset: Long,\n                                   currentTimeMs: Long,\n                                   maxLagMs: Long): Boolean = {\n-    val followerReplica = getReplicaOrException(replicaId)\n-    followerReplica.logEndOffset != leaderEndOffset &&\n-      (currentTimeMs - followerReplica.lastCaughtUpTimeMs) > maxLagMs\n+    getReplica(replicaId).fold(true) { followerReplica =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "65b9ebdb978fc2a964e77649bf27fa5cc0480396"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwNTk5MA==", "bodyText": "Thanks for the review!\n\nThis might be ok, but is unnecessary work since the controller will be doing that soon.\n\nAccording to some users and the report from KAFKA-9672, it looks like under some conditions the controller is writing to ZK that it removed the replica from the assignment but not from the ISR. I am unable to reproduce this or convince myself from the code on how this can happen.\nI was thinking of defensively letting the leader also remove the replica from the ISR so that Kafka can recover from this case. If the leader is not allowed to do this then ack=all produce messages will continue to fail.\nWhat do you think @junrao?", "url": "https://github.com/apache/kafka/pull/9631#discussion_r529105990", "createdAt": "2020-11-24T01:25:59Z", "author": {"login": "jsancio"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -947,9 +947,10 @@ class Partition(val topicPartition: TopicPartition,\n                                   leaderEndOffset: Long,\n                                   currentTimeMs: Long,\n                                   maxLagMs: Long): Boolean = {\n-    val followerReplica = getReplicaOrException(replicaId)\n-    followerReplica.logEndOffset != leaderEndOffset &&\n-      (currentTimeMs - followerReplica.lastCaughtUpTimeMs) > maxLagMs\n+    getReplica(replicaId).fold(true) { followerReplica =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA3MDU0Ng=="}, "originalCommit": {"oid": "65b9ebdb978fc2a964e77649bf27fa5cc0480396"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjk2MzI0MQ==", "bodyText": "@jsancio : Yes, we can keep the logic in the PR. On the leader, the logic for shrinking ISR is checked every 10 secs by default. So, in the common case when completing a reassignment, the reduced ISR by the controller will be propagated to the leader before the leader's ISR shrinking logic kicks in.", "url": "https://github.com/apache/kafka/pull/9631#discussion_r532963241", "createdAt": "2020-11-30T23:10:37Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -947,9 +947,10 @@ class Partition(val topicPartition: TopicPartition,\n                                   leaderEndOffset: Long,\n                                   currentTimeMs: Long,\n                                   maxLagMs: Long): Boolean = {\n-    val followerReplica = getReplicaOrException(replicaId)\n-    followerReplica.logEndOffset != leaderEndOffset &&\n-      (currentTimeMs - followerReplica.lastCaughtUpTimeMs) > maxLagMs\n+    getReplica(replicaId).fold(true) { followerReplica =>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTA3MDU0Ng=="}, "originalCommit": {"oid": "65b9ebdb978fc2a964e77649bf27fa5cc0480396"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3600, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}