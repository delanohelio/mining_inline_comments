{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3OTE2NTY0", "number": 8412, "title": "KAFKA-9750; Fix race condition with log dir reassign completion", "bodyText": "There is a race on receiving a LeaderAndIsr request for a replica with an active log dir reassignment. If the reassignment completes just before the LeaderAndIsr handler updates epoch information, it can lead to an illegal state error since no future log dir exists. This patch fixes the problem by ensuring that the future log dir exists when the fetcher is started. Removal cannot happen concurrently because it requires access the same partition state lock.\nCo-authored-by: Chia-Ping Tsai chia7712@gmail.com\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-03T03:33:11Z", "url": "https://github.com/apache/kafka/pull/8412", "merged": true, "mergeCommit": {"oid": "62dcfa196e7819f7fb77aa181d96767988cbe908"}, "closed": true, "closedAt": "2020-04-03T18:51:05Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcT4WDggH2gAyMzk3OTE2NTY0OjU1M2FiODFkMzQ3MmUwZjdjYWU4YjRkZDU3YjRjZWViZmJjYjkzNTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUEI2JgFqTM4NzQzNzY0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350", "committedDate": "2020-04-03T03:29:25Z", "message": "KAFKA-9750; Fix race condition with log dir reassign completion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTE2NDUz", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-386916453", "createdAt": "2020-04-03T03:34:15Z", "commit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMzozNDoxNVrOGAD_Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMzozNDoxNVrOGAD_Xw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcxODU1OQ==", "bodyText": "We always build with the latest fetch version, so this check was unneeded.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r402718559", "createdAt": "2020-04-03T03:34:15Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala", "diffHunk": "@@ -91,7 +91,7 @@ class ReplicaAlterLogDirsThread(name: String,\n       Request.FutureLocalReplicaId,\n       request.minBytes,\n       request.maxBytes,\n-      request.version <= 2,\n+      false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTI1NTU2", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-386925556", "createdAt": "2020-04-03T04:12:14Z", "commit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxMjoxNVrOGAEfVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDoxMjoxNVrOGAEfVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjcyNjc0Mg==", "bodyText": "So there is a extra check of future folder here and the check is in the lock so the race condition is resolved.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r402726742", "createdAt": "2020-04-03T04:12:15Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala", "diffHunk": "@@ -127,6 +131,19 @@ class ReplicaAlterLogDirsThread(name: String,\n     logAppendInfo\n   }\n \n+  override def addPartitions(initialFetchStates: Map[TopicPartition, OffsetAndEpoch]): Set[TopicPartition] = {\n+    partitionMapLock.lockInterruptibly()\n+    try {\n+      // It is possible that the log dir fetcher completed just before this call, so we\n+      // filter only the partitions which still have a future log dir.\n+      val filteredFetchStates = initialFetchStates.filterKeys(replicaMgr.futureLogExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTMzNDY3", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-386933467", "createdAt": "2020-04-03T04:44:42Z", "commit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDo0NDo0MlrOGAE7rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDo0NDo0MlrOGAE7rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjczMzk5OA==", "bodyText": "seems this line is useless.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r402733998", "createdAt": "2020-04-03T04:44:42Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala", "diffHunk": "@@ -127,6 +131,19 @@ class ReplicaAlterLogDirsThread(name: String,\n     logAppendInfo\n   }\n \n+  override def addPartitions(initialFetchStates: Map[TopicPartition, OffsetAndEpoch]): Set[TopicPartition] = {\n+    partitionMapLock.lockInterruptibly()\n+    try {\n+      // It is possible that the log dir fetcher completed just before this call, so we\n+      // filter only the partitions which still have a future log dir.\n+      val filteredFetchStates = initialFetchStates.filterKeys(replicaMgr.futureLogExists)\n+      super.addPartitions(filteredFetchStates)\n+      filteredFetchStates.keySet", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTM0MDY4", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-386934068", "createdAt": "2020-04-03T04:46:54Z", "commit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDo0Njo1NVrOGAE9zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwNDo0Njo1NVrOGAE9zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjczNDU0MA==", "bodyText": "Should we skip to create thread if the collection of filtered states is empty?", "url": "https://github.com/apache/kafka/pull/8412#discussion_r402734540", "createdAt": "2020-04-03T04:46:55Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala", "diffHunk": "@@ -127,6 +131,19 @@ class ReplicaAlterLogDirsThread(name: String,\n     logAppendInfo\n   }\n \n+  override def addPartitions(initialFetchStates: Map[TopicPartition, OffsetAndEpoch]): Set[TopicPartition] = {\n+    partitionMapLock.lockInterruptibly()\n+    try {\n+      // It is possible that the log dir fetcher completed just before this call, so we\n+      // filter only the partitions which still have a future log dir.\n+      val filteredFetchStates = initialFetchStates.filterKeys(replicaMgr.futureLogExists)\n+      super.addPartitions(filteredFetchStates)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258044128bd5afa6bc8cadb6fb1b967b5e625b00", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/258044128bd5afa6bc8cadb6fb1b967b5e625b00", "committedDate": "2020-04-03T07:15:38Z", "message": "Add Chia's test improvements plus a minor logging optimization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9df4383f99770f8025c1943986f3f815ad163e3", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/d9df4383f99770f8025c1943986f3f815ad163e3", "committedDate": "2020-04-03T07:19:45Z", "message": "Remove redunant return line"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzEwNDg1", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-387310485", "createdAt": "2020-04-03T14:31:25Z", "commit": {"oid": "d9df4383f99770f8025c1943986f3f815ad163e3"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDozMToyNVrOGAYENg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNDozNToyMlrOGAYOtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA0NzQ3OA==", "bodyText": "Do we have similar log messages for when fetchers are removed? Seems rather useful.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r403047478", "createdAt": "2020-04-03T14:31:25Z", "author": {"login": "mumrah"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherManager.scala", "diffHunk": "@@ -144,14 +145,17 @@ abstract class AbstractFetcherManager[T <: AbstractFetcherThread](val name: Stri\n           tp -> OffsetAndEpoch(brokerAndInitOffset.initOffset, brokerAndInitOffset.currentLeaderEpoch)\n         }\n \n-        fetcherThread.addPartitions(initialOffsetAndEpochs)\n-        info(s\"Added fetcher to broker ${brokerAndFetcherId.broker} for partitions $initialOffsetAndEpochs\")\n-\n-        failedPartitions.removeAll(partitionAndOffsets.keySet)\n+        addPartitionsToFetcherThread(fetcherThread, initialOffsetAndEpochs)\n       }\n     }\n   }\n \n+  protected def addPartitionsToFetcherThread(fetcherThread: T,\n+                                             initialOffsetAndEpochs: collection.Map[TopicPartition, OffsetAndEpoch]): Unit = {\n+    fetcherThread.addPartitions(initialOffsetAndEpochs)\n+    info(s\"Added fetcher to broker ${fetcherThread.sourceBroker.id} for partitions $initialOffsetAndEpochs\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9df4383f99770f8025c1943986f3f815ad163e3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzA1MDE2NQ==", "bodyText": "I think this will be a no-op in addPartitions, so it's probably harmless", "url": "https://github.com/apache/kafka/pull/8412#discussion_r403050165", "createdAt": "2020-04-03T14:35:22Z", "author": {"login": "mumrah"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsThread.scala", "diffHunk": "@@ -127,6 +131,19 @@ class ReplicaAlterLogDirsThread(name: String,\n     logAppendInfo\n   }\n \n+  override def addPartitions(initialFetchStates: Map[TopicPartition, OffsetAndEpoch]): Set[TopicPartition] = {\n+    partitionMapLock.lockInterruptibly()\n+    try {\n+      // It is possible that the log dir fetcher completed just before this call, so we\n+      // filter only the partitions which still have a future log dir.\n+      val filteredFetchStates = initialFetchStates.filterKeys(replicaMgr.futureLogExists)\n+      super.addPartitions(filteredFetchStates)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjczNDU0MA=="}, "originalCommit": {"oid": "553ab81d3472e0f7cae8b4dd57b4ceebfbcb9350"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzgwNzE2", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-387380716", "createdAt": "2020-04-03T15:54:34Z", "commit": {"oid": "d9df4383f99770f8025c1943986f3f815ad163e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo1NDozNFrOGAbfUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNTo1NDozNFrOGAbfUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEwMzU2OQ==", "bodyText": "filterKeys is deprecated in 2.13, let's not use it please.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r403103569", "createdAt": "2020-04-03T15:54:34Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/ReplicaAlterLogDirsManager.scala", "diffHunk": "@@ -34,6 +35,12 @@ class ReplicaAlterLogDirsManager(brokerConfig: KafkaConfig,\n       quotaManager, brokerTopicStats)\n   }\n \n+  override protected def addPartitionsToFetcherThread(fetcherThread: ReplicaAlterLogDirsThread,\n+                                                      initialOffsetAndEpochs: collection.Map[TopicPartition, OffsetAndEpoch]): Unit = {\n+    val addedPartitions = fetcherThread.addPartitions(initialOffsetAndEpochs)\n+    info(s\"Added log dir fetcher for partitions ${initialOffsetAndEpochs.filterKeys(addedPartitions)}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9df4383f99770f8025c1943986f3f815ad163e3"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9dd4ec7253154a2e2db31c28c0ba188434d20199", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/9dd4ec7253154a2e2db31c28c0ba188434d20199", "committedDate": "2020-04-03T16:21:00Z", "message": "Drop usage of `filterKeys` and improve logging"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDAyNzky", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-387402792", "createdAt": "2020-04-03T16:23:23Z", "commit": {"oid": "9dd4ec7253154a2e2db31c28c0ba188434d20199"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMzoyM1rOGAcyJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QxNjoyMzoyM1rOGAcyJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzEyNDc3Mw==", "bodyText": "I was tempted to fix this with the plural truncations.", "url": "https://github.com/apache/kafka/pull/8412#discussion_r403124773", "createdAt": "2020-04-03T16:23:23Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherThread.scala", "diffHunk": "@@ -199,7 +199,7 @@ abstract class AbstractFetcherThread(name: String,\n     * - Send OffsetsForLeaderEpochRequest, retrieving the latest offset for each partition's\n     *   leader epoch. This is the offset the follower should truncate to ensure\n     *   accurate log replication.\n-    * - Finally truncate the logs for partitions in the truncating phase and mark them\n+    * - Finally truncate the logs for partitions in the truncating phase and mark the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dd4ec7253154a2e2db31c28c0ba188434d20199"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3NDM3NjQy", "url": "https://github.com/apache/kafka/pull/8412#pullrequestreview-387437642", "createdAt": "2020-04-03T17:13:52Z", "commit": {"oid": "9dd4ec7253154a2e2db31c28c0ba188434d20199"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 62, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}