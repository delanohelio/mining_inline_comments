{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxOTA2OTE5", "number": 9601, "title": " KAFKA-10729: Bump remaining RPC's to use tagged fields.", "bodyText": "As a follow-up from KIP-482, this PR bumps the version for several\nRPC's to enable tagged fields via the flexible versioning mechanism.\nAdditionally, a new IBP version KAFKA_2_8_IV0 is introduced to\nallow replication to take advantage of these new RPC versions for\nOffsetForLeaderEpoch and ListOffset.", "createdAt": "2020-11-16T19:52:21Z", "url": "https://github.com/apache/kafka/pull/9601", "merged": true, "mergeCommit": {"oid": "85f94d50271c952c3e9ee49c4fc814c0da411618"}, "closed": true, "closedAt": "2020-12-01T23:55:08Z", "author": {"login": "gardnervickers"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddMMjugFqTUzMTgxODIyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiAVbeAFqTU0MjI4NzI5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxODE4MjIy", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-531818222", "createdAt": "2020-11-16T21:53:36Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTo1MzozN1rOH0VRLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQyMTo1MzozN1rOH0VRLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDYzNjQ2Mg==", "bodyText": "2.7 has been branched. It should be 2.8, right?", "url": "https://github.com/apache/kafka/pull/9601#discussion_r524636462", "createdAt": "2020-11-16T21:53:37Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/api/ApiVersion.scala", "diffHunk": "@@ -424,6 +426,13 @@ case object KAFKA_2_7_IV2 extends DefaultApiVersion {\n   val id: Int = 30\n }\n \n+case object KAFKA_2_7_IV3 extends DefaultApiVersion {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb11509b1843999a53cfe653b6d80200315bdaf9", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/fb11509b1843999a53cfe653b6d80200315bdaf9", "committedDate": "2020-11-17T01:08:53Z", "message": "KAFKA-10729: Bump remaining RPC's to use tagged fields.\n\nAs a follow-up from KIP-482, this PR bumps the version for several\nRPC's to enable tagged fields via the flexible versioning mechanism.\n\nAdditionally, a new IBP version `KAFKA_2_7_IV3` is introduced to\nallow replication to take advantage of these new RPC versions for\nOffsetForLeaderEpoch and ListOffset."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "fb11509b1843999a53cfe653b6d80200315bdaf9", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/fb11509b1843999a53cfe653b6d80200315bdaf9", "committedDate": "2020-11-17T01:08:53Z", "message": "KAFKA-10729: Bump remaining RPC's to use tagged fields.\n\nAs a follow-up from KIP-482, this PR bumps the version for several\nRPC's to enable tagged fields via the flexible versioning mechanism.\n\nAdditionally, a new IBP version `KAFKA_2_7_IV3` is introduced to\nallow replication to take advantage of these new RPC versions for\nOffsetForLeaderEpoch and ListOffset."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "b836a3d80d0156769a43f0d43d08b9564d0febf5", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/b836a3d80d0156769a43f0d43d08b9564d0febf5", "committedDate": "2020-11-18T18:59:22Z", "message": "Revert using flexibleVersions for non-generated RPC's\n\nOffsetForLeaderEpoch and Produce are not yet generated RPCs, but will be once #9401 and #9547 are merged."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b836a3d80d0156769a43f0d43d08b9564d0febf5", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/b836a3d80d0156769a43f0d43d08b9564d0febf5", "committedDate": "2020-11-18T18:59:22Z", "message": "Revert using flexibleVersions for non-generated RPC's\n\nOffsetForLeaderEpoch and Produce are not yet generated RPCs, but will be once #9401 and #9547 are merged."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "27c5b779148132bfb1896e6ce8f2dfeb02f20884", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/27c5b779148132bfb1896e6ce8f2dfeb02f20884", "committedDate": "2020-11-19T13:39:50Z", "message": "Merge branch 'trunk' of github.com:apache/kafka into list-offset-flex-versions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38f27474b831bc3bfb0c8b35ec13ba7aea05551f", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/38f27474b831bc3bfb0c8b35ec13ba7aea05551f", "committedDate": "2020-11-19T14:35:12Z", "message": "Revert \"Revert using flexibleVersions for non-generated RPC's\"\n\nThis reverts commit b836a3d80d0156769a43f0d43d08b9564d0febf5."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0NjU1NTI1", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-534655525", "createdAt": "2020-11-19T16:57:47Z", "commit": {"oid": "38f27474b831bc3bfb0c8b35ec13ba7aea05551f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo1Nzo0N1rOH2oUOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxNjo1Nzo0N1rOH2oUOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzA0NTY4OQ==", "bodyText": "For what it's worth, WriteTxnMarkers and OffsetsForLeaderEpoch are also inter-broker APIs.", "url": "https://github.com/apache/kafka/pull/9601#discussion_r527045689", "createdAt": "2020-11-19T16:57:47Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/api/ApiVersion.scala", "diffHunk": "@@ -108,7 +108,9 @@ object ApiVersion {\n     // Bup Fetch protocol for Raft protocol (KIP-595)\n     KAFKA_2_7_IV1,\n     // Introduced AlterIsr (KIP-497)\n-    KAFKA_2_7_IV2\n+    KAFKA_2_7_IV2,\n+    // Flexible versioning on ListOffsets", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38f27474b831bc3bfb0c8b35ec13ba7aea05551f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dfa059abdb853f9770db6ceceee77fd64d15a48", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/0dfa059abdb853f9770db6ceceee77fd64d15a48", "committedDate": "2020-11-20T19:06:50Z", "message": "- Use KAFKA_2_8_IV0 for ListOffsets, WriteTxnMarkers and OffsetsForLeaderEpoch.\n\n- Allow using RecordBatch v2 for ProduceRequestV9."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ccc6345b0326b3e72e11978b9e930bfc6d10f61e", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/ccc6345b0326b3e72e11978b9e930bfc6d10f61e", "committedDate": "2020-11-20T21:14:51Z", "message": "Fix the EdgeCaseRequestTest to take into account flexible versions."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTA1OTgz", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-540505983", "createdAt": "2020-11-29T18:45:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo0NTowMlrOH7l63w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo0NTowMlrOH7l63w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI0OTMxMQ==", "bodyText": "This is to fix testThrottlingNotEnabledForConnectionToOlderBroker. The test forces ApiVersionsResponse to version 5, but relied on the fact that nothing really changed between version 5 and version 8 for PRODUCE responses. With flex versions we need to ensure the response matches the ApiVersions response", "url": "https://github.com/apache/kafka/pull/9601#discussion_r532249311", "createdAt": "2020-11-29T18:45:02Z", "author": {"login": "gardnervickers"}, "path": "clients/src/test/java/org/apache/kafka/clients/NetworkClientTest.java", "diffHunk": "@@ -613,12 +613,12 @@ private void sendResponse(ResponseHeader respHeader, Struct response) {\n         selector.completeReceive(new NetworkReceive(node.idString(), buffer));\n     }\n \n-    private void sendThrottledProduceResponse(int correlationId, int throttleMs) {\n+    private void sendThrottledProduceResponse(int correlationId, int throttleMs, short version) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTA2MTMx", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-540506131", "createdAt": "2020-11-29T18:46:57Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo0Njo1N1rOH7l8AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo0Njo1N1rOH7l8AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI0OTYwMQ==", "bodyText": "Having this override seemed a bit error prone, and was causing failures for the NetworkClientTest. I opted to remove it entirely in favor of forcing the caller to specify the response version.", "url": "https://github.com/apache/kafka/pull/9601#discussion_r532249601", "createdAt": "2020-11-29T18:46:57Z", "author": {"login": "gardnervickers"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/AlterReplicaLogDirsResponse.java", "diffHunk": "@@ -38,10 +38,6 @@\n \n     private final AlterReplicaLogDirsResponseData data;\n \n-    public AlterReplicaLogDirsResponse(Struct struct) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNTA2MzU3", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-540506357", "createdAt": "2020-11-29T18:50:08Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo1MDowOFrOH7l9Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOVQxODo1MDowOFrOH7l9Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjI0OTk0Mw==", "bodyText": "Admittedly I'm not sure why we check the version of the last OffsetForLeaderEpoch response is 3 here. I decided to widen the check a bit so this won't break for future versions.", "url": "https://github.com/apache/kafka/pull/9601#discussion_r532249943", "createdAt": "2020-11-29T18:50:08Z", "author": {"login": "gardnervickers"}, "path": "core/src/test/scala/unit/kafka/server/ReplicaFetcherThreadTest.scala", "diffHunk": "@@ -437,8 +437,8 @@ class ReplicaFetcherThreadTest {\n     thread.doWork()\n     assertEquals(2, mockNetwork.epochFetchCount)\n     assertEquals(1, mockNetwork.fetchCount)\n-    assertEquals(\"OffsetsForLeaderEpochRequest version.\",\n-      3, mockNetwork.lastUsedOffsetForLeaderEpochVersion)\n+    assertTrue(\"OffsetsForLeaderEpochRequest version.\",\n+      mockNetwork.lastUsedOffsetForLeaderEpochVersion >= 3)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "committedDate": "2020-11-29T21:27:17Z", "message": "Fix tests and AlterReplicasLogDirsResponse.\n\n- NetworkClientTest.testThrottlingNotEnabledForConnectionToOlderBroker was relying on the\n  latest PRODUCE version being unchanged from version 5. Fix this by supplying the version\n  when constructing the throttled produce response.\n- Fixed AlterReplicaLogDirsResponse to take the version in the constructor instead of offering\n  an override which assumes that the most recent version is in use. This fixes the NetworkClientTest.\n- Fixed ReplicaFetcherThreadTest.shouldFetchLeaderEpochSecondTimeIfLeaderRepliesWithEpochNotKnownToFollower\n  to check that the lastUsedOffsetForLeaderEpochVersion is >= 3 instead of == 3. It seems this check is mostly\n  in place to ensure that a OffsetForLeaderEpoch response was sent."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/7a7d5fd5c6f26edbbacecdf5074245a6d7489e30", "committedDate": "2020-11-29T21:27:17Z", "message": "Fix tests and AlterReplicasLogDirsResponse.\n\n- NetworkClientTest.testThrottlingNotEnabledForConnectionToOlderBroker was relying on the\n  latest PRODUCE version being unchanged from version 5. Fix this by supplying the version\n  when constructing the throttled produce response.\n- Fixed AlterReplicaLogDirsResponse to take the version in the constructor instead of offering\n  an override which assumes that the most recent version is in use. This fixes the NetworkClientTest.\n- Fixed ReplicaFetcherThreadTest.shouldFetchLeaderEpochSecondTimeIfLeaderRepliesWithEpochNotKnownToFollower\n  to check that the lastUsedOffsetForLeaderEpochVersion is >= 3 instead of == 3. It seems this check is mostly\n  in place to ensure that a OffsetForLeaderEpoch response was sent."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/6f0ed0421c676368e0238152a58ea2a29ca4fd76", "committedDate": "2020-11-30T21:40:37Z", "message": "Merge branch 'trunk' of github.com:apache/kafka into list-offset-flex-versions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNDQ0MzY5", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-541444369", "createdAt": "2020-12-01T02:30:33Z", "commit": {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjozMDozNFrOH8Vuxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwMjozNzowNVrOH8V2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMjY0Ng==", "bodyText": "I wonder if we may as well make this the default case. Not sure we're getting much by forcing ourselves to update this logic after each bump. Maybe the range validation is still useful, but that could be done by using oldestVersion and latestVersion.", "url": "https://github.com/apache/kafka/pull/9601#discussion_r533032646", "createdAt": "2020-12-01T02:30:34Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceRequest.java", "diffHunk": "@@ -286,6 +286,7 @@ public static byte requiredMagicForVersion(short produceRequestVersion) {\n             case 6:\n             case 7:\n             case 8:\n+            case 9:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzMzkyNw==", "bodyText": "I think this is probably ok, but it is a little inconsistent with how we handle the versions for other inter-broker RPCs. Since we rely on the IBP, we always set the version explicitly in the caller, which means there is exactly one allowable version for the builder to use. See for example LeaderAndIsrRequest.Builder.", "url": "https://github.com/apache/kafka/pull/9601#discussion_r533033927", "createdAt": "2020-12-01T02:35:04Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/WriteTxnMarkersRequest.java", "diffHunk": "@@ -105,8 +105,8 @@ public int hashCode() {\n \n         public final WriteTxnMarkersRequestData data;\n \n-        public Builder(final List<TxnMarkerEntry> markers) {\n-            super(ApiKeys.WRITE_TXN_MARKERS);\n+        public Builder(final List<TxnMarkerEntry> markers, short latestAllowedVersion) {\n+            super(ApiKeys.WRITE_TXN_MARKERS, ApiKeys.WRITE_TXN_MARKERS.oldestVersion(), latestAllowedVersion);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzAzNDU1Mg==", "bodyText": "nit: maybe add a comment that this field is for the number of tagged fields?", "url": "https://github.com/apache/kafka/pull/9601#discussion_r533034552", "createdAt": "2020-12-01T02:37:05Z", "author": {"login": "hachikuji"}, "path": "core/src/test/scala/unit/kafka/server/EdgeCaseRequestTest.scala", "diffHunk": "@@ -84,19 +85,24 @@ class EdgeCaseRequestTest extends KafkaServerTestHarness {\n   }\n \n   // Custom header serialization so that protocol assumptions are not forced\n-  private def requestHeaderBytes(apiKey: Short, apiVersion: Short, clientId: String = \"\", correlationId: Int = -1): Array[Byte] = {\n+  def requestHeaderBytes(apiKey: Short, apiVersion: Short, clientId: String = \"\", correlationId: Int = -1): Array[Byte] = {\n+    // Check for flex versions, some tests here verify that an invalid apiKey is detected properly, so if -1 is used,\n+    // assume the request is not using flex versions.\n+    val flexVersion = if (apiKey >= 0) ApiKeys.forId(apiKey).requestHeaderVersion(apiVersion) >= 2 else false\n     val size = {\n       2 /* apiKey */ +\n         2 /* version id */ +\n         4 /* correlation id */ +\n-        Type.NULLABLE_STRING.sizeOf(clientId) /* client id */\n+        Type.NULLABLE_STRING.sizeOf(clientId)  /* client id */ +\n+        (if (flexVersion) ByteUtils.sizeOfUnsignedVarint(0) else 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0ed0421c676368e0238152a58ea2a29ca4fd76"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/1f539abf2a49efe8e9f6b45da5ca0d2f6d478393", "committedDate": "2020-12-01T17:42:48Z", "message": "Address PR comments:\n- Make the most recent record batch version the default case when selecting a\n  record batch version. Check that the version is within the existing version bounds.\n- Force a specific version in the WriteTxnMarkersRequest constructor to match other\n  requests which utilize the IBP like LeaderAndISR."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb9fbe898ab08315c6e328c215c72da868badab4", "author": {"user": {"login": "gardnervickers", "name": "Gardner Vickers"}}, "url": "https://github.com/apache/kafka/commit/fb9fbe898ab08315c6e328c215c72da868badab4", "committedDate": "2020-12-01T20:27:21Z", "message": "Use LIST_OFFSET.lastestVersion() instead of hardcoding the latest version in\nthe RequestResponseTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMjg3Mjk4", "url": "https://github.com/apache/kafka/pull/9601#pullrequestreview-542287298", "createdAt": "2020-12-01T20:54:04Z", "commit": {"oid": "fb9fbe898ab08315c6e328c215c72da868badab4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2782, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}