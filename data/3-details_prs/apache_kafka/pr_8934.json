{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwODM2MjA4", "number": 8934, "title": "KAFKA-10134: Use long poll if we do not have fetchable partitions", "bodyText": "The intention of using poll(0) is to not block on rebalance but still return some data; however, if there's no fetchable partitions then there's no point of polling with 0ms. What's worse, with poll(0) we may fall into a busy loop since we may advance the system test with too small pace.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-27T00:40:15Z", "url": "https://github.com/apache/kafka/pull/8934", "merged": true, "mergeCommit": {"oid": "6f3ceea5c61d90d4075ed5c5a22bde33142f7ec7"}, "closed": true, "closedAt": "2020-07-08T16:51:51Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcvMzuigH2gAyNDQwODM2MjA4OmMxMDJhYWFjNWNlMzIzN2YzNDdlMzVlOTUwYmNkMTk5ZDg3NjQ1ZGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy9BedgFqTQ0NDkzNTI0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c102aaac5ce3237f347e35e950bcd199d87645df", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/c102aaac5ce3237f347e35e950bcd199d87645df", "committedDate": "2020-06-27T00:35:53Z", "message": "only block if we do not have fetchable partitions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NjcwNjI4", "url": "https://github.com/apache/kafka/pull/8934#pullrequestreview-438670628", "createdAt": "2020-06-27T04:10:03Z", "commit": {"oid": "c102aaac5ce3237f347e35e950bcd199d87645df"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "830d4dd779376ddb9d1c0faee3b7afab01d177ad", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/830d4dd779376ddb9d1c0faee3b7afab01d177ad", "committedDate": "2020-07-01T03:27:20Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K10134-long-poll-metadata-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "333a967ec22ea22babf32b18349b76b6552a2fac", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/333a967ec22ea22babf32b18349b76b6552a2fac", "committedDate": "2020-07-01T05:36:50Z", "message": "use binary exponential timeout"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2242b0224943134bd682c0b1d3f7b1d4950dd15a", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/2242b0224943134bd682c0b1d3f7b1d4950dd15a", "committedDate": "2020-07-01T18:15:17Z", "message": "remove func"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0516d9a879a229e74e25ae2f06f022512861a437", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/0516d9a879a229e74e25ae2f06f022512861a437", "committedDate": "2020-07-05T01:05:37Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K10134-long-poll-metadata-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/f5fd17e7531fc73031f32406bbe181f67f0d0cab", "committedDate": "2020-07-05T02:40:21Z", "message": "push the best-effort into coordinator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzNDM2Njk1", "url": "https://github.com/apache/kafka/pull/8934#pullrequestreview-443436695", "createdAt": "2020-07-06T22:04:56Z", "commit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjowNDo1NlrOGtokeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQyMjoyMDozMVrOGto6Cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwMzgwMg==", "bodyText": "nit: seems unused?", "url": "https://github.com/apache/kafka/pull/8934#discussion_r450503802", "createdAt": "2020-07-06T22:04:56Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java", "diffHunk": "@@ -1258,11 +1261,19 @@ public void assign(Collection<TopicPartition> partitions) {\n         }\n     }\n \n+    private boolean coordinatorNeededForAssignment() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDAyOA==", "bodyText": "flag?", "url": "https://github.com/apache/kafka/pull/8934#discussion_r450504028", "createdAt": "2020-07-06T22:05:34Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -416,7 +428,13 @@ boolean joinGroupIfNeeded(final Timer timer) {\n             }\n \n             final RequestFuture<ByteBuffer> future = initiateJoinGroup();\n-            client.poll(future, timer);\n+\n+            // if the flat is not set to true; we only try once and not block on the join result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNDY0OA==", "bodyText": "Do we want this to be poll(0)? Otherwise we're still blocking here.", "url": "https://github.com/apache/kafka/pull/8934#discussion_r450504648", "createdAt": "2020-07-06T22:07:20Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -416,7 +428,13 @@ boolean joinGroupIfNeeded(final Timer timer) {\n             }\n \n             final RequestFuture<ByteBuffer> future = initiateJoinGroup();\n-            client.poll(future, timer);\n+\n+            // if the flat is not set to true; we only try once and not block on the join result\n+            if (waitUntilComplete)\n+                client.poll(future, timer);\n+            else\n+                client.poll(timer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwNTY2NA==", "bodyText": "This call to fetchablePartitions is unfortunate. It is an entire pass over all the assigned partitions on every poll. Is there any way it can be avoided?", "url": "https://github.com/apache/kafka/pull/8934#discussion_r450505664", "createdAt": "2020-07-06T22:10:10Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java", "diffHunk": "@@ -1218,17 +1218,20 @@ public void assign(Collection<TopicPartition> partitions) {\n                 throw new IllegalStateException(\"Consumer is not subscribed to any topics or assigned any partitions\");\n             }\n \n-            // poll for new data until the timeout expires\n             do {\n                 client.maybeTriggerWakeup();\n \n                 if (includeMetadataInTimeout) {\n-                    // try to update assignment metadata BUT do not need to block on the timer,\n-                    // since even if we are 1) in the middle of a rebalance or 2) have partitions\n-                    // with unknown starting positions we may still want to return some data\n-                    // as long as there are some partitions fetchable; NOTE we always use a timer with 0ms\n-                    // to never block on completing the rebalance procedure if there's any\n-                    updateAssignmentMetadataIfNeeded(time.timer(0L));\n+                    // try to update assignment metadata BUT do not need to block on the timer if we still have\n+                    // some assigned partitions, since even if we are 1) in the middle of a rebalance\n+                    // or 2) have partitions with unknown starting positions we may still want to return some data\n+                    // as long as there are some partitions fetchable; NOTE we do not block on rebalancing to complete\n+                    // if there's one pending if we still have some fetchable partitions\n+                    if (subscriptions.fetchablePartitions(tp -> true).isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDUwOTMyMg==", "bodyText": "Just making sure I understand the problem. In the old logic, updateAssignmentMetadataIfNeeded never blocks. Even if we have no assignment and do not know the coordinator, we won't block here. That means we should fall through to pollForFetches. The poll timeout is set by the following logic:\n        long pollTimeout = coordinator == null ? timer.remainingMs() :\n                Math.min(coordinator.timeToNextPoll(timer.currentTimeMs()), timer.remainingMs());\nI think the only way I can see this logic getting into trouble is if Heartbeat.timeToNextHeartbeat returns a small value. So if the coordinator remains unknown for a little while and we need to heartbeat, we might get into a busy loop. Is that about right or are there other cases?", "url": "https://github.com/apache/kafka/pull/8934#discussion_r450509322", "createdAt": "2020-07-06T22:20:31Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java", "diffHunk": "@@ -1218,17 +1218,20 @@ public void assign(Collection<TopicPartition> partitions) {\n                 throw new IllegalStateException(\"Consumer is not subscribed to any topics or assigned any partitions\");\n             }\n \n-            // poll for new data until the timeout expires\n             do {\n                 client.maybeTriggerWakeup();\n \n                 if (includeMetadataInTimeout) {\n-                    // try to update assignment metadata BUT do not need to block on the timer,\n-                    // since even if we are 1) in the middle of a rebalance or 2) have partitions\n-                    // with unknown starting positions we may still want to return some data\n-                    // as long as there are some partitions fetchable; NOTE we always use a timer with 0ms\n-                    // to never block on completing the rebalance procedure if there's any\n-                    updateAssignmentMetadataIfNeeded(time.timer(0L));\n+                    // try to update assignment metadata BUT do not need to block on the timer if we still have", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5fd17e7531fc73031f32406bbe181f67f0d0cab"}, "originalPosition": 15}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd518e4dcb0924163fc3442ec6484a13c1c8bf43", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/bd518e4dcb0924163fc3442ec6484a13c1c8bf43", "committedDate": "2020-07-07T03:26:43Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K10134-long-poll-metadata-update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7a6d7f49632e022cf921b547d67e0aff270bba8", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/c7a6d7f49632e022cf921b547d67e0aff270bba8", "committedDate": "2020-07-08T01:18:05Z", "message": "revert change"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0675adee1c9ab8609c6d49b1548dc6b455d03a9b", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/0675adee1c9ab8609c6d49b1548dc6b455d03a9b", "committedDate": "2020-07-08T02:29:10Z", "message": "revert joinGroupIfNeeded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b4fda2262dfa4e956ae7eebbf3f12d459af0aa6", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/6b4fda2262dfa4e956ae7eebbf3f12d459af0aa6", "committedDate": "2020-07-08T02:32:00Z", "message": "github comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0OTM1MjQ5", "url": "https://github.com/apache/kafka/pull/8934#pullrequestreview-444935249", "createdAt": "2020-07-08T16:28:07Z", "commit": {"oid": "6b4fda2262dfa4e956ae7eebbf3f12d459af0aa6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1376, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}