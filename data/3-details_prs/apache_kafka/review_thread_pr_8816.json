{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTg2NDE0", "number": 8816, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowMjozN1rOEDB7WQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozMToxNlrOEEGdJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjEyNzYxOnYy", "diffSide": "LEFT", "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowMjozN1rOGf2TSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNzowMjozN1rOGf2TSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0ODcxMw==", "bodyText": "This is a cleanup. In the current logic we should never hit a static member in this block", "url": "https://github.com/apache/kafka/pull/8816#discussion_r436048713", "createdAt": "2020-06-05T17:02:37Z", "author": {"login": "abbccdda"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1150,7 +1150,6 @@ class GroupCoordinator(val brokerId: Int,\n       group.notYetRejoinedMembers.filterNot(_.isStaticMember) foreach { failedMember =>\n         removeHeartbeatForLeavingMember(group, failedMember)\n         group.remove(failedMember.memberId)\n-        group.removeStaticMember(failedMember.groupInstanceId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63b4641f24b17cf4e75239515a27213fb5bc1ee"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNjYzNzMwOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxOTo1MToyMFrOGf7Xmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMDowNjo1NlrOGf75TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMTczOQ==", "bodyText": "Shouldn't we include the group id in the log as well?", "url": "https://github.com/apache/kafka/pull/8816#discussion_r436131739", "createdAt": "2020-06-05T19:51:20Z", "author": {"login": "dajac"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1186,6 +1185,8 @@ class GroupCoordinator(val brokerId: Int,\n           for (member <- group.allMemberMetadata) {\n             val joinResult = JoinGroupResult(\n               members = if (group.isLeader(member.memberId)) {\n+                info(s\"Reply the group leader with the following dynamic members' metadata: ${group.allDynamicMembers}\" +\n+                  s\"and static members' metadata: ${group.allStaticMembers}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e63b4641f24b17cf4e75239515a27213fb5bc1ee"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE0MDM2NA==", "bodyText": "Good idea", "url": "https://github.com/apache/kafka/pull/8816#discussion_r436140364", "createdAt": "2020-06-05T20:06:56Z", "author": {"login": "abbccdda"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1186,6 +1185,8 @@ class GroupCoordinator(val brokerId: Int,\n           for (member <- group.allMemberMetadata) {\n             val joinResult = JoinGroupResult(\n               members = if (group.isLeader(member.memberId)) {\n+                info(s\"Reply the group leader with the following dynamic members' metadata: ${group.allDynamicMembers}\" +\n+                  s\"and static members' metadata: ${group.allStaticMembers}\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjEzMTczOQ=="}, "originalCommit": {"oid": "e63b4641f24b17cf4e75239515a27213fb5bc1ee"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxNzAwNzE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjoyNTozMVrOGf-_5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQyMjoyNTozMVrOGf-_5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjE5MTIwNg==", "bodyText": "Do we need to print this for every member? That is O(n^2). Keep in mind that groups in the thousands are not unheard of. I think it would be better if we just ensured that we log the id of every member entering and leaving the group.", "url": "https://github.com/apache/kafka/pull/8816#discussion_r436191206", "createdAt": "2020-06-05T22:25:31Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1186,6 +1185,9 @@ class GroupCoordinator(val brokerId: Int,\n           for (member <- group.allMemberMetadata) {\n             val joinResult = JoinGroupResult(\n               members = if (group.isLeader(member.memberId)) {\n+                info(s\"Group ${group.groupId} replies the leader with \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c968af37aa8dd1d073074b69afa14a86e141b11b"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzM1NTI1OnYy", "diffSide": "LEFT", "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozMToxNlrOGhg57Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwMDozMToxNlrOGhg57Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzc5NTMwOQ==", "bodyText": "Nice catch.", "url": "https://github.com/apache/kafka/pull/8816#discussion_r437795309", "createdAt": "2020-06-10T00:31:16Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1146,12 +1146,16 @@ class GroupCoordinator(val brokerId: Int,\n \n   def onCompleteJoin(group: GroupMetadata): Unit = {\n     group.inLock {\n-      // remove dynamic members who haven't joined the group yet\n-      group.notYetRejoinedMembers.filterNot(_.isStaticMember) foreach { failedMember =>\n-        removeHeartbeatForLeavingMember(group, failedMember)\n-        group.remove(failedMember.memberId)\n-        group.removeStaticMember(failedMember.groupInstanceId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "72012b2f9eba7e557170c62b2cab93a17b313c4f"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2528, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}