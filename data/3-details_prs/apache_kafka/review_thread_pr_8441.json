{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTM0OTM3", "number": 8441, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozMzo1OFrODvxAWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDowMTozOFrODvyN5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDEyNTY5OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozMzo1OFrOGCYjbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozMzo1OFrOGCYjbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MjYyMQ==", "bodyText": "We always set it to true -- removing unnecessary code.", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405152621", "createdAt": "2020-04-07T22:33:58Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "diffHunk": "@@ -319,15 +334,9 @@ private void produceAbortedMessages() throws Exception {\n     }\n \n     private void produceInitialGlobalTableValues() throws Exception {\n-        produceInitialGlobalTableValues(true);\n-    }\n-\n-    private void produceInitialGlobalTableValues(final boolean enableTransactions) throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0160a32f48f58462b9701025cde38983085b92"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDEyNjg5OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozNDoyNFrOGCYkFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozNDoyNFrOGCYkFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1Mjc4OQ==", "bodyText": "Side cleanup", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405152789", "createdAt": "2020-04-07T22:34:24Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/state/internals/StreamThreadStateStoreProviderTest.java", "diffHunk": "@@ -361,7 +360,7 @@ private StreamTask createStreamsTask(final StreamsConfig streamsConfig,\n         final ProcessorStateManager stateManager = new ProcessorStateManager(\n             taskId,\n             Task.TaskType.ACTIVE,\n-            EXACTLY_ONCE.equals(streamsConfig.getString(StreamsConfig.PROCESSING_GUARANTEE_CONFIG)),\n+            StreamThread.eosEnabled(streamsConfig),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0160a32f48f58462b9701025cde38983085b92"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDEzMDg0OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozNjowMFrOGCYmew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QyMjozNjowMFrOGCYmew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE1MzQwMw==", "bodyText": "General question: we record the same metric for all three processing modes. Why do you need to parametrize this test? \\cc @cadonna", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405153403", "createdAt": "2020-04-07T22:36:00Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -101,8 +101,9 @@\n     @Parameters(name = \"{0}\")\n     public static Collection<Object[]> data() {\n         return Arrays.asList(new Object[][] {\n+            {StreamsConfig.AT_LEAST_ONCE},\n             {StreamsConfig.EXACTLY_ONCE},\n-            {StreamsConfig.AT_LEAST_ONCE}\n+            {StreamsConfig.EXACTLY_ONCE_BETA}\n         });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0160a32f48f58462b9701025cde38983085b92"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNDMyNDIwOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDowMTozOFrOGCaYzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwMDowMTozOFrOGCaYzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTE4MjY2OA==", "bodyText": "Could we extract the test portion as a common function?", "url": "https://github.com/apache/kafka/pull/8441#discussion_r405182668", "createdAt": "2020-04-08T00:01:38Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -130,7 +130,7 @@ public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosDi\n     }\n \n     @Test\n-    public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosEnabled() throws Exception {\n+    public void shouldRestoreAndProgressWhenTopicWrittenToDuringRestorationWithEosAlphaEnabled() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f0160a32f48f58462b9701025cde38983085b92"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2926, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}