{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTAzMjE1", "number": 9667, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo0ODoxOFrOFAq2PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo0ODoxOFrOFAq2PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MjQ2MzMyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQwNzo0ODoxOFrOH_Erzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxODowNjo1NlrOH_cFtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng==", "bodyText": "Is JoinGroupResponseHandler a better place to log error? For example, the error UNKNOWN_MEMBER_ID is log twice.\n(https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java#L605)", "url": "https://github.com/apache/kafka/pull/9667#discussion_r535899086", "createdAt": "2020-12-04T07:48:18Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -465,7 +465,11 @@ boolean joinGroupIfNeeded(final Timer timer) {\n                 }\n             } else {\n                 final RuntimeException exception = future.exception();\n-                log.info(\"Rebalance failed.\", exception);\n+\n+                if (!(exception instanceof MemberIdRequiredException)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8887d3e2c335841a7c8a9533bedbee0b8d28db6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTkwMDE2MQ==", "bodyText": "For another, does it need some comment to explain why MemberIdRequiredException is excluded.", "url": "https://github.com/apache/kafka/pull/9667#discussion_r535900161", "createdAt": "2020-12-04T07:50:39Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -465,7 +465,11 @@ boolean joinGroupIfNeeded(final Timer timer) {\n                 }\n             } else {\n                 final RuntimeException exception = future.exception();\n-                log.info(\"Rebalance failed.\", exception);\n+\n+                if (!(exception instanceof MemberIdRequiredException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng=="}, "originalCommit": {"oid": "f8887d3e2c335841a7c8a9533bedbee0b8d28db6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI4MjU1MA==", "bodyText": "I think I agree with you: it is a bit redundant. I think originally it is because this future may contain the error that is either from join-response or from sync-response, but at the moment both errors are logged inside the Join/SyncGroupHandler anyways. Just to maintain compatibility in case some trouble shooting scenarios are dependent on this summary entry for now.", "url": "https://github.com/apache/kafka/pull/9667#discussion_r536282550", "createdAt": "2020-12-04T18:06:56Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -465,7 +465,11 @@ boolean joinGroupIfNeeded(final Timer timer) {\n                 }\n             } else {\n                 final RuntimeException exception = future.exception();\n-                log.info(\"Rebalance failed.\", exception);\n+\n+                if (!(exception instanceof MemberIdRequiredException)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTg5OTA4Ng=="}, "originalCommit": {"oid": "f8887d3e2c335841a7c8a9533bedbee0b8d28db6"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3635, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}