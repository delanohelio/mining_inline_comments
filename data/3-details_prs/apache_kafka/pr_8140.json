{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NTIyOTA0", "number": 8140, "title": "HOTFIX: don't try to remove uninitialized changelogs from assignment & don't prematurely mark task closed", "bodyText": "This fixes two issues which together caused the soak to crash/some test to fail occasionally.\nWhat happened was:\nIn the main StreamThread loop we initialized a new task in TaskManager#checkForCompletedRestoration which includes registering, but not initializing, its changelogs. We then complete the loop and call poll, which resulted in a rebalance that revoked the newly-initialized task. In TaskManager#handleAssignment we then closed the task cleanly and go to remove the changelogs from the StoreChangelogReader only to get an IllegalStateException because the changelog partitions were not in the restore consumer's assignment (due to being uninitialized).\nThis by itself should^ be a recoverable error, as we catch exceptions here and retry closing the task as unclean. Of course the task actually was successfully closed (clean) so we now get an unexpected exception Illegal state CLOSED while closing active task\nThe fix(es) I'd propose are:\n\nKeep the restore consumer's assignment in sync with the registered changelogs, ie the set ChangelogReader#changelogs but pause them until they are initialized edit: since the consumer does still perform some actions (gg fetches) on paused partitions, we should avoid adding uninitialized changelogs to the restore consumer's assignment. Instead, we should just skip them when removing.\nMove the StoreChangelogReader#remove call to before the task.closeClean so that the task is only marked as closed if everything was successful. We should do so regardless, as we should (attempt to) remove the changelogs even if the clean close failed and we must do unclean.", "createdAt": "2020-02-20T02:57:14Z", "url": "https://github.com/apache/kafka/pull/8140", "merged": true, "mergeCommit": {"oid": "0d16c26e3c0affadfada1ce91faa617dc065dbcd"}, "closed": true, "closedAt": "2020-02-20T21:24:39Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcF-8DsgH2gAyMzc3NTIyOTA0OjI0MzI3YTVhMDY1NmMyNGNjMTRhMDlkZTMzMDlmNmFjNTdiYzcyZDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGR8lHgFqTM2MjI0Mzk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "24327a5a0656c24cc14a09de3309f6ac57bc72d4", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/24327a5a0656c24cc14a09de3309f6ac57bc72d4", "committedDate": "2020-02-19T23:15:25Z", "message": "try removing partitions first, log exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/e110d7cd8aecceeaa950b78d33384d7f4f850b82", "committedDate": "2020-02-20T02:31:52Z", "message": "keep restore consumer's assignment in sync with StoreChangelogReader#changelogs for initialized tasks"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjA0NTU1", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-361604555", "createdAt": "2020-02-20T02:58:03Z", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMjo1ODowM1rOFsA24w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMjo1ODowM1rOFsA24w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5NTcxNQ==", "bodyText": "Technically it may be running or restoring here", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381695715", "createdAt": "2020-02-20T02:58:03Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -254,7 +254,7 @@ public void suspend() {\n                 partitionGroup.clear();\n \n                 transitionTo(State.SUSPENDED);\n-                log.info(\"Suspended running\");\n+                log.info(\"Suspended active\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjA1MTI5", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-361605129", "createdAt": "2020-02-20T03:00:17Z", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMzowMDoxN1rOFsA7TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMzowMDoxN1rOFsA7TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5Njg0NQ==", "bodyText": "This isn't a necessary part of the fix, but I feel it makes more sense to move this here: the restore consumer's can only make progress on tasks that have been initialized, which only happens in taskManager.tryToCompleteRestoration", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381696845", "createdAt": "2020-02-20T03:00:17Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -837,6 +833,10 @@ void runOnce() {\n             }\n         }\n \n+        // we can always let changelog reader try restoring in order to initialize the changelogs;\n+        // if there's no active restoring or standby updating it would not try to fetch any data\n+        changelogReader.restore();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNjA1Mzc0", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-361605374", "createdAt": "2020-02-20T03:01:17Z", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMzowMToxN1rOFsA9Tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQwMzowMToxN1rOFsA9Tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5NzM1OQ==", "bodyText": "Also not necessary, but I feel it better suggests/reminds that it is taking some action here and not just checking a condition", "url": "https://github.com/apache/kafka/pull/8140#discussion_r381697359", "createdAt": "2020-02-20T03:01:17Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -203,13 +203,14 @@ private void addNewTask(final Task task) {\n     }\n \n     /**\n+     * Tries to initialize any new or still-uninitialized tasks, then checks if they can/have completed restoration.\n+     *\n      * @throws IllegalStateException If store gets registered after initialized is already finished\n      * @throws StreamsException if the store's change log does not contain the partition\n      */\n-    boolean checkForCompletedRestoration() {\n+    boolean tryToCompleteRestoration() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxOTg5Nzgz", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-361989783", "createdAt": "2020-02-20T15:20:53Z", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToyMDo1M1rOFsXkcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNToyMDo1M1rOFsXkcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjA2NzgyNg==", "bodyText": "This is one of Java's best-laid traps. You can't mix \"format args\" mode and \"record exception\" mode. The line as written will actually just not print the exception at all.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing:\", task.id(), e);\n          \n          \n            \n                                log.error(String.format(\"Failed to close task %s cleanly. Attempting to close remaining tasks before re-throwing:\", task.id()), e);", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382067826", "createdAt": "2020-02-20T15:20:53Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -150,10 +150,10 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n             } else /* we previously owned this task, and we don't have it anymore, or it has changed active/standby state */ {\n                 final Set<TopicPartition> inputPartitions = task.inputPartitions();\n                 try {\n-                    task.closeClean();\n                     changelogReader.remove(task.changelogPartitions());\n+                    task.closeClean();\n                 } catch (final RuntimeException e) {\n-                    log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing.\", task.id());\n+                    log.error(\"Failed to close task {} cleanly. Attempting to close remaining tasks before re-throwing:\", task.id(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMTQxNTA3", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-362141507", "createdAt": "2020-02-20T18:41:56Z", "commit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODo0MTo1N1rOFsexzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxODo0Nzo0M1rOFse9JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4NTkzMw==", "bodyText": "The reason I did not do this is that in consumer, even if a partition is paused, we would still try to fetch is fetching position in the poll call if it was not available. And that's why I have to defer this after we've found the starting position and initialize them with seek calls.\nSo I'm thinking maybe we would just remove the illegal-state check from the remoreFromRestoreConsumer call and just log it as a debug?", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382185933", "createdAt": "2020-02-20T18:41:57Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -327,6 +331,9 @@ public void register(final TopicPartition partition, final ProcessorStateManager\n             throw new IllegalStateException(\"There is already a changelog registered for \" + partition +\n                 \", this should not happen: \" + changelogs);\n         }\n+\n+        addChangelogsToRestoreConsumer(Collections.singleton(partition));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4ODU3OA==", "bodyText": "I agree. Originally I put it in front intentionally since initializeIfNeeded is called at task creation not here, and we would only try to initialize the changelogs in restore and hence only check if the restoration can be completed.\nNow that we've delayed the initializeIfNeeded in tryToComplete we should reorder the restore call as well.", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382188578", "createdAt": "2020-02-20T18:47:10Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -837,6 +833,10 @@ void runOnce() {\n             }\n         }\n \n+        // we can always let changelog reader try restoring in order to initialize the changelogs;\n+        // if there's no active restoring or standby updating it would not try to fetch any data\n+        changelogReader.restore();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTY5Njg0NQ=="}, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjE4ODgzNg==", "bodyText": "Yup! I also found this bug and fixed in another PR, but great to see it confirmed in yours as well :)", "url": "https://github.com/apache/kafka/pull/8140#discussion_r382188836", "createdAt": "2020-02-20T18:47:43Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -150,10 +150,10 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n             } else /* we previously owned this task, and we don't have it anymore, or it has changed active/standby state */ {\n                 final Set<TopicPartition> inputPartitions = task.inputPartitions();\n                 try {\n-                    task.closeClean();\n                     changelogReader.remove(task.changelogPartitions());\n+                    task.closeClean();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e110d7cd8aecceeaa950b78d33384d7f4f850b82"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "566dcc15fae31f4521c7b556585de7b962464dec", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/566dcc15fae31f4521c7b556585de7b962464dec", "committedDate": "2020-02-20T20:13:15Z", "message": "Github suggestion: logging\n\nCo-Authored-By: John Roesler <vvcephei@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3164fce49de499e640dad11ed3d56ba47ad14bb7", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/3164fce49de499e640dad11ed3d56ba47ad14bb7", "committedDate": "2020-02-20T20:31:40Z", "message": "dont assign uninitialized changelogs, dont try to remove them"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMjQzOTg4", "url": "https://github.com/apache/kafka/pull/8140#pullrequestreview-362243988", "createdAt": "2020-02-20T21:24:11Z", "commit": {"oid": "3164fce49de499e640dad11ed3d56ba47ad14bb7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1498, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}