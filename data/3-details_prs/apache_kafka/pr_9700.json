{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODc3NDQy", "number": 9700, "title": "KAFKA-10813: InvalidProducerEpoch should be caught and throw as TaskMigrated", "bodyText": "We should catch InvalidProducerEpoch and rethrow as TaskMigrated, similar to ProducerFenced.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-05T02:20:15Z", "url": "https://github.com/apache/kafka/pull/9700", "merged": true, "mergeCommit": {"oid": "310e240abd6acb6ad27dea8b5aae01c1a7674ca4"}, "closed": true, "closedAt": "2020-12-10T04:15:44Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjC-I4ABqjQwNzUwOTk0NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkUrJIAFqTU0Nzc3MzA1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1f38c4c08b66b506642c9c094ea5e73449d4ba7", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/f1f38c4c08b66b506642c9c094ea5e73449d4ba7", "committedDate": "2020-12-05T02:13:17Z", "message": "throw corresponding invalid producer epoch"}, "afterCommit": {"oid": "ef4531f9bdd10cfb4815be49882e8a12ca33e166", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/ef4531f9bdd10cfb4815be49882e8a12ca33e166", "committedDate": "2020-12-05T02:32:06Z", "message": "throw corresponding invalid producer epoch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11", "committedDate": "2020-12-06T06:29:08Z", "message": "throw corresponding invalid producer epoch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ef4531f9bdd10cfb4815be49882e8a12ca33e166", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/ef4531f9bdd10cfb4815be49882e8a12ca33e166", "committedDate": "2020-12-05T02:32:06Z", "message": "throw corresponding invalid producer epoch"}, "afterCommit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11", "committedDate": "2020-12-06T06:29:08Z", "message": "throw corresponding invalid producer epoch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NjI5MjU0", "url": "https://github.com/apache/kafka/pull/9700#pullrequestreview-546629254", "createdAt": "2020-12-07T23:33:16Z", "commit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzozMzoxNlrOIA_x-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QyMzo1MzowN1rOIBASlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNTg5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } catch (final ProducerFencedException | InvalidProducerEpochException error) {\n          \n          \n            \n                        } catch (final ProducerFencedException || InvalidProducerEpochException error) {", "url": "https://github.com/apache/kafka/pull/9700#discussion_r537915897", "createdAt": "2020-12-07T23:33:16Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsProducer.java", "diffHunk": "@@ -184,12 +184,12 @@ public void resetProducer() {\n         transactionInitialized = false;\n     }\n \n-    private void maybeBeginTransaction() throws ProducerFencedException {\n+    private void maybeBeginTransaction() {\n         if (eosEnabled() && !transactionInFlight) {\n             try {\n                 producer.beginTransaction();\n                 transactionInFlight = true;\n-            } catch (final ProducerFencedException error) {\n+            } catch (final ProducerFencedException | InvalidProducerEpochException error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNzk1Mw==", "bodyText": "Why is that here, we catch these three exceptions -- ProducerFenced, InvalidProducerEpoch, and OutOfOrderSequence -- and wrap them as TaskMigratedException, while in StreamsProducer#send, we catch  ProducerFenced, InvalidProducerEpoch, and UnknownProducerId exceptions and wrap those as TaskMigrated?", "url": "https://github.com/apache/kafka/pull/9700#discussion_r537917953", "createdAt": "2020-12-07T23:38:17Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java", "diffHunk": "@@ -199,7 +200,9 @@ private void recordSendError(final String topic, final Exception exception, fina\n         if (isFatalException(exception)) {\n             errorMessage += \"\\nWritten offsets would not be recorded and no more records would be sent since this is a fatal error.\";\n             sendException.set(new StreamsException(errorMessage, exception));\n-        } else if (exception instanceof ProducerFencedException || exception instanceof OutOfOrderSequenceException) {\n+        } else if (exception instanceof ProducerFencedException ||\n+                exception instanceof InvalidProducerEpochException ||\n+                exception instanceof OutOfOrderSequenceException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkyNDI0Ng==", "bodyText": "Just to clarify, I think my question/confusion is twofold:\n\nWhy is it OutOfOrderSequence in one place and UnknownProducerId in another?\nWhat is the difference between these two code paths? Is it really possible for example for the ProducerFencedException to sometimes be thrown directly from Producer#send, and sometimes be passed along through the callback ( as in streamsProducer.send(serializedRecord, (metadata, exception) )", "url": "https://github.com/apache/kafka/pull/9700#discussion_r537924246", "createdAt": "2020-12-07T23:53:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java", "diffHunk": "@@ -199,7 +200,9 @@ private void recordSendError(final String topic, final Exception exception, fina\n         if (isFatalException(exception)) {\n             errorMessage += \"\\nWritten offsets would not be recorded and no more records would be sent since this is a fatal error.\";\n             sendException.set(new StreamsException(errorMessage, exception));\n-        } else if (exception instanceof ProducerFencedException || exception instanceof OutOfOrderSequenceException) {\n+        } else if (exception instanceof ProducerFencedException ||\n+                exception instanceof InvalidProducerEpochException ||\n+                exception instanceof OutOfOrderSequenceException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNzk1Mw=="}, "originalCommit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzMzNzU5", "url": "https://github.com/apache/kafka/pull/9700#pullrequestreview-547733759", "createdAt": "2020-12-09T00:01:08Z", "commit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzUyNDky", "url": "https://github.com/apache/kafka/pull/9700#pullrequestreview-547752492", "createdAt": "2020-12-09T00:49:45Z", "commit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzczMDU5", "url": "https://github.com/apache/kafka/pull/9700#pullrequestreview-547773059", "createdAt": "2020-12-09T01:43:13Z", "commit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMTo0MzoxNFrOIB-UgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwMTo0MzoxNFrOIB-UgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk0MDU0NA==", "bodyText": "I thought about this a bit, and I think both UnknownProducerId and OutOfOrderSequence could be possibly thrown from the caller or directly (though in the later case they would be wrapped as KafkaException).\nI created two tickets, one for producer and one for streams to improve the general picture moving forward.\nhttps://issues.apache.org/jira/browse/KAFKA-10829\nhttps://issues.apache.org/jira/browse/KAFKA-10830", "url": "https://github.com/apache/kafka/pull/9700#discussion_r538940544", "createdAt": "2020-12-09T01:43:14Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java", "diffHunk": "@@ -199,7 +200,9 @@ private void recordSendError(final String topic, final Exception exception, fina\n         if (isFatalException(exception)) {\n             errorMessage += \"\\nWritten offsets would not be recorded and no more records would be sent since this is a fatal error.\";\n             sendException.set(new StreamsException(errorMessage, exception));\n-        } else if (exception instanceof ProducerFencedException || exception instanceof OutOfOrderSequenceException) {\n+        } else if (exception instanceof ProducerFencedException ||\n+                exception instanceof InvalidProducerEpochException ||\n+                exception instanceof OutOfOrderSequenceException) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzkxNzk1Mw=="}, "originalCommit": {"oid": "4cd4ea7c5e7dc784a64c1c688f1a5060a9487c11"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2578, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}