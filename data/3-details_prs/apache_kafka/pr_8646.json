{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1OTYwMDEx", "number": 8646, "title": "KAFKA-9974: Fix flaky test by removing unneeded asserts", "bodyText": "java.lang.AssertionError: Expected: is <0L> but: was <43L> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6) at org.apache.kafka.streams.integration.OptimizedKTableIntegrationTest.shouldApplyUpdatesToStandbyStore(OptimizedKTableIntegrationTest.java:138)\n\nThe tests failed at assertThat(listener.startOffset, is(equalTo(0L)));. It looks like that it did a restore before the assert. But we should expect the restore sometimes happen to resume the failed tasks by itself. It should not cause the test failure under this situation.\nOn the other hands, I checked the original tests in below PR link:\nhttps://github.com/apache/kafka/pull/7238/files#diff-7b659da73450d5bf7a1731b5606e4c83R205\nThe original tests added the assertThat(listener.startOffset, is(equalTo(0L))); is because in the end of the test, we'll also test the startOffset value. But in the newer version of the test, we don't really care about the startOffset or totalNumRestored  value. All we want to test in this test is:\nAssert that the current value in store reflects all messages being processed\nSo, removing the assert can avoid flaky test failure, and also be able to test what the test case want to test.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-05-11T08:53:22Z", "url": "https://github.com/apache/kafka/pull/8646", "merged": true, "mergeCommit": {"oid": "e5bb5358606d8acad03301dc85f2e559ee51ccd0"}, "closed": true, "closedAt": "2020-06-16T17:23:10Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcgLV1mAH2gAyNDE1OTYwMDExOjk1ZWQwZDdmYjEyMDIwMjRhNjY4NjRjZTg4OGY3NTBhNjY0ZjIzMTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcrhZ7mgBqjM0NDQ2NDQwMzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "95ed0d7fb1202024a66864ce888f750a664f2315", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/95ed0d7fb1202024a66864ce888f750a664f2315", "committedDate": "2020-05-11T08:24:28Z", "message": "KAFKA-9974: fix flaky test by removing unneeded asserts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwNDc3NDgy", "url": "https://github.com/apache/kafka/pull/8646#pullrequestreview-410477482", "createdAt": "2020-05-12T22:51:43Z", "commit": {"oid": "95ed0d7fb1202024a66864ce888f750a664f2315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MTo0M1rOGUbsOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQyMjo1MTo0M1rOGUbsOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3ODM5NA==", "bodyText": "I am not sure if this is the right fix. Note that \"restoring\" and \"standby task update\" are two different things, and a standby task should. never use the \"restore\" code path what this assertion verifies.\nWhat could explain a restore is the migration of the active task from one instance to the other. However, this should actually not happen either. Could you reproduce the issue locally? We recently worked on rebalancing so maybe the issue is with regard to that.", "url": "https://github.com/apache/kafka/pull/8646#discussion_r424078394", "createdAt": "2020-05-12T22:51:43Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -133,11 +133,6 @@ public void shouldApplyUpdatesToStandbyStore() throws Exception {\n             kafkaStreams1WasFirstActive = false;\n         }\n \n-        // Assert that no restore has occurred, ensures that when we check later that the restore\n-        // notification actually came from after the rebalance.\n-        assertThat(listener.startOffset, is(equalTo(0L)));\n-        assertThat(listener.totalNumRestored, is(equalTo(0L)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95ed0d7fb1202024a66864ce888f750a664f2315"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c7b7d5dc542b688eefdac2d7215081d7d8ba2d", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/28c7b7d5dc542b688eefdac2d7215081d7d8ba2d", "committedDate": "2020-05-21T08:11:21Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-9974"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f26e431bbd320106236379e2af821aa9dc0f17f", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/8f26e431bbd320106236379e2af821aa9dc0f17f", "committedDate": "2020-05-21T08:23:40Z", "message": "add more info when failed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzY0MTU5", "url": "https://github.com/apache/kafka/pull/8646#pullrequestreview-428364159", "createdAt": "2020-06-10T19:29:05Z", "commit": {"oid": "8f26e431bbd320106236379e2af821aa9dc0f17f"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOToyOTowNVrOGiDT2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxOTozMDowOVrOGiDV2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM1OTAwMA==", "bodyText": "I think one possible explanation is that when we start the two instances, the rebalances took not just once but twice (once for the first instance, and another time for the second). In between the task may already be processed a bit on the first instance, and then after the second rebalance it was migrated and hence was restored a bit causing the listener to be triggered.\nI'd agree with @showuon here that we do not need to strictly forbids restoration not happening when starting the first two instances, just making sure after closing one instance we can restore the other up to the first batch is enough (which is already validated). So I'm fine with removing this listener all together.", "url": "https://github.com/apache/kafka/pull/8646#discussion_r438359000", "createdAt": "2020-06-10T19:29:05Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -133,11 +133,6 @@ public void shouldApplyUpdatesToStandbyStore() throws Exception {\n             kafkaStreams1WasFirstActive = false;\n         }\n \n-        // Assert that no restore has occurred, ensures that when we check later that the restore\n-        // notification actually came from after the rebalance.\n-        assertThat(listener.startOffset, is(equalTo(0L)));\n-        assertThat(listener.totalNumRestored, is(equalTo(0L)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3ODM5NA=="}, "originalCommit": {"oid": "95ed0d7fb1202024a66864ce888f750a664f2315"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODM1OTUxNA==", "bodyText": "BTW there's another report that line 159 can also fail:\njava.lang.AssertionError: Expected: is <true> but: was <false> at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20) at org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:6) at org.apache.kafka.streams.integration.OptimizedKTableIntegrationTest.shouldApplyUpdatesToStandbyStore(OptimizedKTableIntegrationTest.java:159)\n\nWhich is a bit mystery to me, since I cannot really think of a way how that could happen.\nANyways, for now removing that listener all together seems good to me.", "url": "https://github.com/apache/kafka/pull/8646#discussion_r438359514", "createdAt": "2020-06-10T19:30:09Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/OptimizedKTableIntegrationTest.java", "diffHunk": "@@ -133,11 +133,6 @@ public void shouldApplyUpdatesToStandbyStore() throws Exception {\n             kafkaStreams1WasFirstActive = false;\n         }\n \n-        // Assert that no restore has occurred, ensures that when we check later that the restore\n-        // notification actually came from after the rebalance.\n-        assertThat(listener.startOffset, is(equalTo(0L)));\n-        assertThat(listener.totalNumRestored, is(equalTo(0L)));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDA3ODM5NA=="}, "originalCommit": {"oid": "95ed0d7fb1202024a66864ce888f750a664f2315"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd53b0c97bf7ad140b32329b203315df23576753", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/fd53b0c97bf7ad140b32329b203315df23576753", "committedDate": "2020-06-15T09:49:52Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-9974"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e82aa8808cb781c5367a1ca5fada4c964a98943e", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/e82aa8808cb781c5367a1ca5fada4c964a98943e", "committedDate": "2020-06-15T14:18:04Z", "message": "KAFKA-9974: remove the listener"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e82aa8808cb781c5367a1ca5fada4c964a98943e", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/e82aa8808cb781c5367a1ca5fada4c964a98943e", "committedDate": "2020-06-15T14:18:04Z", "message": "KAFKA-9974: remove the listener"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 941, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}