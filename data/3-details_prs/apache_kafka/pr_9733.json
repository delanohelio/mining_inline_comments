{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM2NzE1NjUx", "number": 9733, "title": "KAFKA-10017: fix 2 issues in EosBetaUpgradeIntegrationTest", "bodyText": "The PR follows #9688, to make the EosBetaUpgradeIntegrationTest more stable. Fixed some issues:\n\nTest failed with the error message:\n\norg.apache.kafka.streams.errors.InvalidStateStoreException: Cannot get state store store because the stream thread is PARTITIONS_ASSIGNED, not RUNNING\n\nhttps://ci-builds.apache.org/job/Kafka/job/kafka-trunk-jdk8/274/testReport/org.apache.kafka.streams.integration/EosBetaUpgradeIntegrationTest/shouldUpgradeFromEosAlphaToEosBeta_true_/\nAfter investigation, I found it's because we actually do rebalancing twice after new stream started: 1 for Adding new member, 1 for leader re-joining group during Stable. So, if we only wait for the state to be RUNNING, it might enter REBALANCING state later, and cause that we can't get store successfully\n\nWe setUncaughtExceptionHandler, but didn't handle it well. Before, we expected the uncaught exception only got 1, but actually, we'll get 4 here (2 injected exception, 2 injected commit exception). So, we saw many messages in stderr output, which is not good for debugging. After fix, we only output to stderr when the exception is not what we expected for debugging use.\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-11T09:27:46Z", "url": "https://github.com/apache/kafka/pull/9733", "merged": true, "mergeCommit": {"oid": "130274b7f64bb07de8f9f431b4e3dbbe6be5ddde"}, "closed": true, "closedAt": "2021-01-19T18:31:15Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlEYWZgH2gAyNTM2NzE1NjUxOmQzNjkzZjQwZmI3NTM2ODIyZmQ4NGQxMmEzNWI3N2UyNTYyYjkzYjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdwXUJEgH2gAyNTM2NzE1NjUxOjYyY2JmYjY0OGFlZDM0NjliYTU0NmI4MGY3ZGU3MDYwZjA5MzQ1ODM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d3693f40fb7536822fd84d12a35b77e2562b93b3", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/d3693f40fb7536822fd84d12a35b77e2562b93b3", "committedDate": "2020-12-11T09:18:39Z", "message": "KAFKA-10017: fix 2 issues in EosBetaUpgradeIntegrationTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzMzE5MjQ5", "url": "https://github.com/apache/kafka/pull/9733#pullrequestreview-553319249", "createdAt": "2020-12-16T02:54:06Z", "commit": {"oid": "d3693f40fb7536822fd84d12a35b77e2562b93b3"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjo1NDowNlrOIGqk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwMjo1ODoyOVrOIGqydQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg1OTkzNw==", "bodyText": "To avoid the issue you point out, we actually use this line. As a matter of fact, there is no guarantee if there would be even more than two rebalances. \\cc @ableegoldman might be able to provide more input?", "url": "https://github.com/apache/kafka/pull/9733#discussion_r543859937", "createdAt": "2020-12-16T02:54:06Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -256,8 +261,8 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n             streams2Alpha.cleanUp();\n             streams2Alpha.start();\n             assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3693f40fb7536822fd84d12a35b77e2562b93b3"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0Mzg2MzQxMw==", "bodyText": "Seems this fail did not work as expected? Otherwise the test would have failed all the time? Maybe we should rather set a boolean flag that we evaluate outside of the callback to let the test fail?\nAlso, we have one run with zero exceptions and one run with 2 exception (one exception type each) -- not 4. Thus, we need to handle this differently for the error-injection and the \"clean run\" differently depending on the boolean test flag.", "url": "https://github.com/apache/kafka/pull/9733#discussion_r543863413", "createdAt": "2020-12-16T02:58:29Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -938,11 +943,13 @@ public void close() {}\n \n         final KafkaStreams streams = new KafkaStreams(builder.build(), config, new TestKafkaClientSupplier());\n         streams.setUncaughtExceptionHandler((t, e) -> {\n-            if (uncaughtException != null) {\n+            // should only have our injected exception or commit exception\n+            if (!(e instanceof RuntimeException) && !(e.getMessage().contains(\"test exception\"))) {\n+                // The exception won't cause the test fail since we actually \"expected\" exception thrown and failed the stream.\n+                // So, log to stderr for debugging when the exception is not what we expected\n                 e.printStackTrace(System.err);\n                 fail(\"Should only get one uncaught exception from Streams.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d3693f40fb7536822fd84d12a35b77e2562b93b3"}, "originalPosition": 88}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/ee037dd69633ce50ffdffd0fa77e47938458ff19", "committedDate": "2020-12-21T08:49:42Z", "message": "KAFKA-10017: wait for specific number of rebalancing for new started stream"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c032fd33edeac9bdafb14d4ba7b22902c699bc27", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/c032fd33edeac9bdafb14d4ba7b22902c699bc27", "committedDate": "2020-12-21T07:45:59Z", "message": "KAFKA-10017: wait for specific number of rebalancing for new started stream"}, "afterCommit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/ee037dd69633ce50ffdffd0fa77e47938458ff19", "committedDate": "2020-12-21T08:49:42Z", "message": "KAFKA-10017: wait for specific number of rebalancing for new started stream"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDA5MTM5", "url": "https://github.com/apache/kafka/pull/9733#pullrequestreview-557409139", "createdAt": "2020-12-22T22:44:59Z", "commit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjo0NTowMFrOIKLXZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjo0NTowMFrOIKLXZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU0Mjg4NA==", "bodyText": "nit: missing space between or (line above) and there", "url": "https://github.com/apache/kafka/pull/9733#discussion_r547542884", "createdAt": "2020-12-22T22:45:00Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -135,8 +137,13 @@\n     private final static String CONSUMER_GROUP_ID = \"readCommitted\";\n     private final static String MULTI_PARTITION_INPUT_TOPIC = \"multiPartitionInputTopic\";\n     private final static String MULTI_PARTITION_OUTPUT_TOPIC = \"multiPartitionOutputTopic\";\n+    private final static String APP_DIR_1 = \"appDir1\";\n+    private final static String APP_DIR_2 = \"appDir2\";\n+    private final static String UNEXPECTED_EXCEPTION_MSG = \"Fail the test since we got an unexpected exception or\" +\n+        \"there are too many exceptions thrown, please check standard error log for more info.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDA5MTUx", "url": "https://github.com/apache/kafka/pull/9733#pullrequestreview-557409151", "createdAt": "2020-12-22T22:45:02Z", "commit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjo0NTowMlrOIKLXeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMjo0NTowMlrOIKLXeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU0MjkwNA==", "bodyText": "This variable should be declare volatile because the callback is executed on a different thread.", "url": "https://github.com/apache/kafka/pull/9733#discussion_r547542904", "createdAt": "2020-12-22T22:45:02Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -147,9 +154,16 @@\n     private final AtomicInteger commitCounterClient2 = new AtomicInteger(-1);\n     private final AtomicInteger commitRequested = new AtomicInteger(0);\n \n-    private Throwable uncaughtException;\n-\n     private int testNumber = 0;\n+    private boolean hasUnexpectedError = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDEyNzk5", "url": "https://github.com/apache/kafka/pull/9733#pullrequestreview-557412799", "createdAt": "2020-12-22T22:55:16Z", "commit": {"oid": "ee037dd69633ce50ffdffd0fa77e47938458ff19"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "89eb7efaf2cf5ca1908309dc543d8ab60346861e", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/89eb7efaf2cf5ca1908309dc543d8ab60346861e", "committedDate": "2020-12-23T03:24:03Z", "message": "KAFKA-10017: address reviewer's comment to use volatile for different threads"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4MTg3NDgy", "url": "https://github.com/apache/kafka/pull/9733#pullrequestreview-558187482", "createdAt": "2020-12-23T19:22:07Z", "commit": {"oid": "89eb7efaf2cf5ca1908309dc543d8ab60346861e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOToyMjowN1rOIKxCeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QxOToyMjowN1rOIKxCeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODE2MDEyMg==", "bodyText": "If you reasoning is right, do we need to use waitForNumRebalancingToRunning here, too? If there are multiple rebalances, both clients would participate?\nAlso, you PR does not update all stages when we wait for state changes. Why? Would we not need to apply to logic each time?", "url": "https://github.com/apache/kafka/pull/9733#discussion_r548160122", "createdAt": "2020-12-23T19:22:07Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -246,18 +261,19 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n             assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n             waitForRunning(stateTransitions1);\n \n-            streams2Alpha = getKafkaStreams(\"appDir2\", StreamsConfig.EXACTLY_ONCE);\n+            streams2Alpha = getKafkaStreams(APP_DIR_2, StreamsConfig.EXACTLY_ONCE);\n             streams2Alpha.setStateListener(\n                 (newState, oldState) -> stateTransitions2.add(KeyValue.pair(oldState, newState))\n             );\n             stateTransitions1.clear();\n \n-            assignmentListener.prepareForRebalance();\n+            prevNumAssignments = assignmentListener.prepareForRebalance();\n             streams2Alpha.cleanUp();\n             streams2Alpha.start();\n             assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n+            expectedNumAssignments = assignmentListener.numTotalAssignments() - prevNumAssignments;\n+            waitForNumRebalancingToRunning(stateTransitions2, expectedNumAssignments);\n             waitForRunning(stateTransitions1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "89eb7efaf2cf5ca1908309dc543d8ab60346861e"}, "originalPosition": 79}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f2f096758b4b02a7426c88b44978787e54c98c95", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/f2f096758b4b02a7426c88b44978787e54c98c95", "committedDate": "2021-01-15T02:30:10Z", "message": "KAFKA-10017: fix the exception handler issue"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e5cac2d42d3452713cc52496d6f67c5acc211839", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/e5cac2d42d3452713cc52496d6f67c5acc211839", "committedDate": "2021-01-15T02:26:38Z", "message": "KAFKA-10017: fix the exception handler issue"}, "afterCommit": {"oid": "f2f096758b4b02a7426c88b44978787e54c98c95", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/f2f096758b4b02a7426c88b44978787e54c98c95", "committedDate": "2021-01-15T02:30:10Z", "message": "KAFKA-10017: fix the exception handler issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62cbfb648aed3469ba546b80f7de7060f0934583", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/62cbfb648aed3469ba546b80f7de7060f0934583", "committedDate": "2021-01-15T11:35:25Z", "message": "trigger the jenkins test again"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2255, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}