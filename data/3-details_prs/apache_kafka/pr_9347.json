{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NDA1NTkz", "number": 9347, "title": "KAFKA-10531: Check for negative values to Thread.sleep call", "bodyText": "System.currentTimeMillis() is not monotonic, so using that to calculate\ntime to sleep can result in negative values. That will throw\nIllegalArgumentException.\nThis change checks for that and sleeps for a second (to avoid tight\nloop) if the value returned is negative.\nThis change need to be backported to older branches that have Connect.\nMore detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-28T21:13:49Z", "url": "https://github.com/apache/kafka/pull/9347", "merged": true, "mergeCommit": {"oid": "6fa9f3c97d7b6dd47eea236fc4d60b2791b6d040"}, "closed": true, "closedAt": "2020-10-05T19:06:56Z", "author": {"login": "soondenana"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNaUzHAFqTQ5NzkwMzIzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdPdWhogBqjM4Mzg2Mzc3NDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTAzMjM1", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-497903235", "createdAt": "2020-09-28T21:18:30Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMToxODozMFrOHZP_MA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMToxODozMFrOHZP_MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIzODM4NA==", "bodyText": "nit: typo in Wati", "url": "https://github.com/apache/kafka/pull/9347#discussion_r496238384", "createdAt": "2020-09-28T21:18:30Z", "author": {"login": "splett2"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/KafkaBasedLogTest.java", "diffHunk": "@@ -536,6 +536,22 @@ public void onCompletion(RecordMetadata metadata, Exception exception) {\n         PowerMock.verifyAll();\n     }\n \n+    /**\n+     * Check if the waitForTopicCreate method doesn't throw if time moves backward, and works\n+     * correctly if it increases.\n+     */\n+    @Test\n+    public void testWatiForTopicCreate() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTA1ODEw", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-497905810", "createdAt": "2020-09-28T21:22:49Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMToyMjo1MFrOHZQHRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMToyMjo1MFrOHZQHRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI0MDQ1Mw==", "bodyText": "Why don't we use a monotonic timer?", "url": "https://github.com/apache/kafka/pull/9347#discussion_r496240453", "createdAt": "2020-09-28T21:22:50Z", "author": {"login": "ijuma"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -163,6 +163,18 @@ public void start() {\n         log.info(\"Started KafkaBasedLog for topic \" + topic);\n     }\n \n+    /**\n+     * Sleep for some time so that topic used for this KafkaBasedLog gets created. Note that\n+     * {@code System.currentTimeMillis()} is not monotonic, so check for that condition.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3OTQyNjY3", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-497942667", "createdAt": "2020-09-28T22:28:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMjoyODoyNFrOHZR-DA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMjoyODoyNFrOHZR-DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjI3MDg2MA==", "bodyText": "Time has a sleep method too btw.", "url": "https://github.com/apache/kafka/pull/9347#discussion_r496270860", "createdAt": "2020-09-28T22:28:24Z", "author": {"login": "ijuma"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -133,11 +134,14 @@ public void start() {\n         List<TopicPartition> partitions = new ArrayList<>();\n \n         // We expect that the topics will have been created either manually by the user or automatically by the herder\n-        List<PartitionInfo> partitionInfos = null;\n-        long started = time.milliseconds();\n-        while (partitionInfos == null && time.milliseconds() - started < CREATE_TOPIC_TIMEOUT_MS) {\n+        List<PartitionInfo> partitionInfos = consumer.partitionsFor(topic);\n+        long started = time.nanoseconds();\n+        long maxSleepMs = 1_000;\n+        long sleepMs = 10;\n+        while (partitionInfos == null && time.nanoseconds() - started < CREATE_TOPIC_TIMEOUT_NS) {\n+            Utils.sleep(sleepMs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTUzNjIz", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-498553623", "createdAt": "2020-09-29T14:47:43Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NzA2Nzcx", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-498706771", "createdAt": "2020-09-29T17:12:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzoxMjowN1rOHZ4qbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNzoxMjowN1rOHZ4qbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjkwNDgxMg==", "bodyText": "Why not using partitionsFor(String topic, Duration timeout)  (https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java#L1944) to replace while loop?", "url": "https://github.com/apache/kafka/pull/9347#discussion_r496904812", "createdAt": "2020-09-29T17:12:07Z", "author": {"login": "chia7712"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -133,11 +133,14 @@ public void start() {\n         List<TopicPartition> partitions = new ArrayList<>();\n \n         // We expect that the topics will have been created either manually by the user or automatically by the herder\n-        List<PartitionInfo> partitionInfos = null;\n-        long started = time.milliseconds();\n-        while (partitionInfos == null && time.milliseconds() - started < CREATE_TOPIC_TIMEOUT_MS) {\n+        List<PartitionInfo> partitionInfos = consumer.partitionsFor(topic);\n+        long started = time.nanoseconds();\n+        long maxSleepMs = 1_000;\n+        long sleepMs = 10;\n+        while (partitionInfos == null && time.nanoseconds() - started < CREATE_TOPIC_TIMEOUT_NS) {\n+            time.sleep(sleepMs);\n+            sleepMs = Math.min(2 * sleepMs, maxSleepMs);\n             partitionInfos = consumer.partitionsFor(topic);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDY4MDAy", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-499068002", "createdAt": "2020-09-30T03:57:25Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDExMzgw", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-501411380", "createdAt": "2020-10-02T19:58:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxOTo1ODo0OVrOHb5-7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMDowMDoxMlrOHb6BNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyMzU5OQ==", "bodyText": "We are often using this pattern in other places for time-related constants:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static final long CREATE_TOPIC_TIMEOUT_NS = TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);\n          \n          \n            \n                private static final long CREATE_TOPIC_TIMEOUT_NS = TimeUnit.SECONDS.toNanos(30);", "url": "https://github.com/apache/kafka/pull/9347#discussion_r499023599", "createdAt": "2020-10-02T19:58:49Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -70,7 +70,7 @@\n  */\n public class KafkaBasedLog<K, V> {\n     private static final Logger log = LoggerFactory.getLogger(KafkaBasedLog.class);\n-    private static final long CREATE_TOPIC_TIMEOUT_MS = 30000;\n+    private static final long CREATE_TOPIC_TIMEOUT_NS = TimeUnit.NANOSECONDS.convert(30, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTAyNDE4Mg==", "bodyText": "Let's define a constant above:\nprivate static final long MAX_SLEEP_MS = TimeUnit.SECONDS.toMillis(1);\n\nand then we can replace maxSleepMs with MAX_SLEEP_MS.", "url": "https://github.com/apache/kafka/pull/9347#discussion_r499024182", "createdAt": "2020-10-02T20:00:12Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -133,11 +133,14 @@ public void start() {\n         List<TopicPartition> partitions = new ArrayList<>();\n \n         // We expect that the topics will have been created either manually by the user or automatically by the herder\n-        List<PartitionInfo> partitionInfos = null;\n-        long started = time.milliseconds();\n-        while (partitionInfos == null && time.milliseconds() - started < CREATE_TOPIC_TIMEOUT_MS) {\n+        List<PartitionInfo> partitionInfos = consumer.partitionsFor(topic);\n+        long started = time.nanoseconds();\n+        long maxSleepMs = 1_000;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDc1MjAz", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-501475203", "createdAt": "2020-10-02T22:15:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjoxNTo1MVrOHb87_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQyMjoxNTo1MVrOHb87_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTA3MTk5OA==", "bodyText": "Won't this hide bugs?", "url": "https://github.com/apache/kafka/pull/9347#discussion_r499071998", "createdAt": "2020-10-02T22:15:51Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -331,6 +331,11 @@ public static ByteBuffer wrapNullable(byte[] array) {\n      */\n     public static void sleep(long ms) {\n         try {\n+            if (ms <= 0) {\n+                // No need to sleep\n+                log.debug(\"Skipping sleep as asked to sleep for {} msec\", ms);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNDgyODQ5", "url": "https://github.com/apache/kafka/pull/9347#pullrequestreview-501482849", "createdAt": "2020-10-02T22:42:04Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aede8a672f23b28ab31080847a4012a2c263b49d", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/aede8a672f23b28ab31080847a4012a2c263b49d", "committedDate": "2020-10-05T05:57:40Z", "message": "KAFKA-10531: Check for negative values to Thread.sleep call\n\nSystem.currentTimeMillis() is not monotonic, so using that to calculate\ntime to sleep can result in negative values. That will throw\nIllegalArgumentException.\n\nThis change checks for that and sleeps for a second (to avoid tight\nloop) if the value returned is negative."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d69c6fb8c2685ab0f104468f3ad0ec4806e3f15e", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/d69c6fb8c2685ab0f104468f3ad0ec4806e3f15e", "committedDate": "2020-10-05T05:57:40Z", "message": "Don't use milliseconds to calculate elapsed time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67ffa9cbec7defe4ba3f6b4ee52be6750a31a261", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/67ffa9cbec7defe4ba3f6b4ee52be6750a31a261", "committedDate": "2020-10-05T05:57:40Z", "message": "Use time.sleep instead of Utils.sleep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fc816b73b0ba9cd224103ef68d14b7400a52be4b", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/fc816b73b0ba9cd224103ef68d14b7400a52be4b", "committedDate": "2020-10-05T05:57:40Z", "message": "Set initial sleep value to be 100 msec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91ed268ceca92fa225d3d8402bba39f454a77400", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/91ed268ceca92fa225d3d8402bba39f454a77400", "committedDate": "2020-10-05T05:57:40Z", "message": "Use TimeUnit.SECONDS.toXXX pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4aafe8577a42c8a68446d3daedff749473d559", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/1a4aafe8577a42c8a68446d3daedff749473d559", "committedDate": "2020-10-05T05:57:40Z", "message": "Don't sleep if negative sleep is provided"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4054146c69b14a92c53066830f8f732bf446bac4", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/4054146c69b14a92c53066830f8f732bf446bac4", "committedDate": "2020-10-05T05:57:40Z", "message": "Revert skip sleep change"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "4054146c69b14a92c53066830f8f732bf446bac4", "author": {"user": {"login": "soondenana", "name": "Vikas Singh"}}, "url": "https://github.com/apache/kafka/commit/4054146c69b14a92c53066830f8f732bf446bac4", "committedDate": "2020-10-05T05:57:40Z", "message": "Revert skip sleep change"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 703, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}