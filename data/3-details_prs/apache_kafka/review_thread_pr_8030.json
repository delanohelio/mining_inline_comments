{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5OTE3MDkx", "number": 8030, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNzo0MTo0NlrODcesxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowNzoxN1rODcr6Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMTg5NzAyOnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wMlQxNzo0MTo0NlrOFkixeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMTo1MjoxMFrOFlRXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Mjc3OA==", "bodyText": "Maybe this should be in ProduceResponseTest? We started writing this type of test in dedicated classes as this class was getting too large.", "url": "https://github.com/apache/kafka/pull/8030#discussion_r373862778", "createdAt": "2020-02-02T17:41:46Z", "author": {"login": "ijuma"}, "path": "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java", "diffHunk": "@@ -653,6 +654,33 @@ public void produceResponseVersionTest() {\n         assertEquals(\"Response data does not match\", responseData, v2Response.responses());\n     }\n \n+    @Test\n+    public void produceResponseRecordErrorsTest() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e7132184b0e242d772193bc02522ca188c12f43"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyNjIyNA==", "bodyText": "@ijuma Thanks for the review. I have moved this test and the other two produce response tests to ProduceResponseTest.", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374626224", "createdAt": "2020-02-04T11:52:10Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/test/java/org/apache/kafka/common/requests/RequestResponseTest.java", "diffHunk": "@@ -653,6 +654,33 @@ public void produceResponseVersionTest() {\n         assertEquals(\"Response data does not match\", responseData, v2Response.responses());\n     }\n \n+    @Test\n+    public void produceResponseRecordErrorsTest() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Mzg2Mjc3OA=="}, "originalCommit": {"oid": "4e7132184b0e242d772193bc02522ca188c12f43"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxNDA2MDgyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNjowNzoxN1rOFk20HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMTo1NTowN1rOFlRcaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MTEzMg==", "bodyText": "Should we convert the type of LOG_APPEND_TIME_KEY_NAME from long to Field.Int64? the benefit of using Field.Int64 is shown below.\n\nremove the duplicate code of converting LOG_APPEND_TIME_KEY_NAME  to Field.Int64\nuse more readable method - getOrElse", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374191132", "createdAt": "2020-02-03T16:07:17Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java", "diffHunk": "@@ -222,7 +222,8 @@ public ProduceResponse(Struct struct) {\n                 int partition = partRespStruct.get(PARTITION_ID);\n                 Errors error = Errors.forCode(partRespStruct.get(ERROR_CODE));\n                 long offset = partRespStruct.getLong(BASE_OFFSET_KEY_NAME);\n-                long logAppendTime = partRespStruct.getLong(LOG_APPEND_TIME_KEY_NAME);\n+                long logAppendTime = partRespStruct.hasField(LOG_APPEND_TIME_KEY_NAME) ?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e7132184b0e242d772193bc02522ca188c12f43"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyNzQzNQ==", "bodyText": "@chia7712 Thanks for the review. As @hachikuji mentioned, we can convert to use the generated classes, so will leave that for a separate PR.", "url": "https://github.com/apache/kafka/pull/8030#discussion_r374627435", "createdAt": "2020-02-04T11:55:07Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/ProduceResponse.java", "diffHunk": "@@ -222,7 +222,8 @@ public ProduceResponse(Struct struct) {\n                 int partition = partRespStruct.get(PARTITION_ID);\n                 Errors error = Errors.forCode(partRespStruct.get(ERROR_CODE));\n                 long offset = partRespStruct.getLong(BASE_OFFSET_KEY_NAME);\n-                long logAppendTime = partRespStruct.getLong(LOG_APPEND_TIME_KEY_NAME);\n+                long logAppendTime = partRespStruct.hasField(LOG_APPEND_TIME_KEY_NAME) ?", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE5MTEzMg=="}, "originalCommit": {"oid": "4e7132184b0e242d772193bc02522ca188c12f43"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4177, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}