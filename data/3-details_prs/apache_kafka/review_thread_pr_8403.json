{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2OTI1MDE0", "number": 8403, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyNTowNlrODth9dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyNTowNlrODth9dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDY4OTE3OnYy", "diffSide": "RIGHT", "path": "tests/kafkatest/tests/core/security_rolling_upgrade_test.py", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyNTowNlrOF_Adig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxNzowNzo0MFrOF_KTjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMjE3MA==", "bodyText": "Can you elaborate why we added the two lines above?", "url": "https://github.com/apache/kafka/pull/8403#discussion_r401612170", "createdAt": "2020-04-01T13:25:06Z", "author": {"login": "ijuma"}, "path": "tests/kafkatest/tests/core/security_rolling_upgrade_test.py", "diffHunk": "@@ -96,10 +96,15 @@ def roll_in_sasl_mechanism(self, security_protocol, new_sasl_mechanism):\n         self.set_authorizer_and_bounce(security_protocol, security_protocol, KafkaService.SIMPLE_AUTHORIZER)\n \n     def add_separate_broker_listener(self, broker_security_protocol, broker_sasl_mechanism):\n+        # Enable the new internal listener on all brokers first\n+        self.kafka.open_port(self.kafka.INTERBROKER_LISTENER_NAME)\n+        self.kafka.port_mappings[self.kafka.INTERBROKER_LISTENER_NAME].security_protocol = broker_security_protocol\n+        self.kafka.client_sasl_mechanism = broker_sasl_mechanism", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f223d787543ceaab3f88ebf3b54ff2f9c86c6ef"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTY4MjY4NA==", "bodyText": "The Kafka service used for system test starts up a client listener and an inter-broker listener and doesn't properly support other listeners. The security protocol and SASL mechanism used for the listeners is derived from the security protocol and the mechanism specified for client/inter-broker. The two lines above work around that limitation by overriding the security protocol and SASL mechanism to allow broker to start up a listener before using it as the inter-broker listener. It would be a much larger change to add proper support for additional listeners to the Kafka service, so I just updated this test which fails very frequently at the moment.", "url": "https://github.com/apache/kafka/pull/8403#discussion_r401682684", "createdAt": "2020-04-01T14:59:17Z", "author": {"login": "rajinisivaram"}, "path": "tests/kafkatest/tests/core/security_rolling_upgrade_test.py", "diffHunk": "@@ -96,10 +96,15 @@ def roll_in_sasl_mechanism(self, security_protocol, new_sasl_mechanism):\n         self.set_authorizer_and_bounce(security_protocol, security_protocol, KafkaService.SIMPLE_AUTHORIZER)\n \n     def add_separate_broker_listener(self, broker_security_protocol, broker_sasl_mechanism):\n+        # Enable the new internal listener on all brokers first\n+        self.kafka.open_port(self.kafka.INTERBROKER_LISTENER_NAME)\n+        self.kafka.port_mappings[self.kafka.INTERBROKER_LISTENER_NAME].security_protocol = broker_security_protocol\n+        self.kafka.client_sasl_mechanism = broker_sasl_mechanism", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMjE3MA=="}, "originalCommit": {"oid": "4f223d787543ceaab3f88ebf3b54ff2f9c86c6ef"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTcyMjA4Nw==", "bodyText": "Thanks for the explanation. Makes sense. What is the reason why the test started failing frequently?", "url": "https://github.com/apache/kafka/pull/8403#discussion_r401722087", "createdAt": "2020-04-01T15:51:50Z", "author": {"login": "ijuma"}, "path": "tests/kafkatest/tests/core/security_rolling_upgrade_test.py", "diffHunk": "@@ -96,10 +96,15 @@ def roll_in_sasl_mechanism(self, security_protocol, new_sasl_mechanism):\n         self.set_authorizer_and_bounce(security_protocol, security_protocol, KafkaService.SIMPLE_AUTHORIZER)\n \n     def add_separate_broker_listener(self, broker_security_protocol, broker_sasl_mechanism):\n+        # Enable the new internal listener on all brokers first\n+        self.kafka.open_port(self.kafka.INTERBROKER_LISTENER_NAME)\n+        self.kafka.port_mappings[self.kafka.INTERBROKER_LISTENER_NAME].security_protocol = broker_security_protocol\n+        self.kafka.client_sasl_mechanism = broker_sasl_mechanism", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMjE3MA=="}, "originalCommit": {"oid": "4f223d787543ceaab3f88ebf3b54ff2f9c86c6ef"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTc3MzQ1Mg==", "bodyText": "Test seems to have been failing since Jan 15th. Not sure if it was more stable before that. Consumer was timing out in the logs I looked at. Will investigate more to see if there is any other issue causing the failures now.", "url": "https://github.com/apache/kafka/pull/8403#discussion_r401773452", "createdAt": "2020-04-01T17:07:40Z", "author": {"login": "rajinisivaram"}, "path": "tests/kafkatest/tests/core/security_rolling_upgrade_test.py", "diffHunk": "@@ -96,10 +96,15 @@ def roll_in_sasl_mechanism(self, security_protocol, new_sasl_mechanism):\n         self.set_authorizer_and_bounce(security_protocol, security_protocol, KafkaService.SIMPLE_AUTHORIZER)\n \n     def add_separate_broker_listener(self, broker_security_protocol, broker_sasl_mechanism):\n+        # Enable the new internal listener on all brokers first\n+        self.kafka.open_port(self.kafka.INTERBROKER_LISTENER_NAME)\n+        self.kafka.port_mappings[self.kafka.INTERBROKER_LISTENER_NAME].security_protocol = broker_security_protocol\n+        self.kafka.client_sasl_mechanism = broker_sasl_mechanism", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMjE3MA=="}, "originalCommit": {"oid": "4f223d787543ceaab3f88ebf3b54ff2f9c86c6ef"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3169, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}