{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NTY3NTU1", "number": 8156, "title": "MINOR: fix ClassCastException handling", "bodyText": "Detected this issue by chance. Seems to need a fix in older branches, too.\nOriginally, we put the code to handle class-cast-exception into SinkNode on purpose to have the error message only for sink topics (not for changelogs). But in hindsight, it seems better to pull it into the RecordCollector directly.\nCall for review @ableegoldman @vvcephei", "createdAt": "2020-02-22T08:35:55Z", "url": "https://github.com/apache/kafka/pull/8156", "merged": true, "mergeCommit": {"oid": "e7f6c1e1a7590244cca88622c9e1f6b3545b1dc1"}, "closed": true, "closedAt": "2020-03-07T07:27:05Z", "author": {"login": "mjsax"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGwIJPAH2gAyMzc4NTY3NTU1OmNlMDllMzI5OTdjMDZmMThhYzNkNzc1MDAwMWIyNzgyOGZhZDg2Nzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJvyScAFqTM2NzMwODM2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ce09e32997c06f18ac3d7750001b27828fad8678", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/ce09e32997c06f18ac3d7750001b27828fad8678", "committedDate": "2020-02-22T08:33:58Z", "message": "MINOR: fix ClassCastException handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDE4MTA1", "url": "https://github.com/apache/kafka/pull/8156#pullrequestreview-363018105", "createdAt": "2020-02-22T08:36:58Z", "commit": {"oid": "ce09e32997c06f18ac3d7750001b27828fad8678"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwODozNjo1OFrOFtKNWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwODozNjo1OFrOFtKNWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5NzQ5Ng==", "bodyText": "Moved this from SinkNode to here -- otherwise, we wrap the ClassCastException with a StreamsException and the SinkNode would not add the correct error message.", "url": "https://github.com/apache/kafka/pull/8156#discussion_r382897496", "createdAt": "2020-02-22T08:36:58Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/RecordCollectorImpl.java", "diffHunk": "@@ -152,6 +152,22 @@ public void initialize() {\n         try {\n             keyBytes = keySerializer.serialize(topic, headers, key);\n             valBytes = valueSerializer.serialize(topic, headers, value);\n+        } catch (final ClassCastException exception) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce09e32997c06f18ac3d7750001b27828fad8678"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYzMDE4MTQ4", "url": "https://github.com/apache/kafka/pull/8156#pullrequestreview-363018148", "createdAt": "2020-02-22T08:38:22Z", "commit": {"oid": "ce09e32997c06f18ac3d7750001b27828fad8678"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwODozODoyMlrOFtKNgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMlQwODozODoyMlrOFtKNgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mjg5NzUzOQ==", "bodyText": "This test was not correct -- if we get a ClassCastExeption in RecordCollectorImpl#send() it would be wrapped by a StreamsException and not be thrown directly. Hence, the test setup a wrong condition and thus did not \"catch\" the bug.", "url": "https://github.com/apache/kafka/pull/8156#discussion_r382897539", "createdAt": "2020-02-22T08:38:22Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/SinkNodeTest.java", "diffHunk": "@@ -16,40 +16,22 @@\n  */\n package org.apache.kafka.streams.processor.internals;\n \n-import org.apache.kafka.common.header.Headers;\n import org.apache.kafka.common.serialization.Serdes;\n import org.apache.kafka.common.serialization.Serializer;\n import org.apache.kafka.common.utils.Bytes;\n import org.apache.kafka.streams.errors.StreamsException;\n-import org.apache.kafka.streams.processor.StreamPartitioner;\n import org.apache.kafka.streams.state.StateSerdes;\n import org.apache.kafka.test.InternalMockProcessorContext;\n import org.apache.kafka.test.MockRecordCollector;\n import org.junit.Before;\n import org.junit.Test;\n \n-import static org.hamcrest.CoreMatchers.containsString;\n-import static org.hamcrest.CoreMatchers.instanceOf;\n-import static org.hamcrest.MatcherAssert.assertThat;\n import static org.junit.Assert.fail;\n \n public class SinkNodeTest {\n     private final StateSerdes<Bytes, Bytes> anyStateSerde = StateSerdes.withBuiltinTypes(\"anyName\", Bytes.class, Bytes.class);\n     private final Serializer<byte[]> anySerializer = Serdes.ByteArray().serializer();\n-    private final RecordCollector recordCollector = new MockRecordCollector() {\n-        @Override\n-        public <K, V> void send(final String topic,\n-                                final K key,\n-                                final V value,\n-                                final Headers headers,\n-                                final Long timestamp,\n-                                final Serializer<K> keySerializer,\n-                                final Serializer<V> valueSerializer,\n-                                final StreamPartitioner<? super K, ? super V> partitioner) {\n-            throw new ClassCastException(\"boom\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce09e32997c06f18ac3d7750001b27828fad8678"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f0b68338e1674311fad31e3304573fea834693f", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/3f0b68338e1674311fad31e3304573fea834693f", "committedDate": "2020-02-22T08:39:51Z", "message": "Improve error message"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MzA4MzYx", "url": "https://github.com/apache/kafka/pull/8156#pullrequestreview-367308361", "createdAt": "2020-03-02T15:51:52Z", "commit": {"oid": "3f0b68338e1674311fad31e3304573fea834693f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1542, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}