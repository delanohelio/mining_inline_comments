{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYyNjI3ODUx", "number": 7956, "title": "KAFKA-9392; Clarify deleteAcls javadoc and add test for create/delete timing", "bodyText": "Follow-on from PR #7911  to clarify the guarantee for deleteAcls and add a deterministic test to ensure we don't regress.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-01-14T13:13:24Z", "url": "https://github.com/apache/kafka/pull/7956", "merged": true, "mergeCommit": {"oid": "66fdb59ed0482f430ee59dcbfeccfab75f3cd948"}, "closed": true, "closedAt": "2020-06-01T15:38:22Z", "author": {"login": "rajinisivaram"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7NJvcAFqTM0NDUyMjY2NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnB8QbgH2gAyMzYyNjI3ODUxOjQ2NTgyZTM4MmVhMTY0NzQxYzY4MzAzYzQ4MGFiMDlkM2Y4OTdhYWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0NTIyNjY0", "url": "https://github.com/apache/kafka/pull/7956#pullrequestreview-344522664", "createdAt": "2020-01-17T11:35:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNTo1MVrOFe2eeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xN1QxMTozNTo1MVrOFe2eeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2Nzg5NDEzNw==", "bodyText": "@ijuma I added these to the Authorizer API (hence Admin API as well). But I wasn't sure if we should leave it to the implementation instead - i.e. implementations may provider stronger or weaker guarantees. If so, this doc would move to AclAuthorizer. What do you think?", "url": "https://github.com/apache/kafka/pull/7956#discussion_r367894137", "createdAt": "2020-01-17T11:35:51Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/server/authorizer/Authorizer.java", "diffHunk": "@@ -114,6 +114,21 @@\n      * This is an asynchronous API that enables the caller to avoid blocking during the update. Implementations of this\n      * API can return completed futures using {@link java.util.concurrent.CompletableFuture#completedFuture(Object)}\n      * to process the update synchronously on the request thread.\n+     * <p>\n+     * <b>Concurrent updates:</b>\n+     * <ul>\n+     *     <li>If ACLs are created using {@link #createAcls(AuthorizableRequestContext, List)} while a delete is in\n+     *     progress, these ACLs may or may not be considered for deletion depending on the order of updates.\n+     *     The returned {@link AclDeleteResult} indicates which ACLs were deleted.</li>\n+     *     <li>If the provided filters use resource pattern type\n+     *     {@link org.apache.kafka.common.resource.PatternType#MATCH} that needs to filter all resources to determine\n+     *     matching ACLs, only ACLs that have already been propagated to the broker processing the ACL update will be\n+     *     deleted. This may not include some ACLs that were persisted, but not yet propagated to all brokers. The\n+     *     returned {@link AclDeleteResult} indicates which ACLs were deleted.</li>\n+     *     <li>If the provided filters use other resource pattern types that perform a direct match, all matching ACLs\n+     *     from previously completed {@link #createAcls(AuthorizableRequestContext, List)} )} are guaranteed\n+     *     to be deleted.</li>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "8b3fece0b9b61541603432866f8174ffdda43e70", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/8b3fece0b9b61541603432866f8174ffdda43e70", "committedDate": "2020-05-28T15:41:40Z", "message": "KAFKA-9392; Clarify deleteAcls javadoc and add test for create/delete timing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8b3fece0b9b61541603432866f8174ffdda43e70", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/8b3fece0b9b61541603432866f8174ffdda43e70", "committedDate": "2020-05-28T15:41:40Z", "message": "KAFKA-9392; Clarify deleteAcls javadoc and add test for create/delete timing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNDI0MTEz", "url": "https://github.com/apache/kafka/pull/7956#pullrequestreview-421424113", "createdAt": "2020-05-30T15:58:12Z", "commit": {"oid": "8b3fece0b9b61541603432866f8174ffdda43e70"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46582e382ea164741c68303c480ab09d3f897aab", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/46582e382ea164741c68303c480ab09d3f897aab", "committedDate": "2020-06-01T15:24:51Z", "message": "Address review comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1992, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}