{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1MjMwNTAw", "number": 8253, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyMToyNVrODo0MvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjozMjo1MFrODo6U0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTI0ODYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyMToyNVrOF3mWlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMToyOTowN1rOF3uurg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NDM3NQ==", "bodyText": "nit: I think it's ok to KAFKA-7296 to explain this check, but do we need to mention KAFKA-9656 as well?", "url": "https://github.com/apache/kafka/pull/8253#discussion_r393844375", "createdAt": "2020-03-17T17:21:25Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -2164,14 +2164,25 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       // the callback for sending an offset commit response\n       def sendResponseCallback(authorizedTopicErrors: Map[TopicPartition, Errors]): Unit = {\n-        val combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n+        var combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n         if (isDebugEnabled)\n           combinedCommitStatus.foreach { case (topicPartition, error) =>\n             if (error != Errors.NONE) {\n               debug(s\"TxnOffsetCommit with correlation id ${header.correlationId} from client ${header.clientId} \" +\n                 s\"on partition $topicPartition failed due to ${error.exceptionName}\")\n             }\n           }\n+\n+        // For KAFKA-9656, we need to replace COORDINATOR_LOAD_IN_PROGRESS with COORDINATOR_NOT_AVAILABLE", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzk4MTYxNA==", "bodyText": "I don't think we need", "url": "https://github.com/apache/kafka/pull/8253#discussion_r393981614", "createdAt": "2020-03-17T21:29:07Z", "author": {"login": "abbccdda"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -2164,14 +2164,25 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       // the callback for sending an offset commit response\n       def sendResponseCallback(authorizedTopicErrors: Map[TopicPartition, Errors]): Unit = {\n-        val combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n+        var combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n         if (isDebugEnabled)\n           combinedCommitStatus.foreach { case (topicPartition, error) =>\n             if (error != Errors.NONE) {\n               debug(s\"TxnOffsetCommit with correlation id ${header.correlationId} from client ${header.clientId} \" +\n                 s\"on partition $topicPartition failed due to ${error.exceptionName}\")\n             }\n           }\n+\n+        // For KAFKA-9656, we need to replace COORDINATOR_LOAD_IN_PROGRESS with COORDINATOR_NOT_AVAILABLE", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NDM3NQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MTI1ODA4OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyNDowNVrOF3mc2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNzoyNDowNVrOF3mc2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Mzg0NTk3OA==", "bodyText": "Just doublechecking, but does this cover any client version prior to 2.0? I think it would be good to mention this in the comment.", "url": "https://github.com/apache/kafka/pull/8253#discussion_r393845978", "createdAt": "2020-03-17T17:24:05Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -2164,14 +2164,25 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       // the callback for sending an offset commit response\n       def sendResponseCallback(authorizedTopicErrors: Map[TopicPartition, Errors]): Unit = {\n-        val combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n+        var combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n         if (isDebugEnabled)\n           combinedCommitStatus.foreach { case (topicPartition, error) =>\n             if (error != Errors.NONE) {\n               debug(s\"TxnOffsetCommit with correlation id ${header.correlationId} from client ${header.clientId} \" +\n                 s\"on partition $topicPartition failed due to ${error.exceptionName}\")\n             }\n           }\n+\n+        // For KAFKA-9656, we need to replace COORDINATOR_LOAD_IN_PROGRESS with COORDINATOR_NOT_AVAILABLE\n+        // for older producer client which could potentially fail due to a later bug fix in KAFKA-7296.\n+        if (txnOffsetCommitRequest.version < 2) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjI0OTI4OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjozMjoxN1rOF3wZlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjozMjoxN1rOF3wZlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwODk4MA==", "bodyText": "typo: \"on onwards\"", "url": "https://github.com/apache/kafka/pull/8253#discussion_r394008980", "createdAt": "2020-03-17T22:32:17Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -2164,14 +2164,28 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       // the callback for sending an offset commit response\n       def sendResponseCallback(authorizedTopicErrors: Map[TopicPartition, Errors]): Unit = {\n-        val combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n+        var combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n         if (isDebugEnabled)\n           combinedCommitStatus.foreach { case (topicPartition, error) =>\n             if (error != Errors.NONE) {\n               debug(s\"TxnOffsetCommit with correlation id ${header.correlationId} from client ${header.clientId} \" +\n                 s\"on partition $topicPartition failed due to ${error.exceptionName}\")\n             }\n           }\n+\n+        // We need to replace COORDINATOR_LOAD_IN_PROGRESS with COORDINATOR_NOT_AVAILABLE\n+        // for older producer client from 0.11 to prior 2.0, which could potentially crash due\n+        // to unexpected loading error. This bug is fixed later by KAFKA-7296 in version 2.0.\n+        // Clients using txn commit protocol >= 2 (version 2.3 and on onwards)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjI1MjMzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjozMjo1MFrOF3wbEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QyMjozMjo1MFrOF3wbEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDAwOTM2Mw==", "bodyText": "nit: you probably mean 2.0.1? We could probably leave this out since the jira has the details.", "url": "https://github.com/apache/kafka/pull/8253#discussion_r394009363", "createdAt": "2020-03-17T22:32:50Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -2164,14 +2164,28 @@ class KafkaApis(val requestChannel: RequestChannel,\n \n       // the callback for sending an offset commit response\n       def sendResponseCallback(authorizedTopicErrors: Map[TopicPartition, Errors]): Unit = {\n-        val combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n+        var combinedCommitStatus = authorizedTopicErrors ++ unauthorizedTopicErrors ++ nonExistingTopicErrors\n         if (isDebugEnabled)\n           combinedCommitStatus.foreach { case (topicPartition, error) =>\n             if (error != Errors.NONE) {\n               debug(s\"TxnOffsetCommit with correlation id ${header.correlationId} from client ${header.clientId} \" +\n                 s\"on partition $topicPartition failed due to ${error.exceptionName}\")\n             }\n           }\n+\n+        // We need to replace COORDINATOR_LOAD_IN_PROGRESS with COORDINATOR_NOT_AVAILABLE\n+        // for older producer client from 0.11 to prior 2.0, which could potentially crash due\n+        // to unexpected loading error. This bug is fixed later by KAFKA-7296 in version 2.0.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3263, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}