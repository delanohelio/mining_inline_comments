{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNTg1NDIw", "number": 9120, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo0NjoyOFrOEVCKmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoyNjozOFrOEVE2GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDkxMDM0OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo0NjoyOFrOG7j24Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjowODowMFrOG7nWQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNjY1Nw==", "bodyText": "Nit: [a]ctive (i understand that it's just c&p but it seem wrong in the original JavaDoc, too.\nstreams -> Kafka Streams\nAlso, missing . at the end of the sentence.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465106657", "createdAt": "2020-08-04T14:46:28Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2Mzg0MQ==", "bodyText": "I'm with you, we should fix it, for the deprecated ones too.\nFixed.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465163841", "createdAt": "2020-08-04T16:08:00Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNjY1Nw=="}, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDkxMzkwOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo0NzoxNlrOG7j5Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjowODozN1rOG7nX6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNzIzMA==", "bodyText": "nit: Streams -> Kafka Streams\nAlso, missing . at the end of the sentence.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465107230", "createdAt": "2020-08-04T14:47:16Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Streams instances that host the key as standbys", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NDI2Nw==", "bodyText": "Fixed.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465164267", "createdAt": "2020-08-04T16:08:37Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Streams instances that host the key as standbys", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNzIzMA=="}, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDkxNjcyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNDo0Nzo0N1rOG7j6zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjowOTowNlrOG7nZKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNzY2Mg==", "bodyText": "[s]tore", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465107662", "createdAt": "2020-08-04T14:47:47Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Streams instances that host the key as standbys\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the Store partition corresponding to the key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE2NDU4Ng==", "bodyText": "Fixed.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465164586", "createdAt": "2020-08-04T16:09:06Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -71,11 +75,40 @@ public HostInfo getActiveHost() {\n      * Get the Store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the Active streams instance for given key\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Streams instances that host the key as standbys\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the Store partition corresponding to the key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTEwNzY2Mg=="}, "originalCommit": {"oid": "6efab44f57e300828bb7a198e88145ece7583ec5"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTM0MzQwOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoyNToxMFrOG7oCcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNDoyNTozNFrOG75rdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg==", "bodyText": "I feel it should be \"key partition number\" instead of store.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465175152", "createdAt": "2020-08-04T16:25:10Z", "author": {"login": "brary"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MDUxMg==", "bodyText": "We are fetching the state store partition number corresponding to the key with this getter and hence that description I believe.\nMore over, this is a copy paste work, we copied existing getter's with a new name and deprecated the old getter's.\nAny specific reason why you feel that the description should be \"key partition number\" ?", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465190512", "createdAt": "2020-08-04T16:50:16Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MzIzMA==", "bodyText": "@mjsax Please correct me if I'm wrong.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465193230", "createdAt": "2020-08-04T16:54:45Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwMTYwMA==", "bodyText": "I wrote the old getters & javadocs but now I feel that key partition number better conveys the meaning than store partition number.\nThe class KeyQueryMetadata contains the information for a key being requested via query. So, the partition number we are returning here is the partition to which the key belongs, it has no relation to any store yet. You will of course use this partition information to fetch the data corresponding to the key from any store but still that doesn't change the fact that this partition number is related to the key rather than the store.\nI am fine either way though.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465201600", "createdAt": "2020-08-04T17:09:07Z", "author": {"login": "brary"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MDc5OA==", "bodyText": "IMHO, \"key partition number\" sound like as if the key would be partitioned, and we get the partition number for the \"key partition\". But in fact, the store is partitioned and thus I think the current \"store partition number\" is ok as-is.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465380798", "createdAt": "2020-08-04T23:13:13Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTQ2NDE4Mg==", "bodyText": "Sure, that's fine.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465464182", "createdAt": "2020-08-05T04:25:34Z", "author": {"login": "brary"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.\n+     *\n+     * @return store partition number", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NTE1Mg=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNTM0OTM3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjoyNjozOFrOG7oGOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNjo1MzoxOVrOG7pFvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NjEyMQ==", "bodyText": "Get the partition number corresponding to the key.", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465176121", "createdAt": "2020-08-04T16:26:38Z", "author": {"login": "brary"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE5MjM4MQ==", "bodyText": "Relatable to the comments from line 106 right ?", "url": "https://github.com/apache/kafka/pull/9120#discussion_r465192381", "createdAt": "2020-08-04T16:53:19Z", "author": {"login": "johnthotekat"}, "path": "streams/src/main/java/org/apache/kafka/streams/KeyQueryMetadata.java", "diffHunk": "@@ -50,32 +50,65 @@ public KeyQueryMetadata(final HostInfo activeHost, final Set<HostInfo> standbyHo\n     }\n \n     /**\n-     * Get the Active streams instance for given key\n+     * Get the active Kafka Streams instance for given key.\n      *\n      * @return active instance's {@link HostInfo}\n+     * @deprecated Use {@link #activeHost()} instead.\n      */\n+    @Deprecated\n     public HostInfo getActiveHost() {\n         return activeHost;\n     }\n \n     /**\n-     * Get the Streams instances that host the key as standbys\n+     * Get the Kafka Streams instances that host the key as standbys.\n      *\n      * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     * @deprecated Use {@link #standbyHosts()} instead.\n      */\n+    @Deprecated\n     public Set<HostInfo> getStandbyHosts() {\n         return standbyHosts;\n     }\n \n     /**\n-     * Get the Store partition corresponding to the key.\n+     * Get the store partition corresponding to the key.\n      *\n      * @return store partition number\n+     * @deprecated Use {@link #partition()} instead.\n      */\n+    @Deprecated\n     public int getPartition() {\n         return partition;\n     }\n \n+    /**\n+     * Get the active Kafka Streams instance for given key.\n+     *\n+     * @return active instance's {@link HostInfo}\n+     */\n+    public HostInfo activeHost() {\n+        return activeHost;\n+    }\n+\n+    /**\n+     * Get the Kafka Streams instances that host the key as standbys.\n+     *\n+     * @return set of standby {@link HostInfo} or a empty set, if no standbys are configured\n+     */\n+    public Set<HostInfo> standbyHosts() {\n+        return standbyHosts;\n+    }\n+\n+    /**\n+     * Get the store partition corresponding to the key.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTE3NjEyMQ=="}, "originalCommit": {"oid": "7859c3ab7423797fc80a00d19e34292feb16818b"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2093, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}