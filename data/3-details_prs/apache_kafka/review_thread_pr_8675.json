{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4NjExNDU1", "number": 8675, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowNDo1M1rOD84rOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyMDo1OFrOD85EEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTY5NzIyOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowNDo1M1rOGWGSWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowNDo1M1rOGWGSWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgyNDg1OA==", "bodyText": "reorder this test case to put the verifyAlterBrokerConfig test suits together. Note: the previous test is also test with verifyAlterBrokerConfig", "url": "https://github.com/apache/kafka/pull/8675#discussion_r425824858", "createdAt": "2020-05-15T14:04:53Z", "author": {"login": "showuon"}, "path": "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala", "diffHunk": "@@ -736,6 +731,12 @@ class ConfigCommandTest extends ZooKeeperTestHarness with Logging {\n     verifyAlterBrokerConfig(node, \"\", List(\"--entity-default\"))\n   }\n \n+  @Test\n+  def shouldAddBrokerDynamicConfig(): Unit = {\n+    val node = new Node(1, \"localhost\", 9092)\n+    verifyAlterBrokerConfig(node, \"1\", List(\"--entity-name\", \"1\"))\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4e615b0c669cac8d33e66d01ac3e1bea0de55f0"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTY5OTkyOnYy", "diffSide": "RIGHT", "path": "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowNToyNVrOGWGT7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDowNToyNVrOGWGT7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgyNTI2Mg==", "bodyText": "fix the wrong zk connection info", "url": "https://github.com/apache/kafka/pull/8675#discussion_r425825262", "createdAt": "2020-05-15T14:05:25Z", "author": {"login": "showuon"}, "path": "core/src/test/scala/unit/kafka/admin/ConfigCommandTest.scala", "diffHunk": "@@ -646,7 +641,7 @@ class ConfigCommandTest extends ZooKeeperTestHarness with Logging {\n \n   @Test\n   def testNoSpecifiedEntityOptionWithDescribeBrokersInZKIsAllowed(): Unit = {\n-    val optsList = List(\"--zookeeper\", \"localhost:9092\",\n+    val optsList = List(\"--zookeeper\", zkConnect,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4e615b0c669cac8d33e66d01ac3e1bea0de55f0"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MTc2MDgxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/admin/ConfigCommand.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDoyMDo1OFrOGWG7WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNlQwODoxNToxNVrOGWZAJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgzNTM1Mg==", "bodyText": "Please substitute \"\" for BrokerDefaultEntityName in the match below, as well as in getResourceConfig.", "url": "https://github.com/apache/kafka/pull/8675#discussion_r425835352", "createdAt": "2020-05-15T14:20:58Z", "author": {"login": "bdbyrne"}, "path": "core/src/main/scala/kafka/admin/ConfigCommand.scala", "diffHunk": "@@ -424,7 +425,7 @@ object ConfigCommand extends Config {\n         case ConfigType.Topic =>\n           adminClient.listTopics(new ListTopicsOptions().listInternal(true)).names().get().asScala.toSeq\n         case ConfigType.Broker | BrokerLoggerConfigType =>\n-          adminClient.describeCluster(new DescribeClusterOptions()).nodes().get().asScala.map(_.idString).toSeq :+ ConfigEntityName.Default\n+          adminClient.describeCluster(new DescribeClusterOptions()).nodes().get().asScala.map(_.idString).toSeq :+ BrokerDefaultEntityName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4e615b0c669cac8d33e66d01ac3e1bea0de55f0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjEzMTQ5NA==", "bodyText": "Thanks @bdbyrne . Good suggestion. I've updated it in this commit 83cc232. Thank you.", "url": "https://github.com/apache/kafka/pull/8675#discussion_r426131494", "createdAt": "2020-05-16T08:15:15Z", "author": {"login": "showuon"}, "path": "core/src/main/scala/kafka/admin/ConfigCommand.scala", "diffHunk": "@@ -424,7 +425,7 @@ object ConfigCommand extends Config {\n         case ConfigType.Topic =>\n           adminClient.listTopics(new ListTopicsOptions().listInternal(true)).names().get().asScala.toSeq\n         case ConfigType.Broker | BrokerLoggerConfigType =>\n-          adminClient.describeCluster(new DescribeClusterOptions()).nodes().get().asScala.map(_.idString).toSeq :+ ConfigEntityName.Default\n+          adminClient.describeCluster(new DescribeClusterOptions()).nodes().get().asScala.map(_.idString).toSeq :+ BrokerDefaultEntityName", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTgzNTM1Mg=="}, "originalCommit": {"oid": "a4e615b0c669cac8d33e66d01ac3e1bea0de55f0"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2628, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}