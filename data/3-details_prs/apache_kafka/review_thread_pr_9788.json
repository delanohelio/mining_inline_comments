{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTA1MTQ4", "number": 9788, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxMzoxMVrOFLA7iQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNzoxMlrOFLBBHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDkzODk3OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxMzoxMVrOIN9pKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxMzoxMVrOIN9pKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjM2Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n          \n          \n            \n                    \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: Guarantees an assignment that is \" +\n          \n          \n            \n            \"maximally balanced while preserving as many existing partition assignments as possible.</li>\" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512362", "createdAt": "2021-01-04T19:13:11Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDk0MTgxOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNDowMVrOIN9qww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNDowMVrOIN9qww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjc3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: Follows the same StickyAssignor \" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512771", "createdAt": "2021-01-04T19:14:01Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ3MDk1MzI2OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNzoxMlrOIN9xVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNzoxMlrOIN9xVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxNDQ1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: Assigns partitions to consumers in a round-robin fashion.</li>\" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551514454", "createdAt": "2021-01-04T19:17:12Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3563, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}