{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTI5ODEw", "number": 8596, "title": "KAFKA-9821: persist followup rebalance in assignment and consolidate rebalance triggering mechanisms", "bodyText": "This patch fixes KAFKA-9821 for Streams by persisting the required rebalance in the assignment. If a member fails and restarts it will receive its last assignment and notify the thread to trigger a new rebalance, even with static membership.\nNote: in the consumer client, the member who has to revoke some partitions is responsible for triggering the followup rebalance. Here we are actually encoding the required rebalance for the member who was supposed to receive these partitions. Since this only signals to the client to request a rebalance upon the next poll in both cases, and the rebalance schedule is reset in onAssignment, this should not result in extra (unnecessary) rebalances even if one member lags the other in requesting this.\nThis patch also consolidates the two rebalancing triggering mechanisms currently used by the Streams partition assignor: the AssignorError and the newly introduced nextScheduleRebalanceMs. Since the latter encompasses the former, we can remove the REBALANCE_NEEDED assignor error and just schedule the next rebalance for 0L ms to trigger it immediately. This has the nice side effect of removing the only recoverable AssignorError, so we no longer have to worry about handling this error and can just assume it to be fatal and shut down.", "createdAt": "2020-05-01T01:33:14Z", "url": "https://github.com/apache/kafka/pull/8596", "merged": true, "mergeCommit": {"oid": "58f7a973149f66b980f99c3f2bd688d70b06b2eb"}, "closed": true, "closedAt": "2020-05-12T20:57:19Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdLE85gFqTQwNDQ3NzMzMQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgZ_gVgH2gAyNDExOTI5ODEwOjA5NjZlYTVkNmNjMTg2OGU2NGZmZGZmYWExNTc3NjlmNDg3M2QzNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDc3MzMx", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404477331", "createdAt": "2020-05-02T00:24:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDoyNDoxNVrOGPYytg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDoyNDoxNVrOGPYytg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg==", "bodyText": "Minor detail, but we reserve the term \"probing rebalance\" for the KIP-441 type of rebalances, while now this is used to schedule any kind of followup rebalance", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418788022", "createdAt": "2020-05-02T00:24:15Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDgyMzA3", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404482307", "createdAt": "2020-05-02T00:32:42Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozMjo0MlrOGPY-WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozMjo0MlrOGPY-WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MTAwMA==", "bodyText": "We lose information here, but now log the reason for the scheduled rebalance in a (hopefully) more clear way during onAssignment", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418791000", "createdAt": "2020-05-02T00:32:42Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -556,14 +548,8 @@ void runLoop() {\n         while (isRunning() || taskManager.isRebalanceInProgress()) {\n             try {\n                 runOnce();\n-                if (assignmentErrorCode.get() == AssignorError.REBALANCE_NEEDED.code()) {\n-                    log.info(\"Detected that the assignor requested a rebalance. Rejoining the consumer group to \" +\n-                                 \"trigger a new rebalance.\");\n-                    assignmentErrorCode.set(AssignorError.NONE.code());\n-                    mainConsumer.enforceRebalance();\n-                } else if (nextProbingRebalanceMs.get() < time.milliseconds()) {\n-                    log.info(\"The probing rebalance interval has elapsed since the last rebalance, triggering a \" +\n-                                \"rebalance to probe for newly caught-up clients\");\n+                if (nextProbingRebalanceMs.get() < time.milliseconds()) {\n+                    log.info(\"Triggering the followup rebalance scheduled for {} ms.\", nextProbingRebalanceMs.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDgyNzIw", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404482720", "createdAt": "2020-05-02T00:35:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozNTo1OFrOGPZD8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozNTo1OFrOGPZD8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MjQzMw==", "bodyText": "Previously we were doing this logging at the client-level, meaning we could end up in the confusing situation of logging Stable rebalance.. for one client and Unstable rebalance... for another, all in the same rebalance. Now we only log the final result after all client assignments are encoded, and log which clients actually are scheduling said rebalance at the debug level.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418792433", "createdAt": "2020-05-02T00:35:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -907,6 +905,17 @@ private void populatePartitionsByHostMaps(final Map<HostInfo, Set<TopicPartition\n                 minSupportedMetadataVersion,\n                 false,\n                 encodeNextProbingRebalanceTime);\n+\n+            if (followupRebalanceScheduled) {\n+                rebalanceRequired = true;\n+                log.debug(\"Requested client {} to schedule a followup rebalance\", clientId);\n+            }\n+        }\n+\n+        if (rebalanceRequired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDgzMDEw", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404483010", "createdAt": "2020-05-02T00:38:28Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODoyOFrOGPZIrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODoyOFrOGPZIrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MzY0NA==", "bodyText": "This encodes an immediate followup rebalance for the consumer who would be receiving the revoked tasks. The consumer that is doing the revoking will also request a followup rebalance (in the client code) but due to KAFKA-9821 this cannot be relied upon when static membership is used.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418793644", "createdAt": "2020-05-02T00:38:28Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1009,14 +1018,18 @@ private void addClientAssignments(final Map<String, Assignment> assignment,\n                 AssignorError.NONE.code()\n             );\n \n-            if (encodeNextRebalanceTime) {\n+            if (tasksRevoked) {\n+                // TODO: once KAFKA-9821 is resolved we can leave it to the client to trigger this rebalance\n+                log.debug(\"Requesting followup rebalance be scheduled immediately due to tasks changing ownership.\");\n+                info.setNextRebalanceTime(0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDgzMDc3", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404483077", "createdAt": "2020-05-02T00:38:58Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODo1OFrOGPZJvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODo1OFrOGPZJvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MzkxNw==", "bodyText": "This is now the only usage of the assignment error code", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418793917", "createdAt": "2020-05-02T00:38:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1338,7 +1346,7 @@ public void onAssignment(final Assignment assignment, final ConsumerGroupMetadat\n         final AssignmentInfo info = AssignmentInfo.decode(assignment.userData());\n         if (info.errCode() != AssignorError.NONE.code()) {\n             // set flag to shutdown streams app\n-            setAssignmentErrorCode(info.errCode());\n+            assignmentErrorCode.set(info.errCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 184}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NDgzMzA2", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-404483306", "createdAt": "2020-05-02T00:41:07Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDo0MTowN1rOGPZNbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDo0MTowN1rOGPZNbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5NDg2Mg==", "bodyText": "Here we check for and log all the possible reasons for a followup rebalance to be scheduled on this consumer. It should be clear whether (and why) a rebalance is required by looking at the logs of either the group leader or the member(s) requesting the rebalance.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418794862", "createdAt": "2020-05-02T00:41:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1423,22 +1434,44 @@ public void onAssignment(final Assignment assignment, final ConsumerGroupMetadat\n         taskManager.handleAssignment(activeTasks, info.standbyTasks());\n     }\n \n+    private void maybeScheduleFollowupRebalance(final long encodedNextScheduledRebalanceMs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 259}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MzMwOTU4", "url": "https://github.com/apache/kafka/pull/8596#pullrequestreview-405330958", "createdAt": "2020-05-04T20:41:34Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "306184cae59ca556d4e22ce8f46093c5f20eb27e", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/306184cae59ca556d4e22ce8f46093c5f20eb27e", "committedDate": "2020-05-08T17:47:34Z", "message": "consolidate rebalance triggering mechanism, workaround for KAFKA-9821"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "615ed0a214c0921717644a6d566c8a177a713734", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/615ed0a214c0921717644a6d566c8a177a713734", "committedDate": "2020-05-08T17:47:36Z", "message": "consolidate followup rebalance reason log messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae6c1c9c9b1259d4e6030415f090582de040e72b", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/ae6c1c9c9b1259d4e6030415f090582de040e72b", "committedDate": "2020-05-08T17:47:59Z", "message": "further improve logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb206b884f5c7a7fb23446bf4eca71ac53e51004", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/eb206b884f5c7a7fb23446bf4eca71ac53e51004", "committedDate": "2020-05-08T17:48:18Z", "message": "bump stabilized log to info"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "eb206b884f5c7a7fb23446bf4eca71ac53e51004", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/eb206b884f5c7a7fb23446bf4eca71ac53e51004", "committedDate": "2020-05-08T17:48:18Z", "message": "bump stabilized log to info"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ff153ddc26ea3ef13c8d41dce0dd21f078a24de", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/2ff153ddc26ea3ef13c8d41dce0dd21f078a24de", "committedDate": "2020-05-08T21:02:53Z", "message": "fix log message"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0966ea5d6cc1868e64ffdffaa157769f4873d34a", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/0966ea5d6cc1868e64ffdffaa157769f4873d34a", "committedDate": "2020-05-12T01:28:39Z", "message": "temporarily Ignore upgrade test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1313, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}