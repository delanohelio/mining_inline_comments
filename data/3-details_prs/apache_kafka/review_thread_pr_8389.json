{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODAwODQ2", "number": 8389, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozODowMVrODszayg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozODowMVrODszayg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4MzA2Mzc4OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxODozODowMVrOF93FxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQxOTo0MDo0MVrOF95W1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMDA1Mw==", "bodyText": "Since this is used for both CompleteCommit and CompleteAbort, perhaps it's clearer to name it PendingCompleteTxn?", "url": "https://github.com/apache/kafka/pull/8389#discussion_r400410053", "createdAt": "2020-03-30T18:38:01Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "diffHunk": "@@ -373,19 +402,17 @@ class TransactionMarkerChannelManager(config: KafkaConfig,\n   }\n \n   def removeMarkersForTxnId(transactionalId: String): Unit = {\n-    // we do not need to clear the queue since it should have\n-    // already been drained by the sender thread\n-    txnMarkerPurgatory.cancelForKey(transactionalId)\n+    transactionsWithPendingMarkers.remove(transactionalId)\n   }\n \n   def completeSendMarkersForTxnId(transactionalId: String): Unit = {\n-    txnMarkerPurgatory.checkAndComplete(transactionalId)\n+    maybeWriteTxnCompletion(transactionalId)\n   }\n }\n \n case class TxnIdAndMarkerEntry(txnId: String, txnMarkerEntry: TxnMarkerEntry)\n \n-case class TxnLogAppend(transactionalId: String, coordinatorEpoch: Int, txnMetadata: TransactionMetadata, newMetadata: TxnTransitMetadata) {\n+case class PendingCommitTxn(transactionalId: String, coordinatorEpoch: Int, txnMetadata: TransactionMetadata, newMetadata: TxnTransitMetadata) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac3163042c25f6d7f37ffe7a518d87ffc8713216"}, "originalPosition": 269}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQ0NzE4OQ==", "bodyText": "Yes, good idea. I think \"complete\" was the word I was looking for.", "url": "https://github.com/apache/kafka/pull/8389#discussion_r400447189", "createdAt": "2020-03-30T19:40:41Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/coordinator/transaction/TransactionMarkerChannelManager.scala", "diffHunk": "@@ -373,19 +402,17 @@ class TransactionMarkerChannelManager(config: KafkaConfig,\n   }\n \n   def removeMarkersForTxnId(transactionalId: String): Unit = {\n-    // we do not need to clear the queue since it should have\n-    // already been drained by the sender thread\n-    txnMarkerPurgatory.cancelForKey(transactionalId)\n+    transactionsWithPendingMarkers.remove(transactionalId)\n   }\n \n   def completeSendMarkersForTxnId(transactionalId: String): Unit = {\n-    txnMarkerPurgatory.checkAndComplete(transactionalId)\n+    maybeWriteTxnCompletion(transactionalId)\n   }\n }\n \n case class TxnIdAndMarkerEntry(txnId: String, txnMarkerEntry: TxnMarkerEntry)\n \n-case class TxnLogAppend(transactionalId: String, coordinatorEpoch: Int, txnMetadata: TransactionMetadata, newMetadata: TxnTransitMetadata) {\n+case class PendingCommitTxn(transactionalId: String, coordinatorEpoch: Int, txnMetadata: TransactionMetadata, newMetadata: TxnTransitMetadata) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDQxMDA1Mw=="}, "originalCommit": {"oid": "ac3163042c25f6d7f37ffe7a518d87ffc8713216"}, "originalPosition": 269}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3151, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}