{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTI4MzEy", "number": 9668, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNDo0M1rOFAjG_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNDo0M1rOFAjG_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MTE5NTUwOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/StreamsBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMzozNDo0M1rOH-6CcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyNDo0MlrOH_af7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDY1Ng==", "bodyText": "This should still be called shouldNotReuseSourceTopicAsChangelogsByDefault,  right?", "url": "https://github.com/apache/kafka/pull/9668#discussion_r535724656", "createdAt": "2020-12-03T23:34:43Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsBuilderTest.java", "diffHunk": "@@ -463,7 +463,36 @@ public void shouldReuseSourceTopicAsChangelogsWithOptimization20() {\n     }\n \n     @Test\n-    public void shouldNotReuseSourceTopicAsChangelogsByDefault() {\n+    public void shouldNotReuseRepartitionTopicAsChangelogs() {\n+        final String topic = \"topic\";\n+        builder.<Long, String>stream(topic).repartition().toTable(Materialized.as(\"store\"));\n+        final Properties props = StreamsTestUtils.getStreamsConfig(\"appId\");\n+        props.put(StreamsConfig.TOPOLOGY_OPTIMIZATION_CONFIG, StreamsConfig.OPTIMIZE);\n+        final Topology topology = builder.build(props);\n+\n+        final InternalTopologyBuilder internalTopologyBuilder = TopologyWrapper.getInternalTopologyBuilder(topology);\n+        internalTopologyBuilder.rewriteTopology(new StreamsConfig(props));\n+\n+        assertThat(\n+            internalTopologyBuilder.buildTopology().storeToChangelogTopic(),\n+            equalTo(Collections.singletonMap(\"store\", \"appId-store-changelog\"))\n+        );\n+        assertThat(\n+            internalTopologyBuilder.stateStores().keySet(),\n+            equalTo(Collections.singleton(\"store\"))\n+        );\n+        assertThat(\n+            internalTopologyBuilder.stateStores().get(\"store\").loggingEnabled(),\n+            equalTo(true)\n+        );\n+        assertThat(\n+            internalTopologyBuilder.topicGroups().get(1).stateChangelogTopics.keySet(),\n+            equalTo(Collections.singleton(\"appId-store-changelog\"))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldNotReuseRepartitionTopicAsChangelogsByDefault() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b86e907630ce332e5577f20545cc06de8f4f43bf"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1NjQ5NA==", "bodyText": "Ah. Yes, the test name should not change.", "url": "https://github.com/apache/kafka/pull/9668#discussion_r536256494", "createdAt": "2020-12-04T17:24:42Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsBuilderTest.java", "diffHunk": "@@ -463,7 +463,36 @@ public void shouldReuseSourceTopicAsChangelogsWithOptimization20() {\n     }\n \n     @Test\n-    public void shouldNotReuseSourceTopicAsChangelogsByDefault() {\n+    public void shouldNotReuseRepartitionTopicAsChangelogs() {\n+        final String topic = \"topic\";\n+        builder.<Long, String>stream(topic).repartition().toTable(Materialized.as(\"store\"));\n+        final Properties props = StreamsTestUtils.getStreamsConfig(\"appId\");\n+        props.put(StreamsConfig.TOPOLOGY_OPTIMIZATION_CONFIG, StreamsConfig.OPTIMIZE);\n+        final Topology topology = builder.build(props);\n+\n+        final InternalTopologyBuilder internalTopologyBuilder = TopologyWrapper.getInternalTopologyBuilder(topology);\n+        internalTopologyBuilder.rewriteTopology(new StreamsConfig(props));\n+\n+        assertThat(\n+            internalTopologyBuilder.buildTopology().storeToChangelogTopic(),\n+            equalTo(Collections.singletonMap(\"store\", \"appId-store-changelog\"))\n+        );\n+        assertThat(\n+            internalTopologyBuilder.stateStores().keySet(),\n+            equalTo(Collections.singleton(\"store\"))\n+        );\n+        assertThat(\n+            internalTopologyBuilder.stateStores().get(\"store\").loggingEnabled(),\n+            equalTo(true)\n+        );\n+        assertThat(\n+            internalTopologyBuilder.topicGroups().get(1).stateChangelogTopics.keySet(),\n+            equalTo(Collections.singleton(\"appId-store-changelog\"))\n+        );\n+    }\n+\n+    @Test\n+    public void shouldNotReuseRepartitionTopicAsChangelogsByDefault() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTcyNDY1Ng=="}, "originalCommit": {"oid": "b86e907630ce332e5577f20545cc06de8f4f43bf"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3637, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}