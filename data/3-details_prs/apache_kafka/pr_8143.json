{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4MDEyMjQ4", "number": 8143, "title": "KAFKA-9582: Do not abort transaction in unclean close", "bodyText": "In order to avoid hitting the fatal exception during unclean close, we should avoid calling the abortTransaction() call.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-02-20T22:44:01Z", "url": "https://github.com/apache/kafka/pull/8143", "merged": true, "mergeCommit": {"oid": "121df465fad0bc062537c027bf9ed4755112d10c"}, "closed": true, "closedAt": "2020-02-21T18:27:58Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGTJYKAH2gAyMzc4MDEyMjQ4OjgwNTYyZWYxMTdiZDAxY2UyNjljNjA5ZjdmZjZhMTQ4NDc5MmUyOWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGjVQDgFqTM2MjgwMDAyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "80562ef117bd01ce269c609f7ff6a1484792e29a", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/80562ef117bd01ce269c609f7ff6a1484792e29a", "committedDate": "2020-02-20T22:48:04Z", "message": "do not abort transaction in unclean close"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "80562ef117bd01ce269c609f7ff6a1484792e29a", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/80562ef117bd01ce269c609f7ff6a1484792e29a", "committedDate": "2020-02-20T22:48:04Z", "message": "do not abort transaction in unclean close"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4f23e527a8e9dc3fcaccc0bb1083edc7cfdaa5f", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/f4f23e527a8e9dc3fcaccc0bb1083edc7cfdaa5f", "committedDate": "2020-02-20T23:34:43Z", "message": "deprecate isZombie"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "f4f23e527a8e9dc3fcaccc0bb1083edc7cfdaa5f", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/f4f23e527a8e9dc3fcaccc0bb1083edc7cfdaa5f", "committedDate": "2020-02-20T23:34:43Z", "message": "deprecate isZombie"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f315cac4a96db56ec72d3d5524a7e9042537234", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/4f315cac4a96db56ec72d3d5524a7e9042537234", "committedDate": "2020-02-21T00:42:42Z", "message": "do not test on txn abort"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMzYyNTI4", "url": "https://github.com/apache/kafka/pull/8143#pullrequestreview-362362528", "createdAt": "2020-02-21T02:16:39Z", "commit": {"oid": "4f315cac4a96db56ec72d3d5524a7e9042537234"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMjoxNjo0MFrOFsposw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwMjoxNjo0MFrOFsposw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjM2MzgyNw==", "bodyText": "This one in particular might be worth a comment that we're specifically checking because we don't want to call methods on the producer during an unclean close.", "url": "https://github.com/apache/kafka/pull/8143#discussion_r382363827", "createdAt": "2020-02-21T02:16:40Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1317,26 +1317,24 @@ public void shouldNotCloseProducerIfFencedOnCloseDuringCleanCloseWithEosEnabled(\n     }\n \n     @Test\n-    public void shouldAbortTransactionAndCloseProducerOnUncleanCloseWithEosEnabled() {\n+    public void shouldCloseProducerOnUncleanCloseWithEosEnabled() {\n         task = createStatelessTask(createConfig(true), StreamsConfig.METRICS_LATEST);\n         task.initializeTopology();\n \n         task.close(false, false);\n         task = null;\n \n-        assertTrue(producer.transactionAborted());\n-        assertFalse(producer.transactionInFlight());\n+        assertTrue(producer.transactionInFlight());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f315cac4a96db56ec72d3d5524a7e9042537234"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79860652913ae6f48141dbea92fefb06f65292ea", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/79860652913ae6f48141dbea92fefb06f65292ea", "committedDate": "2020-02-21T03:02:30Z", "message": "add comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyODAwMDIx", "url": "https://github.com/apache/kafka/pull/8143#pullrequestreview-362800021", "createdAt": "2020-02-21T17:38:57Z", "commit": {"oid": "79860652913ae6f48141dbea92fefb06f65292ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzozODo1N1rOFs_C7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNzozODo1N1rOFs_C7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjcxNDYwNA==", "bodyText": "I think there are some callers of suspend that would set clean to false while isZombie to false as well, e.g. suspendRunningTasks in this case should we still call abortTxn?", "url": "https://github.com/apache/kafka/pull/8143#discussion_r382714604", "createdAt": "2020-02-21T17:38:57Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -662,37 +650,26 @@ void suspend(final boolean clean,\n             }\n \n             if (eosEnabled) {\n-                maybeAbortTransactionAndCloseRecordCollector(isZombie);\n+                // Ignore any exceptions whilee closing the record collector, i.e task producer.\n+                closeRecordCollector();\n             }\n         }\n     }\n \n-    private void maybeAbortTransactionAndCloseRecordCollector(final boolean isZombie) {\n-        if (!isZombie) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79860652913ae6f48141dbea92fefb06f65292ea"}, "originalPosition": 74}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1506, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}