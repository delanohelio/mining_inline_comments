{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1MDA3NjU5", "number": 9554, "title": "KAFKA-10679: [Streams] migrate kafka-site updated docs to kafka/docs", "bodyText": "During the AK website upgrade, changes made to kafka-site weren't migrated back to kafka-docs.\nThis PR is an attempt at porting the streams changes to kafka/docs\nFor the most part, the bulk of the changes in the PR are cosmetic.\nFor testing:\n\nI reviewed the PR diffs\nRendered the changes locally\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-11-03T21:44:13Z", "url": "https://github.com/apache/kafka/pull/9554", "merged": true, "mergeCommit": {"oid": "e847f057e31cbd50db854f12f2eafe0d1a865068"}, "closed": true, "closedAt": "2020-11-04T13:30:11Z", "author": {"login": "bbejeck"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZANa4AH2gAyNTE1MDA3NjU5OmZhNzk3NjhiYWVkY2JjOGQyYWViMDhlYmYwM2I3OGE4Y2M3MDIwOGE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZNvJIAH2gAyNTE1MDA3NjU5OjY5ZjllYWMxZjE3OGNkMDExNDRlYWE1YzcyNWU1OWY2OGQ4MTNhYzI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fa79768baedcbc8d2aeb08ebf03b78a8cc70208a", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/apache/kafka/commit/fa79768baedcbc8d2aeb08ebf03b78a8cc70208a", "committedDate": "2020-11-03T21:40:00Z", "message": "KAFKA-10679: Port streams kafka-site updated docs to kafka/docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a80d5041e29de70cbae6685f4212f2ac1090ab9f", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/apache/kafka/commit/a80d5041e29de70cbae6685f4212f2ac1090ab9f", "committedDate": "2020-11-03T21:49:46Z", "message": "KAFKA-10679: Put back section in core-concepts.html from trunk version."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "362568535422c6c2afa26415a7116210622028a6", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/apache/kafka/commit/362568535422c6c2afa26415a7116210622028a6", "committedDate": "2020-11-03T22:06:52Z", "message": "KAFKA-10679: Fix scala serdes docs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe275d74f79a4a8359fee2447f57627cd67dc812", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/apache/kafka/commit/fe275d74f79a4a8359fee2447f57627cd67dc812", "committedDate": "2020-11-03T22:28:54Z", "message": "KAFKA-10679: Remove hard coded version, fix location of topology naming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyOTM2NTE5", "url": "https://github.com/apache/kafka/pull/9554#pullrequestreview-522936519", "createdAt": "2020-11-03T23:01:27Z", "commit": {"oid": "fe275d74f79a4a8359fee2447f57627cd67dc812"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowMToyOFrOHtDiKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QyMzowNDoxM1rOHtDl4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNTg2NA==", "bodyText": "Hmm, is this supposed to match the output topic in L103 below? That one says \"result-topic\".", "url": "https://github.com/apache/kafka/pull/9554#discussion_r517005864", "createdAt": "2020-11-03T23:01:28Z", "author": {"login": "vvcephei"}, "path": "docs/streams/developer-guide/testing.html", "diffHunk": "@@ -73,67 +71,55 @@ <h2><a class=\"toc-backref\" href=\"#testing-topologytestdriver\" title=\"Permalink t\n                 You can use the test driver to verify that your specified processor topology computes the correct result\n                 with the manually piped in data records.\n                 The test driver captures the results records and allows to query its embedded state stores.\n-            <pre>\n-// Processor API\n+            <pre class=\"line-numbers\"><code class=\"language-text\">// Processor API\n Topology topology = new Topology();\n topology.addSource(\"sourceProcessor\", \"input-topic\");\n topology.addProcessor(\"processor\", ..., \"sourceProcessor\");\n-topology.addSink(\"sinkProcessor\", \"result-topic\", \"processor\");\n+topology.addSink(\"sinkProcessor\", \"output-topic\", \"processor\");\n // or\n // using DSL\n StreamsBuilder builder = new StreamsBuilder();\n-builder.stream(\"input-topic\").filter(...).to(\"result-topic\");\n+builder.stream(\"input-topic\").filter(...).to(\"output-topic\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe275d74f79a4a8359fee2447f57627cd67dc812"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzAwNjgxNg==", "bodyText": "Seems like this change is wrong.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    As of 2.6.0 Kafka Streams deprecates <code>KStream.through()</code> if favor of the new <code>KStream.repartition()</code> operator\n          \n          \n            \n                    As of 2.6.0 Kafka Streams deprecates <code>KStream.through()</code> in favor of the new <code>KStream.repartition()</code> operator", "url": "https://github.com/apache/kafka/pull/9554#discussion_r517006816", "createdAt": "2020-11-03T23:04:13Z", "author": {"login": "vvcephei"}, "path": "docs/streams/upgrade-guide.html", "diffHunk": "@@ -135,14 +134,12 @@ <h3><a id=\"streams_api_changes_260\" href=\"#streams_api_changes_260\">Streams API\n         tasks to their new owners in the background. Check out <a href=\"https://cwiki.apache.org/confluence/x/0i4lBg\">KIP-441</a>\n         for full details, including several new configs for control over this new feature.\n     </p>\n-\n     <p>\n         New end-to-end latency metrics have been added. These task-level metrics will be logged at the INFO level and report the min and max end-to-end latency of a record at the beginning/source node(s)\n         and end/terminal node(s) of a task. See <a href=\"https://cwiki.apache.org/confluence/x/gBkRCQ\">KIP-613</a> for more information.\n     </p>\n-\n     <p>\n-        As of 2.6.0 Kafka Streams deprecates <code>KStream.through()</code> in favor of the new <code>KStream.repartition()</code> operator\n+        As of 2.6.0 Kafka Streams deprecates <code>KStream.through()</code> if favor of the new <code>KStream.repartition()</code> operator", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe275d74f79a4a8359fee2447f57627cd67dc812"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69f9eac1f178cd01144eaa5c725e59f68d813ac2", "author": {"user": {"login": "bbejeck", "name": "Bill Bejeck"}}, "url": "https://github.com/apache/kafka/commit/69f9eac1f178cd01144eaa5c725e59f68d813ac2", "committedDate": "2020-11-04T13:25:36Z", "message": "KAFKA-10679: fixes for comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2684, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}