{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyOTk1NjQ0", "number": 8613, "title": "KAFKA-6145: Set HighAvailabilityTaskAssignor as default in streams_upgrade_test.py", "bodyText": "This PR sets HighAvailabilityTaskAssignor as default task assignor in\nstreams_upgrade_test.py. The verification of the test needed to be\nmodified to because the HighAvailabilityTaskAssignor surfaced a flakiness\nin the test. More precisely, the verifications assume that the last\nclient that is bounced joins the group before the other two clients\nare able to rebalance without the last client. This assumption does not\nalways hold.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-05-04T14:44:18Z", "url": "https://github.com/apache/kafka/pull/8613", "merged": true, "mergeCommit": {"oid": "c19a3be1984d6d4a6192250fc6255168a0942703"}, "closed": true, "closedAt": "2020-05-08T02:10:45Z", "author": {"login": "cadonna"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABceAkJ3AH2gAyNDEyOTk1NjQ0OmE2ZTFmMjkyYjgyYTE3YmFkOGMxZThmMjQ5ZDM3Zjg2OWIzNDc4OTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABceYFxPAFqTQwNjAzMzUyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894", "author": {"user": {"login": "cadonna", "name": "Bruno Cadonna"}}, "url": "https://github.com/apache/kafka/commit/a6e1f292b82a17bad8c1e8f249d37f869b347894", "committedDate": "2020-05-04T14:43:18Z", "message": "KAFKA-6145: Set HighAvailabilityTaskAssignor as default in streams_upgrade_test.py\n\nThis PR sets HighAvailabilityTaskAssignor as default task assignor in\nstreams_upgrade_test.py. The verification of the test needed to be\nmodified to because the HighAvailabilityTaskAssignor surfaced a flakiness\nin the test. More precisely, the verifications assume that the last\nclient that is bounced joins the group before the other two clients\nare able to rebalance without the last client. This assumption does not\nalways hold."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MDY0MDk4", "url": "https://github.com/apache/kafka/pull/8613#pullrequestreview-405064098", "createdAt": "2020-05-04T14:52:51Z", "commit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1Mjo1MVrOGQEC_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1Mjo1MVrOGQEC_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NjcwMw==", "bodyText": "This verification is only true if the two other processors haven't rebalanced before the processor that bounced last re-joins the group. If the rebalance occurs, the commonly supported version is already at 8 when the last processor joins.\nActually, the test test_version_probing_upgrade is independent of the used task assignor, but this issue was surfaced by the HighAvailabilityTaskAssignor but not by the StickyTaskAssignor. I cannot say for sure why.\nIMO, removing this verification should be OK, since afterwards we check whether the processors have synchronized generations which means that all three processors successfully joined the group in the end. The state that we do not explicitly verify anymore is the transient state where version 7 is currently used, but all processor are able to use version 8.", "url": "https://github.com/apache/kafka/pull/8613#discussion_r419496703", "createdAt": "2020-05-04T14:52:51Z", "author": {"login": "cadonna"}, "path": "tests/kafkatest/tests/streams/streams_upgrade_test.py", "diffHunk": "@@ -532,20 +532,22 @@ def do_rolling_bounce(self, processor, counter, current_generation):\n                         log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 7 and trigger new rebalance.\",\n                                                timeout_sec=60,\n                                                err_msg=\"Could not detect 'successful version probing' at upgrading node \" + str(node.account))\n-                    else:\n-                        log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 8 and trigger new rebalance.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA1MzA1MDM4", "url": "https://github.com/apache/kafka/pull/8613#pullrequestreview-405305038", "createdAt": "2020-05-04T20:02:28Z", "commit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDowMjoyOFrOGQQETA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMDowNTo1OVrOGQQLog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5MzY0NA==", "bodyText": "Thanks @cadonna ; I agree. This test should just be verifying that we first converge on 7, and then that we converge on 8.", "url": "https://github.com/apache/kafka/pull/8613#discussion_r419693644", "createdAt": "2020-05-04T20:02:28Z", "author": {"login": "vvcephei"}, "path": "tests/kafkatest/tests/streams/streams_upgrade_test.py", "diffHunk": "@@ -532,20 +532,22 @@ def do_rolling_bounce(self, processor, counter, current_generation):\n                         log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 7 and trigger new rebalance.\",\n                                                timeout_sec=60,\n                                                err_msg=\"Could not detect 'successful version probing' at upgrading node \" + str(node.account))\n-                    else:\n-                        log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 8 and trigger new rebalance.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NjcwMw=="}, "originalCommit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5MzgyNw==", "bodyText": "We can actually just delete these lines now.", "url": "https://github.com/apache/kafka/pull/8613#discussion_r419693827", "createdAt": "2020-05-04T20:02:48Z", "author": {"login": "vvcephei"}, "path": "tests/kafkatest/tests/streams/streams_upgrade_test.py", "diffHunk": "@@ -305,11 +305,11 @@ def test_version_probing_upgrade(self):\n         self.driver.disable_auto_terminate()\n         # TODO KIP-441: consider rewriting the test for HighAvailabilityTaskAssignor\n         self.processor1 = StreamsUpgradeTestJobRunnerService(self.test_context, self.kafka)\n-        self.processor1.set_config(\"internal.task.assignor.class\", \"org.apache.kafka.streams.processor.internals.assignment.StickyTaskAssignor\")\n+        self.processor1.set_config(\"internal.task.assignor.class\", \"org.apache.kafka.streams.processor.internals.assignment.HighAvailabilityTaskAssignor\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NTUyMg==", "bodyText": "I know that this check was here in some fashion before, but I'm drawing a blank on why we need to verify this log line. It seems like just checking the version number logs and nothing else would be the key to a long and happy life.", "url": "https://github.com/apache/kafka/pull/8613#discussion_r419695522", "createdAt": "2020-05-04T20:05:59Z", "author": {"login": "vvcephei"}, "path": "tests/kafkatest/tests/streams/streams_upgrade_test.py", "diffHunk": "@@ -532,20 +532,22 @@ def do_rolling_bounce(self, processor, counter, current_generation):\n                         log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 7 and trigger new rebalance.\",\n                                                timeout_sec=60,\n                                                err_msg=\"Could not detect 'successful version probing' at upgrading node \" + str(node.account))\n-                    else:\n-                        log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 8 and trigger new rebalance.\",\n+                        log_monitor.wait_until(\"Detected that the assignor requested a rebalance. Rejoining the consumer group to trigger a new rebalance.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b80ef741379b3044715738f16648bc0b35370fed", "author": {"user": {"login": "cadonna", "name": "Bruno Cadonna"}}, "url": "https://github.com/apache/kafka/commit/b80ef741379b3044715738f16648bc0b35370fed", "committedDate": "2020-05-04T20:10:43Z", "message": "Remove calls to set the task assignor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA2MDMzNTI4", "url": "https://github.com/apache/kafka/pull/8613#pullrequestreview-406033528", "createdAt": "2020-05-05T18:07:31Z", "commit": {"oid": "b80ef741379b3044715738f16648bc0b35370fed"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowNzozMVrOGQ1fDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODowNzozMVrOGQ1fDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMwNjcwMQ==", "bodyText": "Thanks, all. This doesn't seem like the best way to verify what we're trying to verify, but it also seems about the same as before. I'm happy to leave this here for now.\nIf/when the test breaks again, I'd prefer for us to put in a more reliable and direct mechanism.", "url": "https://github.com/apache/kafka/pull/8613#discussion_r420306701", "createdAt": "2020-05-05T18:07:31Z", "author": {"login": "vvcephei"}, "path": "tests/kafkatest/tests/streams/streams_upgrade_test.py", "diffHunk": "@@ -532,20 +532,22 @@ def do_rolling_bounce(self, processor, counter, current_generation):\n                         log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 7 and trigger new rebalance.\",\n                                                timeout_sec=60,\n                                                err_msg=\"Could not detect 'successful version probing' at upgrading node \" + str(node.account))\n-                    else:\n-                        log_monitor.wait_until(\"Sent a version 8 subscription and got version 7 assignment back (successful version probing). Downgrade subscription metadata to commonly supported version 8 and trigger new rebalance.\",\n+                        log_monitor.wait_until(\"Detected that the assignor requested a rebalance. Rejoining the consumer group to trigger a new rebalance.\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTY5NTUyMg=="}, "originalCommit": {"oid": "a6e1f292b82a17bad8c1e8f249d37f869b347894"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1344, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}