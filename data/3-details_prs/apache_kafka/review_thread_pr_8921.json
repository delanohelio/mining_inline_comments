{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4ODkwOTY4", "number": 8921, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMDozMjo0NVrOEILZnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0NTo1M1rOEK00qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3MDEwODQ3OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMDozMjo0NVrOGn_BUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNFQwMDo1OTowNFrOGn_a0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4MDE3Ng==", "bodyText": "can leave off \"unless specified\" -- is redundant with \"default\".", "url": "https://github.com/apache/kafka/pull/8921#discussion_r444580176", "createdAt": "2020-06-24T00:32:45Z", "author": {"login": "ryannedolan"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -123,6 +125,10 @@\n     private static final String CONSUMER_POLL_TIMEOUT_MILLIS_DOC = \"Timeout when polling source cluster.\";\n     public static final long CONSUMER_POLL_TIMEOUT_MILLIS_DEFAULT = 1000L;\n \n+    public static final String CONSUMER_AUTO_OFFSET_RESET = \"consumer.auto.offset.reset\";\n+    private static final String CONSUMER_AUTO_OFFSET_RESET_DOC = \"Consumer Auto offset reset, defaults to earliest unless specify.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "75b1c77542fe8269b89fb4f209520bb59e70ca3e"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4NjcwNQ==", "bodyText": "Updated \"Consumer Auto offset reset, default to earliest unless specified.\"", "url": "https://github.com/apache/kafka/pull/8921#discussion_r444586705", "createdAt": "2020-06-24T00:59:04Z", "author": {"login": "satishbellapu"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -123,6 +125,10 @@\n     private static final String CONSUMER_POLL_TIMEOUT_MILLIS_DOC = \"Timeout when polling source cluster.\";\n     public static final long CONSUMER_POLL_TIMEOUT_MILLIS_DEFAULT = 1000L;\n \n+    public static final String CONSUMER_AUTO_OFFSET_RESET = \"consumer.auto.offset.reset\";\n+    private static final String CONSUMER_AUTO_OFFSET_RESET_DOC = \"Consumer Auto offset reset, defaults to earliest unless specify.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDU4MDE3Ng=="}, "originalCommit": {"oid": "75b1c77542fe8269b89fb4f209520bb59e70ca3e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzgwNjM1OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToyOTowOVrOGsE_oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToyOTowOVrOGsE_oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3MjM1Mg==", "bodyText": "Can we reuse ConsumerConfig.ENABLE_AUTO_COMMIT_CONFIG instead of defining a new constant?", "url": "https://github.com/apache/kafka/pull/8921#discussion_r448872352", "createdAt": "2020-07-02T09:29:09Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -67,6 +67,8 @@\n     protected static final String SYNC_TOPIC_ACLS = \"sync.topic.acls\";\n     protected static final String EMIT_HEARTBEATS = \"emit.heartbeats\";\n     protected static final String EMIT_CHECKPOINTS = \"emit.checkpoints\";\n+    protected static final String AUTH_OFFSET_RESET = \"auto.offset.reset\";\n+    protected static final String ENABLE_AUTO_COMMIT = \"enable.auto.commit\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8594842653c4d944d8ddc403add123dee62bc8f3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NzgwOTEyOnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToyOTo1MVrOGsFBbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOToyOTo1MVrOGsFBbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg3MjgxNQ==", "bodyText": "Can we reuse ConsumerConfig.AUTO_OFFSET_RESET_CONFIG instead of defining a new constant?", "url": "https://github.com/apache/kafka/pull/8921#discussion_r448872815", "createdAt": "2020-07-02T09:29:51Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -67,6 +67,8 @@\n     protected static final String SYNC_TOPIC_ACLS = \"sync.topic.acls\";\n     protected static final String EMIT_HEARTBEATS = \"emit.heartbeats\";\n     protected static final String EMIT_CHECKPOINTS = \"emit.checkpoints\";\n+    protected static final String AUTH_OFFSET_RESET = \"auto.offset.reset\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8594842653c4d944d8ddc403add123dee62bc8f3"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5Nzg2NjY2OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwOTo0NTo1M1rOGsFmDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQwMTozMzowMFrOGs5MQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MjE4OA==", "bodyText": "If a user sets somesource->sometarget.consumer.auto.offset.reset=latest that should be picked up by line 235-237.\nSo instead of defining a new config on MirrorConnectorConfig, could we do something like:\nprops.putIfAbsent(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\nWDYT?", "url": "https://github.com/apache/kafka/pull/8921#discussion_r448882188", "createdAt": "2020-07-02T09:45:53Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -229,8 +235,8 @@ Duration adminTimeout() {\n         props.putAll(originalsWithPrefix(SOURCE_CLUSTER_PREFIX));\n         props.keySet().retainAll(MirrorClientConfig.CLIENT_CONFIG_DEF.names());\n         props.putAll(originalsWithPrefix(CONSUMER_CLIENT_PREFIX));\n-        props.put(\"enable.auto.commit\", \"false\");\n-        props.put(\"auto.offset.reset\", \"earliest\");\n+        props.put(ENABLE_AUTO_COMMIT, \"false\");\n+        props.put(AUTH_OFFSET_RESET, CONSUMER_AUTO_OFFSET_RESET);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8594842653c4d944d8ddc403add123dee62bc8f3"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTcyNzU1NA==", "bodyText": "ACK", "url": "https://github.com/apache/kafka/pull/8921#discussion_r449727554", "createdAt": "2020-07-04T01:33:00Z", "author": {"login": "satishbellapu"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -229,8 +235,8 @@ Duration adminTimeout() {\n         props.putAll(originalsWithPrefix(SOURCE_CLUSTER_PREFIX));\n         props.keySet().retainAll(MirrorClientConfig.CLIENT_CONFIG_DEF.names());\n         props.putAll(originalsWithPrefix(CONSUMER_CLIENT_PREFIX));\n-        props.put(\"enable.auto.commit\", \"false\");\n-        props.put(\"auto.offset.reset\", \"earliest\");\n+        props.put(ENABLE_AUTO_COMMIT, \"false\");\n+        props.put(AUTH_OFFSET_RESET, CONSUMER_AUTO_OFFSET_RESET);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODg4MjE4OA=="}, "originalCommit": {"oid": "8594842653c4d944d8ddc403add123dee62bc8f3"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2426, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}