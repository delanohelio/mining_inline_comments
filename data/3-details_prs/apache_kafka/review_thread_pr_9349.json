{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NTU2OTY2", "number": 9349, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzoyNjo1MlrOEpIemA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzoyNjo1MlrOEpIemA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTY1OTc2OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxNzoyNjo1MlrOHaoD8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMTozNjoyMFrOHbGSAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4MTM5NQ==", "bodyText": "Another way to test this might be to use MockClient.enableBlockingUntilWakeup. That would let us block in Consumer.poll.", "url": "https://github.com/apache/kafka/pull/9349#discussion_r497681395", "createdAt": "2020-09-30T17:26:52Z", "author": {"login": "hachikuji"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1994,6 +1995,24 @@ public void testGetGroupMetadata() {\n         assertEquals(groupInstanceId, groupMetadataAfterPoll.groupInstanceId());\n     }\n \n+    @Test\n+    public void testInvalidGroupMetadata() {\n+        Properties props = new Properties();\n+        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9999\");\n+        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n+        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(\n+                props, new StringDeserializer(), new StringDeserializer());\n+\n+        // concurrent access is illegal\n+        consumer.currentThread.set(123);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE3NjUxNQ==", "bodyText": "will Roger that!", "url": "https://github.com/apache/kafka/pull/9349#discussion_r498176515", "createdAt": "2020-10-01T11:36:20Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1994,6 +1995,24 @@ public void testGetGroupMetadata() {\n         assertEquals(groupInstanceId, groupMetadataAfterPoll.groupInstanceId());\n     }\n \n+    @Test\n+    public void testInvalidGroupMetadata() {\n+        Properties props = new Properties();\n+        props.setProperty(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9999\");\n+        props.setProperty(ConsumerConfig.METRIC_REPORTER_CLASSES_CONFIG, MockMetricsReporter.class.getName());\n+        KafkaConsumer<String, String> consumer = new KafkaConsumer<>(\n+                props, new StringDeserializer(), new StringDeserializer());\n+\n+        // concurrent access is illegal\n+        consumer.currentThread.set(123);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzY4MTM5NQ=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1877, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}