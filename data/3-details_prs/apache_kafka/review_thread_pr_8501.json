{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0Mzg2MjE4", "number": 8501, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMToyNzoxNVrODyrlZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTozMToyN1rODyrqDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDY5NDc4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMToyNzoxNVrOGG3yAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMToyNzoxNVrOGG3yAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg1ODU2Mg==", "bodyText": "Nice cleanup!", "url": "https://github.com/apache/kafka/pull/8501#discussion_r409858562", "createdAt": "2020-04-16T21:27:15Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/RocksDBStore.java", "diffHunk": "@@ -190,13 +190,13 @@ void openDB(final ProcessorContext context) {\n \n         // Setup metrics before the database is opened, otherwise the metrics are not updated\n         // with the measurements from Rocks DB\n-        maybeSetUpMetricsRecorder(context, configs);\n+        maybeSetUpMetricsRecorder(configs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37cc5ef592cbfc4b5e20c59c9d36420fc41b5ae0"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDcwNjY4OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTozMToyN1rOGG35ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxNzo0Mzo0MlrOGHXS4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MDQ1OA==", "bodyText": "This is just for my own understanding: for line 144 / 172 above, what kind of simulated failure did we introduce? Seems like we just start and close the stream app while verifying metrics twice?", "url": "https://github.com/apache/kafka/pull/8501#discussion_r409860458", "createdAt": "2020-04-16T21:31:27Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -181,40 +181,6 @@ public void shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailur\n         );\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37cc5ef592cbfc4b5e20c59c9d36420fc41b5ae0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDA5NzIwMw==", "bodyText": "This tests mainly verifies this bug https://issues.apache.org/jira/browse/KAFKA-9355 but also generally whether the RocksDB metrics are exposed. The fix for the bug is hard to verify as a unit test because it involves a couple of components, e.g., Metered*Store, *Segments, and RocksDBStore.", "url": "https://github.com/apache/kafka/pull/8501#discussion_r410097203", "createdAt": "2020-04-17T09:14:52Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -181,40 +181,6 @@ public void shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailur\n         );\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MDQ1OA=="}, "originalCommit": {"oid": "37cc5ef592cbfc4b5e20c59c9d36420fc41b5ae0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDM3NDg4MQ==", "bodyText": "Got it, thanks!", "url": "https://github.com/apache/kafka/pull/8501#discussion_r410374881", "createdAt": "2020-04-17T17:43:42Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RocksDBMetricsIntegrationTest.java", "diffHunk": "@@ -181,40 +181,6 @@ public void shouldExposeRocksDBMetricsForSegmentedStateStoreBeforeAndAfterFailur\n         );\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2MDQ1OA=="}, "originalCommit": {"oid": "37cc5ef592cbfc4b5e20c59c9d36420fc41b5ae0"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3024, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}