{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2Njg2NTQw", "number": 8999, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowOTo1NFrOEMycuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowOTo1NFrOEMycuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQ0OTIxOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowOTo1NFrOGvGW6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToyNTo1MFrOGvexow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA==", "bodyText": "@dajac Won't this create a list regardless of whether there are timed out entries? Let's see whether this addresses @ijuma 's concern on the other PR.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452040424", "createdAt": "2020-07-09T08:09:54Z", "author": {"login": "rajinisivaram"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA1Mjk1MQ==", "bodyText": "@rajinisivaram Yes, it does as an empty list is returned if there are no timed out entries. This was true with the Set as well btw.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452052951", "createdAt": "2020-07-09T08:31:28Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM0OTM0Ng==", "bodyText": "Why are we using LinkedList? It's very rare where it should be used.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452349346", "createdAt": "2020-07-09T16:39:55Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5MzU4Nw==", "bodyText": "We only add elements to the List and then iterate over it. A LinkedList seems slightly better for this case.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452393587", "createdAt": "2020-07-09T17:57:59Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5NTk2NA==", "bodyText": "Not at all. This is a perfect case for ArrayList. LinkedList iteration is very slow due to pointer chasing (in comparison).", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452395964", "createdAt": "2020-07-09T18:02:15Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjM5NjQ3MQ==", "bodyText": "FYI https://twitter.com/joshbloch/status/583813919019573248 :)", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452396471", "createdAt": "2020-07-09T18:03:11Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQwMDc1OQ==", "bodyText": "That\u2019s good to know. I always thought that the iteration was more or less equivalent. I have learnt something today. Let me update that.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452400759", "createdAt": "2020-07-09T18:11:07Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQ0MDQ4Mw==", "bodyText": "Done.", "url": "https://github.com/apache/kafka/pull/8999#discussion_r452440483", "createdAt": "2020-07-09T19:25:50Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClusterConnectionStates.java", "diffHunk": "@@ -443,13 +444,13 @@ public boolean isConnectionSetupTimeout(String id, long now) {\n     }\n \n     /**\n-     * Return the Set of nodes whose connection setup has timed out.\n+     * Return the List of nodes whose connection setup has timed out.\n      * @param now the current time in ms\n      */\n-    public Set<String> nodesWithConnectionSetupTimeout(long now) {\n+    public List<String> nodesWithConnectionSetupTimeout(long now) {\n         return connectingNodes.stream()\n             .filter(id -> isConnectionSetupTimeout(id, now))\n-            .collect(Collectors.toSet());\n+            .collect(Collectors.toCollection(LinkedList::new));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjA0MDQyNA=="}, "originalCommit": null, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2205, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}