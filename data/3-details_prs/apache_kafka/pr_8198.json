{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMDEzNDA0", "number": 8198, "title": "MINOR: fix linking errors in javadoc", "bodyText": "It seems to me we should block PR for javadoc error since the doc error is too noisy to the build log.\nThe Javadoc error about inaccessible link is NOT included by this PR.\nrelated to #8291\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-01T08:11:07Z", "url": "https://github.com/apache/kafka/pull/8198", "merged": true, "mergeCommit": {"oid": "4f6907947a95db48876dd331133d349236d5152a"}, "closed": true, "closedAt": "2020-03-22T17:15:18Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJXGssABqjMwODU0NzE3Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQDAZQgBqjMxNTIzNzQ5MjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzQ3NDc5", "url": "https://github.com/apache/kafka/pull/8198#pullrequestreview-367747479", "createdAt": "2020-03-03T07:22:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMjo1M1rOFw6nRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMjo1M1rOFw6nRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjI5NA==", "bodyText": "avoid importing ProducerRecord explicitly", "url": "https://github.com/apache/kafka/pull/8198#discussion_r386836294", "createdAt": "2020-03-03T07:22:53Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/ClusterResourceListener.java", "diffHunk": "@@ -26,16 +26,16 @@\n  * There will be one invocation of {@link ClusterResourceListener#onUpdate(ClusterResource)} after each metadata response.\n  * Note that the cluster id may be null when the Kafka broker version is below 0.10.1.0. If you receive a null cluster id, you can expect it to always be null unless you have a cluster with multiple broker versions which can happen if the cluster is being upgraded while the client is running.\n  * <p>\n- * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(ProducerRecord)}\n- * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(RecordMetadata, Exception)} .\n+ * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(org.apache.kafka.clients.producer.ProducerRecord)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NzQ3NTYx", "url": "https://github.com/apache/kafka/pull/8198#pullrequestreview-367747561", "createdAt": "2020-03-03T07:23:04Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMzowNVrOFw6njQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNzoyMzowNVrOFw6njQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjgzNjM2NQ==", "bodyText": "avoid importing ConsumerRecords explicitly", "url": "https://github.com/apache/kafka/pull/8198#discussion_r386836365", "createdAt": "2020-03-03T07:23:05Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/ClusterResourceListener.java", "diffHunk": "@@ -26,16 +26,16 @@\n  * There will be one invocation of {@link ClusterResourceListener#onUpdate(ClusterResource)} after each metadata response.\n  * Note that the cluster id may be null when the Kafka broker version is below 0.10.1.0. If you receive a null cluster id, you can expect it to always be null unless you have a cluster with multiple broker versions which can happen if the cluster is being upgraded while the client is running.\n  * <p>\n- * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(ProducerRecord)}\n- * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(RecordMetadata, Exception)} .\n+ * {@link org.apache.kafka.clients.producer.ProducerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked after {@link org.apache.kafka.clients.producer.ProducerInterceptor#onSend(org.apache.kafka.clients.producer.ProducerRecord)}\n+ * but before {@link org.apache.kafka.clients.producer.ProducerInterceptor#onAcknowledgement(org.apache.kafka.clients.producer.RecordMetadata, Exception)} .\n  * <p>\n- * {@link org.apache.kafka.clients.consumer.ConsumerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked before {@link org.apache.kafka.clients.consumer.ConsumerInterceptor#onConsume(ConsumerRecords)}\n+ * {@link org.apache.kafka.clients.consumer.ConsumerInterceptor} : The {@link ClusterResourceListener#onUpdate(ClusterResource)} method will be invoked before {@link org.apache.kafka.clients.consumer.ConsumerInterceptor#onConsume(org.apache.kafka.clients.consumer.ConsumerRecords)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4OTU1Njcx", "url": "https://github.com/apache/kafka/pull/8198#pullrequestreview-378955671", "createdAt": "2020-03-21T22:10:54Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjoxMDo1NFrOF5r-Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQyMjozMjoyOFrOF5sDkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzU5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map)} call.\n          \n          \n            \n             * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map, AlterConsumerGroupOffsetsOptions)} call.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033590", "createdAt": "2020-03-21T22:10:54Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/AlterConsumerGroupOffsetsOptions.java", "diffHunk": "@@ -18,6 +18,8 @@\n \n import org.apache.kafka.common.annotation.InterfaceStability;\n \n+import java.util.Map;\n+\n /**\n  * Options for the {@link AdminClient#alterConsumerGroupOffsets(String, Map)} call.", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzY1NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)} .\n          \n          \n            \n             * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)}.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033655", "createdAt": "2020-03-21T22:11:57Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ElectLeadersOptions.java", "diffHunk": "@@ -17,10 +17,13 @@\n \n package org.apache.kafka.clients.admin;\n \n+import org.apache.kafka.common.ElectionType;\n import org.apache.kafka.common.annotation.InterfaceStability;\n \n+import java.util.Set;\n+\n /**\n- * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)}.\n+ * Options for {@link Admin#electLeaders(ElectionType, Set, ElectLeadersOptions)} .", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzMzg2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Collection;\n          \n          \n            \n            \n          \n          \n            \n            import java.util.Collection;", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396033864", "createdAt": "2020-03-21T22:15:23Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ElectPreferredLeadersOptions.java", "diffHunk": "@@ -17,8 +17,10 @@\n \n package org.apache.kafka.clients.admin;\n \n+import org.apache.kafka.common.ElectionType;\n import org.apache.kafka.common.annotation.InterfaceStability;\n import java.util.Collection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDA5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \n          \n          \n            \n            import java.util.Map;\n          \n          \n            \n            import java.util.Map;", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034098", "createdAt": "2020-03-21T22:18:42Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/OffsetSpec.java", "diffHunk": "@@ -17,6 +17,8 @@\n package org.apache.kafka.clients.admin;\n \n \n+import java.util.Map;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDI1Mg==", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034252", "createdAt": "2020-03-21T22:21:41Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/Consumer.java", "diffHunk": "@@ -249,7 +249,7 @@\n     ConsumerGroupMetadata groupMetadata();\n \n     /**\n-     * @see KafkaConsumer#enforceRebalance)\n+     * @see KafkaConsumer#enforceRebalance()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDQ0Ng==", "bodyText": "rearranging the imports to match the style might make sense here, given that there are only two import statements.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034446", "createdAt": "2020-03-21T22:24:16Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/common/ElectionType.java", "diffHunk": "@@ -18,10 +18,11 @@\n package org.apache.kafka.common;\n \n import java.util.Arrays;\n+import java.util.Set;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDQ2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import java.util.Arrays;\n          \n          \n            \n            import java.util.Set;\n          \n          \n            \n            import org.apache.kafka.common.annotation.InterfaceStability;\n          \n          \n            \n            import org.apache.kafka.common.annotation.InterfaceStability;\n          \n          \n            \n            \n          \n          \n            \n            import java.util.Arrays;\n          \n          \n            \n            import java.util.Set;", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034463", "createdAt": "2020-03-21T22:24:33Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/common/ElectionType.java", "diffHunk": "@@ -18,10 +18,11 @@\n package org.apache.kafka.common;\n \n import java.util.Arrays;\n+import java.util.Set;\n import org.apache.kafka.common.annotation.InterfaceStability;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDU4MQ==", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034581", "createdAt": "2020-03-21T22:26:11Z", "author": {"login": "kkonstantine"}, "path": "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java", "diffHunk": "@@ -93,8 +93,8 @@ public void commit() throws InterruptedException {\n      * also called when a record is filtered by a transformation, and thus will never be ACK'd by a broker.\n      * </p>\n      * <p>\n-     * This is an alias for {@link commitRecord(SourceRecord, RecordMetadata)} for backwards compatibility. The default\n-     * implementation of {@link commitRecord(SourceRecord, RecordMetadata)} just calls this method. It is not necessary\n+     * This is an alias for {@link #commitRecord(SourceRecord, RecordMetadata)} for backwards compatibility. The default", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDU4OQ==", "bodyText": "This has been fixed by: #8291\nPlease omit and rebase to get the latest changes.\nBut see below on line 126 for a misformatting that needs to be fixed:\n@{link commitRecord(SourceRecord)} needs to be {@link #commitRecord(SourceRecord)}", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034589", "createdAt": "2020-03-21T22:26:16Z", "author": {"login": "kkonstantine"}, "path": "connect/api/src/main/java/org/apache/kafka/connect/source/SourceTask.java", "diffHunk": "@@ -105,7 +105,7 @@ public void commit() throws InterruptedException {\n      *\n      * @param record {@link SourceRecord} that was successfully sent via the producer or filtered by a transformation\n      * @throws InterruptedException\n-     * @see commitRecord(SourceRecord, RecordMetadata)\n+     * @see #commitRecord(SourceRecord, RecordMetadata)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDk1Nw==", "bodyText": "This has been fixed by: #8314\nPlease omit and rebase to get the latest changes.", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034957", "createdAt": "2020-03-21T22:32:23Z", "author": {"login": "kkonstantine"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsMetrics.java", "diffHunk": "@@ -58,9 +57,9 @@\n      * @param recordingLevel     the recording level (e.g., INFO or DEBUG) for this sensor.\n      * @param tags               additional tags of the sensor\n      * @return The added sensor.\n-     * @see #addRateTotalSensor(String, String, String, RecordingLevel, String...)\n+     * @see #addRateTotalSensor(String, String, String, Sensor.RecordingLevel, String...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjAzNDk2Mg==", "bodyText": "This has been fixed by: #8314\nPlease omit and rebase to get the latest changes.\nSame for the rest of the issues in this file probably", "url": "https://github.com/apache/kafka/pull/8198#discussion_r396034962", "createdAt": "2020-03-21T22:32:28Z", "author": {"login": "kkonstantine"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsMetrics.java", "diffHunk": "@@ -58,9 +57,9 @@\n      * @param recordingLevel     the recording level (e.g., INFO or DEBUG) for this sensor.\n      * @param tags               additional tags of the sensor\n      * @return The added sensor.\n-     * @see #addRateTotalSensor(String, String, String, RecordingLevel, String...)\n+     * @see #addRateTotalSensor(String, String, String, Sensor.RecordingLevel, String...)\n      * @see #removeSensor(Sensor)\n-     * @see #addSensor(String, RecordingLevel, Sensor...)\n+     * @see #addSensor(String, Sensor.RecordingLevel, Sensor...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "committedDate": "2020-03-22T05:38:48Z", "message": "Minor: fix javadoc error"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/525bfdfea3c95bc9a268ef3a1fe746478fd90bfc", "committedDate": "2020-03-22T05:38:48Z", "message": "Minor: fix javadoc error"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1636, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}