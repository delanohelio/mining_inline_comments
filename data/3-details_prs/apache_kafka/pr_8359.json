{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzOTAyOTk3", "number": 8359, "title": "KAFKA-9778: Add validateConnector functionality to the EmbeddedConnectCluster", "bodyText": "A validate endpoint should be added to enables the integration testing of validation functionalities, including validation success and assertion of specific error messages.\nThis PR adds a method validateConnectorConfig to the EmbeddedConnectCluster that pings the /config/validate endpoint with the given configurations. More about the endpoint here.\nWith this addition, the validations for the connector can be tested in a similar way integration tests currently use the configureConnector method, for ex: connect.configureConnector(CONNECTOR_NAME, props);. The validation call would look like: ConfigInfos validateResponse = connect.validateConnectorConfig(CONNECTOR_CLASS_NAME, props);.", "createdAt": "2020-03-26T01:11:44Z", "url": "https://github.com/apache/kafka/pull/8359", "merged": true, "mergeCommit": {"oid": "dfdb49f26aff256ebe28ab55d11604619bfa66b1"}, "closed": true, "closedAt": "2020-04-02T23:52:57Z", "author": {"login": "dosvath"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRWAybAFqTM4MTcyNjg3NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT1L3FAFqTM4Njg1MzA3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNzI2ODc1", "url": "https://github.com/apache/kafka/pull/8359#pullrequestreview-381726875", "createdAt": "2020-03-26T06:20:00Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDowMFrOF74tsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwNjoyMDo0M1rOF74ugg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTUwNA==", "bodyText": "minus two lines this method is the same as the above configureConnector. Should we refactor the common parts into a putConnectorConfig method or something?", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398339504", "createdAt": "2020-03-26T06:20:00Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODMzOTcxNA==", "bodyText": "there's responseToString below, which increases the similarities with configureConnector", "url": "https://github.com/apache/kafka/pull/8359#discussion_r398339714", "createdAt": "2020-03-26T06:20:43Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/util/clusters/EmbeddedConnectCluster.java", "diffHunk": "@@ -291,6 +293,35 @@ public String configureConnector(String connName, Map<String, String> connConfig\n                 \"Could not execute PUT request. Error response: \" + responseToString(response));\n     }\n \n+    /**\n+     * Validate a given connector configuration. If the configuration validates or\n+     * has a configuration error, an instance of {@link Response} is returned. If the validation fails\n+     * an exception is thrown.\n+     *\n+     * @param connClassName the name of the connector class\n+     * @param connConfig    the intended configuration\n+     * @throws JsonProcessingException if the response failed to deserialize into a {@link ConfigInfos} instance\n+     * @throws ConnectRestException if the REST api returns error status\n+     * @throws ConnectException if the configuration fails to be serialized or if the request could not be sent\n+     */\n+    public ConfigInfos validateConnectorConfig(String connClassName, Map<String, String> connConfig)\n+        throws JsonProcessingException {\n+        String url = endpointForResource(String.format(\"connector-plugins/%s/config/validate\", connClassName));\n+        ObjectMapper mapper = new ObjectMapper();\n+        String content;\n+        try {\n+            content = mapper.writeValueAsString(connConfig);\n+        } catch (IOException e) {\n+            throw new ConnectException(\"Could not serialize connector configuration and execute PUT request\");\n+        }\n+        Response response = requestPut(url, content);\n+        if (response.getStatus() < Response.Status.BAD_REQUEST.getStatusCode()) {\n+            return mapper.readValue(response.getEntity().toString(), ConfigInfos.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "84f3375948744ab0a8bb6e726c59ba8f5aafee6f", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/84f3375948744ab0a8bb6e726c59ba8f5aafee6f", "committedDate": "2020-03-27T22:07:53Z", "message": "Add validateConnector functionality to the EmbeddedConnectCluster"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "84f3375948744ab0a8bb6e726c59ba8f5aafee6f", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/84f3375948744ab0a8bb6e726c59ba8f5aafee6f", "committedDate": "2020-03-27T22:07:53Z", "message": "Add validateConnector functionality to the EmbeddedConnectCluster"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjMwMTEw", "url": "https://github.com/apache/kafka/pull/8359#pullrequestreview-383230110", "createdAt": "2020-03-27T22:16:17Z", "commit": {"oid": "84f3375948744ab0a8bb6e726c59ba8f5aafee6f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1aefa5e81d118d1f07ef62eb9ac22d8ca409cfe", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/d1aefa5e81d118d1f07ef62eb9ac22d8ca409cfe", "committedDate": "2020-03-30T20:44:21Z", "message": "PR Revision - added ConnectException conversion, validateConnectorConfig calls to ExampleConnectIntegrationTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "d1aefa5e81d118d1f07ef62eb9ac22d8ca409cfe", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/d1aefa5e81d118d1f07ef62eb9ac22d8ca409cfe", "committedDate": "2020-03-30T20:44:21Z", "message": "PR Revision - added ConnectException conversion, validateConnectorConfig calls to ExampleConnectIntegrationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76a44f847fc3393285b1963148c1ac1aae6d7717", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/76a44f847fc3393285b1963148c1ac1aae6d7717", "committedDate": "2020-03-30T22:00:48Z", "message": "PR Revision - Made error message more specific"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e1a99aed98c592fa36f421f17c6da1f474a4cef", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/8e1a99aed98c592fa36f421f17c6da1f474a4cef", "committedDate": "2020-03-30T22:32:32Z", "message": "PR Revision - Added comments to ExampleConnectIntegrationTest"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3806b914e1a07c1b9818fa66cf4700760cc968e0", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/3806b914e1a07c1b9818fa66cf4700760cc968e0", "committedDate": "2020-03-31T17:39:51Z", "message": "PR Revision - Unused imports, whitespace fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDc0ODUy", "url": "https://github.com/apache/kafka/pull/8359#pullrequestreview-385074852", "createdAt": "2020-03-31T20:21:33Z", "commit": {"oid": "3806b914e1a07c1b9818fa66cf4700760cc968e0"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ec78a919d6220521b55ca63582d365664b85c1", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/45ec78a919d6220521b55ca63582d365664b85c1", "committedDate": "2020-04-01T22:32:41Z", "message": "PR revision - Added EmbeddedConnectClusterAssertions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "45ec78a919d6220521b55ca63582d365664b85c1", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/45ec78a919d6220521b55ca63582d365664b85c1", "committedDate": "2020-04-01T22:32:41Z", "message": "PR revision - Added EmbeddedConnectClusterAssertions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODUzMDc1", "url": "https://github.com/apache/kafka/pull/8359#pullrequestreview-386853075", "createdAt": "2020-04-02T23:48:34Z", "commit": {"oid": "45ec78a919d6220521b55ca63582d365664b85c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1682, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}