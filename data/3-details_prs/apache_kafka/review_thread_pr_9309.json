{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NzMxMjEy", "number": 9309, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoyMjowNVrOEpJqYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoyMzoyMlrOEpJsAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTg1Mzc2OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoyMjowNVrOHap9nQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNToyNzozMlrOHa6-OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMjU0MQ==", "bodyText": "We should avoid to suppress warning. Seems, you need to add generics to ProducerRecord in L774 to fix it?", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497712541", "createdAt": "2020-09-30T18:22:05Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDExOA==", "bodyText": "Thanks a lot for your review @mjsax\nIf I add generics, bounded type parameters will make compilation fail, as types are checked and incompatible.\nIn fact, the purpose of this enhancement is that MockProducer throws the exception when types are not restricted, wdyt?", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497840118", "createdAt": "2020-09-30T22:39:23Z", "author": {"login": "gmunozfe"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMjU0MQ=="}, "originalCommit": null, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MTIyNA==", "bodyText": "Oh, I see. We actually want to pass in an incorrect key-type to get the ClassCastException. So you are right, for this case we cannot specify the generics. Keeping the code as-is and to suppress the warning is fine than. Totally missed this. Thanks for clarifying.", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497991224", "createdAt": "2020-10-01T05:27:32Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMjU0MQ=="}, "originalCommit": null, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNTg1Nzk0OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxODoyMzoyMlrOHaqAUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNToyODo1M1rOHa6_dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMzIzNQ==", "bodyText": "instead of fail we should use ```\nassertThrows(\nClassCastException.class,\n() -> producer.send(record);\n);\n\nFor this case, we can remove the `catch` block below.", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497713235", "createdAt": "2020-09-30T18:23:22Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void shouldThrowClassCastException() {\n+        try (MockProducer<Integer, String> producer = new MockProducer<>(true, new IntegerSerializer(), new StringSerializer());) {\n+            ProducerRecord record = new ProducerRecord(topic, \"key1\", \"value1\");\n+            producer.send(record);\n+            fail(\"Should have thrown ClassCastException because record cannot be casted with serializers\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzg0MDUzMw==", "bodyText": "Done, I have followed the same approach that other tests in the same class, but assertThrows is also a good alternative", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497840533", "createdAt": "2020-09-30T22:40:26Z", "author": {"login": "gmunozfe"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void shouldThrowClassCastException() {\n+        try (MockProducer<Integer, String> producer = new MockProducer<>(true, new IntegerSerializer(), new StringSerializer());) {\n+            ProducerRecord record = new ProducerRecord(topic, \"key1\", \"value1\");\n+            producer.send(record);\n+            fail(\"Should have thrown ClassCastException because record cannot be casted with serializers\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMzIzNQ=="}, "originalCommit": null, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk5MTU0Mg==", "bodyText": "Yes, we used an older version of the test libraries and thus existing code uses a different pattern. We just try to use the newer (and better) pattern in new code and migrate existing code lazily to the new pattern.", "url": "https://github.com/apache/kafka/pull/9309#discussion_r497991542", "createdAt": "2020-10-01T05:28:53Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/MockProducerTest.java", "diffHunk": "@@ -765,6 +766,16 @@ public void shouldThrowOnFlushProducerIfProducerIsClosed() {\n             fail(\"Should have thrown as producer is already closed\");\n         } catch (IllegalStateException e) { }\n     }\n+    \n+    @Test\n+    @SuppressWarnings(\"unchecked\")\n+    public void shouldThrowClassCastException() {\n+        try (MockProducer<Integer, String> producer = new MockProducer<>(true, new IntegerSerializer(), new StringSerializer());) {\n+            ProducerRecord record = new ProducerRecord(topic, \"key1\", \"value1\");\n+            producer.send(record);\n+            fail(\"Should have thrown ClassCastException because record cannot be casted with serializers\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcxMzIzNQ=="}, "originalCommit": null, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1843, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}