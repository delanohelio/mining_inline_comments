{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk3MzQzMzIz", "number": 8406, "title": "MINOR: clean up Streams assignment classes and tests", "bodyText": "First set of cleanup pushed to followup PR after KIP-441 Pt. 5. Main changes are:\n\nMoved RankedClient and the static buildClientRankingsByTask to a new file\nMoved Movement and the static getMovements to a new file (also renamed to TaskMovement)\nConsolidated the many common variables throughout the assignment tests to the new AssignmentTestUtils\nNew utility to generate comparable/predictable UUIDs for tests, and removed the generic from TaskAssignor and all related classes\n\nKeep in mind, this does not represent the sum whole of all cleanup we'd like to do. But if there's anything you had in mind that you feel would fit in with the other changes in this PR, feel free to point it out", "createdAt": "2020-04-02T04:01:35Z", "url": "https://github.com/apache/kafka/pull/8406", "merged": true, "mergeCommit": {"oid": "6e0d553350cef876f4fd2de0e3b8e6e40ce6be44"}, "closed": true, "closedAt": "2020-04-03T18:53:52Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTwz2LgBqjMxOTM1NDg3ODM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUDjO7ABqjMxOTcxNDQ4OTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NzYwODk4", "url": "https://github.com/apache/kafka/pull/8406#pullrequestreview-386760898", "createdAt": "2020-04-02T20:13:35Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxOTowMlrOF_73_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQyMDoxOTowMlrOF_73_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjU4NTU5OQ==", "bodyText": "Is this just important to produce stable test results for verification?", "url": "https://github.com/apache/kafka/pull/8406#discussion_r402585599", "createdAt": "2020-04-02T20:19:02Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java", "diffHunk": "@@ -0,0 +1,86 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.processor.internals.assignment;\n+\n+import static java.util.Collections.emptyMap;\n+import static java.util.Collections.emptySet;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.UUID;\n+import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.streams.processor.TaskId;\n+\n+public class AssignmentTestUtils {\n+\n+    public static final UUID UUID_1 = uuidForInt(1);\n+    public static final UUID UUID_2 = uuidForInt(2);\n+    public static final UUID UUID_3 = uuidForInt(3);\n+    public static final UUID UUID_4 = uuidForInt(4);\n+    public static final UUID UUID_5 = uuidForInt(5);\n+    public static final UUID UUID_6 = uuidForInt(6);\n+\n+    public static final TaskId TASK_0_0 = new TaskId(0, 0);\n+    public static final TaskId TASK_0_1 = new TaskId(0, 1);\n+    public static final TaskId TASK_0_2 = new TaskId(0, 2);\n+    public static final TaskId TASK_0_3 = new TaskId(0, 3);\n+    public static final TaskId TASK_0_4 = new TaskId(0, 4);\n+    public static final TaskId TASK_0_5 = new TaskId(0, 5);\n+    public static final TaskId TASK_0_6 = new TaskId(0, 6);\n+    public static final TaskId TASK_1_0 = new TaskId(1, 0);\n+    public static final TaskId TASK_1_1 = new TaskId(1, 1);\n+    public static final TaskId TASK_1_2 = new TaskId(1, 2);\n+    public static final TaskId TASK_1_3 = new TaskId(1, 3);\n+    public static final TaskId TASK_2_0 = new TaskId(2, 0);\n+    public static final TaskId TASK_2_1 = new TaskId(2, 1);\n+    public static final TaskId TASK_2_2 = new TaskId(2, 2);\n+    public static final TaskId TASK_2_3 = new TaskId(2, 3);\n+    public static final TaskId TASK_3_4 = new TaskId(3, 4);\n+\n+    public static final Set<TaskId> EMPTY_TASKS = emptySet();\n+    public static final Map<TaskId, Long> EMPTY_TASK_OFFSET_SUMS = emptyMap();\n+    public static final Map<TopicPartition, Long> EMPTY_CHANGELOG_END_OFFSETS = new HashMap<>();\n+\n+    /**\n+     * Builds a UUID by repeating the given number n. For valid n, it is guaranteed that the returned UUIDs satisfy\n+     * the same relation relative to others as their parameter n does: iff n < m, then uuidForInt(n) < uuidForInt(m)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2OTAxMjg2", "url": "https://github.com/apache/kafka/pull/8406#pullrequestreview-386901286", "createdAt": "2020-04-03T02:36:22Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa8ef7d2b85dc48017691be9b7f98dd38ad70bc3", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/fa8ef7d2b85dc48017691be9b7f98dd38ad70bc3", "committedDate": "2020-04-03T16:32:39Z", "message": "move to new classes, consolidate variables into AssignmentTestUtils\ncan now  remove the StreamsPartitionassignor checkstyle suppression!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d58114282994735ec2bb5c667b6aa880da64e5a", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/8d58114282994735ec2bb5c667b6aa880da64e5a", "committedDate": "2020-04-03T16:32:39Z", "message": "fix parameterized"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2aefb7bf5374a8a06cf5f2342bdb6d65ce2a76bb", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/2aefb7bf5374a8a06cf5f2342bdb6d65ce2a76bb", "committedDate": "2020-04-03T16:32:39Z", "message": "fix StickyTaskAssignorTest"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "2aefb7bf5374a8a06cf5f2342bdb6d65ce2a76bb", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/2aefb7bf5374a8a06cf5f2342bdb6d65ce2a76bb", "committedDate": "2020-04-03T16:32:39Z", "message": "fix StickyTaskAssignorTest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 44, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}