{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzY0NTM3", "number": 9313, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NjoyM1rOEoAPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMzo1M1rOEt7KqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzgyMzU2OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NjoyM1rOHY2R3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QyMTo0MjoxM1rOHeGjWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA==", "bodyText": "These changes are going to break existing users. For example, I have connectors with a few settings prefixed with consumer.. I wonder if we could keep the old behaviour (even if partially broken) while adding the proper prefixes", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495817180", "createdAt": "2020-09-28T09:46:23Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg3MTAxNw==", "bodyText": "I'm not sure if I follow it. This prefix \"source_cluster\" is not user specified. It is prefixed somewhere else by mm2 (I can get the lines if you want later on). The config specified here will actually be honored. It does not imply changes on the MirrorMaker config side at least. Are you talking about the case of running MirrorMaker in a connect cluster rather than as a dedicated cluster? I didn't check that one TBH. Maybe @ryannedolan has more insight on this one?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495871017", "createdAt": "2020-09-28T11:30:54Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk3NTcyMQ==", "bodyText": "Yes I'm running MM2 in a Connect cluster.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495975721", "createdAt": "2020-09-28T14:19:34Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTk5NTIyNA==", "bodyText": "Gotcha. I just peek'd at it again and you're right. It seems the proper fix would be to fix the way mm2 populates the MirrorConnectorConfig to avoid this change. WDYT @ryannedolan ? Not sure how involved this change would be.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495995224", "createdAt": "2020-09-28T14:45:57Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA3OTMyMA==", "bodyText": "I have put a new fix that should handle both cases. Details on why I think this is a reasonable fix:\n\nThere's no change on what is defined here. The properties that starts with producer. or consumer. are still ignored in mm2 dedicated mode.\nMM2 needs to differentiate the properties for the source cluster and we can't just remove the source.cluster prefix.\nFor running the mirror connectors on a Connect cluster, the only \"drawback\" is that now you can provide an override with source.cluster.consumer or source.cluster.producer.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r497079320", "createdAt": "2020-09-29T21:45:55Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5MDEyMg==", "bodyText": "It's unfortunate for admin we use source.admin as the prefix ...\nSo we'd be left with a configuration like:\n\"source.cluster.bootstrap.servers\": \"localhost:9092\",\n\"source.cluster.security.protocol\": \"SASL_SSL\",\n\"source.cluster.producer.some-producer-setting\": 123,\n\"source.cluster.consumer.some-consumer-setting\": 123,\n\"source.admin.some-admin-setting\": 123", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498290122", "createdAt": "2020-10-01T14:30:36Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5ODk4Nw==", "bodyText": "Maybe not including cluster for all the client specific settings would be slightly better, WDYT?\n\"source.cluster.bootstrap.servers\": \"localhost:9092\",\n\"source.cluster.security.protocol\": \"SASL_SSL\",\n\"source.producer.some-producer-setting\": 123,\n\"source.consumer.some-consumer-setting\": 123,\n\"source.admin.some-admin-setting\": 123", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498298987", "createdAt": "2020-10-01T14:42:14Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5OTQ5Mw==", "bodyText": "For connect, you can still use (or the one you've shared).\n\"source.cluster.bootstrap.servers\": \"localhost:9092\",\n\"source.cluster.security.protocol\": \"SASL_SSL\",\n\"producer.some-producer-setting\": 123\n\"consumer.some-consumer-setting\": 123\n\"source.admin.some-admin-setting\": 123\n\nYes, we could normalize that but I'm not touching admin config in this PR.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498299493", "createdAt": "2020-10-01T14:42:56Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODk3MTA2OQ==", "bodyText": "Maybe not including cluster for all the client specific settings would be slightly better, WDYT?\n\nSomehow I missed this. I do not have a strong opinion on that but I do like the idea on normalizing it. But changing that will still break existing users though. How do you want to proceed?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498971069", "createdAt": "2020-10-02T18:03:56Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ2NDgwNA==", "bodyText": "@mimaison just a friendly ping.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r500464804", "createdAt": "2020-10-06T17:15:25Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2MjY4NA==", "bodyText": "I don't think the format mentioned in #9313 (comment) would break compatibility.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r500562684", "createdAt": "2020-10-06T20:03:27Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2NjgzOQ==", "bodyText": "For users running on a Connect cluster, that format is not supported right now:\nsource.producer.some-producer-setting: 123\n\nThe only supported is (unless I'm missing something):\n\"producer.some-producer-setting\": 123", "url": "https://github.com/apache/kafka/pull/9313#discussion_r500566839", "createdAt": "2020-10-06T20:11:09Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2ODM1Nw==", "bodyText": "I meant add support for that format. We obviously want to keep supporting the existing formats", "url": "https://github.com/apache/kafka/pull/9313#discussion_r500568357", "createdAt": "2020-10-06T20:13:52Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU2OTU2Nw==", "bodyText": "\ud83e\udd26 got it. I misunderstood it. Let me give it a try.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r500569567", "createdAt": "2020-10-06T20:16:08Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTMyNjY4MA==", "bodyText": "I think the new code does what we want. Also tested a bin from this on my infra and it is working fine. Let me know if this works for you.", "url": "https://github.com/apache/kafka/pull/9313#discussion_r501326680", "createdAt": "2020-10-07T21:42:13Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA=="}, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMzgyNzkwOnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NzozM1rOHY2Uhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NzozM1rOHY2Uhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzg2Mw==", "bodyText": "While we're at it, could we also add tests for targetAdminConfig() and sourceAdminConfig()?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495817863", "createdAt": "2020-09-28T09:47:33Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "diffHunk": "@@ -119,4 +120,41 @@ public void testNonMutationOfConfigDef() {\n             connectorConfigDef.names().contains(taskSpecificProperty)\n         ));\n     }\n+\n+    @Test\n+    public void testSourceConsumerConfig() {\n+        Map<String, String> connectorProps = makeProps(\n+                MirrorConnectorConfig.CONSUMER_CLIENT_PREFIX + \"max.poll.interval.ms\", \"120000\"\n+        );\n+        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n+        Map<String, Object> connectorConsumerProps = config.sourceConsumerConfig();\n+        Map<String, Object> expectedConsumerProps = new HashMap<>();\n+        expectedConsumerProps.put(\"enable.auto.commit\", \"false\");\n+        expectedConsumerProps.put(\"auto.offset.reset\", \"earliest\");\n+        expectedConsumerProps.put(\"max.poll.interval.ms\", \"120000\");\n+        assertEquals(expectedConsumerProps, connectorConsumerProps);\n+\n+        // checking auto.offset.reset override works\n+        connectorProps = makeProps(\n+                MirrorConnectorConfig.CONSUMER_CLIENT_PREFIX + \"auto.offset.reset\", \"latest\"\n+        );\n+        config = new MirrorConnectorConfig(connectorProps);\n+        connectorConsumerProps = config.sourceConsumerConfig();\n+        expectedConsumerProps.put(\"auto.offset.reset\", \"latest\");\n+        expectedConsumerProps.remove(\"max.poll.interval.ms\");\n+        assertEquals(expectedConsumerProps, connectorConsumerProps);\n+    }\n+\n+    @Test\n+    public void testSourceProducerConfig() {\n+        Map<String, String> connectorProps = makeProps(\n+                MirrorConnectorConfig.PRODUCER_CLIENT_PREFIX + \"acks\", \"1\"\n+        );\n+        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n+        Map<String, Object> connectorProducerProps = config.sourceProducerConfig();\n+        Map<String, Object> expectedProducerProps = new HashMap<>();\n+        expectedProducerProps.put(\"acks\", \"1\");\n+        assertEquals(expectedProducerProps, connectorProducerProps);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExOTU0Njc0OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDozMjo1NVrOHbNUzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDozMjo1NVrOHbNUzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5MTkxNg==", "bodyText": "We should test settings with the source.cluster. prefix too. Same in the test below", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498291916", "createdAt": "2020-10-01T14:32:55Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "diffHunk": "@@ -119,4 +120,41 @@ public void testNonMutationOfConfigDef() {\n             connectorConfigDef.names().contains(taskSpecificProperty)\n         ));\n     }\n+\n+    @Test\n+    public void testSourceConsumerConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a4e3bffa9722d88d1e9ba68dd77c28a553d8dae"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NTE5MTgzOnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxNzowMlrOHe_yAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxOToyNTowNFrOHgKjAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NDMyMQ==", "bodyText": "I was not expecting to see changes in existing tests if we are not breaking compatibility, source.cluster.bootstrap.servers should continue working and still be tested", "url": "https://github.com/apache/kafka/pull/9313#discussion_r502264321", "createdAt": "2020-10-09T08:17:02Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "diffHunk": "@@ -52,10 +52,10 @@ public void testClusterConfigProperties() {\n             \"replication.factor\", \"4\"));\n         Map<String, String> connectorProps = mirrorConfig.connectorBaseConfig(new SourceAndTarget(\"a\", \"b\"),\n             MirrorSourceConnector.class);\n-        assertEquals(\"source.cluster.bootstrap.servers is set\",\n-            \"servers-one\", connectorProps.get(\"source.cluster.bootstrap.servers\"));\n-        assertEquals(\"target.cluster.bootstrap.servers is set\",\n-            \"servers-two\", connectorProps.get(\"target.cluster.bootstrap.servers\"));\n+        assertEquals(\"source.bootstrap.servers is set\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM1MTkzMA==", "bodyText": "That will require more changes. This does not break for the mirrorMaker driver main config. I guess it does for on Connect though", "url": "https://github.com/apache/kafka/pull/9313#discussion_r502351930", "createdAt": "2020-10-09T11:02:24Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "diffHunk": "@@ -52,10 +52,10 @@ public void testClusterConfigProperties() {\n             \"replication.factor\", \"4\"));\n         Map<String, String> connectorProps = mirrorConfig.connectorBaseConfig(new SourceAndTarget(\"a\", \"b\"),\n             MirrorSourceConnector.class);\n-        assertEquals(\"source.cluster.bootstrap.servers is set\",\n-            \"servers-one\", connectorProps.get(\"source.cluster.bootstrap.servers\"));\n-        assertEquals(\"target.cluster.bootstrap.servers is set\",\n-            \"servers-two\", connectorProps.get(\"target.cluster.bootstrap.servers\"));\n+        assertEquals(\"source.bootstrap.servers is set\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NDMyMQ=="}, "originalCommit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ4OTI4MA==", "bodyText": "I think I have achieved what we want. Explicitly setting \"source.\" prefix for props starting with consumer|producer|admin and setting \"source.cluster.\" otherwise. All tests passed. The code runs fine on my infra.\n@mimaison please take a look whenever you get some time :)", "url": "https://github.com/apache/kafka/pull/9313#discussion_r503489280", "createdAt": "2020-10-12T19:25:04Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "diffHunk": "@@ -52,10 +52,10 @@ public void testClusterConfigProperties() {\n             \"replication.factor\", \"4\"));\n         Map<String, String> connectorProps = mirrorConfig.connectorBaseConfig(new SourceAndTarget(\"a\", \"b\"),\n             MirrorSourceConnector.class);\n-        assertEquals(\"source.cluster.bootstrap.servers is set\",\n-            \"servers-one\", connectorProps.get(\"source.cluster.bootstrap.servers\"));\n-        assertEquals(\"target.cluster.bootstrap.servers is set\",\n-            \"servers-two\", connectorProps.get(\"target.cluster.bootstrap.servers\"));\n+        assertEquals(\"source.bootstrap.servers is set\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NDMyMQ=="}, "originalCommit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTg5NDg2OnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMDoxMlrOHiAobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMjo0ODoxNVrOHiGD7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzk4MQ==", "bodyText": "Can we find a better name for these 2 new methods? Something like clusterConfigsWithPrefix() and clientConfigsWithPrefix()?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r505423981", "createdAt": "2020-10-15T10:10:12Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java", "diffHunk": "@@ -245,10 +254,17 @@ public MirrorClientConfig clientConfig(String cluster) {\n         Map<String, String> strings = originalsStrings();\n         strings.keySet().removeIf(x -> !x.startsWith(prefix));\n         return strings;\n-    } \n+    }\n+\n+    static Map<String, String> prefixForGeneralAttrs(String prefix, Map<String, String> props) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTUxMjk0Mg==", "bodyText": "Indeed. Thanks!", "url": "https://github.com/apache/kafka/pull/9313#discussion_r505512942", "createdAt": "2020-10-15T12:48:15Z", "author": {"login": "scanterog"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java", "diffHunk": "@@ -245,10 +254,17 @@ public MirrorClientConfig clientConfig(String cluster) {\n         Map<String, String> strings = originalsStrings();\n         strings.keySet().removeIf(x -> !x.startsWith(prefix));\n         return strings;\n-    } \n+    }\n+\n+    static Map<String, String> prefixForGeneralAttrs(String prefix, Map<String, String> props) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzk4MQ=="}, "originalCommit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTkwNzYwOnYy", "diffSide": "RIGHT", "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMzo1M1rOHiAwZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMzo1M1rOHiAwZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyNjAyMg==", "bodyText": "We could get rid of SOURCE_ADMIN_CLIENT_PREFIX and TARGET_ADMIN_CLIENT_PREFIX and instead use SOURCE_PREFIX + ADMIN_CLIENT_PREFIX or TARGET_PREFIX + ADMIN_CLIENT_PREFIX in the method getting Admin Client configs so they are the similar to the Producer and Consumer methods", "url": "https://github.com/apache/kafka/pull/9313#discussion_r505426022", "createdAt": "2020-10-15T10:13:53Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,6 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n+    protected static final String SOURCE_PREFIX = MirrorMakerConfig.SOURCE_PREFIX;\n+    protected static final String TARGET_PREFIX = MirrorMakerConfig.TARGET_PREFIX;\n     protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n     protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n     protected static final String ADMIN_CLIENT_PREFIX = \"admin.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1847, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}