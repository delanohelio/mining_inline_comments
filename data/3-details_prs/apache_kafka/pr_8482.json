{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMTI3Mjgx", "number": 8482, "title": "KAFKA-9863: update the deprecated --zookeeper option in the documentation into --bootstrap-server", "bodyText": "Since V2.2.0, the -zookeeper option turned into deprecated because Kafka can directly connect to brokers with --bootstrap-server (KIP-377). But in the official documentation, there are many example commands use --zookeeper instead of --bootstrap-server. Follow the command in the documentation, you'll get this warning, which is not good.\nWarning: --zookeeper is deprecated and will be removed in a future version of Kafka.\nUse --bootstrap-server instead to specify a broker to connect to.\n\nUpdate configuration.html, ops.html, security.html files\nMainly update 2 commands:\n\nbefore: bin/kafka-configs.sh --zookeeper localhost:2181 ...\nafter: bin/kafka-configs.sh --bootstrap-server localhost:9092 ...\nbefore: bin/kafka-reassign-partitions.sh --zookeeper localhost:2181 ...\nafter: bin/kafka-reassign-partitions.sh --bootstrap-server localhost:9092 ...\n\nJIRA: https://issues.apache.org/jira/browse/KAFKA-9863\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-14T11:28:19Z", "url": "https://github.com/apache/kafka/pull/8482", "merged": true, "mergeCommit": {"oid": "a91b06708bcba09ac77ad5d5f57e938bb35a0fc7"}, "closed": true, "closedAt": "2020-04-22T20:42:36Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXhtaygH2gAyNDAzMTI3MjgxOjM5MmM2NDA2NjkyYTRiOTY0OWFhMWE3NjAyYTExNjU3ZDEzYmVkNDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX4ul_gFqTM5MzgxMzAwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/392c6406692a4b9649aa1a7602a11657d13bed46", "committedDate": "2020-04-14T11:22:49Z", "message": "update the deprecated --zookeeper option in the documentation into --bootstrap-server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTU4MTk1", "url": "https://github.com/apache/kafka/pull/8482#pullrequestreview-392958195", "createdAt": "2020-04-14T14:03:02Z", "commit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDowMzowM1rOGFQL1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDozMzo1OVrOGFRpKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2MTIzNg==", "bodyText": "This specific change should not be made because the paragraph above is referring specifically to configuration \"before starting brokers for bootstrapping\".  However, since it is talking about storing sensitive information, it is likely that this would be a TLS-enabled Zookeeper quorum.  So I would suggest:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              &gt; bin/kafka-configs.sh --zookeeper localhost:2181 --entity-type brokers --entity-name 0 --alter --add-config\n          \n          \n            \n              &gt; bin/kafka-configs.sh --bootstrap-server localhost:9092 --entity-type brokers --entity-name 0 --alter --add-config\n          \n          \n            \n              &gt; bin/kafka-configs.sh --zookeeper localhost:2182 --zk-tls-config-file zk_tls_config.properties --entity-type brokers --entity-name 0 --alter --add-config", "url": "https://github.com/apache/kafka/pull/8482#discussion_r408161236", "createdAt": "2020-04-14T14:03:03Z", "author": {"login": "rondagostino"}, "path": "docs/configuration.html", "diffHunk": "@@ -100,7 +100,7 @@ <h5>Updating Password Configs in ZooKeeper Before Starting Brokers</h5>\n   on broker 0:\n \n   <pre class=\"brush: bash;\">\n-  &gt; bin/kafka-configs.sh --zookeeper localhost:2181 --entity-type brokers --entity-name 0 --alter --add-config\n+  &gt; bin/kafka-configs.sh --bootstrap-server localhost:9092 --entity-type brokers --entity-name 0 --alter --add-config", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NDAwOA==", "bodyText": "Same thing here and the examples below: this is about bootstrapping credentials.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n          \n          \n            \n                > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n          \n          \n            \n                > bin/kafka-configs.sh --zookeeper localhost:2182 --zk-tls-config-file zk_tls_config.properties --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice", "url": "https://github.com/apache/kafka/pull/8482#discussion_r408184008", "createdAt": "2020-04-14T14:32:32Z", "author": {"login": "rondagostino"}, "path": "docs/security.html", "diffHunk": "@@ -754,22 +754,22 @@ <h3><a id=\"security_sasl\" href=\"#security_sasl\">7.3 Authentication using SASL</a\n         credentials will be used to authenticate new connections.</p>\n         <p>Create SCRAM credentials for user <i>alice</i> with password <i>alice-secret</i>:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NDU2MQ==", "bodyText": "And here...", "url": "https://github.com/apache/kafka/pull/8482#discussion_r408184561", "createdAt": "2020-04-14T14:33:14Z", "author": {"login": "rondagostino"}, "path": "docs/security.html", "diffHunk": "@@ -754,22 +754,22 @@ <h3><a id=\"security_sasl\" href=\"#security_sasl\">7.3 Authentication using SASL</a\n         credentials will be used to authenticate new connections.</p>\n         <p>Create SCRAM credentials for user <i>alice</i> with password <i>alice-secret</i>:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n         </pre>\n         <p>The default iteration count of 4096 is used if iterations are not specified. A random salt is created\n         and the SCRAM identity consisting of salt, iterations, StoredKey and ServerKey are stored in Zookeeper.\n         See <a href=\"https://tools.ietf.org/html/rfc5802\">RFC 5802</a> for details on SCRAM identity and the individual fields.\n         <p>The following examples also require a user <i>admin</i> for inter-broker communication which can be created using:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NTAxNQ==", "bodyText": "And here...", "url": "https://github.com/apache/kafka/pull/8482#discussion_r408185015", "createdAt": "2020-04-14T14:33:50Z", "author": {"login": "rondagostino"}, "path": "docs/security.html", "diffHunk": "@@ -754,22 +754,22 @@ <h3><a id=\"security_sasl\" href=\"#security_sasl\">7.3 Authentication using SASL</a\n         credentials will be used to authenticate new connections.</p>\n         <p>Create SCRAM credentials for user <i>alice</i> with password <i>alice-secret</i>:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n         </pre>\n         <p>The default iteration count of 4096 is used if iterations are not specified. A random salt is created\n         and the SCRAM identity consisting of salt, iterations, StoredKey and ServerKey are stored in Zookeeper.\n         See <a href=\"https://tools.ietf.org/html/rfc5802\">RFC 5802</a> for details on SCRAM identity and the individual fields.\n         <p>The following examples also require a user <i>admin</i> for inter-broker communication which can be created using:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin\n         </pre>\n         <p>Existing credentials may be listed using the <i>--describe</i> option:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --describe --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --describe --entity-type users --entity-name alice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE4NTEyOQ==", "bodyText": "...and here.", "url": "https://github.com/apache/kafka/pull/8482#discussion_r408185129", "createdAt": "2020-04-14T14:33:59Z", "author": {"login": "rondagostino"}, "path": "docs/security.html", "diffHunk": "@@ -754,22 +754,22 @@ <h3><a id=\"security_sasl\" href=\"#security_sasl\">7.3 Authentication using SASL</a\n         credentials will be used to authenticate new connections.</p>\n         <p>Create SCRAM credentials for user <i>alice</i> with password <i>alice-secret</i>:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[iterations=8192,password=alice-secret],SCRAM-SHA-512=[password=alice-secret]' --entity-type users --entity-name alice\n         </pre>\n         <p>The default iteration count of 4096 is used if iterations are not specified. A random salt is created\n         and the SCRAM identity consisting of salt, iterations, StoredKey and ServerKey are stored in Zookeeper.\n         See <a href=\"https://tools.ietf.org/html/rfc5802\">RFC 5802</a> for details on SCRAM identity and the individual fields.\n         <p>The following examples also require a user <i>admin</i> for inter-broker communication which can be created using:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --add-config 'SCRAM-SHA-256=[password=admin-secret],SCRAM-SHA-512=[password=admin-secret]' --entity-type users --entity-name admin\n         </pre>\n         <p>Existing credentials may be listed using the <i>--describe</i> option:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --describe --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --describe --entity-type users --entity-name alice\n         </pre>\n         <p>Credentials may be deleted for one or more SCRAM mechanisms using the <i>--delete</i> option:\n         <pre class=\"brush: bash;\">\n-    > bin/kafka-configs.sh --zookeeper localhost:2181 --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name alice\n+    > bin/kafka-configs.sh --bootstrap-server localhost:9092 --alter --delete-config 'SCRAM-SHA-512' --entity-type users --entity-name alice", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "392c6406692a4b9649aa1a7602a11657d13bed46"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcc815508e75b8b9ed9b277e9e9d937d0ea1ca29", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/bcc815508e75b8b9ed9b277e9e9d937d0ea1ca29", "committedDate": "2020-04-15T08:16:27Z", "message": "address reviewer's comments\n\n1. keep --zookeeper argument in the places that is talking about configure zk before broker up\n2. use --zookeeper --zk-tls-config-file when doing some security related action, ex: update password"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODEzMDAy", "url": "https://github.com/apache/kafka/pull/8482#pullrequestreview-393813002", "createdAt": "2020-04-15T14:11:55Z", "commit": {"oid": "bcc815508e75b8b9ed9b277e9e9d937d0ea1ca29"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1504, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}