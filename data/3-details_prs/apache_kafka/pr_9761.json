{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzAyMDUx", "number": 9761, "title": "KAFKA-10768 Make ByteBufferInputStream.read(byte[], int, int) to follow the contract", "bodyText": "I made a test for ByteBufferInputStream in the ByteBufferLogInputStreamTest.\nFirst, I add a ByteBuffer that it's not empty to the ByteBufferInputStream, in order to verify it.\nAfter that, I try to use ByteBufferInputStream's read function and check return value whether it's correct.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-16T16:49:59Z", "url": "https://github.com/apache/kafka/pull/9761", "merged": true, "mergeCommit": {"oid": "bdb29e42cb19ff108c671f05cf0d2732fab0a2d8"}, "closed": true, "closedAt": "2021-01-03T07:09:32Z", "author": {"login": "bertber"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmxpOWAH2gAyNTQxMzAyMDUxOjViNmJmNzc5MGVkZDY1Mjc1YTI5NDdiODcwNDJlMGZmYzAyNTI5N2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdryjQ6gH2gAyNTQxMzAyMDUxOjgyYzMxZmNkODUzYmFkZjFiNzZiOTM0Yjc3NGIxZTAxNDgyNTM0N2Q=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5b6bf7790edd65275a2947b87042e0ffc025297c", "author": {"user": {"login": "bertber", "name": null}}, "url": "https://github.com/apache/kafka/commit/5b6bf7790edd65275a2947b87042e0ffc025297c", "committedDate": "2020-12-16T16:36:44Z", "message": "KAFKA-10768 Add a test for ByteBufferInputStream to ByteBufferLogInputStreamTest\n\nI made a test for ByteBufferInputStream in the ByteBufferLogInputStreamTest.\r\nFirst, I add a ByteBuffer that it's not empty to the ByteBufferInputStream, in order to verify it.\r\nAfter that, I try to use ByteBufferInputStream's read function and check return value whether it's correct."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjM4OTQ0", "url": "https://github.com/apache/kafka/pull/9761#pullrequestreview-554238944", "createdAt": "2020-12-17T02:39:48Z", "commit": {"oid": "5b6bf7790edd65275a2947b87042e0ffc025297c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozOTo0OFrOIHiCDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozOTo0OFrOIHiCDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2ODUyNQ==", "bodyText": "Could you move the tests to ByteBufferInputStreamTest? If there is no such test class, feel free to create new one.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r544768525", "createdAt": "2020-12-17T02:39:48Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "diffHunk": "@@ -120,4 +121,26 @@ public void iteratorRaisesOnTooLargeRecords() {\n         logInputStream.nextBatch();\n     }\n \n+    @Test\n+    public void testReadUnsignedIntFromInputStream() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b6bf7790edd65275a2947b87042e0ffc025297c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "499bf1551a405717e448d27a896d483d99abf079", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/499bf1551a405717e448d27a896d483d99abf079", "committedDate": "2020-12-17T18:42:52Z", "message": "Add a fixed the scenario of 'len==0' to read function."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/1cbe4937f62635f7727c627bfa98be9aff5e9c70", "committedDate": "2020-12-20T17:16:50Z", "message": "Create a ByteufferInputStreamTest class and move the\ntestReadUnsignedIntFromInputStream from ByteBufferLogInputStreamTest to\nByteufferInputStreamTest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODA3NDEy", "url": "https://github.com/apache/kafka/pull/9761#pullrequestreview-556807412", "createdAt": "2020-12-22T04:11:44Z", "commit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoxMTo0NFrOIJtvUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoxMTo0NFrOIJtvUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1NzQ4OA==", "bodyText": "please revert this change.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r547057488", "createdAt": "2020-12-22T04:11:44Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "diffHunk": "@@ -119,5 +119,4 @@ public void iteratorRaisesOnTooLargeRecords() {\n         assertNotNull(logInputStream.nextBatch());\n         logInputStream.nextBatch();\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU2ODA5NTU4", "url": "https://github.com/apache/kafka/pull/9761#pullrequestreview-556809558", "createdAt": "2020-12-22T04:20:35Z", "commit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoyMDozNVrOIJt3SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoyMDozNVrOIJt3SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1OTUyOQ==", "bodyText": "throws Exception  is useless.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r547059529", "createdAt": "2020-12-22T04:20:35Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+\r\n+import java.nio.ByteBuffer;\r\n+\r\n+import org.junit.Test;\r\n+\r\n+public class ByteBufferInputStreamTest {\r\n+\r\n+    @Test\r\n+    public void testReadUnsignedIntFromInputStream() throws Exception {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/23f5c4a93424c2f1817e5b9e178d37ea2d72c36d", "committedDate": "2020-12-28T16:28:07Z", "message": "Revert ByteBufferLogInputStreamTest's change and remove unnecessary code\nfrom ByteBufferInputStreamTest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzg2MTgx", "url": "https://github.com/apache/kafka/pull/9761#pullrequestreview-559386181", "createdAt": "2020-12-29T05:48:51Z", "commit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNTo0ODo1MlrOIMHgGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNTo0ODo1MlrOIMHgGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU3NjcyOA==", "bodyText": "We have a pending PR offering a consistent import order (see #8404 (comment)). Could you please follow the rules (although it is not merged)?\n\nkafka, org.apache.kafka\ncom, net, org\njava, javax", "url": "https://github.com/apache/kafka/pull/9761#discussion_r549576728", "createdAt": "2020-12-29T05:48:52Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mzg2MjQ3", "url": "https://github.com/apache/kafka/pull/9761#pullrequestreview-559386247", "createdAt": "2020-12-29T05:49:12Z", "commit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b44c6d62d79ab360d3a8ee7cd9207fe81d0056a", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/3b44c6d62d79ab360d3a8ee7cd9207fe81d0056a", "committedDate": "2020-12-30T16:47:08Z", "message": "reformat import order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82c31fcd853badf1b76b934b774b1e014825347d", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/82c31fcd853badf1b76b934b774b1e014825347d", "committedDate": "2021-01-01T06:29:45Z", "message": "reformat import order again"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2329, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}