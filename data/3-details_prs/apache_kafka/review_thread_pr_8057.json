{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyMTY3ODEx", "number": 8057, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MTo0OFrODd3rzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1NjoxNVrODd3urw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ3NjI5OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MTo0OFrOFmuMrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MTo0OFrOFmuMrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzExNw==", "bodyText": "Let's use OffsetFetchResponse.INVALID_OFFSET", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147117", "createdAt": "2020-02-06T23:51:48Z", "author": {"login": "hachikuji"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "diffHunk": "@@ -1502,15 +1503,18 @@ public void testDescribeConsumerGroupOffsets() throws Exception {\n                     Optional.empty(), \"\", Errors.NONE));\n             responseData.put(myTopicPartition2, new OffsetFetchResponse.PartitionData(20,\n                     Optional.empty(), \"\", Errors.NONE));\n+            responseData.put(myTopicPartition3, new OffsetFetchResponse.PartitionData(-1,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7e2a6e820fae2632a98705494cd1a374d46f9f"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ3NjM2OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MTo1MlrOFmuMug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MTo1MlrOFmuMug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzEzMA==", "bodyText": "Could we assert that the map contains the key myTopicPartition3?", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147130", "createdAt": "2020-02-06T23:51:52Z", "author": {"login": "hachikuji"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/KafkaAdminClientTest.java", "diffHunk": "@@ -1502,15 +1503,18 @@ public void testDescribeConsumerGroupOffsets() throws Exception {\n                     Optional.empty(), \"\", Errors.NONE));\n             responseData.put(myTopicPartition2, new OffsetFetchResponse.PartitionData(20,\n                     Optional.empty(), \"\", Errors.NONE));\n+            responseData.put(myTopicPartition3, new OffsetFetchResponse.PartitionData(-1,\n+                    Optional.empty(), \"\", Errors.NONE));\n             env.kafkaClient().prepareResponse(new OffsetFetchResponse(Errors.NONE, responseData));\n \n             final ListConsumerGroupOffsetsResult result = env.adminClient().listConsumerGroupOffsets(\"group-0\");\n             final Map<TopicPartition, OffsetAndMetadata> partitionToOffsetAndMetadata = result.partitionsToOffsetAndMetadata().get();\n \n-            assertEquals(3, partitionToOffsetAndMetadata.size());\n+            assertEquals(4, partitionToOffsetAndMetadata.size());\n             assertEquals(10, partitionToOffsetAndMetadata.get(myTopicPartition0).offset());\n             assertEquals(0, partitionToOffsetAndMetadata.get(myTopicPartition1).offset());\n             assertEquals(20, partitionToOffsetAndMetadata.get(myTopicPartition2).offset());\n+            assertNull(partitionToOffsetAndMetadata.get(myTopicPartition3));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7e2a6e820fae2632a98705494cd1a374d46f9f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ3NzUzOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MjozNVrOFmuNaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1MjozNVrOFmuNaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0NzMwNQ==", "bodyText": "maybe add a comment here that negative offset indicates there is no committed offset for the topic partition? Would be easier for other people to understand the code.", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376147305", "createdAt": "2020-02-06T23:52:35Z", "author": {"login": "apovzner"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/KafkaAdminClient.java", "diffHunk": "@@ -3100,7 +3100,11 @@ void handleResponse(AbstractResponse abstractResponse) {\n                         final Long offset = partitionData.offset;\n                         final String metadata = partitionData.metadata;\n                         final Optional<Integer> leaderEpoch = partitionData.leaderEpoch;\n-                        groupOffsetsListing.put(topicPartition, new OffsetAndMetadata(offset, leaderEpoch, metadata));\n+                        if (offset < 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7e2a6e820fae2632a98705494cd1a374d46f9f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyNjQ4MzY3OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1NjoxNVrOFmuROQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQyMzo1NjoxNVrOFmuROQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjE0ODI4MQ==", "bodyText": "I'd suggest rephrasing this:\n\nIf the group does not have a committed offset for this partition, the corresponding value in the returned map will be null.", "url": "https://github.com/apache/kafka/pull/8057#discussion_r376148281", "createdAt": "2020-02-06T23:56:15Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/admin/ListConsumerGroupOffsetsResult.java", "diffHunk": "@@ -40,6 +40,7 @@\n \n     /**\n      * Return a future which yields a map of topic partitions to OffsetAndMetadata objects.\n+     * If the partition does not have a committed offset, the corresponding value will be null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a7e2a6e820fae2632a98705494cd1a374d46f9f"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4222, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}