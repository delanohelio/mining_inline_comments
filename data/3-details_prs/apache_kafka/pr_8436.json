{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDE5NzQ5", "number": 8436, "title": "KAFKA-6145: KIP-441 avoid unnecessary movement of standbys", "bodyText": "Currently we add warmup and standby tasks, meaning we first assign up to max.warmup.replica warmup tasks, and then attempt to assign num.standby copies of each stateful task. This can cause unnecessary transient standbys to pop up for the lifetime of the warmup task, which are presumably not what the user wanted.\nNote that we don\u2019t want to simply count all warmups against the configured num.standbys, as this may cause the opposite problem where a standby we intend to keep is temporarily unassigned (which may lead to the cleanup thread deleting it). We should only count this as a standby if the destination client already had this task as a standby; otherwise, the standby already exists on some other client, so we should aim to give it back.", "createdAt": "2020-04-07T03:43:51Z", "url": "https://github.com/apache/kafka/pull/8436", "merged": true, "mergeCommit": {"oid": "ea1e634664197c89a0e98e4f5717933ef8499109"}, "closed": true, "closedAt": "2020-04-10T18:42:55Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVx_A0ABqjMyMTYzODg3MTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWVmT0AFqTM5MTU5OTE4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "committedDate": "2020-04-09T01:27:49Z", "message": "rebased"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/24983a84b67af6bd068dbd35fb51dcfc3b14e22b", "committedDate": "2020-04-09T01:27:49Z", "message": "rebased"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf809a7ab057bbf02a0334b3fdf87303986feac0", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/bf809a7ab057bbf02a0334b3fdf87303986feac0", "committedDate": "2020-04-09T01:32:59Z", "message": "fix test broken by rebase"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/4dd64a44221628cecfb56b0e3ed413df03c9b5bb", "committedDate": "2020-04-09T01:34:09Z", "message": "remove import that snuck in again >:("}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDM3NDEx", "url": "https://github.com/apache/kafka/pull/8436#pullrequestreview-390437411", "createdAt": "2020-04-09T01:35:58Z", "commit": {"oid": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozNTo1OFrOGDGoag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozNTo1OFrOGDGoag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwNzU2Mg==", "bodyText": "Since we may now \"use up\" some standby replicas during the warmup replica assignment, we no longer want a constant N clients returned here. The number of remaining standbys to assign is now a parameter of its poll", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405907562", "createdAt": "2020-04-09T01:35:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java", "diffHunk": "@@ -337,14 +342,11 @@ private int tasksPerThread(final UUID client, final List<Map<UUID, List<TaskId>>\n      * Wraps a priority queue of clients and returns the next valid candidate(s) based on the current task assignment\n      */\n     static class ValidClientsByTaskLoadQueue<UUID> {\n-        private final int numClientsPerTask;\n         private final PriorityQueue<UUID> clientsByTaskLoad;\n         private final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments;\n \n-        ValidClientsByTaskLoadQueue(final int numClientsPerTask,\n-                                      final PriorityQueue<UUID> clientsByTaskLoad,\n-                                      final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments) {\n-            this.numClientsPerTask = numClientsPerTask;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a", "committedDate": "2020-04-09T01:37:59Z", "message": "add guard"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDM4MjUx", "url": "https://github.com/apache/kafka/pull/8436#pullrequestreview-390438251", "createdAt": "2020-04-09T01:39:07Z", "commit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozOTowN1rOGDGrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozOTowN1rOGDGrlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwODM3Mw==", "bodyText": "The only way we can ever hit this (task had this standby but remainingStandbys is 0) is if the configured num.standby.replicas is dynamically changed. But I believe we do allow that...right?", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405908373", "createdAt": "2020-04-09T01:39:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovement.java", "diffHunk": "@@ -102,8 +111,16 @@ public int hashCode() {\n                         sourceClientTasksIterator.remove();\n                         statefulActiveTaskAssignment.get(destination).add(task);\n                     } else {\n+                        if (clientStates.get(destination).prevStandbyTasks().contains(task)\n+                                && tasksToRemainingStandbys.get(task) > 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTk5MTgz", "url": "https://github.com/apache/kafka/pull/8436#pullrequestreview-391599183", "createdAt": "2020-04-10T18:42:16Z", "commit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1395, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}