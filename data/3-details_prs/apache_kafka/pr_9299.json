{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4NzQ4MDQy", "number": 9299, "title": "MINOR: Use `Map.forKeyValue` to avoid tuple allocation in Scala 2.13", "bodyText": "foreachKv invokes foreachEntry in Scala 2.13 and falls back to\nforeach in Scala 2.12.\nThis change requires a newer version of scala-collection-compat, so\nupdate it to the latest version (2.2.0).\nFinally, included a minor clean-up in GetOffsetShell to use toArray\nbefore sortBy since it's more efficient.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-17T15:22:00Z", "url": "https://github.com/apache/kafka/pull/9299", "merged": true, "mergeCommit": {"oid": "ac89e49bf217941d436e2160732f8c045d2a4d3b"}, "closed": true, "closedAt": "2020-09-21T23:04:19Z", "author": {"login": "ijuma"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJyvQ_AFqTQ5MDcyMjEzNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdLEJUWABqjM3ODg5Mjg5MzU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzIyMTM1", "url": "https://github.com/apache/kafka/pull/9299#pullrequestreview-490722135", "createdAt": "2020-09-17T15:29:26Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToyOToyNlrOHToPVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNToyOToyNlrOHToPVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0NDI3Ng==", "bodyText": "Unrelated clean-up I noticed.", "url": "https://github.com/apache/kafka/pull/9299#discussion_r490344276", "createdAt": "2020-09-17T15:29:26Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/tools/GetOffsetShell.scala", "diffHunk": "@@ -133,7 +133,7 @@ object GetOffsetShell {\n         }\n     }\n \n-    partitionOffsets.toSeq.sortBy { case (tp, _) => tp.partition }.foreach { case (tp, offset) =>\n+    partitionOffsets.toArray.sortBy { case (tp, _) => tp.partition }.foreach { case (tp, offset) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODQyODEw", "url": "https://github.com/apache/kafka/pull/9299#pullrequestreview-490842810", "createdAt": "2020-09-17T17:44:25Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkxMDE5MTI5", "url": "https://github.com/apache/kafka/pull/9299#pullrequestreview-491019129", "createdAt": "2020-09-17T22:01:17Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjowMToxN1rOHT3B8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QyMjowMToxN1rOHT3B8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDU4NjYwOA==", "bodyText": "The name reads a tad awkwardly. I wonder if foreachKeyValue would be too verbose. Or maybe foreachMapEntry?", "url": "https://github.com/apache/kafka/pull/9299#discussion_r490586608", "createdAt": "2020-09-17T22:01:17Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/utils/Implicits.scala", "diffHunk": "@@ -46,4 +47,21 @@ object Implicits {\n \n   }\n \n+  /**\n+   * Exposes `foreachKv` which maps to `foreachEntry` in Scala 2.13 and `foreach` in Scala 2.12\n+   * (with the help of scala.collection.compat). `foreachEntry` avoids the tuple allocation and\n+   * is more efficient.\n+   *\n+   * This was not named `foreachEntry` to avoid `unused import` warnings in Scala 2.13 (the implicit\n+   * would not be triggered in Scala 2.13 since `Map.foreachEntry` would have precedence).\n+   */\n+  @nowarn(\"cat=unused-imports\")\n+  implicit class MapExtensionMethods[K, V](private val self: scala.collection.Map[K, V]) extends AnyVal {\n+    import scala.collection.compat._\n+    def foreachKv[U](f: (K, V) => U): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyNTc1Mzcz", "url": "https://github.com/apache/kafka/pull/9299#pullrequestreview-492575373", "createdAt": "2020-09-21T13:00:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzowMDoyNVrOHVO4Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxMzowMDoyNVrOHVO4Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjAyNTg2Mw==", "bodyText": "Could we replace such asScala.forKeyValue by java Map.forEach ? We don't need to convert it to scala collection actually.", "url": "https://github.com/apache/kafka/pull/9299#discussion_r492025863", "createdAt": "2020-09-21T13:00:25Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/admin/ZkSecurityMigrator.scala", "diffHunk": "@@ -128,7 +129,7 @@ object ZkSecurityMigrator extends Logging {\n     // Now override any set system properties with explicitly-provided values from the config file\n     // Emit INFO logs due to camel-case property names encouraging mistakes -- help people see mistakes they make\n     info(s\"Found ${zkTlsConfigFileProps.size()} ZooKeeper client configuration properties in file $filename\")\n-    zkTlsConfigFileProps.asScala.foreach { case (key, value) =>\n+    zkTlsConfigFileProps.asScala.forKeyValue { (key, value) =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d1d79bac587c87a6a4fe204e944ce283f5f132be", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/d1d79bac587c87a6a4fe204e944ce283f5f132be", "committedDate": "2020-09-21T14:13:50Z", "message": "MINOR: Use `Map.foreachKv` to avoid tuple allocation in Scala 2.13\n\n`foreachKv` invokes `foreachEntry` in Scala 2.13 and falls back to\n`foreach` in Scala 2.12.\n\nThis change requires a newer version of scala-collection-compat, so\nupdate it to the latest version (2.2.0)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88711e41c0d4597bfa294a58da530b69eb012a97", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/88711e41c0d4597bfa294a58da530b69eb012a97", "committedDate": "2020-09-21T14:13:51Z", "message": "Rename `foreachKv` to `forKeyValue`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "325c20a4794e7150dba1e2a689131dd1fcedd29f", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/325c20a4794e7150dba1e2a689131dd1fcedd29f", "committedDate": "2020-09-21T14:19:39Z", "message": "Update method name in documentation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "325c20a4794e7150dba1e2a689131dd1fcedd29f", "author": {"user": {"login": "ijuma", "name": "Ismael Juma"}}, "url": "https://github.com/apache/kafka/commit/325c20a4794e7150dba1e2a689131dd1fcedd29f", "committedDate": "2020-09-21T14:19:39Z", "message": "Update method name in documentation"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 636, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}