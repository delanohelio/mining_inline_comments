{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NjU0Mjg2", "number": 8399, "title": "KAFKA-3720: Change TimeoutException to BufferExhaustedException when no memory can be allocated for a record within max.block.ms", "bodyText": "Change TimeoutException to BufferExhaustedException when no memory can be allocated for a record within max.block.ms\nRefactored BufferExhaustedException to be a subclass of TimeoutException so existing code that catches TimeoutExceptions keeps working.\nAdded handling to count these Exceptions in the metric \"buffer-exhausted-records\".\nTest Strategy\nThere were existing test cases to check this behavior, which I refactored.\nI then added an extra case to check whether the expected Exception is actually thrown, which was not covered by current tests.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-31T22:53:32Z", "url": "https://github.com/apache/kafka/pull/8399", "merged": true, "mergeCommit": {"oid": "e032a360708cec2284f714e4cae388066064d61c"}, "closed": true, "closedAt": "2020-04-10T23:48:30Z", "author": {"login": "soenkeliebau"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcTK5RZgH2gAyMzk2NjU0Mjg2OmU2ZmQyNWVlOTM3OGNjNDdmMGNkMGU5ZTU2MzNhYmIyZmJiMzNmYzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWZ872AFqTM5MTcwOTk3Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e6fd25ee9378cc47f0cd0e9e5633abb2fbb33fc0", "author": {"user": {"login": "soenkeliebau", "name": "S\u00f6nke Liebau"}}, "url": "https://github.com/apache/kafka/commit/e6fd25ee9378cc47f0cd0e9e5633abb2fbb33fc0", "committedDate": "2020-03-31T22:32:15Z", "message": "KAFKA-3720: Change TimeoutException to BufferExhaustedException and increase buffer-exhausted-records metric when no memory can be allocated for a record withhin max.block.ms."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1Mjg3NTg3", "url": "https://github.com/apache/kafka/pull/8399#pullrequestreview-385287587", "createdAt": "2020-04-01T06:07:45Z", "commit": {"oid": "e6fd25ee9378cc47f0cd0e9e5633abb2fbb33fc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjowNzo0NVrOF-yA5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQwNjowNzo0NVrOF-yA5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTM3NTQ2MQ==", "bodyText": "Could you add comment for this inheritance? this change is for keeping compatibility.", "url": "https://github.com/apache/kafka/pull/8399#discussion_r401375461", "createdAt": "2020-04-01T06:07:45Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/BufferExhaustedException.java", "diffHunk": "@@ -16,13 +16,13 @@\n  */\n package org.apache.kafka.clients.producer;\n \n-import org.apache.kafka.common.KafkaException;\n+import org.apache.kafka.common.errors.TimeoutException;\n \n /**\n  * This exception is thrown if the producer is in non-blocking mode and the rate of data production exceeds the rate at\n  * which data can be sent for long enough for the allocated buffer to be exhausted.\n  */\n-public class BufferExhaustedException extends KafkaException {\n+public class BufferExhaustedException extends TimeoutException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6fd25ee9378cc47f0cd0e9e5633abb2fbb33fc0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "928b45d326e9e5bedc0efed48cb2fa905adef8d8", "author": {"user": {"login": "soenkeliebau", "name": "S\u00f6nke Liebau"}}, "url": "https://github.com/apache/kafka/commit/928b45d326e9e5bedc0efed48cb2fa905adef8d8", "committedDate": "2020-04-01T08:32:28Z", "message": "Added comment on why BufferExhaustedException subclasses TimeoutException."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "714731e8d401ef2f1bc12952a5856a534d3d7089", "author": {"user": {"login": "soenkeliebau", "name": "S\u00f6nke Liebau"}}, "url": "https://github.com/apache/kafka/commit/714731e8d401ef2f1bc12952a5856a534d3d7089", "committedDate": "2020-04-01T11:22:14Z", "message": "Fixed broken test. Had to refactor slightly, as verifySendFailure was used to test two different failure scenarios that both used to throw TimeoutException, but now one of them throws BufferExhaustedException."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2ODY1NDI1", "url": "https://github.com/apache/kafka/pull/8399#pullrequestreview-386865425", "createdAt": "2020-04-03T00:28:13Z", "commit": {"oid": "714731e8d401ef2f1bc12952a5856a534d3d7089"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMDoyODoxM1rOGABFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QwMTo0NDo1NVrOGACVkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY3MDk1NA==", "bodyText": "Could we do this inside RecordAccumulator, which is where the \"buffer-exhausted-records\" sensor is defined?", "url": "https://github.com/apache/kafka/pull/8399#discussion_r402670954", "createdAt": "2020-04-03T00:28:13Z", "author": {"login": "junrao"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -947,6 +947,8 @@ private void throwIfProducerClosed() {\n             // for other exceptions throw directly\n         } catch (ApiException e) {\n             log.debug(\"Exception occurred during message send:\", e);\n+            if (e instanceof BufferExhaustedException)\n+                this.metrics.sensor(\"buffer-exhausted-records\").record();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714731e8d401ef2f1bc12952a5856a534d3d7089"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjY5MTQ3NQ==", "bodyText": "It's fine to keep compatibility for now. However, I do wonder if we should just throw ApiException to the caller since the producer can block for max.block.ms. This needs a KIP discussion.", "url": "https://github.com/apache/kafka/pull/8399#discussion_r402691475", "createdAt": "2020-04-03T01:44:55Z", "author": {"login": "junrao"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/KafkaProducer.java", "diffHunk": "@@ -947,6 +947,8 @@ private void throwIfProducerClosed() {\n             // for other exceptions throw directly\n         } catch (ApiException e) {\n             log.debug(\"Exception occurred during message send:\", e);\n+            if (e instanceof BufferExhaustedException)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714731e8d401ef2f1bc12952a5856a534d3d7089"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615", "author": {"user": {"login": "soenkeliebau", "name": "S\u00f6nke Liebau"}}, "url": "https://github.com/apache/kafka/commit/8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615", "committedDate": "2020-04-03T22:26:41Z", "message": "Addressed comments from Jun: moved metrics recording to BufferPool, where the exception originates.\nReordered imports in PlaintextProducerSendTest."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDIxOTQy", "url": "https://github.com/apache/kafka/pull/8399#pullrequestreview-390421942", "createdAt": "2020-04-09T00:41:46Z", "commit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0MTo0NlrOGDFxOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMDo0MTo0NlrOGDFxOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MzQzMg==", "bodyText": "Since we mark the sensor here, there seems to be no need for the caller to know this is a BufferExhaustedException. Could we just throw TimeoutException and get rid of BufferExhaustedException?", "url": "https://github.com/apache/kafka/pull/8399#discussion_r405893432", "createdAt": "2020-04-09T00:41:46Z", "author": {"login": "junrao"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/internals/BufferPool.java", "diffHunk": "@@ -151,7 +157,8 @@ public ByteBuffer allocate(int size, long maxTimeToBlockMs) throws InterruptedEx\n                             throw new KafkaException(\"Producer closed while allocating memory\");\n \n                         if (waitingTimeElapsed) {\n-                            throw new TimeoutException(\"Failed to allocate memory within the configured max blocking time \" + maxTimeToBlockMs + \" ms.\");\n+                            this.metrics.sensor(\"buffer-exhausted-records\").record();\n+                            throw new BufferExhaustedException(\"Failed to allocate memory within the configured max blocking time \" + maxTimeToBlockMs + \" ms.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjg2OTcy", "url": "https://github.com/apache/kafka/pull/8399#pullrequestreview-391686972", "createdAt": "2020-04-10T22:12:23Z", "commit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjoxMjoyM1rOGEHJvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQyMjoxNzo1MVrOGEHPLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDY3MA==", "bodyText": "This waits on real Timer. So waiting 2 secs in a unit test is too long. Perhaps try 10ms?", "url": "https://github.com/apache/kafka/pull/8399#discussion_r406964670", "createdAt": "2020-04-10T22:12:23Z", "author": {"login": "junrao"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/internals/BufferPoolTest.java", "diffHunk": "@@ -152,8 +152,18 @@ private CountDownLatch asyncAllocate(final BufferPool pool, final int size) {\n     }\n \n     /**\n-     * Test if Timeout exception is thrown when there is not enough memory to allocate and the elapsed time is greater than the max specified block time.\n-     * And verify that the allocation attempt finishes soon after the maxBlockTimeMs.\n+     * Test if BufferExhausted exception is thrown when there is not enough memory to allocate and the elapsed\n+     * time is greater than the max specified block time.\n+     */\n+    @Test(expected = BufferExhaustedException.class)\n+    public void testBufferExhaustedExceptionIsThrown() throws Exception {\n+        BufferPool pool = new BufferPool(2, 1, metrics, time, metricGroup);\n+        pool.allocate(1, maxBlockTimeMs);\n+        pool.allocate(2, maxBlockTimeMs);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NDk2Mg==", "bodyText": "Similar to the above, perhaps reduce maxBlockTimeMs to 10ms?", "url": "https://github.com/apache/kafka/pull/8399#discussion_r406964962", "createdAt": "2020-04-10T22:13:32Z", "author": {"login": "junrao"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/internals/BufferPoolTest.java", "diffHunk": "@@ -171,14 +181,14 @@ public void testBlockTimeout() throws Exception {\n         try {\n             pool.allocate(10, maxBlockTimeMs);\n             fail(\"The buffer allocated more memory than its maximum value 10\");\n-        } catch (TimeoutException e) {\n+        } catch (BufferExhaustedException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjk2NjA2Mw==", "bodyText": "Ok, we can keep this as its.", "url": "https://github.com/apache/kafka/pull/8399#discussion_r406966063", "createdAt": "2020-04-10T22:17:51Z", "author": {"login": "junrao"}, "path": "clients/src/main/java/org/apache/kafka/clients/producer/internals/BufferPool.java", "diffHunk": "@@ -151,7 +157,8 @@ public ByteBuffer allocate(int size, long maxTimeToBlockMs) throws InterruptedEx\n                             throw new KafkaException(\"Producer closed while allocating memory\");\n \n                         if (waitingTimeElapsed) {\n-                            throw new TimeoutException(\"Failed to allocate memory within the configured max blocking time \" + maxTimeToBlockMs + \" ms.\");\n+                            this.metrics.sensor(\"buffer-exhausted-records\").record();\n+                            throw new BufferExhaustedException(\"Failed to allocate memory within the configured max blocking time \" + maxTimeToBlockMs + \" ms.\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTg5MzQzMg=="}, "originalCommit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNzA5OTc2", "url": "https://github.com/apache/kafka/pull/8399#pullrequestreview-391709976", "createdAt": "2020-04-10T23:46:36Z", "commit": {"oid": "8fba83628f3c0f1f094d11ec2f8dfa38d0f7c615"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 24, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}