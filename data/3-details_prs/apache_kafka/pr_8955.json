{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTEzMzQx", "number": 8955, "title": "KAFKA-10020: Create a new version of a scala Serdes without name clash (KIP-616)", "bodyText": "Implementation of a solution for KIP-616.\nWildcard import of the old org.apache.kafka.streams.scala.Serdes leads\nto a name clash because some of implicits has the same names as types\nfrom the scala's std lib. New\norg.apache.kafka.streams.scala.serialization.Serdes is the same as old\nSerdes, but without name clashes. The old one was marked as deprecated.\nAlso, missing serdes for UUID, ByteBuffer and Short types are present in\nthe new Serdes.", "createdAt": "2020-06-30T09:49:53Z", "url": "https://github.com/apache/kafka/pull/8955", "merged": true, "mergeCommit": {"oid": "d0111d3bcdc6f86d9d9daf2f75b89e32e28a7541"}, "closed": true, "closedAt": "2020-09-01T21:48:41Z", "author": {"login": "LMnet"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8Z0BNgBqjM2MzEzNTYzMjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdEuiPfAH2gAyNDQxOTEzMzQxOmM0N2E1ODZmZmE5ZGNmNWJmZTA4NzFiZmVmNjkwZTU1NThjZWQyYzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d4bbe4c293250337caa0dbc65511562e232ee3c", "author": {"user": {"login": "LMnet", "name": "Yuriy Badalyantc"}}, "url": "https://github.com/apache/kafka/commit/1d4bbe4c293250337caa0dbc65511562e232ee3c", "committedDate": "2020-08-20T03:33:45Z", "message": "KAFKA-10020: Create a new version of a scala Serdes without name clash\n\nImplementation of a solution for KIP-616.\n\nWildcard import of the old org.apache.kafka.streams.scala.Serdes leads\nto a name clash because some of implicits has the same names as types\nfrom the scala's std lib. New\norg.apache.kafka.streams.scala.serialization.Serdes is the same as old\nSerdes, but without name clashes. The old one was marked as deprecated.\n\nAlso, missing serdes for UUID, ByteBuffer and Short types are present in\nthe new Serdes."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1d4bbe4c293250337caa0dbc65511562e232ee3c", "author": {"user": {"login": "LMnet", "name": "Yuriy Badalyantc"}}, "url": "https://github.com/apache/kafka/commit/1d4bbe4c293250337caa0dbc65511562e232ee3c", "committedDate": "2020-08-20T03:33:45Z", "message": "KAFKA-10020: Create a new version of a scala Serdes without name clash\n\nImplementation of a solution for KIP-616.\n\nWildcard import of the old org.apache.kafka.streams.scala.Serdes leads\nto a name clash because some of implicits has the same names as types\nfrom the scala's std lib. New\norg.apache.kafka.streams.scala.serialization.Serdes is the same as old\nSerdes, but without name clashes. The old one was marked as deprecated.\n\nAlso, missing serdes for UUID, ByteBuffer and Short types are present in\nthe new Serdes."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyNzczMDE2", "url": "https://github.com/apache/kafka/pull/8955#pullrequestreview-472773016", "createdAt": "2020-08-21T19:35:52Z", "commit": {"oid": "1d4bbe4c293250337caa0dbc65511562e232ee3c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozNTo1MlrOHE5fhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxOTozNTo1MlrOHE5fhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDg5ODMxMQ==", "bodyText": "Can you add the \"since\" parameter?", "url": "https://github.com/apache/kafka/pull/8955#discussion_r474898311", "createdAt": "2020-08-21T19:35:52Z", "author": {"login": "vvcephei"}, "path": "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/Serdes.scala", "diffHunk": "@@ -24,6 +24,7 @@ import java.util\n import org.apache.kafka.common.serialization.{Deserializer, Serde, Serdes => JSerdes, Serializer}\n import org.apache.kafka.streams.kstream.WindowedSerdes\n \n+@deprecated(\"Use org.apache.kafka.streams.scala.serialization.Serdes\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d4bbe4c293250337caa0dbc65511562e232ee3c"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "256cd8e9c03a778e7abeaf0e53f501c508a50a51", "author": {"user": {"login": "LMnet", "name": "Yuriy Badalyantc"}}, "url": "https://github.com/apache/kafka/commit/256cd8e9c03a778e7abeaf0e53f501c508a50a51", "committedDate": "2020-08-25T03:07:57Z", "message": "Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NTY0ODAw", "url": "https://github.com/apache/kafka/pull/8955#pullrequestreview-475564800", "createdAt": "2020-08-26T14:46:05Z", "commit": {"oid": "256cd8e9c03a778e7abeaf0e53f501c508a50a51"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0NjowNVrOHHPqow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNDo0NjowNVrOHHPqow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzM1ODc1NQ==", "bodyText": "Ooh, this one might become a problem.\nSee https://cwiki.apache.org/confluence/display/KAFKA/KIP-659%3A+Improve+TimeWindowedDeserializer+and+TimeWindowedSerde+to+handle+window+size\nThe fact that we're deprecating this constructor isn't what concerns me, it's the reason why: if you were to implicitly use this serde to read records, you'd get incorrect results. This constructor fills in the end of the window as Long.MAX_VALUE, which will be wrong approximately all the time.\nFurther, when we pass serdes like this, they have to be pre-configured. Streams won't call configure. We could plan to require an implicit streamsConfig: Properties argument and then extend KIP-659 to configure this serde using the new window.size.ms config. But that might not be the right window size in practice either, and the fact that it's an implicit makes me concerned that it would be really hard to track down the bug in user code.\nI'm sort of thinking maybe we should just drop this one implicit, since you really need to specify the window size for it to work properly.\nNote, the serializer is safe, it's only the deserializer that we need to worry about. So, my other idea would be for the implicit to pack up a new serde with the new TimeWindowedSerializer(inner) and some kind of new ThrowUnsupportedOperationExceptionDeserializer() that prevents the implicit from being used inappropriately. The exception message could say \"This implicit serde is only for serializing keys. To deserialize as well, you should directly provide a WindowedSerdes.TimeWindowedSerde instance.\"\nWhat do you think?", "url": "https://github.com/apache/kafka/pull/8955#discussion_r477358755", "createdAt": "2020-08-26T14:46:05Z", "author": {"login": "vvcephei"}, "path": "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/serialization/Serdes.scala", "diffHunk": "@@ -0,0 +1,93 @@\n+/*\n+ * Copyright (C) 2018 Lightbend Inc. <https://www.lightbend.com>\n+ * Copyright (C) 2017-2018 Alexis Seigneurin.\n+ *\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.scala.serialization\n+\n+import java.nio.ByteBuffer\n+import java.util\n+import java.util.UUID\n+\n+import org.apache.kafka.common.serialization.{Deserializer, Serde, Serializer, Serdes => JSerdes}\n+import org.apache.kafka.streams.kstream.WindowedSerdes\n+\n+object Serdes extends LowPrioritySerdes {\n+  implicit def stringSerde: Serde[String] = JSerdes.String()\n+  implicit def longSerde: Serde[Long] = JSerdes.Long().asInstanceOf[Serde[Long]]\n+  implicit def javaLongSerde: Serde[java.lang.Long] = JSerdes.Long()\n+  implicit def byteArraySerde: Serde[Array[Byte]] = JSerdes.ByteArray()\n+  implicit def bytesSerde: Serde[org.apache.kafka.common.utils.Bytes] = JSerdes.Bytes()\n+  implicit def byteBufferSerde: Serde[ByteBuffer] = JSerdes.ByteBuffer()\n+  implicit def shortSerde: Serde[Short] = JSerdes.Short().asInstanceOf[Serde[Short]]\n+  implicit def javaShortSerde: Serde[java.lang.Short] = JSerdes.Short()\n+  implicit def floatSerde: Serde[Float] = JSerdes.Float().asInstanceOf[Serde[Float]]\n+  implicit def javaFloatSerde: Serde[java.lang.Float] = JSerdes.Float()\n+  implicit def doubleSerde: Serde[Double] = JSerdes.Double().asInstanceOf[Serde[Double]]\n+  implicit def javaDoubleSerde: Serde[java.lang.Double] = JSerdes.Double()\n+  implicit def intSerde: Serde[Int] = JSerdes.Integer().asInstanceOf[Serde[Int]]\n+  implicit def javaIntegerSerde: Serde[java.lang.Integer] = JSerdes.Integer()\n+  implicit def uuidSerde: Serde[UUID] = JSerdes.UUID()\n+\n+  implicit def timeWindowedSerde[T](implicit tSerde: Serde[T]): WindowedSerdes.TimeWindowedSerde[T] =\n+    new WindowedSerdes.TimeWindowedSerde[T](tSerde)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "256cd8e9c03a778e7abeaf0e53f501c508a50a51"}, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ee45e11b7f5dbe51c2ab6dd1e096d6074567b08", "author": {"user": {"login": "LMnet", "name": "Yuriy Badalyantc"}}, "url": "https://github.com/apache/kafka/commit/5ee45e11b7f5dbe51c2ab6dd1e096d6074567b08", "committedDate": "2020-08-31T04:05:14Z", "message": "Removed WindowedSerdes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTI2MzE4", "url": "https://github.com/apache/kafka/pull/8955#pullrequestreview-480126318", "createdAt": "2020-09-01T21:23:56Z", "commit": {"oid": "5ee45e11b7f5dbe51c2ab6dd1e096d6074567b08"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c75625f86316888d7b31e8ca4badcc2ed561003", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/5c75625f86316888d7b31e8ca4badcc2ed561003", "committedDate": "2020-09-01T21:26:22Z", "message": "Merge remote-tracking branch 'apache/trunk' into pull/8955"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwMTI5NTE1", "url": "https://github.com/apache/kafka/pull/8955#pullrequestreview-480129515", "createdAt": "2020-09-01T21:26:45Z", "commit": {"oid": "5ee45e11b7f5dbe51c2ab6dd1e096d6074567b08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToyNjo0NlrOHLI3TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQyMToyNjo0NlrOHLI3TQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MTQ0MTYxMw==", "bodyText": "Ah, we don't technically need to drop this one, only the timeWindowedSerde. Sorry for the confusion.", "url": "https://github.com/apache/kafka/pull/8955#discussion_r481441613", "createdAt": "2020-09-01T21:26:46Z", "author": {"login": "vvcephei"}, "path": "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/serialization/Serdes.scala", "diffHunk": "@@ -43,12 +43,6 @@ object Serdes extends LowPrioritySerdes {\n   implicit def javaIntegerSerde: Serde[java.lang.Integer] = JSerdes.Integer()\n   implicit def uuidSerde: Serde[UUID] = JSerdes.UUID()\n \n-  implicit def timeWindowedSerde[T](implicit tSerde: Serde[T]): WindowedSerdes.TimeWindowedSerde[T] =\n-    new WindowedSerdes.TimeWindowedSerde[T](tSerde)\n-\n-  implicit def sessionWindowedSerde[T](implicit tSerde: Serde[T]): WindowedSerdes.SessionWindowedSerde[T] =\n-    new WindowedSerdes.SessionWindowedSerde[T](tSerde)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ee45e11b7f5dbe51c2ab6dd1e096d6074567b08"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c47a586ffa9dcf5bfe0871bfef690e5558ced2c3", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/c47a586ffa9dcf5bfe0871bfef690e5558ced2c3", "committedDate": "2020-09-01T21:45:58Z", "message": "add SessionWindowedSerde back"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1412, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}