{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTI0MTk5", "number": 9353, "title": "KAFKA-10521; Skip partition watch registration when `AlterIsr` is expected", "bodyText": "Before AlterIsr with KIP-497, the controller would register watches in Zookeeper for each reassigning partition so that it could be notified immediately when the ISR was expanded and the reassignment could be completed. This notification is not needed with the latest IBP when AlterIsr is enabled because the controller will execute all ISR changes itself.\nThere is one subtle detail. If we are in the middle of a roll in order to bump the IBP, then it is possible for the controller to be on the latest IBP while some of the brokers are still on the older one. In this case, the brokers on the older IBP will not send AlterIsr, but we can still rely on the delayed notification through the isr_notifications path to complete reassignments. This seems like a reasonable tradeoff since it should be a short window before the roll is completed.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-29T21:52:11Z", "url": "https://github.com/apache/kafka/pull/9353", "merged": true, "mergeCommit": {"oid": "8118b6c9f9c3a8cc77dca2f6a516254f03a43d5e"}, "closed": true, "closedAt": "2020-10-14T00:53:48Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNvaUQABqjM4MjE4Mjc4Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSPzk5gH2gAyNDk1MTI0MTk5Ojc3YmRkNzQ0YTczOTI3YWE2NTc0M2RlNzg5Y2EyYmYwYTgyMWEzNTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MTcxMTY1", "url": "https://github.com/apache/kafka/pull/9353#pullrequestreview-499171165", "createdAt": "2020-09-30T07:54:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2OTg5Mzk0", "url": "https://github.com/apache/kafka/pull/9353#pullrequestreview-506989394", "createdAt": "2020-10-13T00:10:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoxMDo0MFrOHgRLXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QwMDoxMDo0MFrOHgRLXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzU5NzkxNw==", "bodyText": "This old logic in processPartitionReassignmentIsrChange() does an info logging before calling onPartitionReassignment(). Should we do the same thing here?", "url": "https://github.com/apache/kafka/pull/9353#discussion_r503597917", "createdAt": "2020-10-13T00:10:40Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1907,6 +1915,20 @@ class KafkaController(val config: KafkaConfig,\n     }\n \n     callback.apply(response)\n+\n+    // After we have returned the result of the `AlterIsr` request, we should check whether\n+    // there are any reassignments which can be completed by a successful ISR expansion.\n+    response.left.foreach { alterIsrResponses =>\n+      alterIsrResponses.forKeyValue { (topicPartition, partitionResponse) =>\n+        if (controllerContext.partitionsBeingReassigned.contains(topicPartition)) {\n+          val isSuccessfulUpdate = partitionResponse.isRight\n+          if (isSuccessfulUpdate) {\n+            val assignment = controllerContext.partitionFullReplicaAssignment(topicPartition)\n+            onPartitionReassignment(topicPartition, assignment)", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e9ce67f00a8409e0af937043ffc93f1c677778b7", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/e9ce67f00a8409e0af937043ffc93f1c677778b7", "committedDate": "2020-10-13T20:09:03Z", "message": "KAFKA-10521; Skip partition watch registration when `AlterIsr` is expected"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b831ccd0fed134872f17dccabb17bcdac3704189", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/b831ccd0fed134872f17dccabb17bcdac3704189", "committedDate": "2020-10-13T20:10:03Z", "message": "Check for reassignment completion when handling ISR change notification"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7", "committedDate": "2020-10-13T20:10:03Z", "message": "Factor out `maybeCompleteReassignment` method to check and complete reassignment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7", "committedDate": "2020-10-13T20:10:03Z", "message": "Factor out `maybeCompleteReassignment` method to check and complete reassignment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3ODA1MDM2", "url": "https://github.com/apache/kafka/pull/9353#pullrequestreview-507805036", "createdAt": "2020-10-13T20:30:09Z", "commit": {"oid": "c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozMDowOVrOHg4W7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QyMDozMDowOVrOHg4W7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIzOTg1Mw==", "bodyText": "typo \"some on\"", "url": "https://github.com/apache/kafka/pull/9353#discussion_r504239853", "createdAt": "2020-10-13T20:30:09Z", "author": {"login": "junrao"}, "path": "core/src/test/scala/integration/kafka/admin/ReassignPartitionsIntegrationTest.scala", "diffHunk": "@@ -60,13 +57,53 @@ class ReassignPartitionsIntegrationTest extends ZooKeeperTestHarness {\n       brokerId -> brokerLevelThrottles.map(throttle => (throttle, -1L)).toMap\n     }.toMap\n \n-  /**\n-   * Test running a quick reassignment.\n-   */\n+\n   @Test\n   def testReassignment(): Unit = {\n     cluster = new ReassignPartitionsTestCluster(zkConnect)\n     cluster.setup()\n+    executeAndVerifyReassignment()\n+  }\n+\n+  @Test\n+  def testReassignmentWithAlterIsrDisabled(): Unit = {\n+    // Test reassignment when the IBP is on an older version which does not use\n+    // the `AlterIsr` API. In this case, the controller will register individual\n+    // watches for each reassigning partition so that the reassignment can be\n+    // completed as soon as the ISR is expanded.\n+    val configOverrides = Map(KafkaConfig.InterBrokerProtocolVersionProp -> KAFKA_2_7_IV1.version)\n+    cluster = new ReassignPartitionsTestCluster(zkConnect, configOverrides = configOverrides)\n+    cluster.setup()\n+    executeAndVerifyReassignment()\n+  }\n+\n+  @Test\n+  def testReassignmentCompletionDuringPartialUpgrade(): Unit = {\n+    // Test reassignment during a partial upgrade when some brokers are relying on\n+    // `AlterIsr` and some on rely on the old notification logic through Zookeeper.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4a37c9fbb2182a6321668ea1aff3b3519fbfbe7"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77bdd744a73927aa65743de789ca2bf0a821a352", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/77bdd744a73927aa65743de789ca2bf0a821a352", "committedDate": "2020-10-13T21:52:47Z", "message": "Fix type in reassignment test case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 715, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}