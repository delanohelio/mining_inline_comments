{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5OTY2OTU4", "number": 9589, "title": "KAFKA-10710 - Mirror Maker 2 - Create herders only if source->target.enabled=true", "bodyText": "By default Mirror Maker 2 creates herders for all the possible combinations even if the \"links\" are not enabled.\nThis is because the beats are emitted from the \"opposite\" herder.\nIf there is a replication flow from A to B and heartbeats are required, 2 herders are needed :\n\nA->B for the MirrorSourceConnector\nB->A for the MirrorHeartbeatConnector\n\nThe MirrorHeartbeatConnector on B->A emits beats into topic heartbeats on cluster A.\nThe MirrorSourceConnector on A->B then replicates whichever topic is configured as well as heartbeats.\nIn cases with multiple clusters (10 and more), this leads to an incredible amount of connections, file descriptors and configuration topics created in every target clusters that are not necessary.\nWith this code change, we add a new top level property \"emit.heartbeats.enabled\" which defaults to \"true\".\nWe skip creating the A->B herder whenever A->B.emit.heartbeats.enabled=false (defaults to true) and A->B.enabled=false (defaults to false).\nExisting users will not see any change and if they depend on these \"opposites\" herders for their monitoring, it will still work.\nNew users with more complex use case can change this property and fine tune their heartbeat generation.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-11-12T15:33:35Z", "url": "https://github.com/apache/kafka/pull/9589", "merged": true, "mergeCommit": {"oid": "a63094930fe38c6d8ef2d6a2c820460c255eb046"}, "closed": true, "closedAt": "2021-01-28T22:52:52Z", "author": {"login": "twobeeb"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdcIVxQABqjM5OTM4MDk4OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd0vygUAFqTU3ODg5NDM1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aef4d16627a27fd27917922f6d68bfac3c9f6461", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/aef4d16627a27fd27917922f6d68bfac3c9f6461", "committedDate": "2020-11-12T12:03:54Z", "message": "MM2 - Create herders only if source->target.enabled=true"}, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "e878c303c57375feec50a6e557955c8d8b36f13b", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/e878c303c57375feec50a6e557955c8d8b36f13b", "committedDate": "2020-11-13T14:56:15Z", "message": "KAFKA-10710 - Mirror Maker 2 - Create herders only when src->tgt.enabled=true"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "e878c303c57375feec50a6e557955c8d8b36f13b", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/e878c303c57375feec50a6e557955c8d8b36f13b", "committedDate": "2020-11-13T14:56:15Z", "message": "KAFKA-10710 - Mirror Maker 2 - Create herders only when src->tgt.enabled=true"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMwMjQzNDMz", "url": "https://github.com/apache/kafka/pull/9589#pullrequestreview-530243433", "createdAt": "2020-11-13T17:05:09Z", "commit": {"oid": "e878c303c57375feec50a6e557955c8d8b36f13b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bf1b344566ec29aad50fbf1d702f284f76631661", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/bf1b344566ec29aad50fbf1d702f284f76631661", "committedDate": "2020-11-13T22:44:27Z", "message": "New test case"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e7f23a3005c7a5364cd02f8012af113b0aa37f5d", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/e7f23a3005c7a5364cd02f8012af113b0aa37f5d", "committedDate": "2020-11-13T23:15:35Z", "message": "Cleaner implementation with single call to originalsStrings()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c35435f1120e3019a770c7807cef3112860786a", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/9c35435f1120e3019a770c7807cef3112860786a", "committedDate": "2020-11-17T10:51:49Z", "message": "Addressing comments + New tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2ODUzOTM5", "url": "https://github.com/apache/kafka/pull/9589#pullrequestreview-576853939", "createdAt": "2021-01-26T23:30:52Z", "commit": {"oid": "9c35435f1120e3019a770c7807cef3112860786a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMzozMDo1M1rOIavW8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMzozMDo1M1rOIavW8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDkwOTgxMQ==", "bodyText": "Question @twobeeb and @ryannedolan about this: is there a use case for which a cluster pair would be disabled yet its heartbeats enabled? I'm wondering because in the case someone disabled the cluster pair but didn't think to disable the heartbeats (since it defaults to true), these herders would still be created, but I'm not sure if it would be useful to have them created since there is no replication going on. Would it make more sense to just not create a herder if the cluster pair was disabled (instead of checking the heartbeats as well)? If not can we make sure to add documentation about this behavior?", "url": "https://github.com/apache/kafka/pull/9589#discussion_r564909811", "createdAt": "2021-01-26T23:30:53Z", "author": {"login": "skaundinya15"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java", "diffHunk": "@@ -89,11 +89,25 @@ public MirrorMakerConfig(Map<?, ?> props) {\n     public List<SourceAndTarget> clusterPairs() {\n         List<SourceAndTarget> pairs = new ArrayList<>();\n         Set<String> clusters = clusters();\n+        Map<String, String> originalStrings = originalsStrings();\n+        boolean globalHeartbeatsEnabled = MirrorConnectorConfig.EMIT_HEARTBEATS_ENABLED_DEFAULT;\n+        if (originalStrings.containsKey(MirrorConnectorConfig.EMIT_HEARTBEATS_ENABLED)) {\n+            globalHeartbeatsEnabled = Boolean.valueOf(originalStrings.get(MirrorConnectorConfig.EMIT_HEARTBEATS_ENABLED));\n+        }\n+\n         for (String source : clusters) {\n             for (String target : clusters) {\n-                SourceAndTarget sourceAndTarget = new SourceAndTarget(source, target);\n                 if (!source.equals(target)) {\n-                    pairs.add(sourceAndTarget);\n+                    String clusterPairConfigPrefix = source + \"->\" + target + \".\";\n+                    boolean clusterPairEnabled = Boolean.valueOf(originalStrings.getOrDefault(clusterPairConfigPrefix + \"enabled\", \"false\"));\n+                    boolean clusterPairHeartbeatsEnabled = globalHeartbeatsEnabled;\n+                    if (originalStrings.containsKey(clusterPairConfigPrefix + MirrorConnectorConfig.EMIT_HEARTBEATS_ENABLED)) {\n+                        clusterPairHeartbeatsEnabled = Boolean.valueOf(originalStrings.get(clusterPairConfigPrefix + MirrorConnectorConfig.EMIT_HEARTBEATS_ENABLED));\n+                    }\n+\n+                    if (clusterPairEnabled || clusterPairHeartbeatsEnabled) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c35435f1120e3019a770c7807cef3112860786a"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc3OTQxNzk0", "url": "https://github.com/apache/kafka/pull/9589#pullrequestreview-577941794", "createdAt": "2021-01-28T02:37:53Z", "commit": {"oid": "9c35435f1120e3019a770c7807cef3112860786a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14868a9cd0ed78c130c5460a1f770d3724d5e0e4", "author": {"user": {"login": "twobeeb", "name": "Julien Chanaud"}}, "url": "https://github.com/apache/kafka/commit/14868a9cd0ed78c130c5460a1f770d3724d5e0e4", "committedDate": "2021-01-28T07:45:26Z", "message": "Update connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java\r\n\r\nBetter comments\n\nCo-authored-by: Sanjana Kaundinya <skaundinya@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4ODk0MzU0", "url": "https://github.com/apache/kafka/pull/9589#pullrequestreview-578894354", "createdAt": "2021-01-29T02:21:59Z", "commit": {"oid": "14868a9cd0ed78c130c5460a1f770d3724d5e0e4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwMjoyMTo1OVrOIcSqJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwMjoyMTo1OVrOIcSqJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjUzNjc0MA==", "bodyText": "@twobeeb Could you migrate these to use the new JUnit 5 assertEquals API? Looks like the build actually failed here - https://github.com/apache/kafka/runs/1782294502", "url": "https://github.com/apache/kafka/pull/9589#discussion_r566536740", "createdAt": "2021-01-29T02:21:59Z", "author": {"login": "aloknnikhil"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "diffHunk": "@@ -256,6 +257,80 @@ public void testWorkerConfigs() {\n             \"secret2\", bProps.get(\"producer.ssl.key.password\"));\n     }\n \n+    @Test\n+    public void testClusterPairsWithDefaultSettings() {\n+        MirrorMakerConfig mirrorConfig = new MirrorMakerConfig(makeProps(\n+                \"clusters\", \"a, b, c\"));\n+        // implicit configuration associated\n+        // a->b.enabled=false\n+        // a->b.emit.heartbeat.enabled=true\n+        // a->c.enabled=false\n+        // a->c.emit.heartbeat.enabled=true\n+        // b->a.enabled=false\n+        // b->a.emit.heartbeat.enabled=true\n+        // b->c.enabled=false\n+        // b->c.emit.heartbeat.enabled=true\n+        // c->a.enabled=false\n+        // c->a.emit.heartbeat.enabled=true\n+        // c->b.enabled=false\n+        // c->b.emit.heartbeat.enabled=true\n+        List<SourceAndTarget> clusterPairs = mirrorConfig.clusterPairs();\n+        assertEquals(\"clusterPairs count should match all combinations count\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14868a9cd0ed78c130c5460a1f770d3724d5e0e4"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2761, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}