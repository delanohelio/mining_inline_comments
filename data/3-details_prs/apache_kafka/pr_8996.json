{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTA1NjY3", "number": 8996, "title": "KAFKA-10249: don't try to read un-checkpointed offsets of in-memory stores", "bodyText": "We have this asymmetry in how the ProcessorStateManager handles in-memory stores: we explicitly skip over them when writing offsets to the checkpoint file, but don't do the same when reading from the checkpoint file to initialize offsets. With eos, this is taken to mean that the state is dirty, and thus we mistakenly mark the entire task as corrupted.", "createdAt": "2020-07-08T21:56:17Z", "url": "https://github.com/apache/kafka/pull/8996", "merged": true, "mergeCommit": {"oid": "888f83c2c3d03084629256f9f993072a22da74c0"}, "closed": true, "closedAt": "2020-07-10T01:49:21Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABczBL8LAH2gAyNDQ2NTA1NjY3OmNiMDdjZmMxZjJmYmU3YTM1ZjNiYTFlODUzMWIxZDk1OTkzMGZmOGI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczVuvogFqTQ0NTk3NDI1MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb07cfc1f2fbe7a35f3ba1e8531b1d959930ff8b", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/cb07cfc1f2fbe7a35f3ba1e8531b1d959930ff8b", "committedDate": "2020-07-08T21:19:10Z", "message": "check forin-memory stores"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/c209e8f9deaab42f1687e5b5ad6f1540322d4517", "committedDate": "2020-07-08T21:49:19Z", "message": "fix and  add tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjE2ODQ5", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445216849", "createdAt": "2020-07-09T00:39:06Z", "commit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDozOTowNlrOGu9xTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDozOTowNlrOGu9xTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTg5OTcyNg==", "bodyText": "Don't we need to call store.setOffset(null) or this case?", "url": "https://github.com/apache/kafka/pull/8996#discussion_r451899726", "createdAt": "2020-07-09T00:39:06Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -224,6 +224,9 @@ void initializeStoreOffsetsFromCheckpoint(final boolean storeDirIsEmpty) {\n             for (final StateStoreMetadata store : stores.values()) {\n                 if (store.changelogPartition == null) {\n                     log.info(\"State store {} is not logged and hence would not be restored\", store.stateStore.name());\n+                } else if (!store.stateStore.persistent()) {\n+                    log.info(\"Initializing to the starting offset for changelog {} of in-memory state store {}\",\n+                             store.changelogPartition, store.stateStore.name());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjE5Mzcz", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445219373", "createdAt": "2020-07-09T00:47:55Z", "commit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0Nzo1NVrOGu96Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0Nzo1NVrOGu96Fw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMTk3NQ==", "bodyText": "Not sure if I understand the test: don't we write a checkpoint in L795 for the persistent store?", "url": "https://github.com/apache/kafka/pull/8996#discussion_r451901975", "createdAt": "2020-07-09T00:47:55Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorStateManagerTest.java", "diffHunk": "@@ -784,7 +784,7 @@ public void close() {\n     }\n \n     @Test\n-    public void shouldThrowTaskCorruptedWithoutCheckpointNonEmptyDir() throws IOException {\n+    public void shouldThrowTaskCorruptedWithoutPersistentStoreCheckpointAndNonEmptyDir() throws IOException {\n         final long checkpointOffset = 10L;\n \n         final Map<TopicPartition, Long> offsets = mkMap(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjE5NTY2", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445219566", "createdAt": "2020-07-09T00:48:35Z", "commit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0ODozNVrOGu96sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMDo0ODozNVrOGu96sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkwMjEzMQ==", "bodyText": "WithWithout ?", "url": "https://github.com/apache/kafka/pull/8996#discussion_r451902131", "createdAt": "2020-07-09T00:48:35Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/ProcessorStateManagerTest.java", "diffHunk": "@@ -813,6 +813,62 @@ public void shouldThrowTaskCorruptedWithoutCheckpointNonEmptyDir() throws IOExce\n         }\n     }\n \n+    @Test\n+    public void shouldNotThrowTaskCorruptedWithWithoutInMemoryStoreCheckpointAndNonEmptyDir() throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c209e8f9deaab42f1687e5b5ad6f1540322d4517"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0556668161951b51a7652d6916c44b92ac8bed66", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/0556668161951b51a7652d6916c44b92ac8bed66", "committedDate": "2020-07-09T02:07:21Z", "message": "fix extra 'With' in test name"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e272df4f05a2e33199a9999dda8546231d171653", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/e272df4f05a2e33199a9999dda8546231d171653", "committedDate": "2020-07-09T02:12:44Z", "message": "always wipe store on dirty close"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MjQ1NjI0", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445245624", "createdAt": "2020-07-09T02:17:58Z", "commit": {"oid": "e272df4f05a2e33199a9999dda8546231d171653"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMjoxNzo1OFrOGu_Weg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMjoxNzo1OFrOGu_Weg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkyNTYyNg==", "bodyText": "Seems weird to skip deleting the dirty state on a dirty close just because we caught an exception while closing the state (probably in most cases a dirty close would mean something would throw, for example calling flush when we've dropped out of the group)", "url": "https://github.com/apache/kafka/pull/8996#discussion_r451925626", "createdAt": "2020-07-09T02:17:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java", "diffHunk": "@@ -104,17 +104,16 @@ static void closeStateManager(final Logger log,\n             if (stateDirectory.lock(id)) {\n                 try {\n                     stateMgr.close();\n-\n+                } catch (final ProcessorStateException e) {\n+                    firstException.compareAndSet(null, e);\n+                } finally {\n                     if (wipeStateStore) {\n                         log.debug(\"Wiping state stores for {} task {}\", taskType, id);\n                         // we can just delete the whole dir of the task, including the state store images and the checkpoint files,\n                         // and then we write an empty checkpoint file indicating that the previous close is graceful and we just\n                         // need to re-bootstrap the restoration from the beginning\n                         Utils.delete(stateMgr.baseDir());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e272df4f05a2e33199a9999dda8546231d171653"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "298cf5dcf8752fb887bc025926dc5ebd3a9f255c", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/298cf5dcf8752fb887bc025926dc5ebd3a9f255c", "committedDate": "2020-07-09T17:29:52Z", "message": "adding StateManagerUtil test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f6db6d6dea1a2164ee59895e46ccc268e6a477d", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/6f6db6d6dea1a2164ee59895e46ccc268e6a477d", "committedDate": "2020-07-09T17:32:31Z", "message": "add PSM test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1ODkzMTAz", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445893103", "createdAt": "2020-07-09T19:07:03Z", "commit": {"oid": "6f6db6d6dea1a2164ee59895e46ccc268e6a477d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOTowNzowNFrOGveLsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxOToxMTo1OFrOGveVJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMDc3MQ==", "bodyText": "I think we should also remove the changelogPartition from loadedCheckpoints, if it exists. Otherwise, we'll spuriously warn in L267.", "url": "https://github.com/apache/kafka/pull/8996#discussion_r452430771", "createdAt": "2020-07-09T19:07:04Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorStateManager.java", "diffHunk": "@@ -222,8 +222,16 @@ void initializeStoreOffsetsFromCheckpoint(final boolean storeDirIsEmpty) {\n             log.trace(\"Loaded offsets from the checkpoint file: {}\", loadedCheckpoints);\n \n             for (final StateStoreMetadata store : stores.values()) {\n+                if (store.corrupted) {\n+                    log.error(\"Tried to initialize store offsets for corrupted store {}\", store);\n+                    throw new IllegalStateException(\"Should not initialize offsets for a corrupted task\");\n+                }\n+\n                 if (store.changelogPartition == null) {\n                     log.info(\"State store {} is not logged and hence would not be restored\", store.stateStore.name());\n+                } else if (!store.stateStore.persistent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6db6d6dea1a2164ee59895e46ccc268e6a477d"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjQzMzE4OA==", "bodyText": "I take it this block can also throw an exception? We shouldn't throw exceptions inside a finally block because it's not defined when the exception will be thrown, or in the case where the first try block threw, which exception is ultimately thrown is also undefined.\nTo make this simpler to grapple with, we added org.apache.kafka.streams.state.internals.ExceptionUtils#executeAll", "url": "https://github.com/apache/kafka/pull/8996#discussion_r452433188", "createdAt": "2020-07-09T19:11:58Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java", "diffHunk": "@@ -104,26 +104,27 @@ static void closeStateManager(final Logger log,\n             if (stateDirectory.lock(id)) {\n                 try {\n                     stateMgr.close();\n-\n-                    if (wipeStateStore) {\n-                        log.debug(\"Wiping state stores for {} task {}\", taskType, id);\n-                        // we can just delete the whole dir of the task, including the state store images and the checkpoint files,\n-                        // and then we write an empty checkpoint file indicating that the previous close is graceful and we just\n-                        // need to re-bootstrap the restoration from the beginning\n-                        Utils.delete(stateMgr.baseDir());\n-                    }\n                 } catch (final ProcessorStateException e) {\n                     firstException.compareAndSet(null, e);\n                 } finally {\n-                    stateDirectory.unlock(id);\n+                    try {\n+                        if (wipeStateStore) {\n+                            log.debug(\"Wiping state stores for {} task {}\", taskType, id);\n+                            // we can just delete the whole dir of the task, including the state store images and the checkpoint files,\n+                            // and then we write an empty checkpoint file indicating that the previous close is graceful and we just\n+                            // need to re-bootstrap the restoration from the beginning\n+                            Utils.delete(stateMgr.baseDir());\n+                        }\n+                    } finally {\n+                        stateDirectory.unlock(id);\n+                    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f6db6d6dea1a2164ee59895e46ccc268e6a477d"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1OTc0MjUx", "url": "https://github.com/apache/kafka/pull/8996#pullrequestreview-445974251", "createdAt": "2020-07-09T21:15:17Z", "commit": {"oid": "6f6db6d6dea1a2164ee59895e46ccc268e6a477d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1214, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}