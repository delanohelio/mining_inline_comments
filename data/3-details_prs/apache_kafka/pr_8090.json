{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczODIwMTc3", "number": 8090, "title": "KAFKA-9537 - Cleanup error messages for abstract transformations", "bodyText": "Added check if the transformation is abstract. If so throw an error message with guidance for the user.\nMore detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-02-11T18:45:41Z", "url": "https://github.com/apache/kafka/pull/8090", "merged": true, "mergeCommit": {"oid": "924cee29542129a8ff4b371e43c24890b6a3a510"}, "closed": true, "closedAt": "2020-05-15T17:14:21Z", "author": {"login": "jcustenborder"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDWO4KgH2gAyMzczODIwMTc3Ojk2OTQ5NjYwMzg1OWI4YTllZDI1ZmY0MTg2ZTJlMTA4ZDMxMDdhYjA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcUCRK-AFqTM4NzMzODM3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "969496603859b8a9ed25ff4186e2e108d3107ab0", "author": {"user": {"login": "jcustenborder", "name": "Jeremy Custenborder"}}, "url": "https://github.com/apache/kafka/commit/969496603859b8a9ed25ff4186e2e108d3107ab0", "committedDate": "2020-02-11T18:42:01Z", "message": "Added check if the transformation is abstract. If so throw an error message with guidance for the user. Fixes KAFKA-9537."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e", "author": {"user": {"login": "jcustenborder", "name": "Jeremy Custenborder"}}, "url": "https://github.com/apache/kafka/commit/a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e", "committedDate": "2020-02-11T18:47:50Z", "message": "Ensure that the child classes are also not abstract."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0MzczMDU4", "url": "https://github.com/apache/kafka/pull/8090#pullrequestreview-364373058", "createdAt": "2020-02-25T19:06:43Z", "commit": {"oid": "a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowNjo0M1rOFuRgeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxOTowNjo0M1rOFuRgeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDA2NTY1Nw==", "bodyText": "What about just making childClasses a Set<String>, since String.join(...) takes an Iterable? Arguably it's not much different, but it's more in line with other uses of String.join.\nOr, maybe better yet, what about just joining with the stream? Something like:\n            String childClassNames = Stream.of(transformationCls.getClasses())\n                                           .filter(transformationCls::isAssignableFrom)\n                                           .filter(c -> !Modifier.isAbstract(c.getModifiers()))\n                                           .filter(c -> Modifier.isPublic(c.getModifiers()))\n                                           .map(Class::getName)\n                                           .collect(Collectors.joining(\", \"));\n            String message = childClassNames.trim().isEmpty() ?\n                             \"Transformation is abstract and cannot be created.\" :\n                             \"Transformation is abstract and cannot be created. Did you mean \" + childClassNames + \"?\";", "url": "https://github.com/apache/kafka/pull/8090#discussion_r384065657", "createdAt": "2020-02-25T19:06:43Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/ConnectorConfig.java", "diffHunk": "@@ -329,11 +331,25 @@ static ConfigDef getConfigDefFromTransformation(String key, Class<?> transformat\n         if (transformationCls == null || !Transformation.class.isAssignableFrom(transformationCls)) {\n             throw new ConfigException(key, String.valueOf(transformationCls), \"Not a Transformation\");\n         }\n+        if (Modifier.isAbstract(transformationCls.getModifiers())) {\n+            String[] childClasses = Stream.of(transformationCls.getClasses())\n+                .filter(transformationCls::isAssignableFrom)\n+                .filter(c -> !Modifier.isAbstract(c.getModifiers()))\n+                .filter(c -> Modifier.isPublic(c.getModifiers()))\n+                .map(Class::getName)\n+                .toArray(String[]::new);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0f3608465cbb1ba2ef0dc5f8d67606f867fda3e"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90cf24e59374d157ca0efd7997f5c1d048a3b9e6", "author": {"user": {"login": "jcustenborder", "name": "Jeremy Custenborder"}}, "url": "https://github.com/apache/kafka/commit/90cf24e59374d157ca0efd7997f5c1d048a3b9e6", "committedDate": "2020-02-25T21:23:36Z", "message": "Refactored per suggestion of Randall to straight to a string."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MzM4Mzcw", "url": "https://github.com/apache/kafka/pull/8090#pullrequestreview-387338370", "createdAt": "2020-04-03T15:03:08Z", "commit": {"oid": "90cf24e59374d157ca0efd7997f5c1d048a3b9e6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1856, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}