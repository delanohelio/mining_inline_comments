{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NTAxMDY1", "number": 9075, "title": "KAFKA-10306: GlobalThread should fail on InvalidOffsetException", "bodyText": "Fix for 2.6 blocker bug.\nCall for review @guozhangwang @vvcephei (\\cc @rhauch)", "createdAt": "2020-07-24T21:37:01Z", "url": "https://github.com/apache/kafka/pull/9075", "merged": true, "mergeCommit": {"oid": "0d47c69a9351ae258ad6165841840a65f0301d86"}, "closed": true, "closedAt": "2020-07-26T18:58:41Z", "author": {"login": "mjsax"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4K_5WgH2gAyNDU2NTAxMDY1OmVkZmMzZjJkYzAxNWI5ZjM3MzZiOWQxM2E3OWM3OWFiYjg2YzRkZmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4NPFagFqTQ1NTI0MDYwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/edfc3f2dc015b9f3736b9d13a79c79abb86c4dff", "committedDate": "2020-07-24T21:34:41Z", "message": "KAFKA-10306: GlobalThread should fail on InvalidOffsetException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjAwNzE5", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455200719", "createdAt": "2020-07-24T21:42:11Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0MjoxMVrOG2-heA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0MjoxMVrOG2-heA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMDY2NA==", "bodyText": "This is the actual bug: we swallow the exception. However, because we don't do any \"seek\", we just hit the same exception in poll() over and over and never recover but loop forever.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460300664", "createdAt": "2020-07-24T21:42:11Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImpl.java", "diffHunk": "@@ -291,27 +290,17 @@ private void restoreState(final StateRestoreCallback stateRestoreCallback,\n             long restoreCount = 0L;\n \n             while (offset < highWatermark) {\n-                try {\n-                    final ConsumerRecords<byte[], byte[]> records = globalConsumer.poll(pollTime);\n-                    final List<ConsumerRecord<byte[], byte[]>> restoreRecords = new ArrayList<>();\n-                    for (final ConsumerRecord<byte[], byte[]> record : records.records(topicPartition)) {\n-                        if (record.key() != null) {\n-                            restoreRecords.add(recordConverter.convert(record));\n-                        }\n+                final ConsumerRecords<byte[], byte[]> records = globalConsumer.poll(pollTime);\n+                final List<ConsumerRecord<byte[], byte[]>> restoreRecords = new ArrayList<>();\n+                for (final ConsumerRecord<byte[], byte[]> record : records.records(topicPartition)) {\n+                    if (record.key() != null) {\n+                        restoreRecords.add(recordConverter.convert(record));\n                     }\n-                    offset = globalConsumer.position(topicPartition);\n-                    stateRestoreAdapter.restoreBatch(restoreRecords);\n-                    stateRestoreListener.onBatchRestored(topicPartition, storeName, offset, restoreRecords.size());\n-                    restoreCount += restoreRecords.size();\n-                } catch (final InvalidOffsetException recoverableException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjAyNTY4", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455202568", "createdAt": "2020-07-24T21:47:06Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0NzowNlrOG2-nlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0NzowNlrOG2-nlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjIyOA==", "bodyText": "We could also not wipe out the store and let the user do it manually. A manual cleanup is actually required nowadays, thus, it's actually a small side \"improvement\".\nNote that we wipe out the whole global task dir here -- in contrast, users could do a manual per-store wipe out... But as we do the same coarse grained wipe out for all tasks and we have already a ticket for \"per store cleanup\" I though it would be ok for now.\nLet me know what you think.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460302228", "createdAt": "2020-07-24T21:47:06Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateMaintainer.java", "diffHunk": "@@ -31,7 +31,7 @@\n \n     void flushState();\n \n-    void close() throws IOException;\n+    void close(final boolean wipeStateStore) throws IOException;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjAyOTk2", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455202996", "createdAt": "2020-07-24T21:48:18Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0ODoxOFrOG2-o8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo0ODoxOFrOG2-o8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjU3Ng==", "bodyText": "We just let the original exception bubble up, to be able to wipe out the store. -- This is also just a side \"improvement\"; we could also just die and let users cleanup the state directory manually. However, it seems better to wipe it out directly.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460302576", "createdAt": "2020-07-24T21:48:18Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -234,24 +234,18 @@ void initialize() {\n         }\n \n         void pollAndUpdate() {\n-            try {\n-                final ConsumerRecords<byte[], byte[]> received = globalConsumer.poll(pollTime);\n-                for (final ConsumerRecord<byte[], byte[]> record : received) {\n-                    stateMaintainer.update(record);\n-                }\n-                final long now = time.milliseconds();\n-                if (now >= lastFlush + flushInterval) {\n-                    stateMaintainer.flushState();\n-                    lastFlush = now;\n-                }\n-            } catch (final InvalidOffsetException recoverableException) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjAzOTI0", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455203924", "createdAt": "2020-07-24T21:50:42Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1MDo0M1rOG2-r7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1MDo0M1rOG2-r7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMzM0Mg==", "bodyText": "This test was broken: it throw the InvalidOffsetException only once and thus the second poll() succeeds -- however, this is not how a real consumer behalves.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460303342", "createdAt": "2020-07-24T21:50:43Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStateManagerImplTest.java", "diffHunk": "@@ -323,21 +322,6 @@ public void shouldRestoreRecordsUpToHighwatermark() {\n         assertEquals(2, stateRestoreCallback.restored.size());\n     }\n \n-    @Test\n-    public void shouldRecoverFromInvalidOffsetExceptionAndRestoreRecords() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjA0MTI0", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455204124", "createdAt": "2020-07-24T21:51:11Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1MToxMVrOG2-sgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMTo1MToxMVrOG2-sgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMzQ5MQ==", "bodyText": "Just a little side cleanup :)", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460303491", "createdAt": "2020-07-24T21:51:11Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/GlobalStreamThreadTest.java", "diffHunk": "@@ -128,10 +130,9 @@ public void shouldThrowStreamsExceptionOnStartupIfThereIsAStreamsException() {\n         assertFalse(globalStreamThread.stillRunning());\n     }\n \n-    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjA3ODQ1", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455207845", "createdAt": "2020-07-24T22:01:11Z", "commit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjowMToxMVrOG2-4mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjowOToyN1rOG2_Bfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNjU4Ng==", "bodyText": "Thanks @mjsax , this sounds perfect to me.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460306586", "createdAt": "2020-07-24T22:01:11Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateMaintainer.java", "diffHunk": "@@ -31,7 +31,7 @@\n \n     void flushState();\n \n-    void close() throws IOException;\n+    void close(final boolean wipeStateStore) throws IOException;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwMjIyOA=="}, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNzQ3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.error(\"Failed to wiping state stores for global task.\", e);\n          \n          \n            \n                            log.error(\"Failed to delete global task directory after detecting corruption.\", e);", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460307479", "createdAt": "2020-07-24T22:04:26Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java", "diffHunk": "@@ -114,8 +118,16 @@ public void flushState() {\n         stateMgr.checkpoint(offsets);\n     }\n \n-    public void close() throws IOException {\n+    public void close(final boolean wipeStateStore) throws IOException {\n         stateMgr.close();\n+        if (wipeStateStore) {\n+            try {\n+                log.error(\"Wiping state stores for global task.\");\n+                Utils.delete(stateMgr.baseDir());\n+            } catch (final IOException e) {\n+                log.error(\"Failed to wiping state stores for global task.\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwNzg5Nw==", "bodyText": "This doesn't seem to be an error. Maybe info would be better? Also, I think \"wipe state stores\" might be confusing for a user looking at the log messages with no context. \"Deleting the task directory\" seems to be a more context-free statement of what we're doing.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            log.error(\"Wiping state stores for global task.\");\n          \n          \n            \n                            log.info(\"Deleting global task directory after detecting corruption.\");", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460307897", "createdAt": "2020-07-24T22:05:51Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java", "diffHunk": "@@ -114,8 +118,16 @@ public void flushState() {\n         stateMgr.checkpoint(offsets);\n     }\n \n-    public void close() throws IOException {\n+    public void close(final boolean wipeStateStore) throws IOException {\n         stateMgr.close();\n+        if (wipeStateStore) {\n+            try {\n+                log.error(\"Wiping state stores for global task.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMwODg2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Updating global state failed. You can restart KafkaStreams to recover from this error.\",\n          \n          \n            \n                            \"Updating global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",\n          \n      \n    \n    \n  \n\nJust a thought to indicate why just restarting would recover anything.", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460308863", "createdAt": "2020-07-24T22:09:27Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -284,10 +278,21 @@ public void run() {\n         }\n         setState(State.RUNNING);\n \n+        boolean wipeStateStore = false;\n         try {\n             while (stillRunning()) {\n                 stateConsumer.pollAndUpdate();\n             }\n+        } catch (final InvalidOffsetException recoverableException) {\n+            wipeStateStore = true;\n+            log.error(\n+                \"Updating global state failed. You can restart KafkaStreams to recover from this error.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edfc3f2dc015b9f3736b9d13a79c79abb86c4dff"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "267b08168823116450e74f350d14ed1c1c4ec941", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/267b08168823116450e74f350d14ed1c1c4ec941", "committedDate": "2020-07-24T22:33:42Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a3eda44881452b019dfa2b4331a4f97deac8e03", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/7a3eda44881452b019dfa2b4331a4f97deac8e03", "committedDate": "2020-07-24T22:33:56Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStateUpdateTask.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "671958997493fe96fa07515ed023fabba3f4ce9c", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/671958997493fe96fa07515ed023fabba3f4ce9c", "committedDate": "2020-07-24T22:34:12Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjE4NTM4", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455218538", "createdAt": "2020-07-24T22:34:38Z", "commit": {"oid": "671958997493fe96fa07515ed023fabba3f4ce9c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNDozOFrOG2_dCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQyMjozNDozOFrOG2_dCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDMxNTkxNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                \"Bootstrapping global state failed. You can restart KafkaStreams to recover from this error.\",\n          \n          \n            \n                                \"Bootstrapping global state failed due to inconsistent local state. Will attempt to clean up the local state. You can restart KafkaStreams to recover from this error.\",", "url": "https://github.com/apache/kafka/pull/9075#discussion_r460315914", "createdAt": "2020-07-24T22:34:38Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java", "diffHunk": "@@ -331,17 +336,36 @@ private StateConsumer initialize() {\n                 logContext,\n                 globalConsumer,\n                 new GlobalStateUpdateTask(\n+                    logContext,\n                     topology,\n                     globalProcessorContext,\n                     stateMgr,\n-                    config.defaultDeserializationExceptionHandler(),\n-                    logContext\n+                    config.defaultDeserializationExceptionHandler()\n                 ),\n                 time,\n                 Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),\n                 config.getLong(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG)\n             );\n-            stateConsumer.initialize();\n+\n+            try {\n+                stateConsumer.initialize();\n+            } catch (final InvalidOffsetException recoverableException) {\n+                log.error(\n+                    \"Bootstrapping global state failed. You can restart KafkaStreams to recover from this error.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "671958997493fe96fa07515ed023fabba3f4ce9c"}, "originalPosition": 96}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a2492620431421f5fdb702dea0046e23e575a30", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/3a2492620431421f5fdb702dea0046e23e575a30", "committedDate": "2020-07-24T22:34:52Z", "message": "Update streams/src/main/java/org/apache/kafka/streams/processor/internals/GlobalStreamThread.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1MjQwNjAx", "url": "https://github.com/apache/kafka/pull/9075#pullrequestreview-455240601", "createdAt": "2020-07-25T00:11:05Z", "commit": {"oid": "3a2492620431421f5fdb702dea0046e23e575a30"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 937, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}