{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MzUxNjk4", "number": 8913, "title": "KAFKA-10191 fix flaky StreamsOptimizedTest", "bodyText": "We have to call KafkaStreams#cleanUp to reset local state before starting application up the second run.\nissue: https://issues.apache.org/jira/browse/KAFKA-10191\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-23T06:35:09Z", "url": "https://github.com/apache/kafka/pull/8913", "merged": true, "mergeCommit": {"oid": "69531611258ca732c93a8cded95c0c776cd28643"}, "closed": true, "closedAt": "2020-07-07T17:48:37Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcuIcg3gFqTQzNTk3MTkwMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcygZUpgH2gAyNDM4MzUxNjk4OjQyNjhhYjI1YjhhNzI0MWIzOTFmOGNiYmVjZmMwMWU3MWEwMTVhNTI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTcxOTAw", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-435971900", "createdAt": "2020-06-23T16:51:55Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo1MTo1NVrOGnyE_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo1Njo0NFrOGnyQIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2ODEyNw==", "bodyText": "Can we drop this comment? While it's definitely true, it's possible this might be caused by other reasons and I wouldn't want someone to jump the gun and reset their application unnecessarily.\nIf someone hits this, they'll probably open a file or send a question to the mailing list and then we can follow up with them to see if this might be the case", "url": "https://github.com/apache/kafka/pull/8913#discussion_r444368127", "createdAt": "2020-06-23T16:51:55Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "diffHunk": "@@ -303,7 +303,8 @@ public void computeTaskLags(final UUID uuid, final Map<TaskId, Long> allTaskEndO\n     public long lagFor(final TaskId task) {\n         final Long totalLag = taskLagTotals.get(task);\n         if (totalLag == null) {\n-            throw new IllegalStateException(\"Tried to lookup lag for unknown task \" + task);\n+            throw new IllegalStateException(\"Tried to lookup lag for unknown task: \" + task\n+                + \" (This exception may be caused by that you don't call KafkaStreams#cleanUp when topology optimization is enabled)\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM3MDk3Ng==", "bodyText": "I think we can just call cleanUp here without passing in a flag. We only need to do it the second time around, but it doesn't hurt to just call it every time and it keeps things simple (the system tests are already complicated enough \ud83d\ude42)", "url": "https://github.com/apache/kafka/pull/8913#discussion_r444370976", "createdAt": "2020-06-23T16:56:44Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/tests/StreamsOptimizedTest.java", "diffHunk": "@@ -130,6 +130,8 @@ public static void main(final String[] args) throws Exception {\n             }\n         });\n \n+        if (streamsProperties.containsKey(\"streams.cleanup\")\n+            && Boolean.parseBoolean(streamsProperties.getProperty(\"streams.cleanup\"))) streams.cleanUp();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1OTkyMjM4", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-435992238", "createdAt": "2020-06-23T17:18:01Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5Mjk5Nzcy", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-439299772", "createdAt": "2020-06-29T16:13:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NzY1NTI3", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-439765527", "createdAt": "2020-06-30T08:01:12Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMToxMlrOGqwigA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQwODowMToxMlrOGqwigA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzQ4ODY0MA==", "bodyText": "@ableegoldman Please take a look :)", "url": "https://github.com/apache/kafka/pull/8913#discussion_r447488640", "createdAt": "2020-06-30T08:01:12Z", "author": {"login": "chia7712"}, "path": "tests/kafkatest/services/streams.py", "diffHunk": "@@ -445,6 +449,40 @@ def __init__(self, test_context, kafka, configs):\n                                                         \"org.apache.kafka.streams.tests.StreamsStandByReplicaTest\",\n                                                         configs)\n \n+class StreamsResetter(StreamsTestBaseService):", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxMjkxMDU0", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-441291054", "createdAt": "2020-07-02T01:26:10Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMToyNjoxMFrOGr6WMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMToyOTo0MFrOGr6ZkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5NzkwNg==", "bodyText": "super nit: we already print Done upon successful reset of the application (at the end of #maybeResetInputAndSeekToEndIntermediateTopicOffsets), can we just reuse that in the system test so we don't have to add any new print statements?", "url": "https://github.com/apache/kafka/pull/8913#discussion_r448697906", "createdAt": "2020-07-02T01:26:10Z", "author": {"login": "ableegoldman"}, "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -168,7 +168,7 @@ public int run(final String[] args,\n             consumerConfig.putAll(properties);\n             exitCode = maybeResetInputAndSeekToEndIntermediateTopicOffsets(consumerConfig, dryRun);\n             maybeDeleteInternalTopics(adminClient, dryRun);\n-\n+            System.out.println(\"succeed to reset stream application: \" + groupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5ODc2OA==", "bodyText": "If you look at the StreamsResetter logs, it prints No input or intermediate topics specified. Skipping seek. I think we need to also supply the input topic here -- it's named \"input.topic\"", "url": "https://github.com/apache/kafka/pull/8913#discussion_r448698768", "createdAt": "2020-07-02T01:29:40Z", "author": {"login": "ableegoldman"}, "path": "tests/kafkatest/services/streams.py", "diffHunk": "@@ -445,6 +449,40 @@ def __init__(self, test_context, kafka, configs):\n                                                         \"org.apache.kafka.streams.tests.StreamsStandByReplicaTest\",\n                                                         configs)\n \n+class StreamsResetter(StreamsTestBaseService):\n+    def __init__(self, test_context, kafka):\n+        super(StreamsResetter, self).__init__(test_context,\n+                                              kafka,\n+                                              \"kafka.tools.StreamsResetter\",\n+                                              \"\")\n+\n+    @property\n+    def expectedMessage(self):\n+        return 'succeed to reset stream application'\n+\n+    def start_cmd(self, node):\n+        args = self.args.copy()\n+        args['bootstrap.servers'] = self.kafka.bootstrap_servers()\n+        args['stdout'] = self.STDOUT_FILE\n+        args['stderr'] = self.STDERR_FILE\n+        args['pidfile'] = self.PID_FILE\n+        args['log4j'] = self.LOG4J_CONFIG_FILE\n+        args['kafka_run_class'] = self.path.script(\"kafka-run-class.sh\", node)\n+\n+        cmd = \"(export KAFKA_LOG4J_OPTS=\\\"-Dlog4j.configuration=file:%(log4j)s\\\"; \" \\\n+              \"%(kafka_run_class)s %(streams_class_name)s \" \\\n+              \"--bootstrap-servers %(bootstrap.servers)s \" \\\n+              \"--force \" \\\n+              \"--application-id StreamsOptimizedTest \" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 48}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjU3MjYy", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-443257262", "createdAt": "2020-07-06T17:01:38Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzE4MjI2", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-443318226", "createdAt": "2020-07-06T18:35:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNToxOVrOGtiwuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNToxOVrOGtiwuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwODYzMg==", "bodyText": "long-term", "url": "https://github.com/apache/kafka/pull/8913#discussion_r450408632", "createdAt": "2020-07-06T18:35:19Z", "author": {"login": "abbccdda"}, "path": "tests/kafkatest/tests/streams/streams_optimized_test.py", "diffHunk": "@@ -90,6 +93,12 @@ def test_upgrade_optimized_topology(self):\n         self.kafka.stop()\n         self.zookeeper.stop()\n \n+    def reset_application(self):\n+        resetter = StreamsResetter(self.test_context, self.kafka)\n+        resetter.start()\n+        # resetter is not long-tern running but it would be better to check the pid by stopping it", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzE4ODM1", "url": "https://github.com/apache/kafka/pull/8913#pullrequestreview-443318835", "createdAt": "2020-07-06T18:36:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNjoxOFrOGtiyiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNjoxOFrOGtiyiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwOTA5Nw==", "bodyText": "Could we make the input topic configurable?", "url": "https://github.com/apache/kafka/pull/8913#discussion_r450409097", "createdAt": "2020-07-06T18:36:18Z", "author": {"login": "abbccdda"}, "path": "tests/kafkatest/services/streams.py", "diffHunk": "@@ -448,6 +452,41 @@ def __init__(self, test_context, kafka, configs):\n                                                         \"org.apache.kafka.streams.tests.StreamsStandByReplicaTest\",\n                                                         configs)\n \n+class StreamsResetter(StreamsTestBaseService):\n+    def __init__(self, test_context, kafka):\n+        super(StreamsResetter, self).__init__(test_context,\n+                                              kafka,\n+                                              \"kafka.tools.StreamsResetter\",\n+                                              \"\")\n+\n+    @property\n+    def expectedMessage(self):\n+        return 'Done.'\n+\n+    def start_cmd(self, node):\n+        args = self.args.copy()\n+        args['bootstrap.servers'] = self.kafka.bootstrap_servers()\n+        args['stdout'] = self.STDOUT_FILE\n+        args['stderr'] = self.STDERR_FILE\n+        args['pidfile'] = self.PID_FILE\n+        args['log4j'] = self.LOG4J_CONFIG_FILE\n+        args['kafka_run_class'] = self.path.script(\"kafka-run-class.sh\", node)\n+\n+        cmd = \"(export KAFKA_LOG4J_OPTS=\\\"-Dlog4j.configuration=file:%(log4j)s\\\"; \" \\\n+              \"%(kafka_run_class)s %(streams_class_name)s \" \\\n+              \"--bootstrap-servers %(bootstrap.servers)s \" \\\n+              \"--force \" \\\n+              \"--application-id StreamsOptimizedTest \" \\\n+              \"--input-topics input.topic \" \\", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "150dee8bed5f2e4cfcb7a9d03d658e2b809348c7", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/150dee8bed5f2e4cfcb7a9d03d658e2b809348c7", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 fix flaky StreamsOptimizedTest - call KafkaStreams#cleanUp before starting the application up the second time"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c72db85b6414f39f9404eeeba9dda47a403d084", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/6c72db85b6414f39f9404eeeba9dda47a403d084", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [1] remove meaningless code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d80f6abfd2583b0031c068dbdc23948373eadaae", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/d80f6abfd2583b0031c068dbdc23948373eadaae", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [2] revert comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbd49e301ac32ec67115aadb6a22e63c7288db28", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/dbd49e301ac32ec67115aadb6a22e63c7288db28", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [3] run the reset tool between stopping the original application and starting the new one"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03d51c6492993c29ad9844b1d811909f51ad0b73", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/03d51c6492993c29ad9844b1d811909f51ad0b73", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [4] remove useless code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f1495f1c3a6f02f8b49b5ee2c9e22eeaff5ff79c", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/f1495f1c3a6f02f8b49b5ee2c9e22eeaff5ff79c", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [5] add more comment"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0731913c3b73ae7bae2ea4bb10f213423038f232", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/0731913c3b73ae7bae2ea4bb10f213423038f232", "committedDate": "2020-07-07T04:17:44Z", "message": "KAFKA-10191 [6] remove print statements and add input.topics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3c1c179b16737eafaaa503ed2baaef635f1f17", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/3d3c1c179b16737eafaaa503ed2baaef635f1f17", "committedDate": "2020-07-07T06:56:12Z", "message": "KAFKA-10191 address comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "3d3c1c179b16737eafaaa503ed2baaef635f1f17", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/3d3c1c179b16737eafaaa503ed2baaef635f1f17", "committedDate": "2020-07-07T06:56:12Z", "message": "KAFKA-10191 address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4268ab25b8a7241b391f8cbbecfc01e71a015a52", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/4268ab25b8a7241b391f8cbbecfc01e71a015a52", "committedDate": "2020-07-07T07:06:55Z", "message": "KAFKA-10191 correct topic"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 698, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}