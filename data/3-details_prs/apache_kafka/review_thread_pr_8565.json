{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NzU0NjQ5", "number": 8565, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozOToxNFrOD4cw8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo0MDozN1rOD4cyZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE4MTI5OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODozOToxNFrOGPSHHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMjo0NzowNFrOGPXnNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3ODU1Ng==", "bodyText": "The producer is create using try-with-resource clause thus, the producer should be flushed on the implicit close() anyway? Thus, I don't think explicit flushing would help?", "url": "https://github.com/apache/kafka/pull/8565#discussion_r418678556", "createdAt": "2020-05-01T18:39:14Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "diffHunk": "@@ -1262,6 +1266,7 @@ public void run() {\n                     }\n                     incrementIteration();\n                 }\n+                producer.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3aaa347de908446d2150606e64753b93be8883"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc2ODY5Mg==", "bodyText": "Makes sense, will fix.", "url": "https://github.com/apache/kafka/pull/8565#discussion_r418768692", "createdAt": "2020-05-01T22:47:04Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "diffHunk": "@@ -1262,6 +1266,7 @@ public void run() {\n                     }\n                     incrementIteration();\n                 }\n+                producer.flush();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3ODU1Ng=="}, "originalCommit": {"oid": "3f3aaa347de908446d2150606e64753b93be8883"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTE4NTAzOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo0MDozN1rOGPSJmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQxODo0MDozN1rOGPSJmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODY3OTE5NA==", "bodyText": "Should this be numIterations - 1", "url": "https://github.com/apache/kafka/pull/8565#discussion_r418679194", "createdAt": "2020-05-01T18:40:37Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/QueryableStateIntegrationTest.java", "diffHunk": "@@ -631,7 +631,11 @@ public void shouldAllowConcurrentAccesses() throws Exception {\n         final String storeName = \"word-count-store\";\n         final String windowStoreName = \"windowed-word-count-store\";\n \n-        final ProducerRunnable producerRunnable = new ProducerRunnable(streamConcurrent, inputValues, numIterations);\n+        // send one round of records first to populate the stores\n+        ProducerRunnable producerRunnable = new ProducerRunnable(streamThree, inputValues, 1);\n+        producerRunnable.run();\n+\n+        producerRunnable = new ProducerRunnable(streamConcurrent, inputValues, numIterations);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3f3aaa347de908446d2150606e64753b93be8883"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2806, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}