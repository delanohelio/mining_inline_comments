{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ1NTA1MTQ4", "number": 9788, "title": "KAFKA-10671: improve the partition.assignment.strategy docs", "bodyText": "Add StickyAssignor and CooperativeStickyAssignor, and also briefly introduce the RangeAssignor and RoundRobinAssignor.\nBefore:\n\nAfter:\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-25T03:27:07Z", "url": "https://github.com/apache/kafka/pull/9788", "merged": true, "mergeCommit": {"oid": "2552aa35cce6447034493a2884fc0a8a50106dd8"}, "closed": true, "closedAt": "2021-01-06T19:41:52Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpfuoJgH2gAyNTQ1NTA1MTQ4OjdhYzY5ZWY5ZWMwMzViMjA3ZjM4OWRiMmI5MTU3ZjE4ZDkyY2Q2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtkxfaAFqTU2Mjk4Njg3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/7ac69ef9ec035b207f389db2b9157f18d92cd690", "committedDate": "2020-12-25T03:26:07Z", "message": "KAFKA-10671: improve the partition.assignment.strategy docs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjczMzQy", "url": "https://github.com/apache/kafka/pull/9788#pullrequestreview-561273342", "createdAt": "2021-01-04T19:13:10Z", "commit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxMzoxMVrOIN9pKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxOToxNzoxMlrOIN9xVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjM2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n          \n          \n            \n                    \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: Guarantees an assignment that is \" +\n          \n          \n            \n            \"maximally balanced while preserving as many existing partition assignments as possible.</li>\" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512362", "createdAt": "2021-01-04T19:13:11Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxMjc3MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: Follows the same StickyAssignor \" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551512771", "createdAt": "2021-01-04T19:14:01Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.StickyAssignor</code>: It guarantees an assignment that is \" +\n+        \"as balanced as possible and preserved as many existing assignment as possible when a reassignment occurs.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.CooperativeStickyAssignor</code>: It follows the same StickyAssignor \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTUxNDQ1NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +\n          \n          \n            \n                    \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: Assigns partitions to consumers in a round-robin fashion.</li>\" +", "url": "https://github.com/apache/kafka/pull/9788#discussion_r551514454", "createdAt": "2021-01-04T19:17:12Z", "author": {"login": "ableegoldman"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -108,17 +108,18 @@\n      */\n     public static final String PARTITION_ASSIGNMENT_STRATEGY_CONFIG = \"partition.assignment.strategy\";\n     private static final String PARTITION_ASSIGNMENT_STRATEGY_DOC = \"A list of class names or class types, \" +\n-            \"ordered by preference, of supported partition assignment \" +\n-            \"strategies that the client will use to distribute partition \" +\n-            \"ownership amongst consumer instances when group management is \" +\n-            \"used.<p>In addition to the default class specified below, \" +\n-            \"you can use the \" +\n-            \"<code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>\" +\n-            \"class for round robin assignments of partitions to consumers. \" +\n-            \"</p><p>Implementing the \" +\n-            \"<code>org.apache.kafka.clients.consumer.ConsumerPartitionAssignor\" +\n-            \"</code> interface allows you to plug in a custom assignment\" +\n-            \"strategy.\";\n+        \"ordered by preference, of supported partition assignment strategies that the client will use to distribute \" +\n+        \"partition ownership amongst consumer instances when group management is used. Available options are:\" +\n+        \"<ul>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RangeAssignor</code>: The default assignor, which works on a per-topic basis.</li>\" +\n+        \"<li><code>org.apache.kafka.clients.consumer.RoundRobinAssignor</code>: It works for round robin assignments of partitions.</li>\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7ac69ef9ec035b207f389db2b9157f18d92cd690"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f44a41900eb526b850283372e1a25d002ba2994", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/7f44a41900eb526b850283372e1a25d002ba2994", "committedDate": "2021-01-05T01:51:51Z", "message": "KAFKA-10671: address reviewer's comment to refactor the doc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTg2ODc3", "url": "https://github.com/apache/kafka/pull/9788#pullrequestreview-562986877", "createdAt": "2021-01-06T19:34:28Z", "commit": {"oid": "7f44a41900eb526b850283372e1a25d002ba2994"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2390, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}