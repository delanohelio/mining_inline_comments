{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0OTY5Mzk5", "number": 8987, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo0MTo1MFrOEMIp0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo0MTo1MFrOEMIp0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTYwMTQ3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo0MTo1MFrOGuEh_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoyMjo0OFrOGuGL2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2MTkxOQ==", "bodyText": "Woah, this is subtle. IIUC, the fix works by asserting that we should only enable bulk loading if the provided context is a ProcessorContextImpl, which is the kind of context that is only provided when adding the store to an active task.\nThis seems correct to me, and although it's very subtle, it also seems ok as a patch for an older codebase that won't need to be maintained much. But maybe we can have a comment, or an internal method for the check, like\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (!bulkLoadSegments.contains(segment) && context instanceof ProcessorContextImpl) {\n          \n          \n            \n                            if (!bulkLoadSegments.contains(segment) && isStoreForActiveTask(context)) {\n          \n      \n    \n    \n  \n\nso that it'll be more obvious what's going on here?", "url": "https://github.com/apache/kafka/pull/8987#discussion_r450961919", "createdAt": "2020-07-07T15:41:50Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore.java", "diffHunk": "@@ -251,7 +252,7 @@ void restoreAllInternal(final Collection<KeyValue<byte[], byte[]>> records) {\n                 // This handles the case that state store is moved to a new client and does not\n                 // have the local RocksDB instance for the segment. In this case, toggleDBForBulkLoading\n                 // will only close the database and open it again with bulk loading enabled.\n-                if (!bulkLoadSegments.contains(segment)) {\n+                if (!bulkLoadSegments.contains(segment) && context instanceof ProcessorContextImpl) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "652250344fcb6d59bd291d4588e41a84d6087470"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4OTAxNg==", "bodyText": "Good point! Will do!", "url": "https://github.com/apache/kafka/pull/8987#discussion_r450989016", "createdAt": "2020-07-07T16:22:48Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore.java", "diffHunk": "@@ -251,7 +252,7 @@ void restoreAllInternal(final Collection<KeyValue<byte[], byte[]>> records) {\n                 // This handles the case that state store is moved to a new client and does not\n                 // have the local RocksDB instance for the segment. In this case, toggleDBForBulkLoading\n                 // will only close the database and open it again with bulk loading enabled.\n-                if (!bulkLoadSegments.contains(segment)) {\n+                if (!bulkLoadSegments.contains(segment) && context instanceof ProcessorContextImpl) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2MTkxOQ=="}, "originalCommit": {"oid": "652250344fcb6d59bd291d4588e41a84d6087470"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2177, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}