{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0OTA3NzE2", "number": 8876, "title": "KAFKA-10167: use the admin client to read end-offset", "bodyText": "Since admin client allows use to use flexible offset-spec, we can always set to use read-uncommitted regardless of the eos config.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-16T00:44:55Z", "url": "https://github.com/apache/kafka/pull/8876", "merged": true, "mergeCommit": {"oid": "d8cc6fe8e36329c647736773d9d66de89c447409"}, "closed": true, "closedAt": "2020-06-18T18:28:50Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcrqU2qgH2gAyNDM0OTA3NzE2OmI5YTI3YThmOGM1NzMzNmNhYzlhMWFkNTUxZjNjMTQyMDQ5YzA3YTI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsVzoUgFqTQzMjkxNDExNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/b9a27a8f8c57336cac9a1ad551f3c142049c07a2", "committedDate": "2020-06-16T00:43:37Z", "message": "check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMDk5NDgy", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-431099482", "createdAt": "2020-06-16T01:33:13Z", "commit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTozMzoxM1rOGkILHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTozNzoyMVrOGkIPUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNTgzNg==", "bodyText": "nit: empty line.", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440535836", "createdAt": "2020-06-16T01:33:13Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -834,6 +855,13 @@ public AlterClientQuotasResult alterClientQuotas(Collection<ClientQuotaAlteratio\n     @Override\n     synchronized public void close(Duration timeout) {}\n \n+    public synchronized void updateBeginningOffsets(Map<TopicPartition, Long> newOffsets) {\n+        beginningOffsets.putAll(newOffsets);\n+    }\n+    public synchronized void updateEndOffsets(final Map<TopicPartition, Long> newOffsets) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg==", "bodyText": "Why do we need this distinction? Seems we set adminClient in any case and it should never be null?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440536142", "createdAt": "2020-06-16T01:34:33Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,15 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjkxNQ==", "bodyText": "Why is adminClient not final any longer? We still pass it into the StreamThread constructor.", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440536915", "createdAt": "2020-06-16T01:37:21Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -273,13 +273,13 @@ public boolean isRunning() {\n     private volatile ThreadMetadata threadMetadata;\n     private StreamThread.StateListener stateListener;\n \n-    private final Admin adminClient;\n     private final ChangelogReader changelogReader;\n \n     // package-private for testing\n     final ConsumerRebalanceListener rebalanceListener;\n     final Consumer<byte[], byte[]> mainConsumer;\n     final Consumer<byte[], byte[]> restoreConsumer;\n+    final Admin adminClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxNDM1ODky", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-431435892", "createdAt": "2020-06-16T12:07:58Z", "commit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjowNzo1OFrOGkYRHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxMjoyNzowNlrOGkY44A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDc5OTUxOA==", "bodyText": "You mean private, right? It is not private anymore.\nInstead of making the adminClient field package private for testing, I would either add a setter setAdmin() to MockClientSupplier or instantiate the admin in a private field of the MockClientSupplier and use the existing getter to set up the admin, or instantiate the admin in a public field of the MockClientSupplier and accessing it directly to set it up (similarly to the producer and consumer).", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440799518", "createdAt": "2020-06-16T12:07:58Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -273,13 +273,13 @@ public boolean isRunning() {\n     private volatile ThreadMetadata threadMetadata;\n     private StreamThread.StateListener stateListener;\n \n-    private final Admin adminClient;\n     private final ChangelogReader changelogReader;\n \n     // package-private for testing\n     final ConsumerRebalanceListener rebalanceListener;\n     final Consumer<byte[], byte[]> mainConsumer;\n     final Consumer<byte[], byte[]> restoreConsumer;\n+    final Admin adminClient;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjkxNQ=="}, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMTAyNg==", "bodyText": "Q: Why do you not pass the admin client in the constructor?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440801026", "createdAt": "2020-06-16T12:10:43Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -369,6 +369,7 @@ public static StreamThread create(final InternalTopologyBuilder builder,\n \n         final Consumer<byte[], byte[]> mainConsumer = clientSupplier.getConsumer(consumerConfigs);\n         changelogReader.setMainConsumer(mainConsumer);\n+        changelogReader.setAdminClient(adminClient);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwMjMyMw==", "bodyText": "I also do not understand the distinction. When would we want to call restoreConsumer.endOffsets(partitions)?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440802323", "createdAt": "2020-06-16T12:13:10Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,15 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwOTMzMQ==", "bodyText": "req: Could you add a test (or adapt an existing one) and verify whether during restore() a call to adminClient.listOffsets() with isolation level READ_UNCOMMITTED is done?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440809331", "createdAt": "2020-06-16T12:26:25Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,15 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNjE0Mg=="}, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDgwOTY5Ng==", "bodyText": "See my comment in StreamThread.", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440809696", "createdAt": "2020-06-16T12:27:06Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamThreadTest.java", "diffHunk": "@@ -1634,6 +1634,7 @@ public void shouldRecoverFromInvalidOffsetExceptionOnRestoreAndFinishRestore() t\n         final StreamThread thread = createStreamThread(\"clientId\", config, false);\n         final MockConsumer<byte[], byte[]> mockConsumer = (MockConsumer<byte[], byte[]>) thread.mainConsumer;\n         final MockConsumer<byte[], byte[]> mockRestoreConsumer = (MockConsumer<byte[], byte[]>) thread.restoreConsumer;\n+        final MockAdminClient mockAdminClient = (MockAdminClient) thread.adminClient;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxMTEwOTI1", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-431110925", "createdAt": "2020-06-16T02:08:48Z", "commit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjowODo0OFrOGkIwPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMjowODo0OFrOGkIwPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDU0NTM0Mw==", "bodyText": "This is not used.", "url": "https://github.com/apache/kafka/pull/8876#discussion_r440545343", "createdAt": "2020-06-16T02:08:48Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -199,12 +204,19 @@ int bufferedLimitIndex() {\n     // to update offset limit for standby tasks;\n     private Consumer<byte[], byte[]> mainConsumer;\n \n+    // the changelog reader needs the admin client to list end offsets\n+    private Admin adminClient;\n+\n     private long lastUpdateOffsetTime;\n \n     void setMainConsumer(final Consumer<byte[], byte[]> consumer) {\n         this.mainConsumer = consumer;\n     }\n \n+    void setAdminClient(final Admin adminClient) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b9a27a8f8c57336cac9a1ad551f3c142049c07a2"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a322765f82e53622835969546d8398de2a13ed2f", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/a322765f82e53622835969546d8398de2a13ed2f", "committedDate": "2020-06-16T17:55:59Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b4589e6502121bc76fc3ac9633974c1763b2da60", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/b4589e6502121bc76fc3ac9633974c1763b2da60", "committedDate": "2020-06-16T23:31:11Z", "message": "continue revamping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1a4bb63145e972509e6e71a81c36cf256f11335", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/a1a4bb63145e972509e6e71a81c36cf256f11335", "committedDate": "2020-06-17T00:47:16Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/7f816995d3a2c4e4eddae6c9db87a80f645389a8", "committedDate": "2020-06-17T01:28:25Z", "message": "github comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDIxNTM2", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432021536", "createdAt": "2020-06-17T02:47:55Z", "commit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo0Nzo1NlrOGkzwPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo0Nzo1NlrOGkzwPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI0OTg1NQ==", "bodyText": "Can this case ever apply? TTD should never restore any task from my understanding.", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441249855", "createdAt": "2020-06-17T02:47:56Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +574,16 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {\n+                final ListOffsetsResult result = adminClient.listOffsets(partitions.stream().collect(\n+                        Collectors.toMap(Function.identity(), tp -> OffsetSpec.latest())));\n+                return result.all().get().entrySet().stream().collect(\n+                        Collectors.toMap(Map.Entry::getKey, entry -> entry.getValue().offset()));\n+            } else {\n+                // we only fall back to use restore consumer if admin client is not set in TTD", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDI1MTY2", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432025166", "createdAt": "2020-06-17T02:59:50Z", "commit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1OTo1MVrOGkz8Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwMjo1OTo1MVrOGkz8Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI1Mjg5NA==", "bodyText": "Should we set isolation.level explicitly? -- In case the default if ever changed, we would have a safe guard?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441252894", "createdAt": "2020-06-17T02:59:51Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +574,16 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            if (adminClient != null) {\n+                final ListOffsetsResult result = adminClient.listOffsets(partitions.stream().collect(\n+                        Collectors.toMap(Function.identity(), tp -> OffsetSpec.latest())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDI1MjAw", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432025200", "createdAt": "2020-06-17T02:59:59Z", "commit": {"oid": "7f816995d3a2c4e4eddae6c9db87a80f645389a8"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fd0ea54d729aa3904c4f96f29653f03601f64e4", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/2fd0ea54d729aa3904c4f96f29653f03601f64e4", "committedDate": "2020-06-17T18:01:27Z", "message": "add the mock-admin client to ttd"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67bf6935761e48590527d0bfaf5488c7e6c43ce9", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/67bf6935761e48590527d0bfaf5488c7e6c43ce9", "committedDate": "2020-06-17T20:33:07Z", "message": "copy past the mock admin client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/6934cd6209d2db22d9ebc4a1fe8e0d296aac0072", "committedDate": "2020-06-17T21:02:31Z", "message": "github comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODQzNjIz", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432843623", "createdAt": "2020-06-17T23:30:23Z", "commit": {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMDoyM1rOGlashQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QyMzozMDoyM1rOGlashQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTg4Nzg3Nw==", "bodyText": "Did you check out the new methods in ClientUtils?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441887877", "createdAt": "2020-06-17T23:30:23Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StoreChangelogReader.java", "diffHunk": "@@ -564,8 +576,13 @@ private void restoreChangelog(final ChangelogMetadata changelogMetadata) {\n             return Collections.emptyMap();\n \n         try {\n-            return restoreConsumer.endOffsets(partitions);\n-        } catch (final TimeoutException e) {\n+            final ListOffsetsResult result = adminClient.listOffsets(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebe86f98c385eacf6112290880b71a8b725f9c96", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/ebe86f98c385eacf6112290880b71a8b725f9c96", "committedDate": "2020-06-18T01:11:49Z", "message": "not use changelog at all"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "097dbcadfc4bffc50c6ff140120454d6c93d268b", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/097dbcadfc4bffc50c6ff140120454d6c93d268b", "committedDate": "2020-06-18T01:16:42Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KXXX-end-offsets-uncommitted"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODgyNzEz", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432882713", "createdAt": "2020-06-18T01:38:01Z", "commit": {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTozODowMVrOGlcr-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMTozODowMVrOGlcr-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkyMDUwNA==", "bodyText": "This is the only thing I am wondering about. Why not just pass null?", "url": "https://github.com/apache/kafka/pull/8876#discussion_r441920504", "createdAt": "2020-06-18T01:38:01Z", "author": {"login": "mjsax"}, "path": "streams/test-utils/src/main/java/org/apache/kafka/streams/TopologyTestDriver.java", "diffHunk": "@@ -478,6 +479,7 @@ private void setupTask(final StreamsConfig streamsConfig,\n                     mockWallClockTime,\n                     streamsConfig,\n                     logContext,\n+                    createAdminClient(processorTopology.storeToChangelogTopic()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6934cd6209d2db22d9ebc4a1fe8e0d296aac0072"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d80cce0917522e766c0cec0ae93acb4ca90ffdf", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/8d80cce0917522e766c0cec0ae93acb4ca90ffdf", "committedDate": "2020-06-18T02:27:19Z", "message": "github comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyOTE0MTE2", "url": "https://github.com/apache/kafka/pull/8876#pullrequestreview-432914116", "createdAt": "2020-06-18T03:23:09Z", "commit": {"oid": "8d80cce0917522e766c0cec0ae93acb4ca90ffdf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 632, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}