{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2MzI3ODI0", "number": 8894, "title": "KAFKA-9509: Increase timeout when consuming records to fix flaky test in MM2", "bodyText": "The test MirrorConnectorsIntegrationTest.testReplication failed too often recently. It failed at least 6 times (I didn't check all failed builds) in today's(6/17) trunk build, and also failed my PR testing! I think it should be fixed soon to save developer's time.\nThe test is to test MM2 replication. And recently, it failed all because the Records were not replicated to primary/backup cluster yet, so that the consumer cannot retrieve the records in time.  In this PR, I add retries to these consumer.poll, to have 3 retries to poll the records. It should make the tests more stable.\nMoreover, the assertion error message didn't display successfully because the consume() will throw exception directly and got displayed. After my change, the assertion error message can be displayed, and will let us know exactly which assertion failed.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-18T08:54:51Z", "url": "https://github.com/apache/kafka/pull/8894", "merged": true, "mergeCommit": {"oid": "3624daef2addf8ab6339e068d4d0f77f08ab6c6e"}, "closed": true, "closedAt": "2020-06-29T20:22:09Z", "author": {"login": "showuon"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsapgWgBqjM0NTcxMjAwMTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwG5VTAFqTQzOTQ2Nzg0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a14b989dd32a9602e0b6703e348f9c413fb0b67", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/8a14b989dd32a9602e0b6703e348f9c413fb0b67", "committedDate": "2020-06-18T09:02:01Z", "message": "KAFKA-9509: add retries for mirrorClient consume records to fix flaky test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "8a14b989dd32a9602e0b6703e348f9c413fb0b67", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/8a14b989dd32a9602e0b6703e348f9c413fb0b67", "committedDate": "2020-06-18T09:02:01Z", "message": "KAFKA-9509: add retries for mirrorClient consume records to fix flaky test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/1559549e83adae1c4f1f5d362b0c176a694fea4b", "committedDate": "2020-06-18T09:36:04Z", "message": "KAFKA-9509: refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNDAwNDg0", "url": "https://github.com/apache/kafka/pull/8894#pullrequestreview-433400484", "createdAt": "2020-06-18T15:28:52Z", "commit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNToyODo1M1rOGl0rjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxNTozMDozMFrOGl0vww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxMzYxNA==", "bodyText": "fwiw this doesn't adhere to kafka style guide (looks like Kafka Streams to me)", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442313614", "createdAt": "2020-06-18T15:28:53Z", "author": {"login": "ryannedolan"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjMxNDY5MQ==", "bodyText": "these are really strange side-effects to have in an assert statement. I see what you are trying to do, but this is probably not the way to do it.", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442314691", "createdAt": "2020-06-18T15:30:30Z", "author": {"login": "ryannedolan"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,\n+                                                final int numRecordsProduces,\n+                                                final int timeout,\n+                                                final ClusterType clusterType,\n+                                                final String... topics) throws InterruptedException {\n+        int retries = 3;\n+        while (retries-- > 0) {\n+            try {\n+                int actualNum = clusterType == ClusterType.PRIMARY ?\n+                        primary.kafka().consume(numRecordsProduces, timeout, topics).count() :", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNTczNjgy", "url": "https://github.com/apache/kafka/pull/8894#pullrequestreview-433573682", "createdAt": "2020-06-18T19:14:00Z", "commit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOToxNDowMFrOGl8voA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxOToxNDowMFrOGl8voA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ0NTcyOA==", "bodyText": "I'd agree with @ryannedolan here. We could use the waitForCondition in TestUtils.java instead to wait for the condition necessary instead. More details on that is here: \n  \n    \n      kafka/clients/src/test/java/org/apache/kafka/test/TestUtils.java\n    \n    \n        Lines 370 to 371\n      in\n      d8cc6fe\n    \n    \n    \n    \n\n        \n          \n           public static void waitForCondition(final TestCondition testCondition, final String conditionDetails) throws InterruptedException { \n        \n\n        \n          \n               waitForCondition(testCondition, DEFAULT_MAX_WAIT_MS, () -> conditionDetails);", "url": "https://github.com/apache/kafka/pull/8894#discussion_r442445728", "createdAt": "2020-06-18T19:14:00Z", "author": {"login": "skaundinya15"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorsIntegrationTest.java", "diffHunk": "@@ -207,23 +212,45 @@ public void close() {\n         backup.stop();\n     }\n \n+    // throw exception after 3 retries, and print expected error messages\n+    private void assertEqualsWithConsumeRetries(final String errorMsg,\n+                                                final int numRecordsProduces,\n+                                                final int timeout,\n+                                                final ClusterType clusterType,\n+                                                final String... topics) throws InterruptedException {\n+        int retries = 3;\n+        while (retries-- > 0) {\n+            try {\n+                int actualNum = clusterType == ClusterType.PRIMARY ?\n+                        primary.kafka().consume(numRecordsProduces, timeout, topics).count() :\n+                        backup.kafka().consume(numRecordsProduces, timeout, topics).count();\n+                if (numRecordsProduces == actualNum)\n+                    return;\n+            } catch (Throwable e) {\n+                log.error(\"Could not find enough records with {} retries left\", retries, e);\n+            }\n+        }\n+        throw new InterruptedException(errorMsg);\n+    }\n+\n     @Test\n     public void testReplication() throws InterruptedException {\n         MirrorClient primaryClient = new MirrorClient(mm2Config.clientConfig(\"primary\"));\n         MirrorClient backupClient = new MirrorClient(mm2Config.clientConfig(\"backup\"));\n \n-        assertEquals(\"Records were not produced to primary cluster.\", NUM_RECORDS_PRODUCED,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1559549e83adae1c4f1f5d362b0c176a694fea4b"}, "originalPosition": 42}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "committedDate": "2020-06-19T02:27:46Z", "message": "KAFKA-9509: address reviewer's comments to increase the timeout value directly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "author": {"user": {"login": "showuon", "name": "Luke Chen"}}, "url": "https://github.com/apache/kafka/commit/56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09", "committedDate": "2020-06-19T02:27:46Z", "message": "KAFKA-9509: address reviewer's comments to increase the timeout value directly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0NDM2MTUy", "url": "https://github.com/apache/kafka/pull/8894#pullrequestreview-434436152", "createdAt": "2020-06-20T15:37:06Z", "commit": {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM2MjIwNjY4", "url": "https://github.com/apache/kafka/pull/8894#pullrequestreview-436220668", "createdAt": "2020-06-23T23:11:32Z", "commit": {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDY3ODQ3", "url": "https://github.com/apache/kafka/pull/8894#pullrequestreview-439467847", "createdAt": "2020-06-29T20:16:30Z", "commit": {"oid": "56a2fefb59b14b2aa4cbd90ff10473fc09a3bf09"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 665, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}