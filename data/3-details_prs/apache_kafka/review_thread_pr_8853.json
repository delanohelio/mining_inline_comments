{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyOTEyOTYz", "number": 8853, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjoxNjo1MlrOEE3hsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NTo1MFrOEGYzCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTM5NTA2OnYy", "diffSide": "LEFT", "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjoxNjo1MlrOGiwo7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjowMToyNVrOGi0qfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMTY3Nw==", "bodyText": "Maybe just deprecate public method instead of removing it", "url": "https://github.com/apache/kafka/pull/8853#discussion_r439101677", "createdAt": "2020-06-11T22:16:52Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -365,51 +366,6 @@ synchronized public DescribeTopicsResult describeTopics(Collection<String> topic\n         return new DescribeTopicsResult(topicDescriptions);\n     }\n \n-    @Override\n-    public DescribeConfigsResult describeConfigs(Collection<ConfigResource> resources) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE2NzYxNA==", "bodyText": "this method has default implementation (see https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/clients/admin/Admin.java#L340) which calls the variety describeConfigs(Collection<ConfigResource>, DescribeConfigsOptions) so it is ok to remove the new implementation.", "url": "https://github.com/apache/kafka/pull/8853#discussion_r439167614", "createdAt": "2020-06-12T02:01:25Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -365,51 +366,6 @@ synchronized public DescribeTopicsResult describeTopics(Collection<String> topic\n         return new DescribeTopicsResult(topicDescriptions);\n     }\n \n-    @Override\n-    public DescribeConfigsResult describeConfigs(Collection<ConfigResource> resources) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMTY3Nw=="}, "originalCommit": null, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNTM5NjEyOnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQyMjoxNzozMVrOGiwptA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQwMjoxMjoyOVrOGi00gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMTg3Ng==", "bodyText": "nit: topicMetadata.fetchesRemainingUntilVisible = Math.max(0, topicMetadata.fetchesRemainingUntilVisible -1);", "url": "https://github.com/apache/kafka/pull/8853#discussion_r439101876", "createdAt": "2020-06-11T22:17:31Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -560,10 +529,14 @@ synchronized private Config getResourceDescription(ConfigResource resource) {\n             }\n             case TOPIC: {\n                 TopicMetadata topicMetadata = allTopics.get(resource.name());\n-                if (topicMetadata == null) {\n-                    throw new UnknownTopicOrPartitionException();\n+                if (topicMetadata != null && !topicMetadata.markedForDeletion) {\n+                    if (topicMetadata.fetchesRemainingUntilVisible > 0) topicMetadata.fetchesRemainingUntilVisible--;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 96}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTE3MDE3Nw==", "bodyText": "done", "url": "https://github.com/apache/kafka/pull/8853#discussion_r439170177", "createdAt": "2020-06-12T02:12:29Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -560,10 +529,14 @@ synchronized private Config getResourceDescription(ConfigResource resource) {\n             }\n             case TOPIC: {\n                 TopicMetadata topicMetadata = allTopics.get(resource.name());\n-                if (topicMetadata == null) {\n-                    throw new UnknownTopicOrPartitionException();\n+                if (topicMetadata != null && !topicMetadata.markedForDeletion) {\n+                    if (topicMetadata.fetchesRemainingUntilVisible > 0) topicMetadata.fetchesRemainingUntilVisible--;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTEwMTg3Ng=="}, "originalCommit": null, "originalPosition": 96}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1MTMzMTk0OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNDo1NTo1MFrOGlJumA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNToxNTowOVrOGlKrhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwOTg4MA==", "bodyText": "nit: I think that we can use toConfigObject(topicMetadata.configs) here.", "url": "https://github.com/apache/kafka/pull/8853#discussion_r441609880", "createdAt": "2020-06-17T14:55:50Z", "author": {"login": "dajac"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -560,10 +529,15 @@ synchronized private Config getResourceDescription(ConfigResource resource) {\n             }\n             case TOPIC: {\n                 TopicMetadata topicMetadata = allTopics.get(resource.name());\n-                if (topicMetadata == null) {\n-                    throw new UnknownTopicOrPartitionException();\n+                if (topicMetadata != null && !topicMetadata.markedForDeletion) {\n+                    if (topicMetadata.fetchesRemainingUntilVisible > 0)\n+                        topicMetadata.fetchesRemainingUntilVisible = Math.max(0, topicMetadata.fetchesRemainingUntilVisible - 1);\n+                    else return new Config(topicMetadata.configs.entrySet().stream()\n+                                .map(entry -> new ConfigEntry(entry.getKey(), entry.getValue()))\n+                                .collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "184f83ab32b4a0caf4d0566d687f81efb611a5f7"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYxNDg3Mw==", "bodyText": "It has been merged when I notice your comment. Let me address it in another PR :)", "url": "https://github.com/apache/kafka/pull/8853#discussion_r441614873", "createdAt": "2020-06-17T15:02:00Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -560,10 +529,15 @@ synchronized private Config getResourceDescription(ConfigResource resource) {\n             }\n             case TOPIC: {\n                 TopicMetadata topicMetadata = allTopics.get(resource.name());\n-                if (topicMetadata == null) {\n-                    throw new UnknownTopicOrPartitionException();\n+                if (topicMetadata != null && !topicMetadata.markedForDeletion) {\n+                    if (topicMetadata.fetchesRemainingUntilVisible > 0)\n+                        topicMetadata.fetchesRemainingUntilVisible = Math.max(0, topicMetadata.fetchesRemainingUntilVisible - 1);\n+                    else return new Config(topicMetadata.configs.entrySet().stream()\n+                                .map(entry -> new ConfigEntry(entry.getKey(), entry.getValue()))\n+                                .collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwOTg4MA=="}, "originalCommit": {"oid": "184f83ab32b4a0caf4d0566d687f81efb611a5f7"}, "originalPosition": 100}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYyNTQ3OQ==", "bodyText": "#8889", "url": "https://github.com/apache/kafka/pull/8853#discussion_r441625479", "createdAt": "2020-06-17T15:15:09Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/clients/admin/MockAdminClient.java", "diffHunk": "@@ -560,10 +529,15 @@ synchronized private Config getResourceDescription(ConfigResource resource) {\n             }\n             case TOPIC: {\n                 TopicMetadata topicMetadata = allTopics.get(resource.name());\n-                if (topicMetadata == null) {\n-                    throw new UnknownTopicOrPartitionException();\n+                if (topicMetadata != null && !topicMetadata.markedForDeletion) {\n+                    if (topicMetadata.fetchesRemainingUntilVisible > 0)\n+                        topicMetadata.fetchesRemainingUntilVisible = Math.max(0, topicMetadata.fetchesRemainingUntilVisible - 1);\n+                    else return new Config(topicMetadata.configs.entrySet().stream()\n+                                .map(entry -> new ConfigEntry(entry.getKey(), entry.getValue()))\n+                                .collect(Collectors.toList()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTYwOTg4MA=="}, "originalCommit": {"oid": "184f83ab32b4a0caf4d0566d687f81efb611a5f7"}, "originalPosition": 100}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2367, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}