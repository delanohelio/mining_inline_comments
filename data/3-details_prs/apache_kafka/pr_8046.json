{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcxNTc2ODk4", "number": 8046, "title": "MINOR: further InternalTopologyBuilder cleanup ", "bodyText": "Followup to KAFKA-7317 and KAFKA-9113, there's some additional cleanup we can do in InternalTopologyBuilder. Mostly refactors the subscription code to make the initialization more explicit and reduce some duplicated code in the update logic.\nAlso some minor cleanup of the build method", "createdAt": "2020-02-05T20:45:15Z", "url": "https://github.com/apache/kafka/pull/8046", "merged": true, "mergeCommit": {"oid": "f698f3f8401845e0f73b104c0f96c54d2851b67a"}, "closed": true, "closedAt": "2020-02-07T03:20:52Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBcTxugH2gAyMzcxNTc2ODk4OjI4YmM1NzU3ODRlZDNiZjJkNDIzNjRkZWUzZWVjZWQwMmFiN2Q5ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcB1lsmgH2gAyMzcxNTc2ODk4OmQ2MWE1ZjczMmYwYjQxMTZiZmQ5MTI3N2VkNjZlZjBhOWRhMTdlZDU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "28bc575784ed3bf2d42364dee3eeced02ab7d985", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/28bc575784ed3bf2d42364dee3eeced02ab7d985", "committedDate": "2020-02-05T20:38:57Z", "message": "dont do no-op subscription update if not using pattern subscription\nmove log to initialization only\ncleanup #build weirdness\nexplicitly initialize subscription"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbd9fcf496284dc74d2a673e759455e9a289cf62", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/fbd9fcf496284dc74d2a673e759455e9a289cf62", "committedDate": "2020-02-05T21:10:04Z", "message": "fix up tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/39a82243d9959bc189405dea8c7d25393fc8fdd9", "committedDate": "2020-02-05T21:11:21Z", "message": "fix type in test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU0NzE5NzQw", "url": "https://github.com/apache/kafka/pull/8046#pullrequestreview-354719740", "createdAt": "2020-02-06T19:39:47Z", "commit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTozOTo0N1rOFmnw3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNlQxOTo0NDoxMlrOFmn5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0MTY5Mw==", "bodyText": "Should we check that topicGroupId is not null?", "url": "https://github.com/apache/kafka/pull/8046#discussion_r376041693", "createdAt": "2020-02-06T19:39:47Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -790,23 +790,18 @@ private int putNodeGroupName(final String nodeName,\n     }\n \n     public synchronized ProcessorTopology build() {\n-        return build((Integer) null);\n+        final Set<String> nodeGroup = new HashSet<>();\n+        for (final Set<String> value : nodeGroups().values()) {\n+            nodeGroup.addAll(value);\n+        }\n+        nodeGroup.removeAll(globalNodeGroups());\n+\n+        initializeSubscription();\n+        return build(nodeGroup);\n     }\n \n     public synchronized ProcessorTopology build(final Integer topicGroupId) {\n-        final Set<String> nodeGroup;\n-        if (topicGroupId != null) {\n-            nodeGroup = nodeGroups().get(topicGroupId);\n-        } else {\n-            // when topicGroupId is null, we build the full topology minus the global groups\n-            final Set<String> globalNodeGroups = globalNodeGroups();\n-            final Collection<Set<String>> values = nodeGroups().values();\n-            nodeGroup = new HashSet<>();\n-            for (final Set<String> value : values) {\n-                nodeGroup.addAll(value);\n-            }\n-            nodeGroup.removeAll(globalNodeGroups);\n-        }\n+        final Set<String> nodeGroup = nodeGroups().get(topicGroupId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Mjg4Mg==", "bodyText": "Hmm.. inside StreamThread do we guarantee we always call initializeSubscription before calling these two functions?", "url": "https://github.com/apache/kafka/pull/8046#discussion_r376042882", "createdAt": "2020-02-06T19:42:15Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -1210,32 +1205,29 @@ private String decorateTopic(final String topic) {\n         return applicationId + \"-\" + topic;\n     }\n \n+    void initializeSubscription() {\n+        if (usesPatternSubscription()) {\n+            log.debug(\"Found pattern subscribed source topics, initializing consumer's subscription pattern.\");\n+            final List<String> allSourceTopics = maybeDecorateInternalSourceTopics(sourceTopicNames);\n+            Collections.sort(allSourceTopics);\n+            sourceTopicPattern = buildPattern(allSourceTopics, nodeToSourcePatterns.values());\n+        } else {\n+            log.debug(\"No source topics using pattern subscription found, initializing consumer's subscription collection.\");\n+            sourceTopicCollection = maybeDecorateInternalSourceTopics(sourceTopicNames);\n+            Collections.sort(sourceTopicCollection);\n+        }\n+    }\n+\n     boolean usesPatternSubscription() {\n         return !nodeToSourcePatterns.isEmpty();\n     }\n \n     synchronized Collection<String> sourceTopicCollection() {\n-        log.debug(\"No source topics using pattern subscription found, using regular subscription for the main consumer.\");\n-\n-        if (topicCollection == null) {\n-            topicCollection = maybeDecorateInternalSourceTopics(sourceTopicNames);\n-            Collections.sort(topicCollection);\n-        }\n-\n-        return topicCollection;\n+        return sourceTopicCollection;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0MzA3Mg==", "bodyText": "If not we should call initializeSubscription inside these two as well.", "url": "https://github.com/apache/kafka/pull/8046#discussion_r376043072", "createdAt": "2020-02-06T19:42:41Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -1210,32 +1205,29 @@ private String decorateTopic(final String topic) {\n         return applicationId + \"-\" + topic;\n     }\n \n+    void initializeSubscription() {\n+        if (usesPatternSubscription()) {\n+            log.debug(\"Found pattern subscribed source topics, initializing consumer's subscription pattern.\");\n+            final List<String> allSourceTopics = maybeDecorateInternalSourceTopics(sourceTopicNames);\n+            Collections.sort(allSourceTopics);\n+            sourceTopicPattern = buildPattern(allSourceTopics, nodeToSourcePatterns.values());\n+        } else {\n+            log.debug(\"No source topics using pattern subscription found, initializing consumer's subscription collection.\");\n+            sourceTopicCollection = maybeDecorateInternalSourceTopics(sourceTopicNames);\n+            Collections.sort(sourceTopicCollection);\n+        }\n+    }\n+\n     boolean usesPatternSubscription() {\n         return !nodeToSourcePatterns.isEmpty();\n     }\n \n     synchronized Collection<String> sourceTopicCollection() {\n-        log.debug(\"No source topics using pattern subscription found, using regular subscription for the main consumer.\");\n-\n-        if (topicCollection == null) {\n-            topicCollection = maybeDecorateInternalSourceTopics(sourceTopicNames);\n-            Collections.sort(topicCollection);\n-        }\n-\n-        return topicCollection;\n+        return sourceTopicCollection;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0Mjg4Mg=="}, "originalCommit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjA0MzgyNw==", "bodyText": "Seems the callers are conditioned on usesPatternSubscription() already?", "url": "https://github.com/apache/kafka/pull/8046#discussion_r376043827", "createdAt": "2020-02-06T19:44:12Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/InternalTopologyBuilder.java", "diffHunk": "@@ -1872,37 +1864,35 @@ private boolean hasSubscriptionUpdates() {\n     }\n \n     synchronized void addSubscribedTopicsFromAssignment(final List<TopicPartition> partitions, final String logPrefix) {\n-        if (sourceTopicPattern() != null) {\n+        if (usesPatternSubscription()) {\n             final Set<String> assignedTopics = new HashSet<>();\n             for (final TopicPartition topicPartition : partitions) {\n                 assignedTopics.add(topicPartition.topic());\n             }\n-\n-            final Collection<String> existingTopics = subscriptionUpdates();\n-            if (!existingTopics.containsAll(assignedTopics)) {\n-                assignedTopics.addAll(existingTopics);\n-                updateSubscribedTopics(assignedTopics, logPrefix);\n-            }\n+            updateSubscribedTopics(assignedTopics, logPrefix);\n         }\n     }\n \n     synchronized void addSubscribedTopicsFromMetadata(final Set<String> topics, final String logPrefix) {\n-        if (sourceTopicPattern() != null) {\n-            final Collection<String> existingTopics = subscriptionUpdates();\n-            if (!existingTopics.equals(topics)) {\n-                topics.addAll(existingTopics);\n-                updateSubscribedTopics(topics, logPrefix);\n-            }\n+        if (usesPatternSubscription()) {\n+            updateSubscribedTopics(topics, logPrefix);\n         }\n     }\n \n     private void updateSubscribedTopics(final Set<String> topics, final String logPrefix) {\n-        log.debug(\"{}found {} topics possibly matching subscription\", logPrefix, topics.size());\n-        subscriptionUpdates.clear();\n-        subscriptionUpdates.addAll(topics);\n+        final Collection<String> existingTopics = subscriptionUpdates();\n+\n+        if  (usesPatternSubscription() && !existingTopics.equals(topics)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a82243d9959bc189405dea8c7d25393fc8fdd9"}, "originalPosition": 131}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a42c57c4de7017b768e95b3ee9f0d605822a0b4", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/4a42c57c4de7017b768e95b3ee9f0d605822a0b4", "committedDate": "2020-02-07T00:32:27Z", "message": "github comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d61a5f732f0b4116bfd91277ed66ef0a9da17ed5", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/d61a5f732f0b4116bfd91277ed66ef0a9da17ed5", "committedDate": "2020-02-07T02:06:09Z", "message": "call build in StreamThreadTest"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1746, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}