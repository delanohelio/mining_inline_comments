{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4MzY0MjIx", "number": 8018, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMzowN1rODbcxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowMDozN1rODcW0bg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTA5NTYxOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/metrics/Sensor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMzowN1rOFi8WpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozMzowN1rOFi8WpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NDc0MA==", "bodyText": "Had to make this public to verify parents in the unit test.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r372184740", "createdAt": "2020-01-29T04:33:07Z", "author": {"login": "cadonna"}, "path": "clients/src/main/java/org/apache/kafka/common/metrics/Sensor.java", "diffHunk": "@@ -135,7 +135,7 @@ public String name() {\n         return this.name;\n     }\n \n-    List<Sensor> parents() {\n+    public List<Sensor> parents() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe38b6f75fe12bed65b7c8efadc7d7bb41523e4a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTEwMjMxOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/SourceNode.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDozOTozNFrOFi8agA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQyMDoxMzozNVrOFn0CMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NTcyOA==", "bodyText": "This is the fix. If the parent class ProcessorNode is initialised before the the actual sensor node an empty sensor without parent is created in ProcessorNode#init() due to backwards compatibility. Thus, on source nodes we need to first call the initialisation of the source node before we call the initialisation in the parent class.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r372185728", "createdAt": "2020-01-29T04:39:34Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/SourceNode.java", "diffHunk": "@@ -66,14 +66,14 @@ V deserializeValue(final String topic, final Headers headers, final byte[] data)\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void init(final InternalProcessorContext context) {\n-        super.init(context);\n-        this.context = context;\n         processAtSourceSensor = ProcessorNodeMetrics.processorAtSourceSensorOrForwardSensor(\n             Thread.currentThread().getName(),\n             context.taskId().toString(),\n             context.currentNode().name(),\n             context.metrics()\n         );\n+        super.init(context);\n+        this.context = context;\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe38b6f75fe12bed65b7c8efadc7d7bb41523e4a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTUwNjQyMA==", "bodyText": "I think it's worth to add a comment about this (even if we have a test now)", "url": "https://github.com/apache/kafka/pull/8018#discussion_r375506420", "createdAt": "2020-02-05T21:03:46Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/SourceNode.java", "diffHunk": "@@ -66,14 +66,14 @@ V deserializeValue(final String topic, final Headers headers, final byte[] data)\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void init(final InternalProcessorContext context) {\n-        super.init(context);\n-        this.context = context;\n         processAtSourceSensor = ProcessorNodeMetrics.processorAtSourceSensorOrForwardSensor(\n             Thread.currentThread().getName(),\n             context.taskId().toString(),\n             context.currentNode().name(),\n             context.metrics()\n         );\n+        super.init(context);\n+        this.context = context;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NTcyOA=="}, "originalCommit": {"oid": "fe38b6f75fe12bed65b7c8efadc7d7bb41523e4a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5MTMxNA==", "bodyText": "Done", "url": "https://github.com/apache/kafka/pull/8018#discussion_r377291314", "createdAt": "2020-02-10T20:13:35Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/SourceNode.java", "diffHunk": "@@ -66,14 +66,14 @@ V deserializeValue(final String topic, final Headers headers, final byte[] data)\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void init(final InternalProcessorContext context) {\n-        super.init(context);\n-        this.context = context;\n         processAtSourceSensor = ProcessorNodeMetrics.processorAtSourceSensorOrForwardSensor(\n             Thread.currentThread().getName(),\n             context.taskId().toString(),\n             context.currentNode().name(),\n             context.metrics()\n         );\n+        super.init(context);\n+        this.context = context;\n ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NTcyOA=="}, "originalCommit": {"oid": "fe38b6f75fe12bed65b7c8efadc7d7bb41523e4a"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwMTEwMzc0OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/SourceNodeTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDo0MDo1M1rOFi8bWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOVQwNDo0MDo1M1rOFi8bWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjE4NTk0Ng==", "bodyText": "This verification tests the correct wiring of the node-level sensor with its task-level sensor.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r372185946", "createdAt": "2020-01-29T04:40:53Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/SourceNodeTest.java", "diffHunk": "@@ -112,6 +115,14 @@ private void shouldExposeProcessMetrics(final String builtInMetricsVersion) {\n             final String parentGroupName = \"stream-task-metrics\";\n             assertTrue(StreamsTestUtils.containsMetric(metrics, \"process-rate\", parentGroupName, metricTags));\n             assertTrue(StreamsTestUtils.containsMetric(metrics, \"process-total\", parentGroupName, metricTags));\n+\n+            final String sensorNamePrefix = \"internal.\" + threadId + \".task.\" + context.taskId().toString();\n+            final Sensor processSensor =\n+                metrics.getSensor(sensorNamePrefix + \".node.\" + context.currentNode().name() + \".s.process\");\n+            assertThat(\n+                processSensor.parents().stream().map(Sensor::name).collect(Collectors.toList()),\n+                contains(sensorNamePrefix + \".s.process\")\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe38b6f75fe12bed65b7c8efadc7d7bb41523e4a"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMDYwNTkwOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQyMTowMDozN1rOFkXzsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNTowN1rOFoWWgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ==", "bodyText": "This accessor enables the unit test to access package-private member parents() of class Sensor without the need to modify Sensor's public API. (kudos to @vvcephei for the idea)", "url": "https://github.com/apache/kafka/pull/8018#discussion_r373683121", "createdAt": "2020-01-31T21:00:37Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjAzNDY3NA==", "bodyText": "o.a.k.common.metrics is considered a semi-public package, do we have to make this package?", "url": "https://github.com/apache/kafka/pull/8018#discussion_r376034674", "createdAt": "2020-02-06T19:25:43Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ=="}, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzI5MjYwOQ==", "bodyText": "Does semi-public package mean, we do not need a KIP to change it? My first push to this PR just made parents() public instead of package-private. Afterwards I realized that Sensor is a public API.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r377292609", "createdAt": "2020-02-10T20:16:24Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ=="}, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzMxNTc2NQ==", "bodyText": "Actually I think I'm wrong: checking https://kafka.apache.org/24/javadoc/index.html here the o.a.k.common.metrics is not listed, only Metric and MetricName under o.a.k.common are listed in javadocs. So this should be fine.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r377315765", "createdAt": "2020-02-10T21:05:31Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ=="}, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzUxOTI5Nw==", "bodyText": "But wouldn't that mean, I could simply make parents() public without the need of the accessor class?", "url": "https://github.com/apache/kafka/pull/8018#discussion_r377519297", "createdAt": "2020-02-11T09:28:31Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ=="}, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzU2OA==", "bodyText": "Yeah I think that's right: Sensor is not a public API either.", "url": "https://github.com/apache/kafka/pull/8018#discussion_r377853568", "createdAt": "2020-02-11T19:35:07Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/common/metrics/SensorAccessor.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements. See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License. You may obtain a copy of the License at\n+ *\n+ *    http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.common.metrics;\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzY4MzEyMQ=="}, "originalCommit": {"oid": "6332a238cc2986ca4aa76d1c50534d41aac3cf50"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4152, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}