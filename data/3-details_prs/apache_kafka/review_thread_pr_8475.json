{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjQ4NjE0", "number": 8475, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDoyNzoyOVrODxYFKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDoyNzoyOVrODxYFKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMTAxMzU1OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDoyNzoyOVrOGE0FAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QyMDozMTo0NVrOGE0ORw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMDczOQ==", "bodyText": "Oh wow, I can't believe I didn't notice this constructor existed \ud83e\udd26\u200d\u2640\ufe0f", "url": "https://github.com/apache/kafka/pull/8475#discussion_r407700739", "createdAt": "2020-04-13T20:27:29Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java", "diffHunk": "@@ -63,24 +63,6 @@\n      * @return the UUID created by repeating the digit n in the UUID format\n      */\n     static UUID uuidForInt(final Integer n) {\n-        if (n < 1 || n > 7) {\n-            throw new IllegalArgumentException(\"Must pass in a single digit number to the uuid builder, got n = \" + n);\n-        }\n-        final StringBuilder builder = new StringBuilder(36);\n-        for (int i = 0; i < 8; ++i) {\n-            builder.append(n);\n-        }\n-        builder.append('-');\n-\n-        for (int i = 0; i < 3; ++i) {\n-            for (int j = 0; j < 4; ++j) {\n-                builder.append(n);\n-            }\n-            builder.append('-');\n-        }\n-        for (int i = 0; i < 12; ++i) {\n-            builder.append(n);\n-        }\n-        return UUID.fromString(builder.toString());\n+        return new UUID(0, n);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44048e28ab74323a12d9444362c1186ff0c20c1b"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMzExMQ==", "bodyText": "I missed it, too during reviews \ud83e\udd37", "url": "https://github.com/apache/kafka/pull/8475#discussion_r407703111", "createdAt": "2020-04-13T20:31:45Z", "author": {"login": "vvcephei"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java", "diffHunk": "@@ -63,24 +63,6 @@\n      * @return the UUID created by repeating the digit n in the UUID format\n      */\n     static UUID uuidForInt(final Integer n) {\n-        if (n < 1 || n > 7) {\n-            throw new IllegalArgumentException(\"Must pass in a single digit number to the uuid builder, got n = \" + n);\n-        }\n-        final StringBuilder builder = new StringBuilder(36);\n-        for (int i = 0; i < 8; ++i) {\n-            builder.append(n);\n-        }\n-        builder.append('-');\n-\n-        for (int i = 0; i < 3; ++i) {\n-            for (int j = 0; j < 4; ++j) {\n-                builder.append(n);\n-            }\n-            builder.append('-');\n-        }\n-        for (int i = 0; i < 12; ++i) {\n-            builder.append(n);\n-        }\n-        return UUID.fromString(builder.toString());\n+        return new UUID(0, n);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzcwMDczOQ=="}, "originalCommit": {"oid": "44048e28ab74323a12d9444362c1186ff0c20c1b"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2977, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}