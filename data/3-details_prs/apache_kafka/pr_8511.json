{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDQ4MDk2", "number": 8511, "title": "KAFKA-9888: Copy connector configs before passing to REST extensions", "bodyText": "Jira\nThe changes made in KIP-454 involved adding a connectorConfig method to the ConnectClusterState interface that REST extensions could use to query the worker for the configuration of a given connector. The implementation for this method returns the Java Map that's stored in the worker's view of the config topic (when running in distributed mode). No copying is performed, which causes mutations of that Map object to persist across invocations of connectorConfig and, even worse, propagate to the worker when, e.g., starting a connector.\nThe changes here just cause the framework to copy that map before sending it to REST extensions, and alter a comment in KafkaConfigBackingStore that addresses the mutability of the snapshots that it provides to warn against changes that may lead to bugs like this one.\nAn existing unit test is modified to ensure that REST extensions receive a copy of the connector config, not the original.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-18T05:31:20Z", "url": "https://github.com/apache/kafka/pull/8511", "merged": true, "mergeCommit": {"oid": "40ee580ed23c876dec45eca4770e834d9aed76da"}, "closed": true, "closedAt": "2020-05-23T22:35:44Z", "author": {"login": "C0urante"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYvAvsgH2gAyNDA1NDQ4MDk2OjFkOGQyOGFkZjg3ZmY4NzdkODNjNDM2MDliYmU2MDliMGZmODFhMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckOpvSgFqTQxNzMxMzMwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/1d8d28adf87ff877d83c43609bbe609b0ff81a19", "committedDate": "2020-04-18T05:26:37Z", "message": "KAFKA-9888: Copy connector configs before passing to REST extensions"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk2NzIxMDg3", "url": "https://github.com/apache/kafka/pull/8511#pullrequestreview-396721087", "createdAt": "2020-04-20T18:49:58Z", "commit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0OTo1OFrOGIiu1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0OTo1OFrOGIiu1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxMDgzOQ==", "bodyText": "Nice test.", "url": "https://github.com/apache/kafka/pull/8511#discussion_r411610839", "createdAt": "2020-04-20T18:49:58Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java", "diffHunk": "@@ -87,7 +88,13 @@ public Void answer() {\n             }\n         });\n         EasyMock.replay(herder);\n-        assertEquals(expectedConfig, connectClusterState.connectorConfig(connName));\n+        Map<String, String> actualConfig = connectClusterState.connectorConfig(connName);\n+        assertEquals(expectedConfig, actualConfig);\n+        assertNotSame(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDE1NDEy", "url": "https://github.com/apache/kafka/pull/8511#pullrequestreview-415015412", "createdAt": "2020-05-20T06:04:27Z", "commit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowNDoyN1rOGX8bqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowODoxN1rOGX8gkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MDU1Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Map<String, String> result = connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n          \n          \n            \n                        return new HashMap<>(result);\n          \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););", "url": "https://github.com/apache/kafka/pull/8511#discussion_r427760552", "createdAt": "2020-05-20T06:04:27Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "diffHunk": "@@ -86,7 +86,8 @@ public ConnectorHealth connectorHealth(String connName) {\n         FutureCallback<Map<String, String>> connectorConfigCallback = new FutureCallback<>();\n         herder.connectorConfig(connName, connectorConfigCallback);\n         try {\n-            return connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            Map<String, String> result = connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            return new HashMap<>(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MTgxMA==", "bodyText": "I like the improved text. But let's skip WARNING since it's not a tag we use in comments (such as TODO: for instance)", "url": "https://github.com/apache/kafka/pull/8511#discussion_r427761810", "createdAt": "2020-05-20T06:08:17Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java", "diffHunk": "@@ -280,8 +280,8 @@ public void stop() {\n     @Override\n     public ClusterConfigState snapshot() {\n         synchronized (lock) {\n-            // Doing a shallow copy of the data is safe here because the complex nested data that is copied should all be\n-            // immutable configs\n+            // WARNING: Only a shallow copy is performed here; in order to avoid accidentally corrupting the worker's view", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10c27d0841b0015f0f8b27c471cceb712654e536", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/10c27d0841b0015f0f8b27c471cceb712654e536", "committedDate": "2020-05-20T17:56:24Z", "message": "Update connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java\n\nCo-authored-by: Konstantine Karantasis <konstantine@confluent.io>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6e8f9ce49859173d5eb047a222483f4d730f08a", "author": {"user": {"login": "C0urante", "name": "Chris Egerton"}}, "url": "https://github.com/apache/kafka/commit/e6e8f9ce49859173d5eb047a222483f4d730f08a", "committedDate": "2020-05-20T17:57:18Z", "message": "KAFKA-9888: Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODY4MTYz", "url": "https://github.com/apache/kafka/pull/8511#pullrequestreview-415868163", "createdAt": "2020-05-21T04:18:33Z", "commit": {"oid": "e6e8f9ce49859173d5eb047a222483f4d730f08a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDoxODozNFrOGYlrdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDoxODozNFrOGYlrdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQzNjM0Mg==", "bodyText": "My bad. My suggestion inserted a typo. At least I saw it before I start the build.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););\n          \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS));", "url": "https://github.com/apache/kafka/pull/8511#discussion_r428436342", "createdAt": "2020-05-21T04:18:34Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "diffHunk": "@@ -86,7 +86,7 @@ public ConnectorHealth connectorHealth(String connName) {\n         FutureCallback<Map<String, String>> connectorConfigCallback = new FutureCallback<>();\n         herder.connectorConfig(connName, connectorConfigCallback);\n         try {\n-            return connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e8f9ce49859173d5eb047a222483f4d730f08a"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "daa86fc1ee40440ee516f6377f536dd4c53f5ad3", "author": {"user": {"login": "kkonstantine", "name": "Konstantine Karantasis"}}, "url": "https://github.com/apache/kafka/commit/daa86fc1ee40440ee516f6377f536dd4c53f5ad3", "committedDate": "2020-05-21T04:18:45Z", "message": "Update connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzEzMzA5", "url": "https://github.com/apache/kafka/pull/8511#pullrequestreview-417313309", "createdAt": "2020-05-23T22:31:37Z", "commit": {"oid": "daa86fc1ee40440ee516f6377f536dd4c53f5ad3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1568, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}