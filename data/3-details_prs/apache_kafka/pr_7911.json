{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNjAxNjEy", "number": 7911, "title": "KAFKA-9386; Apply delete ACL filters to resources from filter even if not in cache", "bodyText": "With the old SimpleAclAuthorizer, we were handling delete filters that matched a single resource by looking up that resource directly, even if it wasn't in the cache. AclAuthorizerTest.testHighConcurrencyDeletionOfResourceAcls relies on this behaviour and fails intermittently when the cache is not up-to-date. This PR includes the resource from non-matching filters even if it is not in the cache to retain the old behaviour.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-01-08T18:45:27Z", "url": "https://github.com/apache/kafka/pull/7911", "merged": true, "mergeCommit": {"oid": "655843c5d66a514c84f4ca7f027b81f6bcb45c92"}, "closed": true, "closedAt": "2020-01-09T14:48:03Z", "author": {"login": "rajinisivaram"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4Y9aGgH2gAyMzYwNjAxNjEyOmFjODMyODhhYWExZGJkMTY0YjA4OGNhMTQwZDEyYjIzZDQ2MDhiMTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4p6cfAFqTM0MDUxNTY4NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/ac83288aaa1dbd164b088ca140d12b23d4608b19", "committedDate": "2020-01-08T17:39:29Z", "message": "KAFKA-9386; Apply delete ACL filters to resources from filter even if not in cache"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDM3Njc4", "url": "https://github.com/apache/kafka/pull/7911#pullrequestreview-340437678", "createdAt": "2020-01-09T10:54:18Z", "commit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNTE1Njg1", "url": "https://github.com/apache/kafka/pull/7911#pullrequestreview-340515685", "createdAt": "2020-01-09T13:24:38Z", "commit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzoyNDozOFrOFb1rOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzoyNDozOFrOFb1rOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDczNTI5MA==", "bodyText": "Another thing to consider for a separate PR: this method seems highly inefficient. We take all the keys in the cache and do a bunch of transformations. It seems like we should avoid that, no? Intuitively, we would do a filter operation first and then transform only the cache items that match.", "url": "https://github.com/apache/kafka/pull/7911#discussion_r364735290", "createdAt": "2020-01-09T13:24:38Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -188,7 +188,9 @@ class AclAuthorizer extends Authorizer with Logging {\n     val deleteExceptions = new mutable.HashMap[AclBinding, ApiException]()\n     val filters = aclBindingFilters.asScala.zipWithIndex\n     inWriteLock(lock) {\n-      val resourcesToUpdate = aclCache.keys.map { resource =>\n+      // Find all potentially matching resource patterns from the provided filters and ACL cache and apply the filters\n+      val resources = aclCache.keys ++ filters.map(_._1.patternFilter).filter(_.matchesAtMostOne).flatMap(filterToResources)\n+      val resourcesToUpdate = resources.map { resource =>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac83288aaa1dbd164b088ca140d12b23d4608b19"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2208, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}