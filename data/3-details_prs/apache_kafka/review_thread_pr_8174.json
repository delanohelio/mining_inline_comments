{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNDg2MjQ1", "number": 8174, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MDo1MVrODjRPvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMjo1M1rODkZHug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA5MzA4OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MDo1MVrOFu_DOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMzoyNzo1N1rOFvAINA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMTgzMw==", "bodyText": "Could we add some async send calls before the flush, and check whether they are delivered afterwards?", "url": "https://github.com/apache/kafka/pull/8174#discussion_r384811833", "createdAt": "2020-02-26T22:40:51Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "diffHunk": "@@ -601,6 +601,15 @@ public void closeShouldBeIdempotent() {\n         producer.close();\n     }\n \n+    @Test\n+    public void testFlush() {\n+        Properties producerProps = new Properties();\n+        producerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9000\");\n+        try (KafkaProducer producer = new KafkaProducer<>(producerProps, new ByteArraySerializer(), new ByteArraySerializer())) {\n+            producer.flush();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76cf313cce3abe7bed30f7cebfc31a077df8df0a"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgyOTQ5Mg==", "bodyText": "The functionality of flush() is tested in the api integration test https://github.com/apache/kafka/blob/trunk/core/src/test/scala/integration/kafka/api/BaseProducerSendTest.scala#L423-L438 but I can test it in here as well", "url": "https://github.com/apache/kafka/pull/8174#discussion_r384829492", "createdAt": "2020-02-26T23:27:57Z", "author": {"login": "jeffkbkim"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "diffHunk": "@@ -601,6 +601,15 @@ public void closeShouldBeIdempotent() {\n         producer.close();\n     }\n \n+    @Test\n+    public void testFlush() {\n+        Properties producerProps = new Properties();\n+        producerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9000\");\n+        try (KafkaProducer producer = new KafkaProducer<>(producerProps, new ByteArraySerializer(), new ByteArraySerializer())) {\n+            producer.flush();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMTgzMw=="}, "originalCommit": {"oid": "76cf313cce3abe7bed30f7cebfc31a077df8df0a"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4MzA5NDkyOnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MTozMVrOFu_EWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQyMjo0MTozMVrOFu_EWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDgxMjEyMQ==", "bodyText": "Why do we need to set MAX_BLOCK_MS_CONFIG?", "url": "https://github.com/apache/kafka/pull/8174#discussion_r384812121", "createdAt": "2020-02-26T22:41:31Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "diffHunk": "@@ -699,6 +708,32 @@ public void testInitTransactionWhileThrottled() {\n         }\n     }\n \n+    @Test\n+    public void testAbortTransaction() {\n+        Map<String, Object> configs = new HashMap<>();\n+        configs.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, \"some.id\");\n+        configs.put(ProducerConfig.MAX_BLOCK_MS_CONFIG, 10000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76cf313cce3abe7bed30f7cebfc31a077df8df0a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDg2OTA2OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMjo1M1rOFwsIPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxOToyMjo1M1rOFwsIPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5ODk3Mg==", "bodyText": "nit: make the test name more descriptive, like testFlushCompleteSendOfInflightRecords", "url": "https://github.com/apache/kafka/pull/8174#discussion_r386598972", "createdAt": "2020-03-02T19:22:53Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/producer/KafkaProducerTest.java", "diffHunk": "@@ -601,6 +601,40 @@ public void closeShouldBeIdempotent() {\n         producer.close();\n     }\n \n+    @Test\n+    public void closeWithNegativeTimestampShouldThrow() {\n+        Properties producerProps = new Properties();\n+        producerProps.put(ProducerConfig.BOOTSTRAP_SERVERS_CONFIG, \"localhost:9000\");\n+        try (Producer producer = new KafkaProducer<>(producerProps, new ByteArraySerializer(), new ByteArraySerializer())) {\n+            assertThrows(IllegalArgumentException.class, () -> producer.close(Duration.ofMillis(-100)));\n+        }\n+    }\n+\n+    @Test\n+    public void testFlush() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe68fc8493a7b34aa00d99b28e4b1828d9adbf2"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4100, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}