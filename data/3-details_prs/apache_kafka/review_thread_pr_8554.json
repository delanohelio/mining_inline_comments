{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4OTc5MjY2", "number": 8554, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowMDoyOFrOD3d13w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowNzozN1rOD3d6bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDg3MTk5OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowMDoyOFrOGNu-IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNToxNDowNlrOGNv-1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NDI0MQ==", "bodyText": "unboxing will happen in the comparison in the if branch anyways, so probably better to do it early declaring the type long here.", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417054241", "createdAt": "2020-04-29T04:00:28Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA3MDgwNg==", "bodyText": "Fair enough; added.", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417070806", "createdAt": "2020-04-29T05:14:06Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NDI0MQ=="}, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDg3ODg0OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowNDo0MlrOGNvB3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDoxMzoyNVrOGNvJZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\n          \n          \n            \n                                    \"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                    endOffset,\n          \n          \n            \n                                    topicPartition,\n          \n          \n            \n                                    lastConsumedOffset);\n          \n          \n            \n                                log.trace(\"Behind end offset {} for {}; last-consumed offset is {}\",\n          \n          \n            \n                                        endOffset, topicPartition, lastConsumedOffset);\n          \n      \n    \n    \n  \n\nnit: multiline calls don't need to be on their own line in AK and tab is equal to 4 spaces (here we need 2 tabs)", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055199", "createdAt": "2020-04-29T04:04:42Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n                     it.remove();\n-                else {\n+                } else {\n+                    log.trace(\n+                        \"Behind end offset {} for {}; last-consumed offset is {}\",\n+                        endOffset,\n+                        topicPartition,\n+                        lastConsumedOffset);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NzEyNg==", "bodyText": "Similar to the above, seeing a message that says read might be easier to read in context than consumed.\nHow about:\nBehind end offset {} for {}; last-read offset is {}", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417057126", "createdAt": "2020-04-29T04:13:25Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n                     it.remove();\n-                else {\n+                } else {\n+                    log.trace(\n+                        \"Behind end offset {} for {}; last-consumed offset is {}\",\n+                        endOffset,\n+                        topicPartition,\n+                        lastConsumedOffset);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTE5OQ=="}, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NDg4MzY3OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowNzozN1rOGNvEjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNDowNzozN1rOGNvEjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA1NTg4NQ==", "bodyText": "given that the previous messages say \"Reading to ...\" maybe it would make sense to say:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);\n          \n          \n            \n                                log.trace(\"Read to end offset {} for {}\", endOffset, topicPartition);", "url": "https://github.com/apache/kafka/pull/8554#discussion_r417055885", "createdAt": "2020-04-29T04:07:37Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/util/KafkaBasedLog.java", "diffHunk": "@@ -281,9 +281,18 @@ private void readToLogEnd() {\n             Iterator<Map.Entry<TopicPartition, Long>> it = endOffsets.entrySet().iterator();\n             while (it.hasNext()) {\n                 Map.Entry<TopicPartition, Long> entry = it.next();\n-                if (consumer.position(entry.getKey()) >= entry.getValue())\n+                TopicPartition topicPartition = entry.getKey();\n+                Long endOffset = entry.getValue();\n+                long lastConsumedOffset = consumer.position(topicPartition);\n+                if (lastConsumedOffset >= endOffset) {\n+                    log.trace(\"Reached end offset {} for {}\", endOffset, topicPartition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5c01409225987bd05d105bfa3a34d16adbce576"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2793, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}