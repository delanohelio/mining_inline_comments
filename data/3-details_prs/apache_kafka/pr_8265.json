{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2MzUyMjU1", "number": 8265, "title": "KAFKA-9657: Throw upon offset fetch unsupported stable flag protocol ", "bodyText": "This PR tries to add an internal flag to throw if we hit an unexpected protocol version for offset fetch. It could be used together with EOS_BETA flag so that if server side downgrades unexpectedly, we shall fail the application ASAP.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-10T20:37:12Z", "url": "https://github.com/apache/kafka/pull/8265", "merged": true, "mergeCommit": {"oid": "2d2311d75c081745c7a24f7da7c8ec14feddd259"}, "closed": true, "closedAt": "2020-03-13T05:28:53Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcLMr77AH2gAyMzg2MzUyMjU1OjM3ZjY3ZTE0ODQ2MWUwZjFlMTc5NTRjODYzZjNiYTMzMzhiNzg2MDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcM_13tAFqTM3Mzc5Mzc5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "37f67e148461e0f1e17954c863f3ba3338b78603", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/37f67e148461e0f1e17954c863f3ba3338b78603", "committedDate": "2020-03-07T04:06:06Z", "message": "hotfix statemanager util"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cf6f7e4a098ba5f871caa08238be5d293b1c3a9c", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/cf6f7e4a098ba5f871caa08238be5d293b1c3a9c", "committedDate": "2020-03-10T17:45:41Z", "message": "Merge remote-tracking branch 'upstream/trunk' into trunk"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyNDE3OTc5", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-372417979", "createdAt": "2020-03-11T01:07:50Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMTowNzo1MVrOF0mI1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwMToxNDowMlrOF0mOoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTEyNQ==", "bodyText": "nit: we should prefix with internal.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r390695125", "createdAt": "2020-03-11T01:07:51Z", "author": {"login": "mjsax"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -259,6 +259,19 @@\n      */\n     static final String LEAVE_GROUP_ON_CLOSE_CONFIG = \"internal.leave.group.on.close\";\n \n+    /**\n+     * <code>throw.on.stable.flag.unsupported</code>\n+     * Whether or not the consumer throw when the new stable flag is supported. If set to <code>true</code>\n+     * then the client shall crash upon hitting it. The purpose of this flag is to prevent unexpected broker\n+     * downgrade which makes the offset fetch protection against pending commit invalid. The safest approach\n+     * is to fail fast to avoid introducing correctness issue.\n+     *\n+     * <p>\n+     * Note: this is an internal configuration and could be changed in the future in a backward incompatible way\n+     *\n+     */\n+    static final String THROW_ON_STABLE_FLAG_UNSUPPORTED = \"throw.on.stable.flag.unsupported\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTczMw==", "bodyText": "nit: move false to it's own line", "url": "https://github.com/apache/kafka/pull/8265#discussion_r390695733", "createdAt": "2020-03-11T01:10:27Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -2211,7 +2211,7 @@ private FetchResponse fetchResponse(TopicPartition partition, long fetchOffset,\n                                                                           time,\n                                                                           autoCommitEnabled,\n                                                                           autoCommitIntervalMs,\n-                                                                          interceptors);\n+                                                                          interceptors, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NTc2Mg==", "bodyText": "as above", "url": "https://github.com/apache/kafka/pull/8265#discussion_r390695762", "createdAt": "2020-03-11T01:10:36Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java", "diffHunk": "@@ -2715,7 +2715,7 @@ private ConsumerCoordinator buildCoordinator(final GroupRebalanceConfig rebalanc\n                 time,\n                 autoCommitEnabled,\n                 autoCommitIntervalMs,\n-                null);\n+                null, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDY5NjYwOA==", "bodyText": "Why not use THROW_ON_STABLE_FLAG_UNSUPPORTED instead of hard-coded string", "url": "https://github.com/apache/kafka/pull/8265#discussion_r390696608", "createdAt": "2020-03-11T01:14:02Z", "author": {"login": "mjsax"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/KafkaConsumer.java", "diffHunk": "@@ -787,7 +787,8 @@ private KafkaConsumer(ConsumerConfig config, Deserializer<K> keyDeserializer, De\n                         this.time,\n                         enableAutoCommit,\n                         config.getInt(ConsumerConfig.AUTO_COMMIT_INTERVAL_MS_CONFIG),\n-                        this.interceptors);\n+                        this.interceptors,\n+                        config.getBoolean(\"throw.on.stable.flag.unsupported\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDk3ODUw", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373097850", "createdAt": "2020-03-11T20:21:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMTo1NlrOF1Hxog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMTo1NlrOF1Hxog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjI0Mg==", "bodyText": "side cleanup", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391246242", "createdAt": "2020-03-11T20:21:56Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1666,12 +1665,8 @@ public void run() {\n             if (interrupt) {\n                 assertTrue(\"Close terminated prematurely\", future.cancel(true));\n \n-                TestUtils.waitForCondition(new TestCondition() {\n-                    @Override\n-                    public boolean conditionMet() {\n-                        return closeException.get() != null;\n-                    }\n-                }, \"InterruptException did not occur within timeout.\");\n+                TestUtils.waitForCondition(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDk4MDk1", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373098095", "createdAt": "2020-03-11T20:22:18Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMjoxOVrOF1HyXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMjoxOVrOF1HyXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjQyOA==", "bodyText": "Mostly side-cleanup for consolidating consumerId.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391246428", "createdAt": "2020-03-11T20:22:19Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java", "diffHunk": "@@ -139,6 +140,8 @@\n     private final ThrowOnAssignmentAssignor throwFatalErrorOnAssignmentAssignor;\n     private final List<ConsumerPartitionAssignor> assignors;\n     private final Map<String, MockPartitionAssignor> assignorMap;\n+    private final String consumerId = \"consumer\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDk4MjUw", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373098250", "createdAt": "2020-03-11T20:22:34Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMjozNFrOF1Hy2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMjozNFrOF1Hy2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NjU1Mg==", "bodyText": "Side cleanups for lambda.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391246552", "createdAt": "2020-03-11T20:22:34Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java", "diffHunk": "@@ -879,13 +883,10 @@ public void testMetadataRefreshDuringRebalance() {\n             metadata.rewind();\n             return subscription.topics().containsAll(updatedSubscription);\n         }, joinGroupLeaderResponse(2, consumerId, updatedSubscriptions, Errors.NONE));\n-        client.prepareResponse(new MockClient.RequestMatcher() {\n-            // update the metadata again back to topic1\n-            @Override\n-            public boolean matches(AbstractRequest body) {\n-                client.updateMetadata(TestUtils.metadataUpdateWith(1, singletonMap(topic1, 1)));\n-                return true;\n-            }\n+        // update the metadata again back to topic1", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMDk4ODAy", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373098802", "createdAt": "2020-03-11T20:23:24Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMzoyNFrOF1H0sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMDoyMzoyNFrOF1H0sQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI0NzAyNQ==", "bodyText": "These two are the new tests to make sure when the flag is turned on, the behavior will be safe for supported version and panic when unsupported.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391247025", "createdAt": "2020-03-11T20:23:24Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java", "diffHunk": "@@ -2589,6 +2557,54 @@ public void testConsumerRejoinAfterRebalance() {\n         }\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 421}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "858908bccfea8718c94d34fd8bea21a52070ff53", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/858908bccfea8718c94d34fd8bea21a52070ff53", "committedDate": "2020-03-11T20:28:31Z", "message": "Merge remote-tracking branch 'upstream/trunk' into trunk"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/1a24baa94eb583ebf92736a4a85d3e6724fd3e3e", "committedDate": "2020-03-11T20:30:56Z", "message": "add internal flag to throw upon unsupported version"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/1a24baa94eb583ebf92736a4a85d3e6724fd3e3e", "committedDate": "2020-03-11T20:30:56Z", "message": "add internal flag to throw upon unsupported version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMjAyMzgw", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373202380", "createdAt": "2020-03-11T23:59:44Z", "commit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OTo0NFrOF1NPFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMzo1OTo0NFrOF1NPFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMzNTcwMA==", "bodyText": "nit: shouldThrow -> expectThrows ?", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391335700", "createdAt": "2020-03-11T23:59:44Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/ConsumerCoordinatorTest.java", "diffHunk": "@@ -2589,6 +2557,54 @@ public void testConsumerRejoinAfterRebalance() {\n         }\n     }\n \n+    @Test\n+    public void testThrowOnUnsupportedStableFlag() {\n+        supportStableFlag((short) 6, true);\n+    }\n+\n+    @Test\n+    public void testNoThrowWhenStableFlagIsSupported() {\n+        supportStableFlag((short) 7, false);\n+    }\n+\n+    private void supportStableFlag(final short upperVersion, final boolean shouldThrow) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "originalPosition": 431}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTgxOTg0", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373181984", "createdAt": "2020-03-11T22:58:27Z", "commit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjo1ODoyN1rOF1MGdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMDo1MDoxMVrOF1OBSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzExMQ==", "bodyText": "nit: if {} else {log.trace()}.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391317111", "createdAt": "2020-03-11T22:58:27Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchRequest.java", "diffHunk": "@@ -83,6 +86,10 @@ public OffsetFetchRequest build(short version) {\n             }\n \n             if (data.requireStable() && version < 7) {\n+                if (throwOnStableFlagNotSupported) {\n+                    throw new UnsupportedVersionException(\"Broker unexpectedly doesn't support requireStable flag \" +\n+                        \"on version \" + version);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzU2Ng==", "bodyText": "nit: throw.on.fetch.stable.offsets.unsupported.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391317566", "createdAt": "2020-03-11T22:59:52Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/ConsumerConfig.java", "diffHunk": "@@ -263,6 +263,19 @@\n      */\n     static final String LEAVE_GROUP_ON_CLOSE_CONFIG = \"internal.leave.group.on.close\";\n \n+    /**\n+     * <code>internal.throw.on.stable.flag.unsupported</code>\n+     * Whether or not the consumer should throw when the new stable flag is supported. If set to <code>true</code>\n+     * then the client shall crash upon hitting it. The purpose of this flag is to prevent unexpected broker\n+     * downgrade which makes the offset fetch protection against pending commit invalid. The safest approach\n+     * is to fail fast to avoid introducing correctness issue.\n+     *\n+     * <p>\n+     * Note: this is an internal configuration and could be changed in the future in a backward incompatible way\n+     *\n+     */\n+    static final String THROW_ON_STABLE_FLAG_UNSUPPORTED = \"internal.throw.on.stable.flag.unsupported\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM0ODU1Mw==", "bodyText": "Could you double check if the UnsupportedVersionException would be thrown all the way up to consumer.committed, un-wrapped?\nAlso besides consumer.committed it would be thrown to other consumer calls, e.g. consumer.poll could be possibly sending offset fetch request as part of rebalance as well. We need to make sure all consumer APIs that may get this exception updated their javadocs.", "url": "https://github.com/apache/kafka/pull/8265#discussion_r391348553", "createdAt": "2020-03-12T00:50:11Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/OffsetFetchRequest.java", "diffHunk": "@@ -83,6 +86,10 @@ public OffsetFetchRequest build(short version) {\n             }\n \n             if (data.requireStable() && version < 7) {\n+                if (throwOnStableFlagNotSupported) {\n+                    throw new UnsupportedVersionException(\"Broker unexpectedly doesn't support requireStable flag \" +\n+                        \"on version \" + version);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMxNzExMQ=="}, "originalCommit": {"oid": "1a24baa94eb583ebf92736a4a85d3e6724fd3e3e"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d4b14abdb885cee0406fc0c93dc5602b3e600fc8", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/d4b14abdb885cee0406fc0c93dc5602b3e600fc8", "committedDate": "2020-03-12T01:16:28Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b2c7a974004e987d5f8d13593bc45041a97fb546", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/b2c7a974004e987d5f8d13593bc45041a97fb546", "committedDate": "2020-03-12T04:37:18Z", "message": "add consumer test and comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzI4NTc1", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373728575", "createdAt": "2020-03-12T16:48:45Z", "commit": {"oid": "b2c7a974004e987d5f8d13593bc45041a97fb546"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczNzkzNzkx", "url": "https://github.com/apache/kafka/pull/8265#pullrequestreview-373793791", "createdAt": "2020-03-12T18:16:02Z", "commit": {"oid": "b2c7a974004e987d5f8d13593bc45041a97fb546"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 212, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}