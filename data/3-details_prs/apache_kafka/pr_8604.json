{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyNTg1ODM0", "number": 8604, "title": "KIP-597: MirrorMaker2 internal topics Formatters", "bodyText": "This PR includes 3 MessageFormatters for MirrorMaker2 internal topics:\n\nHeartbeatFormatter\nCheckpointFormatter\nOffsetSyncFormatter\n\nThis also introduces a new public interface org.apache.kafka.common.MessageFormatter that users can implement to build custom formatters.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-05-03T11:09:15Z", "url": "https://github.com/apache/kafka/pull/8604", "merged": true, "mergeCommit": {"oid": "caa806cd82fb9fa88510c81de53e69ac9846311d"}, "closed": true, "closedAt": "2020-07-03T09:41:46Z", "author": {"login": "mimaison"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcdr-fyAFqTQwNDYyNTc3Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcw-bOhAH2gAyNDEyNTg1ODM0OjIxMmRhMmNiNjI1NTRjNDM5YzI1MDBjNjY3OGUxNjhmYTRlYjhmNzA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0NjI1Nzc3", "url": "https://github.com/apache/kafka/pull/8604#pullrequestreview-404625777", "createdAt": "2020-05-03T14:44:04Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d356b076d6db6338db17710cf9a939682af2a5", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/f5d356b076d6db6338db17710cf9a939682af2a5", "committedDate": "2020-06-18T14:05:50Z", "message": "KIP-597: MirrorMaker2 internal topics Formatters\n\nThis PR includes 3 MessageFormatters for MirrorMaker2 internal topics:\n- HeartbeatFormatter\n- CheckpointFormatter\n- OffsetSyncFormatter\n\nThis also introduces a new public interface org.apache.kafka.common.MessageFormatter that users can implement to build custom formatters."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08308ed6d4cffb63d60b0077cc9bc832314fcca6", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/08308ed6d4cffb63d60b0077cc9bc832314fcca6", "committedDate": "2020-06-18T14:05:50Z", "message": "Update to match the KIP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ae860d4eb4b25446054ea6a038fc08ebac8fc83", "author": {"user": {"login": "edoardocomar", "name": "Edoardo Comar"}}, "url": "https://github.com/apache/kafka/commit/2ae860d4eb4b25446054ea6a038fc08ebac8fc83", "committedDate": "2020-06-18T14:05:50Z", "message": "javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711a004c3100bf821876b068bc09a84ec8188d04", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/711a004c3100bf821876b068bc09a84ec8188d04", "committedDate": "2020-06-18T14:05:50Z", "message": "Fix checkstyle/spotbugs issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60f4470ea41d1e02a753e01bae6c4ddd8619a560", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/60f4470ea41d1e02a753e01bae6c4ddd8619a560", "committedDate": "2020-06-18T14:17:16Z", "message": "Fix scala unit syntax"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "60f4470ea41d1e02a753e01bae6c4ddd8619a560", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/60f4470ea41d1e02a753e01bae6c4ddd8619a560", "committedDate": "2020-06-18T14:17:16Z", "message": "Fix scala unit syntax"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM1NDUxNDE3", "url": "https://github.com/apache/kafka/pull/8604#pullrequestreview-435451417", "createdAt": "2020-06-23T05:27:25Z", "commit": {"oid": "60f4470ea41d1e02a753e01bae6c4ddd8619a560"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyNzoyNlrOGnZyEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QwNToyODo0OVrOGnZ0CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDA2NQ==", "bodyText": "do we risk NPE here?", "url": "https://github.com/apache/kafka/pull/8604#discussion_r443970065", "createdAt": "2020-06-23T05:27:26Z", "author": {"login": "kkonstantine"}, "path": "core/src/main/scala/kafka/tools/ConsoleConsumer.scala", "diffHunk": "@@ -560,16 +561,15 @@ class LoggingMessageFormatter extends MessageFormatter with LazyLogging {\n }\n \n class NoOpMessageFormatter extends MessageFormatter {\n-  override def init(props: Properties): Unit = {}\n \n   def writeTo(consumerRecord: ConsumerRecord[Array[Byte], Array[Byte]], output: PrintStream): Unit = {}\n }\n \n class ChecksumMessageFormatter extends MessageFormatter {\n   private var topicStr: String = _\n \n-  override def init(props: Properties): Unit = {\n-    topicStr = props.getProperty(\"topic\")\n+  override def configure(configs: Map[String, _]): Unit = {\n+    topicStr = configs.get(\"topic\").toString", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60f4470ea41d1e02a753e01bae6c4ddd8619a560"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDU2OQ==", "bodyText": "can we add a test?", "url": "https://github.com/apache/kafka/pull/8604#discussion_r443970569", "createdAt": "2020-06-23T05:28:49Z", "author": {"login": "kkonstantine"}, "path": "core/src/main/scala/kafka/tools/ConsoleConsumer.scala", "diffHunk": "@@ -560,16 +561,15 @@ class LoggingMessageFormatter extends MessageFormatter with LazyLogging {\n }\n \n class NoOpMessageFormatter extends MessageFormatter {\n-  override def init(props: Properties): Unit = {}\n \n   def writeTo(consumerRecord: ConsumerRecord[Array[Byte], Array[Byte]], output: PrintStream): Unit = {}\n }\n \n class ChecksumMessageFormatter extends MessageFormatter {\n   private var topicStr: String = _\n \n-  override def init(props: Properties): Unit = {\n-    topicStr = props.getProperty(\"topic\")\n+  override def configure(configs: Map[String, _]): Unit = {\n+    topicStr = configs.get(\"topic\").toString", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mzk3MDA2NQ=="}, "originalCommit": {"oid": "60f4470ea41d1e02a753e01bae6c4ddd8619a560"}, "originalPosition": 62}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/07fffaf8811f6a94b669164c0bbb42a62d68bd62", "committedDate": "2020-06-23T20:58:24Z", "message": "Address feedback"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM5NDc3NDc2", "url": "https://github.com/apache/kafka/pull/8604#pullrequestreview-439477476", "createdAt": "2020-06-29T20:31:01Z", "commit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwNjIwNjUz", "url": "https://github.com/apache/kafka/pull/8604#pullrequestreview-440620653", "createdAt": "2020-07-01T07:40:07Z", "commit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzo0MDowN1rOGrad2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNzo0NDo1NVrOGranrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3NTU3OQ==", "bodyText": "asScala.asJava looks a bit weird here. I understand that you are using this trick to convert the Properties to a Scala Map and then a Java Map. How about loading formatterArgs as a Map directly?", "url": "https://github.com/apache/kafka/pull/8604#discussion_r448175579", "createdAt": "2020-07-01T07:40:07Z", "author": {"login": "dajac"}, "path": "core/src/main/scala/kafka/tools/ConsoleConsumer.scala", "diffHunk": "@@ -309,7 +308,7 @@ object ConsoleConsumer extends Logging {\n       formatterArgs.setProperty(ConsumerConfig.VALUE_DESERIALIZER_CLASS_CONFIG, valueDeserializer)\n     }\n \n-    formatter.init(formatterArgs)\n+    formatter.configure(formatterArgs.asScala.asJava)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3Njk1Nw==", "bodyText": "Can't we use configs directly instead of building props?", "url": "https://github.com/apache/kafka/pull/8604#discussion_r448176957", "createdAt": "2020-07-01T07:42:42Z", "author": {"login": "dajac"}, "path": "core/src/main/scala/kafka/tools/ConsoleConsumer.scala", "diffHunk": "@@ -466,7 +465,9 @@ class DefaultMessageFormatter extends MessageFormatter {\n   var keyDeserializer: Option[Deserializer[_]] = None\n   var valueDeserializer: Option[Deserializer[_]] = None\n \n-  override def init(props: Properties): Unit = {\n+  override def configure(configs: Map[String, _]): Unit = {\n+    val props = new java.util.Properties()\n+    configs.asScala.foreach { case (key, value) => props.put(key, value.toString) }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODE3ODA5NQ==", "bodyText": "nit: We could use containsKey.", "url": "https://github.com/apache/kafka/pull/8604#discussion_r448178095", "createdAt": "2020-07-01T07:44:55Z", "author": {"login": "dajac"}, "path": "core/src/main/scala/kafka/tools/ConsoleConsumer.scala", "diffHunk": "@@ -560,20 +561,18 @@ class LoggingMessageFormatter extends MessageFormatter with LazyLogging {\n }\n \n class NoOpMessageFormatter extends MessageFormatter {\n-  override def init(props: Properties): Unit = {}\n \n   def writeTo(consumerRecord: ConsumerRecord[Array[Byte], Array[Byte]], output: PrintStream): Unit = {}\n }\n \n class ChecksumMessageFormatter extends MessageFormatter {\n   private var topicStr: String = _\n \n-  override def init(props: Properties): Unit = {\n-    topicStr = props.getProperty(\"topic\")\n-    if (topicStr != null)\n-      topicStr = topicStr + \":\"\n+  override def configure(configs: Map[String, _]): Unit = {\n+    topicStr = if (configs.get(\"topic\") != null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07fffaf8811f6a94b669164c0bbb42a62d68bd62"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "212da2cb62554c439c2500c6678e168fa4eb8f70", "author": {"user": {"login": "mimaison", "name": "Mickael Maison"}}, "url": "https://github.com/apache/kafka/commit/212da2cb62554c439c2500c6678e168fa4eb8f70", "committedDate": "2020-07-02T12:58:18Z", "message": "Address feedback"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1328, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}