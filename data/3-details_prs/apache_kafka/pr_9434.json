{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNDg1ODA2", "number": 9434, "title": "MINOR: Handle lastFetchedEpoch/divergingEpoch in FetchSession and DelayedFetch", "bodyText": "In 2.7, we added lastFetchedEpoch to fetch requests and divergingEpoch to fetch responses. We are not using these for truncation yet, but in order to use these for truncation with IBP 2.7 onwards in the next release, we should make sure that we handle these in all the supporting classes even in 2.7.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-10-14T16:11:23Z", "url": "https://github.com/apache/kafka/pull/9434", "merged": true, "mergeCommit": {"oid": "fcc7c2de391cadad8edecb108d978ea50afd428d"}, "closed": true, "closedAt": "2020-10-16T08:58:02Z", "author": {"login": "rajinisivaram"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSfbrvAH2gAyNTAzNDg1ODA2OmY0YjQ4YmMzOGQ3MWFmN2ZkZjNiY2EzOGIxOWJlNjMzNTYyMDhkZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdS19n6gFqTUwOTY1MTg5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f4b48bc38d71af7fdf3bca38b19be63356208dd2", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/f4b48bc38d71af7fdf3bca38b19be63356208dd2", "committedDate": "2020-10-14T16:05:10Z", "message": "MINOR: Handle lastFetchedEpoch/divergingEpoch in FetchSession and DelayedFetch"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4NTU4NzE1", "url": "https://github.com/apache/kafka/pull/9434#pullrequestreview-508558715", "createdAt": "2020-10-14T17:09:10Z", "commit": {"oid": "f4b48bc38d71af7fdf3bca38b19be63356208dd2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzowOToxMVrOHhc75g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQxNzoxMjo1MFrOHhdDpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDgzOTE0Mg==", "bodyText": "Hmm.. If the LogReadResult has a diverging epoch, wouldn't we want to respond immediately?", "url": "https://github.com/apache/kafka/pull/9434#discussion_r504839142", "createdAt": "2020-10-14T17:09:11Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/ReplicaManager.scala", "diffHunk": "@@ -1084,7 +1084,7 @@ class ReplicaManager(val config: KafkaConfig,\n       fetchInfos.foreach { case (topicPartition, partitionData) =>\n         logReadResultMap.get(topicPartition).foreach(logReadResult => {\n           val logOffsetMetadata = logReadResult.info.fetchOffsetMetadata\n-          fetchPartitionStatus += (topicPartition -> FetchPartitionStatus(logOffsetMetadata, partitionData))\n+          fetchPartitionStatus += (topicPartition -> FetchPartitionStatus(logOffsetMetadata, partitionData, logReadResult.divergingEpoch.nonEmpty))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b48bc38d71af7fdf3bca38b19be63356208dd2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDg0MTEyNA==", "bodyText": "Here we are using the status from the original fetch. I am wondering if we need to recheck below since it is possible to get a truncation while a fetch is in purgatory.", "url": "https://github.com/apache/kafka/pull/9434#discussion_r504841124", "createdAt": "2020-10-14T17:12:50Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/DelayedFetch.scala", "diffHunk": "@@ -88,6 +90,13 @@ class DelayedFetch(delayMs: Long,\n         try {\n           if (fetchOffset != LogOffsetMetadata.UnknownOffsetMetadata) {\n             val partition = replicaManager.getPartitionOrException(topicPartition)\n+\n+            // Case H: Return diverging epoch in response to trigger truncation\n+            if (fetchStatus.hasDivergingEpoch) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4b48bc38d71af7fdf3bca38b19be63356208dd2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d554d91fc2b1bbf1b38049d0b4b9d2c87e9b14a", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/3d554d91fc2b1bbf1b38049d0b4b9d2c87e9b14a", "committedDate": "2020-10-14T20:06:09Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ce7eda1aab049d4008ba1881ea26ba1dac294d", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/38ce7eda1aab049d4008ba1881ea26ba1dac294d", "committedDate": "2020-10-15T09:38:10Z", "message": "Fix test to compile with scala 2.12"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NTUwMjYx", "url": "https://github.com/apache/kafka/pull/9434#pullrequestreview-509550261", "createdAt": "2020-10-15T16:16:20Z", "commit": {"oid": "38ce7eda1aab049d4008ba1881ea26ba1dac294d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoxNjoyMVrOHiPskw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNjoyOToyNFrOHiQN0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3MDgwMw==", "bodyText": "nit: unneeded newline", "url": "https://github.com/apache/kafka/pull/9434#discussion_r505670803", "createdAt": "2020-10-15T16:16:21Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/DelayedFetch.scala", "diffHunk": "@@ -96,6 +98,7 @@ class DelayedFetch(delayMs: Long,\n               case FetchTxnCommitted => offsetSnapshot.lastStableOffset\n             }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce7eda1aab049d4008ba1881ea26ba1dac294d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3ODM0NA==", "bodyText": "Do we need to check the error? Or are you relying on the check below failing if UNDEFINED_EPOCH is returned?", "url": "https://github.com/apache/kafka/pull/9434#discussion_r505678344", "createdAt": "2020-10-15T16:28:14Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -1162,6 +1162,13 @@ class Partition(val topicPartition: TopicPartition,\n     localLog.fetchOffsetSnapshot\n   }\n \n+  def hasDivergingEpoch(currentLeaderEpoch: Optional[Integer],\n+                        lastFetchedEpoch: Int,\n+                        fetchOffset: Long): Boolean = {\n+    val epochEndOffset = lastOffsetForLeaderEpoch(currentLeaderEpoch, lastFetchedEpoch, fetchOnlyFromLeader = false)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce7eda1aab049d4008ba1881ea26ba1dac294d"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTY3OTMxMw==", "bodyText": "Do we need to provide a default here?", "url": "https://github.com/apache/kafka/pull/9434#discussion_r505679313", "createdAt": "2020-10-15T16:29:24Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/FetchSession.scala", "diffHunk": "@@ -77,7 +77,8 @@ class CachedPartition(val topic: String,\n                       var highWatermark: Long,\n                       var leaderEpoch: Optional[Integer],\n                       var fetcherLogStartOffset: Long,\n-                      var localLogStartOffset: Long)\n+                      var localLogStartOffset: Long,\n+                      var lastFetchedEpoch: Optional[Integer] = Optional.empty[Integer])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38ce7eda1aab049d4008ba1881ea26ba1dac294d"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cda32dc16f228c2a1e90ad0a9d161b8cec6fd446", "author": {"user": {"login": "rajinisivaram", "name": "Rajini Sivaram"}}, "url": "https://github.com/apache/kafka/commit/cda32dc16f228c2a1e90ad0a9d161b8cec6fd446", "committedDate": "2020-10-15T17:27:43Z", "message": "Address review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5NjUxODk0", "url": "https://github.com/apache/kafka/pull/9434#pullrequestreview-509651894", "createdAt": "2020-10-15T18:20:09Z", "commit": {"oid": "cda32dc16f228c2a1e90ad0a9d161b8cec6fd446"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 544, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}