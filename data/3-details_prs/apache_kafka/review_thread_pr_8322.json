{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNzM1NTgz", "number": 8322, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTo1MTo0NlrODqBiCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxOTo1NlrODqhWfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1MzkxODgwOnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMTo1MTo0NlrOF5kK8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQyMzo0MzoyM1rOF5l5Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNTc3Ng==", "bodyText": "The restore consumer should never hit this error. Hence, I am wondering if we actually need this test? Does it make sense to test for something that will/should never happen?\nWe should rather have a test that the restore consumer is never configured with an group.instance.id config if we don't have such a test.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r395905776", "createdAt": "2020-03-20T21:51:46Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java", "diffHunk": "@@ -943,6 +946,31 @@ public void shouldThrowIfRestoreCallbackThrows() {\n         assertEquals(kaboom, thrown.getCause());\n     }\n \n+    @Test\n+    public void shouldThrowIfRestoreGetInstanceFenced() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "144ebda3bdb196fc2d9dd1a5f6c1bfb9d94ef8c1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNzg0MQ==", "bodyText": "Actually we do not forbid users to set instance.id in restore.consumer, it's just that since restore consumer never uses subscribe it would not join-group and hence should not get this exception ever -- so personally I agree with you that this test is not very significant by itself but just to tighten the logic in case the restore consumer calls subscribe (mistakenly?) later.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r395907841", "createdAt": "2020-03-20T21:58:00Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java", "diffHunk": "@@ -943,6 +946,31 @@ public void shouldThrowIfRestoreCallbackThrows() {\n         assertEquals(kaboom, thrown.getCause());\n     }\n \n+    @Test\n+    public void shouldThrowIfRestoreGetInstanceFenced() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNTc3Ng=="}, "originalCommit": {"oid": "144ebda3bdb196fc2d9dd1a5f6c1bfb9d94ef8c1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkxMjEzMA==", "bodyText": "Should we improve StreamsConfig#getRestoreConsumerConfigs() (and also for global consumer) accordingly, to remove group.instance.id if set and log a INFO message? (Plus a corresponding test?)\nWe can of course still keep this test. But if we test that we don't catch FencedInstanceIdException on the restore consumer, should we add corresponding tests for the main and global consumer, too?", "url": "https://github.com/apache/kafka/pull/8322#discussion_r395912130", "createdAt": "2020-03-20T22:12:49Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java", "diffHunk": "@@ -943,6 +946,31 @@ public void shouldThrowIfRestoreCallbackThrows() {\n         assertEquals(kaboom, thrown.getCause());\n     }\n \n+    @Test\n+    public void shouldThrowIfRestoreGetInstanceFenced() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNTc3Ng=="}, "originalCommit": {"oid": "144ebda3bdb196fc2d9dd1a5f6c1bfb9d94ef8c1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkzMzk4Mg==", "bodyText": "I'm more inclined to @mjsax idea here, we should probably just ensure no instance.id being set for restore consumer in the config level, instead of doing a unit test.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r395933982", "createdAt": "2020-03-20T23:43:23Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StoreChangelogReaderTest.java", "diffHunk": "@@ -943,6 +946,31 @@ public void shouldThrowIfRestoreCallbackThrows() {\n         assertEquals(kaboom, thrown.getCause());\n     }\n \n+    @Test\n+    public void shouldThrowIfRestoreGetInstanceFenced() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTkwNTc3Ng=="}, "originalCommit": {"oid": "144ebda3bdb196fc2d9dd1a5f6c1bfb9d94ef8c1"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTExMjg1OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxNDoxOVrOF6UVHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDowODowOFrOF6cskw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NDgxNA==", "bodyText": "Should this be GROUP_INSTANCE_ID_CONFIG ?", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396694814", "createdAt": "2020-03-23T19:14:19Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -185,8 +195,10 @@ public void consumerConfigShouldContainAdminClientConfigsForRetriesAndRetryBackO\n     public void testGetMainConsumerConfigsWithMainConsumerOverridenPrefix() {\n         props.put(StreamsConfig.consumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"5\");\n         props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"50\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_ID_CONFIG), \"another-id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2OTQwMA==", "bodyText": "This is a piggy-backed test coverage not directly related to the PR --- I wanted to make sure that whatever user specified group id is always overridden by the streams itself.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396769400", "createdAt": "2020-03-23T21:31:47Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -185,8 +195,10 @@ public void consumerConfigShouldContainAdminClientConfigsForRetriesAndRetryBackO\n     public void testGetMainConsumerConfigsWithMainConsumerOverridenPrefix() {\n         props.put(StreamsConfig.consumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"5\");\n         props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"50\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_ID_CONFIG), \"another-id\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NDgxNA=="}, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzMTg5MQ==", "bodyText": "Ack.\nShould we test that the GROUP_INSTANCE_ID is set correctly based on the user config for the main consumer (or do we have a test for this already?)", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396831891", "createdAt": "2020-03-24T00:08:08Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -185,8 +195,10 @@ public void consumerConfigShouldContainAdminClientConfigsForRetriesAndRetryBackO\n     public void testGetMainConsumerConfigsWithMainConsumerOverridenPrefix() {\n         props.put(StreamsConfig.consumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"5\");\n         props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.MAX_POLL_RECORDS_CONFIG), \"50\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_ID_CONFIG), \"another-id\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NDgxNA=="}, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTEyMjM2OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxNzoxMFrOF6UbOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwMDowODozMlrOF6ctFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NjM3OA==", "bodyText": "Why do we need this 3 lines? Setting the config without prefix would set it for all consumers anyway?\nIf you want to test the overwrite with prefix, should it be it's own test?", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396696378", "createdAt": "2020-03-23T19:17:10Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -141,9 +141,19 @@ public void testGetConsumerConfigs() {\n     @Test\n     public void testGetGroupInstanceIdConfigs() {\n         props.put(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG, \"group-instance-id\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-1\");\n+        props.put(StreamsConfig.restoreConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-2\");\n+        props.put(StreamsConfig.globalConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2ODUyMg==", "bodyText": "I want to check that no prefix would take effects here -- note I used different values for different overrides, so if it is violated we know which prefix introduced the violation.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396768522", "createdAt": "2020-03-23T21:30:04Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -141,9 +141,19 @@ public void testGetConsumerConfigs() {\n     @Test\n     public void testGetGroupInstanceIdConfigs() {\n         props.put(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG, \"group-instance-id\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-1\");\n+        props.put(StreamsConfig.restoreConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-2\");\n+        props.put(StreamsConfig.globalConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NjM3OA=="}, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjgzMjAyMw==", "bodyText": "Ack", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396832023", "createdAt": "2020-03-24T00:08:32Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/StreamsConfigTest.java", "diffHunk": "@@ -141,9 +141,19 @@ public void testGetConsumerConfigs() {\n     @Test\n     public void testGetGroupInstanceIdConfigs() {\n         props.put(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG, \"group-instance-id\");\n+        props.put(StreamsConfig.mainConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-1\");\n+        props.put(StreamsConfig.restoreConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-2\");\n+        props.put(StreamsConfig.globalConsumerPrefix(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG), \"group-instance-id-3\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5NjM3OA=="}, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1OTEzMjE0OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxOToxOTo1NlrOF6UhZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTozMDo0NFrOF6Y2eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Nzk1OQ==", "bodyText": "Side note: We actually have NON_CONFIGURABLE_CONSUMER_DEFAULT_CONFIGS (similar for producer and EOS). I am wondering, if we should add a similar pattern for the restore and global consumer (might be good enough as a follow up PR though; or at least create a ticket for now?). This include logging a WARNING if a user tries to set it?", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396697959", "createdAt": "2020-03-23T19:19:56Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -1199,6 +1199,9 @@ private void verifyMaxInFlightRequestPerConnection(final Object maxInFlightReque\n \n         // no need to set group id for a restore consumer\n         baseConsumerProps.remove(ConsumerConfig.GROUP_ID_CONFIG);\n+        // no need to set instance id for a restore consumer\n+        baseConsumerProps.remove(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc2ODg5MA==", "bodyText": "Yeah I think that's a good idea, can be done in another PR.", "url": "https://github.com/apache/kafka/pull/8322#discussion_r396768890", "createdAt": "2020-03-23T21:30:44Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -1199,6 +1199,9 @@ private void verifyMaxInFlightRequestPerConnection(final Object maxInFlightReque\n \n         // no need to set group id for a restore consumer\n         baseConsumerProps.remove(ConsumerConfig.GROUP_ID_CONFIG);\n+        // no need to set instance id for a restore consumer\n+        baseConsumerProps.remove(ConsumerConfig.GROUP_INSTANCE_ID_CONFIG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjY5Nzk1OQ=="}, "originalCommit": {"oid": "160acd197340ef183ea5af15f34ef9790a67b70b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3380, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}