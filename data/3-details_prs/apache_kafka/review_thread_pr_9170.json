{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2ODkyNTQ5", "number": 9170, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNToyMFrOEXveDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoxMTowNlrOEXx2vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzMwNDQ3OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNToyMFrOG_s-aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoyMTo0MFrOG_xDKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MDM0NQ==", "bodyText": "Why did this test change?", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469450345", "createdAt": "2020-08-12T18:15:20Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1609,12 +1609,11 @@ public void shouldReturnStateManagerChangelogOffsets() {\n     }\n \n     @Test\n-    public void shouldCheckpointWithCreatedStateOnClose() {\n+    public void shouldNotCheckpointOnCloseCreated() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxNzA5OQ==", "bodyText": "It was the same as the other one, that it was wrong to begin with.", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469517099", "createdAt": "2020-08-12T20:21:40Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1609,12 +1609,11 @@ public void shouldReturnStateManagerChangelogOffsets() {\n     }\n \n     @Test\n-    public void shouldCheckpointWithCreatedStateOnClose() {\n+    public void shouldNotCheckpointOnCloseCreated() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MDM0NQ=="}, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzMwNTk3OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNTo0NlrOG_s_ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxODoxNTo0NlrOG_s_ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQ1MDU5Ng==", "bodyText": "Same with this one, why did it change? Or was the test just wrong to begin with..?", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469450596", "createdAt": "2020-08-12T18:15:46Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -1629,16 +1628,18 @@ public void shouldCheckpointWithCreatedStateOnClose() {\n         assertFalse(source1.initialized);\n         assertFalse(source1.closed);\n \n+        EasyMock.verify(stateManager, recordCollector);\n+\n         final double expectedCloseTaskMetric = 1.0;\n         verifyCloseTaskMetric(expectedCloseTaskMetric, streamsMetrics, metricName);\n     }\n \n     @Test\n-    public void shouldNotCheckpointOnCloseRestoringIfNoProgress() {\n+    public void shouldCheckpointOnCloseRestoringIfNoProgress() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzY4MDQyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNjoxNVrOG_wmMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNjoxNVrOG_wmMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUwOTY4MA==", "bodyText": "partition group", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469509680", "createdAt": "2020-08-12T20:06:15Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -193,13 +193,17 @@ private void closeAndRevive(final Map<Task, Collection<TopicPartition>> taskWith\n \n             try {\n                 task.suspend();\n+                // we need to enforce a checkpoint that removes the corrupted partitions\n+                task.postCommit(true);\n             } catch (final RuntimeException swallow) {\n                 log.error(\"Error suspending corrupted task {} \", task.id(), swallow);\n             }\n             task.closeDirty();\n+\n+            // For active tasks pause their input partitions so we won't poll any more records\n+            // for this task until it has been re-initialized;\n+            // Note, closeDirty already clears the partitiongroup for the task.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzY4NDk1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDowNzo0MVrOG_wpAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoyMjozOFrOG_xFGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMDQwMQ==", "bodyText": "I'm not sure this is 100% ensuring the snapshot gets done, as we have branching logic in postCommit. Do you think we should just get a helper to cleanup instead?", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469510401", "createdAt": "2020-08-12T20:07:41Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -193,13 +193,17 @@ private void closeAndRevive(final Map<Task, Collection<TopicPartition>> taskWith\n \n             try {\n                 task.suspend();\n+                // we need to enforce a checkpoint that removes the corrupted partitions\n+                task.postCommit(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxNzU5NQ==", "bodyText": "Here since the task is guaranteed to be in SUSPENDED postCommit() is ensured to trigger checkpointing.", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469517595", "createdAt": "2020-08-12T20:22:38Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -193,13 +193,17 @@ private void closeAndRevive(final Map<Task, Collection<TopicPartition>> taskWith\n \n             try {\n                 task.suspend();\n+                // we need to enforce a checkpoint that removes the corrupted partitions\n+                task.postCommit(true);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMDQwMQ=="}, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzY5NTMzOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoxMTowNlrOG_wvQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQyMDoyNDoyMFrOG_xISQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMjAwMA==", "bodyText": "Could we move this logic to the StandbyTask only? It is the only case I have seen which could have null snapshot passed in, which could make this helper assume both snapshots are not null.\nif (oldOffsetSnapshot == null) {\n            return false;\t          \n}", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469512000", "createdAt": "2020-08-12T20:11:06Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java", "diffHunk": "@@ -58,6 +58,9 @@ static boolean checkpointNeeded(final boolean enforceCheckpoint,\n             return false;\n         }\n \n+        if (enforceCheckpoint)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxODQwOQ==", "bodyText": "The null snapshot is for both active / standby tasks before the initializeIfNeeded is triggered, in that case, we should not overwrite the checkpoint even if it was enforced.", "url": "https://github.com/apache/kafka/pull/9170#discussion_r469518409", "createdAt": "2020-08-12T20:24:20Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StateManagerUtil.java", "diffHunk": "@@ -58,6 +58,9 @@ static boolean checkpointNeeded(final boolean enforceCheckpoint,\n             return false;\n         }\n \n+        if (enforceCheckpoint)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTUxMjAwMA=="}, "originalCommit": {"oid": "4288099ff38892fc9b02b9ea2eaa87a50adb64c1"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1908, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}