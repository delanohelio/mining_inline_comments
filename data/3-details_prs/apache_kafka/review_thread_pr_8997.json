{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2NTY0Mzcz", "number": 8997, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMToyODoyNFrOEMtYJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoxNDo1MlrOEOf2dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzYxODI5OnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMToyODoyNFrOGu-iag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMToyODoyNFrOGu-iag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMjI5OA==", "bodyText": "This is not used anywhere.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r451912298", "createdAt": "2020-07-09T01:28:24Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "diffHunk": "@@ -66,32 +72,17 @@ public ClientState() {\n         prevActiveTasks = new TreeSet<>();\n         prevStandbyTasks = new TreeSet<>();\n         consumerToPreviousStatefulTaskIds = new TreeMap<>();\n+        consumerToPreviousActiveTaskIds = new TreeMap<>();\n+        consumerToAssignedActiveTaskIds = new TreeMap<>();\n+        consumerToAssignedStandbyTaskIds = new TreeMap<>();\n+        consumerToRevokingActiveTaskIds = new TreeMap<>();\n         ownedPartitions = new TreeMap<>(TOPIC_PARTITION_COMPARATOR);\n         taskOffsetSums = new TreeMap<>();\n         taskLagTotals = new TreeMap<>();\n         this.capacity = capacity;\n     }\n \n-    private ClientState(final Set<TaskId> activeTasks,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ae2df4f211dc247e3f71587ab9ec8dec3599e61"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzYxOTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMToyOToxMVrOGu-jGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMTo0MDo0NFrOGu-vTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMjQ3Mg==", "bodyText": "This is unnecessarily verbose, plus part of it is replaced by line 960 below, so I trimmed a bit here.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r451912472", "createdAt": "2020-07-09T01:29:11Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -725,8 +725,10 @@ private boolean assignTasksToClients(final Set<String> allSourceTopics,\n                                                                    statefulTasks,\n                                                                    assignmentConfigs);\n \n-        log.info(\"Assigned tasks to clients as {}{}.\",\n-            Utils.NL, clientStates.entrySet().stream().map(Map.Entry::toString).collect(Collectors.joining(Utils.NL)));\n+        log.info(\"Assigned tasks to clients as: {}{}.\", Utils.NL,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ae2df4f211dc247e3f71587ab9ec8dec3599e61"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxNTU5OA==", "bodyText": "Thanks, this one has always made my head spin when reading the logs", "url": "https://github.com/apache/kafka/pull/8997#discussion_r451915598", "createdAt": "2020-07-09T01:40:44Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -725,8 +725,10 @@ private boolean assignTasksToClients(final Set<String> allSourceTopics,\n                                                                    statefulTasks,\n                                                                    assignmentConfigs);\n \n-        log.info(\"Assigned tasks to clients as {}{}.\",\n-            Utils.NL, clientStates.entrySet().stream().map(Map.Entry::toString).collect(Collectors.joining(Utils.NL)));\n+        log.info(\"Assigned tasks to clients as: {}{}.\", Utils.NL,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxMjQ3Mg=="}, "originalCommit": {"oid": "3ae2df4f211dc247e3f71587ab9ec8dec3599e61"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNzY0MTMyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMTo0MTozMVrOGu-wKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwMTo0MTozMVrOGu-wKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTkxNTgxOQ==", "bodyText": "super nit: processor --> process (or bet yet, 'client')", "url": "https://github.com/apache/kafka/pull/8997#discussion_r451915819", "createdAt": "2020-07-09T01:41:31Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -931,7 +933,9 @@ private void populatePartitionsByHostMaps(final Map<HostInfo, Set<TopicPartition\n                 state\n             );\n \n-            // Arbitrarily choose the leader's client to be responsible for triggering the probing rebalance\n+            // Arbitrarily choose the leader's client to be responsible for triggering the probing rebalance,\n+            // note once we pick the first consumer of the processor to trigger probing rebalance, other threads", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ae2df4f211dc247e3f71587ab9ec8dec3599e61"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ5NDU0OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjozNjoxMVrOGwJwew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMlQxOToxNzoyN1rOGwWeeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0NDY5OQ==", "bodyText": "Is this a logic change?", "url": "https://github.com/apache/kafka/pull/8997#discussion_r453144699", "createdAt": "2020-07-11T02:36:11Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1078,6 +1098,8 @@ private boolean addClientAssignments(final Map<String, Assignment> assignment,\n                     );\n                     removedActiveTasks.add(taskId);\n \n+                    clientState.revokeActiveFromConsumer(taskId, consumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0d18c701ffaca095e4404565aaa309b3200525"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzM1MzA4MA==", "bodyText": "No, the added functions are only for logging purposes.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r453353080", "createdAt": "2020-07-12T19:17:27Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1078,6 +1098,8 @@ private boolean addClientAssignments(final Map<String, Assignment> assignment,\n                     );\n                     removedActiveTasks.add(taskId);\n \n+                    clientState.revokeActiveFromConsumer(taskId, consumer);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0NDY5OQ=="}, "originalCommit": {"oid": "be0d18c701ffaca095e4404565aaa309b3200525"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTQ5NDk4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjozNjo1OVrOGwJwtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMjozNjo1OVrOGwJwtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzE0NDc1Ng==", "bodyText": "Similar here, if we have logical change, probably we need to add more tests.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r453144756", "createdAt": "2020-07-11T02:36:59Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1113,6 +1135,7 @@ private boolean addClientAssignments(final Map<String, Assignment> assignment,\n                                                                  final ClientState clientState) {\n         final Map<TaskId, Set<TopicPartition>> standbyTaskMap = new HashMap<>();\n         for (final TaskId task : standbys) {\n+            clientState.assignStandbyToConsumer(task, consumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be0d18c701ffaca095e4404565aaa309b3200525"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjM2Mjg1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjowODo0MlrOGxrkkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjowODo0MlrOGxrkkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0NzI4MA==", "bodyText": "This alignment looks weird.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r454747280", "createdAt": "2020-07-15T02:08:42Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -963,6 +967,18 @@ private void populatePartitionsByHostMaps(final Map<HostInfo, Set<TopicPartition\n                 rebalanceRequired = true;\n                 log.debug(\"Requested client {} to schedule a followup rebalance\", clientId);\n             }\n+\n+            log.info(\"Client {} per-consumer assignment:\\n\" +\n+                            \"\\tprev owned active {}\\n\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e54ddb17ec093f619ed5f89d97a23cdfb36b3e"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjM2NTEyOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjowOTo1M1rOGxrl5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjowOTo1M1rOGxrl5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0NzYyMQ==", "bodyText": "nit: we could initialize on the parameter definition.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r454747621", "createdAt": "2020-07-15T02:09:53Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "diffHunk": "@@ -66,32 +72,17 @@ public ClientState() {\n         prevActiveTasks = new TreeSet<>();\n         prevStandbyTasks = new TreeSet<>();\n         consumerToPreviousStatefulTaskIds = new TreeMap<>();\n+        consumerToPreviousActiveTaskIds = new TreeMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e54ddb17ec093f619ed5f89d97a23cdfb36b3e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjM2OTE5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoxMjoyNVrOGxrobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoxMjoyNVrOGxrobQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0ODI2OQ==", "bodyText": "We should add an empty line here to avoid mixing with the other maps with production use cases.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r454748269", "createdAt": "2020-07-15T02:12:25Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "diffHunk": "@@ -50,10 +49,17 @@\n     private final Set<TaskId> prevStandbyTasks;\n \n     private final Map<String, Set<TaskId>> consumerToPreviousStatefulTaskIds;\n+    // the following four maps are used only for logging purposes;\n+    // TODO: we could consider merging them with other book-keeping maps\n+    private final Map<String, Set<TaskId>> consumerToPreviousActiveTaskIds;\n+    private final Map<String, Set<TaskId>> consumerToAssignedActiveTaskIds;\n+    private final Map<String, Set<TaskId>> consumerToAssignedStandbyTaskIds;\n+    private final Map<String, Set<TaskId>> consumerToRevokingActiveTaskIds;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e54ddb17ec093f619ed5f89d97a23cdfb36b3e"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNjM3MzY2OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoxNDo1MlrOGxrq_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwMjoxNDo1MlrOGxrq_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDc0ODkyNg==", "bodyText": "Could we add a follow-up ticket instead? Someone in the community could pick it up.", "url": "https://github.com/apache/kafka/pull/8997#discussion_r454748926", "createdAt": "2020-07-15T02:14:52Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/ClientState.java", "diffHunk": "@@ -50,10 +49,17 @@\n     private final Set<TaskId> prevStandbyTasks;\n \n     private final Map<String, Set<TaskId>> consumerToPreviousStatefulTaskIds;\n+    // the following four maps are used only for logging purposes;\n+    // TODO: we could consider merging them with other book-keeping maps", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7e54ddb17ec093f619ed5f89d97a23cdfb36b3e"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2202, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}