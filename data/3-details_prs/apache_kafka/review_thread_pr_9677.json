{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjQ2ODcz", "number": 9677, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTozN1rOE_zygA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzo1MToxMFrOFAYe2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzQ0MjU2OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTozN1rOH9uHyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTozN1rOH9uHyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MDg0Mg==", "bodyText": "Maybe we can move this out of ZkPartitionStateStore since we need the dependence on IsrChangeListener in Partition anyway.", "url": "https://github.com/apache/kafka/pull/9677#discussion_r534480842", "createdAt": "2020-12-02T21:05:37Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -53,7 +59,7 @@ trait PartitionStateStore {\n \n class ZkPartitionStateStore(topicPartition: TopicPartition,\n                             zkClient: KafkaZkClient,\n-                            replicaManager: ReplicaManager) extends PartitionStateStore {\n+                            isrChangeListener: IsrChangeListener) extends PartitionStateStore {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0851036daa7782ee00c30885707798fa3a4ba2d"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzQ0MzUzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTo1M1rOH9uIYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMTowNTo1M1rOH9uIYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MDk5NA==", "bodyText": "Maybe IsrChangeMetrics?", "url": "https://github.com/apache/kafka/pull/9677#discussion_r534480994", "createdAt": "2020-12-02T21:05:53Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -45,6 +45,12 @@ import org.apache.kafka.common.{IsolationLevel, TopicPartition}\n import scala.collection.{Map, Seq}\n import scala.jdk.CollectionConverters._\n \n+trait IsrChangeListener {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0851036daa7782ee00c30885707798fa3a4ba2d"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MzY5MzYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoxNzo1M1rOH9weJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMjoxNzo1M1rOH9weJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDUxOTMzNQ==", "bodyText": "Hmm.. I had forgotten about this. The purpose of this call is so that we can propagate the ISR change to the controller, but we shouldn't need to do this down the AlterIsr path. This also makes your initial name IsrChangeListener a bit more accurate \ud83d\ude05 .", "url": "https://github.com/apache/kafka/pull/9677#discussion_r534519335", "createdAt": "2020-12-02T22:17:53Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -107,10 +106,24 @@ object Partition extends KafkaMetricsGroup {\n   def apply(topicPartition: TopicPartition,\n             time: Time,\n             replicaManager: ReplicaManager): Partition = {\n+\n+    val isrChangeMetrics = new IsrChangeMetrics {\n+      override def markExpand(): Unit = {\n+        replicaManager.recordIsrChange(topicPartition)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdb23eb5d73b5928a5bbdc8fff7300ff27706199"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1Mzg3OTkxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMzoxNTo1NVrOH9yLuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxMzowNTowOVrOH-apIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzM4NQ==", "bodyText": "Note that I'm not including the markFailed call here. Think we should include it here? Or possibly introduce a new retry metric?", "url": "https://github.com/apache/kafka/pull/9677#discussion_r534547385", "createdAt": "2020-12-02T23:15:55Z", "author": {"login": "mumrah"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -1406,10 +1429,13 @@ class Partition(val topicPartition: TopicPartition,\n         case Left(error: Errors) => error match {\n           case Errors.UNKNOWN_TOPIC_OR_PARTITION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since it doesn't know about this topic or partition. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.FENCED_LEADER_EPOCH =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since we sent an old leader epoch. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.INVALID_UPDATE_VERSION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState due to invalid zk version. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case _ =>\n             warn(s\"Controller failed to update ISR to $proposedIsrState due to unexpected $error. Retrying.\")\n             sendAlterIsrRequest(proposedIsrState)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdb23eb5d73b5928a5bbdc8fff7300ff27706199"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU3MTQzNA==", "bodyText": "Hmm, I think we should probably do it. If we hit some unexpected case which the broker can't get out of, we'd want the metric to show it.", "url": "https://github.com/apache/kafka/pull/9677#discussion_r534571434", "createdAt": "2020-12-03T00:18:42Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -1406,10 +1429,13 @@ class Partition(val topicPartition: TopicPartition,\n         case Left(error: Errors) => error match {\n           case Errors.UNKNOWN_TOPIC_OR_PARTITION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since it doesn't know about this topic or partition. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.FENCED_LEADER_EPOCH =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since we sent an old leader epoch. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.INVALID_UPDATE_VERSION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState due to invalid zk version. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case _ =>\n             warn(s\"Controller failed to update ISR to $proposedIsrState due to unexpected $error. Retrying.\")\n             sendAlterIsrRequest(proposedIsrState)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzM4NQ=="}, "originalCommit": {"oid": "fdb23eb5d73b5928a5bbdc8fff7300ff27706199"}, "originalPosition": 142}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTIxMDI3Mw==", "bodyText": "Sounds good", "url": "https://github.com/apache/kafka/pull/9677#discussion_r535210273", "createdAt": "2020-12-03T13:05:09Z", "author": {"login": "mumrah"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -1406,10 +1429,13 @@ class Partition(val topicPartition: TopicPartition,\n         case Left(error: Errors) => error match {\n           case Errors.UNKNOWN_TOPIC_OR_PARTITION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since it doesn't know about this topic or partition. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.FENCED_LEADER_EPOCH =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState since we sent an old leader epoch. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case Errors.INVALID_UPDATE_VERSION =>\n             debug(s\"Controller failed to update ISR to $proposedIsrState due to invalid zk version. Giving up.\")\n+            isrChangeMetrics.markFailed()\n           case _ =>\n             warn(s\"Controller failed to update ISR to $proposedIsrState due to unexpected $error. Retrying.\")\n             sendAlterIsrRequest(proposedIsrState)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDU0NzM4NQ=="}, "originalCommit": {"oid": "fdb23eb5d73b5928a5bbdc8fff7300ff27706199"}, "originalPosition": 142}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTQ1NDM1OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/cluster/Partition.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzo1MToxMFrOH-paXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxNzo1MToxMFrOH-paXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ1MjI1Mg==", "bodyText": "nit: now the block below is misaligned", "url": "https://github.com/apache/kafka/pull/9677#discussion_r535452252", "createdAt": "2020-12-03T17:51:10Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/cluster/Partition.scala", "diffHunk": "@@ -1403,7 +1426,9 @@ class Partition(val topicPartition: TopicPartition,\n       }\n \n       result match {\n-        case Left(error: Errors) => error match {\n+        case Left(error: Errors) =>\n+          isrChangeListener.markFailed()\n+          error match {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07700bc5071a01490173c84f5fdc6f55a1c6e515"}, "originalPosition": 154}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3653, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}