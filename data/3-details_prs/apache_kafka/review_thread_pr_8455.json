{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDk3MjU2", "number": 8455, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDowNDozOVrODwmwsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo1MTo0N1rOEEhg3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMjkzMjk2OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwMDowNDo0MFrOGDtOtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwNToyNjowMFrOGDxYkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzOTk1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.error(\n          \n          \n            \n                        log.warn(", "url": "https://github.com/apache/kafka/pull/8455#discussion_r406539959", "createdAt": "2020-04-10T00:04:40Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -379,6 +380,20 @@ private void logDeprecatedProperty(String propName, String propValue, String def\n         }\n     }\n \n+    private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {\n+        String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);\n+        String transformedPluginPath = originalsStrings().get(PLUGIN_PATH_CONFIG);\n+        if (!Objects.equals(rawPluginPath, transformedPluginPath)) {\n+            log.error(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9387144bffd9257df08c49aa8a177ee7fc5c451"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjU0Mzg3OQ==", "bodyText": "Yeah, I was torn here... on one hand, nothing's necessarily broken, no exceptions are thrown, and the worker won't fail to start up, so WARN does seem warranted. On the other hand, it's an unfortunate reality that the WARN level is heavily polluted by existing config warnings emitted when the framework creates Kafka clients and their unused configs get logged at that level, and it also seems highly unlikely that the worker would behave as expected in this case.\nI think if this were noticed from the first time it became an issue, it might even be reasonable to throw an exception and fail the worker on startup, but since we can't do that now without breaking backwards compatibility and opening that whole can of worms, ERROR level logging seemed like a decent substitute.\nThat's my thinking, if you're still convinced that WARN is better I'm happy to change it.", "url": "https://github.com/apache/kafka/pull/8455#discussion_r406543879", "createdAt": "2020-04-10T00:18:50Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -379,6 +380,20 @@ private void logDeprecatedProperty(String propName, String propValue, String def\n         }\n     }\n \n+    private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {\n+        String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);\n+        String transformedPluginPath = originalsStrings().get(PLUGIN_PATH_CONFIG);\n+        if (!Objects.equals(rawPluginPath, transformedPluginPath)) {\n+            log.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzOTk1OQ=="}, "originalCommit": {"oid": "f9387144bffd9257df08c49aa8a177ee7fc5c451"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwNzcwMQ==", "bodyText": "I think what you just described is precisely what I would consider something worthy of logging at WARN level. i.e. something went wrong and it is very likely that the application will behave in unexpected ways. ERROR level to me should be reserved for catastrophic failures that the application can not recover from. Something that would prevent the worker to start up, in this case. But, at the end of the day, everyone has their own interpretations and there is no right or wrong answer here.\nNow, WARN level being polluted by unused configs - that is something that should be considered a bug that we should fix separately, IMO.", "url": "https://github.com/apache/kafka/pull/8455#discussion_r406607701", "createdAt": "2020-04-10T05:24:22Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -379,6 +380,20 @@ private void logDeprecatedProperty(String propName, String propValue, String def\n         }\n     }\n \n+    private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {\n+        String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);\n+        String transformedPluginPath = originalsStrings().get(PLUGIN_PATH_CONFIG);\n+        if (!Objects.equals(rawPluginPath, transformedPluginPath)) {\n+            log.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzOTk1OQ=="}, "originalCommit": {"oid": "f9387144bffd9257df08c49aa8a177ee7fc5c451"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjYwODAxNg==", "bodyText": "Fair enough, will update accordingly :)", "url": "https://github.com/apache/kafka/pull/8455#discussion_r406608016", "createdAt": "2020-04-10T05:26:00Z", "author": {"login": "C0urante"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -379,6 +380,20 @@ private void logDeprecatedProperty(String propName, String propValue, String def\n         }\n     }\n \n+    private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {\n+        String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);\n+        String transformedPluginPath = originalsStrings().get(PLUGIN_PATH_CONFIG);\n+        if (!Objects.equals(rawPluginPath, transformedPluginPath)) {\n+            log.error(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjUzOTk1OQ=="}, "originalCommit": {"oid": "f9387144bffd9257df08c49aa8a177ee7fc5c451"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTc4MzEyOnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo0ODowNVrOGiMs2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo0ODowNVrOGiMs2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMjg1OQ==", "bodyText": "How about:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        + \"/opt/connectors\\n\" \n          \n          \n            \n                        + \"Warning: Config providers will not take effect if used for the value of this \" \n          \n          \n            \n                        + \"property, and instead the raw, non-transformed value will be used.\";\n          \n          \n            \n                        + \"/opt/connectors\\n\" \n          \n          \n            \n                        + \"Do not use config provider variables in this property, since the raw path is used \"\n          \n          \n            \n                        + \"by the worker's scanner before config providers are initialized and used to \"\n          \n          \n            \n                        + \"replace variables.\";", "url": "https://github.com/apache/kafka/pull/8455#discussion_r438512859", "createdAt": "2020-06-11T02:48:05Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -205,7 +206,9 @@\n             + \"plugins and their dependencies\\n\"\n             + \"Note: symlinks will be followed to discover dependencies or plugins.\\n\"\n             + \"Examples: plugin.path=/usr/local/share/java,/usr/local/share/kafka/plugins,\"\n-            + \"/opt/connectors\";\n+            + \"/opt/connectors\\n\" \n+            + \"Warning: Config providers will not take effect if used for the value of this \" \n+            + \"property, and instead the raw, non-transformed value will be used.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d8af18e03e17361d430727a8b44e3f7a4077af4"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMTc4ODQ3OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo1MTo0N1rOGiMwVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwMjo1MTo0N1rOGiMwVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODUxMzc0OA==", "bodyText": "How about:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            \"Config providers do not work with the plugin.path property. The raw value '{}' \" \n          \n          \n            \n                                + \"will be used for plugin scanning, as opposed to the transformed value '{}'. \" \n          \n          \n            \n                                + \"See https://issues.apache.org/jira/browse/KAFKA-9845 for more information.\",\n          \n          \n            \n                            \"Variables cannot be used in the 'plugin.path' property, since the property is \"\n          \n          \n            \n                            + \"used by plugin scanning before the config providers that replace the \" \n          \n          \n            \n                            + \"variables are initialized. The raw value '{}' was used for plugin scanning, as \" \n          \n          \n            \n                            + \"opposed to the transformed value '{}', and this may cause unexpected results.\",", "url": "https://github.com/apache/kafka/pull/8455#discussion_r438513748", "createdAt": "2020-06-11T02:51:47Z", "author": {"login": "rhauch"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/WorkerConfig.java", "diffHunk": "@@ -379,6 +382,22 @@ private void logDeprecatedProperty(String propName, String propValue, String def\n         }\n     }\n \n+    private void logPluginPathConfigProviderWarning(Map<String, String> rawOriginals) {\n+        String rawPluginPath = rawOriginals.get(PLUGIN_PATH_CONFIG);\n+        // Can't use AbstractConfig::originalsStrings here since some values may be null, which\n+        // causes that method to fail\n+        String transformedPluginPath = Objects.toString(originals().get(PLUGIN_PATH_CONFIG));\n+        if (!Objects.equals(rawPluginPath, transformedPluginPath)) {\n+            log.warn(\n+                \"Config providers do not work with the plugin.path property. The raw value '{}' \" \n+                    + \"will be used for plugin scanning, as opposed to the transformed value '{}'. \" \n+                    + \"See https://issues.apache.org/jira/browse/KAFKA-9845 for more information.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d8af18e03e17361d430727a8b44e3f7a4077af4"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2958, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}