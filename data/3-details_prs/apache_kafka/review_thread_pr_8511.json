{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1NDQ4MDk2", "number": 8511, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0OTo1OFrODz30OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDoxODozNFrOD-d_aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NzE4NDU2OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0OTo1OFrOGIiu1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxODo0OTo1OFrOGIiu1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTYxMDgzOQ==", "bodyText": "Nice test.", "url": "https://github.com/apache/kafka/pull/8511#discussion_r411610839", "createdAt": "2020-04-20T18:49:58Z", "author": {"login": "ncliang"}, "path": "connect/runtime/src/test/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImplTest.java", "diffHunk": "@@ -87,7 +88,13 @@ public Void answer() {\n             }\n         });\n         EasyMock.replay(herder);\n-        assertEquals(expectedConfig, connectClusterState.connectorConfig(connName));\n+        Map<String, String> actualConfig = connectClusterState.connectorConfig(connName);\n+        assertEquals(expectedConfig, actualConfig);\n+        assertNotSame(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDExNDU1OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowNDoyN1rOGX8bqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowNDoyN1rOGX8bqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MDU1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Map<String, String> result = connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n          \n          \n            \n                        return new HashMap<>(result);\n          \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););", "url": "https://github.com/apache/kafka/pull/8511#discussion_r427760552", "createdAt": "2020-05-20T06:04:27Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "diffHunk": "@@ -86,7 +86,8 @@ public ConnectorHealth connectorHealth(String connName) {\n         FutureCallback<Map<String, String>> connectorConfigCallback = new FutureCallback<>();\n         herder.connectorConfig(connName, connectorConfigCallback);\n         try {\n-            return connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            Map<String, String> result = connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            return new HashMap<>(result);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDEyMjY0OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowODoxN1rOGX8gkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwNjowODoxN1rOGX8gkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzc2MTgxMA==", "bodyText": "I like the improved text. But let's skip WARNING since it's not a tag we use in comments (such as TODO: for instance)", "url": "https://github.com/apache/kafka/pull/8511#discussion_r427761810", "createdAt": "2020-05-20T06:08:17Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/storage/KafkaConfigBackingStore.java", "diffHunk": "@@ -280,8 +280,8 @@ public void stop() {\n     @Override\n     public ClusterConfigState snapshot() {\n         synchronized (lock) {\n-            // Doing a shallow copy of the data is safe here because the complex nested data that is copied should all be\n-            // immutable configs\n+            // WARNING: Only a shallow copy is performed here; in order to avoid accidentally corrupting the worker's view", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d8d28adf87ff877d83c43609bbe609b0ff81a19"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2ODI5Njc1OnYy", "diffSide": "RIGHT", "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDoxODozNFrOGYlrdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNDoxODozNFrOGYlrdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQzNjM0Mg==", "bodyText": "My bad. My suggestion inserted a typo. At least I saw it before I start the build.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););\n          \n          \n            \n                        return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS));", "url": "https://github.com/apache/kafka/pull/8511#discussion_r428436342", "createdAt": "2020-05-21T04:18:34Z", "author": {"login": "kkonstantine"}, "path": "connect/runtime/src/main/java/org/apache/kafka/connect/runtime/health/ConnectClusterStateImpl.java", "diffHunk": "@@ -86,7 +86,7 @@ public ConnectorHealth connectorHealth(String connName) {\n         FutureCallback<Map<String, String>> connectorConfigCallback = new FutureCallback<>();\n         herder.connectorConfig(connName, connectorConfigCallback);\n         try {\n-            return connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS);\n+            return new HashMap<>(connectorConfigCallback.get(herderRequestTimeoutMs, TimeUnit.MILLISECONDS););", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e6e8f9ce49859173d5eb047a222483f4d730f08a"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3040, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}