{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDU2ODg3", "number": 9720, "title": "KAFKA-10555: Improve client state machine", "bodyText": "Removes the transition to error for when there are no threads and makes Error terminal\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-12-09T20:52:06Z", "url": "https://github.com/apache/kafka/pull/9720", "merged": true, "mergeCommit": {"oid": "647c609cef3914f7cf2923314c4e99714d86ca25"}, "closed": true, "closedAt": "2021-01-26T19:43:50Z", "author": {"login": "wcarlson5"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdk8QGgAFqTU0OTU4NjMyMw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdycdzygH2gAyNTM1NDU2ODg3OmUyMzViNjJmNjdmZDFiMmFiMjMyMzc1MGY3NDhlMjhhZDg3ZjlhOTg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ5NTg2MzIz", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-549586323", "createdAt": "2020-12-10T20:44:14Z", "commit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "state": "COMMENTED", "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMDo0NDoxNFrOIDcgmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQyMzo0MTo0MVrOIDihjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4MzczNw==", "bodyText": "This will not be needed with the new error definition", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540483737", "createdAt": "2020-12-10T20:44:14Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -532,22 +537,6 @@ public void setGlobalStateRestoreListener(final StateRestoreListener globalState\n             this.threadStatesLock = new Object();\n         }\n \n-        /**\n-         * If all threads are dead set to ERROR\n-         */\n-        private void maybeSetError() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NDM0MQ==", "bodyText": "we will be doing the same thing but closing the client for now. Maybe a replace globalThread will be added later", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540484341", "createdAt": "2020-12-10T20:45:13Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -594,9 +581,8 @@ public synchronized void onChange(final Thread thread,\n                     if (newState == GlobalStreamThread.State.RUNNING) {\n                         maybeSetRunning();\n                     } else if (newState == GlobalStreamThread.State.DEAD) {\n-                        if (setState(State.ERROR)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjA5OA==", "bodyText": "We want to make close() idempotent and not throw an exception but we will log a warning, but only for close so that is why these logs are not in the setState() method.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540486098", "createdAt": "2020-12-10T20:48:17Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -1142,11 +1128,21 @@ private Thread shutdownHelper(final boolean error) {\n             metrics.close();\n             if (!error) {\n                 setState(State.NOT_RUNNING);\n+            } else {\n+                setState(State.ERROR);\n             }\n         }, \"kafka-streams-close-thread\");\n     }\n \n     private boolean close(final long timeoutMs) {\n+        if (state == State.ERROR) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjM5OA==", "bodyText": "This will let Streams shutdown uncleanly when in EOS mode", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540486398", "createdAt": "2020-12-10T20:48:50Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -546,7 +546,7 @@ public void run() {\n      * @throws IllegalStateException If store gets registered after initialized is already finished\n      * @throws StreamsException      if the store's change log does not contain the partition\n      */\n-    void runLoop() {\n+    boolean runLoop() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4NjU1OQ==", "bodyText": "This test is for the functionality we are removing", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540486559", "createdAt": "2020-12-10T20:49:10Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -418,70 +418,6 @@ public void stateShouldTransitToRunningIfNonDeadThreadsBackToRunning() throws In\n         Assert.assertEquals(KafkaStreams.State.NOT_RUNNING, streams.state());\n     }\n \n-    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ4OTk5Nw==", "bodyText": "removing stream threads does not put the client in error anymore. The global does", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540489997", "createdAt": "2020-12-10T20:55:09Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -625,8 +561,7 @@ public void shouldNotAddThreadWhenError() {\n         final KafkaStreams streams = new KafkaStreams(getBuilderWithSource().build(), props, supplier, time);\n         final int oldSize = streams.threads.size();\n         streams.start();\n-        streamThreadOne.shutdown();\n-        streamThreadTwo.shutdown();\n+        globalStreamThread.shutdown();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aed6ce1b8bfd42f0905f44352937cfdc54e29de0"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDE3NQ==", "bodyText": "There is no transition to Error here anymore", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540494175", "createdAt": "2020-12-10T21:02:27Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -524,9 +460,6 @@ public void testStateThreadClose() throws Exception {\n                     \"Thread never stopped.\");\n                 streams.threads.get(i).join();\n             }\n-            TestUtils.waitForCondition(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3772bf41fd473f9c8dd72adbd2917731b5c4717c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDc0Mg==", "bodyText": "remove deprecation", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540494742", "createdAt": "2020-12-10T21:03:26Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EOSUncleanShutdownIntegrationTest.java", "diffHunk": "@@ -99,7 +99,6 @@ public static void setupConfigsAndUtils() {\n     }\n \n     @Test\n-    @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3772bf41fd473f9c8dd72adbd2917731b5c4717c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDA3Nw==", "bodyText": "Just wait for ERROR because you don't close crashed", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540580077", "createdAt": "2020-12-10T23:36:11Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -411,7 +405,8 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 errorInjectedClient1.set(false);\n                 stateTransitions1.clear();\n                 streams1Alpha.close();\n-                waitForStateTransition(stateTransitions1, CLOSE_CRASHED);\n+                final KafkaStreams finalStreams1Alpha = streams1Alpha;\n+                waitForCondition(() -> finalStreams1Alpha.state() == State.ERROR, \"Stream did not go to ERROR\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDIzNQ==", "bodyText": "No longer do you need to close crashed", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540580235", "createdAt": "2020-12-10T23:36:33Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -526,12 +521,10 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n \n-                waitForStateTransition(stateTransitions2, CRASH);\n-\n                 commitErrorInjectedClient2.set(false);\n                 stateTransitions2.clear();\n                 streams2Alpha.close();\n-                waitForStateTransition(stateTransitions2, CLOSE_CRASHED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDU3MQ==", "bodyText": "remove deprecated handler", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540580571", "createdAt": "2020-12-10T23:37:15Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java", "diffHunk": "@@ -174,8 +177,8 @@ private KafkaStreams buildStreamWithDirtyStateDir(final String stateDirPath,\n     }\n \n     @Test\n-    @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDg0Nw==", "bodyText": "There was a problem with the cleaner thread sometimes wiping out old segments because they were expired", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540580847", "createdAt": "2020-12-10T23:38:00Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java", "diffHunk": "@@ -174,8 +177,8 @@ private KafkaStreams buildStreamWithDirtyStateDir(final String stateDirPath,\n     }\n \n     @Test\n-    @Deprecated\n     public void shouldWipeOutStandbyStateDirectoryIfCheckpointIsMissing() throws Exception {\n+        final long time = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MjI4Ng==", "bodyText": "When the client is shutdown it now goes to ERROR", "url": "https://github.com/apache/kafka/pull/9720#discussion_r540582286", "createdAt": "2020-12-10T23:41:41Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StreamsUncaughtExceptionHandlerIntegrationTest.java", "diffHunk": "@@ -139,7 +139,7 @@ public void shouldShutdownClient() throws InterruptedException {\n             StreamsTestUtils.startKafkaStreamsAndWaitForRunningState(kafkaStreams);\n \n             produceMessages(0L, inputTopic, \"A\");\n-            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.NOT_RUNNING, DEFAULT_DURATION);\n+            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.ERROR, DEFAULT_DURATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDE1NDA0", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557415404", "createdAt": "2020-12-22T23:03:09Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzowMzowOVrOIKLscw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzowMzowOVrOIKLscw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU0ODI3NQ==", "bodyText": "super nit: fix indention of comment\nAlso please update the state diagram in the comment above.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547548275", "createdAt": "2020-12-22T23:03:09Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -226,7 +226,8 @@\n         RUNNING(1, 2, 3, 5),    // 2\n         PENDING_SHUTDOWN(4),    // 3\n         NOT_RUNNING,            // 4\n-        ERROR(3);               // 5\n+        PENDING_ERROR(6),       // 5\n+        ERROR;               // 6", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDI0Njc2", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557424676", "createdAt": "2020-12-22T23:29:34Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyOTozNFrOIKMLVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzoyOTozNFrOIKMLVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NjE4MA==", "bodyText": "Should we return true there? I understand that we are not in NOT_RUNNING state, but in the end we are in a terminal state and we did cleanup all resources. -- I guess, I am raising the question if we should relax the definition of this return value?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547556180", "createdAt": "2020-12-22T23:29:34Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -1165,11 +1151,21 @@ private Thread shutdownHelper(final boolean error) {\n             metrics.close();\n             if (!error) {\n                 setState(State.NOT_RUNNING);\n+            } else {\n+                setState(State.ERROR);\n             }\n         }, \"kafka-streams-close-thread\");\n     }\n \n     private boolean close(final long timeoutMs) {\n+        if (state == State.ERROR) {\n+            log.info(\"Streams client is already in the terminal state ERROR, all resources are closed and the client has stopped.\");\n+            return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 109}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDMyODI0", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557432824", "createdAt": "2020-12-22T23:58:42Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzo1ODo0MlrOIKMpjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzo1ODo0MlrOIKMpjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2MzkxNw==", "bodyText": "If the global thread dies, should we not transit to ERROR at the end?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547563917", "createdAt": "2020-12-22T23:58:42Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -557,12 +490,12 @@ public void testStateGlobalThreadClose() throws Exception {\n                 () -> globalStreamThread.state() == GlobalStreamThread.State.DEAD,\n                 \"Thread never stopped.\");\n             globalStreamThread.join();\n-            assertEquals(streams.state(), KafkaStreams.State.ERROR);\n+            assertEquals(streams.state(), KafkaStreams.State.PENDING_ERROR);\n         } finally {\n             streams.close();\n         }\n \n-        assertEquals(streams.state(), KafkaStreams.State.NOT_RUNNING);\n+        assertEquals(streams.state(), KafkaStreams.State.PENDING_ERROR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDMzNTkz", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557433593", "createdAt": "2020-12-23T00:01:36Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowMTozNlrOIKMsJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowMTozNlrOIKMsJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NDU4MA==", "bodyText": "Why not just change this from CLOSE_CRASHED to CRASH ?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547564580", "createdAt": "2020-12-23T00:01:36Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -388,7 +382,8 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 errorInjectedClient1.set(false);\n                 stateTransitions1.clear();\n                 streams1Alpha.close();\n-                waitForStateTransition(stateTransitions1, CLOSE_CRASHED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDMzOTMx", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557433931", "createdAt": "2020-12-23T00:02:50Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowMjo1MFrOIKMtPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowMjo1MFrOIKMtPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NDg2Mg==", "bodyText": "Should we extend it to have two state transitions, RUNNING -> PENDING_ERROR and PENDING_ERROR -> ERROR ?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547564862", "createdAt": "2020-12-23T00:02:50Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -113,14 +114,7 @@\n     private static final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> CRASH =\n         Collections.unmodifiableList(\n             Collections.singletonList(\n-                KeyValue.pair(KafkaStreams.State.RUNNING, KafkaStreams.State.ERROR)\n-            )\n-        );\n-    private static final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> CLOSE_CRASHED =\n-        Collections.unmodifiableList(\n-            Arrays.asList(\n-                KeyValue.pair(KafkaStreams.State.ERROR, KafkaStreams.State.PENDING_SHUTDOWN),\n-                KeyValue.pair(KafkaStreams.State.PENDING_SHUTDOWN, KafkaStreams.State.NOT_RUNNING)\n+                KeyValue.pair(KafkaStreams.State.RUNNING, State.PENDING_ERROR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM0NzMy", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557434732", "createdAt": "2020-12-23T00:05:55Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowNTo1NVrOIKMwLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowNTo1NVrOIKMwLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NTYxNQ==", "bodyText": "Why do we remove this? If the fail, we should transit to PENDING_ERROR state first, and only afterwards move forward with the test.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547565615", "createdAt": "2020-12-23T00:05:55Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -521,12 +516,10 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n \n-                waitForStateTransition(stateTransitions2, CRASH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM1NzA5", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557435709", "createdAt": "2020-12-23T00:09:53Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowOTo1M1rOIKM0Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowOTo1M1rOIKM0Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NjU5OQ==", "bodyText": "As above", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547566599", "createdAt": "2020-12-23T00:09:53Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -611,12 +604,11 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 verifyUncommitted(expectedUncommittedResult);\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n-                waitForStateTransition(stateTransitions1, CRASH);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM1NzM3", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557435737", "createdAt": "2020-12-23T00:09:59Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowOTo1OVrOIKM0Gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDowOTo1OVrOIKM0Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NjYxOA==", "bodyText": "As above", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547566618", "createdAt": "2020-12-23T00:09:59Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -611,12 +604,11 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 verifyUncommitted(expectedUncommittedResult);\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n-                waitForStateTransition(stateTransitions1, CRASH);\n \n                 commitErrorInjectedClient1.set(false);\n                 stateTransitions1.clear();\n                 streams1Beta.close();\n-                waitForStateTransition(stateTransitions1, CLOSE_CRASHED);\n+                waitForStateTransition(stateTransitions1, CLOSE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM1Nzk3", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557435797", "createdAt": "2020-12-23T00:10:11Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxMDoxMVrOIKM0Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxMDoxMVrOIKM0Rw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NjY2Mw==", "bodyText": "As above", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547566663", "createdAt": "2020-12-23T00:10:11Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -737,7 +729,7 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n                 errorInjectedClient2.set(false);\n                 stateTransitions2.clear();\n                 streams2AlphaTwo.close();\n-                waitForStateTransition(stateTransitions2, CLOSE_CRASHED);\n+                waitForStateTransition(stateTransitions2, CLOSE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 67}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM2NzA5", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557436709", "createdAt": "2020-12-23T00:13:51Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxMzo1MVrOIKM3ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxMzo1MVrOIKM3ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NzUxOA==", "bodyText": "Should we add a metric check to verify that the thread count is zero?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547567518", "createdAt": "2020-12-23T00:13:51Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StreamsUncaughtExceptionHandlerIntegrationTest.java", "diffHunk": "@@ -128,8 +128,8 @@ public void shouldShutdownThreadUsingOldHandler() throws InterruptedException {\n             TestUtils.waitForCondition(() -> counter.get() == 1, \"Handler was called 1st time\");\n             // should call the UncaughtExceptionHandler after rebalancing to another thread\n             TestUtils.waitForCondition(() -> counter.get() == 2, DEFAULT_DURATION.toMillis(), \"Handler was called 2nd time\");\n-            // the stream should now turn into ERROR state after 2 threads are dead\n-            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.ERROR, DEFAULT_DURATION);\n+            // there is no threads running but the client is still in running\n+            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.RUNNING, DEFAULT_DURATION);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM3MjMw", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557437230", "createdAt": "2020-12-23T00:15:41Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxNTo0MVrOIKM5kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMDoxNTo0MVrOIKM5kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2ODAxOQ==", "bodyText": "Nit: the error message is weird -> Streams didn't transit to ERROR state.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r547568019", "createdAt": "2020-12-23T00:15:41Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/SuppressionIntegrationTest.java", "diffHunk": "@@ -526,6 +526,6 @@ private static void produceSynchronously(final String topic, final List<KeyValue\n \n     private static void verifyErrorShutdown(final KafkaStreams driver) throws InterruptedException {\n         waitForCondition(() -> !driver.state().isRunningOrRebalancing(), DEFAULT_TIMEOUT, \"Streams didn't shut down.\");\n-        assertThat(driver.state(), is(KafkaStreams.State.PENDING_SHUTDOWN));\n+        waitForCondition(() -> driver.state() == KafkaStreams.State.ERROR, \"finish shutdown\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU3NDM3Mzc0", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-557437374", "createdAt": "2020-12-23T00:16:19Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMTcwODAz", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-561170803", "createdAt": "2021-01-04T16:38:15Z", "commit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNjozODoxNlrOIN4lnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzo0NTowMlrOIN65Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQyOTUzNQ==", "bodyText": "yay ascii art! good catch I forgot about that\nWhen I build the docs locally it looks about right", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551429535", "createdAt": "2021-01-04T16:38:16Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -226,7 +226,8 @@\n         RUNNING(1, 2, 3, 5),    // 2\n         PENDING_SHUTDOWN(4),    // 3\n         NOT_RUNNING,            // 4\n-        ERROR(3);               // 5\n+        PENDING_ERROR(6),       // 5\n+        ERROR;               // 6", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU0ODI3NQ=="}, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ0NTQxOQ==", "bodyText": "I don't think that we should return true. A user would then expect that that the state would then change to NOT_RUNNING and could be stuck waiting on that. Where if we return false in then they might retry and get stuck there.\nI don't know which is a better problem to have but I think that changing the meaning of this return value won't add any more clarity to the situation.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551445419", "createdAt": "2021-01-04T17:03:52Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -1165,11 +1151,21 @@ private Thread shutdownHelper(final boolean error) {\n             metrics.close();\n             if (!error) {\n                 setState(State.NOT_RUNNING);\n+            } else {\n+                setState(State.ERROR);\n             }\n         }, \"kafka-streams-close-thread\");\n     }\n \n     private boolean close(final long timeoutMs) {\n+        if (state == State.ERROR) {\n+            log.info(\"Streams client is already in the terminal state ERROR, all resources are closed and the client has stopped.\");\n+            return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NjE4MA=="}, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 109}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1ODQ2Nw==", "bodyText": "It will. We don't strictly need to test it here as that is tested elsewhere but we can add it for clarity", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551458467", "createdAt": "2021-01-04T17:27:21Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -557,12 +490,12 @@ public void testStateGlobalThreadClose() throws Exception {\n                 () -> globalStreamThread.state() == GlobalStreamThread.State.DEAD,\n                 \"Thread never stopped.\");\n             globalStreamThread.join();\n-            assertEquals(streams.state(), KafkaStreams.State.ERROR);\n+            assertEquals(streams.state(), KafkaStreams.State.PENDING_ERROR);\n         } finally {\n             streams.close();\n         }\n \n-        assertEquals(streams.state(), KafkaStreams.State.NOT_RUNNING);\n+        assertEquals(streams.state(), KafkaStreams.State.PENDING_ERROR);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2MzkxNw=="}, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1ODU1OA==", "bodyText": "thats probably a good idea", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551458558", "createdAt": "2021-01-04T17:27:32Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/KafkaStreamsTest.java", "diffHunk": "@@ -524,9 +460,6 @@ public void testStateThreadClose() throws Exception {\n                     \"Thread never stopped.\");\n                 streams.threads.get(i).join();\n             }\n-            TestUtils.waitForCondition(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDE3NQ=="}, "originalCommit": {"oid": "3772bf41fd473f9c8dd72adbd2917731b5c4717c"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ1OTg4MA==", "bodyText": "It made it so that the new default was not used until we updated the Error transition as we are doing in this PR. :)", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551459880", "createdAt": "2021-01-04T17:30:06Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EOSUncleanShutdownIntegrationTest.java", "diffHunk": "@@ -99,7 +99,6 @@ public static void setupConfigsAndUtils() {\n     }\n \n     @Test\n-    @SuppressWarnings(\"deprecation\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDQ5NDc0Mg=="}, "originalCommit": {"oid": "3772bf41fd473f9c8dd72adbd2917731b5c4717c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NDMzMg==", "bodyText": "My thoughts where that we are calling close and so its is going to just be closed as the state transitions are cleared. This is the test that made me want you to review the PR I was worried that I might have broken the integrity of the tests as it is not behaving as I expected. However no other test was having this problem so I was not sure if I was understanding it correctly.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551464332", "createdAt": "2021-01-04T17:38:57Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -526,12 +521,10 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n \n-                waitForStateTransition(stateTransitions2, CRASH);\n-\n                 commitErrorInjectedClient2.set(false);\n                 stateTransitions2.clear();\n                 streams2Alpha.close();\n-                waitForStateTransition(stateTransitions2, CLOSE_CRASHED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDIzNQ=="}, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NjI0NA==", "bodyText": "My theory (based on logs) is that the cleaner thread was sometimes activating and removing the segment before it should so the record that makes the thread crash was not being consumed by the recovery thread sometimes. I just changed the time stamps so that the cleaner thread would not find them old and if it did activate it would not clean them.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551466244", "createdAt": "2021-01-04T17:42:53Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java", "diffHunk": "@@ -174,8 +177,8 @@ private KafkaStreams buildStreamWithDirtyStateDir(final String stateDirPath,\n     }\n \n     @Test\n-    @Deprecated\n     public void shouldWipeOutStandbyStateDirectoryIfCheckpointIsMissing() throws Exception {\n+        final long time = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDg0Nw=="}, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NzI4Ng==", "bodyText": "We can but we should be able to see that with counter that the 2 threads already failed", "url": "https://github.com/apache/kafka/pull/9720#discussion_r551467286", "createdAt": "2021-01-04T17:45:02Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StreamsUncaughtExceptionHandlerIntegrationTest.java", "diffHunk": "@@ -128,8 +128,8 @@ public void shouldShutdownThreadUsingOldHandler() throws InterruptedException {\n             TestUtils.waitForCondition(() -> counter.get() == 1, \"Handler was called 1st time\");\n             // should call the UncaughtExceptionHandler after rebalancing to another thread\n             TestUtils.waitForCondition(() -> counter.get() == 2, DEFAULT_DURATION.toMillis(), \"Handler was called 2nd time\");\n-            // the stream should now turn into ERROR state after 2 threads are dead\n-            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.ERROR, DEFAULT_DURATION);\n+            // there is no threads running but the client is still in running\n+            waitForApplicationState(Collections.singletonList(kafkaStreams), KafkaStreams.State.RUNNING, DEFAULT_DURATION);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU2NzUxOA=="}, "originalCommit": {"oid": "3c75523873452f76180190deeb6f9d65a3c17651"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzMTE2MDA5", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-563116009", "createdAt": "2021-01-07T00:02:19Z", "commit": {"oid": "f4e91dc3741944e779cac5723929b0370ac1d6f4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDowMjoxOVrOIPaBrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QwMDowMjoxOVrOIPaBrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNTk2NA==", "bodyText": "I thought we always need to call close? If an error happens, we call the handler, and if the handler return shutdown, we transit to PENDING_ERROR. On close() we transit from PENDING_ERROR -> ERROR?\nOr do I have some misconception?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r553025964", "createdAt": "2021-01-07T00:02:19Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -201,32 +201,33 @@\n      *         |              |                  |\n      *         |              v                  |\n      *         |       +------+-------+     +----+-------+\n-     *         +-----&gt; | Pending      |&lt;--- | Error (5)  |\n-     *                 | Shutdown (3) |     +------------+\n-     *                 +------+-------+\n-     *                        |\n-     *                        v\n-     *                 +------+-------+\n-     *                 | Not          |\n-     *                 | Running (4)  |\n+     *         +-----&gt; | Pending      |     | Pending    |\n+     *                 | Shutdown (3) |     | Error (5)  |\n+     *                 +------+-------+     +-----+------+\n+     *                        |                   |\n+     *                        v                   v\n+     *                 +------+-------+     +-----+--------+\n+     *                 | Not          |     | Error (6)    |\n+     *                 | Running (4)  |     +--------------+\n      *                 +--------------+\n      *\n      *\n      * </pre>\n      * Note the following:\n      * - RUNNING state will transit to REBALANCING if any of its threads is in PARTITION_REVOKED or PARTITIONS_ASSIGNED state\n      * - REBALANCING state will transit to RUNNING if all of its threads are in RUNNING state\n-     * - Any state except NOT_RUNNING can go to PENDING_SHUTDOWN (whenever close is called)\n+     * - Any state except NOT_RUNNING, PENDING_ERROR or ERROR can go to PENDING_SHUTDOWN (whenever close is called)\n      * - Of special importance: If the global stream thread dies, or all stream threads die (or both) then\n-     *   the instance will be in the ERROR state. The user will need to close it.\n+     *   the instance will be in the ERROR state. The user will not need to close it.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4e91dc3741944e779cac5723929b0370ac1d6f4"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzODU0MzI0", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-563854324", "createdAt": "2021-01-07T21:52:36Z", "commit": {"oid": "f4e91dc3741944e779cac5723929b0370ac1d6f4"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMTo1MjozNlrOIP9y4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QyMTo1OTo0NlrOIP9_qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYxMjAwMA==", "bodyText": "the handler will call close, but the user will not need to. The PENDING_ERROR state is indicating the resources are closing before the transition to ERROR after which no more work will be done. We made it so the user can call close on PENDING_ERROR or ERROR but it will only log a warning", "url": "https://github.com/apache/kafka/pull/9720#discussion_r553612000", "createdAt": "2021-01-07T21:52:36Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -201,32 +201,33 @@\n      *         |              |                  |\n      *         |              v                  |\n      *         |       +------+-------+     +----+-------+\n-     *         +-----&gt; | Pending      |&lt;--- | Error (5)  |\n-     *                 | Shutdown (3) |     +------------+\n-     *                 +------+-------+\n-     *                        |\n-     *                        v\n-     *                 +------+-------+\n-     *                 | Not          |\n-     *                 | Running (4)  |\n+     *         +-----&gt; | Pending      |     | Pending    |\n+     *                 | Shutdown (3) |     | Error (5)  |\n+     *                 +------+-------+     +-----+------+\n+     *                        |                   |\n+     *                        v                   v\n+     *                 +------+-------+     +-----+--------+\n+     *                 | Not          |     | Error (6)    |\n+     *                 | Running (4)  |     +--------------+\n      *                 +--------------+\n      *\n      *\n      * </pre>\n      * Note the following:\n      * - RUNNING state will transit to REBALANCING if any of its threads is in PARTITION_REVOKED or PARTITIONS_ASSIGNED state\n      * - REBALANCING state will transit to RUNNING if all of its threads are in RUNNING state\n-     * - Any state except NOT_RUNNING can go to PENDING_SHUTDOWN (whenever close is called)\n+     * - Any state except NOT_RUNNING, PENDING_ERROR or ERROR can go to PENDING_SHUTDOWN (whenever close is called)\n      * - Of special importance: If the global stream thread dies, or all stream threads die (or both) then\n-     *   the instance will be in the ERROR state. The user will need to close it.\n+     *   the instance will be in the ERROR state. The user will not need to close it.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzAyNTk2NA=="}, "originalCommit": {"oid": "f4e91dc3741944e779cac5723929b0370ac1d6f4"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYxMzY5OQ==", "bodyText": "the call to close() will have no effect. The PENDING_ERROR -> ERROR transition is like the PENDING_SHUTDOWN -> NOT_RUNNING  where the transition from the PENDING... state is automatic", "url": "https://github.com/apache/kafka/pull/9720#discussion_r553613699", "createdAt": "2021-01-07T21:56:20Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -526,12 +521,10 @@ public void shouldUpgradeFromEosAlphaToEosBeta() throws Exception {\n \n                 assignmentListener.waitForNextStableAssignment(MAX_WAIT_TIME_MS);\n \n-                waitForStateTransition(stateTransitions2, CRASH);\n-\n                 commitErrorInjectedClient2.set(false);\n                 stateTransitions2.clear();\n                 streams2Alpha.close();\n-                waitForStateTransition(stateTransitions2, CLOSE_CRASHED);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDIzNQ=="}, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzYxNTI3Mg==", "bodyText": "Maybe we will. It doesn't seems to be a problem for the other branches but something with how the test changes in this PR exposed it. This happened in the handler int tests too. I think as long as the other tests don't change it won't be a problem and if those tests change we can fix it then.\nBut if you think it should be fixed in the other branches anyways I'll trust your judgement.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r553615272", "createdAt": "2021-01-07T21:59:46Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java", "diffHunk": "@@ -174,8 +177,8 @@ private KafkaStreams buildStreamWithDirtyStateDir(final String stateDirPath,\n     }\n \n     @Test\n-    @Deprecated\n     public void shouldWipeOutStandbyStateDirectoryIfCheckpointIsMissing() throws Exception {\n+        final long time = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDg0Nw=="}, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7412f83e29251fa1bc44e7931c8d9fe0c565a79", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/c7412f83e29251fa1bc44e7931c8d9fe0c565a79", "committedDate": "2021-01-19T19:15:32Z", "message": "init commit, one test is still failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42aa534515309ee728e4c5019668673c8be6a364", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/42aa534515309ee728e4c5019668673c8be6a364", "committedDate": "2021-01-19T19:15:32Z", "message": "debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c3e014d30b40d7658fe8253d43d7fb3088354e3", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/7c3e014d30b40d7658fe8253d43d7fb3088354e3", "committedDate": "2021-01-19T19:15:32Z", "message": "fix state store wipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae8ea329e0302621f1085435d18e4ebcb60750a0", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/ae8ea329e0302621f1085435d18e4ebcb60750a0", "committedDate": "2021-01-19T19:15:32Z", "message": "undo dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9aff9a7564156cbd77fdffc2610a90ac6ef5cd41", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/9aff9a7564156cbd77fdffc2610a90ac6ef5cd41", "committedDate": "2021-01-19T21:51:04Z", "message": "undo dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "836e9aeadc1b865452f2f7ed8312b5aaf7db5683", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/836e9aeadc1b865452f2f7ed8312b5aaf7db5683", "committedDate": "2021-01-19T21:51:04Z", "message": "quick fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "280dab10ec1e0b66af9ebcc7d6c80325cd5c0959", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/280dab10ec1e0b66af9ebcc7d6c80325cd5c0959", "committedDate": "2021-01-19T21:51:04Z", "message": "rebase replace thread so global threads close correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e0b5659b5dd6a61e45fe47c8401bd6ed6408850", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/4e0b5659b5dd6a61e45fe47c8401bd6ed6408850", "committedDate": "2021-01-19T21:51:04Z", "message": "init commit, one test is still failing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5f73045da8a02d287bceb4d8b5deee96e96fe03b", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/5f73045da8a02d287bceb4d8b5deee96e96fe03b", "committedDate": "2021-01-19T21:51:04Z", "message": "debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b6bb08aafaf73edee5bc420d924b69aab76281", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/e1b6bb08aafaf73edee5bc420d924b69aab76281", "committedDate": "2021-01-19T21:51:04Z", "message": "fix state store wipe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "468a0a62d49a51ed71887bb349913fefb64fa55a", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/468a0a62d49a51ed71887bb349913fefb64fa55a", "committedDate": "2021-01-19T21:51:04Z", "message": "undo dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "960365970af371dcff7cc08dfdc68ea7654ef496", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/960365970af371dcff7cc08dfdc68ea7654ef496", "committedDate": "2021-01-19T21:51:04Z", "message": "undo dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0304647545c089b9572700625679a9461fee194b", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/0304647545c089b9572700625679a9461fee194b", "committedDate": "2021-01-19T21:51:04Z", "message": "quick fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0a51d94ac65d4218572185c8c6d1cb44d755344", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/a0a51d94ac65d4218572185c8c6d1cb44d755344", "committedDate": "2021-01-19T21:51:04Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "35241f4494836fc30c01795322a053b0735ccaf7", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/35241f4494836fc30c01795322a053b0735ccaf7", "committedDate": "2021-01-19T21:55:40Z", "message": "returned checks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8078e962ba05d37251d11c0960df223fdfa24cfd", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/8078e962ba05d37251d11c0960df223fdfa24cfd", "committedDate": "2021-01-19T22:08:54Z", "message": "update fail msg"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcxNzAzMjI4", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-571703228", "createdAt": "2021-01-19T22:10:06Z", "commit": {"oid": "35241f4494836fc30c01795322a053b0735ccaf7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMjoxMDowN1rOIWkBiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOVQyMjoxMDowN1rOIWkBiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MDUyOTgwMw==", "bodyText": "Using just PENDING_ERROR -> ERROR because the transition to PENDING_ERROR can be from multiple sources. Also that transition is already tested so this check implies it", "url": "https://github.com/apache/kafka/pull/9720#discussion_r560529803", "createdAt": "2021-01-19T22:10:07Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -113,14 +114,7 @@\n     private static final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> CRASH =\n         Collections.unmodifiableList(\n             Collections.singletonList(\n-                KeyValue.pair(KafkaStreams.State.RUNNING, KafkaStreams.State.ERROR)\n-            )\n-        );\n-    private static final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> CLOSE_CRASHED =\n-        Collections.unmodifiableList(\n-            Arrays.asList(\n-                KeyValue.pair(KafkaStreams.State.ERROR, KafkaStreams.State.PENDING_SHUTDOWN),\n-                KeyValue.pair(KafkaStreams.State.PENDING_SHUTDOWN, KafkaStreams.State.NOT_RUNNING)\n+                KeyValue.pair(State.PENDING_ERROR, State.ERROR)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35241f4494836fc30c01795322a053b0735ccaf7"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de99a7c297143372eccfc35bc48752d2bfbd2e8f", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/de99a7c297143372eccfc35bc48752d2bfbd2e8f", "committedDate": "2021-01-19T22:11:09Z", "message": "update fail msg"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93beb2f2437365270c5526946d51e3bb4961dd9c", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/93beb2f2437365270c5526946d51e3bb4961dd9c", "committedDate": "2021-01-21T17:45:15Z", "message": "close semantics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNzQwNzY5", "url": "https://github.com/apache/kafka/pull/9720#pullrequestreview-573740769", "createdAt": "2021-01-21T21:14:11Z", "commit": {"oid": "93beb2f2437365270c5526946d51e3bb4961dd9c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMToxNDoxMlrOIYKBOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQyMToxODoyMVrOIYKKWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjIwMDg5MQ==", "bodyText": "Why this change? We do wait for RUNNING?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r562200891", "createdAt": "2021-01-21T21:14:12Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -978,7 +971,7 @@ private void waitForRunning(final List<KeyValue<KafkaStreams.State, KafkaStreams\n         waitForCondition(\n             () -> !observed.isEmpty() && observed.get(observed.size() - 1).value.equals(State.RUNNING),\n             MAX_WAIT_TIME_MS,\n-            () -> \"Client did not startup on time. Observers transitions: \" + observed\n+            () -> \"Client did not have the expected state transition on time. Observers transitions: \" + observed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93beb2f2437365270c5526946d51e3bb4961dd9c"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjIwMTAwMg==", "bodyText": "nit: fix indention", "url": "https://github.com/apache/kafka/pull/9720#discussion_r562201002", "createdAt": "2021-01-21T21:14:23Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -993,6 +986,17 @@ private void waitForStateTransition(final List<KeyValue<KafkaStreams.State, Kafk\n         );\n     }\n \n+    private void waitForStateTransitionContains(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed,\n+                                        final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> expected)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93beb2f2437365270c5526946d51e3bb4961dd9c"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjIwMTM2Ng==", "bodyText": "Can we add the expected transitions, too? Easier to debug if the test fails.", "url": "https://github.com/apache/kafka/pull/9720#discussion_r562201366", "createdAt": "2021-01-21T21:15:05Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/EosBetaUpgradeIntegrationTest.java", "diffHunk": "@@ -993,6 +986,17 @@ private void waitForStateTransition(final List<KeyValue<KafkaStreams.State, Kafk\n         );\n     }\n \n+    private void waitForStateTransitionContains(final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> observed,\n+                                        final List<KeyValue<KafkaStreams.State, KafkaStreams.State>> expected)\n+            throws Exception {\n+\n+        waitForCondition(\n+            () -> observed.containsAll(expected),\n+            MAX_WAIT_TIME_MS,\n+            () -> \"Client did not have the expected state transition on time. Observers transitions: \" + observed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93beb2f2437365270c5526946d51e3bb4961dd9c"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjIwMzIyNg==", "bodyText": "The PR you liked seems to be unrelated to this test.\nStill wondering if we should extract this change to a dedicated PR and cherry-pick to older branches? -- Or do we have a good explanation why older branches would not be affected?", "url": "https://github.com/apache/kafka/pull/9720#discussion_r562203226", "createdAt": "2021-01-21T21:18:21Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/StandbyTaskEOSIntegrationTest.java", "diffHunk": "@@ -174,8 +177,8 @@ private KafkaStreams buildStreamWithDirtyStateDir(final String stateDirPath,\n     }\n \n     @Test\n-    @Deprecated\n     public void shouldWipeOutStandbyStateDirectoryIfCheckpointIsMissing() throws Exception {\n+        final long time = System.currentTimeMillis();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MDU4MDg0Nw=="}, "originalCommit": {"oid": "96751a586e54e8a74f940abef8004a574897e2d2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "034520223141396471406feb1f3786f91fca822d", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/034520223141396471406feb1f3786f91fca822d", "committedDate": "2021-01-21T22:10:59Z", "message": "nits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e235b62f67fd1b2ab2323750f748e28ad87f9a98", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/e235b62f67fd1b2ab2323750f748e28ad87f9a98", "committedDate": "2021-01-21T22:43:21Z", "message": "extract system time change fix"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2620, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}