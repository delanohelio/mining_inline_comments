{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMDE5NzQ5", "number": 8436, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozNTo1OFrODwOUcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozOTowN1rODwOWqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODkyODUxOnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozNTo1OFrOGDGoag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozNTo1OFrOGDGoag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwNzU2Mg==", "bodyText": "Since we may now \"use up\" some standby replicas during the warmup replica assignment, we no longer want a constant N clients returned here. The number of remaining standbys to assign is now a parameter of its poll", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405907562", "createdAt": "2020-04-09T01:35:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/HighAvailabilityTaskAssignor.java", "diffHunk": "@@ -337,14 +342,11 @@ private int tasksPerThread(final UUID client, final List<Map<UUID, List<TaskId>>\n      * Wraps a priority queue of clients and returns the next valid candidate(s) based on the current task assignment\n      */\n     static class ValidClientsByTaskLoadQueue<UUID> {\n-        private final int numClientsPerTask;\n         private final PriorityQueue<UUID> clientsByTaskLoad;\n         private final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments;\n \n-        ValidClientsByTaskLoadQueue(final int numClientsPerTask,\n-                                      final PriorityQueue<UUID> clientsByTaskLoad,\n-                                      final List<Map<UUID, List<TaskId>>> allStatefulTaskAssignments) {\n-            this.numClientsPerTask = numClientsPerTask;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4dd64a44221628cecfb56b0e3ed413df03c9b5bb"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxODkzNDE3OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMTozOTowN1rOGDGrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQwMjowMjoxN1rOGDHDNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwODM3Mw==", "bodyText": "The only way we can ever hit this (task had this standby but remainingStandbys is 0) is if the configured num.standby.replicas is dynamically changed. But I believe we do allow that...right?", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405908373", "createdAt": "2020-04-09T01:39:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovement.java", "diffHunk": "@@ -102,8 +111,16 @@ public int hashCode() {\n                         sourceClientTasksIterator.remove();\n                         statefulActiveTaskAssignment.get(destination).add(task);\n                     } else {\n+                        if (clientStates.get(destination).prevStandbyTasks().contains(task)\n+                                && tasksToRemainingStandbys.get(task) > 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkxNDQyMw==", "bodyText": "Yes, we do.", "url": "https://github.com/apache/kafka/pull/8436#discussion_r405914423", "createdAt": "2020-04-09T02:02:17Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/assignment/TaskMovement.java", "diffHunk": "@@ -102,8 +111,16 @@ public int hashCode() {\n                         sourceClientTasksIterator.remove();\n                         statefulActiveTaskAssignment.get(destination).add(task);\n                     } else {\n+                        if (clientStates.get(destination).prevStandbyTasks().contains(task)\n+                                && tasksToRemainingStandbys.get(task) > 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTkwODM3Mw=="}, "originalCommit": {"oid": "1f0a36ba38e5a79e8bc9db62a82f6f229a9dde3a"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2920, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}