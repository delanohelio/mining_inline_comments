{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1NTMyODMz", "number": 8255, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMDoxOFrODmZ7jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMDoxOFrODmZ7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNTk3MzI0OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMDoxOFrOFzzeoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQwNDozMzoyMFrOF0BPvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTEyMA==", "bodyText": "The code seems intentionally written to store a sequence of end offsets so that each call advances the end offset. If we do not need that capability, then perhaps we can change the type of endOffsets and simplify the usage.\ncc @bbejeck Looks like you added this logic. Do you know if we rely on it?", "url": "https://github.com/apache/kafka/pull/8255#discussion_r389865120", "createdAt": "2020-03-09T18:00:18Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java", "diffHunk": "@@ -520,10 +520,8 @@ private void resetOffsetPosition(TopicPartition tp) {\n     }\n \n     private Long getEndOffset(List<Long> offsets) {\n-        if (offsets == null || offsets.isEmpty()) {\n-            return null;\n-        }\n-        return offsets.size() > 1 ? offsets.remove(0) : offsets.get(0);\n+        if (offsets == null || offsets.isEmpty()) return null;\n+        else return offsets.get(offsets.size() - 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA3MjI1Ng==", "bodyText": "I agree with @hachikuji 's observation. This test broke when #8220 retired the innerUpdateEndOffsets and replaced the two public methods addEndOffsets and updateEndOffsets that were both using innerUpdateEndOffsets with a single updateEndOffsets. However the version that was kept was actually what the unused addEndOffsets was doing (appending to the end offsets) and not what updateEndOffsets described as an overwrite of the value in endOffsets.\nThus, probably the issue should be fixed in updateEndOffsets to keep meaning overwrite. Unless we find a usage for addEndOffsets, in which case we might need some more adjustments too. Of course, if we keep only updateEndOffsets that overwrites the value of the map, we might as well simplify getEndOffset. I haven't tracked when and why addEndOffsets was stopped being used.", "url": "https://github.com/apache/kafka/pull/8255#discussion_r390072256", "createdAt": "2020-03-10T03:09:16Z", "author": {"login": "kkonstantine"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java", "diffHunk": "@@ -520,10 +520,8 @@ private void resetOffsetPosition(TopicPartition tp) {\n     }\n \n     private Long getEndOffset(List<Long> offsets) {\n-        if (offsets == null || offsets.isEmpty()) {\n-            return null;\n-        }\n-        return offsets.size() > 1 ? offsets.remove(0) : offsets.get(0);\n+        if (offsets == null || offsets.isEmpty()) return null;\n+        else return offsets.get(offsets.size() - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTEyMA=="}, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDA5MDY4NQ==", "bodyText": "@hachikuji @kkonstantine thanks for reviews.\nWill address your comment :)", "url": "https://github.com/apache/kafka/pull/8255#discussion_r390090685", "createdAt": "2020-03-10T04:33:20Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/MockConsumer.java", "diffHunk": "@@ -520,10 +520,8 @@ private void resetOffsetPosition(TopicPartition tp) {\n     }\n \n     private Long getEndOffset(List<Long> offsets) {\n-        if (offsets == null || offsets.isEmpty()) {\n-            return null;\n-        }\n-        return offsets.size() > 1 ? offsets.remove(0) : offsets.get(0);\n+        if (offsets == null || offsets.isEmpty()) return null;\n+        else return offsets.get(offsets.size() - 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTEyMA=="}, "originalCommit": null, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3275, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}