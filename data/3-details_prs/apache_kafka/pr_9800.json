{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ3MDk1Nzgx", "number": 9800, "title": "KAFKA-9274: Fix commit-TimeoutException handling for EOS", "bodyText": "If EOS is enabled and the TX commit fails with a timeout,\nwe should not process more messages (what is ok for non-EOS)\nbecause we don't really know the status of the TX.\nIf the commit was indeed successful, we won't have an open TX\nand calling send() would fail with a fatal error.\nInstead, we should retry the (idempotent) commit of the TX,\nand start a new TX afterwards.\nCall for review @vvcephei @abbccdda @guozhangwang @hachikuji @bob-barrett", "createdAt": "2020-12-30T21:38:19Z", "url": "https://github.com/apache/kafka/pull/9800", "merged": true, "mergeCommit": {"oid": "22e8e71156762b40ac93e2cbd42eacba00dbfb0c"}, "closed": true, "closedAt": "2021-01-06T22:01:03Z", "author": {"login": "mjsax"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrWPONgH2gAyNTQ3MDk1NzgxOjE5MmM3M2QxN2RmMTIyODBhZjRmNDc3YmU2ODg0NDUyMmFhODRiNjY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtk--sAFqTU2Mjk5NTU5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "192c73d17df12280af4f477be68844522aa84b66", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/192c73d17df12280af4f477be68844522aa84b66", "committedDate": "2020-12-30T21:30:31Z", "message": "KAFKA-9274: Fix commit-TimeoutException handling for EOS\n\nIf EOS is enabled and the TX commit fails with a timeout,\nwe should not process more messages (what is ok for non-EOS)\nbecause we don't really know the status of the TX.\nIf the commit was indeed successful, we won't have an open TX\ncan calling send() would fail with an fatal error.\n\nInstead, we should retry the (idempotent) commit of the TX,\nand start a new TX afterwards."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjEwNzk4", "url": "https://github.com/apache/kafka/pull/9800#pullrequestreview-561210798", "createdAt": "2021-01-04T17:36:02Z", "commit": {"oid": "192c73d17df12280af4f477be68844522aa84b66"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzozNjowM1rOIN6nnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQxNzozOTowN1rOIN6t3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2MjgxMg==", "bodyText": "Could we add a comment here to explain why a task is not processable under pending transaction?", "url": "https://github.com/apache/kafka/pull/9800#discussion_r551462812", "createdAt": "2021-01-04T17:36:03Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -633,6 +636,10 @@ public boolean isProcessable(final long wallClockTime) {\n             return false;\n         }\n \n+        if (hasPendingTransaction) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192c73d17df12280af4f477be68844522aa84b66"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2Mzg3Mw==", "bodyText": "Why do we need to assert twice?", "url": "https://github.com/apache/kafka/pull/9800#discussion_r551463873", "createdAt": "2021-01-04T17:38:05Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -408,9 +417,74 @@ public void shouldProcessInOrder() {\n         assertEquals(3, source2.numReceived);\n     }\n \n+    @Test\n+    public void shouldProcessRecordsAfterPrepareCommitWhenEosDisabled() {\n+        task = createStatelessTask(createConfig(), StreamsConfig.METRICS_LATEST);\n+\n+        assertFalse(task.process(time.milliseconds()));\n+\n+        task.addRecords(partition1, asList(\n+            getConsumerRecord(partition1, 10),\n+            getConsumerRecord(partition1, 20),\n+            getConsumerRecord(partition1, 30)\n+        ));\n+\n+        assertTrue(task.process(time.milliseconds()));\n+        task.prepareCommit();\n+        assertTrue(task.process(time.milliseconds()));\n+        task.postCommit(false);\n+        assertTrue(task.process(time.milliseconds()));\n+\n+        assertFalse(task.process(time.milliseconds()));\n+    }\n+\n+    @Test\n+    public void shouldNotProcessRecordsAfterPrepareCommitWhenEosAlphaEnabled() {\n+        task = createStatelessTask(createConfig(StreamsConfig.EXACTLY_ONCE, \"0\"), StreamsConfig.METRICS_LATEST);\n+\n+        assertFalse(task.process(time.milliseconds()));\n+\n+        task.addRecords(partition1, asList(\n+            getConsumerRecord(partition1, 10),\n+            getConsumerRecord(partition1, 20),\n+            getConsumerRecord(partition1, 30)\n+        ));\n+\n+        assertTrue(task.process(time.milliseconds()));\n+        task.prepareCommit();\n+        assertFalse(task.process(time.milliseconds()));\n+        task.postCommit(false);\n+        assertTrue(task.process(time.milliseconds()));\n+        assertTrue(task.process(time.milliseconds()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192c73d17df12280af4f477be68844522aa84b66"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTQ2NDQxNA==", "bodyText": "nit: we may extract the common test logic to be reused by all 3 process record tests.", "url": "https://github.com/apache/kafka/pull/9800#discussion_r551464414", "createdAt": "2021-01-04T17:39:07Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamTaskTest.java", "diffHunk": "@@ -408,9 +417,74 @@ public void shouldProcessInOrder() {\n         assertEquals(3, source2.numReceived);\n     }\n \n+    @Test\n+    public void shouldProcessRecordsAfterPrepareCommitWhenEosDisabled() {\n+        task = createStatelessTask(createConfig(), StreamsConfig.METRICS_LATEST);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "192c73d17df12280af4f477be68844522aa84b66"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxMjE1MDE3", "url": "https://github.com/apache/kafka/pull/9800#pullrequestreview-561215017", "createdAt": "2021-01-04T17:42:43Z", "commit": {"oid": "192c73d17df12280af4f477be68844522aa84b66"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45f25525172d533e62015c00e9236a3656850c02", "author": {"user": {"login": "mjsax", "name": "Matthias J. Sax"}}, "url": "https://github.com/apache/kafka/commit/45f25525172d533e62015c00e9236a3656850c02", "committedDate": "2021-01-06T01:54:27Z", "message": "Github comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyMzIyMjU4", "url": "https://github.com/apache/kafka/pull/9800#pullrequestreview-562322258", "createdAt": "2021-01-06T04:45:43Z", "commit": {"oid": "45f25525172d533e62015c00e9236a3656850c02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYyOTk1NTkx", "url": "https://github.com/apache/kafka/pull/9800#pullrequestreview-562995591", "createdAt": "2021-01-06T19:49:12Z", "commit": {"oid": "45f25525172d533e62015c00e9236a3656850c02"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2406, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}