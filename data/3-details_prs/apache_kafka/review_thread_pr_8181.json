{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwNjU3MTIw", "number": 8181, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDowNzo0MFrOEl0jiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDowNzo0MFrOEl0jiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MDkzODM1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMDowNzo0MFrOHVgmnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNFQxNDozMzo1NFrOHXd8Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxNjMxOQ==", "bodyText": "This is fine, but note that the new consumer record here is just a roundabout way to create a ProcessorRecordContext. It'd probably be better to just directly instantiate the context we want.", "url": "https://github.com/apache/kafka/pull/8181#discussion_r492316319", "createdAt": "2020-09-21T20:07:40Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -581,8 +580,8 @@ public void punctuate(final ProcessorNode node, final long timestamp, final Punc\n         if (processorContext.currentNode() != null) {\n             throw new IllegalStateException(format(\"%sCurrent node is not null\", logPrefix));\n         }\n-\n-        updateProcessorContext(new StampedRecord(DUMMY_RECORD, timestamp), node);\n+        \n+        updateProcessorContext(new StampedRecord(new ConsumerRecord<>(ProcessorContextImpl.NONEXIST_TOPIC, -1, -1L, null, null), timestamp), node);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM2MDgxNQ==", "bodyText": "From my understanding, neither the ConsumerRecord nor the ProcessroRecordContext are the issue, but the shared Header object -- it's just a \"side effect\" that creating a new ConsumerRecord creates an new Header object internally.", "url": "https://github.com/apache/kafka/pull/8181#discussion_r492360815", "createdAt": "2020-09-21T21:38:07Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -581,8 +580,8 @@ public void punctuate(final ProcessorNode node, final long timestamp, final Punc\n         if (processorContext.currentNode() != null) {\n             throw new IllegalStateException(format(\"%sCurrent node is not null\", logPrefix));\n         }\n-\n-        updateProcessorContext(new StampedRecord(DUMMY_RECORD, timestamp), node);\n+        \n+        updateProcessorContext(new StampedRecord(new ConsumerRecord<>(ProcessorContextImpl.NONEXIST_TOPIC, -1, -1L, null, null), timestamp), node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxNjMxOQ=="}, "originalCommit": null, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDM2OTg5NA==", "bodyText": "Yes, that's more or less what I was concerned about. We are trying to achieve a specific result here (and brand-new 'Header' instance each time), but it's only achieved via a side effect.\nOn the other hand, I just took a closer look at the code, and I see that there's a better reason to keep using ConsumerRecord, namely that updateProcessorContext is used both for regular processing (with \"real\" records) and for punctuation here with this dummy record. It seems like a good idea to prevent those code paths from diverging, so I'm +1 with keeping this change as-is.", "url": "https://github.com/apache/kafka/pull/8181#discussion_r494369894", "createdAt": "2020-09-24T14:33:54Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -581,8 +580,8 @@ public void punctuate(final ProcessorNode node, final long timestamp, final Punc\n         if (processorContext.currentNode() != null) {\n             throw new IllegalStateException(format(\"%sCurrent node is not null\", logPrefix));\n         }\n-\n-        updateProcessorContext(new StampedRecord(DUMMY_RECORD, timestamp), node);\n+        \n+        updateProcessorContext(new StampedRecord(new ConsumerRecord<>(ProcessorContextImpl.NONEXIST_TOPIC, -1, -1L, null, null), timestamp), node);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjMxNjMxOQ=="}, "originalCommit": null, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4110, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}