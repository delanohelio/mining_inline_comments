{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNDQzMTYz", "number": 8579, "title": "KAFKA-9930: Prevent ReplicaFetcherThread from throwing UnknownTopicOrPartitionException upon topic creation and deletion.", "bodyText": "When does UnknownTopicOrPartitionException typically occur?\n\nUpon a topic creation, a follower broker of a new partition starts replica fetcher before the prospective leader broker of the new partition receives the leadership information from the controller (see KAFKA-6221).\nUpon a topic deletion, a follower broker of a to-be-deleted partition starts replica fetcher after the leader broker of the to-be-deleted partition processes the deletion information from the controller.\nAs expected, clusters with frequent topic creation and deletion report UnknownTopicOrPartitionException with relatively higher frequency.\n\nWhat is the impact?\n\nException tracking systems identify the error logs with UnknownTopicOrPartitionException as an exception. This results in a lot of noise for a transient issue that is expected to recover by itself and a natural process in Kafka due to its asynchronous state propagation.\n\nWhy not move it to a lower than warn-level log?\n\nDespite typically being a transient issue, UnknownTopicOrPartitionException may also indicate real issues if it doesn't fix itself after a short period of time. To ensure detection of such scenarios, we set the log level to warn.\n\nMore detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-29T01:39:15Z", "url": "https://github.com/apache/kafka/pull/8579", "merged": true, "mergeCommit": {"oid": "aae8b5f54f716312d413a76fb4228e68e6df7df2"}, "closed": true, "closedAt": "2020-07-07T01:50:25Z", "author": {"login": "efeg"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABccORkEgH2gAyNDEwNDQzMTYzOjRmZWM4MjM5YzU2MmZlMTc2ZWM4M2E3NzZhZmYzNmI1MTIyZTE0ZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyWzoSAFqTQ0MzM2Njk4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fec8239c562fe176ec83a776aff36b5122e14f2", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/4fec8239c562fe176ec83a776aff36b5122e14f2", "committedDate": "2020-04-29T01:33:49Z", "message": "KAFKA-9930: Prevent ReplicaFetcherThread from throwing UnknownTopicOrPartitionException upon topic creation and deletion.\n\nWhen does UnknownTopicOrPartitionException typically occur?\n * Upon a topic creation, a follower broker of a new partition starts replica fetcher before the prospective leader broker of the new partition receives the leadership information from the controller (see KAFKA-6221).\n * Upon a topic deletion, a follower broker of a to-be-deleted partition starts replica fetcher after the leader broker of the to-be-deleted partition processes the deletion information from the controller.\n * As expected, clusters with frequent topic creation and deletion report UnknownTopicOrPartitionException with relatively higher frequency.\n\nWhat is the impact?\n * Exception tracking systems identify the error logs with UnknownTopicOrPartitionException as an exception. This results in a lot of noise for a transient issue that is expected to recover by itself and a natural process in Kafka due to its asynchronous state propagation.\n\nWhy not move it to a lower than warn-level log?\n * Despite typically being a transient issue, UnknownTopicOrPartitionException may also indicate real issues if it doesn't fix itself after a short period of time. To ensure detection of such scenarios, we set the log level to warn."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMzQxODMy", "url": "https://github.com/apache/kafka/pull/8579#pullrequestreview-402341832", "createdAt": "2020-04-29T03:16:44Z", "commit": {"oid": "4fec8239c562fe176ec83a776aff36b5122e14f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMzoxNjo0NFrOGNuZkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwMzoxNjo0NFrOGNuZkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzA0NDg4Mg==", "bodyText": "Should it be info if we think this is expected? That would still show in the logs.", "url": "https://github.com/apache/kafka/pull/8579#discussion_r417044882", "createdAt": "2020-04-29T03:16:44Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherThread.scala", "diffHunk": "@@ -382,6 +382,11 @@ abstract class AbstractFetcherThread(name: String,\n                     \"that the partition is being moved\")\n                   partitionsWithError += topicPartition\n \n+                case Errors.UNKNOWN_TOPIC_OR_PARTITION =>\n+                  warn(s\"Remote broker does not host the partition $topicPartition, which could indicate \" +\n+                    \"that the partition is being created or deleted.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fec8239c562fe176ec83a776aff36b5122e14f2"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9e16f693de60b62da59175da8c61fd419c9a463", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/apache/kafka/commit/a9e16f693de60b62da59175da8c61fd419c9a463", "committedDate": "2020-06-25T20:14:47Z", "message": "[LI-HOTFIX] Address the feedback to clarify the log message.\nTICKET =\nLI_DESCRIPTION =\n\nEXIT_CRITERIA = MANUAL [\"\"]"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTQ1MDY1", "url": "https://github.com/apache/kafka/pull/8579#pullrequestreview-437945065", "createdAt": "2020-06-26T00:33:58Z", "commit": {"oid": "a9e16f693de60b62da59175da8c61fd419c9a463"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM3OTc2OTM1", "url": "https://github.com/apache/kafka/pull/8579#pullrequestreview-437976935", "createdAt": "2020-06-26T02:30:51Z", "commit": {"oid": "a9e16f693de60b62da59175da8c61fd419c9a463"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjozMDo1MVrOGpRzpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMjozMDo1MVrOGpRzpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkzNjU0OQ==", "bodyText": "Thanks for the update. I think the following reads a bit better and is a bit more consistent with the other messages:\ns\"Received ${Errors.UNKNOWN_TOPIC_OR_PARTITION} from the leader for partition $topicPartition. \" +\n\"This error may be returned transiently when the partition is being created or deleted, but it is not \" +\n\"expected to persist.\")", "url": "https://github.com/apache/kafka/pull/8579#discussion_r445936549", "createdAt": "2020-06-26T02:30:51Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/AbstractFetcherThread.scala", "diffHunk": "@@ -382,6 +382,12 @@ abstract class AbstractFetcherThread(name: String,\n                     \"that the partition is being moved\")\n                   partitionsWithError += topicPartition\n \n+                case Errors.UNKNOWN_TOPIC_OR_PARTITION =>\n+                  warn(s\"Receiving ${Errors.UNKNOWN_TOPIC_OR_PARTITION} from the leader for partition $topicPartition. \" +\n+                       s\"This can happen transiently if the partition is being created or deleted. \" +\n+                       s\"However, this is unexpected if it sustains.\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9e16f693de60b62da59175da8c61fd419c9a463"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfd33e34af00bc4afa58980eff8cd0ad3161463e", "author": {"user": {"login": "efeg", "name": "Adem Efe Gencer"}}, "url": "https://github.com/apache/kafka/commit/dfd33e34af00bc4afa58980eff8cd0ad3161463e", "committedDate": "2020-06-26T17:49:51Z", "message": "Address the feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM4NDk1MDM4", "url": "https://github.com/apache/kafka/pull/8579#pullrequestreview-438495038", "createdAt": "2020-06-26T18:04:59Z", "commit": {"oid": "dfd33e34af00bc4afa58980eff8cd0ad3161463e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzY2OTgz", "url": "https://github.com/apache/kafka/pull/8579#pullrequestreview-443366983", "createdAt": "2020-07-06T19:56:36Z", "commit": {"oid": "dfd33e34af00bc4afa58980eff8cd0ad3161463e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1273, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}