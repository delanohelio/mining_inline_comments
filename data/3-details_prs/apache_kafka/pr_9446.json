{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDIxMTQ5", "number": 9446, "title": "MINOR: distinguish between missing source topics and internal assignment errors", "bodyText": "Minor followup to KAFKA-10559\nI noticed that we were converting any and all TaskAssignmentException to the INCOMPLETE_SOURCE_TOPIC_METADATA error code to shut down all the clients. Since these errors are typically fatal, it does seem appropriate to propagate the shutdown command. But we should do so with a new AssignorError instead of piggy-backing on the INCOMPLETE_SOURCE_TOPIC_METADATA, which would be pretty confusing for users who do in fact have all their source topics.\nChanges in this PR:\n\nAdd new AssignorError.ASSIGNMENT_ERROR for generic assignment errors\nMissing source topics --> throw/catch MissingSourceTopicException --> INCOMPLETE_SOURCE_TOPIC_METADATA\nInternal assignment errors --> throw/catch TaskAssignmentException --> ASSIGNMENT_ERROR\n\nShould be cherry-picked to 2.7", "createdAt": "2020-10-15T22:27:26Z", "url": "https://github.com/apache/kafka/pull/9446", "merged": true, "mergeCommit": {"oid": "5dc94b1ff4fc580c240def5bd65daef3840041e0"}, "closed": true, "closedAt": "2020-10-21T16:06:26Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdS5jGcAFqTUwOTg1MzIxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUj2CIgH2gAyNTA0NDIxMTQ5OjY5YjU0M2NhZDljNDE0MjY3NWY0NGU2ZTAxYzdlNTYyYmUzNGViZGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODUzMjE1", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-509853215", "createdAt": "2020-10-15T22:30:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozMDo0OFrOHiduZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozMDo0OFrOHiduZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMDY0NA==", "bodyText": "The diff is kind of annoying but basically I just moved all the try-catch blocks into a single outer try that encapsulates all of the assignment logic. If we throw a TaskAssignmentException at any point it'll bail and just encode the ASSIGNMENT_ERROR code (or INCOMPLETE_SOURCE_TOPIC_METADATA if MissingSourceTopicException is thrown)", "url": "https://github.com/apache/kafka/pull/9446#discussion_r505900644", "createdAt": "2020-10-15T22:30:48Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -330,75 +331,61 @@ public GroupAssignment assign(final Cluster metadata, final GroupSubscription gr\n             clientMetadata.addPreviousTasksAndOffsetSums(consumerId, info.taskOffsetSums());\n         }\n \n-        final boolean versionProbing =\n-            checkMetadataVersions(minReceivedMetadataVersion, minSupportedMetadataVersion, futureMetadataVersion);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODUzOTgx", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-509853981", "createdAt": "2020-10-15T22:32:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozMjozOVrOHidw0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozMjozOVrOHidw0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMTI2NQ==", "bodyText": "Just tried to standardize all permanent errors to throw TaskAssignmentException instead. eg if there are incompatible mixed versions we should shut everyone down until the operator can sort it out", "url": "https://github.com/apache/kafka/pull/9446#discussion_r505901265", "createdAt": "2020-10-15T22:32:39Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -434,7 +430,7 @@ private boolean checkMetadataVersions(final int minReceivedMetadataVersion,\n                 minSupportedMetadataVersion);\n \n         } else {\n-            throw new IllegalStateException(\n+            throw new TaskAssignmentException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 147}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODU0NjU3", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-509854657", "createdAt": "2020-10-15T22:34:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozNDowN1rOHidy6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozNDowN1rOHidy6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMTgwMQ==", "bodyText": "If we ever hit this it means there is a serious bug in the assignment algorithm. In that case we should go ahead and shut everyone down once we notice, since otherwise it would be a long slow death of single threads at a time", "url": "https://github.com/apache/kafka/pull/9446#discussion_r505901801", "createdAt": "2020-10-15T22:34:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -704,8 +700,9 @@ private boolean assignTasksToClients(final Cluster fullMetadata,\n                                          final Map<UUID, ClientMetadata> clientMetadataMap,\n                                          final Map<TaskId, Set<TopicPartition>> partitionsForTask,\n                                          final Set<TaskId> statefulTasks) {\n-        if (!statefulTasks.isEmpty())\n-            throw new IllegalArgumentException(\"The stateful tasks should not be populated before assigning tasks to clients\");\n+        if (!statefulTasks.isEmpty()) {\n+            throw new TaskAssignmentException(\"The stateful tasks should not be populated before assigning tasks to clients\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 176}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODU0ODkx", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-509854891", "createdAt": "2020-10-15T22:34:40Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozNDo0MFrOHidzpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQyMjozNDo0MFrOHidzpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTkwMTk5MA==", "bodyText": "Likewise, this means a bug in the assignment algorithm that should never be hit", "url": "https://github.com/apache/kafka/pull/9446#discussion_r505901990", "createdAt": "2020-10-15T22:34:40Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1235,7 +1232,7 @@ private boolean addClientAssignments(final Set<TaskId> statefulTasks,\n                         consumersToFill.offer(consumer);\n                     }\n                 } else {\n-                    throw new IllegalStateException(\"Ran out of unassigned stateful tasks but some members were not at capacity\");\n+                    throw new TaskAssignmentException(\"Ran out of unassigned stateful tasks but some members were not at capacity\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 186}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5ODgwNDgz", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-509880483", "createdAt": "2020-10-15T23:34:13Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNTk3OTcx", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-510597971", "createdAt": "2020-10-16T15:53:39Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo1Mzo0MFrOHjGZ9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo1NToyOFrOHjGeRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2NzE1OQ==", "bodyText": "Hey @ableegoldman , I just looked into this, and it appears that this is the only place that the error code would be read and thrown as an exception to kill the thread, right?\nIf so, then it looks like older clients are looking specifically for the error code to be == AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code(), and they'd interpret any other code as \"looks good\" and proceed with PARTITIONS_ASSIGNED.\nMaybe there's nothing we can do about it now, but perhaps we should put in a block to future-proof this code by adding an else if (assignmentErrorCode.get() != 0) { throw new TaskAssignmentException(\"Unknown error code: \"+assignmentErrorCode.get()) } ?\nOr is this already handled in some other way I'm not seeing?", "url": "https://github.com/apache/kafka/pull/9446#discussion_r506567159", "createdAt": "2020-10-16T15:53:40Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -52,8 +53,11 @@ public void onPartitionsAssigned(final Collection<TopicPartition> partitions) {\n         // NB: all task management is already handled by:\n         // org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.onAssignment\n         if (assignmentErrorCode.get() == AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code()) {\n-            log.error(\"Received error code {}\", assignmentErrorCode.get());\n+            log.error(\"Received error code {}\", AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA);\n             throw new MissingSourceTopicException(\"One or more source topics were missing during rebalance\");\n+        } else if (assignmentErrorCode.get() == AssignorError.ASSIGNMENT_ERROR.code()) {\n+            log.error(\"Received error code {}\", AssignorError.ASSIGNMENT_ERROR);\n+            throw new TaskAssignmentException(\"Hit an unexpected exception during task assignment phase of rebalance\");\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2ODI2MQ==", "bodyText": "Following on my other comment, should we gate this on the usedMetadataVersion so that we'd return a INCOMPLETE_SOURCE_TOPIC_METADATA for versions 7 and below, to ensure they'll be properly handled as exceptions on the member side?", "url": "https://github.com/apache/kafka/pull/9446#discussion_r506568261", "createdAt": "2020-10-16T15:55:28Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -409,9 +396,18 @@ public GroupAssignment assign(final Cluster metadata, final GroupSubscription gr\n                 minSupportedMetadataVersion,\n                 versionProbing,\n                 probingRebalanceNeeded\n-        );\n+            );\n \n-        return new GroupAssignment(assignment);\n+            return new GroupAssignment(assignment);\n+        } catch (final MissingSourceTopicException e) {\n+            return new GroupAssignment(\n+                errorAssignment(clientMetadataMap, AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code())\n+            );\n+        } catch (final TaskAssignmentException e) {\n+            return new GroupAssignment(\n+                errorAssignment(clientMetadataMap, AssignorError.ASSIGNMENT_ERROR.code())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 136}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTExNzM4MzMz", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-511738333", "createdAt": "2020-10-19T13:06:35Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzowNjozNVrOHkNX0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMzowNjo1M1rOHkNYbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcyOTg3NA==", "bodyText": "I could not find a unit test that verifies this code.", "url": "https://github.com/apache/kafka/pull/9446#discussion_r507729874", "createdAt": "2020-10-19T13:06:35Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -409,9 +396,18 @@ public GroupAssignment assign(final Cluster metadata, final GroupSubscription gr\n                 minSupportedMetadataVersion,\n                 versionProbing,\n                 probingRebalanceNeeded\n-        );\n+            );\n \n-        return new GroupAssignment(assignment);\n+            return new GroupAssignment(assignment);\n+        } catch (final MissingSourceTopicException e) {\n+            return new GroupAssignment(\n+                errorAssignment(clientMetadataMap, AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code())\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzczMDAzMA==", "bodyText": "I could not find a unit test that verifies this code.", "url": "https://github.com/apache/kafka/pull/9446#discussion_r507730030", "createdAt": "2020-10-19T13:06:53Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -409,9 +396,18 @@ public GroupAssignment assign(final Cluster metadata, final GroupSubscription gr\n                 minSupportedMetadataVersion,\n                 versionProbing,\n                 probingRebalanceNeeded\n-        );\n+            );\n \n-        return new GroupAssignment(assignment);\n+            return new GroupAssignment(assignment);\n+        } catch (final MissingSourceTopicException e) {\n+            return new GroupAssignment(\n+                errorAssignment(clientMetadataMap, AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code())\n+            );\n+        } catch (final TaskAssignmentException e) {\n+            return new GroupAssignment(\n+                errorAssignment(clientMetadataMap, AssignorError.ASSIGNMENT_ERROR.code())\n+            );", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 137}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMzAyNzM4", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-512302738", "createdAt": "2020-10-20T03:20:53Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoyMDo1M1rOHkpKdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMzoyMDo1M1rOHkpKdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE4NTIwNA==", "bodyText": "I happened to notice that this test was not actually using this streamsBuilder, so I tried to fix that and it broke. After some debugging I realized this test was broken in so many different ways that it's a miracle it was ever passing at all. Luckily all the bugs were in the test and not in the actual code \ud83d\ude4f", "url": "https://github.com/apache/kafka/pull/9446#discussion_r508185204", "createdAt": "2020-10-20T03:20:53Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignorTest.java", "diffHunk": "@@ -1899,14 +1973,18 @@ public void shouldRequestEndOffsetsForPreexistingChangelogs() {\n     @Test\n     public void shouldRequestCommittedOffsetsForPreexistingSourceChangelogs() {\n         final Set<TopicPartition> changelogs = mkSet(\n-            new TopicPartition(APPLICATION_ID + \"-store-changelog\", 0),\n-            new TopicPartition(APPLICATION_ID + \"-store-changelog\", 1),\n-            new TopicPartition(APPLICATION_ID + \"-store-changelog\", 2)\n+            new TopicPartition(\"topic1\", 0),\n+            new TopicPartition(\"topic1\", 1),\n+            new TopicPartition(\"topic1\", 2)\n         );\n \n         final StreamsBuilder streamsBuilder = new StreamsBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 141}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb9c76c130951939ed2d0876a4466b47bba274b6", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/cb9c76c130951939ed2d0876a4466b47bba274b6", "committedDate": "2020-10-20T17:48:46Z", "message": "add new ASSIGNMENT_ERROR error code, differentiate MissingSourceTopic from generic TaskAssignmentException"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "cb9c76c130951939ed2d0876a4466b47bba274b6", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/cb9c76c130951939ed2d0876a4466b47bba274b6", "committedDate": "2020-10-20T17:48:46Z", "message": "add new ASSIGNMENT_ERROR error code, differentiate MissingSourceTopic from generic TaskAssignmentException"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMTY2Njgy", "url": "https://github.com/apache/kafka/pull/9446#pullrequestreview-513166682", "createdAt": "2020-10-20T21:59:44Z", "commit": {"oid": "cb9c76c130951939ed2d0876a4466b47bba274b6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMTo1OTo0NFrOHlSuHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMTo1OTo0NFrOHlSuHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg2NjA3Nw==", "bodyText": "Maybe we shouldn't say \"error\" when it's not an error. I'm just imagining the mailing list questions that will start pouring in...\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        log.info(\"Received error code {}\", AssignorError.VERSION_PROBING);\n          \n          \n            \n                        log.info(\"Received version probing code {}\", AssignorError.VERSION_PROBING);", "url": "https://github.com/apache/kafka/pull/9446#discussion_r508866077", "createdAt": "2020-10-20T21:59:44Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsRebalanceListener.java", "diffHunk": "@@ -52,8 +53,16 @@ public void onPartitionsAssigned(final Collection<TopicPartition> partitions) {\n         // NB: all task management is already handled by:\n         // org.apache.kafka.streams.processor.internals.StreamsPartitionAssignor.onAssignment\n         if (assignmentErrorCode.get() == AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA.code()) {\n-            log.error(\"Received error code {}\", assignmentErrorCode.get());\n+            log.error(\"Received error code {}\", AssignorError.INCOMPLETE_SOURCE_TOPIC_METADATA);\n             throw new MissingSourceTopicException(\"One or more source topics were missing during rebalance\");\n+        } else if (assignmentErrorCode.get() == AssignorError.VERSION_PROBING.code()) {\n+            log.info(\"Received error code {}\", AssignorError.VERSION_PROBING);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cb9c76c130951939ed2d0876a4466b47bba274b6"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f607303d9058f5cfbb2f6f7d2552ed6c3d38ebe3", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/f607303d9058f5cfbb2f6f7d2552ed6c3d38ebe3", "committedDate": "2020-10-21T01:12:42Z", "message": "rebase and fix test broken by collision with recent PR"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "69b543cad9c4142675f44e6e01c7e562be34ebda", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/69b543cad9c4142675f44e6e01c7e562be34ebda", "committedDate": "2020-10-21T02:21:25Z", "message": "Avoid using the word \"error\" in context of version probing\n\nCo-authored-by: John Roesler <vvcephei@users.noreply.github.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 558, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}