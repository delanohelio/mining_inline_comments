{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MTcxOTU1", "number": 9354, "title": "KAFKA-10134 Follow-up: Set the re-join flag in heartbeat failure", "bodyText": "Committer Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-29T23:39:09Z", "url": "https://github.com/apache/kafka/pull/9354", "merged": true, "mergeCommit": {"oid": "3bc2df7651d8b9029d2478a3f39b3b223c0532b7"}, "closed": true, "closedAt": "2020-10-02T00:57:01Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNw6-xgH2gAyNDk1MTcxOTU1OjUyYTIwMjkyMTFlZTYzOTUxNDAwNjRmNGRiMTQwM2M2MDg0Y2RiN2I=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdObOylAH2gAyNDk1MTcxOTU1OjM0Y2Q3NzExMzcwMWZmNTRlZjFjOTBjZGUxMjQ5N2U1YzAxMTMyY2E=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/52a2029211ee6395140064f4db1403c6084cdb7b", "committedDate": "2020-09-29T23:38:07Z", "message": "set the re-join flag in hb failure"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDAyODY5", "url": "https://github.com/apache/kafka/pull/9354#pullrequestreview-499002869", "createdAt": "2020-09-29T23:58:24Z", "commit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MjYzMzU1", "url": "https://github.com/apache/kafka/pull/9354#pullrequestreview-499263355", "createdAt": "2020-09-30T09:49:49Z", "commit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0OTo1MFrOHaV4Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwOTo0OTo1MFrOHaV4Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4MzUyNw==", "bodyText": "@dajac I feel this patch can fix https://issues.apache.org/jira/browse/KAFKA-8266\nThe test case in https://issues.apache.org/jira/browse/KAFKA-8266 restarts all brokers to activate new configs. However, the data of group (__consumer_offsets) may get lost if all brokers are killed too quick (the log folder is changed when restarting broker so the restarting broker has to fetch data from other brokers). The heartbeat of running consumer will encounter UNKNOWN_MEMBER_ID in sending heartbeat request since the group data is gone. Without this patch, the heartbeat thread is disabled and the state is in UNJOINED but the rejoinNeeded is still false. In short, the consumer is not going to rejoin group so we can't see expected error.", "url": "https://github.com/apache/kafka/pull/9354#discussion_r497383527", "createdAt": "2020-09-30T09:49:50Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -948,7 +948,7 @@ private synchronized void resetStateAndRejoin() {\n     synchronized void resetGenerationOnResponseError(ApiKeys api, Errors error) {\n         log.debug(\"Resetting generation after encountering {} from {} response and requesting re-join\", error, api);\n \n-        resetState();\n+        resetStateAndRejoin();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5OTgyMjUw", "url": "https://github.com/apache/kafka/pull/9354#pullrequestreview-499982250", "createdAt": "2020-10-01T03:13:50Z", "commit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzoxMzo1MFrOHa5Gmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwMzoxOToyNFrOHa5LWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk2MDYwMw==", "bodyText": "Could we remove this print statement?", "url": "https://github.com/apache/kafka/pull/9354#discussion_r497960603", "createdAt": "2020-10-01T03:13:50Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1934,12 +1933,20 @@ public void testReturnRecordsDuringRebalance() {\n         fetches1.put(tp0, new FetchInfo(3, 1));\n         client.respondFrom(fetchResponse(fetches1), node);\n \n-        records = consumer.poll(Duration.ZERO);\n+        // now complete teh rebalance\n+        client.respondFrom(syncGroupResponse(Arrays.asList(tp0, t3p0), Errors.NONE), coordinator);\n+\n+        AtomicInteger count = new AtomicInteger(0);\n+        TestUtils.waitForCondition(() -> {\n+            ConsumerRecords<String, String> recs = consumer.poll(Duration.ofMillis(100L));\n+            System.out.println(\"count \" + count.addAndGet(recs.count()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk2MDYxOA==", "bodyText": "s/teh/the", "url": "https://github.com/apache/kafka/pull/9354#discussion_r497960618", "createdAt": "2020-10-01T03:13:58Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1934,12 +1933,20 @@ public void testReturnRecordsDuringRebalance() {\n         fetches1.put(tp0, new FetchInfo(3, 1));\n         client.respondFrom(fetchResponse(fetches1), node);\n \n-        records = consumer.poll(Duration.ZERO);\n+        // now complete teh rebalance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk2MDY2Ng==", "bodyText": "Same here", "url": "https://github.com/apache/kafka/pull/9354#discussion_r497960666", "createdAt": "2020-10-01T03:14:12Z", "author": {"login": "abbccdda"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/KafkaConsumerTest.java", "diffHunk": "@@ -1948,10 +1955,14 @@ public void testReturnRecordsDuringRebalance() {\n         fetches1.put(t3p0, new FetchInfo(0, 100));\n         client.respondFrom(fetchResponse(fetches1), node);\n \n-        records = consumer.poll(Duration.ZERO);\n+        count.set(0);\n+        TestUtils.waitForCondition(() -> {\n+            ConsumerRecords<String, String> recs = consumer.poll(Duration.ofMillis(100L));\n+            System.out.println(\"count2 \" + count.addAndGet(recs.count()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk2MTgxNg==", "bodyText": "It seems that we would rejoin on FENCED_INSTANCE_ID as well, is that intentional? \n  \n    \n      kafka/clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java\n    \n    \n         Line 1106\n      in\n      bd462df\n    \n    \n    \n    \n\n        \n          \n           error == Errors.FENCED_INSTANCE_ID) {", "url": "https://github.com/apache/kafka/pull/9354#discussion_r497961816", "createdAt": "2020-10-01T03:19:24Z", "author": {"login": "abbccdda"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -948,7 +948,7 @@ private synchronized void resetStateAndRejoin() {\n     synchronized void resetGenerationOnResponseError(ApiKeys api, Errors error) {\n         log.debug(\"Resetting generation after encountering {} from {} response and requesting re-join\", error, api);\n \n-        resetState();\n+        resetStateAndRejoin();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzM4MzUyNw=="}, "originalCommit": {"oid": "52a2029211ee6395140064f4db1403c6084cdb7b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "425da87e98faea6852433144084d3d78db504c80", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/425da87e98faea6852433144084d3d78db504c80", "committedDate": "2020-10-01T23:18:24Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into K10134-require-rejoin-in-heartbeat-error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "34cd77113701ff54ef1c90cde12497e5c01132ca", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/34cd77113701ff54ef1c90cde12497e5c01132ca", "committedDate": "2020-10-02T00:55:46Z", "message": "github comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 719, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}