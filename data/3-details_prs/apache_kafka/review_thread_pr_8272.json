{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg2NDU2NzYy", "number": 8272, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMjoxNzo0OVrODnUA9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMjoxNzo0OVrODnUA9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTQ4OTgwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwMjoxNzo0OVrOF1PM_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNFQyMTo1NDo0MFrOF2bxDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NzkzMg==", "bodyText": "Why are we logging this at error level when it's a client issue?", "url": "https://github.com/apache/kafka/pull/8272#discussion_r391367932", "createdAt": "2020-03-12T02:17:49Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -576,7 +576,7 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n             Errors error = joinResponse.error();\n             if (error == Errors.NONE) {\n                 if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) {\n-                    log.debug(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",\n+                    log.error(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebfdc71cba3b6d35ba88b032b1664c3afa78f97f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM4OTg3Nw==", "bodyText": "@ijuma not sure I understand your question?", "url": "https://github.com/apache/kafka/pull/8272#discussion_r391389877", "createdAt": "2020-03-12T03:58:57Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -576,7 +576,7 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n             Errors error = joinResponse.error();\n             if (error == Errors.NONE) {\n                 if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) {\n-                    log.debug(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",\n+                    log.error(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NzkzMg=="}, "originalCommit": {"oid": "ebfdc71cba3b6d35ba88b032b1664c3afa78f97f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQzNTEwOQ==", "bodyText": "Logging at error level should indicate a broker error. Bad client requests are a client error though and should not generate the logs at error level. Does that make sense?", "url": "https://github.com/apache/kafka/pull/8272#discussion_r391435109", "createdAt": "2020-03-12T07:11:58Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -576,7 +576,7 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n             Errors error = joinResponse.error();\n             if (error == Errors.NONE) {\n                 if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) {\n-                    log.debug(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",\n+                    log.error(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NzkzMg=="}, "originalCommit": {"oid": "ebfdc71cba3b6d35ba88b032b1664c3afa78f97f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYxNjQ4Mw==", "bodyText": "Atm we cannot say for sure, but it's likely that what's observed on KAFKA-9701 is a broker-side issue; we can either 1) add the check on broker-side across all members to make sure the selected protocol is consistent for everyone, so if the broker already made a wrong choice itself would log an ERROR, or 2) let it check on the client side. I think for trouble-shooting purposes option 2) is fine, and if we later discovered that this bug is actually on the client side I'm happy to revert this change after fixing it.", "url": "https://github.com/apache/kafka/pull/8272#discussion_r392616483", "createdAt": "2020-03-14T20:20:27Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -576,7 +576,7 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n             Errors error = joinResponse.error();\n             if (error == Errors.NONE) {\n                 if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) {\n-                    log.debug(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",\n+                    log.error(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NzkzMg=="}, "originalCommit": {"oid": "ebfdc71cba3b6d35ba88b032b1664c3afa78f97f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjYyMjM0OA==", "bodyText": "So the if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) check is like an assert for a bug in the broker implementation versus validating the join group request?", "url": "https://github.com/apache/kafka/pull/8272#discussion_r392622348", "createdAt": "2020-03-14T21:54:40Z", "author": {"login": "ijuma"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -576,7 +576,7 @@ public void handle(JoinGroupResponse joinResponse, RequestFuture<ByteBuffer> fut\n             Errors error = joinResponse.error();\n             if (error == Errors.NONE) {\n                 if (isProtocolTypeInconsistent(joinResponse.data().protocolType())) {\n-                    log.debug(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",\n+                    log.error(\"JoinGroup failed due to inconsistent Protocol Type, received {} but expected {}\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTM2NzkzMg=="}, "originalCommit": {"oid": "ebfdc71cba3b6d35ba88b032b1664c3afa78f97f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3310, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}