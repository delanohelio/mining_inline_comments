{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MDc0NDAy", "number": 8530, "title": "KAFKA-9388: Refactor integration tests to always use different application ids", "bodyText": "When debugging KAFKA-9388, I found the reason that the second test method test takes much longer (10s) than the previous one (~500ms) is because they used the same app.id. When the previous clients are shutdown, they would not send leave-group and hence we are still depending on the session timeout (10s) for the members to be removed out of the group.\nWhen the second test is triggered, they will join the same group because of the same application id, and the prepare-rebalance phase would would for the full rebalance timeout before it kicks out the previous members.\nSetting different application ids could resolve such issues for integration tests --- I did a quick search and found some other integration tests have the same issue. And after this PR my local unit test runtime reduced from about 14min to 7min.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-22T06:25:27Z", "url": "https://github.com/apache/kafka/pull/8530", "merged": true, "mergeCommit": {"oid": "fbd8cf0d861dec5b7bac237e8221cfae51bec14a"}, "closed": true, "closedAt": "2020-04-22T21:29:23Z", "author": {"login": "guozhangwang"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcaBysDgH2gAyNDA3MDc0NDAyOmFmY2RhZTFhZDBkNzNhOTg2NGY2NTRmNGY4ZjVkMDY2MjViODQ4ZTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaNBFmAFqTM5ODQ4NzAzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "afcdae1ad0d73a9864f654f4f8f5d06625b848e6", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/afcdae1ad0d73a9864f654f4f8f5d06625b848e6", "committedDate": "2020-04-22T05:53:23Z", "message": "refactor integration tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "863ea2921cdada0102b627f6b5b9811be6f77378", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/863ea2921cdada0102b627f6b5b9811be6f77378", "committedDate": "2020-04-22T06:25:09Z", "message": "use test name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MTYzNTA3", "url": "https://github.com/apache/kafka/pull/8530#pullrequestreview-398163507", "createdAt": "2020-04-22T12:59:19Z", "commit": {"oid": "863ea2921cdada0102b627f6b5b9811be6f77378"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMjo1OToxOVrOGJ1DzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMzowMTo0MVrOGJ1Krw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk1OTY5Mw==", "bodyText": "the following app id should be changed as well. (I can't add comment to the line for this PR)\n    private void setCommittedOffset(final String topic, final int limitDelta) {\n        final Properties consumerConfig = new Properties();\t        final Properties consumerConfig = new Properties();\n        consumerConfig.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\t        consumerConfig.put(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, CLUSTER.bootstrapServers());\n        consumerConfig.put(ConsumerConfig.GROUP_ID_CONFIG, APPID);\t        consumerConfig.put(ConsumerConfig.GROUP_ID_CONFIG, APPID);", "url": "https://github.com/apache/kafka/pull/8530#discussion_r412959693", "createdAt": "2020-04-22T12:59:19Z", "author": {"login": "chia7712"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -119,7 +124,7 @@ public void shouldRestoreStateFromSourceTopic() throws Exception {\n         final AtomicInteger numReceived = new AtomicInteger(0);\n         final StreamsBuilder builder = new StreamsBuilder();\n \n-        final Properties props = props(APPID);\n+        final Properties props = props(APPID + name.getMethodName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "863ea2921cdada0102b627f6b5b9811be6f77378"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjk2MTQ1NQ==", "bodyText": "the changelog topics are created by BeforeClass so it seems we need to add Before to create changelog for different method name.", "url": "https://github.com/apache/kafka/pull/8530#discussion_r412961455", "createdAt": "2020-04-22T13:01:41Z", "author": {"login": "chia7712"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -107,6 +109,9 @@ private Properties props(final String applicationId) {\n         return streamsConfiguration;\n     }\n \n+    @Rule\n+    public TestName name = new TestName();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "863ea2921cdada0102b627f6b5b9811be6f77378"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04a2e125e9fc5ae8e0094687da87633c222c5580", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/04a2e125e9fc5ae8e0094687da87633c222c5580", "committedDate": "2020-04-22T17:04:21Z", "message": "minor fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "author": {"user": {"login": "guozhangwang", "name": "Guozhang Wang"}}, "url": "https://github.com/apache/kafka/commit/1bcd1db9aff9c52e0aca5dd788000f748ab477c9", "committedDate": "2020-04-22T17:16:18Z", "message": "remove unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDA3ODQ2", "url": "https://github.com/apache/kafka/pull/8530#pullrequestreview-398407846", "createdAt": "2020-04-22T17:18:37Z", "commit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoxODozOFrOGKB1UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNzoyMTowMFrOGKB7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2ODk3Ng==", "bodyText": "I moved this test into the non-integration unit tests.", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413168976", "createdAt": "2020-04-22T17:18:38Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableKTableForeignKeyJoinPseudoTopicTest.java", "diffHunk": "@@ -1,138 +0,0 @@\n-/*\n- * Licensed to the Apache Software Foundation (ASF) under one or more\n- * contributor license agreements. See the NOTICE file distributed with\n- * this work for additional information regarding copyright ownership.\n- * The ASF licenses this file to You under the Apache License, Version 2.0\n- * (the \"License\"); you may not use this file except in compliance with\n- * the License. You may obtain a copy of the License at\n- *\n- *    http://www.apache.org/licenses/LICENSE-2.0\n- *\n- * Unless required by applicable law or agreed to in writing, software\n- * distributed under the License is distributed on an \"AS IS\" BASIS,\n- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n- * See the License for the specific language governing permissions and\n- * limitations under the License.\n- */\n-package org.apache.kafka.streams.integration;\n-\n-import org.apache.kafka.common.serialization.Serdes;\n-import org.apache.kafka.common.serialization.StringSerializer;\n-import org.apache.kafka.streams.StreamsBuilder;\n-import org.apache.kafka.streams.StreamsConfig;\n-import org.apache.kafka.streams.TestInputTopic;\n-import org.apache.kafka.streams.Topology;\n-import org.apache.kafka.streams.TopologyTestDriver;\n-import org.apache.kafka.streams.kstream.Consumed;\n-import org.apache.kafka.streams.kstream.KTable;\n-import org.apache.kafka.streams.kstream.Materialized;\n-import org.apache.kafka.streams.utils.UniqueTopicSerdeScope;\n-import org.apache.kafka.test.TestUtils;\n-import org.junit.Test;\n-\n-import java.util.Collection;\n-import java.util.LinkedList;\n-import java.util.List;\n-import java.util.Properties;\n-\n-import static org.apache.kafka.common.utils.Utils.mkEntry;\n-import static org.apache.kafka.common.utils.Utils.mkMap;\n-import static org.apache.kafka.common.utils.Utils.mkProperties;\n-import static org.apache.kafka.common.utils.Utils.mkSet;\n-import static org.hamcrest.CoreMatchers.is;\n-import static org.hamcrest.MatcherAssert.assertThat;\n-\n-\n-public class KTableKTableForeignKeyJoinPseudoTopicTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE2OTUyOQ==", "bodyText": "I merged this test with another as a non-integration test, since it uses TTD and does not really creates a cluster :)", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413169529", "createdAt": "2020-04-22T17:19:26Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/kstream/internals/KTableKTableForeignKeyJoinScenarioTest.java", "diffHunk": "@@ -14,7 +14,7 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-package org.apache.kafka.streams.integration;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDE2NA==", "bodyText": "For this test, we did need to reuse the created topics and hence I reduced the session / heartbeat timeout so that their rebalance timeout could be much smaller.", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413170164", "createdAt": "2020-04-22T17:20:23Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -80,14 +83,18 @@ public static void setUpBeforeAllTests() throws Exception {\n         STREAMS_CONFIG.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG, 0);\n         STREAMS_CONFIG.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 5);\n         STREAMS_CONFIG.put(StreamsConfig.DEFAULT_TIMESTAMP_EXTRACTOR_CLASS_CONFIG, WallclockTimestampExtractor.class);\n+        STREAMS_CONFIG.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzE3MDU4NA==", "bodyText": "Similar here, for this test I reduced the session / heartbeat timeout so that their rebalance timeout could be much smaller. I think it is simpler than changing a bunch of changelogs / source / sink / and app ids.", "url": "https://github.com/apache/kafka/pull/8530#discussion_r413170584", "createdAt": "2020-04-22T17:21:00Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RestoreIntegrationTest.java", "diffHunk": "@@ -104,6 +104,8 @@ private Properties props(final String applicationId) {\n         streamsConfiguration.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG, Serdes.Integer().getClass());\n         streamsConfiguration.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG, 1000);\n         streamsConfiguration.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG, \"earliest\");\n+        streamsConfiguration.put(ConsumerConfig.SESSION_TIMEOUT_MS_CONFIG, 1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDg3MDM2", "url": "https://github.com/apache/kafka/pull/8530#pullrequestreview-398487036", "createdAt": "2020-04-22T18:58:04Z", "commit": {"oid": "1bcd1db9aff9c52e0aca5dd788000f748ab477c9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1622, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}