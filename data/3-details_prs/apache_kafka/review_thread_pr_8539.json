{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MTY3NzMy", "number": 8539, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo0NjoyNVrOD1d_vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo0NjoyNVrOD1d_vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzkyNTcyOnYy", "diffSide": "RIGHT", "path": "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo0NjoyNlrOGK7aow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDo0NjoyNlrOGK7aow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDExMjQxOQ==", "bodyText": "nit: unneeded parenthesis", "url": "https://github.com/apache/kafka/pull/8539#discussion_r414112419", "createdAt": "2020-04-23T20:46:26Z", "author": {"login": "hachikuji"}, "path": "generator/src/main/java/org/apache/kafka/message/MessageDataGenerator.java", "diffHunk": "@@ -2003,15 +2007,17 @@ private void generateStringToBytes(String name) {\n         buffer.printf(\"_cache.cacheSerializedValue(%s, _stringBytes);%n\", name);\n     }\n \n-    private void generateClassEquals(String className, StructSpec struct, boolean onlyMapKeys) {\n+    private void generateClassEquals(String className, StructSpec struct,\n+                                     boolean elementKeysAreEqual) {\n         buffer.printf(\"@Override%n\");\n-        buffer.printf(\"public boolean equals(Object obj) {%n\");\n+        buffer.printf(\"public boolean %s(Object obj) {%n\",\n+            elementKeysAreEqual ? \"elementKeysAreEqual\" : \"equals\");\n         buffer.incrementIndent();\n         buffer.printf(\"if (!(obj instanceof %s)) return false;%n\", className);\n         if (!struct.fields().isEmpty()) {\n             buffer.printf(\"%s other = (%s) obj;%n\", className, className);\n             for (FieldSpec field : struct.fields()) {\n-                if ((!onlyMapKeys) || field.mapKey()) {\n+                if ((!elementKeysAreEqual) || field.mapKey()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "854dd314da93bba231cdbc1b7edb3b53d45fb4f8"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2767, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}