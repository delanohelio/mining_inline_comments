{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyODE4NjU1", "number": 8850, "title": "KAFKA-10141: Add more detail to log segment delete messages", "bodyText": "As specified in https://issues.apache.org/jira/browse/KAFKA-10141, it would be helpful to include as much information as possible when deleting log segments. This patch introduces log messages that give more specific details as to why the log segment was deleted and the specific metadata regarding that log segment.\nMore detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-11T03:37:38Z", "url": "https://github.com/apache/kafka/pull/8850", "merged": true, "mergeCommit": {"oid": "1e5fa9e082fcd5875222f9d7458ffa1fa7b1587b"}, "closed": true, "closedAt": "2020-06-19T03:32:56Z", "author": {"login": "skaundinya15"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqH5vHAFqTQyODYxMjcyNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcsy5xFAFqTQzNDA2ODkwOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NjEyNzI3", "url": "https://github.com/apache/kafka/pull/8850#pullrequestreview-428612727", "createdAt": "2020-06-11T05:59:37Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNTo1OTozN1rOGiPhyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwNjowMjo1NFrOGiPlnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1OTE3Nw==", "bodyText": "LogSegment.largestTimestamp may refer to either the largest record timestamp for newer formats or the last modified time of the segment for older formats. I think it would be helpful if the log message indicated which case it is. Perhaps we could add a method like this to LogSegment?\ndef largestRecordTimestamp: Option[Long]", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438559177", "createdAt": "2020-06-11T05:59:37Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1784,8 +1784,18 @@ class Log(@volatile private var _dir: File,\n   private def deleteRetentionMsBreachedSegments(): Int = {\n     if (config.retentionMs < 0) return 0\n     val startMs = time.milliseconds\n-    deleteOldSegments((segment, _) => startMs - segment.largestTimestamp > config.retentionMs,\n-      reason = s\"retention time ${config.retentionMs}ms breach\")\n+\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (startMs - segment.largestTimestamp > config.retentionMs) {\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU1OTk5NQ==", "bodyText": "With the logging we have above, do you think we still need the message in deleteOldSegments? Perhaps we could make it more concise at least. Maybe just mention the number of segments to be deleted for example.", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438559995", "createdAt": "2020-06-11T06:02:25Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1784,8 +1784,18 @@ class Log(@volatile private var _dir: File,\n   private def deleteRetentionMsBreachedSegments(): Int = {\n     if (config.retentionMs < 0) return 0\n     val startMs = time.milliseconds\n-    deleteOldSegments((segment, _) => startMs - segment.largestTimestamp > config.retentionMs,\n-      reason = s\"retention time ${config.retentionMs}ms breach\")\n+\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (startMs - segment.largestTimestamp > config.retentionMs) {\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+          s\" retentionMs breach. Largest timestamp of segment is ${segment.largestTimestamp}\")\n+        true\n+      } else {\n+        false\n+      }\n+    }\n+\n+    deleteOldSegments(shouldDelete, reason = s\"retention time ${config.retentionMs}ms breach\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODU2MDE1Ng==", "bodyText": "nit: space after info", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438560156", "createdAt": "2020-06-11T06:02:54Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1804,8 +1816,15 @@ class Log(@volatile private var _dir: File,\n   }\n \n   private def deleteLogStartOffsetBreachedSegments(): Int = {\n-    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) =\n-      nextSegmentOpt.exists(_.baseOffset <= logStartOffset)\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (nextSegmentOpt.exists(_.baseOffset <= logStartOffset)) {\n+        info (s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 38}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5MTg1NDI2", "url": "https://github.com/apache/kafka/pull/8850#pullrequestreview-429185426", "createdAt": "2020-06-11T18:36:19Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODozNjoxOVrOGip_CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxODo0ODoxM1rOGiqXqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5MjY0OQ==", "bodyText": "In addition, it might be useful to know the total log size. Maybe we could include size - diff as the size after deletion?", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438992649", "createdAt": "2020-06-11T18:36:19Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1794,20 +1811,29 @@ class Log(@volatile private var _dir: File,\n     def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n       if (diff - segment.size >= 0) {\n         diff -= segment.size\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5NzYyMg==", "bodyText": "Can we keep the reason? On second thought, maybe it's fine to leave this as is.", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438997622", "createdAt": "2020-06-11T18:45:42Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1702,11 +1702,12 @@ class Log(@volatile private var _dir: File,\n    *                  (if there is one) and returns true iff it is deletable\n    * @return The number of segments deleted\n    */\n-  private def deleteOldSegments(predicate: (LogSegment, Option[LogSegment]) => Boolean, reason: String): Int = {\n+  private def deleteOldSegments(predicate: (LogSegment, Option[LogSegment]) => Boolean) = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5ODk1NQ==", "bodyText": "nit: could we make the connection clearer? How about this?\n   info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n              s\" retentionMs breach based on the largest record timestamp from the segment, which is $ts\")\nAlso, we seem to have lost mention o", "url": "https://github.com/apache/kafka/pull/8850#discussion_r438998955", "createdAt": "2020-06-11T18:48:13Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1784,8 +1785,24 @@ class Log(@volatile private var _dir: File,\n   private def deleteRetentionMsBreachedSegments(): Int = {\n     if (config.retentionMs < 0) return 0\n     val startMs = time.milliseconds\n-    deleteOldSegments((segment, _) => startMs - segment.largestTimestamp > config.retentionMs,\n-      reason = s\"retention time ${config.retentionMs}ms breach\")\n+\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (startMs - segment.largestTimestamp > config.retentionMs) {\n+        segment.largestRecordTimestamp match {\n+          case Some(ts) =>\n+            info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+              s\" retentionMs breach. Largest record timestamp of segment is $ts\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyNjA3MDAy", "url": "https://github.com/apache/kafka/pull/8850#pullrequestreview-432607002", "createdAt": "2020-06-17T17:11:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoxMTozNFrOGlPOig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QxNzoxNzo0M1rOGlPb0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTY5OTk3OA==", "bodyText": "We lost the reference to config.retentionMs.", "url": "https://github.com/apache/kafka/pull/8850#discussion_r441699978", "createdAt": "2020-06-17T17:11:34Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1784,8 +1785,26 @@ class Log(@volatile private var _dir: File,\n   private def deleteRetentionMsBreachedSegments(): Int = {\n     if (config.retentionMs < 0) return 0\n     val startMs = time.milliseconds\n-    deleteOldSegments((segment, _) => startMs - segment.largestTimestamp > config.retentionMs,\n-      reason = s\"retention time ${config.retentionMs}ms breach\")\n+\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (startMs - segment.largestTimestamp > config.retentionMs) {\n+        segment.largestRecordTimestamp match {\n+          case Some(ts) =>\n+            info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+              s\" retentionMs breach based on the largest record timestamp from the segment, which\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMTAwMw==", "bodyText": "Similarly, can you mention config.retentionSize?", "url": "https://github.com/apache/kafka/pull/8850#discussion_r441701003", "createdAt": "2020-06-17T17:13:22Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1794,20 +1813,30 @@ class Log(@volatile private var _dir: File,\n     def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n       if (diff - segment.size >= 0) {\n         diff -= segment.size\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+          s\" retentionSize breach. Segment size is ${segment.size} and total log size after\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMjc1NA==", "bodyText": "nit: braces unnecessary for simple variable references", "url": "https://github.com/apache/kafka/pull/8850#discussion_r441702754", "createdAt": "2020-06-17T17:16:33Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1794,20 +1813,30 @@ class Log(@volatile private var _dir: File,\n     def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n       if (diff - segment.size >= 0) {\n         diff -= segment.size\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+          s\" retentionSize breach. Segment size is ${segment.size} and total log size after\" +\n+          s\" deletion will be ${size - diff}\")\n         true\n       } else {\n         false\n       }\n     }\n \n-    deleteOldSegments(shouldDelete, reason = s\"retention size in bytes ${config.retentionSize} breach\")\n+    deleteOldSegments(shouldDelete)\n   }\n \n   private def deleteLogStartOffsetBreachedSegments(): Int = {\n-    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) =\n-      nextSegmentOpt.exists(_.baseOffset <= logStartOffset)\n+    def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n+      if (nextSegmentOpt.exists(_.baseOffset <= logStartOffset)) {\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+          s\" startOffset breach. logStartOffset is ${logStartOffset}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTcwMzM3Ng==", "bodyText": "In that case, perhaps we can remove the log message? We already have the following logging in the deleteSegments path:\n  private def deleteSegmentFiles(segments: Iterable[LogSegment], asyncDelete: Boolean): Unit = {\n    segments.foreach(_.changeFileSuffixes(\"\", Log.DeletedFileSuffix))\n\n    def deleteSegments(): Unit = {\n      info(s\"Deleting segments ${segments.mkString(\",\")}\")\n      maybeHandleIOException(s\"Error while deleting segments for $topicPartition in dir ${dir.getParent}\") {\n        segments.foreach(_.deleteIfExists())\n      }\n    }\n\n    if (asyncDelete) {\n      info(s\"Scheduling segments for deletion ${segments.mkString(\",\")}\")\n      scheduler.schedule(\"delete-file\", () => deleteSegments, delay = config.fileDeleteDelayMs)\n    } else {\n      deleteSegments()\n    }\n  }\nSo it seems this message is not adding any additional value.", "url": "https://github.com/apache/kafka/pull/8850#discussion_r441703376", "createdAt": "2020-06-17T17:17:43Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1702,11 +1702,12 @@ class Log(@volatile private var _dir: File,\n    *                  (if there is one) and returns true iff it is deletable\n    * @return The number of segments deleted\n    */\n-  private def deleteOldSegments(predicate: (LogSegment, Option[LogSegment]) => Boolean, reason: String): Int = {\n+  private def deleteOldSegments(predicate: (LogSegment, Option[LogSegment]) => Boolean) = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODk5NzYyMg=="}, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyODk0NDI5", "url": "https://github.com/apache/kafka/pull/8850#pullrequestreview-432894429", "createdAt": "2020-06-18T02:16:41Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjoxNjo0MVrOGldR2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwMjoxNjo0MVrOGldR2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTkzMDIwMA==", "bodyText": "nit: \".. will be deleted due to retention size in bytes ${config.retentionSize} breach.\"", "url": "https://github.com/apache/kafka/pull/8850#discussion_r441930200", "createdAt": "2020-06-18T02:16:41Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/log/Log.scala", "diffHunk": "@@ -1794,20 +1811,30 @@ class Log(@volatile private var _dir: File,\n     def shouldDelete(segment: LogSegment, nextSegmentOpt: Option[LogSegment]) = {\n       if (diff - segment.size >= 0) {\n         diff -= segment.size\n+        info(s\"Segment with base offset ${segment.baseOffset} will be deleted due to\" +\n+          s\" ${config.retentionSize} breach. Segment size is ${segment.size} and total log size\" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 47}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "576f5ade7218cc7f3b3ec8557aae3a17a7b35597", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/576f5ade7218cc7f3b3ec8557aae3a17a7b35597", "committedDate": "2020-06-18T06:03:57Z", "message": "KAFKA-10141: Add more detail to log segment delete messages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79f20319a320b253ee6c1991b01a697efb8f18c5", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/79f20319a320b253ee6c1991b01a697efb8f18c5", "committedDate": "2020-06-18T06:03:57Z", "message": "Addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "05b176862afc410f2a482a4df6e1aca216bd7c28", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/05b176862afc410f2a482a4df6e1aca216bd7c28", "committedDate": "2020-06-18T06:03:57Z", "message": "Addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ae7d6759adb555bd5c768b0923f7f4b7445e8f1", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/5ae7d6759adb555bd5c768b0923f7f4b7445e8f1", "committedDate": "2020-06-18T06:03:57Z", "message": "addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44fcc4b1cd3f269d193f8bceb7d89a0a175c4644", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/44fcc4b1cd3f269d193f8bceb7d89a0a175c4644", "committedDate": "2020-06-18T06:03:57Z", "message": "addressed PR comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "44fcc4b1cd3f269d193f8bceb7d89a0a175c4644", "author": {"user": {"login": "skaundinya15", "name": "Sanjana Kaundinya"}}, "url": "https://github.com/apache/kafka/commit/44fcc4b1cd3f269d193f8bceb7d89a0a175c4644", "committedDate": "2020-06-18T06:03:57Z", "message": "addressed PR comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "068a9061f31a2536e43cb4f650b958342c0a9ae3", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/068a9061f31a2536e43cb4f650b958342c0a9ae3", "committedDate": "2020-06-19T00:21:56Z", "message": "Clarify retention time in comment"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MDY4OTA5", "url": "https://github.com/apache/kafka/pull/8850#pullrequestreview-434068909", "createdAt": "2020-06-19T13:17:06Z", "commit": {"oid": "068a9061f31a2536e43cb4f650b958342c0a9ae3"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 590, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}