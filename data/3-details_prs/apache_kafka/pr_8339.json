{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODIwMzYz", "number": 8339, "title": "KAFKA-9752; New member timeout can leave group rebalance stuck", "bodyText": "Older versions of the JoinGroup rely on a new member timeout to keep the group from growing indefinitely in the case of client disconnects and retrying. The logic for resetting the heartbeat expiration task following completion of the rebalance failed to account for an implicit expectation that shouldKeepAlive would return false the first time it is invoked when a heartbeat expiration is scheduled. This patch fixes the issue by making heartbeat satisfaction logic explicit.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-24T07:21:31Z", "url": "https://github.com/apache/kafka/pull/8339", "merged": true, "mergeCommit": {"oid": "ef1cd3490a591d6a2436a847688b317fe3d48344"}, "closed": true, "closedAt": "2020-03-25T05:16:50Z", "author": {"login": "hachikuji"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQtt6kgBqjMxNTgzODM2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQ6wW3gBqjMxNjE4MTExMjc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMjI3Mzk3", "url": "https://github.com/apache/kafka/pull/8339#pullrequestreview-380227397", "createdAt": "2020-03-24T11:40:18Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMTo0MDoxOFrOF6sV6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMTo0MzoxN1rOF6sb-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4ODIzMw==", "bodyText": "May be useful to add a comment since this has a slightly unusual usage", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397088233", "createdAt": "2020-03-24T11:40:18Z", "author": {"login": "rajinisivaram"}, "path": "core/src/main/scala/kafka/coordinator/group/MemberMetadata.scala", "diffHunk": "@@ -66,7 +66,7 @@ private[group] class MemberMetadata(var memberId: String,\n   var assignment: Array[Byte] = Array.empty[Byte]\n   var awaitingJoinCallback: JoinGroupResult => Unit = null\n   var awaitingSyncCallback: SyncGroupResult => Unit = null\n-  var latestHeartbeat: Long = -1\n+  var heartbeatSatisfied: Boolean = false", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4OTc4Nw==", "bodyText": "Sad to see this go since it was useful when things went wrong. But since it is not used anymore, I guess it must go.", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397089787", "createdAt": "2020-03-24T11:43:17Z", "author": {"login": "rajinisivaram"}, "path": "core/src/main/scala/kafka/coordinator/group/MemberMetadata.scala", "diffHunk": "@@ -66,7 +66,7 @@ private[group] class MemberMetadata(var memberId: String,\n   var assignment: Array[Byte] = Array.empty[Byte]\n   var awaitingJoinCallback: JoinGroupResult => Unit = null\n   var awaitingSyncCallback: SyncGroupResult => Unit = null\n-  var latestHeartbeat: Long = -1", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNTk4Mjg5", "url": "https://github.com/apache/kafka/pull/8339#pullrequestreview-380598289", "createdAt": "2020-03-24T18:42:33Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODo0MjozNFrOF6-PDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxODo1NToxNlrOF6-sWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4MTM5MA==", "bodyText": "I had a different idea about this, but after second thought I think it's better to just make it hard-explicit, rather than embedding in a less-readable math equation. Now I feel it's better to be unusual than bug-vulnerable.", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397381390", "createdAt": "2020-03-24T18:42:34Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/coordinator/group/MemberMetadata.scala", "diffHunk": "@@ -66,7 +66,7 @@ private[group] class MemberMetadata(var memberId: String,\n   var assignment: Array[Byte] = Array.empty[Byte]\n   var awaitingJoinCallback: JoinGroupResult => Unit = null\n   var awaitingSyncCallback: SyncGroupResult => Unit = null\n-  var latestHeartbeat: Long = -1\n+  var heartbeatSatisfied: Boolean = false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA4ODIzMw=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4Nzk4OA==", "bodyText": "Hmm, do we still need to rely on isNew here? Could the condition just be heartbeatSatisfied || isAwaitingJoin || isAwaitingSync?", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397387988", "createdAt": "2020-03-24T18:53:42Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/coordinator/group/MemberMetadata.scala", "diffHunk": "@@ -85,16 +85,16 @@ private[group] class MemberMetadata(var memberId: String,\n     }\n   }\n \n-  def shouldKeepAlive(deadlineMs: Long): Boolean = {\n+  def hasSatisfiedHeartbeat: Boolean = {\n     if (isNew) {\n-      // New members are expired after the static join timeout\n-      latestHeartbeat + GroupCoordinator.NewMemberJoinTimeoutMs > deadlineMs\n+      // New members can be expired while awaiting join, so we have to check this first", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM4ODg4OQ==", "bodyText": "Not sure if this test covers the original bug, could you elaborate a bit more?", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397388889", "createdAt": "2020-03-24T18:55:16Z", "author": {"login": "guozhangwang"}, "path": "core/src/test/scala/unit/kafka/coordinator/group/GroupCoordinatorTest.scala", "diffHunk": "@@ -381,6 +381,41 @@ class GroupCoordinatorTest {\n     assertEquals(firstMemberId, group.allMembers.head)\n   }\n \n+  @Test\n+  def testLeaderFailsBeforeSyncGroup(): Unit = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNjM2ODM5", "url": "https://github.com/apache/kafka/pull/8339#pullrequestreview-380636839", "createdAt": "2020-03-24T19:37:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozNzowN1rOF7AHgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTozNzowN1rOF7AHgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzQxMjIyNw==", "bodyText": "why to complete Heartbeat here?", "url": "https://github.com/apache/kafka/pull/8339#discussion_r397412227", "createdAt": "2020-03-24T19:37:07Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/coordinator/group/GroupCoordinator.scala", "diffHunk": "@@ -1167,25 +1170,23 @@ class GroupCoordinator(val brokerId: Int,\n         if (group.has(memberId)) {\n           forceComplete()\n         } else false\n-      } else {\n-        if (shouldCompleteNonPendingHeartbeat(group, memberId, heartbeatDeadline)) {\n-          forceComplete()\n-        } else false\n-      }\n+      } else if (shouldCompleteNonPendingHeartbeat(group, memberId)) {\n+        forceComplete()\n+      } else false\n     }\n   }\n \n-  def shouldCompleteNonPendingHeartbeat(group: GroupMetadata, memberId: String, heartbeatDeadline: Long): Boolean = {\n+  def shouldCompleteNonPendingHeartbeat(group: GroupMetadata, memberId: String): Boolean = {\n     if (group.has(memberId)) {\n       val member = group.get(memberId)\n-      member.shouldKeepAlive(heartbeatDeadline) || member.isLeaving\n+      member.hasSatisfiedHeartbeat || member.isLeaving\n     } else {\n-      info(s\"Member id $memberId was not found in ${group.groupId} during heartbeat expiration.\")\n-      false\n+      info(s\"Member id $memberId was not found in ${group.groupId} during heartbeat completion check\")\n+      true", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edc6f8e1e451054026c5b7339c80e935a365932c", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/edc6f8e1e451054026c5b7339c80e935a365932c", "committedDate": "2020-03-24T22:00:55Z", "message": "KAFKA-9752; New member timeout can leave rebalance stuck"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b64ad18e2413bcc0ae18fa134403bc2a594427ea", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/b64ad18e2413bcc0ae18fa134403bc2a594427ea", "committedDate": "2020-03-24T22:35:02Z", "message": "Address comments and add another test case"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "b64ad18e2413bcc0ae18fa134403bc2a594427ea", "author": {"user": {"login": "hachikuji", "name": "Jason Gustafson"}}, "url": "https://github.com/apache/kafka/commit/b64ad18e2413bcc0ae18fa134403bc2a594427ea", "committedDate": "2020-03-24T22:35:02Z", "message": "Address comments and add another test case"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1640, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}