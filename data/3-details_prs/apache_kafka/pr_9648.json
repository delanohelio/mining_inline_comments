{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2MTA3MzUw", "number": 9648, "title": "KAFKA-10758: ProcessorTopology should only consider its own nodes when updating regex source topics", "bodyText": "The problem is basically just that we compare two incompatible sets in ProcessorTopology#updateSourceTopics: the local sourceNodesByName map only contains nodes that correspond to a particular subtopology whereas the passed-in nodeToSourceTopics ultimately comes from the InternalTopologyBuilder's map, which contains nodes for the entire topology. So we would end up hitting the IllegalStateException thrown in #updateSourceTopics` any time we tried to update an application with more than one subtopology.\nThe fix is simple, we just need to ignore any source nodes that aren't part of the ProcessorTopology's subtopology.", "createdAt": "2020-11-24T01:20:02Z", "url": "https://github.com/apache/kafka/pull/9648", "merged": true, "mergeCommit": {"oid": "dbf4e63ae7e4c637917124c148d5f21193d395b1"}, "closed": true, "closedAt": "2020-11-25T01:59:30Z", "author": {"login": "ableegoldman"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdffXMsgFqTUzNjk3MTk1Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfxQvJgH2gAyNTI2MTA3MzUwOjYwYjk1NzYwMjEzMTQyYmExMTU5ZDc5YmIxYzFiMTc2NWQ2ZWNiNmI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTcxOTUy", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-536971952", "createdAt": "2020-11-24T01:21:17Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyMToxN1rOH4lyuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyMToxN1rOH4lyuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwMTQ5OQ==", "bodyText": "Since the root cause of this bug was basically just confusion over what exactly this set contains, a renaming feels in order", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529101499", "createdAt": "2020-11-24T01:21:17Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -154,9 +154,9 @@ final void transitionTo(final Task.State newState) {\n     }\n \n     @Override\n-    public void update(final Set<TopicPartition> topicPartitions, final Map<String, List<String>> nodeToSourceTopics) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTc0MjI2", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-536974226", "createdAt": "2020-11-24T01:24:06Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyNDowNlrOH4l8iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyNDowNlrOH4l8iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwNDAxMQ==", "bodyText": "In addition to removing the fault check, I slightly refactored this loop so that we only loop over the source nodes in this particular subtopology. Previously we would have added entries for all source nodes across the entire topology to our sourceNodesByTopic map", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529104011", "createdAt": "2020-11-24T01:24:06Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorTopology.java", "diffHunk": "@@ -149,24 +149,30 @@ public boolean hasPersistentGlobalStore() {\n         return false;\n     }\n \n-    public void updateSourceTopics(final Map<String, List<String>> sourceTopicsByName) {\n-        if (!sourceTopicsByName.keySet().equals(sourceNodesByName.keySet())) {\n-            log.error(\"Set of source nodes do not match: \\n\" +\n-                \"sourceNodesByName = {}\\n\" +\n-                \"sourceTopicsByName = {}\",\n-                sourceNodesByName.keySet(), sourceTopicsByName.keySet());\n-            throw new IllegalStateException(\"Tried to update source topics but source nodes did not match\");\n-        }\n+    public void updateSourceTopics(final Map<String, List<String>> allSourceTopicsByNodeName) {\n         sourceNodesByTopic.clear();\n-        for (final Map.Entry<String, List<String>> sourceEntry : sourceTopicsByName.entrySet()) {\n-            final String nodeName = sourceEntry.getKey();\n-            for (final String topic : sourceEntry.getValue()) {\n+        for (final Map.Entry<String, SourceNode<?, ?, ?, ?>> sourceNodeEntry : sourceNodesByName.entrySet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTgzOTY5", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-536983969", "createdAt": "2020-11-24T01:29:28Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyOToyOFrOH4mRaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMToyOToyOFrOH4mRaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwOTM1NQ==", "bodyText": "We didn't catch the bug in this test for two reasons: it has only one subtopology, and it didn't wait for Streams to get to RUNNING before it created the new topic. So we weren't even covering the \"update source topics\" code path since all topics existed by the first assignment", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529109355", "createdAt": "2020-11-24T01:29:28Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java", "diffHunk": "@@ -198,9 +200,16 @@ public void testRegexRecordsAreProcessedAfterReassignment() throws Exception {\n \n             final StreamsBuilder builder = new StreamsBuilder();\n             final KStream<String, String> pattern1Stream = builder.stream(Pattern.compile(\"TEST-TOPIC-\\\\d\"));\n-            pattern1Stream.to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n+            final KStream<String, String> otherStream = builder.stream(Pattern.compile(\"not-a-match\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2OTg2MzM2", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-536986336", "createdAt": "2020-11-24T01:30:48Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTozMDo0OFrOH4mTKw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwMTozMDo0OFrOH4mTKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTEwOTgwMw==", "bodyText": "Technically it's sufficient to just add the second KStream above for a multi-subtopology application, but I felt the test coverage could only stand to benefit with (slightly) more complicated examples", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529109803", "createdAt": "2020-11-24T01:30:48Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java", "diffHunk": "@@ -198,9 +200,16 @@ public void testRegexRecordsAreProcessedAfterReassignment() throws Exception {\n \n             final StreamsBuilder builder = new StreamsBuilder();\n             final KStream<String, String> pattern1Stream = builder.stream(Pattern.compile(\"TEST-TOPIC-\\\\d\"));\n-            pattern1Stream.to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n+            final KStream<String, String> otherStream = builder.stream(Pattern.compile(\"not-a-match\"));\n+\n+            pattern1Stream", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MDE3NDgw", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-537017480", "createdAt": "2020-11-24T01:54:48Z", "commit": null, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156", "committedDate": "2020-11-24T02:07:53Z", "message": "refactor upDateSourceTopics, fix up test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156", "committedDate": "2020-11-24T02:07:53Z", "message": "refactor upDateSourceTopics, fix up test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3MTg3MjE2", "url": "https://github.com/apache/kafka/pull/9648#pullrequestreview-537187216", "createdAt": "2020-11-24T08:17:02Z", "commit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODoxNzowMlrOH4wsSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwODozOTo0OVrOH4xkAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI4MDA3Mg==", "bodyText": "Could you also add a unit test that verifies that the issue is gone?", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529280072", "createdAt": "2020-11-24T08:17:02Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/ProcessorTopology.java", "diffHunk": "@@ -149,24 +149,30 @@ public boolean hasPersistentGlobalStore() {\n         return false;\n     }\n \n-    public void updateSourceTopics(final Map<String, List<String>> sourceTopicsByName) {\n-        if (!sourceTopicsByName.keySet().equals(sourceNodesByName.keySet())) {\n-            log.error(\"Set of source nodes do not match: \\n\" +\n-                \"sourceNodesByName = {}\\n\" +\n-                \"sourceTopicsByName = {}\",\n-                sourceNodesByName.keySet(), sourceTopicsByName.keySet());\n-            throw new IllegalStateException(\"Tried to update source topics but source nodes did not match\");\n-        }\n+    public void updateSourceTopics(final Map<String, List<String>> allSourceTopicsByNodeName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5Mjk2OA==", "bodyText": "I would add the following assert here to ensure we have more than one sub-topology:\n            final Topology topology = builder.build();\n            assertThat(topology.describe().subtopologies().size(), greaterThan(1));\n            streams = new KafkaStreams(topology, streamsConfiguration);\n\nJust to make it clear that we want to test with multiple sub-topologies.", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529292968", "createdAt": "2020-11-24T08:37:43Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java", "diffHunk": "@@ -198,9 +200,16 @@ public void testRegexRecordsAreProcessedAfterReassignment() throws Exception {\n \n             final StreamsBuilder builder = new StreamsBuilder();\n             final KStream<String, String> pattern1Stream = builder.stream(Pattern.compile(\"TEST-TOPIC-\\\\d\"));\n-            pattern1Stream.to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n+            final KStream<String, String> otherStream = builder.stream(Pattern.compile(\"not-a-match\"));\n+\n+            pattern1Stream\n+                .selectKey((k, v) -> k)\n+                .groupByKey()\n+                .aggregate(() -> \"\", (k, v, a) -> v)\n+                .toStream().to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n+\n             streams = new KafkaStreams(builder.build(), streamsConfiguration);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI5NDMzNw==", "bodyText": "I would even add otherStream like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            .toStream().to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n          \n          \n            \n                            .toStream()\n          \n          \n            \n                            .merge(otherStream)\n          \n          \n            \n                            .to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));", "url": "https://github.com/apache/kafka/pull/9648#discussion_r529294337", "createdAt": "2020-11-24T08:39:49Z", "author": {"login": "cadonna"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/RegexSourceIntegrationTest.java", "diffHunk": "@@ -198,9 +200,16 @@ public void testRegexRecordsAreProcessedAfterReassignment() throws Exception {\n \n             final StreamsBuilder builder = new StreamsBuilder();\n             final KStream<String, String> pattern1Stream = builder.stream(Pattern.compile(\"TEST-TOPIC-\\\\d\"));\n-            pattern1Stream.to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));\n+            final KStream<String, String> otherStream = builder.stream(Pattern.compile(\"not-a-match\"));\n+\n+            pattern1Stream\n+                .selectKey((k, v) -> k)\n+                .groupByKey()\n+                .aggregate(() -> \"\", (k, v, a) -> v)\n+                .toStream().to(outputTopic, Produced.with(Serdes.String(), Serdes.String()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfdf63573ba083b6d186a2bd4bb7c2d39a4b6156"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f2a32dd8cc5638df3ca6b8413059df0704ae11", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/46f2a32dd8cc5638df3ca6b8413059df0704ae11", "committedDate": "2020-11-24T18:42:58Z", "message": "review feedback"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "46f2a32dd8cc5638df3ca6b8413059df0704ae11", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/46f2a32dd8cc5638df3ca6b8413059df0704ae11", "committedDate": "2020-11-24T18:42:58Z", "message": "review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60b95760213142ba1159d79bb1c1b1765d6ecb6b", "author": {"user": {"login": "ableegoldman", "name": "A. Sophie Blee-Goldman"}}, "url": "https://github.com/apache/kafka/commit/60b95760213142ba1159d79bb1c1b1765d6ecb6b", "committedDate": "2020-11-24T22:12:31Z", "message": "add unit test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2475, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}