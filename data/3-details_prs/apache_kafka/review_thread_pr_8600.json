{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMzAwNTMz", "number": 8600, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNTo1M1rOD4fBEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNTo1M1rOD4fBEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTU1MDI1OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNTo1M1rOGPVuqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQyMTowNTo1M1rOGPVuqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODczNzgzNQ==", "bodyText": "This might be the actually fix. Not sure why we set retries to one, but if we would loose input data, we would never complete the result and the test would time out. (Maybe not relevant for aborted message, but same below)", "url": "https://github.com/apache/kafka/pull/8600#discussion_r418737835", "createdAt": "2020-05-01T21:05:53Z", "author": {"login": "mjsax"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/GlobalKTableEOSIntegrationTest.java", "diffHunk": "@@ -304,59 +382,64 @@ private void startStreams() {\n \n     private void produceTopicValues(final String topic) {\n         IntegrationTestUtils.produceKeyValuesSynchronously(\n-                topic,\n-                Arrays.asList(\n-                        new KeyValue<>(\"a\", 1L),\n-                        new KeyValue<>(\"b\", 2L),\n-                        new KeyValue<>(\"c\", 3L),\n-                        new KeyValue<>(\"d\", 4L),\n-                        new KeyValue<>(\"e\", 5L)),\n-                TestUtils.producerConfig(\n-                        CLUSTER.bootstrapServers(),\n-                        StringSerializer.class,\n-                        LongSerializer.class,\n-                        new Properties()),\n-                mockTime);\n+            topic,\n+            Arrays.asList(\n+                new KeyValue<>(\"a\", 1L),\n+                new KeyValue<>(\"b\", 2L),\n+                new KeyValue<>(\"c\", 3L),\n+                new KeyValue<>(\"d\", 4L),\n+                new KeyValue<>(\"e\", 5L)\n+            ),\n+            TestUtils.producerConfig(\n+                CLUSTER.bootstrapServers(),\n+                StringSerializer.class,\n+                LongSerializer.class,\n+                new Properties()\n+            ),\n+            mockTime\n+        );\n     }\n \n     private void produceAbortedMessages() throws Exception {\n         final Properties properties = new Properties();\n         properties.put(ProducerConfig.TRANSACTIONAL_ID_CONFIG, \"someid\");\n-        properties.put(ProducerConfig.RETRIES_CONFIG, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0d5f566078db5b4ad463142978c8cbd2af23974"}, "originalPosition": 268}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2859, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}