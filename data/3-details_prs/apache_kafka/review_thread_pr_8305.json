{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5NTQxMzQ3", "number": 8305, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzozNjowMVrODoiUEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzozNjowMVrODoiUEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQzODMxODI0OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzozNjowMVrOF3JT3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQyMzozNjowMVrOF3JT3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzM2ODU0MQ==", "bodyText": "Good call.", "url": "https://github.com/apache/kafka/pull/8305#discussion_r393368541", "createdAt": "2020-03-16T23:36:01Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/processor/internals/StateDirectoryTest.java", "diffHunk": "@@ -315,13 +322,17 @@ public void shouldOnlyListNonEmptyTaskDirectories() {\n         final File storeDir = new File(taskDir1, \"store\");\n         assertTrue(storeDir.mkdir());\n \n-        assertEquals(Arrays.asList(taskDir1, taskDir2), Arrays.asList(directory.listAllTaskDirectories()));\n-        assertEquals(Collections.singletonList(taskDir1), Arrays.asList(directory.listNonEmptyTaskDirectories()));\n+        assertEquals(mkSet(taskDir1, taskDir2), Arrays.stream(\n+            directory.listAllTaskDirectories()).collect(Collectors.toSet()));\n+        assertEquals(mkSet(taskDir1), Arrays.stream(\n+            directory.listNonEmptyTaskDirectories()).collect(Collectors.toSet()));\n \n         directory.cleanRemovedTasks(0L);\n \n-        assertEquals(Arrays.asList(taskDir1, taskDir2), Arrays.asList(directory.listAllTaskDirectories()));\n-        assertEquals(Collections.emptyList(), Arrays.asList(directory.listNonEmptyTaskDirectories()));\n+        assertEquals(mkSet(taskDir1, taskDir2), Arrays.stream(\n+            directory.listAllTaskDirectories()).collect(Collectors.toSet()));\n+        assertEquals(Collections.emptySet(), Arrays.stream(", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 73}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3341, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}