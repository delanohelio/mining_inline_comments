{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzY0NTM3", "number": 9313, "title": "[mm2] Fix consumer/producer properties override", "bodyText": "Currently the producer/consumer properties override for the MirrorSourceTask and OffsetSyncStore do not work. This is due the props stored into MirrorConnectorConfig have a target.cluster or source.cluster prefix. For example:\nsource.cluster.producer.bootstrap.servers -> localhost:9092\ntarget.cluster.consumer.max.poll.interval.ms -> 120000\ntarget.cluster.consumer.auto.offset.reset -> latest\nsource.cluster.admin.bootstrap.servers -> localhost:9092\n\nThe sourceConsumerConfig will strip this prefix and store all props as:\nproducer.bootstrap.servers -> localhost:9092\nconsumer.auto.offset.reset -> latest\nconsumer.max.poll.interval.ms -> 120000\nalias -> A\nbootstrap.servers -> localhost:9092\nadmin.bootstrap.servers -> localhost:9092\nconsumer.bootstrap.servers -> localhost:9092\n\nThe next line props.keySet().retainAll(MirrorClientConfig.CLIENT_CONFIG_DEF.names()); will strip all the props not defined in this common CLIENT_CONFIG_DEF definition. Not relevant but can be confusing if you think the next line will filter on the current values in props.\nFinally, the props.putAll(originalsWithPrefix(CONSUMER_CLIENT_PREFIX)); is based on the on the originals variable that have the target.cluster or source.cluster prefix. There's no single property with the \"consumer.\" prefix. This patterns repeats with the producer config.\nThis PR also allows to override the hardcoded auto.offset.reset value.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-21T14:59:34Z", "url": "https://github.com/apache/kafka/pull/9313", "merged": true, "mergeCommit": {"oid": "cf202cb6acf38c64a3e8b9e541673a12ee55eaaa"}, "closed": true, "closedAt": "2020-10-16T16:17:04Z", "author": {"login": "scanterog"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLEga3AH2gAyNDkwMzY0NTM3OmMzZGUzMzVmNWE1MjgzMDJhMTE1NmY3OTIwMjk0NWRkOTEzNGZhM2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdTIv3RgFqTUxMDYxMzU1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c3de335f5a528302a1156f79202945dd9134fa3d", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/c3de335f5a528302a1156f79202945dd9134fa3d", "committedDate": "2020-09-21T14:45:26Z", "message": "[mm2] Fix consumer/producer/admin properties override"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyODM5ODU3", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-492839857", "createdAt": "2020-09-21T17:38:48Z", "commit": {"oid": "c3de335f5a528302a1156f79202945dd9134fa3d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/d34777b2329aab08d393d8e3e07d64f007208538", "committedDate": "2020-09-25T15:06:07Z", "message": "Add tests for consumer/producer props override for MirrorConnectorConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzUyMzA0", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-497352304", "createdAt": "2020-09-28T09:46:23Z", "commit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NjoyM1rOHY2R3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwOTo0NzozM1rOHY2Uhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzE4MA==", "bodyText": "These changes are going to break existing users. For example, I have connectors with a few settings prefixed with consumer.. I wonder if we could keep the old behaviour (even if partially broken) while adding the proper prefixes", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495817180", "createdAt": "2020-09-28T09:46:23Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,8 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n-    protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n-    protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n+    protected static final String PRODUCER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"producer.\";\n+    protected static final String CONSUMER_CLIENT_PREFIX = SOURCE_CLUSTER_PREFIX + \"consumer.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTgxNzg2Mw==", "bodyText": "While we're at it, could we also add tests for targetAdminConfig() and sourceAdminConfig()?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r495817863", "createdAt": "2020-09-28T09:47:33Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "diffHunk": "@@ -119,4 +120,41 @@ public void testNonMutationOfConfigDef() {\n             connectorConfigDef.names().contains(taskSpecificProperty)\n         ));\n     }\n+\n+    @Test\n+    public void testSourceConsumerConfig() {\n+        Map<String, String> connectorProps = makeProps(\n+                MirrorConnectorConfig.CONSUMER_CLIENT_PREFIX + \"max.poll.interval.ms\", \"120000\"\n+        );\n+        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n+        Map<String, Object> connectorConsumerProps = config.sourceConsumerConfig();\n+        Map<String, Object> expectedConsumerProps = new HashMap<>();\n+        expectedConsumerProps.put(\"enable.auto.commit\", \"false\");\n+        expectedConsumerProps.put(\"auto.offset.reset\", \"earliest\");\n+        expectedConsumerProps.put(\"max.poll.interval.ms\", \"120000\");\n+        assertEquals(expectedConsumerProps, connectorConsumerProps);\n+\n+        // checking auto.offset.reset override works\n+        connectorProps = makeProps(\n+                MirrorConnectorConfig.CONSUMER_CLIENT_PREFIX + \"auto.offset.reset\", \"latest\"\n+        );\n+        config = new MirrorConnectorConfig(connectorProps);\n+        connectorConsumerProps = config.sourceConsumerConfig();\n+        expectedConsumerProps.put(\"auto.offset.reset\", \"latest\");\n+        expectedConsumerProps.remove(\"max.poll.interval.ms\");\n+        assertEquals(expectedConsumerProps, connectorConsumerProps);\n+    }\n+\n+    @Test\n+    public void testSourceProducerConfig() {\n+        Map<String, String> connectorProps = makeProps(\n+                MirrorConnectorConfig.PRODUCER_CLIENT_PREFIX + \"acks\", \"1\"\n+        );\n+        MirrorConnectorConfig config = new MirrorConnectorConfig(connectorProps);\n+        Map<String, Object> connectorProducerProps = config.sourceProducerConfig();\n+        Map<String, Object> expectedProducerProps = new HashMap<>();\n+        expectedProducerProps.put(\"acks\", \"1\");\n+        assertEquals(expectedProducerProps, connectorProducerProps);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d34777b2329aab08d393d8e3e07d64f007208538"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a4e3bffa9722d88d1e9ba68dd77c28a553d8dae", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/1a4e3bffa9722d88d1e9ba68dd77c28a553d8dae", "committedDate": "2020-09-29T21:44:37Z", "message": "Handle MirrorConnectConfig override for Connect and mm2 dedicated mode"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNDEyMjE1", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-500412215", "createdAt": "2020-10-01T14:32:54Z", "commit": {"oid": "1a4e3bffa9722d88d1e9ba68dd77c28a553d8dae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDozMjo1NVrOHbNUzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNDozMjo1NVrOHbNUzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODI5MTkxNg==", "bodyText": "We should test settings with the source.cluster. prefix too. Same in the test below", "url": "https://github.com/apache/kafka/pull/9313#discussion_r498291916", "createdAt": "2020-10-01T14:32:55Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorConnectorConfigTest.java", "diffHunk": "@@ -119,4 +120,41 @@ public void testNonMutationOfConfigDef() {\n             connectorConfigDef.names().contains(taskSpecificProperty)\n         ));\n     }\n+\n+    @Test\n+    public void testSourceConsumerConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1a4e3bffa9722d88d1e9ba68dd77c28a553d8dae"}, "originalPosition": 14}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4628c909b3d0d576c988f45c66ec800dd0cd291c", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/4628c909b3d0d576c988f45c66ec800dd0cd291c", "committedDate": "2020-10-07T18:59:09Z", "message": "[mm2] Normalize producer/consumer props plus tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6e4d060bc0cb446ef1f493fae3d0a9426227e02", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/d6e4d060bc0cb446ef1f493fae3d0a9426227e02", "committedDate": "2020-10-07T21:39:00Z", "message": "[mm2] Add tests for {source,target}AdminConfig"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/41fecbefd91ea01066d8d808c47431cc24dabbc9", "committedDate": "2020-10-08T14:30:54Z", "message": "[mm2] Fix tests for testClusterConfigProperties"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDU3OTIw", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-505457920", "createdAt": "2020-10-09T08:17:02Z", "commit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxNzowMlrOHe_yAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwODoxNzowMlrOHe_yAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjI2NDMyMQ==", "bodyText": "I was not expecting to see changes in existing tests if we are not breaking compatibility, source.cluster.bootstrap.servers should continue working and still be tested", "url": "https://github.com/apache/kafka/pull/9313#discussion_r502264321", "createdAt": "2020-10-09T08:17:02Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/test/java/org/apache/kafka/connect/mirror/MirrorMakerConfigTest.java", "diffHunk": "@@ -52,10 +52,10 @@ public void testClusterConfigProperties() {\n             \"replication.factor\", \"4\"));\n         Map<String, String> connectorProps = mirrorConfig.connectorBaseConfig(new SourceAndTarget(\"a\", \"b\"),\n             MirrorSourceConnector.class);\n-        assertEquals(\"source.cluster.bootstrap.servers is set\",\n-            \"servers-one\", connectorProps.get(\"source.cluster.bootstrap.servers\"));\n-        assertEquals(\"target.cluster.bootstrap.servers is set\",\n-            \"servers-two\", connectorProps.get(\"target.cluster.bootstrap.servers\"));\n+        assertEquals(\"source.bootstrap.servers is set\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41fecbefd91ea01066d8d808c47431cc24dabbc9"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfc668222239a7be286ed843880093725e587402", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/dfc668222239a7be286ed843880093725e587402", "committedDate": "2020-10-12T17:52:35Z", "message": "[mm2] Diff prefix for producer|consumer|admin props"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MjIyNDI5", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-509222429", "createdAt": "2020-10-15T10:10:11Z", "commit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMDoxMlrOHiAobQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxMDoxMzo1M1rOHiAwZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyMzk4MQ==", "bodyText": "Can we find a better name for these 2 new methods? Something like clusterConfigsWithPrefix() and clientConfigsWithPrefix()?", "url": "https://github.com/apache/kafka/pull/9313#discussion_r505423981", "createdAt": "2020-10-15T10:10:12Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorMakerConfig.java", "diffHunk": "@@ -245,10 +254,17 @@ public MirrorClientConfig clientConfig(String cluster) {\n         Map<String, String> strings = originalsStrings();\n         strings.keySet().removeIf(x -> !x.startsWith(prefix));\n         return strings;\n-    } \n+    }\n+\n+    static Map<String, String> prefixForGeneralAttrs(String prefix, Map<String, String> props) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQyNjAyMg==", "bodyText": "We could get rid of SOURCE_ADMIN_CLIENT_PREFIX and TARGET_ADMIN_CLIENT_PREFIX and instead use SOURCE_PREFIX + ADMIN_CLIENT_PREFIX or TARGET_PREFIX + ADMIN_CLIENT_PREFIX in the method getting Admin Client configs so they are the similar to the Producer and Consumer methods", "url": "https://github.com/apache/kafka/pull/9313#discussion_r505426022", "createdAt": "2020-10-15T10:13:53Z", "author": {"login": "mimaison"}, "path": "connect/mirror/src/main/java/org/apache/kafka/connect/mirror/MirrorConnectorConfig.java", "diffHunk": "@@ -199,6 +199,8 @@\n \n     protected static final String SOURCE_CLUSTER_PREFIX = MirrorMakerConfig.SOURCE_CLUSTER_PREFIX;\n     protected static final String TARGET_CLUSTER_PREFIX = MirrorMakerConfig.TARGET_CLUSTER_PREFIX;\n+    protected static final String SOURCE_PREFIX = MirrorMakerConfig.SOURCE_PREFIX;\n+    protected static final String TARGET_PREFIX = MirrorMakerConfig.TARGET_PREFIX;\n     protected static final String PRODUCER_CLIENT_PREFIX = \"producer.\";\n     protected static final String CONSUMER_CLIENT_PREFIX = \"consumer.\";\n     protected static final String ADMIN_CLIENT_PREFIX = \"admin.\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfc668222239a7be286ed843880093725e587402"}, "originalPosition": 8}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5e55af9354cc9fddeb83be5701875948eb0c971", "author": {"user": {"login": "scanterog", "name": "Samuel Cantero"}}, "url": "https://github.com/apache/kafka/commit/b5e55af9354cc9fddeb83be5701875948eb0c971", "committedDate": "2020-10-15T12:42:29Z", "message": "[mm2] Better methods names and normalize client prefixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEwNjEzNTU1", "url": "https://github.com/apache/kafka/pull/9313#pullrequestreview-510613555", "createdAt": "2020-10-16T16:13:19Z", "commit": {"oid": "b5e55af9354cc9fddeb83be5701875948eb0c971"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 661, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}