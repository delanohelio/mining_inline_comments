{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg1ODA3ODc0", "number": 8258, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMzo1NlrODmdxiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzoxMTo1OVrODmfkSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjYwMjk5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxMzo1NlrOFz5l4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzo0Njo0NlrOFz9BHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA==", "bodyText": "Pulled this up into AbstractTask so we can log in the executeAndMaybeSwallow method I also extracted", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389965280", "createdAt": "2020-03-09T21:13:56Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -17,18 +17,24 @@\n package org.apache.kafka.streams.processor.internals;\n \n import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.LogContext;\n import org.apache.kafka.streams.processor.StateStore;\n import org.apache.kafka.streams.processor.TaskId;\n \n import java.util.Collection;\n import java.util.Set;\n+import org.slf4j.Logger;\n \n+import static java.lang.String.format;\n import static org.apache.kafka.streams.processor.internals.Task.State.CLOSED;\n import static org.apache.kafka.streams.processor.internals.Task.State.CREATED;\n \n public abstract class AbstractTask implements Task {\n     private Task.State state = CREATED;\n \n+    protected final Logger log;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d855b3781367745350585f5767a7523314ccc0fe"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMDc4Mg==", "bodyText": "Hmmm... Seems to not align with OO principles to pass in the task type... maybe better pass the Logger into executeAndMaybeSwallow ?", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390010782", "createdAt": "2020-03-09T23:11:38Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -17,18 +17,24 @@\n package org.apache.kafka.streams.processor.internals;\n \n import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.LogContext;\n import org.apache.kafka.streams.processor.StateStore;\n import org.apache.kafka.streams.processor.TaskId;\n \n import java.util.Collection;\n import java.util.Set;\n+import org.slf4j.Logger;\n \n+import static java.lang.String.format;\n import static org.apache.kafka.streams.processor.internals.Task.State.CLOSED;\n import static org.apache.kafka.streams.processor.internals.Task.State.CREATED;\n \n public abstract class AbstractTask implements Task {\n     private Task.State state = CREATED;\n \n+    protected final Logger log;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA=="}, "originalCommit": {"oid": "d855b3781367745350585f5767a7523314ccc0fe"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAyMTQwNQ==", "bodyText": "Ack", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390021405", "createdAt": "2020-03-09T23:46:46Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -17,18 +17,24 @@\n package org.apache.kafka.streams.processor.internals;\n \n import org.apache.kafka.common.TopicPartition;\n+import org.apache.kafka.common.utils.LogContext;\n import org.apache.kafka.streams.processor.StateStore;\n import org.apache.kafka.streams.processor.TaskId;\n \n import java.util.Collection;\n import java.util.Set;\n+import org.slf4j.Logger;\n \n+import static java.lang.String.format;\n import static org.apache.kafka.streams.processor.internals.Task.State.CLOSED;\n import static org.apache.kafka.streams.processor.internals.Task.State.CREATED;\n \n public abstract class AbstractTask implements Task {\n     private Task.State state = CREATED;\n \n+    protected final Logger log;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTI4MA=="}, "originalCommit": {"oid": "d855b3781367745350585f5767a7523314ccc0fe"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjYwNDI0OnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMToxNDoyNFrOFz5mrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzoxMjo1MlrOFz8ZDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTQ4NA==", "bodyText": "Not sure how this slipped by checkstyle?", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389965484", "createdAt": "2020-03-09T21:14:24Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "diffHunk": "@@ -172,15 +169,18 @@ private void close(final boolean clean) {\n             transitionTo(State.CLOSING);\n         } else {\n             if (state() == State.RUNNING) {\n-                if (clean)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d855b3781367745350585f5767a7523314ccc0fe"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMTE0OQ==", "bodyText": "I think checkstyle does not enforce it... Even if I think it should...", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390011149", "createdAt": "2020-03-09T23:12:52Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "diffHunk": "@@ -172,15 +169,18 @@ private void close(final boolean clean) {\n             transitionTo(State.CLOSING);\n         } else {\n             if (state() == State.RUNNING) {\n-                if (clean)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk2NTQ4NA=="}, "originalCommit": {"oid": "d855b3781367745350585f5767a7523314ccc0fe"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjcyOTIwOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1ODozNlrOFz6zbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMTo1ODozNlrOFz6zbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NTEzNQ==", "bodyText": "What exception is possibly thrown from this close(false) call?", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389985135", "createdAt": "2020-03-09T21:58:36Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StandbyTask.java", "diffHunk": "@@ -154,7 +145,11 @@ public void closeClean() {\n \n     @Override\n     public void closeDirty() {\n-        close(false);\n+        try {\n+            close(false);\n+        } catch (final RuntimeException e) {\n+            log.warn(String.format(\"Ignoring uncaught error in unclean close of standby task %s\", id), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjc0MTExOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjowMzowOVrOFz660Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMjowMzowOVrOFz660Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTk4NzAyNQ==", "bodyText": "Ditto here, if we have swallowed all possible exception inside close, then it is unnecessary to have another swallow here.", "url": "https://github.com/apache/kafka/pull/8258#discussion_r389987025", "createdAt": "2020-03-09T22:03:09Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -389,7 +380,11 @@ public void closeClean() {\n \n     @Override\n     public void closeDirty() {\n-        close(false);\n+        try {\n+            close(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxNjg5Njc1OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzoxMTo1OVrOFz8YBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQyMzoxMTo1OVrOFz8YBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDAxMDg4NA==", "bodyText": "Seems this method could be static?", "url": "https://github.com/apache/kafka/pull/8258#discussion_r390010884", "createdAt": "2020-03-09T23:11:59Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/AbstractTask.java", "diffHunk": "@@ -100,4 +112,16 @@ final void transitionTo(final Task.State newState) {\n             throw new IllegalStateException(\"Invalid transition from \" + oldState + \" to \" + newState);\n         }\n     }\n+\n+    void executeAndMaybeSwallow(final boolean clean, final Runnable runnable, final String name) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "718e64a26f1e5d309e1cbbfd1b67503b9c9c4706"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3283, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}