{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0ODYxNTY1", "number": 9144, "title": "KAFKA-9705: (part-1) add redirection fields in the request header", "bodyText": "Add the redirection supporting fields, including:\n\ninitial principal name\ninitial client id\nthe flag to indicate whether a given request is coming from the control plane in a secured environment.\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-08-07T22:43:31Z", "url": "https://github.com/apache/kafka/pull/9144", "merged": true, "mergeCommit": {"oid": "21dc5231ce9c7398c7ede4dbefa2f2202e06b2d4"}, "closed": true, "closedAt": "2020-08-18T20:38:59Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8shTMABqjM2MzUwMTI1MDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-Q7lagH2gAyNDY0ODYxNTY1OmMwZWY3NGVhMzdhMWYwZTE3NmI2OWQyNGQ5NTRiMjcwNTdlYmUxYTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "9462dd647ea2d81da3370e2159226c5e2300399c", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/9462dd647ea2d81da3370e2159226c5e2300399c", "committedDate": "2020-08-07T23:27:32Z", "message": "add redirection fields in the request header"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "9462dd647ea2d81da3370e2159226c5e2300399c", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/9462dd647ea2d81da3370e2159226c5e2300399c", "committedDate": "2020-08-07T23:27:32Z", "message": "add redirection fields in the request header"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/f40b11ba5478f6605cc9a2281be492d4e93ee4ad", "committedDate": "2020-08-07T23:46:53Z", "message": "test socket server"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjkxNjI4", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-463691628", "createdAt": "2020-08-07T23:49:36Z", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo0OTozN1rOG9rl4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo0OTozN1rOG9rl4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDUyOQ==", "bodyText": "I think it would be good to have a constructor that didn't have the two forwarding fields, to avoid changing a large number of tests.", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467330529", "createdAt": "2020-08-07T23:49:37Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/RequestHeader.java", "diffHunk": "@@ -37,11 +37,22 @@ public RequestHeader(Struct struct, short headerVersion) {\n     }\n \n     public RequestHeader(ApiKeys requestApiKey, short requestVersion, String clientId, int correlationId) {\n-        this(new RequestHeaderData().\n-                setRequestApiKey(requestApiKey.id).\n-                setRequestApiVersion(requestVersion).\n-                setClientId(clientId).\n-                setCorrelationId(correlationId),\n+        this(requestApiKey, requestVersion, clientId, correlationId, null, null);\n+    }\n+\n+    public RequestHeader(ApiKeys requestApiKey,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjkxNzg0", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-463691784", "createdAt": "2020-08-07T23:50:33Z", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MDozM1rOG9rmkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MDozM1rOG9rmkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDcwNQ==", "bodyText": "Does this need to be here?  I'm concerned that having it here will eventually lead to us using it for authorization, which it shouldn't be.", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467330705", "createdAt": "2020-08-07T23:50:33Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/server/authorizer/AuthorizableRequestContext.java", "diffHunk": "@@ -69,4 +69,11 @@\n      * Returns the correlation id from the request header.\n      */\n     int correlationId();\n+\n+    /**\n+     * Returns the initial principal name for a forwarded request.\n+     */\n+    default String initialPrincipalName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjkxOTk5", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-463691999", "createdAt": "2020-08-07T23:51:40Z", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MTo0MFrOG9rnmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MTo0MFrOG9rnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMDk2OA==", "bodyText": "Instead of maybeFromControlPlane, how about fromControlPlaneListener", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467330968", "createdAt": "2020-08-07T23:51:40Z", "author": {"login": "cmccabe"}, "path": "core/src/main/scala/kafka/network/RequestChannel.scala", "diffHunk": "@@ -309,7 +309,10 @@ object RequestChannel extends Logging {\n   }\n }\n \n-class RequestChannel(val queueSize: Int, val metricNamePrefix : String, time: Time) extends KafkaMetricsGroup {\n+class RequestChannel(val queueSize: Int,\n+                     val metricNamePrefix : String,\n+                     time: Time,\n+                     val maybeFromControlPlane: Boolean) extends KafkaMetricsGroup {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzNjkyMjQw", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-463692240", "createdAt": "2020-08-07T23:53:00Z", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MzowMFrOG9rokg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QyMzo1MzowMFrOG9rokg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzMzMTIxOA==", "bodyText": "I don't think this is quite right.  The flag should be set based on whether we're in the control plane listener OR the inter-broker listener.  It's much more common to use a separate inter-broker listener, than to use a fully separate control plane listener.", "url": "https://github.com/apache/kafka/pull/9144#discussion_r467331218", "createdAt": "2020-08-07T23:53:00Z", "author": {"login": "cmccabe"}, "path": "core/src/main/scala/kafka/network/SocketServer.scala", "diffHunk": "@@ -88,15 +88,17 @@ class SocketServer(val config: KafkaConfig,\n   private val memoryPoolDepletedTimeMetricName = metrics.metricName(\"MemoryPoolDepletedTimeTotal\", MetricsGroup)\n   memoryPoolSensor.add(new Meter(TimeUnit.MILLISECONDS, memoryPoolDepletedPercentMetricName, memoryPoolDepletedTimeMetricName))\n   private val memoryPool = if (config.queuedMaxBytes > 0) new SimpleMemoryPool(config.queuedMaxBytes, config.socketRequestMaxBytes, false, memoryPoolSensor) else MemoryPool.NONE\n-  // data-plane\n-  private val dataPlaneProcessors = new ConcurrentHashMap[Int, Processor]()\n-  private[network] val dataPlaneAcceptors = new ConcurrentHashMap[EndPoint, Acceptor]()\n-  val dataPlaneRequestChannel = new RequestChannel(maxQueuedRequests, DataPlaneMetricPrefix, time)\n   // control-plane\n   private var controlPlaneProcessorOpt : Option[Processor] = None\n   private[network] var controlPlaneAcceptorOpt : Option[Acceptor] = None\n   val controlPlaneRequestChannelOpt: Option[RequestChannel] = config.controlPlaneListenerName.map(_ =>\n-    new RequestChannel(20, ControlPlaneMetricPrefix, time))\n+    new RequestChannel(20, ControlPlaneMetricPrefix, time, true))\n+  // data-plane\n+  private val dataPlaneProcessors = new ConcurrentHashMap[Int, Processor]()\n+  private[network] val dataPlaneAcceptors = new ConcurrentHashMap[EndPoint, Acceptor]()\n+  // If the control plane processor is not defined, just set the flag to true in data plane to bypass the check for whether a given\n+  // request is from the control plane or not.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDY0Nzcz", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-464464773", "createdAt": "2020-08-10T18:16:18Z", "commit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoxNjoxOVrOG-Z9-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQxODoxNjoxOVrOG-Z9-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODA5MDM2MA==", "bodyText": "nit: Could we use camel case like the others?", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468090360", "createdAt": "2020-08-10T18:16:19Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/RequestContext.java", "diffHunk": "@@ -74,7 +77,9 @@ public RequestAndSize parseRequest(ByteBuffer buffer) {\n                         \", apiVersion: \" + header.apiVersion() +\n                         \", connectionId: \" + connectionId +\n                         \", listenerName: \" + listenerName +\n-                        \", principal: \" + principal, ex);\n+                        \", principal: \" + principal +\n+                        \", initial principal: \" + initialPrincipalName() +\n+                        \", initial client id: \" + header.initialClientId(), ex);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f40b11ba5478f6605cc9a2281be492d4e93ee4ad"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/bc137fa4011d10e8bc59cc4e0a6803d0bd090315", "committedDate": "2020-08-11T01:38:02Z", "message": "replace with inter broker listener check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzk3NTI1", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-465397525", "createdAt": "2020-08-11T20:19:04Z", "commit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoxOTowNFrOG_HvJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoxOTowNFrOG_HvJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDIzMQ==", "bodyText": "How about privilegedListener?  Then we could add a comment explaining what that means:\n\nif there is a control plane listener, only it is privileged\notherwise, if there is an inter broker listener, only it is privileged\notherwise, all listeners are privileged", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840231", "createdAt": "2020-08-11T20:19:04Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/common/network/KafkaChannel.java", "diffHunk": "@@ -147,6 +153,7 @@ public KafkaChannel(String id, TransportLayer transportLayer, Supplier<Authentic\n         this.disconnected = false;\n         this.muteState = ChannelMuteState.NOT_MUTED;\n         this.state = ChannelState.NOT_CONNECTED;\n+        this.isInterBrokerListener = isInterBrokerListener;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzk4MTEz", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-465398113", "createdAt": "2020-08-11T20:20:01Z", "commit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDowMVrOG_HxCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDowMVrOG_HxCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDcxMg==", "bodyText": "\"or null if this was not redirected\"", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840712", "createdAt": "2020-08-11T20:20:01Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientRequest.java", "diffHunk": "@@ -42,6 +44,8 @@\n      * @param clientId The client ID to use for the header\n      * @param createdTimeMs The unix timestamp in milliseconds for the time at which this request was created.\n      * @param expectResponse Should we expect a response message or is this request complete once it is sent?\n+     * @param initialPrincipalName The initial principal name if this is a redirect request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzk4MTcy", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-465398172", "createdAt": "2020-08-11T20:20:06Z", "commit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDowNlrOG_HxMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDowNlrOG_HxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MDc1NA==", "bodyText": "\"or null if this was not redirected\"", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468840754", "createdAt": "2020-08-11T20:20:06Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/clients/ClientRequest.java", "diffHunk": "@@ -42,6 +44,8 @@\n      * @param clientId The client ID to use for the header\n      * @param createdTimeMs The unix timestamp in milliseconds for the time at which this request was created.\n      * @param expectResponse Should we expect a response message or is this request complete once it is sent?\n+     * @param initialPrincipalName The initial principal name if this is a redirect request\n+     * @param initialClientId The initial client id if this is a redirect request", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzk4NzE1", "url": "https://github.com/apache/kafka/pull/9144#pullrequestreview-465398715", "createdAt": "2020-08-11T20:20:55Z", "commit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDo1NVrOG_HzBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDoyMDo1NVrOG_HzBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg0MTIyMw==", "bodyText": "can we have an overload for this that doesn't have these two fields, and defaults them to null?  It would really help avoid having so much churn in junit tests.", "url": "https://github.com/apache/kafka/pull/9144#discussion_r468841223", "createdAt": "2020-08-11T20:20:55Z", "author": {"login": "cmccabe"}, "path": "clients/src/main/java/org/apache/kafka/clients/KafkaClient.java", "diffHunk": "@@ -189,16 +189,18 @@ ClientRequest newClientRequest(String nodeId, AbstractRequest.Builder<?> request\n      *                         cancelling the request. The request may get cancelled sooner if the socket disconnects\n      *                         for any reason including if another pending request to the same node timed out first.\n      * @param callback the callback to invoke when we get a response\n+     * @param initialPrincipalName the initial client principal name, when building a forward request\n+     * @param initialClientId the initial client id, when building a forward request\n      */\n     ClientRequest newClientRequest(String nodeId,\n                                    AbstractRequest.Builder<?> requestBuilder,\n                                    long createdTimeMs,\n                                    boolean expectResponse,\n                                    int requestTimeoutMs,\n+                                   String initialPrincipalName,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc137fa4011d10e8bc59cc4e0a6803d0bd090315"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef5503d0c236a28c4341f3c8ee3883f20f9c0996", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/ef5503d0c236a28c4341f3c8ee3883f20f9c0996", "committedDate": "2020-08-12T19:41:55Z", "message": "privileged listener"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0ef74ea37a1f0e176b69d24d954b27057ebe1a3", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/c0ef74ea37a1f0e176b69d24d954b27057ebe1a3", "committedDate": "2020-08-12T19:52:57Z", "message": "address minor comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1099, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}