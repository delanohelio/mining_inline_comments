{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3ODMxNjc1", "number": 8296, "title": "MINOR: reuse pseudo-topic in FKJoin", "bodyText": "Reuse the same pseudo-topic for serializing the LHS value in the foreign-key join resolver as\nwe originally used to serialize it before sending the subscription request.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-03-13T15:13:16Z", "url": "https://github.com/apache/kafka/pull/8296", "merged": true, "mergeCommit": {"oid": "7945cbc73bec5529c3c6915809379f00f8604a77"}, "closed": true, "closedAt": "2020-03-14T04:04:15Z", "author": {"login": "vvcephei"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcNRzjyAH2gAyMzg3ODMxNjc1OjRjOWJjOTBlZWI3NjM3YmFjNTk4YTQ4M2NiMGY4MGQyMjk5MjFkMmQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNZFUYAH2gAyMzg3ODMxNjc1OjJlMTNiZjg0ZGQ1NGRjN2NkNjMxNGQ4ZGY0ZjFjNjQxNTBkY2E5NzY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4c9bc90eeb7637bac598a483cb0f80d229921d2d", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/4c9bc90eeb7637bac598a483cb0f80d229921d2d", "committedDate": "2020-03-13T15:11:48Z", "message": "MINOR: re-use pseudo-topic in FKJoin"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0Mzg0MjY5", "url": "https://github.com/apache/kafka/pull/8296#pullrequestreview-374384269", "createdAt": "2020-03-13T15:15:58Z", "commit": {"oid": "4c9bc90eeb7637bac598a483cb0f80d229921d2d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToxNTo1OFrOF2HlYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QxNToxNTo1OFrOF2HlYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjI5MTY4Mg==", "bodyText": "I just missed this last time I made a pass and cleaned up all the pseudo-topics. We should have passed in the common one for hashing LHS values, which is declared in KTableImpl (which is what we're doing now).", "url": "https://github.com/apache/kafka/pull/8296#discussion_r392291682", "createdAt": "2020-03-13T15:15:58Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/internals/foreignkeyjoin/SubscriptionResolverJoinProcessorSupplier.java", "diffHunk": "@@ -83,15 +86,10 @@ public void process(final K key, final SubscriptionResponseWrapper<VO> value) {\n                 }\n                 final ValueAndTimestamp<V> currentValueWithTimestamp = valueGetter.get(key);\n \n-                //We are unable to access the actual source topic name for the valueSerializer at runtime, without\n-                //tightly coupling to KTableRepartitionProcessorSupplier.\n-                //While we can use the source topic from where the events came from, we shouldn't serialize against it\n-                //as it causes problems with the confluent schema registry, which requires each topic have only a single\n-                //registered schema.\n-                final String dummySerializationTopic = context().topic() + \"-join-resolver\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4c9bc90eeb7637bac598a483cb0f80d229921d2d"}, "originalPosition": 28}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bac36ea7d5afae776b0de856118e8a9a58a144fe", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/bac36ea7d5afae776b0de856118e8a9a58a144fe", "committedDate": "2020-03-13T19:21:05Z", "message": "fix build"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjIwOTE2", "url": "https://github.com/apache/kafka/pull/8296#pullrequestreview-374620916", "createdAt": "2020-03-13T21:08:49Z", "commit": {"oid": "bac36ea7d5afae776b0de856118e8a9a58a144fe"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0NjIxODIx", "url": "https://github.com/apache/kafka/pull/8296#pullrequestreview-374621821", "createdAt": "2020-03-13T21:10:44Z", "commit": {"oid": "bac36ea7d5afae776b0de856118e8a9a58a144fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMToxMDo0NFrOF2TB4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xM1QyMToxMDo0NFrOF2TB4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MjQ3OTIwMQ==", "bodyText": "Could we move the initialization of valueHashSerdePseudoTopic closer to where it is firstly used?", "url": "https://github.com/apache/kafka/pull/8296#discussion_r392479201", "createdAt": "2020-03-13T21:10:44Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/internals/KTableImpl.java", "diffHunk": "@@ -1103,6 +1103,7 @@ boolean sendingOldValueEnabled() {\n         final SubscriptionResolverJoinProcessorSupplier<K, V, VO, VR> resolverProcessorSupplier = new SubscriptionResolverJoinProcessorSupplier<>(\n             primaryKeyValueGetter,\n             valSerde == null ? null : valSerde.serializer(),\n+            valueHashSerdePseudoTopic,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bac36ea7d5afae776b0de856118e8a9a58a144fe"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b5a70544b3e01a185a6d86fd7697371413a0aac", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/3b5a70544b3e01a185a6d86fd7697371413a0aac", "committedDate": "2020-03-13T22:15:52Z", "message": "fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e13bf84dd54dc7cd6314d8df4f1c64150dca976", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/2e13bf84dd54dc7cd6314d8df4f1c64150dca976", "committedDate": "2020-03-13T23:40:32Z", "message": "add test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 274, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}