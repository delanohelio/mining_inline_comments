{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzAyMDUx", "number": 9761, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozOTo0OFrOFGfnfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNTo0ODo1MVrOFJr5lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzUzNzkwOnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozOTo0OFrOIHiCDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMjozOTo0OFrOIHiCDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDc2ODUyNQ==", "bodyText": "Could you move the tests to ByteBufferInputStreamTest? If there is no such test class, feel free to create new one.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r544768525", "createdAt": "2020-12-17T02:39:48Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "diffHunk": "@@ -120,4 +121,26 @@ public void iteratorRaisesOnTooLargeRecords() {\n         logInputStream.nextBatch();\n     }\n \n+    @Test\n+    public void testReadUnsignedIntFromInputStream() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b6bf7790edd65275a2947b87042e0ffc025297c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTUwMTQ2OnYy", "diffSide": "LEFT", "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoxMTo0NFrOIJtvUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjozNjowNVrOIL9SCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1NzQ4OA==", "bodyText": "please revert this change.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r547057488", "createdAt": "2020-12-22T04:11:44Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "diffHunk": "@@ -119,5 +119,4 @@ public void iteratorRaisesOnTooLargeRecords() {\n         assertNotNull(logInputStream.nextBatch());\n         logInputStream.nextBatch();\n     }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwOTI4OQ==", "bodyText": "This change have been reverted.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r549409289", "createdAt": "2020-12-28T16:36:05Z", "author": {"login": "bertber"}, "path": "clients/src/test/java/org/apache/kafka/common/record/ByteBufferLogInputStreamTest.java", "diffHunk": "@@ -119,5 +119,4 @@ public void iteratorRaisesOnTooLargeRecords() {\n         assertNotNull(logInputStream.nextBatch());\n         logInputStream.nextBatch();\n     }\n-", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1NzQ4OA=="}, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQzOTUxNjM0OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQwNDoyMDozNVrOIJt3SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNjozNjo0N1rOIL9S-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1OTUyOQ==", "bodyText": "throws Exception  is useless.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r547059529", "createdAt": "2020-12-22T04:20:35Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+\r\n+import java.nio.ByteBuffer;\r\n+\r\n+import org.junit.Test;\r\n+\r\n+public class ByteBufferInputStreamTest {\r\n+\r\n+    @Test\r\n+    public void testReadUnsignedIntFromInputStream() throws Exception {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQwOTUzMQ==", "bodyText": "It have been removed.", "url": "https://github.com/apache/kafka/pull/9761#discussion_r549409531", "createdAt": "2020-12-28T16:36:47Z", "author": {"login": "bertber"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r\n+\r\n+import java.nio.ByteBuffer;\r\n+\r\n+import org.junit.Test;\r\n+\r\n+public class ByteBufferInputStreamTest {\r\n+\r\n+    @Test\r\n+    public void testReadUnsignedIntFromInputStream() throws Exception {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzA1OTUyOQ=="}, "originalCommit": {"oid": "1cbe4937f62635f7727c627bfa98be9aff5e9c70"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzAwNzU5OnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNTo0ODo1MlrOIMHgGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxNzowMTo1OFrOIMxWnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU3NjcyOA==", "bodyText": "We have a pending PR offering a consistent import order (see #8404 (comment)). Could you please follow the rules (although it is not merged)?\n\nkafka, org.apache.kafka\ncom, net, org\njava, javax", "url": "https://github.com/apache/kafka/pull/9761#discussion_r549576728", "createdAt": "2020-12-29T05:48:52Z", "author": {"login": "chia7712"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDI2MjQzMQ==", "bodyText": "I have put the java behind the org", "url": "https://github.com/apache/kafka/pull/9761#discussion_r550262431", "createdAt": "2020-12-30T17:01:58Z", "author": {"login": "bertber"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/ByteBufferInputStreamTest.java", "diffHunk": "@@ -0,0 +1,49 @@\n+/*\r\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\r\n+ * contributor license agreements. See the NOTICE file distributed with\r\n+ * this work for additional information regarding copyright ownership.\r\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\r\n+ * (the \"License\"); you may not use this file except in compliance with\r\n+ * the License. You may obtain a copy of the License at\r\n+ *\r\n+ *    http://www.apache.org/licenses/LICENSE-2.0\r\n+ *\r\n+ * Unless required by applicable law or agreed to in writing, software\r\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n+ * See the License for the specific language governing permissions and\r\n+ * limitations under the License.\r\n+ */\r\n+package org.apache.kafka.common.utils;\r\n+\r\n+import static org.junit.Assert.assertEquals;\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU3NjcyOA=="}, "originalCommit": {"oid": "23f5c4a93424c2f1817e5b9e178d37ea2d72c36d"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3522, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}