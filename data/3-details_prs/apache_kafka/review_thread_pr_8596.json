{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDExOTI5ODEw", "number": 8596, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDoyNDoxNVrOD4hDDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDo0MTowN1rOD4hZ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTg4MzAzOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDoyNDoxNVrOGPYytg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwMjowMTozNVrOGQYNjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg==", "bodyText": "Minor detail, but we reserve the term \"probing rebalance\" for the KIP-441 type of rebalances, while now this is used to schedule any kind of followup rebalance", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418788022", "createdAt": "2020-05-02T00:24:15Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcwNTQyNw==", "bodyText": "Did you want to change the config key as well? I think this should be ok, since it's only used to pass state from one object to another within the same instance, so there should be no compatibility concern.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r419705427", "createdAt": "2020-05-04T20:24:10Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxMTk5OQ==", "bodyText": "Are you asking if this change was intentional, or are you referring to a different config key? If the former, note that this internal config was only added a few PRs ago so there would be no compatibility concerns even if it wasn't confined to a single instance", "url": "https://github.com/apache/kafka/pull/8596#discussion_r419711999", "createdAt": "2020-05-04T20:35:57Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxODMxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n          \n          \n            \n                    public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.scheduled.rebalance.ms__\";\n          \n      \n    \n    \n  \n\nThat's what I meant (just remembered I can use the change recommendation thingy).", "url": "https://github.com/apache/kafka/pull/8596#discussion_r419718314", "createdAt": "2020-05-04T20:47:46Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTcxODc4Ng==", "bodyText": "It's a very minor question, I only ask because you were trying to make everything consistent here.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r419718786", "createdAt": "2020-05-04T20:48:44Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTgyNzA4Ng==", "bodyText": "Oh, duh, I overlooked that. Guess I was just going for eventual consistency here", "url": "https://github.com/apache/kafka/pull/8596#discussion_r419827086", "createdAt": "2020-05-05T02:01:35Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/StreamsConfig.java", "diffHunk": "@@ -877,7 +877,7 @@\n         public static final String STREAMS_METADATA_STATE_FOR_PARTITION_ASSIGNOR = \"__streams.metadata.state.instance__\";\n         public static final String STREAMS_ADMIN_CLIENT = \"__streams.admin.client.instance__\";\n         public static final String ASSIGNMENT_ERROR_CODE = \"__assignment.error.code__\";\n-        public static final String NEXT_PROBING_REBALANCE_MS = \"__next.probing.rebalance.ms__\";\n+        public static final String NEXT_SCHEDULED_REBALANCE_MS = \"__next.probing.rebalance.ms__\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc4ODAyMg=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTkwNzg4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozMjo0MlrOGPY-WA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozMjo0MlrOGPY-WA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MTAwMA==", "bodyText": "We lose information here, but now log the reason for the scheduled rebalance in a (hopefully) more clear way during onAssignment", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418791000", "createdAt": "2020-05-02T00:32:42Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamThread.java", "diffHunk": "@@ -556,14 +548,8 @@ void runLoop() {\n         while (isRunning() || taskManager.isRebalanceInProgress()) {\n             try {\n                 runOnce();\n-                if (assignmentErrorCode.get() == AssignorError.REBALANCE_NEEDED.code()) {\n-                    log.info(\"Detected that the assignor requested a rebalance. Rejoining the consumer group to \" +\n-                                 \"trigger a new rebalance.\");\n-                    assignmentErrorCode.set(AssignorError.NONE.code());\n-                    mainConsumer.enforceRebalance();\n-                } else if (nextProbingRebalanceMs.get() < time.milliseconds()) {\n-                    log.info(\"The probing rebalance interval has elapsed since the last rebalance, triggering a \" +\n-                                \"rebalance to probe for newly caught-up clients\");\n+                if (nextProbingRebalanceMs.get() < time.milliseconds()) {\n+                    log.info(\"Triggering the followup rebalance scheduled for {} ms.\", nextProbingRebalanceMs.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 76}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTkyMDAzOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozNTo1OFrOGPZD8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozNTo1OFrOGPZD8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MjQzMw==", "bodyText": "Previously we were doing this logging at the client-level, meaning we could end up in the confusing situation of logging Stable rebalance.. for one client and Unstable rebalance... for another, all in the same rebalance. Now we only log the final result after all client assignments are encoded, and log which clients actually are scheduling said rebalance at the debug level.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418792433", "createdAt": "2020-05-02T00:35:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -907,6 +905,17 @@ private void populatePartitionsByHostMaps(final Map<HostInfo, Set<TopicPartition\n                 minSupportedMetadataVersion,\n                 false,\n                 encodeNextProbingRebalanceTime);\n+\n+            if (followupRebalanceScheduled) {\n+                rebalanceRequired = true;\n+                log.debug(\"Requested client {} to schedule a followup rebalance\", clientId);\n+            }\n+        }\n+\n+        if (rebalanceRequired) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTkzMDQ5OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODoyOFrOGPZIrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODoyOFrOGPZIrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MzY0NA==", "bodyText": "This encodes an immediate followup rebalance for the consumer who would be receiving the revoked tasks. The consumer that is doing the revoking will also request a followup rebalance (in the client code) but due to KAFKA-9821 this cannot be relied upon when static membership is used.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418793644", "createdAt": "2020-05-02T00:38:28Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1009,14 +1018,18 @@ private void addClientAssignments(final Map<String, Assignment> assignment,\n                 AssignorError.NONE.code()\n             );\n \n-            if (encodeNextRebalanceTime) {\n+            if (tasksRevoked) {\n+                // TODO: once KAFKA-9821 is resolved we can leave it to the client to trigger this rebalance\n+                log.debug(\"Requesting followup rebalance be scheduled immediately due to tasks changing ownership.\");\n+                info.setNextRebalanceTime(0L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTkzMjk2OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODo1OFrOGPZJvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDozODo1OFrOGPZJvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5MzkxNw==", "bodyText": "This is now the only usage of the assignment error code", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418793917", "createdAt": "2020-05-02T00:38:58Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1338,7 +1346,7 @@ public void onAssignment(final Assignment assignment, final ConsumerGroupMetadat\n         final AssignmentInfo info = AssignmentInfo.decode(assignment.userData());\n         if (info.errCode() != AssignorError.NONE.code()) {\n             // set flag to shutdown streams app\n-            setAssignmentErrorCode(info.errCode());\n+            assignmentErrorCode.set(info.errCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 184}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNTk0MTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDo0MTowN1rOGPZNbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQwMDo0MTowN1rOGPZNbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODc5NDg2Mg==", "bodyText": "Here we check for and log all the possible reasons for a followup rebalance to be scheduled on this consumer. It should be clear whether (and why) a rebalance is required by looking at the logs of either the group leader or the member(s) requesting the rebalance.", "url": "https://github.com/apache/kafka/pull/8596#discussion_r418794862", "createdAt": "2020-05-02T00:41:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamsPartitionAssignor.java", "diffHunk": "@@ -1423,22 +1434,44 @@ public void onAssignment(final Assignment assignment, final ConsumerGroupMetadat\n         taskManager.handleAssignment(activeTasks, info.standbyTasks());\n     }\n \n+    private void maybeScheduleFollowupRebalance(final long encodedNextScheduledRebalanceMs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 259}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2856, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}