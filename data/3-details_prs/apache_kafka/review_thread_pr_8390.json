{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODUyNjIw", "number": 8390, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo1MjoyM1rODtJbeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo1MjoyM1rODtJbeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NjY3MDAyOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/log/LogCleanerManager.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNDo1MjoyM1rOF-ZvPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxNTo0MTowNFrOF-cE1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NzcyNw==", "bodyText": "Pardon me, I failed to catch the point of this change.", "url": "https://github.com/apache/kafka/pull/8390#discussion_r400977727", "createdAt": "2020-03-31T14:52:23Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/log/LogCleanerManager.scala", "diffHunk": "@@ -410,7 +410,7 @@ private[log] class LogCleanerManager(val logDirs: Seq[File],\n         if (checkpoint != null) {\n           val existing = checkpoint.read()\n           if (existing.getOrElse(topicPartition, 0L) > offset)\n-            checkpoint.write(existing + (topicPartition -> offset))\n+            checkpoint.write(mutable.Map() ++= existing += topicPartition -> offset)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3624366fb119ef0408d13dbba8f1684f07f8cb4f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTAxNjAyMA==", "bodyText": "scala.collection.Map.+ is deprecated.", "url": "https://github.com/apache/kafka/pull/8390#discussion_r401016020", "createdAt": "2020-03-31T15:41:04Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/LogCleanerManager.scala", "diffHunk": "@@ -410,7 +410,7 @@ private[log] class LogCleanerManager(val logDirs: Seq[File],\n         if (checkpoint != null) {\n           val existing = checkpoint.read()\n           if (existing.getOrElse(topicPartition, 0L) > offset)\n-            checkpoint.write(existing + (topicPartition -> offset))\n+            checkpoint.write(mutable.Map() ++= existing += topicPartition -> offset)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDk3NzcyNw=="}, "originalCommit": {"oid": "3624366fb119ef0408d13dbba8f1684f07f8cb4f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3154, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}