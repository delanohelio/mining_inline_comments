{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMzc5ODQw", "number": 9539, "title": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage", "bodyText": "More detailed description of your change,\nif necessary. The PR title and PR message become\nthe squashed commit message, so use a separate\ncomment to ping reviewers.\nSummary of testing strategy (including rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-10-31T06:00:57Z", "url": "https://github.com/apache/kafka/pull/9539", "merged": true, "mergeCommit": {"oid": "99b5e4f4ab62b40efdbd311a9e455ccbe50ce069"}, "closed": true, "closedAt": "2020-12-09T01:37:49Z", "author": {"login": "vamossagar12"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYAfNBAFqTUyMTE2MzI5OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkUOfJAFqTU0Nzc2MTUxNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxMTYzMjk5", "url": "https://github.com/apache/kafka/pull/9539#pullrequestreview-521163299", "createdAt": "2020-10-31T19:25:11Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNToxMVrOHrpexw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMVQxOToyNToxMVrOHrpexw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTUzMDQzOQ==", "bodyText": "Similar to LeaderState::nonEndorsingFollower, I think you want to add a method to LeaderState with the following signature public Set<Integer> endorsingFollower().", "url": "https://github.com/apache/kafka/pull/9539#discussion_r515530439", "createdAt": "2020-10-31T19:25:11Z", "author": {"login": "jsancio"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -317,6 +317,9 @@ private void appendLeaderChangeMessage(LeaderState state, long currentTimeMs) {\n             .map(follower -> new Voter().setVoterId(follower))\n             .collect(Collectors.toList());\n \n+        // Adding the leader to the voters as the protocol ensures that leader always votes for itself.\n+        voters.add(new Voter().setVoterId(state.election().leaderId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyOTA4OTc1", "url": "https://github.com/apache/kafka/pull/9539#pullrequestreview-532908975", "createdAt": "2020-11-17T23:55:15Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo1NToxNVrOH1QSdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QyMzo1OTowN1rOH1QXsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMzQ0NA==", "bodyText": "Could we use \"Granting\" instead of \"Endorsing\"? I think this is a more consistent term considering LeaderState.", "url": "https://github.com/apache/kafka/pull/9539#discussion_r525603444", "createdAt": "2020-11-17T23:55:15Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/resources/common/message/LeaderChangeMessage.json", "diffHunk": "@@ -22,7 +22,9 @@\n     {\"name\": \"LeaderId\", \"type\": \"int32\", \"versions\": \"0+\",\n       \"about\": \"The ID of the newly elected leader\"},\n     {\"name\": \"Voters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n-      \"about\": \"The voters who voted for the current leader\"}\n+      \"about\": \"The voters who voted at the time of election\"},\n+    {\"name\": \"EndorsingVoters\", \"type\": \"[]Voter\", \"versions\": \"0+\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwMzk0Ng==", "bodyText": "nit: can we move to next line to follow the convention here?", "url": "https://github.com/apache/kafka/pull/9539#discussion_r525603946", "createdAt": "2020-11-17T23:56:37Z", "author": {"login": "hachikuji"}, "path": "raft/src/main/java/org/apache/kafka/raft/QuorumState.java", "diffHunk": "@@ -394,7 +394,7 @@ public void transitionToLeader(long epochStartOffset) throws IOException {\n             localId,\n             epoch(),\n             epochStartOffset,\n-            voters\n+            voters, candidateState.grantingVoters()", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTYwNDc4NA==", "bodyText": "Hmm.. It's curious that we can always rely on the full voter set. Do we not have any test cases where we have not received votes from all members?", "url": "https://github.com/apache/kafka/pull/9539#discussion_r525604784", "createdAt": "2020-11-17T23:59:07Z", "author": {"login": "hachikuji"}, "path": "raft/src/test/java/org/apache/kafka/raft/RaftClientTestContext.java", "diffHunk": "@@ -709,6 +709,9 @@ static void verifyLeaderChangeMessage(\n         assertEquals(leaderId, leaderChangeMessage.leaderId());\n         assertEquals(voters.stream().map(voterId -> new Voter().setVoterId(voterId)).collect(Collectors.toList()),\n             leaderChangeMessage.voters());\n+        assertEquals(voters.stream().map(voterId -> new Voter().setVoterId(voterId)).collect(Collectors.toSet()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NTI2NzI4", "url": "https://github.com/apache/kafka/pull/9539#pullrequestreview-537526728", "createdAt": "2020-11-24T14:09:25Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDowOToyNlrOH5Chrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxNDozNjoyMVrOH5DvgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU3MjI3MA==", "bodyText": "nit: we can make this a static function and rename it to something like convertToVoters.", "url": "https://github.com/apache/kafka/pull/9539#discussion_r529572270", "createdAt": "2020-11-24T14:09:26Z", "author": {"login": "jsancio"}, "path": "raft/src/main/java/org/apache/kafka/raft/KafkaRaftClient.java", "diffHunk": "@@ -370,14 +370,23 @@ private void onBecomeLeader(long currentTimeMs) {\n         );\n     }\n \n+    private List<Voter> getVotersFromVoterId(Set<Integer> voterIds) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MDYxMw==", "bodyText": "Based on the implementation on this PR, this field contains all of the voters in the quorum irrespective of whether they voted or not. In other words I think we should change the description to something like \"The set of voters in the quorum for this epoch\".", "url": "https://github.com/apache/kafka/pull/9539#discussion_r529580613", "createdAt": "2020-11-24T14:20:49Z", "author": {"login": "jsancio"}, "path": "clients/src/main/resources/common/message/LeaderChangeMessage.json", "diffHunk": "@@ -22,7 +22,9 @@\n     {\"name\": \"LeaderId\", \"type\": \"int32\", \"versions\": \"0+\",\n       \"about\": \"The ID of the newly elected leader\"},\n     {\"name\": \"Voters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n-      \"about\": \"The voters who voted for the current leader\"}\n+      \"about\": \"The voters who voted at the time of election\"},", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU4MjkwNA==", "bodyText": "I think we should add an LeaderEpoch field that documents the epoch associated with this LeaderChangeMessage. What do you think @vamossagar12 and @hachikuji ?", "url": "https://github.com/apache/kafka/pull/9539#discussion_r529582904", "createdAt": "2020-11-24T14:24:01Z", "author": {"login": "jsancio"}, "path": "clients/src/main/resources/common/message/LeaderChangeMessage.json", "diffHunk": "@@ -22,7 +22,9 @@\n     {\"name\": \"LeaderId\", \"type\": \"int32\", \"versions\": \"0+\",\n       \"about\": \"The ID of the newly elected leader\"},\n     {\"name\": \"Voters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n-      \"about\": \"The voters who voted for the current leader\"}\n+      \"about\": \"The voters who voted at the time of election\"},\n+    {\"name\": \"GrantingVoters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n+      \"about\": \"The voters who voted for the leader at the time of election\"}", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTU5MjE5Mw==", "bodyText": "I think we have two options here. This class can contain either:\nprivate final Map<Integer, VoterState> voterReplicaStates = new HashMap<>(); \nwhere we change this expression to boolean hasEndorsedLeader = grantingVoters.contains(voterId);\nand remove the field private final Set<Integer> grantingVoters = new HashSet<>();\nor:\nprivate final Set<Integer> voters = new HashSet<>(); \nprivate final Set<Integer> grantingVoters = new HashSet<>(); \nand change a few of the methods here use these two sets instead of voterReplicaStates.\nI like the first option but it is up to you.", "url": "https://github.com/apache/kafka/pull/9539#discussion_r529592193", "createdAt": "2020-11-24T14:36:21Z", "author": {"login": "jsancio"}, "path": "raft/src/main/java/org/apache/kafka/raft/LeaderState.java", "diffHunk": "@@ -51,6 +53,7 @@ protected LeaderState(\n             boolean hasEndorsedLeader = voterId == localId;", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "ce275e29beb48611425708fbe67d28d17329845a", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/ce275e29beb48611425708fbe67d28d17329845a", "committedDate": "2020-11-27T18:06:15Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMTI1MTEy", "url": "https://github.com/apache/kafka/pull/9539#pullrequestreview-542125112", "createdAt": "2020-12-01T17:18:25Z", "commit": {"oid": "ce275e29beb48611425708fbe67d28d17329845a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzoxODoyNVrOH83c_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxNzozMTowOFrOH83_DA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU4NTE1MQ==", "bodyText": "The reason we didn't have this is because the batch header already has a field for the leader epoch.", "url": "https://github.com/apache/kafka/pull/9539#discussion_r533585151", "createdAt": "2020-12-01T17:18:25Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/resources/common/message/LeaderChangeMessage.json", "diffHunk": "@@ -22,7 +22,11 @@\n     {\"name\": \"LeaderId\", \"type\": \"int32\", \"versions\": \"0+\",\n       \"about\": \"The ID of the newly elected leader\"},\n     {\"name\": \"Voters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n-      \"about\": \"The voters who voted for the current leader\"}\n+      \"about\": \"The set of voters in the quorum for this epoch\"},\n+    {\"name\": \"GrantingVoters\", \"type\": \"[]Voter\", \"versions\": \"0+\",\n+      \"about\": \"The voters who voted for the leader at the time of election\"},\n+    {\"name\": \"LeaderEpoch\", \"type\": \"int32\", \"versions\": \"0+\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce275e29beb48611425708fbe67d28d17329845a"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzU5Mzg2OA==", "bodyText": "I think the terminology may be causing some confusion here. The \"granting\" voters are those who have voted for the leader and which the leader is using as the basis of its election. The \"endorsing\" voters are those who have acknowledged the leader. The set of endorsing voters changes over time as the voters convert to followers and begin fetching. We use nonEndorsingVoters to know which voters still need to be sent BeginQuorumEpoch. Note that it is possible for a voter to have granted a vote, but not yet endorsed the election (because it does not know the vote succeeded).\nWe should not conflate these sets, but maybe we can come up with better terms to avoid the confusion. I would stick with \"granting\" voters as the set of voters who granted the leader's candidacy. However, maybe we can change \"endorsing\" to \"acknowledged\"? These are the voters who have acknowledged the election result. What do you think?", "url": "https://github.com/apache/kafka/pull/9539#discussion_r533593868", "createdAt": "2020-12-01T17:31:08Z", "author": {"login": "hachikuji"}, "path": "raft/src/main/java/org/apache/kafka/raft/LeaderState.java", "diffHunk": "@@ -72,11 +73,20 @@ public int epoch() {\n         return voterReplicaStates.keySet().stream().filter(id -> id != localId).collect(Collectors.toSet());\n     }\n \n+    public Set<Integer> endorsingVoters() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce275e29beb48611425708fbe67d28d17329845a"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce275e29beb48611425708fbe67d28d17329845a", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/ce275e29beb48611425708fbe67d28d17329845a", "committedDate": "2020-11-27T18:06:15Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}, "afterCommit": {"oid": "f57c6c50981c7b633a67c4cd9eeac08235706e36", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/f57c6c50981c7b633a67c4cd9eeac08235706e36", "committedDate": "2020-12-05T12:49:01Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16432f8e9a89a11ffd862efe67f9ddc27a85642a", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/16432f8e9a89a11ffd862efe67f9ddc27a85642a", "committedDate": "2020-12-08T02:56:09Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f57c6c50981c7b633a67c4cd9eeac08235706e36", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/f57c6c50981c7b633a67c4cd9eeac08235706e36", "committedDate": "2020-12-05T12:49:01Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}, "afterCommit": {"oid": "16432f8e9a89a11ffd862efe67f9ddc27a85642a", "author": {"user": {"login": "vamossagar12", "name": null}}, "url": "https://github.com/apache/kafka/commit/16432f8e9a89a11ffd862efe67f9ddc27a85642a", "committedDate": "2020-12-08T02:56:09Z", "message": "KAFKA-10634: Adding LeaderId to Voters list in LeaderChangeMessage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NzYxNTE3", "url": "https://github.com/apache/kafka/pull/9539#pullrequestreview-547761517", "createdAt": "2020-12-09T01:12:26Z", "commit": {"oid": "16432f8e9a89a11ffd862efe67f9ddc27a85642a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2649, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}