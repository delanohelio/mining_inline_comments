{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4ODc2NTg3", "number": 8820, "title": "KAFKA-10097: Internalize checkpoint data", "bodyText": "make checkpoint an internal data structure to avoid awkward passing around.\nremove the possibility of getting a null checkpoint map\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-06-06T00:27:07Z", "url": "https://github.com/apache/kafka/pull/8820", "merged": true, "mergeCommit": {"oid": "d4ef46c69dbc525f55a6d9ae5c9ae6da795f98fb"}, "closed": true, "closedAt": "2020-06-07T00:34:04Z", "author": {"login": "abbccdda"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcocMeKgFqTQyNTY5MzU2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcopQHnAH2gAyNDI4ODc2NTg3OmJjOWM5ZGFjYjAyNTRmNzhiNjI4ZDg0NWYxYzNlMmQ4ZTkxZmIyZTA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NjkzNTYy", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425693562", "createdAt": "2020-06-06T00:34:01Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNDowMVrOGgAgWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNDowMVrOGgAgWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNTg5OQ==", "bodyText": "Maybe easier to make this writeCheckpointIfNeeded:\n    private void writeCheckpointIfNeeded() {\n        if (checkpointNeeded) {\n            stateMgr.checkpoint(checkpoint);\n            checkpointNeeded = false;\n        }\n    }\n\nFor this case, the caller does not need to check the checkpointNeeded flag?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436215899", "createdAt": "2020-06-06T00:34:01Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint\n                     executeAndMaybeSwallow(false, stateMgr::flush, \"state manager flush\", log);\n                 }\n \n                 break;\n \n             case RESTORING:\n                 executeAndMaybeSwallow(clean, stateMgr::flush, \"state manager flush\", log);\n-                checkpoint = Collections.emptyMap();\n+                scheduleCheckpoint(emptyMap());\n \n                 break;\n \n             case SUSPENDED:\n             case CLOSED:\n                 // not need to checkpoint, since when suspending we've already committed the state\n-                checkpoint = null; // `null` indicates to not write a checkpoint\n-\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Unknown state \" + state() + \" while prepare closing active task \" + id);\n         }\n+    }\n \n-        return checkpoint;\n+    private void scheduleCheckpoint(final Map<TopicPartition, Long> checkpoint) {\n+        this.checkpoint = checkpoint;\n+        this.checkpointNeeded = true;\n+    }\n+\n+    private void writeCheckpoint() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 112}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk2MTU0", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425696154", "createdAt": "2020-06-06T00:37:32Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzozMlrOGgAjXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzozMlrOGgAjXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNjY3MQ==", "bodyText": "Do we need to set checkpointNeeded = false here?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436216671", "createdAt": "2020-06-06T00:37:32Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk2MTk5", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425696199", "createdAt": "2020-06-06T00:37:52Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzo1MlrOGgAj9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDozNzo1MlrOGgAj9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIxNjgyMA==", "bodyText": "As above?", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436216820", "createdAt": "2020-06-06T00:37:52Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -562,32 +561,41 @@ public void closeAndRecycleState() {\n                 if (clean) {\n                     stateMgr.flush();\n                     recordCollector.flush();\n-                    checkpoint = checkpointableOffsets();\n+\n+                    scheduleCheckpoint(checkpointableOffsets());\n                 } else {\n-                    checkpoint = null; // `null` indicates to not write a checkpoint\n                     executeAndMaybeSwallow(false, stateMgr::flush, \"state manager flush\", log);\n                 }\n \n                 break;\n \n             case RESTORING:\n                 executeAndMaybeSwallow(clean, stateMgr::flush, \"state manager flush\", log);\n-                checkpoint = Collections.emptyMap();\n+                scheduleCheckpoint(emptyMap());\n \n                 break;\n \n             case SUSPENDED:\n             case CLOSED:\n                 // not need to checkpoint, since when suspending we've already committed the state\n-                checkpoint = null; // `null` indicates to not write a checkpoint", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk2MzUy", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425696352", "createdAt": "2020-06-06T00:38:56Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9", "committedDate": "2020-06-06T00:48:06Z", "message": "internalize checkpoint"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9", "committedDate": "2020-06-06T00:48:06Z", "message": "internalize checkpoint"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk3NzEz", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425697713", "createdAt": "2020-06-06T00:49:47Z", "commit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0OTo0N1rOGgAzYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMDo0OTo0N1rOGgAzYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMDc2OQ==", "bodyText": "I think we could just reset any checkpoint at the beginning, so that we only do checkpointing if this call thinks so. @mjsax", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436220769", "createdAt": "2020-06-06T00:49:47Z", "author": {"login": "abbccdda"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -546,14 +547,14 @@ public void closeAndRecycleState() {\n      *                 otherwise, just close open resources\n      * @throws TaskMigratedException if the task producer got fenced (EOS)\n      */\n-    private Map<TopicPartition, Long> prepareClose(final boolean clean) {\n-        final Map<TopicPartition, Long> checkpoint;\n+    private void prepareClose(final boolean clean) {\n+        // Reset any previously scheduled checkpoint.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1Njk5OTgw", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425699980", "createdAt": "2020-06-06T01:10:41Z", "commit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMToxMDo0MlrOGgA8Mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMToxMDo0MlrOGgA8Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyMzAyNw==", "bodyText": "A if (clean) should be sufficient now", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436223027", "createdAt": "2020-06-06T01:10:42Z", "author": {"login": "mjsax"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -598,9 +606,9 @@ public void closeAndRecycleState() {\n      *  3. finally release the state manager lock\n      * </pre>\n      */\n-    private void close(final boolean clean, final Map<TopicPartition, Long> checkpoint) {\n-        if (clean && checkpoint != null) {\n-            executeAndMaybeSwallow(clean, () -> stateMgr.checkpoint(checkpoint), \"state manager checkpoint\", log);\n+    private void close(final boolean clean) {\n+        if (clean && checkpointNeeded) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b25a3af632cfd9ac4489ec1b692b46a9cdd73b9"}, "originalPosition": 130}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/6b7bcd100f349698b658a1e4ad5b7735b847d977", "committedDate": "2020-06-06T02:26:16Z", "message": "minor change"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI1NzA2Mjgz", "url": "https://github.com/apache/kafka/pull/8820#pullrequestreview-425706283", "createdAt": "2020-06-06T02:33:22Z", "commit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjozMzoyMlrOGgBWvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNlQwMjozMzoyMlrOGgBWvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjIyOTgyMg==", "bodyText": "Do we need two parameters here? Could we still just use one Map<TopicPartition, Long> checkpoint, and then in writeCheckpointIfNeed if it is not null write it and then set it to null.", "url": "https://github.com/apache/kafka/pull/8820#discussion_r436229822", "createdAt": "2020-06-06T02:33:22Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/StreamTask.java", "diffHunk": "@@ -107,6 +107,9 @@\n     private boolean commitNeeded = false;\n     private boolean commitRequested = false;\n \n+    private boolean checkpointNeeded = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6b7bcd100f349698b658a1e4ad5b7735b847d977"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc9c9dacb0254f78b628d845f1c3e2d8e91fb2e0", "author": {"user": {"login": "abbccdda", "name": "Boyang Chen"}}, "url": "https://github.com/apache/kafka/commit/bc9c9dacb0254f78b628d845f1c3e2d8e91fb2e0", "committedDate": "2020-06-06T15:46:46Z", "message": "only checkpoint struct"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 900, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}