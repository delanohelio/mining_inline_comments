{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NTMyMTg5", "number": 8524, "title": "KAFKA-9866: Avoid election for topics where preferred leader is not in ISR", "bodyText": "In this commit we made sure that the auto leader election only happens after the newly starter broker is in the isr.\nNo accompany tests are added due to the fact that:\n\nthis is a change to the private method and no public facing change is made\nit is hard to create tests for this change without considerable effort\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-04-21T08:48:53Z", "url": "https://github.com/apache/kafka/pull/8524", "merged": true, "mergeCommit": {"oid": "db9e55a50f93d82e4aad5e4f82a13fac0e93759e"}, "closed": true, "closedAt": "2020-04-27T20:51:11Z", "author": {"login": "leonardge"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZvsHngH2gAyNDA2NTMyMTg5OjQ0ZWVhMDRmNGE3Y2YyYTJhMWE3MDE2YmNiMjNkYTA1MTFkNmNjMzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcb16ucgFqTQwMTMyOTYxNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38", "committedDate": "2020-04-21T08:47:55Z", "message": "Avoid starting election for topics where preferred leader is not in sync."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MTM5MzUy", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-397139352", "createdAt": "2020-04-21T09:12:10Z", "commit": {"oid": "44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToxMjoxMFrOGI7Vyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQwOToxMjoxMFrOGI7Vyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjAxNDAyNg==", "bodyText": "I think we should do this check last. We also want to use an option to avoid any potential NPEs. e.g:\ncontrollerContext.partitionLeadershipInfo.get(partition).forall(...)", "url": "https://github.com/apache/kafka/pull/8524#discussion_r412014026", "createdAt": "2020-04-21T09:12:10Z", "author": {"login": "stanislavkozlovski"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1066,6 +1066,7 @@ class KafkaController(val config: KafkaConfig,\n         // do this check only if the broker is live and there are no partitions being reassigned currently\n         // and preferred replica election is not in progress\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n+          controllerContext.partitionLeadershipInfo(tp).leaderAndIsr.isr.contains(leaderBroker) &&", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44eea04f4a7cf2a2a1a7016bcb23da0511d6cc38"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29632f76ed34c75f80c175101c17155e98f24f0a", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/29632f76ed34c75f80c175101c17155e98f24f0a", "committedDate": "2020-04-22T10:13:24Z", "message": "Refactored the code and fixed bug in the integration test."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NjkyODQ4", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-398692848", "createdAt": "2020-04-23T01:08:55Z", "commit": {"oid": "29632f76ed34c75f80c175101c17155e98f24f0a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMTowODo1NVrOGKSKTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwMTowODo1NVrOGKSKTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzQzNjQ5NQ==", "bodyText": "The preferred leader election also checks for live brokers. So, perhaps we could just call PartitionLeaderElectionAlgorithms.preferredReplicaPartitionLeaderElection() here.", "url": "https://github.com/apache/kafka/pull/8524#discussion_r413436495", "createdAt": "2020-04-23T01:08:55Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,7 +1068,9 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          controllerContext.partitionLeadershipInfo.get(tp).forall(l => l.leaderAndIsr.isr.contains(leaderBroker))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "29632f76ed34c75f80c175101c17155e98f24f0a"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "172960f972e82b10158d86fb4c02a7f9317ac43c", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/172960f972e82b10158d86fb4c02a7f9317ac43c", "committedDate": "2020-04-23T09:03:04Z", "message": "Refactored according to comments."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk5MzgzODA1", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-399383805", "createdAt": "2020-04-23T18:51:40Z", "commit": {"oid": "172960f972e82b10158d86fb4c02a7f9317ac43c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODo1MTo0MFrOGK3Ifg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxODo1MTo0MFrOGK3Ifg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA0MjIzOA==", "bodyText": "In Election.leaderForPreferredReplica(), liveReplicas is computed as the following. So, we probably want to be consistent here.\nval liveReplicas = assignment.filter(replica => controllerContext.isReplicaOnline(replica, partition))", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414042238", "createdAt": "2020-04-23T18:51:40Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,7 +1068,12 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          PartitionLeaderElectionAlgorithms.preferredReplicaPartitionLeaderElection(\n+            controllerContext.partitionReplicaAssignment(tp),\n+            controllerContext.partitionLeadershipInfo(tp).leaderAndIsr.isr,\n+            controllerContext.liveBrokerIds.toSet).nonEmpty", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "172960f972e82b10158d86fb4c02a7f9317ac43c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24c6d42b9ea69fe9bb2a40649bae15e0f74542db", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/24c6d42b9ea69fe9bb2a40649bae15e0f74542db", "committedDate": "2020-04-24T09:08:02Z", "message": "Kept the code to be consistent."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc67b99c2d2d45a59ede67da186d1890c7b7c1ce", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/dc67b99c2d2d45a59ede67da186d1890c7b7c1ce", "committedDate": "2020-04-24T09:09:25Z", "message": "Reverted style change."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMTM1NTI2", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-400135526", "createdAt": "2020-04-24T17:24:16Z", "commit": {"oid": "dc67b99c2d2d45a59ede67da186d1890c7b7c1ce"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzoyNDoxN1rOGLhuQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNzoyNDoxN1rOGLhuQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDc0MDAzNA==", "bodyText": "Perhaps a more accurate name is canPreferredReplicaBeLeader()?", "url": "https://github.com/apache/kafka/pull/8524#discussion_r414740034", "createdAt": "2020-04-24T17:24:17Z", "author": {"login": "junrao"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,12 +1068,23 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          isPreferredLeaderInSync(tp)\n+       )\n         onReplicaElection(candidatePartitions.toSet, ElectionType.PREFERRED, AutoTriggered)\n       }\n     }\n   }\n \n+  private def isPreferredLeaderInSync(tp: TopicPartition): Boolean = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dc67b99c2d2d45a59ede67da186d1890c7b7c1ce"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2fa3ceed0322b90306393e0dffc1fdbdba779613", "author": {"user": {"login": "leonardge", "name": "Leonard Ge"}}, "url": "https://github.com/apache/kafka/commit/2fa3ceed0322b90306393e0dffc1fdbdba779613", "committedDate": "2020-04-25T15:25:39Z", "message": "Renamed helper function after review."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMTQ4Mzkw", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-401148390", "createdAt": "2020-04-27T17:00:19Z", "commit": {"oid": "2fa3ceed0322b90306393e0dffc1fdbdba779613"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMzI5NjE1", "url": "https://github.com/apache/kafka/pull/8524#pullrequestreview-401329615", "createdAt": "2020-04-27T21:11:09Z", "commit": {"oid": "2fa3ceed0322b90306393e0dffc1fdbdba779613"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMToxMTowOVrOGM34NQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMToxMTowOVrOGM34NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjE1MTYwNQ==", "bodyText": "We also do controllerContext.isReplicaOnline(leaderBroker, tp) in the caller. Do we also need it here?", "url": "https://github.com/apache/kafka/pull/8524#discussion_r416151605", "createdAt": "2020-04-27T21:11:09Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/controller/KafkaController.scala", "diffHunk": "@@ -1068,12 +1068,23 @@ class KafkaController(val config: KafkaConfig,\n         val candidatePartitions = topicsNotInPreferredReplica.keys.filter(tp => controllerContext.isReplicaOnline(leaderBroker, tp) &&\n           controllerContext.partitionsBeingReassigned.isEmpty &&\n           !topicDeletionManager.isTopicQueuedUpForDeletion(tp.topic) &&\n-          controllerContext.allTopics.contains(tp.topic))\n+          controllerContext.allTopics.contains(tp.topic) &&\n+          canPreferredReplicaBeLeader(tp)\n+       )\n         onReplicaElection(candidatePartitions.toSet, ElectionType.PREFERRED, AutoTriggered)\n       }\n     }\n   }\n \n+  private def canPreferredReplicaBeLeader(tp: TopicPartition): Boolean = {\n+    val assignment = controllerContext.partitionReplicaAssignment(tp)\n+    val liveReplicas = assignment.filter(replica => controllerContext.isReplicaOnline(replica, tp))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fa3ceed0322b90306393e0dffc1fdbdba779613"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1609, "cost": 1, "resetAt": "2021-10-28T17:48:14Z"}}}