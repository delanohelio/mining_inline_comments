{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0NDEyMTAx", "number": 9781, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzozNDo0OVrOFIVWEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNjoxMjo0NFrOFJsGJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MjgyNjQyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzozNDo0OVrOIKMQTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQyMzozNDo0OVrOIKMQTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzU1NzQ1Mg==", "bodyText": "You could inline ApiError.fromThrowable(e) here, and eliminate the apiError local variable.", "url": "https://github.com/apache/kafka/pull/9781#discussion_r547557452", "createdAt": "2020-12-22T23:34:49Z", "author": {"login": "kowshik"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "diffHunk": "@@ -57,18 +55,11 @@ public UpdateFeaturesRequest(UpdateFeaturesRequestData data, short version) {\n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n         final ApiError apiError = ApiError.fromThrowable(e);\n-        final UpdatableFeatureResultCollection results = new UpdatableFeatureResultCollection();\n-        for (FeatureUpdateKey update : this.data.featureUpdates().valuesSet()) {\n-            final UpdatableFeatureResult result = new UpdatableFeatureResult()\n-                .setFeature(update.feature())\n-                .setErrorCode(apiError.error().code())\n-                .setErrorMessage(apiError.message());\n-            results.add(result);\n-        }\n-        final UpdateFeaturesResponseData responseData = new UpdateFeaturesResponseData()\n-            .setThrottleTimeMs(throttleTimeMs)\n-            .setResults(results);\n-        return new UpdateFeaturesResponse(responseData);\n+        return UpdateFeaturesResponse.createWithErrors(\n+            apiError,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60938dce8295725b8dd13750cb33f3b6f9e7c9f3"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MzE1NzA2OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yM1QwMjoyOTowNVrOIKPK1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOFQxNzozNTo0OVrOIL-W0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTIwNw==", "bodyText": "If we want set only top-level error, we have to make UpdateFeaturesResponse#errors use top-level error as well. Otherwise, the top-level error can't be propagated correctly.\nsee https://github.com/apache/kafka/blob/trunk/clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java#L48", "url": "https://github.com/apache/kafka/pull/9781#discussion_r547605207", "createdAt": "2020-12-23T02:29:05Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "diffHunk": "@@ -56,19 +54,11 @@ public UpdateFeaturesRequest(UpdateFeaturesRequestData data, short version) {\n \n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n-        final ApiError apiError = ApiError.fromThrowable(e);\n-        final UpdatableFeatureResultCollection results = new UpdatableFeatureResultCollection();\n-        for (FeatureUpdateKey update : this.data.featureUpdates().valuesSet()) {\n-            final UpdatableFeatureResult result = new UpdatableFeatureResult()\n-                .setFeature(update.feature())\n-                .setErrorCode(apiError.error().code())\n-                .setErrorMessage(apiError.message());\n-            results.add(result);\n-        }\n-        final UpdateFeaturesResponseData responseData = new UpdateFeaturesResponseData()\n-            .setThrottleTimeMs(throttleTimeMs)\n-            .setResults(results);\n-        return new UpdateFeaturesResponse(responseData);\n+        return UpdateFeaturesResponse.createWithErrors(\n+            ApiError.fromThrowable(e),\n+            Collections.emptyMap(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fea71bff1da68894cbcd743788888b925b83d75a"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTQyNjg5Ng==", "bodyText": "@chia7712 Good catch. Pushed an update with some test cases.", "url": "https://github.com/apache/kafka/pull/9781#discussion_r549426896", "createdAt": "2020-12-28T17:35:49Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesRequest.java", "diffHunk": "@@ -56,19 +54,11 @@ public UpdateFeaturesRequest(UpdateFeaturesRequestData data, short version) {\n \n     @Override\n     public AbstractResponse getErrorResponse(int throttleTimeMs, Throwable e) {\n-        final ApiError apiError = ApiError.fromThrowable(e);\n-        final UpdatableFeatureResultCollection results = new UpdatableFeatureResultCollection();\n-        for (FeatureUpdateKey update : this.data.featureUpdates().valuesSet()) {\n-            final UpdatableFeatureResult result = new UpdatableFeatureResult()\n-                .setFeature(update.feature())\n-                .setErrorCode(apiError.error().code())\n-                .setErrorMessage(apiError.message());\n-            results.add(result);\n-        }\n-        final UpdateFeaturesResponseData responseData = new UpdateFeaturesResponseData()\n-            .setThrottleTimeMs(throttleTimeMs)\n-            .setResults(results);\n-        return new UpdateFeaturesResponse(responseData);\n+        return UpdateFeaturesResponse.createWithErrors(\n+            ApiError.fromThrowable(e),\n+            Collections.emptyMap(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzYwNTIwNw=="}, "originalCommit": {"oid": "fea71bff1da68894cbcd743788888b925b83d75a"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ1NzAzOTc1OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNjoxMjo0NFrOIMHwuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQwNjoxMjo0NFrOIMHwuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTU4MDk4Nw==", "bodyText": "Is valuesSet necessary?", "url": "https://github.com/apache/kafka/pull/9781#discussion_r549580987", "createdAt": "2020-12-29T06:12:44Z", "author": {"login": "chia7712"}, "path": "clients/src/main/java/org/apache/kafka/common/requests/UpdateFeaturesResponse.java", "diffHunk": "@@ -45,16 +44,18 @@ public UpdateFeaturesResponse(UpdateFeaturesResponseData data) {\n         this.data = data;\n     }\n \n-    public Map<String, ApiError> errors() {\n-        return data.results().valuesSet().stream().collect(\n-            Collectors.toMap(\n-                result -> result.feature(),\n-                result -> new ApiError(Errors.forCode(result.errorCode()), result.errorMessage())));\n+    public ApiError topLevelError() {\n+        return new ApiError(Errors.forCode(data.errorCode()), data.errorMessage());\n     }\n \n     @Override\n     public Map<Errors, Integer> errorCounts() {\n-        return apiErrorCounts(errors());\n+        Map<Errors, Integer> errorCounts = new HashMap<>();\n+        updateErrorCounts(errorCounts, Errors.forCode(data.errorCode()));\n+        for (UpdatableFeatureResult result : data.results().valuesSet()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7626f3275d899e2290b1a9353ac7a2d2811d17a7"}, "originalPosition": 39}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3558, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}