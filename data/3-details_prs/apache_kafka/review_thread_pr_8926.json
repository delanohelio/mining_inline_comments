{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM5NjAzMjM1", "number": 8926, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0Mzo0M1rOEIlY2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNDoyN1rOEI9zuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDM2NjM0OnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0Mzo0M1rOGooqIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0Mzo0M1rOGooqIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2MjM2OQ==", "bodyText": "This was another \"sort-of bug\": if we hit an exception in handleRevocation we wouldn't finish committing the active tasks, so commitNeeded could still be true. But of course, if we hit an exception earlier, we would have thrown it up to ConsumerCoordinator which would only save the first exception, so this didn't really do anything", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445262369", "createdAt": "2020-06-25T01:43:43Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -242,18 +242,16 @@ public void handleAssignment(final Map<TaskId, Set<TopicPartition>> activeTasks,\n \n         for (final Task task : tasksToClose) {\n             try {\n-                task.suspend(); // Should be a no-op for active tasks since they're suspended in handleRevocation\n-                if (task.commitNeeded()) {\n-                    if (task.isActive()) {\n-                        log.error(\"Active task {} was revoked and should have already been committed\", task.id());\n-                        throw new IllegalStateException(\"Revoked active task was not committed during handleRevocation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3NDM2ODk1OnYy", "diffSide": "LEFT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNVQwMTo0NTozN1rOGoorwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNzowMVrOGpQCww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2Mjc4NA==", "bodyText": "We can actually simplify the standby task shutdown a LOT", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445262784", "createdAt": "2020-06-25T01:45:37Z", "author": {"login": "ableegoldman"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -813,27 +821,6 @@ void shutdown(final boolean clean) {\n                 tasksToCloseDirty.add(task);\n             }\n         }\n-\n-        for (final Task task : tasksToCommit) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNzY1MQ==", "bodyText": "Makes sense.", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445907651", "createdAt": "2020-06-26T00:27:01Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -813,27 +821,6 @@ void shutdown(final boolean clean) {\n                 tasksToCloseDirty.add(task);\n             }\n         }\n-\n-        for (final Task task : tasksToCommit) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTI2Mjc4NA=="}, "originalCommit": null, "originalPosition": 158}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3ODM2NzMxOnYy", "diffSide": "RIGHT", "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNDoyN1rOGpQASg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQwMDoyNDoyN1rOGpQASg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NTkwNzAxOA==", "bodyText": "If we are not committing these tasks, should we call their postCommit?", "url": "https://github.com/apache/kafka/pull/8926#discussion_r445907018", "createdAt": "2020-06-26T00:24:27Z", "author": {"login": "guozhangwang"}, "path": "streams/src/main/java/org/apache/kafka/streams/processor/internals/TaskManager.java", "diffHunk": "@@ -469,21 +465,27 @@ void handleRevocation(final Collection<TopicPartition> revokedPartitions) {\n             throw suspendException;\n         }\n \n+        final Map<TaskId, Map<TopicPartition, OffsetAndMetadata>> consumedOffsetsAndMetadataPerTask = new HashMap<>();\n+        prepareCommitAndAddOffsetsToMap(revokedTasks, consumedOffsetsAndMetadataPerTask);\n+\n         // If using eos-beta, if we must commit any task then we must commit all of them\n         // TODO: when KAFKA-9450 is done this will be less expensive, and we can simplify by always committing everything\n-        if (processingMode ==  EXACTLY_ONCE_BETA && !tasksToCommit.isEmpty()) {\n-            tasksToCommit.addAll(additionalTasksForCommitting);\n-        }\n-\n-        final Map<TaskId, Map<TopicPartition, OffsetAndMetadata>> consumedOffsetsAndMetadataPerTask = new HashMap<>();\n-        for (final Task task : tasksToCommit) {\n-            final Map<TopicPartition, OffsetAndMetadata> committableOffsets = task.prepareCommit();\n-            consumedOffsetsAndMetadataPerTask.put(task.id(), committableOffsets);\n+        if (processingMode ==  EXACTLY_ONCE_BETA && !consumedOffsetsAndMetadataPerTask.isEmpty()) {\n+            prepareCommitAndAddOffsetsToMap(additionalTasksForCommitting, consumedOffsetsAndMetadataPerTask);\n         }\n \n         commitOffsetsOrTransaction(consumedOffsetsAndMetadataPerTask);\n \n-        for (final Task task : tasksToCommit) {\n+        for (final Task task : revokedTasks) {\n+            try {\n+                task.postCommit();\n+            } catch (final RuntimeException e) {\n+                log.error(\"Exception caught while post-committing task \" + task.id(), e);\n+                firstException.compareAndSet(null, e);\n+            }\n+        }\n+\n+        for (final Task task : additionalTasksForCommitting) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 80}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2432, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}