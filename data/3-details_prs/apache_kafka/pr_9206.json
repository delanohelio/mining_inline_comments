{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxOTU5NDA3", "number": 9206, "title": "MINOR: rewrite zipWithIndex by normal foreach to refrain unnecessary \u2026", "bodyText": "steal some memory back from hot method :)\n\nimprovement: +17%\ngarbage allocation: -12 %\n\nParameters\n\nbufferSupplierStr = NO_CACHING\nbytes = RANDOM\ncompressionType = NONE\nmaxBatchSize = 500\nmessageSize = 100000\nmessageVersion = 2\n\nBEFORE\nBenchmark                                                                                                  (bufferSupplierStr)  (bytes)  (maxBatchSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score       Error   Units\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed                                        NO_CACHING   RANDOM             500         100000                 2  thrpt   15  2315566.901 \u00b1 35760.064   ops/s\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.alloc.rate                         NO_CACHING   RANDOM             500         100000                 2  thrpt   15     4004.046 \u00b1    61.825  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM             500         100000                 2  thrpt   15     1904.000 \u00b1     0.001    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Eden_Space                NO_CACHING   RANDOM             500         100000                 2  thrpt   15     4007.442 \u00b1    80.422  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Eden_Space.norm           NO_CACHING   RANDOM             500         100000                 2  thrpt   15     1905.678 \u00b1    29.493    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Old_Gen                   NO_CACHING   RANDOM             500         100000                 2  thrpt   15        0.007 \u00b1     0.001  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Old_Gen.norm              NO_CACHING   RANDOM             500         100000                 2  thrpt   15        0.003 \u00b1     0.001    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.count                              NO_CACHING   RANDOM             500         100000                 2  thrpt   15      516.000              counts\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.time                               NO_CACHING   RANDOM             500         100000                 2  thrpt   15      491.000                  ms\n\nAFTER\nBenchmark                                                                                                  (bufferSupplierStr)  (bytes)  (maxBatchSize)  (messageSize)  (messageVersion)   Mode  Cnt        Score      Error   Units\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed                                        NO_CACHING   RANDOM             500         100000                 2  thrpt   15  2715876.329 \u00b1 4288.625   ops/s\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.alloc.rate                         NO_CACHING   RANDOM             500         100000                 2  thrpt   15     4163.501 \u00b1    6.553  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.alloc.rate.norm                    NO_CACHING   RANDOM             500         100000                 2  thrpt   15     1688.000 \u00b1    0.001    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Eden_Space                NO_CACHING   RANDOM             500         100000                 2  thrpt   15     4164.497 \u00b1   56.694  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Eden_Space.norm           NO_CACHING   RANDOM             500         100000                 2  thrpt   15     1688.397 \u00b1   22.173    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Old_Gen                   NO_CACHING   RANDOM             500         100000                 2  thrpt   15        0.008 \u00b1    0.002  MB/sec\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.churn.G1_Old_Gen.norm              NO_CACHING   RANDOM             500         100000                 2  thrpt   15        0.003 \u00b1    0.001    B/op\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.count                              NO_CACHING   RANDOM             500         100000                 2  thrpt   15      536.000             counts\nUncompressedRecordBatchValidationBenchmark.measureAssignOffsetsNonCompressed:\u00b7gc.time                               NO_CACHING   RANDOM             500         100000                 2  thrpt   15      518.000                 ms\n\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-08-22T08:43:26Z", "url": "https://github.com/apache/kafka/pull/9206", "merged": true, "mergeCommit": {"oid": "b36e3c22ab88399d439e870edaf60eea89d5c73d"}, "closed": true, "closedAt": "2020-09-24T09:46:22Z", "author": {"login": "chia7712"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCm14qABqjM2OTM0MjgxMzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdL9-8pAFqTQ5NTM5NzA5OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTc1NDQ4", "url": "https://github.com/apache/kafka/pull/9206#pullrequestreview-493575448", "createdAt": "2020-09-22T15:16:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNToxNjo0N1rOHV_aaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNToxNjo0N1rOHV_aaQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMTA5Nw==", "bodyText": "Have we benchmarked this path? It seems doubtful that these micro optimizations help given that we are converting.", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492821097", "createdAt": "2020-09-22T15:16:47Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -234,16 +234,17 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    for (batch <- records.batches.asScala) {\n+    records.batches.forEach { batch =>\n       validateBatch(topicPartition, firstBatch, batch, origin, toMagicValue, brokerTopicStats)\n \n       val recordErrors = new ArrayBuffer[ApiRecordError](0)\n-      for ((record, batchIndex) <- batch.asScala.view.zipWithIndex) {\n+      var batchIndex = 0\n+      batch.forEach { record =>\n         validateRecord(batch, topicPartition, record, batchIndex, now, timestampType,\n           timestampDiffMaxMs, compactedTopic, brokerTopicStats).foreach(recordError => recordErrors += recordError)\n         // we fail the batch if any record fails, so we stop appending if any record fails\n-        if (recordErrors.isEmpty)\n-          builder.appendWithOffset(offsetCounter.getAndIncrement(), record)\n+        if (recordErrors.isEmpty) builder.appendWithOffset(offsetCounter.getAndIncrement(), record)\n+        batchIndex += 1", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNTc4MjYy", "url": "https://github.com/apache/kafka/pull/9206#pullrequestreview-493578262", "createdAt": "2020-09-22T15:19:34Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNToxOTozNFrOHV_i7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNToxOTozNFrOHV_i7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjgyMzI3OQ==", "bodyText": "Worth adding a comment here that this is a hot path and we want to avoid any unnecessary allocations.", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492823279", "createdAt": "2020-09-22T15:19:34Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -279,14 +280,15 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    for (batch <- records.batches.asScala) {\n+    records.batches.forEach { batch =>\n       validateBatch(topicPartition, firstBatch, batch, origin, magic, brokerTopicStats)\n \n       var maxBatchTimestamp = RecordBatch.NO_TIMESTAMP\n       var offsetOfMaxBatchTimestamp = -1L\n \n       val recordErrors = new ArrayBuffer[ApiRecordError](0)\n-      for ((record, batchIndex) <- batch.asScala.view.zipWithIndex) {\n+      var batchIndex = 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjMyNDg2", "url": "https://github.com/apache/kafka/pull/9206#pullrequestreview-493632486", "createdAt": "2020-09-22T16:15:47Z", "commit": null, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjoxNTo0N1rOHWCGzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNjoxNTo0N1rOHWCGzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg2NTIzMA==", "bodyText": "I liked your changes to make the code more concise, I'd keep them.", "url": "https://github.com/apache/kafka/pull/9206#discussion_r492865230", "createdAt": "2020-09-22T16:15:47Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/LogValidator.scala", "diffHunk": "@@ -234,17 +234,16 @@ private[log] object LogValidator extends Logging {\n \n     val firstBatch = getFirstBatchAndMaybeValidateNoMoreBatches(records, NoCompressionCodec)\n \n-    records.batches.forEach { batch =>\n+    for (batch <- records.batches.asScala) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": null}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6cbbe12f4cb6789b70f2b8c0ffa63a6dadfe185", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/a6cbbe12f4cb6789b70f2b8c0ffa63a6dadfe185", "committedDate": "2020-09-23T15:06:26Z", "message": "MINOR: rewrite zipWithIndex by normal foreach to refrain unnecessary tuple allocations when validating record"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60ca305219d107ae809a285957830cea3b9d7887", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/60ca305219d107ae809a285957830cea3b9d7887", "committedDate": "2020-09-23T15:06:26Z", "message": "add comment and revert unnecessary code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82fbfac1f21a248865f303643fd8fd1836a8d758", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/82fbfac1f21a248865f303643fd8fd1836a8d758", "committedDate": "2020-09-23T15:06:26Z", "message": "reomve unnecessary collection conversion"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": null, "afterCommit": {"oid": "82fbfac1f21a248865f303643fd8fd1836a8d758", "author": {"user": {"login": "chia7712", "name": "Chia-Ping Tsai"}}, "url": "https://github.com/apache/kafka/commit/82fbfac1f21a248865f303643fd8fd1836a8d758", "committedDate": "2020-09-23T15:06:26Z", "message": "reomve unnecessary collection conversion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk1Mzk3MDk4", "url": "https://github.com/apache/kafka/pull/9206#pullrequestreview-495397098", "createdAt": "2020-09-24T09:43:22Z", "commit": {"oid": "82fbfac1f21a248865f303643fd8fd1836a8d758"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 798, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}