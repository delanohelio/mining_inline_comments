{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMTY4MDI5", "number": 8843, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDo1MjoyOVrOEEI8HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NjoyNFrOEEYfmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc2MjIxOnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDo1MjoyOVrOGhkyjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NDowN1rOGh9_tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1ODk1Ng==", "bodyText": "Does the deletion logic affect the success of each test? If not, I would prefer to keep it to simplify the broker side log for each subsequent tests, such that we don't have a lot of unused topics.", "url": "https://github.com/apache/kafka/pull/8843#discussion_r437858956", "createdAt": "2020-06-10T04:52:29Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -107,7 +109,6 @@ public void before() {\n     @After\n     public void after() throws Exception {\n         IntegrationTestUtils.purgeLocalStreamsState(STREAMS_CONFIG);\n-        CLUSTER.deleteAllTopicsAndWait(60000L);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MDEzOA==", "bodyText": "Actually I think having different topics for different test cases have a merit for debugging -- in the past I've seen we unintentionally share topics between tests which is hard to trouble-shoot from the logs. Now with different topic names we would very easily notice if something went wrong.", "url": "https://github.com/apache/kafka/pull/8843#discussion_r438270138", "createdAt": "2020-06-10T16:51:05Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -107,7 +109,6 @@ public void before() {\n     @After\n     public void after() throws Exception {\n         IntegrationTestUtils.purgeLocalStreamsState(STREAMS_CONFIG);\n-        CLUSTER.deleteAllTopicsAndWait(60000L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1ODk1Ng=="}, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MTkyNw==", "bodyText": "Yeah I agree 100% with Guozhang here, I wasted a lot of time trying to debug failures in the RestoreIntegrationTest that turned out to be due to reusing a single shared topic. +1 for using different topics (especially when we actually write data to them!)", "url": "https://github.com/apache/kafka/pull/8843#discussion_r438271927", "createdAt": "2020-06-10T16:54:07Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -107,7 +109,6 @@ public void before() {\n     @After\n     public void after() throws Exception {\n         IntegrationTestUtils.purgeLocalStreamsState(STREAMS_CONFIG);\n-        CLUSTER.deleteAllTopicsAndWait(60000L);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1ODk1Ng=="}, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNzc2NDI2OnYy", "diffSide": "LEFT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwNDo1Mzo0N1rOGhkzzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo0OToxM1rOGh90aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1OTI3Ng==", "bodyText": "The original logic seems unnecessary?", "url": "https://github.com/apache/kafka/pull/8843#discussion_r437859276", "createdAt": "2020-06-10T04:53:47Z", "author": {"login": "abbccdda"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -236,11 +237,7 @@ public void onRestoreStart(final TopicPartition topicPartition,\n                                    final String storeName,\n                                    final long startingOffset,\n                                    final long endingOffset) {\n-            try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI2OTAzMw==", "bodyText": "Yes, the callee would not throw actually.", "url": "https://github.com/apache/kafka/pull/8843#discussion_r438269033", "createdAt": "2020-06-10T16:49:13Z", "author": {"login": "guozhangwang"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -236,11 +237,7 @@ public void onRestoreStart(final TopicPartition topicPartition,\n                                    final String storeName,\n                                    final long startingOffset,\n                                    final long endingOffset) {\n-            try {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzg1OTI3Ng=="}, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDMwNTM4OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NDo1MlrOGh-BVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NDo1MlrOGh-BVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MjM0Mw==", "bodyText": "super nit: can we rename to streams1 to be consistent with other tests?", "url": "https://github.com/apache/kafka/pull/8843#discussion_r438272343", "createdAt": "2020-06-10T16:54:52Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -52,30 +51,28 @@\n import java.util.Map;\n import java.util.Properties;\n import java.util.concurrent.ConcurrentHashMap;\n-import java.util.concurrent.ExecutionException;\n \n @Category({IntegrationTest.class})\n public class KTableSourceTopicRestartIntegrationTest {\n     private static final int NUM_BROKERS = 3;\n     private static final String SOURCE_TOPIC = \"source-topic\";\n+    private static final Properties PRODUCER_CONFIG = new Properties();\n+    private static final Properties STREAMS_CONFIG = new Properties();\n \n     @ClassRule\n     public static final EmbeddedKafkaCluster CLUSTER = new EmbeddedKafkaCluster(NUM_BROKERS);\n+\n     private final Time time = CLUSTER.time;\n-    private KafkaStreams streamsOne;\n     private final StreamsBuilder streamsBuilder = new StreamsBuilder();\n     private final Map<String, String> readKeyValues = new ConcurrentHashMap<>();\n \n-    private static final Properties PRODUCER_CONFIG = new Properties();\n-    private static final Properties STREAMS_CONFIG = new Properties();\n+    private String sourceTopic;\n+    private KafkaStreams streamsOne;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMDMxMDY3OnYy", "diffSide": "RIGHT", "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NjoyNFrOGh-E0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNjo1NjoyNFrOGh-E0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODI3MzIzNA==", "bodyText": "nit: use IntegrationTestUtils#safeUniqueTestName for the name", "url": "https://github.com/apache/kafka/pull/8843#discussion_r438273234", "createdAt": "2020-06-10T16:56:24Z", "author": {"login": "ableegoldman"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KTableSourceTopicRestartIntegrationTest.java", "diffHunk": "@@ -96,8 +93,13 @@ public static void setUpBeforeAllTests() throws Exception {\n     public TestName testName = new TestName();\n \n     @Before\n-    public void before() {\n-        final KTable<String, String> kTable = streamsBuilder.table(SOURCE_TOPIC, Materialized.as(\"store\"));\n+    public void before() throws Exception {\n+        sourceTopic = SOURCE_TOPIC + \"-\" + testName.getMethodName();\n+        CLUSTER.createTopic(sourceTopic);\n+\n+        STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG, \"ktable-restore-from-source-\" + testName.getMethodName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8423700dcb5ef51def1d13414591f668abf9e32a"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2352, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}