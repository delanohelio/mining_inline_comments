{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgwNTc0ODM1", "number": 9255, "title": "KAFKA-6585: Consolidate duplicated logic on reset tools", "bodyText": "Consolidated Duplicate DateTime logic from ConsumerGroupCommand and StreamResetter in common Client Utils\nhttps://issues.apache.org/jira/browse/KAFKA-6585\nSummary of testing strategy (including   ##rationale)\nfor the feature or bug fix. Unit and/or integration\ntests are expected for any behaviour change and\nsystem tests should be considered for larger changes.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-05T19:48:24Z", "url": "https://github.com/apache/kafka/pull/9255", "merged": true, "mergeCommit": {"oid": "2fda4458b4d8e65cee255879f1a0a9cf858506a3"}, "closed": true, "closedAt": "2020-09-30T17:13:02Z", "author": {"login": "manijndl7"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdE4jR2gH2gAyNDgwNTc0ODM1OjY5MDM1ZWU2NmFiNDlkZGI3ZmIxMGE3N2Q5ZjQxZDQ3MTQxZTMwOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJaUahgH2gAyNDgwNTc0ODM1OjA4YjQ5MzcwZWJmOWM5NzBmOGU1OTVhY2MyYjcyZDQwZGJiZWViNGE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "69035ee66ab49ddb7fb10a77d9f41d47141e308e", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/69035ee66ab49ddb7fb10a77d9f41d47141e308e", "committedDate": "2020-09-02T09:26:09Z", "message": "Consolidate duplicated logic on reset tools"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/4e9331c2681156ce81b982a60ed4f9b99b39965b", "committedDate": "2020-09-05T19:38:13Z", "message": "Merge branch 'trunk' of https://github.com/apache/kafka into KAFKA-6585"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTE1NTIz", "url": "https://github.com/apache/kafka/pull/9255#pullrequestreview-483115523", "createdAt": "2020-09-06T06:31:56Z", "commit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQwNjozMTo1NlrOHNmxfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQwNjozMzo1MlrOHNmyFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODc5Nw==", "bodyText": "Few nitpicks here:\nConvert an ISO8601 based timestamp to an epoch value\n....\n@return epoch value of a given timestamp\n@throws ParseException for timestamp that doesn't follow ISO8601 format", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028797", "createdAt": "2020-09-06T06:31:56Z", "author": {"login": "brary"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -1271,4 +1274,35 @@ private static byte checkRange(final byte i) {\n         }\n         return map;\n     }\n+\n+\n+    /**\n+     * Convert a ISO8601 based TimeStamp to Epoch Value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODg5Nw==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028897", "createdAt": "2020-09-06T06:33:06Z", "author": {"login": "brary"}, "path": "streams/src/test/java/org/apache/kafka/streams/tools/StreamsResetterTest.java", "diffHunk": "@@ -30,11 +30,10 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODkwMA==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028900", "createdAt": "2020-09-06T06:33:11Z", "author": {"login": "brary"}, "path": "streams/src/test/java/org/apache/kafka/streams/tools/StreamsResetterTest.java", "diffHunk": "@@ -30,11 +30,10 @@\n import org.junit.Before;\n import org.junit.Test;\n \n-import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+\n import java.time.Duration;\n import java.util.Collections;\n-import java.util.Date;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODkwMg==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028902", "createdAt": "2020-09-06T06:33:17Z", "author": {"login": "brary"}, "path": "streams/src/test/java/org/apache/kafka/streams/tools/StreamsResetterTest.java", "diffHunk": "@@ -43,7 +42,7 @@\n \n import static org.junit.Assert.assertEquals;\n import static org.junit.Assert.assertTrue;\n-import static org.junit.Assert.fail;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODkzMA==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028930", "createdAt": "2020-09-06T06:33:39Z", "author": {"login": "brary"}, "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -42,13 +42,13 @@\n \n import java.io.IOException;\n import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+\n import java.time.Duration;\n import java.time.Instant;\n import java.util.ArrayList;\n import java.util.Collection;\n import java.util.Collections;\n-import java.util.Date;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODkzMg==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028932", "createdAt": "2020-09-06T06:33:42Z", "author": {"login": "brary"}, "path": "core/src/main/scala/kafka/tools/StreamsResetter.java", "diffHunk": "@@ -42,13 +42,13 @@\n \n import java.io.IOException;\n import java.text.ParseException;\n-import java.text.SimpleDateFormat;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODk1MA==", "bodyText": "nit: Please remove this line new line.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484028950", "createdAt": "2020-09-06T06:33:52Z", "author": {"login": "brary"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -17,7 +17,7 @@\n \n package kafka.admin\n \n-import java.text.{ParseException, SimpleDateFormat}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3892174c250ac4b4727335706223efefc2c0a208", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/3892174c250ac4b4727335706223efefc2c0a208", "committedDate": "2020-09-06T07:00:04Z", "message": "KAFKA-6585 Minor Identation Fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTE5MjQ3", "url": "https://github.com/apache/kafka/pull/9255#pullrequestreview-483119247", "createdAt": "2020-09-06T07:30:54Z", "commit": {"oid": "3892174c250ac4b4727335706223efefc2c0a208"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQwNzozMDo1NVrOHNnHGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQwNzozMTozOFrOHNnHYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAzNDMyOQ==", "bodyText": "There is an extra line here.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484034329", "createdAt": "2020-09-06T07:30:55Z", "author": {"login": "brary"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -1271,4 +1274,35 @@ private static byte checkRange(final byte i) {\n         }\n         return map;\n     }\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3892174c250ac4b4727335706223efefc2c0a208"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAzNDQwMw==", "bodyText": "This was not addressed, you disagree with the changes suggested?", "url": "https://github.com/apache/kafka/pull/9255#discussion_r484034403", "createdAt": "2020-09-06T07:31:38Z", "author": {"login": "brary"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -1271,4 +1274,35 @@ private static byte checkRange(final byte i) {\n         }\n         return map;\n     }\n+\n+\n+    /**\n+     * Convert a ISO8601 based TimeStamp to Epoch Value", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDAyODc5Nw=="}, "originalCommit": {"oid": "4e9331c2681156ce81b982a60ed4f9b99b39965b"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1", "committedDate": "2020-09-06T08:29:26Z", "message": "KAFKA-6585 Minor Changes in JavaDocs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTIzNTA1", "url": "https://github.com/apache/kafka/pull/9255#pullrequestreview-483123505", "createdAt": "2020-09-06T08:34:37Z", "commit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg3MTU5ODg4", "url": "https://github.com/apache/kafka/pull/9255#pullrequestreview-487159888", "createdAt": "2020-09-11T22:37:14Z", "commit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMjozNzoxNFrOHQvpgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMjo0NDoxOFrOHQvwfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMxOTkzOQ==", "bodyText": "nit: I don't know from the top of my head what the standard dictates. Might be worth adding to the comment?", "url": "https://github.com/apache/kafka/pull/9255#discussion_r487319939", "createdAt": "2020-09-11T22:37:14Z", "author": {"login": "mjsax"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -1271,4 +1274,34 @@ private static byte checkRange(final byte i) {\n         }\n         return map;\n     }\n+\n+    /**\n+     * Convert an ISO8601 based timestamp to an epoch value", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyMDcyOA==", "bodyText": "I am must wondering if we can have a dependency from core to clients module? \\cc @ijuma", "url": "https://github.com/apache/kafka/pull/9255#discussion_r487320728", "createdAt": "2020-09-11T22:40:26Z", "author": {"login": "mjsax"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -823,7 +809,7 @@ object ConsumerGroupCommand extends Logging {\n           case (topicPartition, newOffset) => (topicPartition, new OffsetAndMetadata(newOffset))\n         }\n       } else if (opts.options.has(opts.resetToDatetimeOpt)) {\n-        val timestamp = convertTimestamp(opts.options.valueOf(opts.resetToDatetimeOpt))\n+        val timestamp = Utils.getDateTime(opts.options.valueOf(opts.resetToDatetimeOpt))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyMTEzNQ==", "bodyText": "We should update this test and use assertThrows instead of try-fail-catch.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r487321135", "createdAt": "2020-09-11T22:41:54Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java", "diffHunk": "@@ -784,4 +787,39 @@ public void testCloseAllQuietly() {\n         assertEquals(msg, exception.get().getMessage());\n         assertEquals(1, count.get());\n     }\n+\n+    @Test\n+    public void shouldAcceptValidDateFormats() throws ParseException {\n+        //check valid formats\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXX\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\"));\n+    }\n+\n+    @Test\n+    public void shouldThrowOnInvalidDateFormat() {\n+        //check some invalid formats\n+        try {\n+            invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyMTI0OQ==", "bodyText": "We should not print the stacktrace imho, but verify the exception message using assertThat.", "url": "https://github.com/apache/kafka/pull/9255#discussion_r487321249", "createdAt": "2020-09-11T22:42:22Z", "author": {"login": "mjsax"}, "path": "clients/src/test/java/org/apache/kafka/common/utils/UtilsTest.java", "diffHunk": "@@ -784,4 +787,39 @@ public void testCloseAllQuietly() {\n         assertEquals(msg, exception.get().getMessage());\n         assertEquals(1, count.get());\n     }\n+\n+    @Test\n+    public void shouldAcceptValidDateFormats() throws ParseException {\n+        //check valid formats\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSS\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSZ\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSX\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXX\"));\n+        invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\"));\n+    }\n+\n+    @Test\n+    public void shouldThrowOnInvalidDateFormat() {\n+        //check some invalid formats\n+        try {\n+            invokeGetDateTimeMethod(new SimpleDateFormat(\"yyyy-MM-dd'T'HH:mm:ss\"));\n+            fail(\"Call to getDateTime should fail\");\n+        } catch (final Exception e) {\n+            e.printStackTrace();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzMyMTcyNg==", "bodyText": "I know that this is exiting logic that was just moved, but I am not sure if I understand how it works?", "url": "https://github.com/apache/kafka/pull/9255#discussion_r487321726", "createdAt": "2020-09-11T22:44:18Z", "author": {"login": "mjsax"}, "path": "clients/src/main/java/org/apache/kafka/common/utils/Utils.java", "diffHunk": "@@ -1271,4 +1274,34 @@ private static byte checkRange(final byte i) {\n         }\n         return map;\n     }\n+\n+    /**\n+     * Convert an ISO8601 based timestamp to an epoch value\n+     * @param timestamp to be converted\n+     * @return epoch value of a given timestamp\n+     * @throws ParseException for timestamp that doesn't follow ISO8601 format\n+     */\n+    public static long getDateTime(String timestamp) throws ParseException {\n+        final String[] timestampParts = timestamp.split(\"T\");\n+        if (timestampParts.length < 2) {\n+            throw new ParseException(\"Error parsing timestamp. It does not contain a 'T' according to ISO8601 format\", timestamp.length());\n+        }\n+\n+        final String secondPart = timestampParts[1];\n+        if (secondPart == null || secondPart.isEmpty()) {\n+            throw new ParseException(\"Error parsing timestamp. Time part after 'T' is null or empty\", timestamp.length());\n+        }\n+\n+        if (!(secondPart.contains(\"+\") || secondPart.contains(\"-\") || secondPart.contains(\"Z\"))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f5aa568a1d3c1fbd2160b82524bbdf4bf7c3fa1"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08b49370ebf9c970f8e595acc2b72d40dbbeeb4a", "author": {"user": null}, "url": "https://github.com/apache/kafka/commit/08b49370ebf9c970f8e595acc2b72d40dbbeeb4a", "committedDate": "2020-09-16T11:02:23Z", "message": "KAFKA-6585 Minor Refactoring"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 903, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}