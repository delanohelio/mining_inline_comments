{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NDg3NDg2", "number": 8983, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzo1ODoyNVrOELiCOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzo1ODoyNVrOELiCOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNTI3NDE3OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/log/AbstractIndex.scala", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwMzo1ODoyNVrOGtIGoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo1NToyNFrOGta3hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MTg3Mg==", "bodyText": "#7387 added null check to forceUnmap rather than safeForceUnmap. Which one makes sense? For another, forceUnmap is used by safeForceUnmap only. We can merge them so above question gets resolved.", "url": "https://github.com/apache/kafka/pull/8983#discussion_r449971872", "createdAt": "2020-07-06T03:58:25Z", "author": {"login": "chia7712"}, "path": "core/src/main/scala/kafka/log/AbstractIndex.scala", "diffHunk": "@@ -311,9 +311,11 @@ abstract class AbstractIndex(@volatile private var _file: File, val baseOffset:\n   }\n \n   protected def safeForceUnmap(): Unit = {\n-    try forceUnmap()\n-    catch {\n-      case t: Throwable => error(s\"Error unmapping index $file\", t)\n+    if (mmap != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a37ad7cde90a3c0be6ba936ca6e4180b1418ef81"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3ODcyNQ==", "bodyText": "This one and hence why I did it this way.", "url": "https://github.com/apache/kafka/pull/8983#discussion_r449978725", "createdAt": "2020-07-06T04:33:41Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/AbstractIndex.scala", "diffHunk": "@@ -311,9 +311,11 @@ abstract class AbstractIndex(@volatile private var _file: File, val baseOffset:\n   }\n \n   protected def safeForceUnmap(): Unit = {\n-    try forceUnmap()\n-    catch {\n-      case t: Throwable => error(s\"Error unmapping index $file\", t)\n+    if (mmap != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MTg3Mg=="}, "originalCommit": {"oid": "a37ad7cde90a3c0be6ba936ca6e4180b1418ef81"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3OTMwMQ==", "bodyText": "To clarify, we do use forceUnmap directly in a test. It's difficult to test methods that swallow all exceptions and hence it's useful to have forceUnmap from that perspective.", "url": "https://github.com/apache/kafka/pull/8983#discussion_r450279301", "createdAt": "2020-07-06T14:55:24Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/log/AbstractIndex.scala", "diffHunk": "@@ -311,9 +311,11 @@ abstract class AbstractIndex(@volatile private var _file: File, val baseOffset:\n   }\n \n   protected def safeForceUnmap(): Unit = {\n-    try forceUnmap()\n-    catch {\n-      case t: Throwable => error(s\"Error unmapping index $file\", t)\n+    if (mmap != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTk3MTg3Mg=="}, "originalCommit": {"oid": "a37ad7cde90a3c0be6ba936ca6e4180b1418ef81"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2175, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}