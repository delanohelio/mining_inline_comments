{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQwMjk3NDgz", "number": 8931, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxMjo0M1rOEJHC-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNzoyMlrOEJHH_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg4MDg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxMjo0M1rOGpelQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxMjo0M1rOGpelQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NTg1OA==", "bodyText": "This avoids the tuple creation.", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446145858", "createdAt": "2020-06-26T12:12:43Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -548,9 +550,9 @@ class AclAuthorizer extends Authorizer with Logging {\n \n   private def updateCache(resource: ResourcePattern, versionedAcls: VersionedAcls): Unit = {\n     if (versionedAcls.acls.nonEmpty) {\n-      aclCache = aclCache + (resource -> versionedAcls)\n+      aclCache = aclCache.updated(resource, versionedAcls)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg4NDYzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDowMlrOGpencA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDowMlrOGpencA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NjQxNg==", "bodyText": "The behavior of & was changed so that both conditions have to evaluate to true for a warning to match the exclusion.", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146416", "createdAt": "2020-06-26T12:14:02Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -367,7 +367,8 @@ class AclAuthorizer extends Authorizer with Logging {\n     } else false\n   }\n \n-  @nowarn(\"cat=deprecation&cat=optimizer\")\n+  @nowarn(\"cat=deprecation\")\n+  @nowarn(\"cat=optimizer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg4NjA5OnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDozM1rOGpeoUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDozM1rOGpeoUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NjY0Mw==", "bodyText": "New warning flagged by the compiler.", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146643", "createdAt": "2020-06-26T12:14:33Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/security/authorizer/AclAuthorizer.scala", "diffHunk": "@@ -538,6 +539,7 @@ class AclAuthorizer extends Authorizer with Logging {\n     }\n   }\n \n+  @nowarn(\"cat=optimizer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg4NjcxOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDo1MVrOGpeotQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNDo1MVrOGpeotQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Njc0MQ==", "bodyText": "New warning flagged by the compiler.", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446146741", "createdAt": "2020-06-26T12:14:51Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/admin/ConsumerGroupCommand.scala", "diffHunk": "@@ -566,6 +568,7 @@ object ConsumerGroupCommand extends Logging {\n     /**\n       * Returns the state of the specified consumer group and partition assignment states\n       */\n+    @nowarn(\"cat=optimizer\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg5MTAzOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaConfig.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNjoyMVrOGperbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNjoyMVrOGperbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0NzQzNg==", "bodyText": "toBuffer is more efficient than toList and sorted returns a copy anyway.", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446147436", "createdAt": "2020-06-26T12:16:21Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/server/KafkaConfig.scala", "diffHunk": "@@ -1210,7 +1210,7 @@ object KafkaConfig {\n       .define(PasswordEncoderIterationsProp, INT, Defaults.PasswordEncoderIterations, atLeast(1024), LOW, PasswordEncoderIterationsDoc)\n   }\n \n-  def configNames() = configDef.names().asScala.toList.sorted\n+  def configNames: Seq[String] = configDef.names.asScala.toBuffer.sorted", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc3OTg5MzczOnYy", "diffSide": "LEFT", "path": "core/src/main/scala/kafka/zk/KafkaZkClient.scala", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNzoyMlrOGpetIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yNlQxMjoxNzoyMlrOGpetIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NjE0Nzg3NA==", "bodyText": "It doesn't make sense to deprecate a method in an internal class that is still needed by our code. Removed the deprecation of various KafkaZkClient classes. cc @stanislavkozlovski", "url": "https://github.com/apache/kafka/pull/8931#discussion_r446147874", "createdAt": "2020-06-26T12:17:22Z", "author": {"login": "ijuma"}, "path": "core/src/main/scala/kafka/zk/KafkaZkClient.scala", "diffHunk": "@@ -810,10 +810,8 @@ class KafkaZkClient private[zk] (zooKeeperClient: ZooKeeperClient, isSecure: Boo\n   /**\n    * Returns all reassignments.\n    * @return the reassignments for each partition.\n-   * @deprecated Use the PartitionReassignment Kafka API instead\n    */\n-  @Deprecated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "261ab95d14bbc7d88b6d57f5ad291351eed91e0b"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2442, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}