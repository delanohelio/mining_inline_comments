{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNDU1NTMx", "number": 9130, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzowOToyOFrOEld56g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzoxMjoxNlrOEld60A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzIyNzMwOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzowOToyOFrOHU9ylQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzowOToyOFrOHU9ylQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NTk0MQ==", "bodyText": "nit: if this is only used for unit tests, better add a one-liner comment for that.", "url": "https://github.com/apache/kafka/pull/9130#discussion_r491745941", "createdAt": "2020-09-20T23:09:28Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/common/protocol/ApiKeys.java", "diffHunk": "@@ -415,4 +444,10 @@ public void visit(Type field) {\n         return hasBuffer.get();\n     }\n \n+    public static Set<ApiKeys> enabledApis() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3NzIyOTYwOnYy", "diffSide": "RIGHT", "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMFQyMzoxMjoxNlrOHU9zqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQxNzowMDowMVrOHVaOKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NjIxOA==", "bodyText": "I feel this is not necessary since we would throw in processCompletedReceives at SocketServer already as processChannelException, but no harm guarding them as well.", "url": "https://github.com/apache/kafka/pull/9130#discussion_r491746218", "createdAt": "2020-09-20T23:12:16Z", "author": {"login": "guozhangwang"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -182,10 +182,13 @@ class KafkaApis(val requestChannel: RequestChannel,\n         case ApiKeys.ALTER_CLIENT_QUOTAS => handleAlterClientQuotasRequest(request)\n         case ApiKeys.DESCRIBE_USER_SCRAM_CREDENTIALS => handleDescribeUserScramCredentialsRequest(request)\n         case ApiKeys.ALTER_USER_SCRAM_CREDENTIALS => handleAlterUserScramCredentialsRequest(request)\n-        case ApiKeys.VOTE => handleVote(request)\n-        case ApiKeys.BEGIN_QUORUM_EPOCH => handleBeginEpoch(request)\n-        case ApiKeys.END_QUORUM_EPOCH => handleEndEpoch(request)\n-        case ApiKeys.DESCRIBE_QUORUM => handleDescribeQuorum(request)\n+\n+        // Until we are ready to integrate the Raft layer, these APIs are treated as\n+        // unexpected and we just close the connection.\n+        case ApiKeys.VOTE => closeConnection(request, util.Collections.emptyMap())", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjIxMTc1NQ==", "bodyText": "Right. We should never reach here, but I thought we should make the match complete to avoid warnings.", "url": "https://github.com/apache/kafka/pull/9130#discussion_r492211755", "createdAt": "2020-09-21T17:00:01Z", "author": {"login": "hachikuji"}, "path": "core/src/main/scala/kafka/server/KafkaApis.scala", "diffHunk": "@@ -182,10 +182,13 @@ class KafkaApis(val requestChannel: RequestChannel,\n         case ApiKeys.ALTER_CLIENT_QUOTAS => handleAlterClientQuotasRequest(request)\n         case ApiKeys.DESCRIBE_USER_SCRAM_CREDENTIALS => handleDescribeUserScramCredentialsRequest(request)\n         case ApiKeys.ALTER_USER_SCRAM_CREDENTIALS => handleAlterUserScramCredentialsRequest(request)\n-        case ApiKeys.VOTE => handleVote(request)\n-        case ApiKeys.BEGIN_QUORUM_EPOCH => handleBeginEpoch(request)\n-        case ApiKeys.END_QUORUM_EPOCH => handleEndEpoch(request)\n-        case ApiKeys.DESCRIBE_QUORUM => handleDescribeQuorum(request)\n+\n+        // Until we are ready to integrate the Raft layer, these APIs are treated as\n+        // unexpected and we just close the connection.\n+        case ApiKeys.VOTE => closeConnection(request, util.Collections.emptyMap())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTc0NjIxOA=="}, "originalCommit": null, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}