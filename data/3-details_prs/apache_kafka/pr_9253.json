{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5OTcxNzA3", "number": 9253, "title": "KAFKA-10366 & KAFKA-9649: Implement KIP-659 to allow TimeWindowedDeserializer and TimeWindowedSerde to handle window size", "bodyText": "See KIP details and discussions here: https://cwiki.apache.org/confluence/display/KAFKA/KIP-659%3A+Improve+TimeWindowedDeserializer+and+TimeWindowedSerde+to+handle+window+size\nDeprecates methods that allow users to skip setting a window size when one is needed. Adds a window size streams config to allow the timeWindowedDeserializer to calculate window end time.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-09-04T18:44:38Z", "url": "https://github.com/apache/kafka/pull/9253", "merged": true, "mergeCommit": {"oid": "f5a2fbac6d26fc1613ec34d9764a1e86732f0a45"}, "closed": true, "closedAt": "2021-02-02T00:20:36Z", "author": {"login": "lct45"}, "timelineItems": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdyXyT0gFqTU3MzU1Njc4NQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABd18Fi9gH2gAyNDc5OTcxNzA3OmRjYzkzOTViZGMzNGU4OTk1ZDVmOGJkNTZhYWQ4ZGJjODkxNTQ4Y2M=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNTU2Nzg1", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-573556785", "createdAt": "2021-01-21T17:16:13Z", "commit": {"oid": "2f91dafc47c61e5688a727ec9bc55cb16557dc84"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNzoxNjoxM1rOIYBLQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxNzoxNjoxM1rOIYBLQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjA1NjAwMA==", "bodyText": "The console consumer made this check necessary - if there's a simpler way to do this lmk", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562056000", "createdAt": "2021-01-21T17:16:13Z", "author": {"login": "lct45"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -61,6 +61,21 @@ public Long getWindowSize() {\n     @SuppressWarnings(\"unchecked\")\n     @Override\n     public void configure(final Map<String, ?> configs, final boolean isKey) {\n+        //check if the config is set and the window size is already set from the constructor\n+        final Long configWindowSize;\n+        if (configs.get(StreamsConfig.WINDOW_SIZE_MS_CONFIG) instanceof String) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2f91dafc47c61e5688a727ec9bc55cb16557dc84"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f91dafc47c61e5688a727ec9bc55cb16557dc84", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/2f91dafc47c61e5688a727ec9bc55cb16557dc84", "committedDate": "2021-01-21T03:56:27Z", "message": "adding more testing"}, "afterCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/2b367798b2a111a065632113eb82dfae5f02e00e", "committedDate": "2021-01-21T17:19:13Z", "message": "adding more testing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTczNjcxNDk2", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-573671496", "createdAt": "2021-01-21T19:36:03Z", "commit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxOTozNjowM1rOIYGt4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMVQxOTo0MzoxOFrOIYG9Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ==", "bodyText": "Do you want to change this from Long.MAX_VALUE as well?", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562146785", "createdAt": "2021-01-21T19:36:03Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -33,22 +33,22 @@\n  */\n public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n \n-    private final Long windowSize;\n+    private Long windowSize;\n     private boolean isChangelogTopic;\n \n     private Deserializer<T> inner;\n-    \n+\n     // Default constructor needed by Kafka\n     public TimeWindowedDeserializer() {\n-        this(null, Long.MAX_VALUE);\n+        this(null, null);\n     }\n \n-    // TODO: fix this part as last bits of KAFKA-4468\n+    @Deprecated\n     public TimeWindowedDeserializer(final Deserializer<T> inner) {\n         this(inner, Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw==", "bodyText": "I don't think we should get rid of the generics unless we have to", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562149217", "createdAt": "2021-01-21T19:40:25Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -327,7 +329,7 @@ public void shouldAggregateWindowed() throws Exception {\n         startStreams();\n \n         final List<KeyValueTimestamp<Windowed<String>, Integer>> windowedMessages = receiveMessagesWithTimestamp(\n-            new TimeWindowedDeserializer<>(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ==", "bodyText": "Why don't you use timeDifference like you did below?", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150019", "createdAt": "2021-01-21T19:41:58Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -235,25 +235,27 @@ public void shouldReduceWindowed() throws Exception {\n                 .thenComparing(KeyValueTimestamp::value);\n \n         windowedOutput.sort(comparator);\n-        final long firstBatchWindow = firstBatchTimestamp / 500 * 500;\n-        final long secondBatchWindow = secondBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowStart = firstBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowEnd = firstBatchWindowStart + 500;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDc0Mg==", "bodyText": "Is there some sort of check you can verify here?", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562150742", "createdAt": "2021-01-21T19:43:18Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializerTest.java", "diffHunk": "@@ -56,4 +57,23 @@ public void testWindowedValueDeserializerNoArgConstructors() {\n         assertNotNull(\"Inner deserializer should be not null\", inner);\n         assertTrue(\"Inner deserializer type should be ByteArrayDeserializer\", inner instanceof ByteArrayDeserializer);\n     }\n+\n+    @Test\n+    public void setWindowSizeThroughConfigs() {\n+        props.put(StreamsConfig.WINDOW_SIZE_MS_CONFIG, \"500\");\n+        final TimeWindowedDeserializer<?> deserializer = new TimeWindowedDeserializer<>();\n+        deserializer.configure(props, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0NTA2ODU5", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-574506859", "createdAt": "2021-01-22T18:18:48Z", "commit": {"oid": "8284bbd47fe7d66a6d8af6c4738ae98a54b813cb"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxODoxODo0OFrOIYv4Ng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yMlQxODoyMzoyMlrOIYwCEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMTE3NA==", "bodyText": "It would probably be better practice but it's not necessary to fix. So if you feel like it", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562821174", "createdAt": "2021-01-22T18:18:48Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -235,25 +235,27 @@ public void shouldReduceWindowed() throws Exception {\n                 .thenComparing(KeyValueTimestamp::value);\n \n         windowedOutput.sort(comparator);\n-        final long firstBatchWindow = firstBatchTimestamp / 500 * 500;\n-        final long secondBatchWindow = secondBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowStart = firstBatchTimestamp / 500 * 500;\n+        final long firstBatchWindowEnd = firstBatchWindowStart + 500;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE1MDAxOQ=="}, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMjcwOQ==", "bodyText": "That is fine. but I think It should be like new TimeWindowedDeserializer<String>(windowedSerde.deserializer(), 500L) if that complies. We want to keep the type checking", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562822709", "createdAt": "2021-01-22T18:21:27Z", "author": {"login": "wcarlson5"}, "path": "streams/src/test/java/org/apache/kafka/streams/integration/KStreamAggregationIntegrationTest.java", "diffHunk": "@@ -327,7 +329,7 @@ public void shouldAggregateWindowed() throws Exception {\n         startStreams();\n \n         final List<KeyValueTimestamp<Windowed<String>, Integer>> windowedMessages = receiveMessagesWithTimestamp(\n-            new TimeWindowedDeserializer<>(),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0OTIxNw=="}, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjgyMzY5OA==", "bodyText": "You are probably right since we are deprecating it. But I don't have a strong opinion on this either way", "url": "https://github.com/apache/kafka/pull/9253#discussion_r562823698", "createdAt": "2021-01-22T18:23:22Z", "author": {"login": "wcarlson5"}, "path": "streams/src/main/java/org/apache/kafka/streams/kstream/TimeWindowedDeserializer.java", "diffHunk": "@@ -33,22 +33,22 @@\n  */\n public class TimeWindowedDeserializer<T> implements Deserializer<Windowed<T>> {\n \n-    private final Long windowSize;\n+    private Long windowSize;\n     private boolean isChangelogTopic;\n \n     private Deserializer<T> inner;\n-    \n+\n     // Default constructor needed by Kafka\n     public TimeWindowedDeserializer() {\n-        this(null, Long.MAX_VALUE);\n+        this(null, null);\n     }\n \n-    // TODO: fix this part as last bits of KAFKA-4468\n+    @Deprecated\n     public TimeWindowedDeserializer(final Deserializer<T> inner) {\n         this(inner, Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2MjE0Njc4NQ=="}, "originalCommit": {"oid": "2b367798b2a111a065632113eb82dfae5f02e00e"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2NzQyNDAw", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-576742400", "createdAt": "2021-01-26T20:40:13Z", "commit": {"oid": "bc8e6b31f28b1c20b40af47837a33d896ac60b38"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/ec1afe157d1c14f895802f02bbc76aea5eb3ad87", "committedDate": "2021-01-26T21:11:42Z", "message": "update deserializer for windows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf0557593888894c0ef2d27253b9f1889f03604", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/eaf0557593888894c0ef2d27253b9f1889f03604", "committedDate": "2021-01-26T21:11:42Z", "message": "streamlined added configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4798fa101012e040d6ac6bcb0072a66a20753233", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/4798fa101012e040d6ac6bcb0072a66a20753233", "committedDate": "2021-01-26T21:11:43Z", "message": "KIP discussion updates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82902cdb3662df4b236fedc025e24c59cfa7982b", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/82902cdb3662df4b236fedc025e24c59cfa7982b", "committedDate": "2021-01-26T21:12:29Z", "message": "semantic clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3b8591a4993f5ca420b3a12736324de31b471946", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/3b8591a4993f5ca420b3a12736324de31b471946", "committedDate": "2021-01-26T21:12:30Z", "message": "semantic clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f95603bb9c8691f335f7f1e73ece49fecbffbbda", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/f95603bb9c8691f335f7f1e73ece49fecbffbbda", "committedDate": "2021-01-26T21:12:30Z", "message": "Scala updates for configs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a67527fc4fafa0e420b24073e56e2711705a600", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/4a67527fc4fafa0e420b24073e56e2711705a600", "committedDate": "2021-01-26T21:12:30Z", "message": "Updated implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad47398cbe82a0da81b27016226dd2fb8045774a", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/ad47398cbe82a0da81b27016226dd2fb8045774a", "committedDate": "2021-01-26T21:12:30Z", "message": "adding more testing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b4564bbfac04a014568eed45cf5e8ad17c27ef", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/93b4564bbfac04a014568eed45cf5e8ad17c27ef", "committedDate": "2021-01-26T21:12:30Z", "message": "walkers comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "711315ad40e3fb5d379a19a11de90815af7b900f", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/711315ad40e3fb5d379a19a11de90815af7b900f", "committedDate": "2021-01-26T21:12:30Z", "message": "scala fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfa9b0b6a136297f5ba675d24994b85db5a4a521", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/dfa9b0b6a136297f5ba675d24994b85db5a4a521", "committedDate": "2021-01-26T21:12:30Z", "message": "tetsting fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc8e6b31f28b1c20b40af47837a33d896ac60b38", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/bc8e6b31f28b1c20b40af47837a33d896ac60b38", "committedDate": "2021-01-26T14:57:27Z", "message": "tetsting fix"}, "afterCommit": {"oid": "a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "committedDate": "2021-01-26T22:06:19Z", "message": "scala fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "committedDate": "2021-01-26T22:07:57Z", "message": "scala fix"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/a042ba6380a812a0b15fdfb7b85c11ad9d5cfe0d", "committedDate": "2021-01-26T22:06:19Z", "message": "scala fix"}, "afterCommit": {"oid": "4ecf5f9ac8b451045266c752448d731fc6354d4b", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/4ecf5f9ac8b451045266c752448d731fc6354d4b", "committedDate": "2021-01-26T22:07:57Z", "message": "scala fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc2ODIwMjk0", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-576820294", "createdAt": "2021-01-26T22:35:39Z", "commit": {"oid": "688b59b0f9aa5ee154a025b442135365add985d7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMjozNTozOVrOIatniA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yNlQyMjozNTozOVrOIatniA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA==", "bodyText": "Not sure if this is the most secure check - went through a few different iterations but got type issues with all of them except this one. If someone has a better idea, lmk", "url": "https://github.com/apache/kafka/pull/9253#discussion_r564881288", "createdAt": "2021-01-26T22:35:39Z", "author": {"login": "lct45"}, "path": "streams/streams-scala/src/test/scala/org/apache/kafka/streams/scala/SerdesUnitTest.scala", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.scala\n+\n+import org.apache.kafka.streams.processor.internals.testutil.LogCaptureAppender\n+import org.apache.kafka.streams.kstream.WindowedSerdes.TimeWindowedSerde\n+import org.junit.Assert.assertFalse\n+import org.junit.Test\n+\n+class SerdesUnitTest {\n+\n+  @Test\n+  def shouldLogMessageWhenTimeWindowedSerdeIsUsed(): Unit = {\n+\n+    Serdes.timeWindowedSerde(new TimeWindowedSerde[String]())\n+    val appender = LogCaptureAppender.createAndRegister()\n+    val warning = appender.getMessages()\n+    assertFalse(\"There should be a warning about TimeWindowedDeserializer\", warning.isEmpty)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "688b59b0f9aa5ee154a025b442135365add985d7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "committedDate": "2021-01-26T23:07:29Z", "message": "running scala test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "688b59b0f9aa5ee154a025b442135365add985d7", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/688b59b0f9aa5ee154a025b442135365add985d7", "committedDate": "2021-01-26T22:32:14Z", "message": "running scala test"}, "afterCommit": {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/ff96cebb4639b03244e32287cb0d9be32964c899", "committedDate": "2021-01-26T23:07:29Z", "message": "running scala test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc4OTYxODIy", "url": "https://github.com/apache/kafka/pull/9253#pullrequestreview-578961822", "createdAt": "2021-01-29T06:00:35Z", "commit": {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNjowMDozNVrOIcWVnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0yOVQwNjoxNzo1OVrOIcWpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjU5NzAyMA==", "bodyText": "Thinking about this once again: if users did used the timeWindowedSerde, then we would log a WARN on each record, which would soon flood the log files. So instead of log at the deserialize function, maybe it's better to just log once at the timeWindowedSerde itself?", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566597020", "createdAt": "2021-01-29T06:00:35Z", "author": {"login": "guozhangwang"}, "path": "streams/streams-scala/src/main/scala/org/apache/kafka/streams/scala/Serdes.scala", "diffHunk": "@@ -41,8 +43,19 @@ object Serdes {\n   implicit def Integer: Serde[Int] = JSerdes.Integer().asInstanceOf[Serde[Int]]\n   implicit def JavaInteger: Serde[java.lang.Integer] = JSerdes.Integer()\n \n-  implicit def timeWindowedSerde[T](implicit tSerde: Serde[T]): WindowedSerdes.TimeWindowedSerde[T] =\n-    new WindowedSerdes.TimeWindowedSerde[T](tSerde)\n+  implicit def timeWindowedSerde[T](implicit inner: Serde[T]): Serde[Windowed[T]] =\n+    new JSerdes.WrapperSerde[Windowed[T]](\n+      new TimeWindowedSerializer[T](inner.serializer),\n+      new TimeWindowedDeserializer[T](inner.deserializer) {\n+        override def deserialize(topic: String, data: Array[Byte]): Windowed[T] = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff96cebb4639b03244e32287cb0d9be32964c899"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NjYwMjEyNA==", "bodyText": "Personally I'm not a big fan to add tests coverage for deprecated functions to make sure the expected warning is generated :) Also, is this test correct? Since currently the Serdes.timeWindowedSerde itself would not log any warning, and we would only log when the deserialize is called right (see my other comment)?\nAnyways, I'm actually okay if you would like to just remove this test. But on the other hand we should try to avoid a WARN at a per-record granularity too.", "url": "https://github.com/apache/kafka/pull/9253#discussion_r566602124", "createdAt": "2021-01-29T06:17:59Z", "author": {"login": "guozhangwang"}, "path": "streams/streams-scala/src/test/scala/org/apache/kafka/streams/scala/SerdesUnitTest.scala", "diffHunk": "@@ -0,0 +1,35 @@\n+/**\n+ * Licensed to the Apache Software Foundation (ASF) under one or more\n+ * contributor license agreements.  See the NOTICE file distributed with\n+ * this work for additional information regarding copyright ownership.\n+ * The ASF licenses this file to You under the Apache License, Version 2.0\n+ * (the \"License\"); you may not use this file except in compliance with\n+ * the License.  You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.apache.kafka.streams.scala\n+\n+import org.apache.kafka.streams.processor.internals.testutil.LogCaptureAppender\n+import org.apache.kafka.streams.kstream.WindowedSerdes.TimeWindowedSerde\n+import org.junit.Assert.assertFalse\n+import org.junit.Test\n+\n+class SerdesUnitTest {\n+\n+  @Test\n+  def shouldLogMessageWhenTimeWindowedSerdeIsUsed(): Unit = {\n+\n+    Serdes.timeWindowedSerde(new TimeWindowedSerde[String]())\n+    val appender = LogCaptureAppender.createAndRegister()\n+    val warning = appender.getMessages()\n+    assertFalse(\"There should be a warning about TimeWindowedDeserializer\", warning.isEmpty)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2NDg4MTI4OA=="}, "originalCommit": {"oid": "688b59b0f9aa5ee154a025b442135365add985d7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d7ce1befa505301accad739b8e91c7213700f9d", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/1d7ce1befa505301accad739b8e91c7213700f9d", "committedDate": "2021-01-29T16:53:46Z", "message": "Deleting scala test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "committedDate": "2021-02-01T19:13:51Z", "message": "removing scala"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "252a5490e12b57160533a31c43733af6be3fed2a", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/252a5490e12b57160533a31c43733af6be3fed2a", "committedDate": "2021-02-01T19:12:19Z", "message": "removing scala"}, "afterCommit": {"oid": "717381b0b468e377ffdf06b61ad19f0127035e46", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/717381b0b468e377ffdf06b61ad19f0127035e46", "committedDate": "2021-02-01T19:13:51Z", "message": "removing scala"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "author": {"user": {"login": "lct45", "name": "leah"}}, "url": "https://github.com/apache/kafka/commit/dcc9395bdc34e8995d5f8bd56aad8dbc891548cc", "committedDate": "2021-02-01T19:15:35Z", "message": "Merge branch 'trunk' into windowsconfig"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 890, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}