{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1MDYwMzk0", "number": 8111, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo0MjoyMlrODftUcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoyMjoxMVrODhJsYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NTc0OTYxOnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo0MjoyMlrOFpkjLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QyMTo1Nzo1NlrOFpk_1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzNDc2Nw==", "bodyText": "Why is this needed? Supposedly the slf4jlog4j dependency brings this too?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379134767", "createdAt": "2020-02-13T21:42:22Z", "author": {"login": "ijuma"}, "path": "build.gradle", "diffHunk": "@@ -998,6 +998,7 @@ project(':clients') {\n     testCompile libs.bcpkix\n     testCompile libs.junit\n     testCompile libs.mockitoCore\n+    testCompile libs.log4j", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzNTIwMA==", "bodyText": "I guess you're doing it because we refer to log4j at compile time now?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379135200", "createdAt": "2020-02-13T21:43:16Z", "author": {"login": "ijuma"}, "path": "build.gradle", "diffHunk": "@@ -998,6 +998,7 @@ project(':clients') {\n     testCompile libs.bcpkix\n     testCompile libs.junit\n     testCompile libs.mockitoCore\n+    testCompile libs.log4j", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzNDc2Nw=="}, "originalCommit": null, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTE0MjEwMg==", "bodyText": "yes, it's an import for LogCaptureAppender", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379142102", "createdAt": "2020-02-13T21:57:56Z", "author": {"login": "agam"}, "path": "build.gradle", "diffHunk": "@@ -998,6 +998,7 @@ project(':clients') {\n     testCompile libs.bcpkix\n     testCompile libs.junit\n     testCompile libs.mockitoCore\n+    testCompile libs.log4j", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTEzNDc2Nw=="}, "originalCommit": null, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0NjM0NDQ1OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQwMjo0OToxNVrOFpqOQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMzoxNTowN1rOFqGKAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNzcxMg==", "bodyText": "I think the main question here is whether we want to raise this error to the user. If we happen to see message corruption in the fetched data, we raise that to the user, so should this case be different?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379227712", "createdAt": "2020-02-14T02:49:15Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1272,6 +1272,8 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n                 log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+            } else if (error == Errors.CORRUPT_MESSAGE) {\n+                log.warn(\"Encountered corrupt message while fetching data for topic-partition {}\", tp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTYwMDE2NQ==", "bodyText": "Ack. As discussed, will (1) change this to correspond to the current behavior for corruption in fetched data, i.e. throwing a KafkaException that wraps around a CorruptRecordException, and (2) remove the log message expectation.", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379600165", "createdAt": "2020-02-14T19:15:52Z", "author": {"login": "agam"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1272,6 +1272,8 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n                 log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+            } else if (error == Errors.CORRUPT_MESSAGE) {\n+                log.warn(\"Encountered corrupt message while fetching data for topic-partition {}\", tp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNzcxMg=="}, "originalCommit": null, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4NTM3Ng==", "bodyText": "Correction: just a KafkaException (the wrapping around I referred to was the text of the CorruptRecordException, not the exception itself)", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379685376", "createdAt": "2020-02-14T23:15:07Z", "author": {"login": "agam"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1272,6 +1272,8 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n                 log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+            } else if (error == Errors.CORRUPT_MESSAGE) {\n+                log.warn(\"Encountered corrupt message while fetching data for topic-partition {}\", tp);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTIyNzcxMg=="}, "originalCommit": null, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM0OTE1OTMxOnYy", "diffSide": "RIGHT", "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMjoxNzo1NVrOFqFOOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNFQyMzoxMjozM1rOFqGHrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3MDA3NA==", "bodyText": "nit: just calling fetchedRecords() should work here, or is compiler not liking it and forcing the return value assignment?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379670074", "createdAt": "2020-02-14T22:17:55Z", "author": {"login": "soondenana"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java", "diffHunk": "@@ -3835,6 +3835,31 @@ public void testFetchCompletedBeforeHandlerAdded() {\n         assertEquals(1, fetcher.sendFetches());\n     }\n \n+    @Test\n+    public void testCorruptMessageError() {\n+        buildFetcher();\n+        assignFromUser(singleton(tp0));\n+        subscriptions.seek(tp0, 0);\n+\n+        assertEquals(1, fetcher.sendFetches());\n+        assertFalse(fetcher.hasCompletedFetches());\n+\n+        // Prepare a response with the CORRUPT_MESSAGE error.\n+        client.prepareResponse(fullFetchResponse(\n+                tp0,\n+                buildRecords(1L, 1, 1),\n+                Errors.CORRUPT_MESSAGE,\n+                100L, 0));\n+        consumerClient.poll(time.timer(0));\n+        assertTrue(fetcher.hasCompletedFetches());\n+\n+        // Trigger the exception.\n+        assertThrows(KafkaException.class, () -> {\n+            Map<TopicPartition, List<ConsumerRecord<byte[], byte[]>>> partitionRecords =\n+                    fetchedRecords();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a58e1be8f9c09937fab1182af62450ea38310d10"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY4NDc4MQ==", "bodyText": "Agree, made the change to discard the return value.", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379684781", "createdAt": "2020-02-14T23:12:33Z", "author": {"login": "agam"}, "path": "clients/src/test/java/org/apache/kafka/clients/consumer/internals/FetcherTest.java", "diffHunk": "@@ -3835,6 +3835,31 @@ public void testFetchCompletedBeforeHandlerAdded() {\n         assertEquals(1, fetcher.sendFetches());\n     }\n \n+    @Test\n+    public void testCorruptMessageError() {\n+        buildFetcher();\n+        assignFromUser(singleton(tp0));\n+        subscriptions.seek(tp0, 0);\n+\n+        assertEquals(1, fetcher.sendFetches());\n+        assertFalse(fetcher.hasCompletedFetches());\n+\n+        // Prepare a response with the CORRUPT_MESSAGE error.\n+        client.prepareResponse(fullFetchResponse(\n+                tp0,\n+                buildRecords(1L, 1, 1),\n+                Errors.CORRUPT_MESSAGE,\n+                100L, 0));\n+        consumerClient.poll(time.timer(0));\n+        assertTrue(fetcher.hasCompletedFetches());\n+\n+        // Trigger the exception.\n+        assertThrows(KafkaException.class, () -> {\n+            Map<TopicPartition, List<ConsumerRecord<byte[], byte[]>>> partitionRecords =\n+                    fetchedRecords();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTY3MDA3NA=="}, "originalCommit": {"oid": "a58e1be8f9c09937fab1182af62450ea38310d10"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MTM0NTgyOnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQyMzoyODoyMlrOFqV5rA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOFQxOTowODo0NFrOFrO09Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MzM0MA==", "bodyText": "While we're at it, could we add the fetch offset to the IllegalStateException message below and the UNKNOWN_SERVER_ERROR log message above?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r379943340", "createdAt": "2020-02-16T23:28:22Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1272,6 +1272,11 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n                 log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+            } else if (error == Errors.CORRUPT_MESSAGE) {\n+                throw new KafkaException(\"Encountered corrupt message when fetching offset \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "152323baa85ee0ab4396e2af7e1d7e25133cafec"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDg3NjAyMQ==", "bodyText": "Done.", "url": "https://github.com/apache/kafka/pull/8111#discussion_r380876021", "createdAt": "2020-02-18T19:08:44Z", "author": {"login": "agam"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1272,6 +1272,11 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n                 log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+            } else if (error == Errors.CORRUPT_MESSAGE) {\n+                throw new KafkaException(\"Encountered corrupt message when fetching offset \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTk0MzM0MA=="}, "originalCommit": {"oid": "152323baa85ee0ab4396e2af7e1d7e25133cafec"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDg4NDE2OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoyMjoxMVrOFrwU_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzo1NjoxNFrOFrxhEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyNDg5NA==", "bodyText": "nit: for log messages, can we use the {} placeholders?", "url": "https://github.com/apache/kafka/pull/8111#discussion_r381424894", "createdAt": "2020-02-19T17:22:11Z", "author": {"login": "hachikuji"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1271,9 +1271,20 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n             } else if (error == Errors.UNKNOWN_LEADER_EPOCH) {\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n-                log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+                log.warn(\"Unknown error fetching data while fetching offset \"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d8afd7e73ead72d0f3c037f61b1164fe6ebefd3f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQ0NDM2OA==", "bodyText": "Done", "url": "https://github.com/apache/kafka/pull/8111#discussion_r381444368", "createdAt": "2020-02-19T17:56:14Z", "author": {"login": "agam"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/Fetcher.java", "diffHunk": "@@ -1271,9 +1271,20 @@ private CompletedFetch initializeCompletedFetch(CompletedFetch nextCompletedFetc\n             } else if (error == Errors.UNKNOWN_LEADER_EPOCH) {\n                 log.debug(\"Received unknown leader epoch error in fetch for partition {}\", tp);\n             } else if (error == Errors.UNKNOWN_SERVER_ERROR) {\n-                log.warn(\"Unknown error fetching data for topic-partition {}\", tp);\n+                log.warn(\"Unknown error fetching data while fetching offset \"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyNDg5NA=="}, "originalCommit": {"oid": "d8afd7e73ead72d0f3c037f61b1164fe6ebefd3f"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4291, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}