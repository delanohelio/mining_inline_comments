{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0Mzk1Mjk1", "number": 9543, "title": "KAFKA-10500: Makes the Stream thread list resizable", "bodyText": "Changes the StreamThreads to be held in a ArrayList so that we can dynamically change the number of threads easily.\nCommitter Checklist (excluded from commit message)\n\n Verify design and implementation\n Verify test coverage and CI build status\n Verify documentation (including upgrade notes)", "createdAt": "2020-11-02T23:39:54Z", "url": "https://github.com/apache/kafka/pull/9543", "merged": true, "mergeCommit": {"oid": "c3d0140a5577f85ee64f739f5f8832f54612de22"}, "closed": true, "closedAt": "2020-11-05T21:02:00Z", "author": {"login": "wcarlson5"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdYtURIgH2gAyNTE0Mzk1Mjk1OjUyNzZiZWVlNjMyYzJlMTMzM2I2ZjY0MDI1ODdhZDgwOTcwYjEwZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZo1ZUAFqTUyNDY2MTg2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/5276beee632c2e1333b6f6402587ad80970b10d5", "committedDate": "2020-11-02T23:39:17Z", "message": "makes the Stream thread list resizable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNDcxMTM5", "url": "https://github.com/apache/kafka/pull/9543#pullrequestreview-523471139", "createdAt": "2020-11-04T15:27:53Z", "commit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNToyNzo1NFrOHtdO3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxNTo0NTo1N1rOHteDOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyNjkxMQ==", "bodyText": "I would prefer to use List instead of ArrayList to be more generic.", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517426911", "createdAt": "2020-11-04T15:27:54Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -145,7 +145,7 @@\n     private final String clientId;\n     private final Metrics metrics;\n     private final StreamsConfig config;\n-    protected final StreamThread[] threads;\n+    protected final ArrayList<StreamThread> threads;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQyODEwNA==", "bodyText": "I think, it is better to keep the default initial capacity of an ArrayList. Otherwise, the first time a stream thread is added, we immediately run into a memory allocation. Since we do not know how many stream thread we might expect, let's use the default.\nWe could also consider using a LinkedList since we never access by index in production code.", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517428104", "createdAt": "2020-11-04T15:29:32Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -719,8 +718,7 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new StreamThread[numStreamThreads];\n-\n+        threads = new ArrayList<>(numStreamThreads);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQzNTI5Nw==", "bodyText": "You can simplify to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        threads.add(i, streamThread);\n          \n          \n            \n                        threadState.put(threads.get(i).getId(), threads.get(i).state());\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n          \n          \n            \n                        threads.add(streamThread);\n          \n          \n            \n                        threadState.put(streamThread.getId(), streamThread.state());\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(streamThread));", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517435297", "createdAt": "2020-11-04T15:39:21Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzQ0MDMxNQ==", "bodyText": "Please simplify to\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));\n          \n          \n            \n                        Math.toIntExact(threads.stream().filter(thread -> thread.state().isAlive()).count()));", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517440315", "createdAt": "2020-11-04T15:45:57Z", "author": {"login": "cadonna"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(threads.get(i).getId(), threads.get(i).state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n         }\n \n         ClientMetrics.addNumAliveStreamThreadMetric(streamsMetrics, (metricsConfig, now) ->\n-            Math.toIntExact(Arrays.stream(threads).filter(thread -> thread.state().isAlive()).count()));\n+            Math.toIntExact(Arrays.stream(threads.toArray(new StreamThread[numStreamThreads])).filter(thread -> thread.state().isAlive()).count()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5276beee632c2e1333b6f6402587ad80970b10d5"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46066694bb07509f79f34db52797033bd6558168", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/46066694bb07509f79f34db52797033bd6558168", "committedDate": "2020-11-04T17:51:32Z", "message": "change to List"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzNjE4MDI2", "url": "https://github.com/apache/kafka/pull/9543#pullrequestreview-523618026", "createdAt": "2020-11-04T18:14:35Z", "commit": {"oid": "46066694bb07509f79f34db52797033bd6558168"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNDozNlrOHtkGaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxODoxNzowOVrOHtkMAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzUzOTQzMg==", "bodyText": "Should this collection be threadsafe? (or are all accesses inside synchronized blocks anyway?)", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517539432", "createdAt": "2020-11-04T18:14:36Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -719,8 +718,7 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n         }\n \n         // create the stream thread, global update thread, and cleanup thread\n-        threads = new StreamThread[numStreamThreads];\n-\n+        threads = new LinkedList<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46066694bb07509f79f34db52797033bd6558168"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDA3NA==", "bodyText": "A bit of a nitpick, but this operation is O(n) for LinkedList. Better to just add(streamThread) if you want to use LinkedList.", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517540074", "createdAt": "2020-11-04T18:15:47Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46066694bb07509f79f34db52797033bd6558168"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzU0MDg2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));\n          \n          \n            \n                        storeProviders.add(new StreamThreadStateStoreProvider(streamThread));\n          \n      \n    \n    \n  \n\nget(i) is also O(n) for a linked list. Again, this is admittedly a nit, since the list is small.", "url": "https://github.com/apache/kafka/pull/9543#discussion_r517540866", "createdAt": "2020-11-04T18:17:09Z", "author": {"login": "vvcephei"}, "path": "streams/src/main/java/org/apache/kafka/streams/KafkaStreams.java", "diffHunk": "@@ -783,12 +781,13 @@ private KafkaStreams(final InternalTopologyBuilder internalTopologyBuilder,\n                 stateDirectory,\n                 delegatingStateRestoreListener,\n                 i + 1);\n-            threadState.put(threads[i].getId(), threads[i].state());\n-            storeProviders.add(new StreamThreadStateStoreProvider(threads[i]));\n+            threads.add(i, streamThread);\n+            threadState.put(streamThread.getId(), streamThread.state());\n+            storeProviders.add(new StreamThreadStateStoreProvider(threads.get(i)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46066694bb07509f79f34db52797033bd6558168"}, "originalPosition": 58}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "188884c84f35d7a6c1bf569bb508726cbe413c53", "author": {"user": {"login": "wcarlson5", "name": "Walker Carlson"}}, "url": "https://github.com/apache/kafka/commit/188884c84f35d7a6c1bf569bb508726cbe413c53", "committedDate": "2020-11-04T21:12:32Z", "message": "List access improvements"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MjY5NjAw", "url": "https://github.com/apache/kafka/pull/9543#pullrequestreview-524269600", "createdAt": "2020-11-05T13:41:32Z", "commit": {"oid": "188884c84f35d7a6c1bf569bb508726cbe413c53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0NjYxODY3", "url": "https://github.com/apache/kafka/pull/9543#pullrequestreview-524661867", "createdAt": "2020-11-05T20:59:52Z", "commit": {"oid": "188884c84f35d7a6c1bf569bb508726cbe413c53"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2660, "cost": 1, "resetAt": "2021-10-28T18:00:02Z"}}}