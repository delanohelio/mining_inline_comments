{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNzAyMTYz", "number": 8349, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMToxODo0NlrODrZwnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMToxODo0NlrODrZwnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODM3NDA1OnYy", "diffSide": "RIGHT", "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMToxODo0NlrOF7uvRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNlQwOTozNToxNlrOF7-U1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE3NjA3MA==", "bodyText": "@dajac just to clarify, are you concerning that the generation() may change between the check and the error-log? If yes maybe we do not need to synchronize the whole function, instead we just get a reference of the returned generation() call and use that in the error-log, since the generation object is immutable.", "url": "https://github.com/apache/kafka/pull/8349#discussion_r398176070", "createdAt": "2020-03-25T21:18:46Z", "author": {"login": "guozhangwang"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -912,9 +910,15 @@ private boolean isProtocolTypeInconsistent(String protocolType) {\n         return protocolType != null && !protocolType.equals(protocolType());\n     }\n \n-    private boolean isProtocolNameInconsistent(String protocolName) {\n-        return protocolName != null && generation() != Generation.NO_GENERATION\n-                   && !protocolName.equals(generation().protocolName);\n+    private synchronized boolean isProtocolNameInconsistent(ApiKeys key, String protocolName) {\n+        final boolean protocolNameInconsistent = protocolName != null &&\n+            generation() != Generation.NO_GENERATION && !protocolName.equals(generation().protocolName);\n+\n+        if (protocolNameInconsistent) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c611da95960dbeac395b8e1229bc50cf85e30a5"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODQzMTQ0NQ==", "bodyText": "@guozhangwang Yes, keeping the reference is fine. I was concerned by the check itself because we were calling generation() twice in the previous implementation thus we could get two different instances.\ngeneration() != Generation.NO_GENERATION && !protocolName.equals(generation().protocolName)\n\nI haven't thought about the error-log but it is also a good point.", "url": "https://github.com/apache/kafka/pull/8349#discussion_r398431445", "createdAt": "2020-03-26T09:35:16Z", "author": {"login": "dajac"}, "path": "clients/src/main/java/org/apache/kafka/clients/consumer/internals/AbstractCoordinator.java", "diffHunk": "@@ -912,9 +910,15 @@ private boolean isProtocolTypeInconsistent(String protocolType) {\n         return protocolType != null && !protocolType.equals(protocolType());\n     }\n \n-    private boolean isProtocolNameInconsistent(String protocolName) {\n-        return protocolName != null && generation() != Generation.NO_GENERATION\n-                   && !protocolName.equals(generation().protocolName);\n+    private synchronized boolean isProtocolNameInconsistent(ApiKeys key, String protocolName) {\n+        final boolean protocolNameInconsistent = protocolName != null &&\n+            generation() != Generation.NO_GENERATION && !protocolName.equals(generation().protocolName);\n+\n+        if (protocolNameInconsistent) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE3NjA3MA=="}, "originalCommit": {"oid": "1c611da95960dbeac395b8e1229bc50cf85e30a5"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3089, "cost": 1, "resetAt": "2021-11-12T11:18:39Z"}}}