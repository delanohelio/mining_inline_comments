{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MjgzNzY5", "number": 571, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0NjowMFrOD13N7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjoyNDozNlrOD3tETg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODA1ODA1OnYy", "diffSide": "RIGHT", "path": "semgrep/tests/acceptance/qa.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0NjowMFrOGLgSig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNjo0NjowMFrOGLgSig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDcxNjU1NA==", "bodyText": "@brendongo why is this necessary?", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r414716554", "createdAt": "2020-04-24T16:46:00Z", "author": {"login": "ievans"}, "path": "semgrep/tests/acceptance/qa.py", "diffHunk": "@@ -0,0 +1,113 @@\n+import json\n+import os\n+import re\n+import shutil\n+import subprocess\n+import sys\n+import tempfile\n+from contextlib import contextmanager\n+from pathlib import Path\n+from typing import Any\n+from typing import Callable\n+from typing import Iterator\n+from typing import List\n+from typing import Mapping\n+from typing import Optional\n+\n+import yaml\n+\n+\n+@contextmanager\n+def git_checkout(url: str, commit_hash: str) -> Iterator[str]:\n+    \"\"\"\n+        Clones URL into destination and checks out commit_hash\n+\n+        Returns name of directory url was cloned into\n+    \"\"\"\n+    with tempfile.TemporaryDirectory() as destination:\n+        print(\"starting clone\")\n+        subprocess.run(\n+            [\"git\", \"clone\", url, destination],\n+            stdout=subprocess.PIPE,\n+            stderr=subprocess.PIPE,\n+            check=True,\n+        )\n+        print(\"done clone\")\n+        subprocess.run(\n+            [\"git\", \"checkout\", commit_hash],\n+            cwd=destination,\n+            stdout=subprocess.PIPE,\n+            stderr=subprocess.PIPE,\n+            check=True,\n+        )\n+        subprocess.run(\n+            [\"git\", \"clean\", \"-xdf\"],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6045b9a700f75ca9f3c53a155d1d3528d065075d"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MzUxMjk2OnYy", "diffSide": "RIGHT", "path": "semgrep/tests/acceptance/rule.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQxODo1NzoyOFrOGNieLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQyMzoyNzoyMlrOGNqr_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0OTQ1Mg==", "bodyText": "You should add all our supported languages here [java, c, go]", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r416849452", "createdAt": "2020-04-28T18:57:28Z", "author": {"login": "ievans"}, "path": "semgrep/tests/acceptance/rule.yaml", "diffHunk": "@@ -0,0 +1,6 @@\n+rules:\n+  - id: useless-equals\n+    pattern: $X==$X\n+    message: \"Useless equals\"\n+    languages: [python, javascript]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4bf6d31627df8b6d859f7eff01306b40f5a16c33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjkzNTg1NQ==", "bodyText": "I think the canonical test for NaN in Go might be $X != $X.", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r416935855", "createdAt": "2020-04-28T21:31:01Z", "author": {"login": "nbrahms"}, "path": "semgrep/tests/acceptance/rule.yaml", "diffHunk": "@@ -0,0 +1,6 @@\n+rules:\n+  - id: useless-equals\n+    pattern: $X==$X\n+    message: \"Useless equals\"\n+    languages: [python, javascript]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0OTQ1Mg=="}, "originalCommit": {"oid": "4bf6d31627df8b6d859f7eff01306b40f5a16c33"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjk4NDA2MQ==", "bodyText": "I think can go in a follow on PR. The given repos are all JS/Python for now.", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r416984061", "createdAt": "2020-04-28T23:27:22Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/acceptance/rule.yaml", "diffHunk": "@@ -0,0 +1,6 @@\n+rules:\n+  - id: useless-equals\n+    pattern: $X==$X\n+    message: \"Useless equals\"\n+    languages: [python, javascript]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjg0OTQ1Mg=="}, "originalCommit": {"oid": "4bf6d31627df8b6d859f7eff01306b40f5a16c33"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzM1NTQ0OnYy", "diffSide": "RIGHT", "path": "semgrep/tests/acceptance/qa.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjoyMTo0M1rOGOGx8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjoyMTo0M1rOGOGx8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NDMzOQ==", "bodyText": "Spell check: pattrern", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r417444339", "createdAt": "2020-04-29T16:21:43Z", "author": {"login": "mschwager"}, "path": "semgrep/tests/acceptance/qa.py", "diffHunk": "@@ -0,0 +1,180 @@\n+import json\n+import os\n+import re\n+import shutil\n+import subprocess\n+import sys\n+import tempfile\n+from contextlib import contextmanager\n+from pathlib import Path\n+from typing import Any\n+from typing import Callable\n+from typing import Iterator\n+from typing import List\n+from typing import Mapping\n+from typing import Optional\n+\n+import yaml\n+\n+\n+@contextmanager\n+def git_checkout(url: str, commit_hash: Optional[str] = None) -> Iterator[str]:\n+    \"\"\"\n+        Clones URL into destination\n+\n+        Returns name of directory url was cloned into\n+    \"\"\"\n+    with tempfile.TemporaryDirectory() as destination:\n+        subprocess.run(\n+            [\"git\", \"clone\", \"--depth=1\", url, destination],\n+            stdout=subprocess.PIPE,\n+            stderr=subprocess.PIPE,\n+            check=True,\n+        )\n+        yield destination\n+\n+\n+def run_repo(target: str, rewrite: bool = False) -> None:\n+    \"\"\"\n+    Runs semgrep on github repo with a simple pattrern", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9a77b2fb58a565ed634555d3b2740f5b3baaa5"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzM2NjU0OnYy", "diffSide": "RIGHT", "path": "semgrep/Makefile", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNjoyNDozNlrOGOG5KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMDozNTo0MFrOGOP-3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NjE4NA==", "bodyText": "Does this do anything right now? I assume we'd have to have a __main__ check in qa.py for this do things.", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r417446184", "createdAt": "2020-04-29T16:24:36Z", "author": {"login": "mschwager"}, "path": "semgrep/Makefile", "diffHunk": "@@ -7,3 +7,11 @@ test:\n install:\n \tcp -rv ./build/semgrep.dist/ /usr/local/bin/semgrep-files/\n \tln -sf /usr/local/bin/semgrep-files/semgrep /usr/local/bin/semgrep\n+\n+.PHONY: qa-test\n+qa-test: build\n+\tpytest -s tests/acceptance/qa.py\n+\n+.PHONY: regenerate-tests\n+regenerate-tests:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a9a77b2fb58a565ed634555d3b2740f5b3baaa5"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU5NTEwMw==", "bodyText": "You're right this is stale. Removing.", "url": "https://github.com/returntocorp/semgrep/pull/571#discussion_r417595103", "createdAt": "2020-04-29T20:35:40Z", "author": {"login": "brendongo"}, "path": "semgrep/Makefile", "diffHunk": "@@ -7,3 +7,11 @@ test:\n install:\n \tcp -rv ./build/semgrep.dist/ /usr/local/bin/semgrep-files/\n \tln -sf /usr/local/bin/semgrep-files/semgrep /usr/local/bin/semgrep\n+\n+.PHONY: qa-test\n+qa-test: build\n+\tpytest -s tests/acceptance/qa.py\n+\n+.PHONY: regenerate-tests\n+regenerate-tests:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ0NjE4NA=="}, "originalCommit": {"oid": "3a9a77b2fb58a565ed634555d3b2740f5b3baaa5"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4760, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}