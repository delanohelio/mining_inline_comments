{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NDU1NTI2", "number": 2224, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MDoxN1rOFDIcQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MDoxN1rOFDIcQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4ODI4MzUyOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/core_runner.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MDoxN1rOICo3yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMDo1MDoxN1rOICo3yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTYzNzcwNw==", "bodyText": "This was originally a suggestion by @nbrahms. It allows us to more cleanly avoid this problem: https://stackoverflow.com/questions/6974695/python-process-pool-non-daemonic \ud83d\udc4d", "url": "https://github.com/returntocorp/semgrep/pull/2224#discussion_r539637707", "createdAt": "2020-12-09T20:50:17Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -463,15 +461,9 @@ def handle_regex_patterns(\n         except re.error as err:\n             raise SemgrepError(f\"invalid regular expression specified: {err}\")\n \n-        if self._testing:\n-            # Testing functionality runs in a multiprocessing.Pool. We cannot run\n-            # a Pool inside a Pool, so we have to avoid multiprocessing when testing.\n-            # https://stackoverflow.com/questions/6974695/python-process-pool-non-daemonic\n-            matches = [get_re_matches(patterns_re, target) for target in targets]\n-        else:\n-            re_fn = functools.partial(get_re_matches, patterns_re)\n-            with multiprocessing.Pool(self._jobs) as pool:\n-                matches = pool.map(re_fn, targets)\n+        re_fn = functools.partial(get_re_matches, patterns_re)\n+        with pool.ThreadPool(self._jobs) as tpool:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d5043017fe42db4eed5109a4b81ebbb8ad95161"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4705, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}