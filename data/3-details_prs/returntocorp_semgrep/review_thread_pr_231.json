{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyNzMzMDg2", "number": 231, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDoxMzowNFrODkgnCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDoxMzowNFrODkgnCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjA5NjA5OnYy", "diffSide": "RIGHT", "path": "sgrep_lint/evaluation.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDoxMzowNFrOFw3zWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwNDoxMzowNFrOFw3zWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njc5MDIzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            f\"invalid type for pattern {pattern}: {type(pattern)} is not a dict\"\n          \n          \n            \n                            f\"invalid type for pattern {pattern}: {type(pattern)} is not a dict; perhaps you are missing a `-` before {pattern}?\"", "url": "https://github.com/returntocorp/semgrep/pull/231#discussion_r386790234", "createdAt": "2020-03-03T04:13:04Z", "author": {"login": "ievans"}, "path": "sgrep_lint/evaluation.py", "diffHunk": "@@ -32,7 +32,15 @@ def _parse_boolean_expression(\n     \"\"\"\n     Move through the expression from the YML, yielding tuples of (operator, unique-id-for-pattern, pattern)\n     \"\"\"\n+    if not isinstance(rule_patterns, list):\n+        raise InvalidRuleSchema(\n+            f\"invalid type for pattern {rule_patterns}: {type(rule_patterns)} is not a list\"\n+        )\n     for pattern in rule_patterns:\n+        if not isinstance(pattern, dict):\n+            raise InvalidRuleSchema(\n+                f\"invalid type for pattern {pattern}: {type(pattern)} is not a dict\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c70eb2e2a465c11fea6e7d7f8e82bb3545f74267"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4845, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}