{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNjAwNTU2", "number": 1712, "title": "Adds a merge rules helper script", "bodyText": "merge-rules.py is a helper script that will create a single yml file by merging all yaml/yml files in a directory and all subdirectories.\nSkips directories and files with a leading .\nUseful for local work (slicing and dicing rules into a single file) and as help for creation of .semgrep.yml files for CI", "createdAt": "2020-09-21T22:52:39Z", "url": "https://github.com/returntocorp/semgrep/pull/1712", "merged": true, "mergeCommit": {"oid": "b04ba2bd5a23dd553b6cec3115ad33f26e29ceb5"}, "closed": true, "closedAt": "2020-09-29T15:16:58Z", "author": {"login": "tkisason"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLLdThAH2gAyNDkwNjAwNTU2OjQwNDNkOGExZDFhZWU2ZWE1NzJiMzk3Njk1M2I5NmFkN2NmOGYzNzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNpwCtAFqTQ5ODYwMTU0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4043d8a1d1aee6ea572b3976953b96ad7cf8f371", "author": {"user": {"login": "tkisason", "name": "Tonimir Kisasondi"}}, "url": "https://github.com/returntocorp/semgrep/commit/4043d8a1d1aee6ea572b3976953b96ad7cf8f371", "committedDate": "2020-09-21T22:51:22Z", "message": "Adds a merge rules helper script\n\nmerge-rules.py is a helper script that will create a single yml file by merging all yaml/yml files in a directory and all subdirectories. \r\nSkips directories and files with a leading . \r\n\r\nUseful for local work (slicing and dicing rules) and as help for creation of .semgrep.yml files for CI"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNjY5NzQ4", "url": "https://github.com/returntocorp/semgrep/pull/1712#pullrequestreview-493669748", "createdAt": "2020-09-22T17:00:52Z", "commit": {"oid": "4043d8a1d1aee6ea572b3976953b96ad7cf8f371"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzowMDo1MlrOHWD5Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxNzowMDo1MlrOHWD5Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mjg5NDUzMQ==", "bodyText": "hey @tkisason thanks for the PR! Can we add in a case for no args to print the help? seems to me that sys.argv[1] will fail if no args given", "url": "https://github.com/returntocorp/semgrep/pull/1712#discussion_r492894531", "createdAt": "2020-09-22T17:00:52Z", "author": {"login": "DrewDennison"}, "path": "scripts/merge-rules.py", "diffHunk": "@@ -0,0 +1,42 @@\n+#!/usr/bin/env python3\n+import os\n+import sys\n+from ruamel.yaml import YAML\n+\n+\n+def getRulefilesFromPath(path):\n+    rulefiles = []\n+    for root, dirs, files in os.walk(path):\n+        dirs[:] = [d for d in dirs if not d.startswith(\".\")]\n+        for name in files:\n+            file = os.path.join(root, name)\n+            if (file.endswith(\".yml\") or file.endswith(\".yaml\")) and (\n+                not name.startswith(\".\")\n+            ):\n+                rulefiles.append(file)\n+    print(f\"Found {len(rulefiles)} rulefiles\")\n+    return rulefiles\n+\n+\n+def mergeRules(rulefilelist, outputfile):\n+    yaml = YAML(typ=\"rt\")\n+    rulefile = {\"rules\": []}\n+    for file in rulefilelist:\n+        rulefileyaml = yaml.load(open(file))\n+        rulefile[\"rules\"] += rulefileyaml[\"rules\"]\n+    rulecount = len(rulefile[\"rules\"])\n+    print(f\"Created {rulecount} rules\")\n+    output = open(outputfile, \"w\")\n+    yaml.dump(rulefile, output)\n+    output.close()\n+\n+\n+if __name__ == \"__main__\":\n+    if len(sys.argv) != 3:\n+        print(\"Merges all yaml/yml files in a directory and all subdirs\")\n+        print(\"Skips directories and files prefixed with a .\")\n+        print(f\"Usage {sys.argv[0]} [input folder] [output filename]\")\n+    else:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4043d8a1d1aee6ea572b3976953b96ad7cf8f371"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NjAxNTQy", "url": "https://github.com/returntocorp/semgrep/pull/1712#pullrequestreview-498601542", "createdAt": "2020-09-29T15:16:50Z", "commit": {"oid": "4043d8a1d1aee6ea572b3976953b96ad7cf8f371"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1260, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}