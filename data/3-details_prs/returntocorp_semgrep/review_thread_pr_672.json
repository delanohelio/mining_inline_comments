{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMDA5NTA5", "number": 672, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoxMjo1M1rOD5FWXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoxMjo1M1rOD5FWXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTgzMDY4OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/cli.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNzoxMjo1M1rOGQJ7Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMToxNTo0M1rOGQSfWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5MzAxOQ==", "bodyText": "We should link this to the docs (but it's blocked on #637)", "url": "https://github.com/returntocorp/semgrep/pull/672#discussion_r419593019", "createdAt": "2020-05-04T17:12:53Z", "author": {"login": "ievans"}, "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -102,51 +128,68 @@ def cli() -> None:\n     output.add_argument(\n         \"-q\",\n         \"--quiet\",\n-        help=\"Do not print anything to stdout. Search results can still be saved to an output file specified by -o/--output. Exit code provides success status.\",\n         action=\"store_true\",\n+        help=(\n+            \"Do not print anything to stdout. Search results can still be \"\n+            \"saved to an output file specified by -o/--output. Exit code \"\n+            \"provides success status.\"\n+        ),\n     )\n \n     output.add_argument(\n         \"--no-rewrite-rule-ids\",\n-        help=\"Do not rewrite rule ids when they appear in nested subfolders (by default, rule 'foo' in test/rules.yaml will be renamed 'test.foo')\",\n         action=\"store_true\",\n+        help=(\n+            \"Do not rewrite rule ids when they appear in nested sub-directories \"\n+            \"(by default, rule 'foo' in test/rules.yaml will be renamed \"\n+            \"'test.foo').\"\n+        ),\n     )\n \n     output.add_argument(\n         \"-o\",\n         \"--output\",\n-        help=\"Save search results to a file or post to URL. Default is to print to stdout.\",\n+        help=(\n+            \"Save search results to a file or post to URL. \"\n+            \"Default is to print to stdout.\"\n+        ),\n     )\n     output.add_argument(\n-        \"--json\", help=\"Convert search output to JSON format.\", action=\"store_true\"\n+        \"--json\", action=\"store_true\", help=\"Output results in JSON format.\"\n     )\n-    output.add_argument(\"--test\", help=\"Run a test suite\", action=\"store_true\")\n+    output.add_argument(\"--test\", action=\"store_true\", help=\"Run test suite.\")\n     parser.add_argument(\n         \"--test-ignore-todo\",\n-        help=\"Ignore rules marked as #todoruleid: in test files\",\n         action=\"store_true\",\n+        help=\"Ignore rules marked as '#todoruleid:' in test files.\",\n     )\n     output.add_argument(\n         \"--r2c\",\n-        help=\"output json in r2c platform format (https://app.r2c.dev)\",\n         action=\"store_true\",\n+        help=\"Output json in r2c platform format (https://app.r2c.dev).\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "676aa98a3a5e9b2d7ab4ccd406e7984e4f7b07a5"}, "originalPosition": 163}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTczMzMzOQ==", "bodyText": "Roger that, I'll link to the docs after #637 is done \ud83d\udc4d", "url": "https://github.com/returntocorp/semgrep/pull/672#discussion_r419733339", "createdAt": "2020-05-04T21:15:43Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -102,51 +128,68 @@ def cli() -> None:\n     output.add_argument(\n         \"-q\",\n         \"--quiet\",\n-        help=\"Do not print anything to stdout. Search results can still be saved to an output file specified by -o/--output. Exit code provides success status.\",\n         action=\"store_true\",\n+        help=(\n+            \"Do not print anything to stdout. Search results can still be \"\n+            \"saved to an output file specified by -o/--output. Exit code \"\n+            \"provides success status.\"\n+        ),\n     )\n \n     output.add_argument(\n         \"--no-rewrite-rule-ids\",\n-        help=\"Do not rewrite rule ids when they appear in nested subfolders (by default, rule 'foo' in test/rules.yaml will be renamed 'test.foo')\",\n         action=\"store_true\",\n+        help=(\n+            \"Do not rewrite rule ids when they appear in nested sub-directories \"\n+            \"(by default, rule 'foo' in test/rules.yaml will be renamed \"\n+            \"'test.foo').\"\n+        ),\n     )\n \n     output.add_argument(\n         \"-o\",\n         \"--output\",\n-        help=\"Save search results to a file or post to URL. Default is to print to stdout.\",\n+        help=(\n+            \"Save search results to a file or post to URL. \"\n+            \"Default is to print to stdout.\"\n+        ),\n     )\n     output.add_argument(\n-        \"--json\", help=\"Convert search output to JSON format.\", action=\"store_true\"\n+        \"--json\", action=\"store_true\", help=\"Output results in JSON format.\"\n     )\n-    output.add_argument(\"--test\", help=\"Run a test suite\", action=\"store_true\")\n+    output.add_argument(\"--test\", action=\"store_true\", help=\"Run test suite.\")\n     parser.add_argument(\n         \"--test-ignore-todo\",\n-        help=\"Ignore rules marked as #todoruleid: in test files\",\n         action=\"store_true\",\n+        help=\"Ignore rules marked as '#todoruleid:' in test files.\",\n     )\n     output.add_argument(\n         \"--r2c\",\n-        help=\"output json in r2c platform format (https://app.r2c.dev)\",\n         action=\"store_true\",\n+        help=\"Output json in r2c platform format (https://app.r2c.dev).\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU5MzAxOQ=="}, "originalCommit": {"oid": "676aa98a3a5e9b2d7ab4ccd406e7984e4f7b07a5"}, "originalPosition": 163}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4670, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}