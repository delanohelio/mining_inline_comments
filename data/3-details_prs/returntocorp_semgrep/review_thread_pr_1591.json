{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDUwODEw", "number": 1591, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0OTozNFrOEcs_Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0OTozNFrOEcs_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4NTMyNjc1OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/test.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0OTozNFrOHHZJWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxODo0OTozNFrOHHZJWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzUxNDA3Mg==", "bodyText": "@minusworld here's the error if an ok'ed line is reported. It'd be a good idea to go over our existing tests and mark the ok'ed lines with their specific rule-id. That way we'll be notified if we have any false positives.", "url": "https://github.com/returntocorp/semgrep/pull/1591#discussion_r477514072", "createdAt": "2020-08-26T18:49:34Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/test.py", "diffHunk": "@@ -142,11 +160,18 @@ def join_keys(a: Dict[str, Any], b: Dict[str, Any]) -> Set[str]:\n         for check_id in join_keys(comment_lines[file_path], reported_lines[file_path]):\n             all_reported = set(reported_lines[file_path][check_id])\n             expected = set(comment_lines[file_path][check_id])\n+            oked = set(ok_lines[file_path][check_id])\n             ignored = set(ignore_lines[file_path])\n \n+            reported_oked_lines = oked.intersection(all_reported)\n+            if reported_oked_lines:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "15d44b1e4fc1b0c398bef26a4785f9ea50a42c91"}, "originalPosition": 96}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4928, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}