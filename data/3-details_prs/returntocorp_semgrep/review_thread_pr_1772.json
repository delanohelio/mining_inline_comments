{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2NzQ5Mzg0", "number": 1772, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToxODozNVrOEq4yXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToxODozNVrOEq4yXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNDA2MDQ1OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/rule.py", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxOToxODozNVrOHdWdug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNToxODo1OFrOHejxfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA==", "bodyText": "Hi @hunt3rkillerz, thanks for the PR. Is it reasonable to simply return the string from the metadata if it exists? This avoids all the heavy string parsing. E.g.\nif \"cwe\" in self.metadata:\n    yield self.metadata['cwe']\nif \"owasp\" in self.metadata:\n    yield f\"OWASP-{self.metadata['owasp']}\"\nNote that I prepended OWASP because our convention hasn't included it, but has for CWE:\njavascript/lang/security/audit/path-traversal/path-join-resolve-traversal.yaml\n47:    owasp: 'A5: Broken Access Control'\n48:    cwe: 'CWE-22: Improper Limitation of a Pathname to a Restricted Directory (Path Traversal)'\n\njavascript/lang/security/audit/non-constant-sql-query.yaml\n10:    owasp: 'A1: Injection'\n11:    cwe: \"CWE-89: Improper Neutralization of Special Elements used in an SQL Command ('SQL Injection')\"\n\njavascript/lang/security/audit/unknown-value-with-script-tag.yaml\n14:    owasp: 'A7: Cross-site Scripting (XSS)'\n15:    cwe: \"CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\"", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r500538810", "createdAt": "2020-10-06T19:18:35Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDU3MzUxNg==", "bodyText": "Hi @mschwager, the reason I tried to cut down the tags is I noticed that there was some inconsistent formatting in the rules repo (some rules had the full description and some did not).\nAdditionally, I'm not sure if there is a string length limit on tags when you upload a SARIF to Github's API (happy to test this if the preference is to avoid the string parsing).", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r500573516", "createdAt": "2020-10-06T20:23:44Z", "author": {"login": "hunt3rkillerz"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA=="}, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTI3MzU3OA==", "bodyText": "I think simply returning what's in the metadata key (e.g. self.metadata['cwe']) would be easiest. If there are inconsistencies, or we want to improve the metadata, let's do so in the rules themselves instead of accounting for all cases here. If you have a list of rules whose metadata could be improved I'd be happy to help out \ud83d\udc4d", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r501273578", "createdAt": "2020-10-07T19:58:10Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA=="}, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NDAzMQ==", "bodyText": "The changes above have been implemented.", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r501554031", "createdAt": "2020-10-08T08:52:23Z", "author": {"login": "hunt3rkillerz"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA=="}, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTU1NTcyMQ==", "bodyText": "Regarding rules with Metadata issues. I can probably go through the rules repo and see about cleaning up some formatting.", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r501555721", "createdAt": "2020-10-08T08:55:08Z", "author": {"login": "hunt3rkillerz"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA=="}, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTgwNTQzOQ==", "bodyText": "Awesome, thank you!", "url": "https://github.com/returntocorp/semgrep/pull/1772#discussion_r501805439", "createdAt": "2020-10-08T15:18:58Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -261,9 +261,25 @@ def sarif_tags(self) -> Iterator[str]:\n         Tags to display on SARIF-compliant UIs, such as GitHub security scans.\n         \"\"\"\n         if \"cwe\" in self.metadata:\n-            yield \"cwe\"\n+            # Handling unexpected formatting of CWE meta-data", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUzODgxMA=="}, "originalCommit": {"oid": "17d2f53dbdeaad9ea51375ab01b4234a1a5470be"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4889, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}