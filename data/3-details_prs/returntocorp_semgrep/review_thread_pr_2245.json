{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4MjI0NjQ5", "number": 2245, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxODo0Mjo1NVrOFEfVCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxODo0Mjo1NVrOFEfVCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMjUxOTEzOnYy", "diffSide": "RIGHT", "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxODo0Mjo1NVrOIEoAbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxODo0Mjo1NVrOIEoAbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTcyMDY4Nw==", "bodyText": "in OCaml you can write let ent = { ent with attrs = ent.attrs @ attrs }\nand the other ent field will be copied.", "url": "https://github.com/returntocorp/semgrep/pull/2245#discussion_r541720687", "createdAt": "2020-12-12T18:42:55Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "diffHunk": "@@ -62,6 +62,18 @@ let arg_to_expr (a : argument) =\n   | ArgKwd (_, e) -> e (* TODO maybe ArgKwd is also impossible here *)\n   | _ -> raise Impossible\n \n+let var_def_stmt (decls : (entity * variable_definition) list) (attrs : attribute list) =\n+  let stmts = List.map (fun (ent, def) ->\n+    let ent = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76a7a882f94f3fb3e1cccafe4a7fab0c01869b49"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4714, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}