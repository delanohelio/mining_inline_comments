{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMzA4ODc4", "number": 1895, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MTo1NlrOEyGVbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MjozN1rOEyGWPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTY4MDQ0OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/config_resolver.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MTo1NlrOHojfwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MTo1NlrOHojfwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4NjY1Nw==", "bodyText": "can this use registry_id_to_url(f\"s/...\")?", "url": "https://github.com/returntocorp/semgrep/pull/1895#discussion_r512286657", "createdAt": "2020-10-26T21:41:56Z", "author": {"login": "DrewDennison"}, "path": "semgrep/semgrep/config_resolver.py", "diffHunk": "@@ -389,13 +389,46 @@ def download_config(config_url: str) -> Dict[str, YamlTree]:\n     return None\n \n \n+def is_registry_id(config_str: str) -> bool:\n+    \"\"\"\n+        Starts with r/, p/, s/ for registry, pack, and snippet respectively\n+    \"\"\"\n+    return config_str[:2] in {\"r/\", \"p/\", \"s/\"}\n+\n+\n+def is_saved_snippet(config_str: str) -> bool:\n+    \"\"\"\n+        config_str is saved snippet which has format username:snippetname\n+    \"\"\"\n+    return len(config_str.split(\":\")) == 2\n+\n+\n+def registry_id_to_url(registry_id: str) -> str:\n+    \"\"\"\n+        Convert from registry_id to semgrep.dev url\n+    \"\"\"\n+    return f\"https://semgrep.dev/{registry_id}\"\n+\n+\n+def saved_snippet_to_url(snippet_id: str) -> str:\n+    \"\"\"\n+        Convert from username:snippetname to semgrep.dev url\n+    \"\"\"\n+    username, snippetname = snippet_id.split(\":\")\n+    return f\"https://semgrep.dev/s/{username}/{snippetname}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7049971c7a8dd1bc9c84327970484de733aa5e03"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwOTY4MjU1OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/config_resolver.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MjozN1rOHojhAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQyMTo0MjozN1rOHojhAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjI4Njk3Ng==", "bodyText": "can we use from semgrep.constants import SEMGREP_URL?", "url": "https://github.com/returntocorp/semgrep/pull/1895#discussion_r512286976", "createdAt": "2020-10-26T21:42:37Z", "author": {"login": "DrewDennison"}, "path": "semgrep/semgrep/config_resolver.py", "diffHunk": "@@ -389,13 +389,46 @@ def download_config(config_url: str) -> Dict[str, YamlTree]:\n     return None\n \n \n+def is_registry_id(config_str: str) -> bool:\n+    \"\"\"\n+        Starts with r/, p/, s/ for registry, pack, and snippet respectively\n+    \"\"\"\n+    return config_str[:2] in {\"r/\", \"p/\", \"s/\"}\n+\n+\n+def is_saved_snippet(config_str: str) -> bool:\n+    \"\"\"\n+        config_str is saved snippet which has format username:snippetname\n+    \"\"\"\n+    return len(config_str.split(\":\")) == 2\n+\n+\n+def registry_id_to_url(registry_id: str) -> str:\n+    \"\"\"\n+        Convert from registry_id to semgrep.dev url\n+    \"\"\"\n+    return f\"https://semgrep.dev/{registry_id}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7049971c7a8dd1bc9c84327970484de733aa5e03"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4817, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}