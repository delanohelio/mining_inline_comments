{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMDI4MTAy", "number": 639, "title": "don't use hardcoded /tmp", "bodyText": "Closes #525\nThis also fixes an unfiled bug where we were littering the temp directory.", "createdAt": "2020-05-01T07:53:25Z", "url": "https://github.com/returntocorp/semgrep/pull/639", "merged": true, "mergeCommit": {"oid": "eae51a7148d58ef62f992b8739fcb1414f3a0d34"}, "closed": true, "closedAt": "2020-05-01T20:31:04Z", "author": {"login": "ievans"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcc83nogH2gAyNDEyMDI4MTAyOmJhZDg4ZTU4YTI2ZDI4N2VmYTRlN2E0YjIyNzRiNWU0NTMxYzk0MGY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcdGmFhgFqTQwNDM0NTA4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bad88e58a26d287efa4e7a4b2274b5e4531c940f", "author": {"user": {"login": "ievans", "name": "Isaac Evans"}}, "url": "https://github.com/returntocorp/semgrep/commit/bad88e58a26d287efa4e7a4b2274b5e4531c940f", "committedDate": "2020-05-01T07:51:01Z", "message": "don't use hardcoded /tmp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MDY2MjU1", "url": "https://github.com/returntocorp/semgrep/pull/639#pullrequestreview-404066255", "createdAt": "2020-05-01T08:24:19Z", "commit": {"oid": "bad88e58a26d287efa4e7a4b2274b5e4531c940f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODoyNDoxOVrOGPEvzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwODoyNDoxOVrOGPEvzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQ1OTU5Ng==", "bodyText": "Is this suffix useful? Maybe we don't need to keep the b64 line, cause the directory name will still have a random component anyway:\nIn [2]: tempfile.TemporaryDirectory().name\nOut[2]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/tmpxrtfnvmn'\n\nIn [3]: tempfile.TemporaryDirectory(suffix=\"arst\").name\nOut[3]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/tmpdu1cx064arst'\n\nIn [4]: tempfile.TemporaryDirectory(prefix=\"arst\").name\nOut[4]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/arstwg4yijot'\n\nIn [5]: tempfile.TemporaryDirectory(prefix=\"arst\", suffix=\"qwfp\").name\nOut[5]: '/var/folders/vp/mgl7xf9142x8wd081g9zrh2c0000gn/T/arstna4_ex81qwfp'", "url": "https://github.com/returntocorp/semgrep/pull/639#discussion_r418459596", "createdAt": "2020-05-01T08:24:19Z", "author": {"login": "underyx"}, "path": "semgrep/semgrep/config_resolver.py", "diffHunk": "@@ -182,14 +183,14 @@ def download_config(config_url: str) -> Dict[str, Optional[Dict[str, Any]]]:\n             if content_type and \"text/plain\" in content_type:\n                 return parse_config_string(\"remote-url\", r.content.decode(\"utf-8\"))\n             elif content_type and content_type == \"application/x-gzip\":\n-                fname = f\"/tmp/{base64.b64encode(config_url.encode()).decode()}\"\n-                shutil.rmtree(fname, ignore_errors=True)\n-                with tarfile.open(fileobj=r.raw, mode=\"r:gz\") as tar:\n-                    tar.extractall(fname)\n-                extracted = Path(fname)\n-                for path in extracted.iterdir():\n-                    # get first folder in extracted folder (this is how GH does it)\n-                    return parse_config_folder(path, relative=True)\n+                directory_name = base64.b64encode(config_url.encode()).decode()\n+                with tempfile.TemporaryDirectory(suffix=directory_name) as fname:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bad88e58a26d287efa4e7a4b2274b5e4531c940f"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92a215c6355e1fc34e55b2940cbcdeeefb36f88f", "author": {"user": {"login": "ievans", "name": "Isaac Evans"}}, "url": "https://github.com/returntocorp/semgrep/commit/92a215c6355e1fc34e55b2940cbcdeeefb36f88f", "committedDate": "2020-05-01T19:08:53Z", "message": "Update config_resolver.py"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA0MzQ1MDgx", "url": "https://github.com/returntocorp/semgrep/pull/639#pullrequestreview-404345081", "createdAt": "2020-05-01T19:10:55Z", "commit": {"oid": "92a215c6355e1fc34e55b2940cbcdeeefb36f88f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1080, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}