{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU0Njc4MTE0", "number": 1316, "title": "Bump cheatsheet functionality and fill a few gaps", "bodyText": "We're pretty close to parity with our officially support languages except for a few gaps:\n\nJS import aliasing, this is enough of a painful mess with all the different import/require features that I'll tackle this separately. Tracking here: #285\n\"Import\" functionality in C - tracking here: #1095\nRuby still has quite a few gaps, I'll tackle those in a separate change", "createdAt": "2020-07-21T18:37:39Z", "url": "https://github.com/returntocorp/semgrep/pull/1316", "merged": true, "mergeCommit": {"oid": "292aef2933c57ecba9bbaa59316d6976e0bae564"}, "closed": true, "closedAt": "2020-07-21T21:09:20Z", "author": {"login": "mschwager"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3KmZ9gH2gAyNDU0Njc4MTE0OjljMDM1NTMyMTI4NmY4YzBjY2JmNDg0NDUyNGM3MTgxNTc5NzYzMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3MdFqgFqTQ1MjgxMzU1OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9c0355321286f8c0ccbf4844524c71815797631d", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/9c0355321286f8c0ccbf4844524c71815797631d", "committedDate": "2020-07-21T18:32:55Z", "message": "Bump cheatsheet functionality and fill a few gaps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a87ee7aba744ee5ecc09a0baa85388c907fdaa35", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/a87ee7aba744ee5ecc09a0baa85388c907fdaa35", "committedDate": "2020-07-21T19:40:50Z", "message": "Remove parentheses from Golang test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c669dc1fd39000a8773e3fc4253d26fb056ea76b", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/c669dc1fd39000a8773e3fc4253d26fb056ea76b", "committedDate": "2020-07-21T20:04:43Z", "message": "Remove unimplemented tests for now"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODEzMjI2", "url": "https://github.com/returntocorp/semgrep/pull/1316#pullrequestreview-452813226", "createdAt": "2020-07-21T20:41:58Z", "commit": {"oid": "c669dc1fd39000a8773e3fc4253d26fb056ea76b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0MTo1OVrOG1I_7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0MTo1OVrOG1I_7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3NTE1MA==", "bodyText": "Is there an issue tracking this?", "url": "https://github.com/returntocorp/semgrep/pull/1316#discussion_r458375150", "createdAt": "2020-07-21T20:41:59Z", "author": {"login": "ievans"}, "path": "semgrep-core/tests/generate_test_matrix.py", "diffHunk": "@@ -40,6 +40,15 @@\n     \"exprstmt\": \"Expression and Statement\",\n }\n \n+LANGUAGE_EXCEPTIONS = {\n+    \"java\": [\n+        \"naming_import\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c669dc1fd39000a8773e3fc4253d26fb056ea76b"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODEzNTU5", "url": "https://github.com/returntocorp/semgrep/pull/1316#pullrequestreview-452813559", "createdAt": "2020-07-21T20:42:29Z", "commit": {"oid": "c669dc1fd39000a8773e3fc4253d26fb056ea76b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0MjoyOVrOG1JA7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMVQyMDo0MjoyOVrOG1JA7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1ODM3NTQwNQ==", "bodyText": "is it really worth having language exception? I'd prefer to be explicit: \"we don't have test cases for this, it is probably not supported\"", "url": "https://github.com/returntocorp/semgrep/pull/1316#discussion_r458375405", "createdAt": "2020-07-21T20:42:29Z", "author": {"login": "ievans"}, "path": "semgrep-core/tests/generate_test_matrix.py", "diffHunk": "@@ -89,7 +98,14 @@ def generate_cheatsheet(root_dir: str):\n                 \n                 entry = (read_if_exists(sgrep_path), sgrep_path,  read_if_exists(code_path), code_path)\n                 print((lang, entry))\n-                output[lang][VERBOSE_FEATURE_NAME.get(category, category)][VERBOSE_SUBCATEGORY_NAME.get(subcategory, subcategory)].append(entry)\n+                feature_name = VERBOSE_FEATURE_NAME.get(category, category)\n+                subcategory_name = VERBOSE_SUBCATEGORY_NAME.get(subcategory, subcategory)\n+                language_exception = (\n+                    feature_name in LANGUAGE_EXCEPTIONS.get(lang, [])\n+                    or subcategory in LANGUAGE_EXCEPTIONS.get(lang, [])\n+                )\n+                if not language_exception:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c669dc1fd39000a8773e3fc4253d26fb056ea76b"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1354, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}