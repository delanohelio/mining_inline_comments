{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDYyOTYx", "number": 783, "title": "Fix get_re_matches error with deep paths", "bodyText": "Closes #781", "createdAt": "2020-05-19T11:40:19Z", "url": "https://github.com/returntocorp/semgrep/pull/783", "merged": true, "mergeCommit": {"oid": "61ae19664cc1f57b63217bc4e673d7ae229f50b7"}, "closed": true, "closedAt": "2020-05-19T17:23:02Z", "author": {"login": "underyx"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci0vDfAFqTQxNDQ2MTQxNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABci31qbAFqTQxNDY2NDQ3MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDYxNDE0", "url": "https://github.com/returntocorp/semgrep/pull/783#pullrequestreview-414461414", "createdAt": "2020-05-19T13:45:57Z", "commit": {"oid": "c9e9260b02f346027f55ab40f4389c12b7376268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NTo1N1rOGXhNRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NTo1N1rOGXhNRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNDUwMw==", "bodyText": "Do we want to be more general than UnicodeDecodeError here, e.g. just catch Exception and warn the user something went wrong? I took a look at the read_text docs: https://docs.python.org/3/library/pathlib.html?highlight=path#pathlib.Path.read_text and it looks like the errors kwarg can be utilized too. It looks like errors defaults to strict (makes sense here, we can't easily regex non-text contents), which will raise a ValueError if there's an encoding error. So here we got ValueError -> UnicodeError -> UnicodeDecodeError.\nGenerally, though, it's better to fail quick and loud and learn about cases we didn't consider. I'd say we should catch UnicodeDecodeError here, QA this functionality over a large corpus, look for failures, and patch this up with our learnings. Thoughts?", "url": "https://github.com/returntocorp/semgrep/pull/783#discussion_r427314503", "createdAt": "2020-05-19T13:45:57Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -35,7 +35,11 @@\n \n \n def get_re_matches(patterns_re: List[Tuple], path: Path) -> List[PatternMatch]:\n-    contents = path.read_text()\n+    try:\n+        contents = path.read_text()\n+    except UnicodeDecodeError:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e9260b02f346027f55ab40f4389c12b7376268"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ce57515468275fe734a582c449d54492f2492d5", "author": {"user": {"login": "underyx", "name": "Bence Nagy"}}, "url": "https://github.com/returntocorp/semgrep/commit/8ce57515468275fe734a582c449d54492f2492d5", "committedDate": "2020-05-19T16:57:18Z", "message": "Fix get_re_matches error with deep paths\n\nCloses https://github.com/returntocorp/semgrep/issues/781"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c6c5e075d0ea114a80afef30f376f100f65004c7", "author": {"user": {"login": "underyx", "name": "Bence Nagy"}}, "url": "https://github.com/returntocorp/semgrep/commit/c6c5e075d0ea114a80afef30f376f100f65004c7", "committedDate": "2020-05-19T16:57:18Z", "message": "get_re_matches: Skip binary file instead of erroring"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9e9260b02f346027f55ab40f4389c12b7376268", "author": {"user": {"login": "underyx", "name": "Bence Nagy"}}, "url": "https://github.com/returntocorp/semgrep/commit/c9e9260b02f346027f55ab40f4389c12b7376268", "committedDate": "2020-05-19T12:42:01Z", "message": "get_re_matches: Skip binary file instead of erroring"}, "afterCommit": {"oid": "c6c5e075d0ea114a80afef30f376f100f65004c7", "author": {"user": {"login": "underyx", "name": "Bence Nagy"}}, "url": "https://github.com/returntocorp/semgrep/commit/c6c5e075d0ea114a80afef30f376f100f65004c7", "committedDate": "2020-05-19T16:57:18Z", "message": "get_re_matches: Skip binary file instead of erroring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjY0NDcw", "url": "https://github.com/returntocorp/semgrep/pull/783#pullrequestreview-414664470", "createdAt": "2020-05-19T17:22:54Z", "commit": {"oid": "c6c5e075d0ea114a80afef30f376f100f65004c7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 995, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}