{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTQyNTMy", "number": 716, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0NzoyMlrOD6coqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0ODoyOFrOD6cpjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjEzMTYxOnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0NzoyMlrOGSS6pQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0NzoyMlrOGSS6pQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNzQ3Nw==", "bodyText": "We already have running semgrep --config r2c elsewhere on the readme", "url": "https://github.com/returntocorp/semgrep/pull/716#discussion_r421837477", "createdAt": "2020-05-07T22:47:22Z", "author": {"login": "brendongo"}, "path": "README.md", "diffHunk": "@@ -65,29 +68,9 @@ This is a bug. Let's use `semgrep` to find bugs like it, using a simple search p\n ```\n $ semgrep --lang python --pattern '$X == $X' test.py\n test.py\n-rule:python.deadcode.eqeq-is-bad: useless comparison operation `node.id == node.id` or `node.id != node.id`.\n 3:        if node.id == node.id:  # Oops, supposed to be 'node_id'\n ```\n \n-### r2c-developed Rules", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb2bbf55d6431901f2d6231a17f763a8304222d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjEzMjY3OnYy", "diffSide": "LEFT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0Nzo1MlrOGSS7Sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0Nzo1MlrOGSS7Sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNzY0Mw==", "bodyText": "We already talk about custom rules in the configuration files section below.", "url": "https://github.com/returntocorp/semgrep/pull/716#discussion_r421837643", "createdAt": "2020-05-07T22:47:52Z", "author": {"login": "brendongo"}, "path": "README.md", "diffHunk": "@@ -65,29 +68,9 @@ This is a bug. Let's use `semgrep` to find bugs like it, using a simple search p\n ```\n $ semgrep --lang python --pattern '$X == $X' test.py\n test.py\n-rule:python.deadcode.eqeq-is-bad: useless comparison operation `node.id == node.id` or `node.id != node.id`.\n 3:        if node.id == node.id:  # Oops, supposed to be 'node_id'\n ```\n \n-### r2c-developed Rules\n-\n-You can use rules developed by [r2c](https://r2c.dev) to search for issues in your codebase:\n-\n-```bash\n-cd /path/to/code\n-semgrep --config r2c\n-```\n-\n-### Custom Rules\n-\n-You can also [create your own rules](docs/configuration-files.md):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb2bbf55d6431901f2d6231a17f763a8304222d"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjEzMzg4OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0ODoyOFrOGSS8Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo0ODoyOFrOGSS8Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNzgzNQ==", "bodyText": "It wasn't clear before what semgrep actually did with equivalences.", "url": "https://github.com/returntocorp/semgrep/pull/716#discussion_r421837835", "createdAt": "2020-05-07T22:48:28Z", "author": {"login": "brendongo"}, "path": "README.md", "diffHunk": "@@ -168,14 +145,15 @@ see the [configuration documentation](docs/configuration-files.md).**\n \n Equivalences are another key concept in `semgrep`. `semgrep` automatically searches\n for code that is semantically equivalent. For example, the following patterns\n-are semantically equivalent\n+are semantically equivalent. The pattern `subprocess.Popen(...)` will fire on both.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "abb2bbf55d6431901f2d6231a17f763a8304222d"}, "originalPosition": 75}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4698, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}