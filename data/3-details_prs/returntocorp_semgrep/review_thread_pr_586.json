{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NTMzMjMz", "number": 586, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTowOTo1M1rOD2vHig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzoyODo1NFrOD2znhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NzIxNjc0OnYy", "diffSide": "RIGHT", "path": "semgrep-core/core/tainting_rule.ml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTowOTo1M1rOGMoT1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNTowOTo1M1rOGMoT1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTg5NjUzNA==", "bodyText": "nice!", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r415896534", "createdAt": "2020-04-27T15:09:53Z", "author": {"login": "DrewDennison"}, "path": "semgrep-core/core/tainting_rule.ml", "diffHunk": "@@ -0,0 +1,47 @@\n+(* Yoann Padioleau\n+ *\n+ * Copyright (C) 2020 r2c\n+ *\n+ * This program is free software; you can redistribute it and/or\n+ * modify it under the terms of the GNU General Public License (GPL)\n+ * version 2 as published by the Free Software Foundation.\n+ *\n+ * This program is distributed in the hope that it will be useful,\n+ * but WITHOUT ANY WARRANTY; without even the implied warranty of\n+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n+ * file license.txt for more details.\n+ *)\n+\n+(*****************************************************************************)\n+(* Prelude *)\n+(*****************************************************************************)\n+(* This is a spin-off of rule.ml but specialized for tainting analysis.\n+ * \n+ * At some point we may want tainting to be integrated and queryable \n+ * directly from regular semgrep rules, but for now it's simpler\n+ * to have a specialized type and format.\n+ *)\n+\n+(*****************************************************************************)\n+(* Types *)\n+(*****************************************************************************)\n+\n+(* right now only Expr is supported *)\n+type pattern = Ast.any\n+\n+(* less: could extend Rule.t *)\n+type rule = {\n+  id: string;\n+\n+  (* the list below are used to express disjunction *)\n+  source: pattern list; ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "230429ffcafba56a3f5117ae4cdc6a287954786f"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4Nzk1Mzk3OnYy", "diffSide": "RIGHT", "path": "semgrep-core/data/basic_tainting.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNzoyODo1NFrOGMvEpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDozODoxMVrOGM2o8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNzMzNQ==", "bodyText": "Just to be sure, these are logical OR clauses. In addition to this, is it possible to define two sinks combined by AND clause?\nFor example, when we were doing path-injection, we had to make patterns like\n$P = os.path.join(..., request.$W.get(...), ...)\n...\nopen($P, ...)\n\nwhere data had to flow through os.path.join as well as open to be considered potentially malicious.", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r416007335", "createdAt": "2020-04-27T17:28:54Z", "author": {"login": "ulziibay"}, "path": "semgrep-core/data/basic_tainting.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+rules:\n+  - id: classic\n+    pattern-sources:\n+      - source(...)\n+      - source1(...)\n+    pattern-sinks:\n+      - sink(...)\n+      - eval(...)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6260aaacbbcca76b4095a90174ecdd918086e3db"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjEzMTMxMw==", "bodyText": "hmm, right now the tainting by default consider that any tainted argument taint also the return value (unless it's a sanitize function), so here by default $P will be marked as tainted", "url": "https://github.com/returntocorp/semgrep/pull/586#discussion_r416131313", "createdAt": "2020-04-27T20:38:11Z", "author": {"login": "aryx"}, "path": "semgrep-core/data/basic_tainting.yml", "diffHunk": "@@ -0,0 +1,13 @@\n+rules:\n+  - id: classic\n+    pattern-sources:\n+      - source(...)\n+      - source1(...)\n+    pattern-sinks:\n+      - sink(...)\n+      - eval(...)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjAwNzMzNQ=="}, "originalCommit": {"oid": "6260aaacbbcca76b4095a90174ecdd918086e3db"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4765, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}