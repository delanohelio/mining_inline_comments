{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTMwMDAw", "number": 913, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0NzowNlrOECn8Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxODoxMVrOECotnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTg2OTkxOnYy", "diffSide": "LEFT", "path": "semgrep/semgrep/semgrep_main.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0NzowNlrOGfMcqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTo0NzowNlrOGfMcqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM2Mjk4Ng==", "bodyText": "this code doesn't do anything because looking up globs and expressions don't have side effects -- they're computed when the class is instantiated.", "url": "https://github.com/returntocorp/semgrep/pull/913#discussion_r435362986", "createdAt": "2020-06-04T15:47:06Z", "author": {"login": "rcoh"}, "path": "semgrep/semgrep/semgrep_main.py", "diffHunk": "@@ -43,34 +43,25 @@ def validate_single_rule(config_id: str, rule: Dict[str, Any]) -> bool:\n         print_error(\n             f\"{config_id} is missing required keys {missing_keys} at rule id {rule_id_err_msg}\"\n         )\n-        return False\n+        return None\n     if not rule_keys.issubset(YAML_ALL_VALID_RULE_KEYS):\n         extra_keys = rule_keys - YAML_ALL_VALID_RULE_KEYS\n         print_error(\n             f\"{config_id} has invalid rule key {extra_keys} at rule id {rule_id_err_msg}, can only have: {YAML_ALL_VALID_RULE_KEYS}\"\n         )\n-        return False\n+        return None\n     try:\n-        _ = Rule.from_json(rule).expression\n+        return Rule.from_json(rule)\n     except InvalidRuleSchemaError as ex:\n         print_error(\n             f\"{config_id}: inside rule id {rule_id_err_msg}, pattern fields can't look like this: {ex}\"\n         )\n-        return False\n-    try:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14f6503dc838c11364690a9673284e3553443791"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMTk5NjQ1OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/semgrep_main.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoxODoxMVrOGfNuCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNjoyMToyM1rOGfN19w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzgxNg==", "bodyText": "do we still have to ignore type here?", "url": "https://github.com/returntocorp/semgrep/pull/913#discussion_r435383816", "createdAt": "2020-06-04T16:18:11Z", "author": {"login": "ievans"}, "path": "semgrep/semgrep/semgrep_main.py", "diffHunk": "@@ -87,16 +77,17 @@ def validate_configs(\n         rules = config.get(RULES_KEY)\n         valid_rules = []\n         invalid_rules = []\n-        for rule in rules:  # type: ignore\n-            if validate_single_rule(config_id, rule):\n+        for rule_dict in rules:  # type: ignore", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5a1f139f9e9db211084393242911a4bb6d32e6a7"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4NTg0Nw==", "bodyText": "I think so because an unused ignore is an error", "url": "https://github.com/returntocorp/semgrep/pull/913#discussion_r435385847", "createdAt": "2020-06-04T16:21:23Z", "author": {"login": "rcoh"}, "path": "semgrep/semgrep/semgrep_main.py", "diffHunk": "@@ -87,16 +77,17 @@ def validate_configs(\n         rules = config.get(RULES_KEY)\n         valid_rules = []\n         invalid_rules = []\n-        for rule in rules:  # type: ignore\n-            if validate_single_rule(config_id, rule):\n+        for rule_dict in rules:  # type: ignore", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM4MzgxNg=="}, "originalCommit": {"oid": "5a1f139f9e9db211084393242911a4bb6d32e6a7"}, "originalPosition": 63}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4659, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}