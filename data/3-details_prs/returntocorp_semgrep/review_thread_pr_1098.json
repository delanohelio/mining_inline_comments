{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4MTcyODIw", "number": 1098, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMjoyOVrOEIHvJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMzowM1rOEIHv2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTUwODIwOnYy", "diffSide": "RIGHT", "path": "semgrep/tests/e2e/snapshots/test_rule_parser/test_rule_parser_cli_pattern/error.txt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMjoyOVrOGn5LnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMjoyOVrOGn5LnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NDUwOA==", "bodyText": "Maybe be more clear in that it can't be parsed as a C semgrep pattern so the user doesnt get confused why a pattern is being parsed as code", "url": "https://github.com/returntocorp/semgrep/pull/1098#discussion_r444484508", "createdAt": "2020-06-23T20:22:29Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/e2e/snapshots/test_rule_parser/test_rule_parser_cli_pattern/error.txt", "diffHunk": "@@ -0,0 +1,7 @@\n+error: invalid pattern\n+  --> CLI Input:1\n+1 | #include $X\n+  | ^^^^^^^^^^\n+\n+Pattern could not be parsed as C", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42fa70a17a68a5e586db149b2926889576ff224a"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTUxMDAwOnYy", "diffSide": "RIGHT", "path": "semgrep/tests/e2e/test_rule_parser.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMzowM1rOGn5Muw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QyMDoyMzowM1rOGn5Muw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQ4NDc5NQ==", "bodyText": "Should we just use a different pattern that is actually bad instead of one that might eventually work?", "url": "https://github.com/returntocorp/semgrep/pull/1098#discussion_r444484795", "createdAt": "2020-06-23T20:23:03Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/e2e/test_rule_parser.py", "diffHunk": "@@ -43,3 +43,16 @@ def test_rule_parser__failure__error_messages(run_semgrep_in_tmp, snapshot, file\n \n     if excinfo_in_color.value.stderr != excinfo.value.stderr:\n         snapshot.assert_match(excinfo_in_color.value.stderr, \"error-in-color.txt\")\n+\n+\n+# https://github.com/returntocorp/semgrep/issues/1095\n+def test_rule_parser_cli_pattern(run_semgrep_in_tmp, snapshot):\n+    # This test should eventually pass once this pattern is handled by semgrep-core, but for now,\n+    # getting a proper error from semgrep-core is an improvement\n+    with pytest.raises(CalledProcessError) as excinfo:\n+        run_semgrep_in_tmp(options=[\"-e\", \"#include $X\", \"-l\", \"c\"])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42fa70a17a68a5e586db149b2926889576ff224a"}, "originalPosition": 11}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4993, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}