{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTA2OTI3", "number": 2074, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMToxMjo1M1rOE6hFQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0ODoyM1rOE6oYRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5Nzk0ODgzOnYy", "diffSide": "RIGHT", "path": "semgrep/tests/e2e/targets/basic/nosem.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMToxMjo1M1rOH1oyYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMToxMjo1M1rOH1oyYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjAwNDgzMg==", "bodyText": "", "url": "https://github.com/returntocorp/semgrep/pull/2074#discussion_r526004832", "createdAt": "2020-11-18T11:12:53Z", "author": {"login": "underyx"}, "path": "semgrep/tests/e2e/targets/basic/nosem.py", "diffHunk": "@@ -1,2 +1,6 @@\n test_nosem_func()  # nosem: rules.test-nosem\n+test_nosem_func()  # NOSEM: rules.test-nosem\n+test_nosem_func()  # nosemgrep: rules.test-nosem\n+test_nosem_func()  # NOSEMGREP\n+test_nosem_func()  # nOseMgREP: rules.test-nosem", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffeb58d2fe838acf2d32b0361cd4c038ac856c65"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTE0NDM5OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/constants.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0ODoyM1rOH10TGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNTo0ODoyM1rOH10TGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjE5MzQzMg==", "bodyText": "Could make the user experience much less (potentially) frustrating by being more forgiving of whitespace here.\nWithout this change then //nosem:  some-rule-id (two spaces there) will be treated as just // nosem.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                r\" nosem(?:grep)?(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",\n          \n          \n            \n                r\" nosem(?:grep)?(?::[\\s]*(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",", "url": "https://github.com/returntocorp/semgrep/pull/2074#discussion_r526193432", "createdAt": "2020-11-18T15:48:23Z", "author": {"login": "msorens"}, "path": "semgrep/semgrep/constants.py", "diffHunk": "@@ -46,17 +46,18 @@ def is_json(self) -> bool:\n NOSEM_INLINE_RE = re.compile(\n     # We're looking for items that look like this:\n     # ' nosem'\n-    # ' nosem: example-pattern-id'\n+    # ' nosemgrep: example-pattern-id'\n     # ' nosem: pattern-id1,pattern-id2'\n-    # ' NOSEM:pattern-id1,pattern-id2'\n+    # ' NOSEMGREP:pattern-id1,pattern-id2'\n     #\n     # * We do not want to capture the ': ' that follows 'nosem'\n     # * We do not care about the casing of 'nosem'\n     # * We want a comma-separated list of ids\n     # * We want multi-language support, so we cannot strictly look for\n     #   Python comments that begin with '# '\n+    # * nosem and nosemgrep should be interchangeable\n     #\n-    r\" nosem(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",\n+    r\" nosem(?:grep)?(?::[\\s]?(?P<ids>([^,\\s](?:[,\\s]+)?)+))?\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffeb58d2fe838acf2d32b0361cd4c038ac856c65"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4740, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}