{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTE0ODMw", "number": 237, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozNDo0N1rODkznUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNjo0NFrODlGu_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTIwOTc5OnYy", "diffSide": "RIGHT", "path": "tests/generate.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozNDo0N1rOFxVj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozNDo0N1rOFxVj-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NzgxNg==", "bodyText": "maybe rename generate_test_matrix.py", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387277816", "createdAt": "2020-03-03T20:34:47Z", "author": {"login": "aryx"}, "path": "tests/generate.py", "diffHunk": "@@ -0,0 +1,45 @@\n+# /usr/bin/env python3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTIxOTQyOnYy", "diffSide": "RIGHT", "path": "tests/go/less_atts.sgrep", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozODoxN1rOFxVqZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMDo0NlrOFxWWJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTQ2Mw==", "bodyText": "what does atts mean? And why did you prefix this test with a less? It looks more like a dots_xxx.\nThe spirit of the less_xxx is to say that a pattern can have less details that the concrete file.\nFor example writing the pattern class A { ...} will also match code where the code has the extra detail\nabout inheritnace like class A extends B {}. We do not force the user to write class A extends $X { ...} .", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387279463", "createdAt": "2020-03-03T20:38:17Z", "author": {"login": "aryx"}, "path": "tests/go/less_atts.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+func $F(...) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDY2MA==", "bodyText": "Move to tests/go/dots_func_attributes.sgrep to clarify!", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387290660", "createdAt": "2020-03-03T21:00:46Z", "author": {"login": "ulziibay"}, "path": "tests/go/less_atts.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+func $F(...) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTQ2Mw=="}, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTIyMTk1OnYy", "diffSide": "RIGHT", "path": "tests/go/less_inherits.TODO", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozOToxMFrOFxVsEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMTozMlrOFxWXoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTg4OQ==", "bodyText": "Go does not really have inheritance like the other languages. It does not fit in the less_xxx category.\nHowever having dots for fields is a nice test to have, so maybe rename to\ndots_struct_fields.TODO", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387279889", "createdAt": "2020-03-03T20:39:10Z", "author": {"login": "aryx"}, "path": "tests/go/less_inherits.TODO", "diffHunk": "@@ -0,0 +1,3 @@\n+type struct A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDg3OA==", "bodyText": "Ok addressed", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387290878", "createdAt": "2020-03-03T21:01:13Z", "author": {"login": "ulziibay"}, "path": "tests/go/less_inherits.TODO", "diffHunk": "@@ -0,0 +1,3 @@\n+type struct A {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTg4OQ=="}, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTA0MQ==", "bodyText": "Ok addressed", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387291041", "createdAt": "2020-03-03T21:01:32Z", "author": {"login": "ulziibay"}, "path": "tests/go/less_inherits.TODO", "diffHunk": "@@ -0,0 +1,3 @@\n+type struct A {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTg4OQ=="}, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTIyNTA5OnYy", "diffSide": "RIGHT", "path": "tests/java/less_inheritance.java.TODO", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo0MDoxN1rOFxVuGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMDo1M1rOFxWWZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDQwOA==", "bodyText": "No, this should be class A extends B { ...}\nwe do not want class A { .. } to match public class B extends A { }", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387280408", "createdAt": "2020-03-03T20:40:17Z", "author": {"login": "aryx"}, "path": "tests/java/less_inheritance.java.TODO", "diffHunk": "@@ -0,0 +1,19 @@\n+// ERROR: match\n+public class A {\n+  public static foo() {\n+    return 1;\n+  }\n+}\n+\n+// ERROR: match\n+public class B extends A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDcyNA==", "bodyText": "ok", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387290724", "createdAt": "2020-03-03T21:00:53Z", "author": {"login": "ulziibay"}, "path": "tests/java/less_inheritance.java.TODO", "diffHunk": "@@ -0,0 +1,19 @@\n+// ERROR: match\n+public class A {\n+  public static foo() {\n+    return 1;\n+  }\n+}\n+\n+// ERROR: match\n+public class B extends A {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDQwOA=="}, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTIyNjM0OnYy", "diffSide": "RIGHT", "path": "tests/js/less_inheritance.js.TODO", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo0MDo0NVrOFxVu6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMTowMVrOFxWWnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDYxNw==", "bodyText": "no, should be class A extends B.", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387280617", "createdAt": "2020-03-03T20:40:45Z", "author": {"login": "aryx"}, "path": "tests/js/less_inheritance.js.TODO", "diffHunk": "@@ -0,0 +1,24 @@\n+//ERROR:\n+class A {\n+  constructor(name) {\n+    this.name = name;\n+  }\n+\n+  foo() {\n+    return 'foo';\n+  }\n+}\n+\n+//ERROR:\n+class B extends A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDc4MA==", "bodyText": "addressed", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387290780", "createdAt": "2020-03-03T21:01:01Z", "author": {"login": "ulziibay"}, "path": "tests/js/less_inheritance.js.TODO", "diffHunk": "@@ -0,0 +1,24 @@\n+//ERROR:\n+class A {\n+  constructor(name) {\n+    this.name = name;\n+  }\n+\n+  foo() {\n+    return 'foo';\n+  }\n+}\n+\n+//ERROR:\n+class B extends A {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDYxNw=="}, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMjM0MjM2OnYy", "diffSide": "RIGHT", "path": "tests/go/dots_attributes.sgrep", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNjo0NFrOFxzgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNjo0NFrOFxzgTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2ODM5OA==", "bodyText": "still don't understand what it has to do with attributes (a.k.a annotations).", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387768398", "createdAt": "2020-03-04T16:06:44Z", "author": {"login": "aryx"}, "path": "tests/go/dots_attributes.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+func $F(...) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e6ff46b565abad47ea89cf4460c67c875b389b"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4850, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}