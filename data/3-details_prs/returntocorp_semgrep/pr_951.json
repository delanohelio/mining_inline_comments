{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyMDM1ODY0", "number": 951, "title": "On the way to beautiful errors", "bodyText": "This diff introduces ErrorWithContext which is an error message that can print nicely along with attached context from code. Eventually, this will output JSON errors in JSON output mode, but that isn't fully done right now. I use it in a couple of places -- a full conversion of all applicable errors into ErrorWithContext is coming in a later diff.\nFinally getting some of the payoff of tracking the spans. Eventually, I want to refactor the error handling in validate_configs to return the errors instead of just logging them. For now though, I decided to just preserve the existing behavior, there are enough moving parts in this diff already.\nWe track span contents in a global singleton so we can look up the code a span came from posthoc.\nI'm torn if the tests should include the escape sequences or not -- it's good to test that the colors don't suddenly change, but it's definitely harder to verify alignment, eg.", "createdAt": "2020-06-09T20:07:07Z", "url": "https://github.com/returntocorp/semgrep/pull/951", "merged": true, "mergeCommit": {"oid": "0c50d0bd80674965819bbcd6bc4a306cbcd29305"}, "closed": true, "closedAt": "2020-06-11T01:04:04Z", "author": {"login": "rcoh"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpq07UABqjM0MjY2NDY4NjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcqC2XzAFqTQyODUwOTI0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8e993c2f1b07e909a6ed68126231772c14a8fc47", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/8e993c2f1b07e909a6ed68126231772c14a8fc47", "committedDate": "2020-06-09T20:06:02Z", "message": "On the way to beautiful errors"}, "afterCommit": {"oid": "3ba60c1fc6b269c1a15a6622426d513b709e1deb", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/3ba60c1fc6b269c1a15a6622426d513b709e1deb", "committedDate": "2020-06-09T20:10:41Z", "message": "On the way to beautiful errors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3ba60c1fc6b269c1a15a6622426d513b709e1deb", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/3ba60c1fc6b269c1a15a6622426d513b709e1deb", "committedDate": "2020-06-09T20:10:41Z", "message": "On the way to beautiful errors"}, "afterCommit": {"oid": "32ccaec61365a89442d96e6651180118c5f0b87b", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/32ccaec61365a89442d96e6651180118c5f0b87b", "committedDate": "2020-06-09T21:58:25Z", "message": "On the way to beautiful errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/57c10d5c483c01d81ed2135081952867cc5ec79d", "committedDate": "2020-06-10T00:45:27Z", "message": "On the way to beautiful errors"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32ccaec61365a89442d96e6651180118c5f0b87b", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/32ccaec61365a89442d96e6651180118c5f0b87b", "committedDate": "2020-06-09T21:58:25Z", "message": "On the way to beautiful errors"}, "afterCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/57c10d5c483c01d81ed2135081952867cc5ec79d", "committedDate": "2020-06-10T00:45:27Z", "message": "On the way to beautiful errors"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzA3MzUw", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428307350", "createdAt": "2020-06-10T18:07:41Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowNzo0MVrOGiApvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowNzo0MVrOGiApvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxNTQ1Mg==", "bodyText": "Will the color codes exist if a user is piping output to a file?", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438315452", "createdAt": "2020-06-10T18:07:41Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/e2e/snapshots/test_rule_parser/test_rule_parser__failure__error_messages/bad2/error.txt", "diffHunk": "@@ -1,2 +1,12 @@\n-rules/syntax/bad2.yaml has an invalid top-level rule key {'pattern-inside'} at rule id eqeq-is-bad, can only have: ['equivalences', 'fix', 'id', 'languages', 'message', 'metadata', 'paths', 'pattern', 'pattern-either', 'pattern-regex', 'patterns', 'severity']\n+\u001b[31merror\u001b[39m: extra top-level key\n+  --> rules/syntax/bad2.yaml:3\n+\u001b[94m1 | \u001b[39mrules:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzA4MTc2", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428308176", "createdAt": "2020-06-10T18:08:49Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowODo0OVrOGiAsQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowODo0OVrOGiAsQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxNjA5OQ==", "bodyText": "Can you add a comment/modify the message to mention what top level key is missing", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438316099", "createdAt": "2020-06-10T18:08:49Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/e2e/rules/syntax/missing-toplevel.yaml", "diffHunk": "@@ -0,0 +1,14 @@\n+rule:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzA4NDM5", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428308439", "createdAt": "2020-06-10T18:09:12Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowOToxMlrOGiAtEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODowOToxMlrOGiAtEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxNjMwNA==", "bodyText": "Can you add a comment/modify message field to mention what field is missing", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438316304", "createdAt": "2020-06-10T18:09:12Z", "author": {"login": "brendongo"}, "path": "semgrep/tests/e2e/rules/syntax/missing-field.yaml", "diffHunk": "@@ -0,0 +1,13 @@\n+rules:\n+- id: flask-secure-set-cookie\n+  languages: [python]\n+  patterns:\n+    - pattern-not: |\n+        flask.response.set_cookie(..., httponly=True, secure=True,...)\n+    - pattern: |\n+        flask.response.set_cookie(....)\n+  message: |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzEwNTA2", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428310506", "createdAt": "2020-06-10T18:12:03Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxMjowNFrOGiAzoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxMjowNFrOGiAzoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxNzk4NA==", "bodyText": "Can you create Issues for TODOs instead of having an inline todo", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438317984", "createdAt": "2020-06-10T18:12:04Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/semgrep_main.py", "diffHunk": "@@ -43,14 +45,27 @@ def validate_single_rule(config_id: str, rule_yaml: YamlTree) -> Optional[Rule]:\n     rule_keys = set(rule.keys())\n     if not rule_keys.issuperset(YAML_MUST_HAVE_KEYS):\n         missing_keys = YAML_MUST_HAVE_KEYS - rule_keys\n+        # TODO: return the error messages so we can emit nice JSON errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzEyOTE2", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428312916", "createdAt": "2020-06-10T18:15:28Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxNToyOVrOGiA7CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxNToyOVrOGiA7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMxOTg4MQ==", "bodyText": "Better Named SemgrepRuleFormatError or something more specific. Current name implies it can be any error with context but it only applies to rule format errors.", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438319881", "createdAt": "2020-06-10T18:15:29Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/error.py", "diffHunk": "@@ -32,3 +44,108 @@ class InvalidPatternNameError(SemgrepError):\n \n class UnknownOperatorError(SemgrepError):\n     pass\n+\n+\n+class ErrorWithContext(SemgrepError):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzE1ODI1", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428315825", "createdAt": "2020-06-10T18:19:37Z", "commit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxOTozN1rOGiBD1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxODoxOTozN1rOGiBD1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODMyMjEzMw==", "bodyText": "Top level comment on what each arg means would be helpful", "url": "https://github.com/returntocorp/semgrep/pull/951#discussion_r438322133", "createdAt": "2020-06-10T18:19:37Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/error.py", "diffHunk": "@@ -32,3 +44,108 @@ class InvalidPatternNameError(SemgrepError):\n \n class UnknownOperatorError(SemgrepError):\n     pass\n+\n+\n+class ErrorWithContext(SemgrepError):\n+    \"\"\"\n+    Error which will print context from the Span. You should provide the most specific span possible,\n+    eg. if the error is an invalid key, provide exactly the span for that key. You can then expand what's printed\n+    with span.with_context(...)\n+    \"\"\"\n+\n+    def __init__(\n+        self,\n+        short_msg: str,\n+        long_msg: Optional[str],\n+        level: str,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "57c10d5c483c01d81ed2135081952867cc5ec79d"}, "originalPosition": 33}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78a6968edac44c77904492cfc442794a8182cc9c", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/78a6968edac44c77904492cfc442794a8182cc9c", "committedDate": "2020-06-10T18:45:16Z", "message": "Assorted Improvements\n\n- Betters docs for ErrorWithSpan\n- Suppress color by default when the output is not a tty but enable it with `--force-color`\n- Add snapshot testing with and without color"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "92c0fd6aa4841cd0bf063d032cef687091b18431", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/92c0fd6aa4841cd0bf063d032cef687091b18431", "committedDate": "2020-06-10T19:35:58Z", "message": "More cleanups\n\n- Add inline comments\n- Delete unused emit method\n- Change `emit_str` to __repr__ which is hopefully clearer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29fcb59cacf9b1198e79cb4d5b914813ea69861", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/c29fcb59cacf9b1198e79cb4d5b914813ea69861", "committedDate": "2020-06-10T20:33:06Z", "message": "Add lots more comments, change Positions to being 1-indexed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4a08a8bee0859295e1d8c00a803b6f2ab7845cfb", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/4a08a8bee0859295e1d8c00a803b6f2ab7845cfb", "committedDate": "2020-06-10T20:13:28Z", "message": "Add lots more comments, change Positions to being 1-indexed"}, "afterCommit": {"oid": "c29fcb59cacf9b1198e79cb4d5b914813ea69861", "author": {"user": {"login": "rcoh", "name": "Russell Cohen"}}, "url": "https://github.com/returntocorp/semgrep/commit/c29fcb59cacf9b1198e79cb4d5b914813ea69861", "committedDate": "2020-06-10T20:33:06Z", "message": "Add lots more comments, change Positions to being 1-indexed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4NTA5MjQw", "url": "https://github.com/returntocorp/semgrep/pull/951#pullrequestreview-428509240", "createdAt": "2020-06-11T00:10:06Z", "commit": {"oid": "c29fcb59cacf9b1198e79cb4d5b914813ea69861"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1521, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}