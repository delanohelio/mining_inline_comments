{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxOTU2Nzc4", "number": 947, "title": "Fix 'pattern_id' when using nested pattern operators", "bodyText": "Fixes #828.\nI was also having a heck of a time debugging the problem, so I patched up some of the __repr__ functions to make it easier. Added a few comments inline.", "createdAt": "2020-06-09T17:23:32Z", "url": "https://github.com/returntocorp/semgrep/pull/947", "merged": true, "mergeCommit": {"oid": "ef3a4b75395c7bc8675aba9812fcbb6fa27aa695"}, "closed": true, "closedAt": "2020-06-10T18:11:45Z", "author": {"login": "mschwager"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpogC_gFqTQyNzM4MzY5MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp9j6qgFqTQyODMwMjAyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MzgzNjkw", "url": "https://github.com/returntocorp/semgrep/pull/947#pullrequestreview-427383690", "createdAt": "2020-06-09T17:25:04Z", "commit": {"oid": "1eb0ef63112f641cffc438740b6c6038b566e798"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyNTowNFrOGhUzKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNzoyNzozMVrOGhU5GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5Njk2OA==", "bodyText": "Not sure if this was actually causing a problem, but it looked like a bug to me. Variables returned from semgrep-core either have a sid or md5sum. In this case, if the variable didn't have a sid it was using the literal \"md5sum\" instead of the value of that key. This seems like it should've broken metavariable matching, but I didn't look into it too much.", "url": "https://github.com/returntocorp/semgrep/pull/947#discussion_r437596968", "createdAt": "2020-06-09T17:25:04Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/pattern_match.py", "diffHunk": "@@ -37,7 +37,7 @@ def extra(self) -> Dict[str, Any]:\n     @property\n     def vars(self) -> Dict[str, Any]:\n         metavars = {v: data.get(\"unique_id\", {}) for v, data in self.metavars.items()}\n-        return {v: uid.get(\"sid\", \"md5sum\") for v, uid in metavars.items()}\n+        return {v: uid.get(\"sid\", uid.get(\"md5sum\")) for v, uid in metavars.items()}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb0ef63112f641cffc438740b6c6038b566e798"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzU5ODQ4OQ==", "bodyText": "This was the bug. Multiple patterns could end up having the same pattern_id, which was confusing semgrep when it would receive the results back from semgrep-core. Since multiple patterns would have the same pattern_id then we'd occasionally return invalid results.", "url": "https://github.com/returntocorp/semgrep/pull/947#discussion_r437598489", "createdAt": "2020-06-09T17:27:31Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule.py", "diffHunk": "@@ -48,7 +47,7 @@ def _parse_boolean_expression(\n                 if operator in set(OPERATORS_WITH_CHILDREN):\n                     if isinstance(pattern_text, list):\n                         sub_expression = self._parse_boolean_expression(\n-                            pattern_text, 0, f\"{prefix}.{pattern_id}\"\n+                            pattern_text, 0, f\"{prefix}.{rule_index}.{pattern_id}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1eb0ef63112f641cffc438740b6c6038b566e798"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "991ac63c8a7ebd13d76c0dfc3fbfc59944f7ee0e", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/991ac63c8a7ebd13d76c0dfc3fbfc59944f7ee0e", "committedDate": "2020-06-10T13:38:54Z", "message": "Fix 'pattern_id' when using nested pattern operators\n\nFixes #828."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d56fb4d357107d764ed66efbf9c04426431ad241", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/d56fb4d357107d764ed66efbf9c04426431ad241", "committedDate": "2020-06-10T13:38:54Z", "message": "Explicitly detect when metavariables are missing a unique identifier"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "77028067281eca130ae92e6091734e3ce417e5ce", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/77028067281eca130ae92e6091734e3ce417e5ce", "committedDate": "2020-06-10T13:40:01Z", "message": "Bump CHANGELOG and check metavariable unique_id when determining equality"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea282c6c6ed57a8632f3fc132e4b523f6f614617", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/ea282c6c6ed57a8632f3fc132e4b523f6f614617", "committedDate": "2020-06-09T21:11:37Z", "message": "Bump CHANGELOG and check metavariable unique_id when determining equality"}, "afterCommit": {"oid": "77028067281eca130ae92e6091734e3ce417e5ce", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/77028067281eca130ae92e6091734e3ce417e5ce", "committedDate": "2020-06-10T13:40:01Z", "message": "Bump CHANGELOG and check metavariable unique_id when determining equality"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MzAyMDIw", "url": "https://github.com/returntocorp/semgrep/pull/947#pullrequestreview-428302020", "createdAt": "2020-06-10T18:00:25Z", "commit": {"oid": "77028067281eca130ae92e6091734e3ce417e5ce"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1513, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}