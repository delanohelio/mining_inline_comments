{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM1NTE0NzYy", "number": 2226, "title": "Prim expr", "bodyText": "Basic primary expression support for Kotlin.\nNeeds Work:\n\nLambda functions: assign doesn't work yet. Also need to work on function args and typing.\nWhen expressions: when_entry needs work. Have yet to do range_test and type_test.\nReturn@ expressions: should maybe edit AST_generic to have return be of type tok * expr option * label_ident * sc instead of tok * expr option *sc because currently the simple_identifier  is not being stored.\n\nUnsure about:\n\nconversion of if_expr to if_stmt and then otherexpr.\n\nTest Plan:\nrun _build/default/cli/Main.exe -dump_ast tests/kotlin/prim_expr.kt to get:\nPr(\n  [DefStmt(\n     ({name=EId((\"foo\", ())); attrs=[]; tparams=[];\n       info={id_resolved=Ref(None); id_type=Ref(None);\n             id_const_literal=Ref(None); };\n       },\n      FuncDef(\n        {fkind=(Function, ()); fparams=[]; frettype=None;\n         fbody=Block(\n                 [ExprStmt(\n                    Call(\n                      Id((\"foo\", ()),\n                        {id_resolved=Ref(None); id_type=Ref(None);\n                         id_const_literal=Ref(None); }), []), ());\n                  ExprStmt(\n                    Lambda(\n                      {fkind=(Function, ()); fparams=[]; frettype=None;\n                       fbody=ExprStmt(\n                               Call(IdSpecial((Op(Plus), ())),\n                                 [Arg(\n                                    Id((\"x\", ()),\n                                      {id_resolved=Ref(None);\n                                       id_type=Ref(None);\n                                       id_const_literal=Ref(None); }));\n                                  Arg(\n                                    Id((\"y\", ()),\n                                      {id_resolved=Ref(None);\n                                       id_type=Ref(None);\n                                       id_const_literal=Ref(None); }))]), ());\n                       }), ());\n                  ExprStmt(\n                    Container(List,\n                      [L(Int((\"1\", ()))); L(Int((\"2\", ())));\n                       L(Int((\"3\", ())))]), ());\n                  ExprStmt(\n                    OtherExpr(OE_StmtExpr,\n                      [S(\n                         If((),\n                           Call(IdSpecial((Op(Lt), ())),\n                             [Arg(\n                                Id((\"a\", ()),\n                                  {id_resolved=Ref(None); id_type=Ref(\n                                   None); id_const_literal=Ref(None); }));\n                              Arg(\n                                Id((\"b\", ()),\n                                  {id_resolved=Ref(None); id_type=Ref(\n                                   None); id_const_literal=Ref(None); }))]),\n                           ExprStmt(\n                             OtherExpr(OE_StmtExpr, [S(Return((), None, ()))]),\n                             ()), None))]), ())]);\n         })))])", "createdAt": "2020-12-09T22:52:51Z", "url": "https://github.com/returntocorp/semgrep/pull/2226", "merged": true, "mergeCommit": {"oid": "c140887c3983705b2c8b7d126bc84b46a3874f3c"}, "closed": true, "closedAt": "2020-12-10T06:10:23Z", "author": {"login": "colleend"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdisPhLAH2gAyNTM1NTE0NzYyOmNhMTBiNjRmNjY4MDBhMTAzZTI5ZWZhZTE4ZGUyOWMyYzk5Y2E1ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdktFhUAFqTU0ODg3OTU4MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca10b64f66800a103e29efae18de29c2c99ca5ec", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/ca10b64f66800a103e29efae18de29c2c99ca5ec", "committedDate": "2020-12-04T00:03:26Z", "message": "fixing metavar_anno js code that couldn't be fully parsed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "09dd7910912088568a8354e37ac6a3874d69ab18", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/09dd7910912088568a8354e37ac6a3874d69ab18", "committedDate": "2020-12-05T00:23:34Z", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "657c1a82972a55af4dc361840bf7d8908b94e72b", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/657c1a82972a55af4dc361840bf7d8908b94e72b", "committedDate": "2020-12-05T00:26:14Z", "message": "type changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f0ec6f0e916d585d0c5cad8bbda5e66a2f6a6e12", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/f0ec6f0e916d585d0c5cad8bbda5e66a2f6a6e12", "committedDate": "2020-12-09T00:07:59Z", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bcb1584c2cd8ee56e3c361a7c278ef9976cdd88", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/5bcb1584c2cd8ee56e3c361a7c278ef9976cdd88", "committedDate": "2020-12-09T22:47:07Z", "message": "Merge branch 'develop' of github.com:returntocorp/semgrep into develop"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e855f31ecd74eb25b0aa73344501b7d998d6456", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/5e855f31ecd74eb25b0aa73344501b7d998d6456", "committedDate": "2020-12-09T22:47:59Z", "message": "basic support for kotlin primary expressions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "632e0c9e20533068401928bb0f907dca083801f5", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/632e0c9e20533068401928bb0f907dca083801f5", "committedDate": "2020-12-09T22:54:27Z", "message": "getting rid of extra file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05", "author": {"user": {"login": "colleend", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/390203a907a2026b8bd639c6e54ccabf3e38fc05", "committedDate": "2020-12-09T23:01:21Z", "message": "adding little fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4NzA4MDQ3", "url": "https://github.com/returntocorp/semgrep/pull/2226#pullrequestreview-548708047", "createdAt": "2020-12-09T23:43:04Z", "commit": {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzo0MzowNVrOICuogw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQyMzo0MzowNVrOICuogw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTczMjA5OQ==", "bodyText": "Note that you don't need parentheses around v2. It's more idiomatic to write:\n(v1, Some v2)", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r539732099", "createdAt": "2020-12-09T23:43:05Z", "author": {"login": "mjambon"}, "path": "semgrep-core/parsing/Parse_kotlin_tree_sitter.ml", "diffHunk": "@@ -355,7 +355,7 @@ let line_string_content (env : env) (x : CST.line_string_content) =\n let return_at (env : env) ((v1, v2) : CST.return_at) =\n   let v1 = token env v1 (* \"return@\" *) in\n   let v2 = simple_identifier env v2 in\n-  todo env (v1, v2)\n+  (v1, Some(v2))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4ODc5NTgx", "url": "https://github.com/returntocorp/semgrep/pull/2226#pullrequestreview-548879581", "createdAt": "2020-12-10T06:08:43Z", "commit": {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjowODo0M1rOIC3QsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMFQwNjowODo0M1rOIC3QsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTg3MzQ1Ng==", "bodyText": "maybe you can use Conditional instead, but it accepts 3 expressions.", "url": "https://github.com/returntocorp/semgrep/pull/2226#discussion_r539873456", "createdAt": "2020-12-10T06:08:43Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_kotlin_tree_sitter.ml", "diffHunk": "@@ -1432,41 +1465,47 @@ and primary_expression (env : env) (x : CST.primary_expression) : expr =\n        let v4 = token env v4 (* \")\" *) in\n        let v5 =\n          (match v5 with\n-          | `Cont_stru_body x -> control_structure_body env x\n-          | `SEMI tok -> token_todo env tok (* \";\" *)\n+          | `Cont_stru_body x ->\n+              let v1 = control_structure_body env x in\n+              (v1, None)\n+          | `SEMI tok ->\n+              token_todo env tok (* \";\" *)\n           | `Opt_cont_stru_body_opt_SEMI_else_choice_cont_stru_body (v1, v2, v3, v4) ->\n               let v1 =\n                 (match v1 with\n                  | Some x -> control_structure_body env x\n                  | None -> todo env ())\n               in\n-              let v2 =\n+              (*let v2 =\n                 (match v2 with\n                  | Some tok -> token env tok (* \";\" *)\n                  | None -> todo env ())\n-              in\n+                in*)\n               let v3 = token env v3 (* \"else\" *) in\n               let v4 =\n                 (match v4 with\n                  | `Cont_stru_body x -> control_structure_body env x\n                  | `SEMI tok -> token_todo env tok (* \";\" *)\n                 )\n               in\n-              todo env (v1, v2, v3, v4)\n+              (v1, Some(v4))\n          )\n        in\n-       todo env (v1, v2, v3, v4, v5)\n+       let (v6, v7) = v5 in\n+       let if_stmt = If (v1, v3, v6, v7) in\n+       OtherExpr (OE_StmtExpr, [S if_stmt])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390203a907a2026b8bd639c6e54ccabf3e38fc05"}, "originalPosition": 342}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 823, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}