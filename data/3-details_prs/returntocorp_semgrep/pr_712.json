{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0ODYyMzEy", "number": 712, "title": "Implement metavariable matching between patterns", "bodyText": "This commit implements metavariable matching between patterns. What this\nmeans:\n\nTwo patterns are equal only if, for any commonly defined\nmetavariables, those metavariables refer to the same variable (if\na variable) or expression\nA pattern is \"inside\" another pattern only if, for any commonly defined\nmetavariables, those metavariables refer to the same variable (if\na variable) or expression\n\nSee semgrep/tests/e2e/rules/inside.yaml and\nsemgrep/tests/e2e/targets/basic/inside.py for an example of how this\nmetavariable matching works.", "createdAt": "2020-05-07T18:56:07Z", "url": "https://github.com/returntocorp/semgrep/pull/712", "merged": true, "mergeCommit": {"oid": "ba8d9dd90613274b64962ace9d8ec3448405cfca"}, "closed": true, "closedAt": "2020-05-08T01:29:57Z", "author": {"login": "nbrahms"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcfB9cQgH2gAyNDE0ODYyMzEyOjU2MWRjOWYwMzAyYTc3Yjg5YmIzMDIzZmNiZmNkMjU3ZTdkMTM0ZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcfHQUvAFqTQwNzkzMzM4Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "561dc9f0302a77b89bb3023fcbfcd257e7d134f2", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/561dc9f0302a77b89bb3023fcbfcd257e7d134f2", "committedDate": "2020-05-07T18:54:45Z", "message": "Implement metavariable matching between patterns\n\nThis commit implements metavariable matching between patterns. What this\nmeans:\n\n  - Two patterns are equal only if, for any commonly defined\n    metavariables, those metavariables refer to the same variable (if\n    a variable) or expression\n  - A pattern is \"inside\" another pattern only if, for any commonly defined\n    metavariables, those metavariables refer to the same variable (if\n    a variable) or expression\n\nSee semgrep/tests/e2e/rules/inside.yaml and\nsemgrep/tests/e2e/targets/basic/inside.py for an example of how this\nmetavariable matching works."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NzUxMzI4", "url": "https://github.com/returntocorp/semgrep/pull/712#pullrequestreview-407751328", "createdAt": "2020-05-07T18:58:48Z", "commit": {"oid": "561dc9f0302a77b89bb3023fcbfcd257e7d134f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODo1ODo0OFrOGSMEhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxODo1ODo0OFrOGSMEhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyNTMxOQ==", "bodyText": "I'll reword this", "url": "https://github.com/returntocorp/semgrep/pull/712#discussion_r421725319", "createdAt": "2020-05-07T18:58:48Z", "author": {"login": "nbrahms"}, "path": "semgrep/semgrep/semgrep_types.py", "diffHunk": "@@ -118,9 +119,42 @@ def pattern_names_for_operators(operators: List[Operator]) -> List[str]:\n class Range(NamedTuple):\n     start: int\n     end: int\n+    vars: Mapping[str, Any]\n \n     def is_enclosing_or_eq(self, other_range: \"Range\") -> bool:\n-        return self.start <= other_range.start and other_range.end <= self.end\n+        return (\n+            self.start <= other_range.start\n+            and other_range.end <= self.end\n+            and self.vars_match(other_range)\n+        )\n+\n+    def vars_match(self, rhs: \"Range\") -> bool:\n+        \"\"\"\n+        Returns true if and only if all metavariables that match as variable nodes in either", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561dc9f0302a77b89bb3023fcbfcd257e7d134f2"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NzU3MDU2", "url": "https://github.com/returntocorp/semgrep/pull/712#pullrequestreview-407757056", "createdAt": "2020-05-07T19:06:57Z", "commit": {"oid": "561dc9f0302a77b89bb3023fcbfcd257e7d134f2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOTowNjo1N1rOGSMWWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxOTowNjo1N1rOGSMWWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTcyOTg4MQ==", "bodyText": "should this be a property of PatternMatch rather than Range?", "url": "https://github.com/returntocorp/semgrep/pull/712#discussion_r421729881", "createdAt": "2020-05-07T19:06:57Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/semgrep_types.py", "diffHunk": "@@ -118,9 +119,42 @@ def pattern_names_for_operators(operators: List[Operator]) -> List[str]:\n class Range(NamedTuple):\n     start: int\n     end: int\n+    vars: Mapping[str, Any]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "561dc9f0302a77b89bb3023fcbfcd257e7d134f2"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e56655ce8279ae0fd75199ae1e8d11e87e0c975", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/8e56655ce8279ae0fd75199ae1e8d11e87e0c975", "committedDate": "2020-05-07T21:54:31Z", "message": "fixup! Implement metavariable matching between patterns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODkwMjg3", "url": "https://github.com/returntocorp/semgrep/pull/712#pullrequestreview-407890287", "createdAt": "2020-05-07T22:52:37Z", "commit": {"oid": "8e56655ce8279ae0fd75199ae1e8d11e87e0c975"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo1MjozOFrOGSTBag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo1MjozOFrOGSTBag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzOTIxMA==", "bodyText": "Do we need to do a membership check if we are looping over a set intersection?", "url": "https://github.com/returntocorp/semgrep/pull/712#discussion_r421839210", "createdAt": "2020-05-07T22:52:38Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/semgrep_types.py", "diffHunk": "@@ -118,9 +119,42 @@ def pattern_names_for_operators(operators: List[Operator]) -> List[str]:\n class Range(NamedTuple):\n     start: int\n     end: int\n+    vars: Mapping[str, Any]\n \n     def is_enclosing_or_eq(self, other_range: \"Range\") -> bool:\n-        return self.start <= other_range.start and other_range.end <= self.end\n+        return (\n+            self.start <= other_range.start\n+            and other_range.end <= self.end\n+            and self.vars_match(other_range)\n+        )\n+\n+    def vars_match(self, rhs: \"Range\") -> bool:\n+        \"\"\"\n+        Returns true if and only if all metavariables in both this and the other Range refer to the same\n+        variables (if variable nodes), in the same scope, or the same expressions (if expression nodes).\n+\n+        That is, if two patterns define a \"$X\", and $X refers to a variable in one pattern, then\n+        $X must refer to the same variable in both patterns\n+        :param rhs: The other Range\n+        \"\"\"\n+        to_match = set(self.vars.keys()).intersection(rhs.vars.keys())\n+        return all(\n+            v in self.vars and v in rhs.vars and self.vars[v] == rhs.vars[v]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8e56655ce8279ae0fd75199ae1e8d11e87e0c975"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3ODkwNjI3", "url": "https://github.com/returntocorp/semgrep/pull/712#pullrequestreview-407890627", "createdAt": "2020-05-07T22:53:29Z", "commit": {"oid": "8e56655ce8279ae0fd75199ae1e8d11e87e0c975"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6637da57b595f850ba2a16c5161d18747347e72", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/e6637da57b595f850ba2a16c5161d18747347e72", "committedDate": "2020-05-07T23:33:16Z", "message": "fixup! Implement metavariable matching between patterns"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3OTMzMzgz", "url": "https://github.com/returntocorp/semgrep/pull/712#pullrequestreview-407933383", "createdAt": "2020-05-08T01:04:54Z", "commit": {"oid": "e6637da57b595f850ba2a16c5161d18747347e72"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 962, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}