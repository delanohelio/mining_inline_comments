{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzY5OTg2", "number": 330, "title": "Fix python interpolated strs", "bodyText": "x = \"python\" \"is\" \"stupid\" has Generic AST:\n  ExprStmt(\n     Assign(\n       Id((\"x\", ()),\n         {id_resolved=Ref(Some((Global, -1))); id_type=Ref(None); \n          id_const_literal=Ref(None); }), (),\n       Call(IdSpecial((Concat, ())),\n         [Arg(L(String((\"python\", ())))); Arg(L(String((\"is\", ()))));\n          Arg(L(String((\"stupid\", ()))))])))\n\nwhich fails to match a pattern like $X = \"...\".\nThis diff extends #332 by calling eval on all the arguments of the IdSpecial.\nAddresses #325\nTesting:\nulziibayarotgonbaatar@ulziibayars-MacBook-Pro sgrep % ./_build/default/bin/main_sgrep.exe -debug -f tests/python/equivalence_interpolated_str.sgrep tests/python/equivalence_interpolated_str.py -lang py\n\nand\nmake test", "createdAt": "2020-03-25T03:55:08Z", "url": "https://github.com/returntocorp/semgrep/pull/330", "merged": true, "mergeCommit": {"oid": "9098e024d886fec78a6b2c58b9a7ee1c081392df"}, "closed": true, "closedAt": "2020-03-25T21:08:55Z", "author": {"login": "ulziibay"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ_VPAgBqjMxNjIzODI0Mjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRN3q3AH2gAyMzkzMzY5OTg2OjRlYjBiZTlmYWY4ZmMyNWRmODcyYWEyY2RmZDllZDU3NjA3NTI1OTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a4ef92ba245333366697481d17700d0e47a760f3", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/a4ef92ba245333366697481d17700d0e47a760f3", "committedDate": "2020-03-25T03:53:53Z", "message": "Fix python interpolated strs"}, "afterCommit": {"oid": "7b479113fc61aef73d719e744b188f94d1a779a0", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/7b479113fc61aef73d719e744b188f94d1a779a0", "committedDate": "2020-03-25T03:55:48Z", "message": "Fix python interpolated strs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5cb6b6bcfe908ef99a37dab71e6280d79c9424e", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/f5cb6b6bcfe908ef99a37dab71e6280d79c9424e", "committedDate": "2020-03-25T16:35:24Z", "message": "Fix python interpolated strs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzI4NjQ0", "url": "https://github.com/returntocorp/semgrep/pull/330#pullrequestreview-381328644", "createdAt": "2020-03-25T16:36:08Z", "commit": {"oid": "7b479113fc61aef73d719e744b188f94d1a779a0"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNjowOFrOF7j9YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNjowOFrOF7j9YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5OTQ1Ng==", "bodyText": "see my recent eval func in normalize_generic.ml", "url": "https://github.com/returntocorp/semgrep/pull/330#discussion_r397999456", "createdAt": "2020-03-25T16:36:08Z", "author": {"login": "aryx"}, "path": "sgrep/lib/subast_generic.ml", "diffHunk": "@@ -47,6 +46,14 @@ let subexprs_of_expr e =\n   | Container (_, xs) \n     -> unbracket xs\n \n+  | Call(IdSpecial (_, e), args) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b479113fc61aef73d719e744b188f94d1a779a0"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c3f87f82c183e9579ba25808dcc04cf3e1f221c", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/0c3f87f82c183e9579ba25808dcc04cf3e1f221c", "committedDate": "2020-03-25T18:07:40Z", "message": "update to handle multiple arguments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7b479113fc61aef73d719e744b188f94d1a779a0", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/7b479113fc61aef73d719e744b188f94d1a779a0", "committedDate": "2020-03-25T03:55:48Z", "message": "Fix python interpolated strs"}, "afterCommit": {"oid": "0c3f87f82c183e9579ba25808dcc04cf3e1f221c", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/0c3f87f82c183e9579ba25808dcc04cf3e1f221c", "committedDate": "2020-03-25T18:07:40Z", "message": "update to handle multiple arguments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00a5d510dfc324e7e9d5979c8f540ee58c41eb11", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/00a5d510dfc324e7e9d5979c8f540ee58c41eb11", "committedDate": "2020-03-25T18:12:11Z", "message": "add colon for error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f19df34157dd65814f713fd5fb4467c25cf6539", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/1f19df34157dd65814f713fd5fb4467c25cf6539", "committedDate": "2020-03-25T18:25:28Z", "message": "handle empty list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bd2410433f260c377fe2b01882c02188c2bf8900", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/bd2410433f260c377fe2b01882c02188c2bf8900", "committedDate": "2020-03-25T18:49:34Z", "message": "add more test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/c5ce3bd1867010d270f0daa697fc58dc2854ce6c", "committedDate": "2020-03-25T20:06:40Z", "message": "add the failing go test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86f6a72b8df8d66c51d5ab65237d431e04302813", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/86f6a72b8df8d66c51d5ab65237d431e04302813", "committedDate": "2020-03-25T20:00:41Z", "message": "add the failing go test"}, "afterCommit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/c5ce3bd1867010d270f0daa697fc58dc2854ce6c", "committedDate": "2020-03-25T20:06:40Z", "message": "add the failing go test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTA0MzQ5", "url": "https://github.com/returntocorp/semgrep/pull/330#pullrequestreview-381504349", "createdAt": "2020-03-25T20:19:50Z", "commit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTEwNDY2", "url": "https://github.com/returntocorp/semgrep/pull/330#pullrequestreview-381510466", "createdAt": "2020-03-25T20:28:37Z", "commit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoyODozN1rOF7tBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoyODozN1rOF7tBTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0NzkxNw==", "bodyText": "This is wrong.\nThe code should actually make sure all the arguments are an Arg that evaluates to a Some String.\nIf any of the argument is not a string, then the whole thing should fail, this is why\nthere is the | _ -> None case in my code, because if you look at the caller, if it's a None then the match\nwill call fail ()", "url": "https://github.com/returntocorp/semgrep/pull/330#discussion_r398147917", "createdAt": "2020-03-25T20:28:37Z", "author": {"login": "aryx"}, "path": "sgrep/lib/normalize_generic.ml", "diffHunk": "@@ -71,11 +71,21 @@ let rec eval x =\n   | L x -> Some x\n   | Id (_, { id_const_literal = {contents = Some x}; _}) -> Some x\n \n-  | Call(IdSpecial((ArithOp(Plus) | Concat), _), [Arg e1; Arg e2]) ->\n-    (match eval e1, eval e2 with\n-    | Some (String (s1, t1)), Some (String (s2, _t2)) ->\n-          Some (String (s1 ^ s2, t1))\n-    | _ -> None\n+  | Call(IdSpecial((ArithOp(Plus) | Concat), _), args) ->\n+    let literals = args |> Common.map_filter (fun (arg) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a877f9e36b44e3950e4835ffa0228f68355baaeb", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/a877f9e36b44e3950e4835ffa0228f68355baaeb", "committedDate": "2020-03-25T20:44:00Z", "message": "apply only when all are strings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxNTI0ODcw", "url": "https://github.com/returntocorp/semgrep/pull/330#pullrequestreview-381524870", "createdAt": "2020-03-25T20:49:13Z", "commit": {"oid": "a877f9e36b44e3950e4835ffa0228f68355baaeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4eb0be9faf8fc25df872aa2cdfd9ed5760752593", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/4eb0be9faf8fc25df872aa2cdfd9ed5760752593", "committedDate": "2020-03-25T20:52:22Z", "message": "add false positive test"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1091, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}