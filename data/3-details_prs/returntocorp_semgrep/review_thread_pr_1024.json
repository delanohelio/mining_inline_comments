{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0Nzc0OTU1", "number": 1024, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTozODo1NVrOEFwHWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo0MTozMlrOEFwJCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDY2NjQ5OnYy", "diffSide": "RIGHT", "path": "semgrep/Pipfile", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTozODo1NVrOGkIRPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQxNzoxNjo0MVrOGklYIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzQwNw==", "bodyText": "having it in setup.py is sufficient, you can remove this", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r440537407", "createdAt": "2020-06-16T01:38:55Z", "author": {"login": "rcoh"}, "path": "semgrep/Pipfile", "diffHunk": "@@ -13,6 +13,7 @@ appdirs = \"*\"\n \n [packages]\n semgrep = {editable = true,path = \".\"}\n+tqdm = \"*\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDk5NjcyOA==", "bodyText": "Does pipenv install pick up setup.py?", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r440996728", "createdAt": "2020-06-16T16:47:08Z", "author": {"login": "minusworld"}, "path": "semgrep/Pipfile", "diffHunk": "@@ -13,6 +13,7 @@ appdirs = \"*\"\n \n [packages]\n semgrep = {editable = true,path = \".\"}\n+tqdm = \"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzQwNw=="}, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTAxNDMwNw==", "bodyText": "Google says yes \ud83c\udfb1", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r441014307", "createdAt": "2020-06-16T17:16:41Z", "author": {"login": "minusworld"}, "path": "semgrep/Pipfile", "diffHunk": "@@ -13,6 +13,7 @@ appdirs = \"*\"\n \n [packages]\n semgrep = {editable = true,path = \".\"}\n+tqdm = \"*\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzQwNw=="}, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDY2ODExOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/core_runner.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo0MDowMVrOGkISVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo0MDo1MVrOGkITPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzY4Ng==", "bodyText": "might as well put this in util", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r440537686", "createdAt": "2020-06-16T01:40:01Z", "author": {"login": "rcoh"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -35,6 +37,16 @@\n from semgrep.util import partition\n \n \n+def _progress_bar(iterable: List[Rule], file: IO = sys.stderr, **kwargs: Any) -> Any:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzkxNg==", "bodyText": "Also, it isn't iterable[Rule], since this is generally useful it can be Iterable[T]. It should also return Iterable[T]", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r440537916", "createdAt": "2020-06-16T01:40:51Z", "author": {"login": "rcoh"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -35,6 +37,16 @@\n from semgrep.util import partition\n \n \n+def _progress_bar(iterable: List[Rule], file: IO = sys.stderr, **kwargs: Any) -> Any:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzNzY4Ng=="}, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0NDY3MDgyOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/core_runner.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo0MTozMlrOGkIT9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQwMTo0MTozMlrOGkIT9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDUzODEwMA==", "bodyText": "we shouldn't print while the progress bar is running, it will cause the progress bar output to be corrupted. I want tqdm.write I think?", "url": "https://github.com/returntocorp/semgrep/pull/1024#discussion_r440538100", "createdAt": "2020-06-16T01:41:32Z", "author": {"login": "rcoh"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -327,8 +338,10 @@ def _run_rules(\n         debugging_steps_by_rule: Dict[Rule, List[Dict[str, Any]]] = {}\n         all_errors = []\n \n+        # cf. for bar_format: https://tqdm.github.io/docs/tqdm/\n         with tempfile.TemporaryDirectory() as semgrep_core_ast_cache_dir:\n-            for rule in rules:\n+            for rule in _progress_bar(rules, bar_format=\"{l_bar}{bar}|{n_fmt}/{total_fmt}\"):\n+                debug_print(f\"Running rule {rule._raw.get('id')}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa02a7e224ab7ae49f1207b1a0a4a508f74a8088"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4593, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}