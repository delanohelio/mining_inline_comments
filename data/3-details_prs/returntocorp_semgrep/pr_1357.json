{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MzM2Nzg2", "number": 1357, "title": "Move typed metavariables from experimental to official support", "bodyText": "A few things happened here:\n\nI moved the docs from experimental -> official\nI renamed the test files from typed_* -> metavar_typed_* - this helps the \"feature by language\" script detect typed metavariables as a language feature\nI used the typed_comparison test as the canonical example for now by moving them to the typed_metavar.<language> filename. Perhaps comparison isn't the best example, but it's what was in the experimental docs, and it's a good enough start. We can iterate here as we see fit.", "createdAt": "2020-07-24T15:02:30Z", "url": "https://github.com/returntocorp/semgrep/pull/1357", "merged": true, "mergeCommit": {"oid": "b9ac09a6f6a4042c5cf261b79e665612638dbc54"}, "closed": true, "closedAt": "2020-07-27T16:02:00Z", "author": {"login": "mschwager"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc4FT0kgH2gAyNDU2MzM2Nzg2OjJhMzUxNTFhNDFkODhlMjdkMjdkYWEwOTZkYjViMjkyMGIxNDAwMDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc5DlxKAFqTQ1NTg5NDQzNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a35151a41d88e27d27daa096db5b2920b140005", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/2a35151a41d88e27d27daa096db5b2920b140005", "committedDate": "2020-07-24T14:57:01Z", "message": "Move typed metavariables from experimental to official support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0101948194fbf4c6d9e4ec986b177dd666bccee", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/a0101948194fbf4c6d9e4ec986b177dd666bccee", "committedDate": "2020-07-27T13:53:43Z", "message": "Workaround Golang pattern newlines at end of file"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODc1OTM4", "url": "https://github.com/returntocorp/semgrep/pull/1357#pullrequestreview-455875938", "createdAt": "2020-07-27T15:10:20Z", "commit": {"oid": "a0101948194fbf4c6d9e4ec986b177dd666bccee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMDoyMFrOG3m7dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMDoyMFrOG3m7dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MjY3Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Typed metavariables only match a metavariable if it is of a specific type. For\n          \n          \n            \n            Typed metavariables only match a metavariable if it is declared as a specific type. For", "url": "https://github.com/returntocorp/semgrep/pull/1357#discussion_r460962677", "createdAt": "2020-07-27T15:10:20Z", "author": {"login": "nbrahms"}, "path": "docs/pattern-features.md", "diffHunk": "@@ -417,6 +418,76 @@ class Hash {\n }\n ```\n \n+### Typed Metavariables\n+\n+Typed metavariables only match a metavariable if it is of a specific type. For", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0101948194fbf4c6d9e4ec986b177dd666bccee"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODc3MDY2", "url": "https://github.com/returntocorp/semgrep/pull/1357#pullrequestreview-455877066", "createdAt": "2020-07-27T15:11:33Z", "commit": {"oid": "a0101948194fbf4c6d9e4ec986b177dd666bccee"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMTozM1rOG3m-1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNToxMTozM1rOG3m-1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDk2MzU0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Go currently does not recognize the type of all variables when declared on the\n          \n          \n            \n            Semgrep for Go currently does not recognize the type of all variables when declared on the", "url": "https://github.com/returntocorp/semgrep/pull/1357#discussion_r460963543", "createdAt": "2020-07-27T15:11:33Z", "author": {"login": "nbrahms"}, "path": "docs/pattern-features.md", "diffHunk": "@@ -417,6 +418,76 @@ class Hash {\n }\n ```\n \n+### Typed Metavariables\n+\n+Typed metavariables only match a metavariable if it is of a specific type. For\n+example, you may want to specifically check that `==` is never used for\n+strings.\n+\n+**Java:**\n+\n+```text\n+pattern: $X == (String $Y)\n+```\n+\n+```java\n+public class Example {\n+    public int foo(String a, int b) {\n+        // Matched\n+        if (a == \"hello\") {\n+            return 1;\n+        }\n+\n+        // Not matched\n+        if (b == 2) {\n+            return -1;\n+        }\n+    }\n+}\n+```\n+\n+**Go:**\n+\n+```text\n+pattern: \"$X == ($Y : str)\"\n+```\n+\n+```go\n+func main() {\n+    var x string\n+    var y string\n+    var a int\n+    var b int\n+\n+    // Matched\n+    if x == y {\n+       x = y\n+    }\n+\n+    // Not matched\n+    if a == b {\n+       a = b\n+    }\n+}\n+```\n+\n+#### Limitations:\n+\n+Currently, since matching happens within a single file, this is only guaranteed\n+to work for local variables and arguments. Additionally, it only understands\n+types on a shallow level. For example, if you have `int[] A`, it will not\n+recognize `A[0]` as an integer. If you have a class with fields, you will not be\n+able to use typechecking on field accesses, and it will not recognize the\n+class' field as the expected type. Literal types are understood to a limited\n+extent.\n+\n+Go currently does not recognize the type of all variables when declared on the", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a0101948194fbf4c6d9e4ec986b177dd666bccee"}, "originalPosition": 75}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "23150025e1e3571b9772114188226417d4013b3c", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/23150025e1e3571b9772114188226417d4013b3c", "committedDate": "2020-07-27T15:14:19Z", "message": "Update docs/pattern-features.md\n\nCo-authored-by: Nathaniel Brahms <nbrahms@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67e36dde56517128fe20ecff50d045e71f6cdc18", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/67e36dde56517128fe20ecff50d045e71f6cdc18", "committedDate": "2020-07-27T15:14:30Z", "message": "Update docs/pattern-features.md\n\nCo-authored-by: Nathaniel Brahms <nbrahms@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1ODk0NDM0", "url": "https://github.com/returntocorp/semgrep/pull/1357#pullrequestreview-455894434", "createdAt": "2020-07-27T15:30:44Z", "commit": {"oid": "67e36dde56517128fe20ecff50d045e71f6cdc18"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1368, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}