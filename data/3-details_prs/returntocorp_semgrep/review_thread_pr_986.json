{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNzA4MjE0", "number": 986, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MjoyOFrOEFH6wA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MjoyOFrOEFH6wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczODA4MDY0OnYy", "diffSide": "RIGHT", "path": "semgrep-core/tests/js/metavar_import3.sgrep", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNjo0MjoyOFrOGjKu4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQxNTo1MTozOVrOGj4TfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTE4NA==", "bodyText": "Nice! Does this work for anything pulled into the namespace here? In other words, if I have import { func1, func2, func3 } this will detect func1(...), func2(...), or func3(...)? I can imagine user's will want it either way. Is there a way to specify if I only care about func1(...). E.g. something like import { ..., func1, ... } from 'dependency';?", "url": "https://github.com/returntocorp/semgrep/pull/986#discussion_r439529184", "createdAt": "2020-06-12T16:42:28Z", "author": {"login": "mschwager"}, "path": "semgrep-core/tests/js/metavar_import3.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+import { $X } from 'dependency';\n+...\n+$X(...);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fbe2526a9210591288f57701dd25e9c66d1106f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTczMjA2Nw==", "bodyText": "import {a, b, c} from 'X' is transformed internally as import {a} from 'X'; import {b} from 'X';\nso yes doing import {$X} from 'dependency' will have $X match in turn func1, func2, and func3.\nYou can also do import { func1 } from 'dependency' and it will also match, even if it was written as import { func2, func3, func1 }", "url": "https://github.com/returntocorp/semgrep/pull/986#discussion_r439732067", "createdAt": "2020-06-13T11:31:17Z", "author": {"login": "aryx"}, "path": "semgrep-core/tests/js/metavar_import3.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+import { $X } from 'dependency';\n+...\n+$X(...);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTE4NA=="}, "originalCommit": {"oid": "4fbe2526a9210591288f57701dd25e9c66d1106f"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDI3NTgzNw==", "bodyText": "Ahh, great, thanks for the clarification!", "url": "https://github.com/returntocorp/semgrep/pull/986#discussion_r440275837", "createdAt": "2020-06-15T15:51:39Z", "author": {"login": "mschwager"}, "path": "semgrep-core/tests/js/metavar_import3.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+import { $X } from 'dependency';\n+...\n+$X(...);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTUyOTE4NA=="}, "originalCommit": {"oid": "4fbe2526a9210591288f57701dd25e9c66d1106f"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4577, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}