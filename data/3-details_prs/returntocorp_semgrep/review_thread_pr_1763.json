{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1OTEwMTI3", "number": 1763, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNDo1ODoyMlrOEpUHlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNDo1ODoyMlrOEpUHlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNzU2Njk0OnYy", "diffSide": "RIGHT", "path": "semgrep-core/dune", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQwNDo1ODoyMlrOHa6htg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxNzowNzozOFrOHbTlwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk4MzkyNg==", "bodyText": "Why removing 42?", "url": "https://github.com/returntocorp/semgrep/pull/1763#discussion_r497983926", "createdAt": "2020-10-01T04:58:22Z", "author": {"login": "aryx"}, "path": "semgrep-core/dune", "diffHunk": "@@ -1,5 +1,5 @@\n (env\n (dev\n-(flags (:standard -w +42-52-6)))\n+(flags (:standard -w -52-6)))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "68cb9e8b121440fa99e8c60c6b246cd81f9cc575"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODM5NDU2MA==", "bodyText": "This is what warning 42 tells us:\nWarning 42: this use of x relies on type-directed disambiguation, it will not compile with OCaml 4.00 or earlier.\n\nIf 42 is enabled, the code gets really ugly when record fields from multiple modules need to be accessed. This was a problem for this code:\nlet mk_tree_sitter_error (err : Tree_sitter_run.Tree_sitter_error.t) =\n  let start = err.start_pos in\n  let loc = {\n    PI.str = err.substring;\n    charpos = 0; (* fake *)\n    line = start.row + 1;\n    column = start.column;\n    file = err.file.name;\n  } in\n  Error_code.({ loc; typ = ParseError; sev = Error })\nWith warning 42, we'd have to open 2 modules (Tree_sitter_run.Tree_sitter_error and Tree_sitter_run.Src_file), or access fields as err.Tree_sitter_error.substring in combination with let open Tree_sitter_run in, or create short module aliases... even though the compiler and the reader know exactly which type we're dealing with from the type annotation on the function argument.", "url": "https://github.com/returntocorp/semgrep/pull/1763#discussion_r498394560", "createdAt": "2020-10-01T17:07:38Z", "author": {"login": "mjambon"}, "path": "semgrep-core/dune", "diffHunk": "@@ -1,5 +1,5 @@\n (env\n (dev\n-(flags (:standard -w +42-52-6)))\n+(flags (:standard -w -52-6)))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Nzk4MzkyNg=="}, "originalCommit": {"oid": "68cb9e8b121440fa99e8c60c6b246cd81f9cc575"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4883, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}