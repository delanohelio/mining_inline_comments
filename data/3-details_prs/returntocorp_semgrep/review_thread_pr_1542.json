{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzQ1MDQy", "number": 1542, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToxMjowOVrOEaHTtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNDo1MVrOEaHkVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODE4MTY1OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/rule_lang.py", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToxMjowOVrOHDVgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQyMzo1NDoyNlrOHDhEDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2MDExMA==", "bodyText": "Can we store this as a const Python dict somewhere? That way we won't have to read something from disk every time we perform validation or include a file in the package MANIFEST.", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473260110", "createdAt": "2020-08-19T19:12:09Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule_lang.py", "diffHunk": "@@ -328,11 +334,15 @@ def construct_object(self, node: Node, deep: bool = False) -> YamlTree:\n     yaml = YAML()\n     yaml.Constructor = SpanPreservingRuamelConstructor\n     data = yaml.load(StringIO(contents))\n+\n+    schema_path = Path(__file__).parent / \"rule_schema.yaml\"\n+    with schema_path.open() as fd:\n+        validation_schema = yaml.load(fd).unroll()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "759ddf3c9d1520647ee821a0da85df7c37e9c486"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzQ0OTQ4NQ==", "bodyText": "I much prefer using the external file, as we can publish it. I'm happy to load it once, though.", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473449485", "createdAt": "2020-08-19T23:54:26Z", "author": {"login": "nbrahms"}, "path": "semgrep/semgrep/rule_lang.py", "diffHunk": "@@ -328,11 +334,15 @@ def construct_object(self, node: Node, deep: bool = False) -> YamlTree:\n     yaml = YAML()\n     yaml.Constructor = SpanPreservingRuamelConstructor\n     data = yaml.load(StringIO(contents))\n+\n+    schema_path = Path(__file__).parent / \"rule_schema.yaml\"\n+    with schema_path.open() as fd:\n+        validation_schema = yaml.load(fd).unroll()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2MDExMA=="}, "originalCommit": {"oid": "759ddf3c9d1520647ee821a0da85df7c37e9c486"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1ODIyNDIxOnYy", "diffSide": "RIGHT", "path": "semgrep/Pipfile", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNDo1MVrOHDV6ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNDo1MVrOHDV6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2Njg1MQ==", "bodyText": "I believe we include dependencies in setup.py then rely on path = \".\" below for local installation.", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473266851", "createdAt": "2020-08-19T19:24:51Z", "author": {"login": "mschwager"}, "path": "semgrep/Pipfile", "diffHunk": "@@ -12,6 +12,7 @@ appdirs = \"*\"\n pytest-xdist = \"*\"\n \n [packages]\n+jsonschema = \"~=3.2.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab690f1de5fd74d133b9c1bdb4daf6d654dd6460"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4912, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}