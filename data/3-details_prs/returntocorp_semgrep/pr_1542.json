{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMzQ1MDQy", "number": 1542, "title": "Use jsonschema for rule config validation", "bodyText": "Previously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\nAdvantages:\n\nCentralized schema definition using a publicly documented definition\nlanguage\nProperly handles recursion in patterns, etc.\nUniform errors\nAdds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n\nAdds an external dependency to our application", "createdAt": "2020-08-19T18:42:50Z", "url": "https://github.com/returntocorp/semgrep/pull/1542", "merged": true, "mergeCommit": {"oid": "b552c0c6c33214fe521761a856125eaea5cbfe4b"}, "closed": true, "closedAt": "2020-08-21T00:10:40Z", "author": {"login": "nbrahms"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAgivygFqTQ3MDc2MDY3NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA4FM4AFqTQ3MjAzMTQ1Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzYwNjc0", "url": "https://github.com/returntocorp/semgrep/pull/1542#pullrequestreview-470760674", "createdAt": "2020-08-19T19:12:08Z", "commit": {"oid": "759ddf3c9d1520647ee821a0da85df7c37e9c486"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToxMjowOVrOHDVgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToxMjowOVrOHDVgTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2MDExMA==", "bodyText": "Can we store this as a const Python dict somewhere? That way we won't have to read something from disk every time we perform validation or include a file in the package MANIFEST.", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473260110", "createdAt": "2020-08-19T19:12:09Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/rule_lang.py", "diffHunk": "@@ -328,11 +334,15 @@ def construct_object(self, node: Node, deep: bool = False) -> YamlTree:\n     yaml = YAML()\n     yaml.Constructor = SpanPreservingRuamelConstructor\n     data = yaml.load(StringIO(contents))\n+\n+    schema_path = Path(__file__).parent / \"rule_schema.yaml\"\n+    with schema_path.open() as fd:\n+        validation_schema = yaml.load(fd).unroll()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "759ddf3c9d1520647ee821a0da85df7c37e9c486"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwNzY5MTA1", "url": "https://github.com/returntocorp/semgrep/pull/1542#pullrequestreview-470769105", "createdAt": "2020-08-19T19:24:51Z", "commit": {"oid": "ab690f1de5fd74d133b9c1bdb4daf6d654dd6460"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNDo1MVrOHDV6ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxOToyNDo1MVrOHDV6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzI2Njg1MQ==", "bodyText": "I believe we include dependencies in setup.py then rely on path = \".\" below for local installation.", "url": "https://github.com/returntocorp/semgrep/pull/1542#discussion_r473266851", "createdAt": "2020-08-19T19:24:51Z", "author": {"login": "mschwager"}, "path": "semgrep/Pipfile", "diffHunk": "@@ -12,6 +12,7 @@ appdirs = \"*\"\n pytest-xdist = \"*\"\n \n [packages]\n+jsonschema = \"~=3.2.0\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab690f1de5fd74d133b9c1bdb4daf6d654dd6460"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e23fe2371b58bd44809d3e2b0f23b273a7a405d7", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/e23fe2371b58bd44809d3e2b0f23b273a7a405d7", "committedDate": "2020-08-19T19:50:11Z", "message": "fixup! Use jsonschema for rule config validation"}, "afterCommit": {"oid": "252519841f177737be16aa8d843a01e7c45f1db0", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/252519841f177737be16aa8d843a01e7c45f1db0", "committedDate": "2020-08-19T19:55:00Z", "message": "Use jsonschema for rule config validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "252519841f177737be16aa8d843a01e7c45f1db0", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/252519841f177737be16aa8d843a01e7c45f1db0", "committedDate": "2020-08-19T19:55:00Z", "message": "Use jsonschema for rule config validation"}, "afterCommit": {"oid": "5780b34f23eda9b0e88c00f5c97fdfb6047799c2", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/5780b34f23eda9b0e88c00f5c97fdfb6047799c2", "committedDate": "2020-08-19T23:47:52Z", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application\n- Due to an issue in the python jsonschema library, if-then-else is not\n  properly implemented, preventing correct toggling of taint on the\n  mode key\n- When multiple possible schemata could match, and all fail validation,\n  jsonschema only reports the first option as a failure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ab825988ad4e309aa3da827f769f6507eb858e0", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/2ab825988ad4e309aa3da827f769f6507eb858e0", "committedDate": "2020-08-20T01:33:11Z", "message": "fixup! Use jsonschema for rule config validation"}, "afterCommit": {"oid": "ac2af64e2e5622f692e26458481a3c5d2183eeb9", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/ac2af64e2e5622f692e26458481a3c5d2183eeb9", "committedDate": "2020-08-20T01:38:07Z", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application\n- Due to an issue in the python jsonschema library, if-then-else is not\n  properly implemented, preventing correct toggling of taint on the\n  mode key\n- When multiple possible schemata could match, and all fail validation,\n  jsonschema only reports the first option as a failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a674f4dc60493f3757300c3b123c275ac5b64034", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/a674f4dc60493f3757300c3b123c275ac5b64034", "committedDate": "2020-08-20T02:18:05Z", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "356889afdf57969ef824755f6545054f58b8d1a4", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/356889afdf57969ef824755f6545054f58b8d1a4", "committedDate": "2020-08-20T02:12:13Z", "message": "fixup! Use jsonschema for rule config validation"}, "afterCommit": {"oid": "a674f4dc60493f3757300c3b123c275ac5b64034", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/a674f4dc60493f3757300c3b123c275ac5b64034", "committedDate": "2020-08-20T02:18:05Z", "message": "Use jsonschema for rule config validation\n\nPreviously we used an ersatz schema validation system scattered\nthroughout different parts of our code base, and requiring significant\nmanual work to update.\n\nHere we substitute in jsonschema as a validation system. This should\nallow us to catch more problems (e.g. the motivating example in #1460).\n\nAdvantages:\n- Centralized schema definition using a publicly documented definition\n  language\n- Properly handles recursion in patterns, etc.\n- Uniform errors\n- Adds support for previously missing items (e.g. 'metavariable-regex')\n\nDisadvantages:\n- Adds an external dependency to our application"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b81f250847054ba413170af0a32d621bb408fbb6", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/b81f250847054ba413170af0a32d621bb408fbb6", "committedDate": "2020-08-20T15:04:59Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bc8a743b2dda4b8fba874bcb941e6c9eff9754d", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/0bc8a743b2dda4b8fba874bcb941e6c9eff9754d", "committedDate": "2020-08-20T15:05:57Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "024afd1485803569b7bbf92626291a91f833f63b", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/024afd1485803569b7bbf92626291a91f833f63b", "committedDate": "2020-08-20T18:37:39Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "584913316787906ccb3c76d8d7f41594d4c9a00c", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/584913316787906ccb3c76d8d7f41594d4c9a00c", "committedDate": "2020-08-20T19:49:31Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5bb7908c5279ec84d06432902c0f7eec0085ef6", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/c5bb7908c5279ec84d06432902c0f7eec0085ef6", "committedDate": "2020-08-20T21:43:52Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78d69b0dfd4c91a30a46b164fbb6b8e898480e94", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/78d69b0dfd4c91a30a46b164fbb6b8e898480e94", "committedDate": "2020-08-20T21:42:32Z", "message": "fixup! Use jsonschema for rule config validation"}, "afterCommit": {"oid": "c5bb7908c5279ec84d06432902c0f7eec0085ef6", "author": {"user": {"login": "nbrahms", "name": "Nathaniel Brahms"}}, "url": "https://github.com/returntocorp/semgrep/commit/c5bb7908c5279ec84d06432902c0f7eec0085ef6", "committedDate": "2020-08-20T21:43:52Z", "message": "fixup! Use jsonschema for rule config validation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcyMDMxNDU2", "url": "https://github.com/returntocorp/semgrep/pull/1542#pullrequestreview-472031456", "createdAt": "2020-08-20T22:37:36Z", "commit": {"oid": "c5bb7908c5279ec84d06432902c0f7eec0085ef6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1315, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}