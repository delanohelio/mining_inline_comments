{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1ODg2Mjcz", "number": 347, "title": "[Python] f-string with const propagation", "bodyText": "Adds tests for python f-string with constant propagation. This clarifies  and closes #326\nTesting:\nmake test", "createdAt": "2020-03-30T20:33:46Z", "url": "https://github.com/returntocorp/semgrep/pull/347", "merged": true, "mergeCommit": {"oid": "e775c1df4f036783f0cbbb1097ad0641578c4358"}, "closed": true, "closedAt": "2020-04-01T04:07:44Z", "author": {"login": "ulziibay"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcS1prugFqTM4NDI1NTMyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcTKMyuABqjMxODUyODQ1ODA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0MjU1MzIw", "url": "https://github.com/returntocorp/semgrep/pull/347#pullrequestreview-384255320", "createdAt": "2020-03-30T21:46:32Z", "commit": {"oid": "62369000d104e041be230b91388add96872e0a81"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0NjozM1rOF99cHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMFQyMTo0NjozM1rOF99cHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDUxNDA3OA==", "bodyText": "Shouldn't this match your pattern?", "url": "https://github.com/returntocorp/semgrep/pull/347#discussion_r400514078", "createdAt": "2020-03-30T21:46:33Z", "author": {"login": "nbrahms"}, "path": "sgrep/tests/python/equivalence_f_string.py", "diffHunk": "@@ -0,0 +1,30 @@\n+def foo1():\n+  # ERROR:\n+  w = \"foo\"\n+  query = f\"hello {w} hel\"\n+\n+def foo2():\n+  # ERROR:\n+  ww = \"bar\"\n+  query = f\"ASD{ww}ASASD\"\n+\n+def foo3():\n+  # OK:\n+  www = \"bar\"\n+  query = f\"SELECT {www}\"\n+\n+def foo4():\n+  # OK:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62369000d104e041be230b91388add96872e0a81"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MDkzMzgw", "url": "https://github.com/returntocorp/semgrep/pull/347#pullrequestreview-385093380", "createdAt": "2020-03-31T20:49:13Z", "commit": {"oid": "1aa7a8957c2102ef28c6ca1e851db758b64b17a6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0OToxM1rOF-nrVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMDo0OToxM1rOF-nrVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIwNjEwMg==", "bodyText": "maybe add a comment here saying interpolated strings are transformed in Call(Spedial(Concat, ...)\nand we want patterns like f\"...{$X}...\", which are expanded to Call(Special(Concat, [L\"...\"; Id \"$X\"; L\"...\"])) to\nmatch concrete code like f\"foo{a}\"", "url": "https://github.com/returntocorp/semgrep/pull/347#discussion_r401206102", "createdAt": "2020-03-31T20:49:13Z", "author": {"login": "aryx"}, "path": "sgrep/lib/generic_vs_generic.ml", "diffHunk": "@@ -1033,6 +1032,21 @@ and m_list__m_argument (xsa: A.argument list) (xsb: A.argument list) =\n       (* can match more *)\n       (m_list__m_argument ((A.Arg (A.Ellipsis i))::xsa) xsb)\n \n+  (* dots: '...', can also match no argument *)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1aa7a8957c2102ef28c6ca1e851db758b64b17a6"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTIwMjM5", "url": "https://github.com/returntocorp/semgrep/pull/347#pullrequestreview-385120239", "createdAt": "2020-03-31T21:32:29Z", "commit": {"oid": "2b2beff75f77db60f771352d9f5a3eeade2abb14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTozMjoyOVrOF-pBEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTozMjoyOVrOF-pBEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyODA1MQ==", "bodyText": "do we still need # TODO here?", "url": "https://github.com/returntocorp/semgrep/pull/347#discussion_r401228051", "createdAt": "2020-03-31T21:32:29Z", "author": {"login": "nbrahms"}, "path": "sgrep/tests/python/equivalence_f_string.py", "diffHunk": "@@ -0,0 +1,32 @@\n+def foo1():\n+  # ERROR:\n+  w = \"foo\"\n+  query = f\"hello {w}\"\n+\n+def foo2():\n+  # ERROR:\n+  ww = \"bar\"\n+  query = f\"ASD{ww}\"\n+\n+def foo3():\n+  # ERROR:\n+  www = \"bar\"\n+  query = f\"SELECT {www}\"\n+\n+def foo4():\n+  # TODO:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2beff75f77db60f771352d9f5a3eeade2abb14"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1MTIwODg2", "url": "https://github.com/returntocorp/semgrep/pull/347#pullrequestreview-385120886", "createdAt": "2020-03-31T21:33:35Z", "commit": {"oid": "2b2beff75f77db60f771352d9f5a3eeade2abb14"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTozMzozNVrOF-pDJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQyMTozMzozNVrOF-pDJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTIyODU4Mw==", "bodyText": "Also it seems like this should match", "url": "https://github.com/returntocorp/semgrep/pull/347#discussion_r401228583", "createdAt": "2020-03-31T21:33:35Z", "author": {"login": "nbrahms"}, "path": "sgrep/tests/python/equivalence_f_string_2.py", "diffHunk": "@@ -0,0 +1,27 @@\n+def foo1():\n+  # ERROR:\n+  select = \"select * \"\n+  query = f\"{select} from foo\"\n+\n+def foo2():\n+  # ERROR:\n+  select = \"select * \"\n+  name = \"foo\"\n+  query = f\"{select} from foo \" + f\"where name={name}\"\n+\n+def foo2a():\n+  # TODO:\n+  # OK:\n+  select = \"select * \"\n+  name = \"foo\"\n+  query = f\"{select} from foo where name={name}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2beff75f77db60f771352d9f5a3eeade2abb14"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b4d48b9549955efcf002414f04556ecb9270cf9", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/2b4d48b9549955efcf002414f04556ecb9270cf9", "committedDate": "2020-03-31T21:43:29Z", "message": "F-string with const propagation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e221a3a430bde6bf4c44c7444eba0181c6254b69", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/e221a3a430bde6bf4c44c7444eba0181c6254b69", "committedDate": "2020-03-31T21:43:29Z", "message": "clarify test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "68636b044d1a2df65d806886071bdde7cfdfde8b", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/68636b044d1a2df65d806886071bdde7cfdfde8b", "committedDate": "2020-03-31T21:43:29Z", "message": "complex f-string test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8dd0aaa21057dde00f4f18eeb35081fbfbe94f6", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/b8dd0aaa21057dde00f4f18eeb35081fbfbe94f6", "committedDate": "2020-03-31T21:43:29Z", "message": "fix parsing issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0448c466d56af3eca7a560aa2b61c34baa0c453", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/c0448c466d56af3eca7a560aa2b61c34baa0c453", "committedDate": "2020-03-31T21:43:29Z", "message": "make ... match 0 or more"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc265779a40e7d4414a2ca246a5ab728ca09817", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/6bc265779a40e7d4414a2ca246a5ab728ca09817", "committedDate": "2020-03-31T21:43:29Z", "message": "verbose comment"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b2beff75f77db60f771352d9f5a3eeade2abb14", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/2b2beff75f77db60f771352d9f5a3eeade2abb14", "committedDate": "2020-03-31T20:57:23Z", "message": "verbose comment"}, "afterCommit": {"oid": "6bc265779a40e7d4414a2ca246a5ab728ca09817", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/6bc265779a40e7d4414a2ca246a5ab728ca09817", "committedDate": "2020-03-31T21:43:29Z", "message": "verbose comment"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1093, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}