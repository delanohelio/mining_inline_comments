{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4MDU4NTEw", "number": 559, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozNTo1OVrOD1ZMDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozNTo1OVrOD1ZMDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzEzODA1OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxNzozNTo1OVrOGK0D5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QxOTo1MDowMVrOGK5Wiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTkwOA==", "bodyText": "I think this works fine but how about sending people to https://semgrep.live/r/ ? Just seems easier to browse than the GitHub file navigation IMO.", "url": "https://github.com/returntocorp/semgrep/pull/559#discussion_r413991908", "createdAt": "2020-04-23T17:35:59Z", "author": {"login": "pabloest"}, "path": "README.md", "diffHunk": "@@ -28,6 +28,8 @@ Example patterns:\n | `$ELEMENT.innerHTML` | ``el.innerHTML = \"<img src='x' onerror='alert(`XSS`)'>\";`` |\n | `$TOKEN.SignedString([]byte(\"...\"))` | `ss, err := token.SignedString([]byte(\"HARDCODED KEY\"))` |\n \n+\u2192 [see more example patterns in the semgrep-rules repository](https://github.com/returntocorp/semgrep-rules)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "335965a6c2cbad1d9e9f573bc9076108641da1d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MzgwNQ==", "bodyText": "@DrewDennison would have to comment--AFAIK that's not ready to be advertised yet?", "url": "https://github.com/returntocorp/semgrep/pull/559#discussion_r413993805", "createdAt": "2020-04-23T17:38:56Z", "author": {"login": "ievans"}, "path": "README.md", "diffHunk": "@@ -28,6 +28,8 @@ Example patterns:\n | `$ELEMENT.innerHTML` | ``el.innerHTML = \"<img src='x' onerror='alert(`XSS`)'>\";`` |\n | `$TOKEN.SignedString([]byte(\"...\"))` | `ss, err := token.SignedString([]byte(\"HARDCODED KEY\"))` |\n \n+\u2192 [see more example patterns in the semgrep-rules repository](https://github.com/returntocorp/semgrep-rules)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTkwOA=="}, "originalCommit": {"oid": "335965a6c2cbad1d9e9f573bc9076108641da1d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDAzMTU0OQ==", "bodyText": "@pabloest I think https://semgrep.live/r/ is still too functional without enough context and explanation for direct linking. I would like to hustle this weekend on making it so it's ready and I know Luke has been asking for a new design on that page. If you want to spec it out with me, that would be great", "url": "https://github.com/returntocorp/semgrep/pull/559#discussion_r414031549", "createdAt": "2020-04-23T18:35:18Z", "author": {"login": "DrewDennison"}, "path": "README.md", "diffHunk": "@@ -28,6 +28,8 @@ Example patterns:\n | `$ELEMENT.innerHTML` | ``el.innerHTML = \"<img src='x' onerror='alert(`XSS`)'>\";`` |\n | `$TOKEN.SignedString([]byte(\"...\"))` | `ss, err := token.SignedString([]byte(\"HARDCODED KEY\"))` |\n \n+\u2192 [see more example patterns in the semgrep-rules repository](https://github.com/returntocorp/semgrep-rules)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTkwOA=="}, "originalCommit": {"oid": "335965a6c2cbad1d9e9f573bc9076108641da1d7"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA3ODYwMw==", "bodyText": "Happy to help, @DrewDennison. We can chat off-thread.", "url": "https://github.com/returntocorp/semgrep/pull/559#discussion_r414078603", "createdAt": "2020-04-23T19:50:01Z", "author": {"login": "pabloest"}, "path": "README.md", "diffHunk": "@@ -28,6 +28,8 @@ Example patterns:\n | `$ELEMENT.innerHTML` | ``el.innerHTML = \"<img src='x' onerror='alert(`XSS`)'>\";`` |\n | `$TOKEN.SignedString([]byte(\"...\"))` | `ss, err := token.SignedString([]byte(\"HARDCODED KEY\"))` |\n \n+\u2192 [see more example patterns in the semgrep-rules repository](https://github.com/returntocorp/semgrep-rules)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzk5MTkwOA=="}, "originalCommit": {"oid": "335965a6c2cbad1d9e9f573bc9076108641da1d7"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4758, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}