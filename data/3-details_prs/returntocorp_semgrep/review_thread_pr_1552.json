{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcxMTY4NzQz", "number": 1552, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODozOTowNFrOEaqMvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODo0NDo1NVrOEaqVRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2Mzg5ODIzOnYy", "diffSide": "RIGHT", "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODozOTowNFrOHEOeUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQyMDozMzozNVrOHESURQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ==", "bodyText": "do we need to comment this out?", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474193489", "createdAt": "2020-08-20T18:39:04Z", "author": {"login": "colleend"}, "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "diffHunk": "@@ -1758,10 +1758,13 @@ let parse file =\n     program env ast\n   with\n     (Failure \"not implemented\") as exn ->\n-      let s = Printexc.get_backtrace () in\n-      pr2 \"Some constructs are not handled yet\";\n-      pr2 \"CST was:\";\n-      CST.dump_tree ast;\n-      pr2 \"Original backtrace:\";\n-      pr2 s;\n+      (* This debugging output is not JSON and breaks core output", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NzUxMg==", "bodyText": "But it is printed on stderr. It should not matter. The json is printed on stdout", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474197512", "createdAt": "2020-08-20T18:46:05Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "diffHunk": "@@ -1758,10 +1758,13 @@ let parse file =\n     program env ast\n   with\n     (Failure \"not implemented\") as exn ->\n-      let s = Printexc.get_backtrace () in\n-      pr2 \"Some constructs are not handled yet\";\n-      pr2 \"CST was:\";\n-      CST.dump_tree ast;\n-      pr2 \"Original backtrace:\";\n-      pr2 s;\n+      (* This debugging output is not JSON and breaks core output", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5ODM3MA==", "bodyText": "Commenting it out fixes the bug, so \ud83e\udd37", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474198370", "createdAt": "2020-08-20T18:47:44Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "diffHunk": "@@ -1758,10 +1758,13 @@ let parse file =\n     program env ast\n   with\n     (Failure \"not implemented\") as exn ->\n-      let s = Printexc.get_backtrace () in\n-      pr2 \"Some constructs are not handled yet\";\n-      pr2 \"CST was:\";\n-      CST.dump_tree ast;\n-      pr2 \"Original backtrace:\";\n-      pr2 s;\n+      (* This debugging output is not JSON and breaks core output", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDI1NjQ1Mw==", "bodyText": "@aryx when you get back to it, you probably should check if by any chance semgrep merges semgrep-core's stderr into stdout.", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474256453", "createdAt": "2020-08-20T20:33:35Z", "author": {"login": "mjambon"}, "path": "semgrep-core/parsing/Parse_javascript_tree_sitter.ml", "diffHunk": "@@ -1758,10 +1758,13 @@ let parse file =\n     program env ast\n   with\n     (Failure \"not implemented\") as exn ->\n-      let s = Printexc.get_backtrace () in\n-      pr2 \"Some constructs are not handled yet\";\n-      pr2 \"CST was:\";\n-      CST.dump_tree ast;\n-      pr2 \"Original backtrace:\";\n-      pr2 s;\n+      (* This debugging output is not JSON and breaks core output", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5MzQ4OQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzkyMDA3OnYy", "diffSide": "RIGHT", "path": "semgrep-core/parsing/Parse_code.ml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxODo0NDo1NVrOHEOrnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNzoyODoyM1rOHEfP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ==", "bodyText": "We want to try treesitter if there is any exn in the pfff parser (lexer exn, parse error) or when we have -forcetreesitter", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474196895", "createdAt": "2020-08-20T18:44:55Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5NzExOQ==", "bodyText": "So it should remain _exn here", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474197119", "createdAt": "2020-08-20T18:45:21Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIwMTg5NA==", "bodyText": "You and @mjambon disagree here...", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474201894", "createdAt": "2020-08-20T18:54:22Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDIxMzY1NA==", "bodyText": "I suggest being explicit about the two meanings here:\n\nis it a force_tree_sitter request?\nis it an error and we're falling back to the tree-sitter parser?\n\nI also suggest printing any exception caught with a catch-all (_exn) so we know what went wrong.", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474213654", "createdAt": "2020-08-20T19:17:11Z", "author": {"login": "mjambon"}, "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ2ODMxNg==", "bodyText": "The idea is to not print what went wrong when the error is a parse error in the pfff parser.\nWe should not bother the user with that. We first try with pfff, and if it fails we try with tree-sitter (or the reverse, it depends on the language).\nBut I'll change the option to -tree_sitter_only, maybe it's clearer.", "url": "https://github.com/returntocorp/semgrep/pull/1552#discussion_r474468316", "createdAt": "2020-08-21T07:28:23Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_code.ml", "diffHunk": "@@ -76,7 +78,7 @@ let just_parse_with_lang lang file =\n               Ast_js_build.program cst\n             )\n             file\n-        with _exn -> Parse_javascript_tree_sitter.parse file\n+        with ForceTreeSitter -> Parse_javascript_tree_sitter.parse file", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE5Njg5NQ=="}, "originalCommit": {"oid": "2436f382e54aaa04c099800d3dad5cf24b887ba9"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4915, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}