{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5ODQzMTM2", "number": 780, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo1NToxMlrOD9z0RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo1NToxMlrOD9z0RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTM4NjkyOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/test.py", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo1NToxMlrOGXhlpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNzoyMDo0NlrOGXqsJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDc0Mw==", "bodyText": "Is there any way we can just grab the argparse defaults here? Currently all these values are duplicated between semgrep.cli.cli and here. I always forget to update this spot when adding a new argument and am reminded to duplicate it here.", "url": "https://github.com/returntocorp/semgrep/pull/780#discussion_r427320743", "createdAt": "2020-05-19T13:55:12Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/test.py", "diffHunk": "@@ -169,35 +169,30 @@ def confusion_matrix_to_string(confusion: List[int]) -> str:\n \n \n def invoke_semgrep(\n-    verbose: bool, strict: bool, test_files: List[Path], config: Path, unsafe: bool\n+    strict: bool, test_files: List[Path], config: Path, unsafe: bool\n ) -> Any:\n     return json.loads(\n         semgrepmain(\n-            argparse.Namespace(\n-                verbose=verbose,\n-                strict=strict,\n-                dump_ast=False,\n-                no_rewrite_rule_ids=True,\n-                dangerously_allow_arbitrary_code_execution_from_rules=unsafe,\n-                config=str(config),\n-                quiet=True,\n-                precommit=False,\n-                generate_config=False,\n-                pattern=None,\n-                validate=False,\n-                json=True,\n-                sarif=False,\n-                exclude_tests=False,\n-                jobs=1,\n-                exclude=[],\n-                include=[],\n-                exclude_dir=[],\n-                include_dir=[],\n-                output=None,\n-                error=False,\n-                autofix=False,\n-                target=[str(t) for t in test_files],\n-            )\n+            target=[str(t) for t in test_files],", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b729ca146ca9a2b3f063ed97ec419d69d9125d92"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2MDMxNw==", "bodyText": "With this PR you actually get alerted on missing args with mypy.", "url": "https://github.com/returntocorp/semgrep/pull/780#discussion_r427460317", "createdAt": "2020-05-19T17:04:58Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/test.py", "diffHunk": "@@ -169,35 +169,30 @@ def confusion_matrix_to_string(confusion: List[int]) -> str:\n \n \n def invoke_semgrep(\n-    verbose: bool, strict: bool, test_files: List[Path], config: Path, unsafe: bool\n+    strict: bool, test_files: List[Path], config: Path, unsafe: bool\n ) -> Any:\n     return json.loads(\n         semgrepmain(\n-            argparse.Namespace(\n-                verbose=verbose,\n-                strict=strict,\n-                dump_ast=False,\n-                no_rewrite_rule_ids=True,\n-                dangerously_allow_arbitrary_code_execution_from_rules=unsafe,\n-                config=str(config),\n-                quiet=True,\n-                precommit=False,\n-                generate_config=False,\n-                pattern=None,\n-                validate=False,\n-                json=True,\n-                sarif=False,\n-                exclude_tests=False,\n-                jobs=1,\n-                exclude=[],\n-                include=[],\n-                exclude_dir=[],\n-                include_dir=[],\n-                output=None,\n-                error=False,\n-                autofix=False,\n-                target=[str(t) for t in test_files],\n-            )\n+            target=[str(t) for t in test_files],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDc0Mw=="}, "originalCommit": {"oid": "b729ca146ca9a2b3f063ed97ec419d69d9125d92"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ2OTg2MQ==", "bodyText": "Probably going to switch over to using click in the near future so that should remove the duplication so fine with mypy checked duplication for now.", "url": "https://github.com/returntocorp/semgrep/pull/780#discussion_r427469861", "createdAt": "2020-05-19T17:20:46Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/test.py", "diffHunk": "@@ -169,35 +169,30 @@ def confusion_matrix_to_string(confusion: List[int]) -> str:\n \n \n def invoke_semgrep(\n-    verbose: bool, strict: bool, test_files: List[Path], config: Path, unsafe: bool\n+    strict: bool, test_files: List[Path], config: Path, unsafe: bool\n ) -> Any:\n     return json.loads(\n         semgrepmain(\n-            argparse.Namespace(\n-                verbose=verbose,\n-                strict=strict,\n-                dump_ast=False,\n-                no_rewrite_rule_ids=True,\n-                dangerously_allow_arbitrary_code_execution_from_rules=unsafe,\n-                config=str(config),\n-                quiet=True,\n-                precommit=False,\n-                generate_config=False,\n-                pattern=None,\n-                validate=False,\n-                json=True,\n-                sarif=False,\n-                exclude_tests=False,\n-                jobs=1,\n-                exclude=[],\n-                include=[],\n-                exclude_dir=[],\n-                include_dir=[],\n-                output=None,\n-                error=False,\n-                autofix=False,\n-                target=[str(t) for t in test_files],\n-            )\n+            target=[str(t) for t in test_files],", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyMDc0Mw=="}, "originalCommit": {"oid": "b729ca146ca9a2b3f063ed97ec419d69d9125d92"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4714, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}