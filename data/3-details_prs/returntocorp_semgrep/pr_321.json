{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjkwNTg2", "number": 321, "title": "Update config.md", "bodyText": "", "createdAt": "2020-03-19T23:54:42Z", "url": "https://github.com/returntocorp/semgrep/pull/321", "merged": true, "mergeCommit": {"oid": "67cb00d415edcc9188bba55bd8eee45f4c75cabf"}, "closed": true, "closedAt": "2020-03-25T22:13:48Z", "author": {"login": "ievans"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPUt7mgH2gAyMzkxMjkwNTg2OjRhMzVjZTU4MjNlYzVjZWFlM2UyZWNjYjMxNmExNTdlMDMxM2M5MWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcROyP4gH2gAyMzkxMjkwNTg2OjEyNzVlOGVkZjlmY2VkOGJhMzUzYjAwNTI2YzBhMTIzZTM4ZGI3Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4a35ce5823ec5ceae3e2eccb316a157e0313c91d", "author": {"user": {"login": "ievans", "name": "Isaac Evans"}}, "url": "https://github.com/returntocorp/semgrep/commit/4a35ce5823ec5ceae3e2eccb316a157e0313c91d", "committedDate": "2020-03-19T23:43:13Z", "message": "Update config.md"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4MTczNTkw", "url": "https://github.com/returntocorp/semgrep/pull/321#pullrequestreview-378173590", "createdAt": "2020-03-20T00:09:01Z", "commit": {"oid": "4a35ce5823ec5ceae3e2eccb316a157e0313c91d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDowOTowMVrOF5Eb9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMFQwMDoxMjowMVrOF5EetQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4NTg0NQ==", "bodyText": "This config doc does more than provide examples: it also defines/describes operators, fields, and their composition. Thus I\u2019d suggest something like:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This document provides examples for the .yaml format for specifying rules to sgrep. It does not cover the patterns themselves; for [the pattern syntax see patterns.md](patterns.md)\n          \n          \n            \n            This document describes sgrep rule fields and provides rule examples. It does not cover the patterns themselves; for [the pattern syntax see patterns.md](patterns.md)\n          \n      \n    \n    \n  \n\nI wonder if the content for patterns.md should be merged into this doc? I see that patterns.md is rather long and that might be a challenge, but they seem nearly inseparable (can\u2019t have a rule without a pattern, and you can\u2019t have a pattern without a rule).", "url": "https://github.com/returntocorp/semgrep/pull/321#discussion_r395385845", "createdAt": "2020-03-20T00:09:01Z", "author": {"login": "pabloest"}, "path": "docs/config.md", "diffHunk": "@@ -1,6 +1,6 @@\n ## Config format\n \n-This document provides examples for the .yaml format for specifying rules to sgrep. It does not cover the patterns themselves; for information on the query sytnax see [patterns.md](patterns.md)\n+This document provides examples for the .yaml format for specifying rules to sgrep. It does not cover the patterns themselves; for [the pattern syntax see patterns.md](patterns.md)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a35ce5823ec5ceae3e2eccb316a157e0313c91d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4NjE0Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            If you want run these rules or ship them to your team, rather than write them, check out the easy-to-use [bento.dev](https://bento.dev)\n          \n          \n            \n            If instead of writing rules, you want run them, ship them to your team, or enforce them in CI/CD, check out the easy-to-use [bento.dev](https://bento.dev)\n          \n      \n    \n    \n  \n\ncheck my commas here, not quite sure if I got them right", "url": "https://github.com/returntocorp/semgrep/pull/321#discussion_r395386143", "createdAt": "2020-03-20T00:10:16Z", "author": {"login": "pabloest"}, "path": "docs/config.md", "diffHunk": "@@ -1,6 +1,6 @@\n ## Config format\n \n-This document provides examples for the .yaml format for specifying rules to sgrep. It does not cover the patterns themselves; for information on the query sytnax see [patterns.md](patterns.md)\n+This document provides examples for the .yaml format for specifying rules to sgrep. It does not cover the patterns themselves; for [the pattern syntax see patterns.md](patterns.md)\n \n If you want run these rules or ship them to your team, rather than write them, check out the easy-to-use [bento.dev](https://bento.dev)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a35ce5823ec5ceae3e2eccb316a157e0313c91d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTM4NjU0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            When invoked with `sgrep -f myconfig.yaml project/`, this rule will run on Python files inside `project/` and output the rule `id` \"eqeq-is-bad\" along with the `message` and the line and column range the match occurred on. Given a line inside a Python file with `1 == 1`, sgrep will output the message: \"1 == 1 is always true!\"\n          \n          \n            \n            When invoked with `sgrep -f myconfig.yaml project/`, this rule will run on Python files inside `project/` and outputs the rule `id` \"eqeq-is-bad\" along with the `message` and the line and column range the match occurred on. For example, given a line inside a Python file with `1 == 1`, sgrep will output the message: \"1 == 1 is always true!\"", "url": "https://github.com/returntocorp/semgrep/pull/321#discussion_r395386549", "createdAt": "2020-03-20T00:12:01Z", "author": {"login": "pabloest"}, "path": "docs/config.md", "diffHunk": "@@ -15,7 +15,7 @@ rules:\n     severity: ERROR\n ```\n \n-This is a minimal rule. It will be run on any Python code, and will output the rule `id` \"eqeq-is-bad\" along with the `message` and the line and column range the match occurred on. So it will match code like `1 == 1` and output the message: \"Dude, 1 == 1 is always true!\"\n+When invoked with `sgrep -f myconfig.yaml project/`, this rule will run on Python files inside `project/` and output the rule `id` \"eqeq-is-bad\" along with the `message` and the line and column range the match occurred on. Given a line inside a Python file with `1 == 1`, sgrep will output the message: \"1 == 1 is always true!\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4a35ce5823ec5ceae3e2eccb316a157e0313c91d"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c2b0537f255662f74a6fb40c34ee689299bce36f", "author": {"user": {"login": "ievans", "name": "Isaac Evans"}}, "url": "https://github.com/returntocorp/semgrep/commit/c2b0537f255662f74a6fb40c34ee689299bce36f", "committedDate": "2020-03-25T21:55:54Z", "message": "Update docs/config.md\n\nCo-Authored-By: Pablo Estrada <pablo@r2c.dev>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1275e8edf9fced8ba353b00526c0a123e38db737", "author": {"user": {"login": "ievans", "name": "Isaac Evans"}}, "url": "https://github.com/returntocorp/semgrep/commit/1275e8edf9fced8ba353b00526c0a123e38db737", "committedDate": "2020-03-25T21:56:21Z", "message": "Update docs/config.md\n\nCo-Authored-By: Pablo Estrada <pablo@r2c.dev>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1089, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}