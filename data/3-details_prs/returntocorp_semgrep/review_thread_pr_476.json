{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDE5NDMz", "number": 476, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjoyNzozM1rODyRCpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo0NTowMFrODyr6DQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDM0NTk5OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjoyNzozM1rOGGNy8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMjoyNzozM1rOGGNy8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE3MDY3Mg==", "bodyText": "This example felt less contrived while still staying relatively small and self-contained.", "url": "https://github.com/returntocorp/semgrep/pull/476#discussion_r409170672", "createdAt": "2020-04-15T22:27:33Z", "author": {"login": "mschwager"}, "path": "README.md", "diffHunk": "@@ -54,17 +54,19 @@ Start with a simple example:\n \n ```\n $ cat << EOF > test.py\n-a = 1\n-b = 2\n-if a == a:  # oops, supposed to be a == b\n-    print('sgrep test')\n+def get_node(node_id, nodes):", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2bf05b363dd370a5c59e71386eefcad2b030894"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0MDQ0MjEyOnYy", "diffSide": "RIGHT", "path": "docs/config/advanced.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzowNzowMlrOGGOr5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQyMzowNzowMlrOGGOr5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTE4NTI1Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            | [`pattern-not`](#pattern-not) | `string` | Logical NOT - memove findings matching this expression. |\n          \n          \n            \n            | [`pattern-not`](#pattern-not) | `string` | Logical NOT - remove findings matching this expression. |", "url": "https://github.com/returntocorp/semgrep/pull/476#discussion_r409185252", "createdAt": "2020-04-15T23:07:02Z", "author": {"login": "ievans"}, "path": "docs/config/advanced.md", "diffHunk": "@@ -1,95 +1,275 @@\n-## Config format\n+# Configuration Format\n \n-This document describes sgrep rule fields and provides rule examples. It does not cover the patterns themselves; for [the pattern syntax see simple.md](simple.md)\n+This document describes `sgrep` rule fields and provides rule examples.\n \n-If instead of writing rules, you want run them, ship them to your team, or enforce them in CI/CD, check out the easy-to-use [bento.dev](https://bento.dev)\n+Contents:\n+\n+* [Simple Example](#simple-example)\n+* [Schema](#schema)\n+* [Operators](#operators)\n+  * [`pattern`](#pattern)\n+  * [`patterns-and`](#patterns-and)\n+  * [`patterns-or`](#patterns-or)\n+  * [`pattern-not`](#pattern-not)\n+  * [`pattern-inside`](#pattern-inside)\n+  * [`pattern-not-inside`](#pattern-not-inside)\n+  * [`pattern-where-python`](#pattern-where-python)\n+* [Other Examples](#other-examples)\n+  * [Complete Useless Comparison](#complete-useless-comparison)\n \n ## Simple Example\n \n+To get a feel for the rule format, let's start with a simple example:\n+\n ```yaml\n rules:\n-  - id: eqeq-is-bad\n+  - id: eqeq-always-true\n     pattern: $X == $X\n-    message: \"$X == $X is always true!\"\n+    message: \"$X == $X is always true\"\n     languages: [python]\n     severity: ERROR\n ```\n \n-When invoked with `sgrep -f myconfig.yaml project/`, this rule will run on Python files inside `project/` and output the rule `id` \"eqeq-is-bad\" along with the `message` and the line and column range the match occurred on. Given a line inside a Python file with `1 == 1`, sgrep will output the message: \"1 == 1 is always true!\"\n+This rule is useful for basic comparison mistakes. Consider the following:\n+\n+```python\n+def get_node(node_id, nodes):\n+    for node in nodes:\n+        if node.id == node.id:  # Oops, supposed to be 'node_id'\n+            return node\n+    return None\n+```\n+\n+Running `sgrep` against this code produces the following results:\n+\n+```\n+rule:eqeq-always-true: node.id == node.id is always true\n+3: if node.id == node.id:  # Oops, supposed to be 'node_id'\n+```\n+\n+This should give you a basic idea of what the rule fields do.\n+\n+## Schema\n+\n+**Required:**\n+\n+All required fields must be present at the top-level of a rule. I.e.\n+immediately underneath `rules`.\n+\n+| Field | Type | Description |\n+| :--- | :--- | :--- |\n+| `id` | `string` | Unique, descriptive identifier . e.g. `no-unused-variable`. |\n+| `message` | `string` | Message highlighting why this rule fired and how to remediate the issue. |\n+| `severity` | `string` | One of: `WARNING`, `ERROR`. |\n+| `languages` | `array` | Any of: `python`, `javascript`, or `go`. |\n+| [`pattern`](#pattern)_*_ | `string` | Find code matching this expression. |\n+| [`patterns-and`](#patterns-and)_*_ | `array` | Logical AND of multiple patterns. |\n+| [`patterns-or`](#patterns-or)_*_ | `array` | Logical OR of multiple patterns. |\n+\n+_* Only one of `pattern`, `patterns-and`, or `patterns-or` is required._\n+\n+**Optional:**\n+\n+All optional fields must reside underneath a `patterns-and` or `patterns-or` field.\n+\n+| Field | Type | Description |\n+| :--- | :--- | :--- |\n+| [`pattern-not`](#pattern-not) | `string` | Logical NOT - memove findings matching this expression. |", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a2bf05b363dd370a5c59e71386eefcad2b030894"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NDc0NzY1OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo0NTowMFrOGG4SVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQyMTo0NTowMFrOGG4SVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTg2NjgzNg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            `sgrep` expressions make use of two primary pattern features:\n          \n          \n            \n            `sgrep` patterns make use of two primary features:", "url": "https://github.com/returntocorp/semgrep/pull/476#discussion_r409866836", "createdAt": "2020-04-16T21:45:00Z", "author": {"login": "ievans"}, "path": "README.md", "diffHunk": "@@ -110,9 +110,9 @@ handles a multitude of input types:\n In the absense of this flag, a default configuration is loaded from `.sgrep.yml`\n or multiple files matching `.sgrep/**/*.yml`.\n \n-#### Operators\n+#### Pattern Features\n \n-Configuration files make use of two primary operators:\n+`sgrep` expressions make use of two primary pattern features:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "715c0816668a3cd6fe9aa0e2da0dc69170275a23"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4741, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}