{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTE0ODMw", "number": 237, "title": "Add less_inheritance test for java, js, go", "bodyText": "WIth this our feature by lang matrix is almost non-empty.\n\n\n\n\n\ngo\n\n\npython\n\n\njs\n\n\njava\n\n\nphp\n\n\nml\n\n\ncpp\n\n\nc\n\n\n\n\ndots\n\n\n6\n\n\n9\n\n\n6\n\n\n5\n\n\n0\n\n\n0\n\n\n0\n\n\n3\n\n\n\n\nequivalence\n\n\n2\n\n\n3\n\n\n1\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n1\n\n\n\n\nmetavar\n\n\n5\n\n\n8\n\n\n7\n\n\n7\n\n\n0\n\n\n0\n\n\n0\n\n\n7\n\n\n\n\nmisc\n\n\n1\n\n\n11\n\n\n1\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n0\n\n\n\n\nless\n\n\n2\n\n\n2\n\n\n1\n\n\n1\n\n\n0\n\n\n0\n\n\n0\n\n\n0", "createdAt": "2020-03-03T18:47:35Z", "url": "https://github.com/returntocorp/semgrep/pull/237", "merged": true, "mergeCommit": {"oid": "0cac6c776de630f52193557deda4c87c3b056ccc"}, "closed": true, "closedAt": "2020-03-04T16:07:12Z", "author": {"login": "ulziibay"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKG3_rgH2gAyMzgzMTE0ODMwOjM1YjBiZDhhMWE1NmY4OWJhNzlkZmZiOWQ2NTE4OWUxMzVhZjE5ZDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKZMuXgFqTM2ODkxMDQ5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "35b0bd8a1a56f89ba79dffb9d65189e135af19d2", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/35b0bd8a1a56f89ba79dffb9d65189e135af19d2", "committedDate": "2020-03-03T18:45:55Z", "message": "Add less_inheritance test for java, js, go"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/2b2eff63a6e44526a2070644515c32a116e9e7c3", "committedDate": "2020-03-03T20:25:02Z", "message": "move tests to .TODO"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzA0MTEz", "url": "https://github.com/returntocorp/semgrep/pull/237#pullrequestreview-368304113", "createdAt": "2020-03-03T20:34:47Z", "commit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDozNDo0N1rOFxVj-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo0MDo0NVrOFxVu6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3NzgxNg==", "bodyText": "maybe rename generate_test_matrix.py", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387277816", "createdAt": "2020-03-03T20:34:47Z", "author": {"login": "aryx"}, "path": "tests/generate.py", "diffHunk": "@@ -0,0 +1,45 @@\n+# /usr/bin/env python3", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTQ2Mw==", "bodyText": "what does atts mean? And why did you prefix this test with a less? It looks more like a dots_xxx.\nThe spirit of the less_xxx is to say that a pattern can have less details that the concrete file.\nFor example writing the pattern class A { ...} will also match code where the code has the extra detail\nabout inheritnace like class A extends B {}. We do not force the user to write class A extends $X { ...} .", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387279463", "createdAt": "2020-03-03T20:38:17Z", "author": {"login": "aryx"}, "path": "tests/go/less_atts.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+func $F(...) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI3OTg4OQ==", "bodyText": "Go does not really have inheritance like the other languages. It does not fit in the less_xxx category.\nHowever having dots for fields is a nice test to have, so maybe rename to\ndots_struct_fields.TODO", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387279889", "createdAt": "2020-03-03T20:39:10Z", "author": {"login": "aryx"}, "path": "tests/go/less_inherits.TODO", "diffHunk": "@@ -0,0 +1,3 @@\n+type struct A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDQwOA==", "bodyText": "No, this should be class A extends B { ...}\nwe do not want class A { .. } to match public class B extends A { }", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387280408", "createdAt": "2020-03-03T20:40:17Z", "author": {"login": "aryx"}, "path": "tests/java/less_inheritance.java.TODO", "diffHunk": "@@ -0,0 +1,19 @@\n+// ERROR: match\n+public class A {\n+  public static foo() {\n+    return 1;\n+  }\n+}\n+\n+// ERROR: match\n+public class B extends A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4MDYxNw==", "bodyText": "no, should be class A extends B.", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387280617", "createdAt": "2020-03-03T20:40:45Z", "author": {"login": "aryx"}, "path": "tests/js/less_inheritance.js.TODO", "diffHunk": "@@ -0,0 +1,24 @@\n+//ERROR:\n+class A {\n+  constructor(name) {\n+    this.name = name;\n+  }\n+\n+  foo() {\n+    return 'foo';\n+  }\n+}\n+\n+//ERROR:\n+class B extends A {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b2eff63a6e44526a2070644515c32a116e9e7c3"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "76e6ff46b565abad47ea89cf4460c67c875b389b", "author": {"user": null}, "url": "https://github.com/returntocorp/semgrep/commit/76e6ff46b565abad47ea89cf4460c67c875b389b", "committedDate": "2020-03-03T20:59:37Z", "message": "address @aryx comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4OTEwNDk3", "url": "https://github.com/returntocorp/semgrep/pull/237#pullrequestreview-368910497", "createdAt": "2020-03-04T16:06:44Z", "commit": {"oid": "76e6ff46b565abad47ea89cf4460c67c875b389b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNjo0NFrOFxzgTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxNjowNjo0NFrOFxzgTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Nzc2ODM5OA==", "bodyText": "still don't understand what it has to do with attributes (a.k.a annotations).", "url": "https://github.com/returntocorp/semgrep/pull/237#discussion_r387768398", "createdAt": "2020-03-04T16:06:44Z", "author": {"login": "aryx"}, "path": "tests/go/dots_attributes.sgrep", "diffHunk": "@@ -0,0 +1,3 @@\n+func $F(...) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "76e6ff46b565abad47ea89cf4460c67c875b389b"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1150, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}