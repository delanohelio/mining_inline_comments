{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM4NzE4MTIx", "number": 1107, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNjowOFrOEIEWPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OToyNVrOEIErCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODk1Mjk0OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/cli.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNjowOFrOGnzpkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNjowOFrOGnzpkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5Mzg3Mg==", "bodyText": "Still have to add this header, but it'll include the relevant information for each install mechanism.", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444393872", "createdAt": "2020-06-23T17:36:08Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +290,35 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            resp = requests.get(\n+                endpoint,\n+                headers={\"User-Agent\": f\"Semgrep/{__VERSION__}\"},\n+                timeout=quick_timeout,\n+            )\n+        except Exception as e:\n+            debug_print(f\"Could not connect to version check URL: {e}\")\n+        else:\n+            if resp.status_code != requests.codes.OK:\n+                debug_print(\n+                    f\"Received HTTP error code from version check URL: {resp.status_code}\"\n+                )\n+            try:\n+                resp_json = resp.json()\n+            except ValueError:\n+                debug_print(f\"Could not decode JSON object from version check URL.\")\n+            else:\n+                latest_version = resp_json[\"latest\"]\n+                if latest_version > __VERSION__:\n+                    print_msg(\n+                        \"A new version of Semgrep is available. Please see https://github.com/returntocorp/semgrep#upgrading for more information.\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff50e3c438db16b2bd2de8a4218b1cb106027d5"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2ODk1NjIzOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/cli.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNzowMlrOGnzrqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzozNzowMlrOGnzrqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM5NDQwOA==", "bodyText": "I tested this manually offline as well. The nice thing is it instantly returns in that case and doesn't wait for the timeout.", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444394408", "createdAt": "2020-06-23T17:37:02Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +290,35 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            resp = requests.get(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bff50e3c438db16b2bd2de8a4218b1cb106027d5"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2OTAwNjE2OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/cli.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OToyNVrOGn0KXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNzo0OToyNVrOGn0KXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDQwMjI3MA==", "bodyText": "You should compare Semver objects instead of strings", "url": "https://github.com/returntocorp/semgrep/pull/1107#discussion_r444402270", "createdAt": "2020-06-23T17:49:25Z", "author": {"login": "brendongo"}, "path": "semgrep/semgrep/cli.py", "diffHunk": "@@ -282,6 +288,37 @@ def cli() -> None:\n         error_on_findings=args.error,\n     )\n \n+    if not args.disable_version_check:\n+        quick_timeout = 2  # Don't block user's too long\n+        endpoint = os.environ.get(\n+            \"VERSION_CHECK_URL\", \"https://semgrep.live/api/check-version\"\n+        )\n+        try:\n+            import requests\n+\n+            resp = requests.get(\n+                endpoint,\n+                headers={\"User-Agent\": f\"Semgrep/{__VERSION__}\"},\n+                timeout=quick_timeout,\n+            )\n+        except Exception as e:\n+            debug_print(f\"Could not connect to version check URL: {e}\")\n+        else:\n+            if resp.status_code != requests.codes.OK:\n+                debug_print(\n+                    f\"Received HTTP error code from version check URL: {resp.status_code}\"\n+                )\n+            try:\n+                resp_json = resp.json()\n+            except ValueError:\n+                debug_print(f\"Could not decode JSON object from version check URL.\")\n+            else:\n+                latest_version = resp_json[\"latest\"]\n+                if latest_version > __VERSION__:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b1bfefe2e5824b371d9ad57e43bf2267146fbe0"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4467, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}