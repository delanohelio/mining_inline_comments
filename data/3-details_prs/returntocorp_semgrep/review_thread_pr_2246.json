{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4MjQ1MTI1", "number": 2246, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjo0MTozM1rOFEc3jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjo0MTozM1rOFEc3jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwMjExNTk5OnYy", "diffSide": "RIGHT", "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjo0MTozM1rOIEkL0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMlQxNjo0MTozM1rOIEkL0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTY1ODA2Ng==", "bodyText": "Actually for those kind of stmts that have inside other statements, it's better to use the\nOtherStmtWithStmt construct. It's better than OtherStmt because when we build\na control-flow graph for a generic AST (see pfff/lang-GENERIC/analyze/IL_to_CFG.ml),\nwe need to know those nested stmts,", "url": "https://github.com/returntocorp/semgrep/pull/2246#discussion_r541658066", "createdAt": "2020-12-12T16:41:33Z", "author": {"login": "aryx"}, "path": "semgrep-core/parsing/Parse_csharp_tree_sitter.ml", "diffHunk": "@@ -1368,7 +1368,7 @@ and statement (env : env) (x : CST.statement) =\n        let v3 = expression env v3 in\n        let v4 = token env v4 (* \")\" *) in\n        let v5 = statement env v5 in\n-       todo env (v1, v2, v3, v4, v5)\n+       OtherStmt (OS_Sync, [E v3; S v5])", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "548e6cedf8e357aa440b46093c3de88e1630cf2d"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4716, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}