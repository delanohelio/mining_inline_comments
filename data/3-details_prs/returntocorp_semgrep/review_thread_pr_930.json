{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTM5NzY4", "number": 930, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo1Njo0MFrOED3M6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo1Njo0MFrOED3M6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDg1NjA5OnYy", "diffSide": "RIGHT", "path": "semgrep-core/typing/Typechecking_generic.ml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo1Njo0MFrOGhIOIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo1Njo0MFrOGhIOIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM5MDg4MQ==", "bodyText": "sounds good for a v0.\nYou can add a comment here saying we should handled type metavariables and do more general\ntype matching (use m_type in Generic_vs_generic)", "url": "https://github.com/returntocorp/semgrep/pull/930#discussion_r437390881", "createdAt": "2020-06-09T12:56:40Z", "author": {"login": "aryx"}, "path": "semgrep-core/typing/Typechecking_generic.ml", "diffHunk": "@@ -46,6 +46,15 @@ let compatible_type t e =\n     L (Float _) -> true\n   | OtherType (OT_Expr, [E (Id ((\"str\", _tok), _idinfo))]),\n     L (String _) -> true\n+  | TyBuiltin ((t1, _)), Id (_, {id_type; _}) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9632f45a2a523ef82323b42bb568cdedc072fd6d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4535, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}