{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2MzQ0NzMw", "number": 1859, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozODozM1rOEwHOyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozODozM1rOEwHOyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODg1NTc2OnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/pattern_match.py", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozODozM1rOHleQPg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzozODozM1rOHleQPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA1NTAzOA==", "bodyText": "If start or end are missing as keys, we'll fail anyway, so I'll update this to [\"end\"][\"offset\"] to make the error message more clear.", "url": "https://github.com/returntocorp/semgrep/pull/1859#discussion_r509055038", "createdAt": "2020-10-21T07:38:33Z", "author": {"login": "underyx"}, "path": "semgrep/semgrep/pattern_match.py", "diffHunk": "@@ -63,5 +63,23 @@ def end(self) -> Dict[str, Any]:\n             del end[\"offset\"]\n         return end\n \n+    def get_metavariable_value(self, metavariable: str) -> str:\n+        \"\"\"\n+            Use metavars start and end to read into the file to find what the\n+            metavariable in this pattern match maps to in the file\n+\n+            Assumes METAVARIABLE is a key in self.metavars\n+        \"\"\"\n+        # Offsets are start inclusive and end exclusive\n+        start_offset = self.metavars[metavariable].get(\"start\").get(\"offset\")\n+        end_offset = self.metavars[metavariable].get(\"end\").get(\"offset\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "24cf9fe0131347e621c53d4f63e2f403e620e7e6"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4812, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}