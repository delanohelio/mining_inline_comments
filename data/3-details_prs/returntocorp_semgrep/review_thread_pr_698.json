{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0MTk5Njky", "number": 698, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NDo1M1rOD5_fVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowMjozMVrOD5_qFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM1NjM5OnYy", "diffSide": "RIGHT", "path": "semgrep/setup.py", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NDo1M1rOGRlC0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NDo1M1rOGRlC0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4NTkwNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                author_email=\"support@returntocorp.com\",\n          \n          \n            \n                author_email=\"support@r2c.dev\",", "url": "https://github.com/returntocorp/semgrep/pull/698#discussion_r421085907", "createdAt": "2020-05-06T20:54:53Z", "author": {"login": "brendongo"}, "path": "semgrep/setup.py", "diffHunk": "@@ -1,15 +1,118 @@\n # type: ignore\n+import contextlib\n+import distutils.util\n+import os\n+import sys\n+\n import setuptools\n+from setuptools import setup\n+from setuptools.command.install import install\n+from wheel.bdist_wheel import bdist_wheel as _bdist_wheel\n+\n+\n+@contextlib.contextmanager\n+def chdir(dirname=None):\n+    curdir = os.getcwd()\n+    try:\n+        if dirname is not None:\n+            os.chdir(dirname)\n+        yield\n+    finally:\n+        os.chdir(curdir)\n+\n+\n+# TODO: what is the minimum OSX version?\n+MIN_OSX_VERSION = \"10_14\"\n+\n+# from https://stackoverflow.com/questions/45150304/how-to-force-a-python-wheel-to-be-platform-specific-when-building-it # noqa\n+class bdist_wheel(_bdist_wheel):\n+    def finalize_options(self):\n+        _bdist_wheel.finalize_options(self)\n+        # Mark us as not a pure python package (we have platform specific rust code)\n+        self.root_is_pure = False\n+\n+    def get_tag(self):\n+        # this set's us up to build generic wheels.\n+        # note: we're only doing this for windows right now (causes packaging issues\n+        # with osx)\n+        _, _, plat = _bdist_wheel.get_tag(self)\n+        # We don't need cPython\n+        python = \".\".join([\"py36\", \"py37\", \"py38\"])\n+        abi = \"none\"\n+\n+        if \"macosx\" in plat:\n+            plat = f\"macosx_{MIN_OSX_VERSION}_x86_64.whl\"\n+\n+        return python, abi, plat\n+\n+\n+try:\n+    with open(\"../README.md\") as f:\n+        long_description = f.read()\n+except FileNotFoundError:\n+    long_description = \"\"\n+\n+\n+class PostInstallCommand(install):\n+    \"\"\"Post-installation for installation mode.\"\"\"\n+\n+    def run(self):\n+        if \"TOX_ENV_NAME\" in os.environ:\n+            print(\"Not attempting to install binary while running under tox\")\n+            return\n+        # So ths builds the executable, and even installs it\n+        # but we can't install to the bin directory:\n+        #     https://github.com/pypa/setuptools/issues/210#issuecomment-216657975\n+        # take the advice from that comment, and move over after install\n+        source_dir = os.path.dirname(os.path.abspath(__file__))\n+\n+        if os.environ.get(\"PRECOMILED_LOCATION\"):\n+            source = os.environ[\"PRECOMPILED_LOCATION\"]\n+        else:\n+            repo_root = os.path.dirname(source_dir)\n+            if \"osx\" in distutils.util.get_platform():\n+                with chdir(repo_root):\n+                    os.system(os.path.join(repo_root, \"release-scripts/osx-release.sh\"))\n+                    source = os.path.join(repo_root, \"artifacts/semgrep-core\")\n+            else:\n+                with chdir(repo_root):\n+                    os.putenv(\"SKIP_NUITKA\", \"TRUE\")\n+                    os.system(\n+                        os.path.join(repo_root, \"release-scripts/ubuntu-release.sh\")\n+                    )\n+                    source = os.path.join(repo_root, \"semgrep-files/semgrep-core\")\n+\n+        ## setuptools_rust doesn't seem to let me specify a musl cross compilation target\n+        ## so instead just build ourselves here =(.\n+        # if os.system(\"cargo build --release %s\" % compile_args):\n+        #    raise ValueError(\"Failed to compile!\")\n+\n+        ## run this after trying to build with cargo (as otherwise this leaves\n+        ## venv in a bad state: https://github.com/benfred/py-spy/issues/69)\n+        install.run(self)\n+\n+        ## we're going to install the py-spy executable into the scripts directory\n+        ## but first make sure the scripts directory exists\n+        if not os.path.isdir(self.install_scripts):\n+            os.makedirs(self.install_scripts)\n+\n+        target = os.path.join(self.install_scripts, \"semgrep-core\")\n+        if os.path.isfile(target):\n+            os.remove(target)\n+\n+        self.copy_file(source, target)\n+\n \n-setuptools.setup(\n+setup(\n     name=\"semgrep\",  # Replace with your own username\n     version=\"0.6.0\",\n     author=\"Russell & Return 2 Corp\",\n-    author_email=\"author@example.com\",\n-    description=\"semgrep python wrapper\",\n-    long_description=\"bloop\",\n+    author_email=\"support@returntocorp.com\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50ebdb0854094195580007a3e76df4126eb94cd2"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM2MjE1OnYy", "diffSide": "RIGHT", "path": "semgrep/requirements.txt", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NjozNlrOGRlGTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMDo1NjozNlrOGRlGTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA4Njc5OA==", "bodyText": "No version pinning?", "url": "https://github.com/returntocorp/semgrep/pull/698#discussion_r421086798", "createdAt": "2020-05-06T20:56:36Z", "author": {"login": "brendongo"}, "path": "semgrep/requirements.txt", "diffHunk": "@@ -3,3 +3,4 @@ pytest==5.3.5\n pyyaml==5.3\n requests==2.22.0\n tox==3.14.6\n+wheel", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50ebdb0854094195580007a3e76df4126eb94cd2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMTM4Mzg5OnYy", "diffSide": "RIGHT", "path": ".bento/config.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNlQyMTowMjozMVrOGRlTTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMToyMzo0MFrOGSVxIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5MDEyNg==", "bodyText": "Can we leave this on and archive the relevant places this fires on this PR", "url": "https://github.com/returntocorp/semgrep/pull/698#discussion_r421090126", "createdAt": "2020-05-06T21:02:31Z", "author": {"login": "brendongo"}, "path": ".bento/config.yml", "diffHunk": "@@ -28,7 +28,7 @@ tools:\n     - subprocess-without-shell-equals-true\n     - try-except-continue\n     - urllib-urlopen\n-    run: true\n+    run: false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50ebdb0854094195580007a3e76df4126eb94cd2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTg4NDE5Mw==", "bodyText": "done", "url": "https://github.com/returntocorp/semgrep/pull/698#discussion_r421884193", "createdAt": "2020-05-08T01:23:40Z", "author": {"login": "rcoh"}, "path": ".bento/config.yml", "diffHunk": "@@ -28,7 +28,7 @@ tools:\n     - subprocess-without-shell-equals-true\n     - try-except-continue\n     - urllib-urlopen\n-    run: true\n+    run: false", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTA5MDEyNg=="}, "originalCommit": {"oid": "50ebdb0854094195580007a3e76df4126eb94cd2"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4684, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}