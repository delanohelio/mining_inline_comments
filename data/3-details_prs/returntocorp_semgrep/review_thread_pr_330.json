{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMzY5OTg2", "number": 330, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNjowOFrODrTFjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoyODozN1rODrYrSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2NzI4MDc5OnYy", "diffSide": "RIGHT", "path": "sgrep/lib/subast_generic.ml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNjowOFrOF7j9YA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNjozNjowOFrOF7j9YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Nzk5OTQ1Ng==", "bodyText": "see my recent eval func in normalize_generic.ml", "url": "https://github.com/returntocorp/semgrep/pull/330#discussion_r397999456", "createdAt": "2020-03-25T16:36:08Z", "author": {"login": "aryx"}, "path": "sgrep/lib/subast_generic.ml", "diffHunk": "@@ -47,6 +46,14 @@ let subexprs_of_expr e =\n   | Container (_, xs) \n     -> unbracket xs\n \n+  | Call(IdSpecial (_, e), args) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b479113fc61aef73d719e744b188f94d1a779a0"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2ODE5NjU3OnYy", "diffSide": "RIGHT", "path": "sgrep/lib/normalize_generic.ml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDoyODozN1rOF7tBTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQyMDozMDoxN1rOF7tFOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0NzkxNw==", "bodyText": "This is wrong.\nThe code should actually make sure all the arguments are an Arg that evaluates to a Some String.\nIf any of the argument is not a string, then the whole thing should fail, this is why\nthere is the | _ -> None case in my code, because if you look at the caller, if it's a None then the match\nwill call fail ()", "url": "https://github.com/returntocorp/semgrep/pull/330#discussion_r398147917", "createdAt": "2020-03-25T20:28:37Z", "author": {"login": "aryx"}, "path": "sgrep/lib/normalize_generic.ml", "diffHunk": "@@ -71,11 +71,21 @@ let rec eval x =\n   | L x -> Some x\n   | Id (_, { id_const_literal = {contents = Some x}; _}) -> Some x\n \n-  | Call(IdSpecial((ArithOp(Plus) | Concat), _), [Arg e1; Arg e2]) ->\n-    (match eval e1, eval e2 with\n-    | Some (String (s1, t1)), Some (String (s2, _t2)) ->\n-          Some (String (s1 ^ s2, t1))\n-    | _ -> None\n+  | Call(IdSpecial((ArithOp(Plus) | Concat), _), args) ->\n+    let literals = args |> Common.map_filter (fun (arg) ->", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0ODkyMA==", "bodyText": "For example $F(\"...\") should not match foo(\"foo\" + bar) (assuming bar is not a constant).\nbut with your code it will.", "url": "https://github.com/returntocorp/semgrep/pull/330#discussion_r398148920", "createdAt": "2020-03-25T20:30:17Z", "author": {"login": "aryx"}, "path": "sgrep/lib/normalize_generic.ml", "diffHunk": "@@ -71,11 +71,21 @@ let rec eval x =\n   | L x -> Some x\n   | Id (_, { id_const_literal = {contents = Some x}; _}) -> Some x\n \n-  | Call(IdSpecial((ArithOp(Plus) | Concat), _), [Arg e1; Arg e2]) ->\n-    (match eval e1, eval e2 with\n-    | Some (String (s1, t1)), Some (String (s2, _t2)) ->\n-          Some (String (s1 ^ s2, t1))\n-    | _ -> None\n+  | Call(IdSpecial((ArithOp(Plus) | Concat), _), args) ->\n+    let literals = args |> Common.map_filter (fun (arg) ->", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5ODE0NzkxNw=="}, "originalCommit": {"oid": "c5ce3bd1867010d270f0daa697fc58dc2854ce6c"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4797, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}