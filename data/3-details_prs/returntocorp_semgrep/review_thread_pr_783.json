{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMDYyOTYx", "number": 783, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NTo1N1rOD9zlgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NTo1N1rOD9zlgA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2MTM0OTEyOnYy", "diffSide": "RIGHT", "path": "semgrep/semgrep/core_runner.py", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxMzo0NTo1N1rOGXhNRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNjo1NTozM1rOGXpvdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNDUwMw==", "bodyText": "Do we want to be more general than UnicodeDecodeError here, e.g. just catch Exception and warn the user something went wrong? I took a look at the read_text docs: https://docs.python.org/3/library/pathlib.html?highlight=path#pathlib.Path.read_text and it looks like the errors kwarg can be utilized too. It looks like errors defaults to strict (makes sense here, we can't easily regex non-text contents), which will raise a ValueError if there's an encoding error. So here we got ValueError -> UnicodeError -> UnicodeDecodeError.\nGenerally, though, it's better to fail quick and loud and learn about cases we didn't consider. I'd say we should catch UnicodeDecodeError here, QA this functionality over a large corpus, look for failures, and patch this up with our learnings. Thoughts?", "url": "https://github.com/returntocorp/semgrep/pull/783#discussion_r427314503", "createdAt": "2020-05-19T13:45:57Z", "author": {"login": "mschwager"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -35,7 +35,11 @@\n \n \n def get_re_matches(patterns_re: List[Tuple], path: Path) -> List[PatternMatch]:\n-    contents = path.read_text()\n+    try:\n+        contents = path.read_text()\n+    except UnicodeDecodeError:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9e9260b02f346027f55ab40f4389c12b7376268"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzQ1NDMyNw==", "bodyText": "I'd leave it like this before #785 is done, and like you said, find more bugs to fix that way that would get their handling filed as new issues.", "url": "https://github.com/returntocorp/semgrep/pull/783#discussion_r427454327", "createdAt": "2020-05-19T16:55:33Z", "author": {"login": "underyx"}, "path": "semgrep/semgrep/core_runner.py", "diffHunk": "@@ -35,7 +35,11 @@\n \n \n def get_re_matches(patterns_re: List[Tuple], path: Path) -> List[PatternMatch]:\n-    contents = path.read_text()\n+    try:\n+        contents = path.read_text()\n+    except UnicodeDecodeError:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMxNDUwMw=="}, "originalCommit": {"oid": "c9e9260b02f346027f55ab40f4389c12b7376268"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4715, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}