{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjYzNzI1", "number": 942, "title": "Update integrations docs to include CI information", "bodyText": "Fix #935.", "createdAt": "2020-06-08T16:41:28Z", "url": "https://github.com/returntocorp/semgrep/pull/942", "merged": true, "mergeCommit": {"oid": "0618f566be36d9c3e2f369a03888dbb584785a6a"}, "closed": true, "closedAt": "2020-06-08T19:08:07Z", "author": {"login": "mschwager"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpTN2VAH2gAyNDMxMjYzNzI1OjZhMjVjMGQ1NTMxNWZmNDRmYmJlOWVmYTg1YTg5MGE2MDFjNjhkZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcpWQjRAFqTQyNjU3OTM0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9", "author": {"user": {"login": "mschwager", "name": null}}, "url": "https://github.com/returntocorp/semgrep/commit/6a25c0d55315ff44fbbe9efa85a890a601c68dd9", "committedDate": "2020-06-08T16:40:18Z", "message": "Update integrations docs to include CI information\n\nFix #935."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTMzMDI5", "url": "https://github.com/returntocorp/semgrep/pull/942#pullrequestreview-426533029", "createdAt": "2020-06-08T19:00:27Z", "commit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTY5NTQx", "url": "https://github.com/returntocorp/semgrep/pull/942#pullrequestreview-426569541", "createdAt": "2020-06-08T19:50:49Z", "commit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxOTo1MDo0OVrOGgt_-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDowMDozM1rOGguTwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTI3NQ==", "bodyText": "Is there an easy way to always run the latest version of semgrep? Would that be better/preferred?", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436961275", "createdAt": "2020-06-08T19:50:49Z", "author": {"login": "clintgibler"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTgxNg==", "bodyText": "\"To choose another rule pack, see.\" - add comma?", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436961816", "createdAt": "2020-06-08T19:51:52Z", "author": {"login": "clintgibler"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'\n+      hooks:\n+          - id: semgrep\n+            args: ['--config', 'https://semgrep.live/p/r2c', '--precommit', '--error']\n ```\n \n+## Continuous Integration\n+\n+This section describes integrating `semgrep` into your continuous integration\n+(CI) system. This allows you to continuously search your codebase for bugs,\n+anti-patterns, and security issues.\n+\n+### AppVeyor\n+\n+Include `semgrep` in your `.appveyor.yml` configuration file:\n+\n+```yaml\n+build: off\n+environment:\n+    matrix:\n+        - PYTHON: \"C:\\\\Python36\"\n+        - PYTHON: \"C:\\\\Python37\"\n+        - ...\n+install:\n+    - python -m pip install semgrep\n+test_script:\n+    - semgrep --config https://semgrep.live/p/r2c /path/to/code\n+```\n+\n+This will default to using the [`r2c` rule pack](https://semgrep.live/p/r2c).\n+To choose another rule pack see https://semgrep.live/packs.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzcwNw==", "bodyText": "Thoughts on \"search\" vs \"monitor\" or another term? I don't feel strongly about, just curious about what people think.", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436963707", "createdAt": "2020-06-08T19:55:28Z", "author": {"login": "clintgibler"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'\n+      hooks:\n+          - id: semgrep\n+            args: ['--config', 'https://semgrep.live/p/r2c', '--precommit', '--error']\n ```\n \n+## Continuous Integration\n+\n+This section describes integrating `semgrep` into your continuous integration\n+(CI) system. This allows you to continuously search your codebase for bugs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2NjMzNg==", "bodyText": "Some high level meta comments:\nWould it be useful to include 1-2 links to supporting docs for each CI platform? Makes it easier if the user wants to slightly adjust something, if something breaks, etc.\nA couple of places there's /path/to/code - do CI platforms tend to mount code in the same location? If not, what's the default place for each platform?\n\nCan we make this placeholder more explicit so there's no ambiguity about how to change it to get up and running? (e.g. /root/code/<repo_name>/)", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436966336", "createdAt": "2020-06-08T20:00:33Z", "author": {"login": "clintgibler"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NTc5MzQ5", "url": "https://github.com/returntocorp/semgrep/pull/942#pullrequestreview-426579349", "createdAt": "2020-06-08T20:05:17Z", "commit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDowNToxN1rOGguc3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoxMjozNFrOGguq-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2ODY3MA==", "bodyText": "Would it be useful to include 1-2 links to supporting docs for each CI platform? Makes it easier if the user wants to slightly adjust something, if something breaks, etc.\n\nYup, definitely, let's do it\n\nA couple of places there's /path/to/code - do CI platforms tend to mount code in the same location? If not, what's the default place for each platform?\n\nI had a similar thought on this. I think they tend to mount the code then change the working directory to it before starting your commands, so we could probably just use . (or nothing at all since that's what semgrep defaults to).", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436968670", "createdAt": "2020-06-08T20:05:17Z", "author": {"login": "mschwager"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2NjMzNg=="}, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3MTY1Ng==", "bodyText": "I don't think there's a way to specify the latest version. I believe we can specify master, but that's probably too bleeding edge and may be buggy before release/QA. pre-commit has autoupdate functionality, which is close to what you're describing, but not exactly: https://pre-commit.com/#pre-commit-autoupdate", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436971656", "createdAt": "2020-06-08T20:11:15Z", "author": {"login": "mschwager"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTI3NQ=="}, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3MTc5Ng==", "bodyText": "Monitor sounds good to me!", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436971796", "createdAt": "2020-06-08T20:11:32Z", "author": {"login": "mschwager"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'\n+      hooks:\n+          - id: semgrep\n+            args: ['--config', 'https://semgrep.live/p/r2c', '--precommit', '--error']\n ```\n \n+## Continuous Integration\n+\n+This section describes integrating `semgrep` into your continuous integration\n+(CI) system. This allows you to continuously search your codebase for bugs,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MzcwNw=="}, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3MjI2NQ==", "bodyText": "Sounds good to me", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436972265", "createdAt": "2020-06-08T20:12:32Z", "author": {"login": "mschwager"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'\n+      hooks:\n+          - id: semgrep\n+            args: ['--config', 'https://semgrep.live/p/r2c', '--precommit', '--error']\n ```\n \n+## Continuous Integration\n+\n+This section describes integrating `semgrep` into your continuous integration\n+(CI) system. This allows you to continuously search your codebase for bugs,\n+anti-patterns, and security issues.\n+\n+### AppVeyor\n+\n+Include `semgrep` in your `.appveyor.yml` configuration file:\n+\n+```yaml\n+build: off\n+environment:\n+    matrix:\n+        - PYTHON: \"C:\\\\Python36\"\n+        - PYTHON: \"C:\\\\Python37\"\n+        - ...\n+install:\n+    - python -m pip install semgrep\n+test_script:\n+    - semgrep --config https://semgrep.live/p/r2c /path/to/code\n+```\n+\n+This will default to using the [`r2c` rule pack](https://semgrep.live/p/r2c).\n+To choose another rule pack see https://semgrep.live/packs.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTgxNg=="}, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3MjI4Mw==", "bodyText": "Sounds good!", "url": "https://github.com/returntocorp/semgrep/pull/942#discussion_r436972283", "createdAt": "2020-06-08T20:12:34Z", "author": {"login": "mschwager"}, "path": "docs/integrations.md", "diffHunk": "@@ -1,21 +1,127 @@\n # Integrations\n \n-> Note that all integrations are currently under development and are not officially supported. Please contact semgrep@r2c.dev or [join our slack](https://join.slack.com/t/r2c-community/shared_invite/enQtNjU0NDYzMjAwODY4LWE3NTg1MGNhYTAwMzk5ZGRhMjQ2MzVhNGJiZjI1ZWQ0NjQ2YWI4ZGY3OGViMGJjNzA4ODQ3MjEzOWExNjZlNTA) for help getting started\n+This document describes integrating `semgrep` into other pieces of software.\n \n-## Github Action\n+Contents:\n \n-See our [semgrep](https://github.com/marketplace/actions/semgrep-action) action for easy use of `semgrep` in CI. We dogfood it [here](https://github.com/returntocorp/semgrep/tree/develop/.github/workflows/semgrep-action.yml)\n+* [Pre-Commit Hook](#pre-commit-hook)\n+* [Continuous Integration](#continuous-integration)\n+  * [AppVeyor](#appveyor)\n+  * [CircleCI](#circleci)\n+  * [TravisCI](#travisci)\n+  * [GitHub Actions](#github-actions)\n+  * [GitLab](#gitlab)\n \n ## Pre-Commit Hook\n \n-You can run `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com)\n+Include `semgrep` as a pre-commit hook using [pre-commit](https://pre-commit.com).\n \n ```yaml\n repos:\n-  - repo: https://github.com/returntocorp/semgrep\n-    rev: '0.5.0'\n-    hooks:\n-      - id: semgrep\n-        args: ['--precommit', '--error'] # exit 1\n+    - repo: https://github.com/returntocorp/semgrep\n+      rev: '0.9.0'\n+      hooks:\n+          - id: semgrep\n+            args: ['--config', 'https://semgrep.live/p/r2c', '--precommit', '--error']\n ```\n \n+## Continuous Integration\n+\n+This section describes integrating `semgrep` into your continuous integration\n+(CI) system. This allows you to continuously search your codebase for bugs,\n+anti-patterns, and security issues.\n+\n+### AppVeyor\n+\n+Include `semgrep` in your `.appveyor.yml` configuration file:\n+\n+```yaml\n+build: off\n+environment:\n+    matrix:\n+        - PYTHON: \"C:\\\\Python36\"\n+        - PYTHON: \"C:\\\\Python37\"\n+        - ...\n+install:\n+    - python -m pip install semgrep\n+test_script:\n+    - semgrep --config https://semgrep.live/p/r2c /path/to/code\n+```\n+\n+This will default to using the [`r2c` rule pack](https://semgrep.live/p/r2c).\n+To choose another rule pack see https://semgrep.live/packs.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk2MTgxNg=="}, "originalCommit": {"oid": "6a25c0d55315ff44fbbe9efa85a890a601c68dd9"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1507, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}