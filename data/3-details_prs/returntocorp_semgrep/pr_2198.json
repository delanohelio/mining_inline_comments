{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMjgzNTc2", "number": 2198, "title": "spacegrep optimizations", "bodyText": "Only peek into the first 4096 (first FS block or so) to determine whether to skip an input file.\nDon't keep all file contents in memory until the end. This saves a lot of memory when matches are only in some files. Still a problem when all the files match.\n\nI tested this just with spacegrep hello . on the whole semgrep repo after a build. Getting 1 min 10 now for what used to take 1 min 35.\nNone of this is in the critical path of semgrep usage, since it only applies when scanning whole directories without filtering based on file extensions. It's just for making spacegrep more pleasant when used directly from the command line and in demos.", "createdAt": "2020-12-06T23:04:03Z", "url": "https://github.com/returntocorp/semgrep/pull/2198", "merged": true, "mergeCommit": {"oid": "b77a895698699a0ae53279ddf462d2d3748805a6"}, "closed": true, "closedAt": "2020-12-08T01:09:38Z", "author": {"login": "mjambon"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjyZAUgFqTU0NTk4MTEzNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj-4ZdAH2gAyNTMzMjgzNTc2OjhmNzdkMjZmMjUxYjk5ZGZiYTlmY2I4ODc5MTJhNWEyYTJhMWYxN2I=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTgxMTM2", "url": "https://github.com/returntocorp/semgrep/pull/2198#pullrequestreview-545981136", "createdAt": "2020-12-07T09:47:09Z", "commit": {"oid": "d563a4d6e9d5e456570d3c88b2363ae634f87929"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1OTg3MDAx", "url": "https://github.com/returntocorp/semgrep/pull/2198#pullrequestreview-545987001", "createdAt": "2020-12-07T09:54:20Z", "commit": {"oid": "d563a4d6e9d5e456570d3c88b2363ae634f87929"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOTo1NDoyMFrOIAeizg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwOTo1NDoyMFrOIAeizg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzM3MTM0Mg==", "bodyText": "Shoudn't this be put later when you know you're not in the Minified or Binary case? Otherwise\nit defeats the purpose of the optimization no? Looks like you gonna read the whole doc in every paths,\nwhatever the result of the classify on the peek_length read doc.", "url": "https://github.com/returntocorp/semgrep/pull/2198#discussion_r537371342", "createdAt": "2020-12-07T09:54:20Z", "author": {"login": "aryx"}, "path": "spacegrep/src/bin/Spacegrep_main.ml", "diffHunk": "@@ -43,9 +43,22 @@ let run_all\n     ~case_sensitive ~debug ~force ~output_format ~highlight ~warn\n     patterns docs =\n   let matches =\n-    List.map (fun get_doc_src ->\n-      let doc_src = get_doc_src () in\n-      let doc_type = File_type.classify doc_src in\n+    List.filter_map (fun (get_doc_src : ?max_len:int -> unit -> Src_file.t) ->\n+      (*\n+         We inspect the first 4096 bytes to guess whether the file type.\n+         This saves time on large files, by reading typically just one\n+         block from the file system.\n+      *)\n+      let peek_length = 4096 in\n+      let partial_doc_src = get_doc_src ~max_len:peek_length () in\n+      let doc_type = File_type.classify partial_doc_src in\n+      let doc_src =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d563a4d6e9d5e456570d3c88b2363ae634f87929"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "01fdc66fd5852c510acd6e8d477eaa47b7882f78", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/01fdc66fd5852c510acd6e8d477eaa47b7882f78", "committedDate": "2020-12-07T20:36:50Z", "message": "Fix: actually read the whole file lazily"}, "afterCommit": {"oid": "139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "committedDate": "2020-12-07T22:03:53Z", "message": "Fix: actually read the whole file lazily"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e2e4763e6acd92541c3549af4f72d551b30c655", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/4e2e4763e6acd92541c3549af4f72d551b30c655", "committedDate": "2020-12-07T23:31:57Z", "message": "spacegrep - only peek into the first 4096 (first FS block or so) to\ndetermine whether to skip an input file.\nAlso, don't keep all file contents in memory until the end. This saves a\nlot of memory when matches are rare. Still a problem when all the files\nmatch."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "committedDate": "2020-12-07T23:31:57Z", "message": "Fix: actually read the whole file lazily"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/139d4dc4c85de1cc2837c7c8aa2c07ac278d37eb", "committedDate": "2020-12-07T22:03:53Z", "message": "Fix: actually read the whole file lazily"}, "afterCommit": {"oid": "d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/d8cbe73e4a3f77dda19f9313ba241f5251c8f154", "committedDate": "2020-12-07T23:31:57Z", "message": "Fix: actually read the whole file lazily"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f77d26f251b99dfba9fcb887912a5a2a2a1f17b", "author": {"user": {"login": "mjambon", "name": "Martin Jambon"}}, "url": "https://github.com/returntocorp/semgrep/commit/8f77d26f251b99dfba9fcb887912a5a2a2a1f17b", "committedDate": "2020-12-08T00:20:18Z", "message": "Set GC to work less aggressively resulting in a 2x speedup (when run on\nthe spacegrep repo after a build)"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 817, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}