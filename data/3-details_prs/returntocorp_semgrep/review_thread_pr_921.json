{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4MTUxNDk4", "number": 921, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDowOTo0NFrOECxtoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozOToyOFrOECx_eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzQ3MTA0OnYy", "diffSide": "LEFT", "path": "semgrep-core/bin/Main.ml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDowOTo0NFrOGfcV0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDowOTo0NFrOGfcV0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyMzM3OA==", "bodyText": "Remove since this requires files have expected extension", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435623378", "createdAt": "2020-06-05T00:09:44Z", "author": {"login": "brendongo"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzUxMjc4OnYy", "diffSide": "RIGHT", "path": "semgrep-core/bin/Main.ml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozNjo0M1rOGfcvUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDo0MTo1M1rOGfc0JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw==", "bodyText": "How does this avoid double-passing files in each side?", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435629907", "createdAt": "2020-06-05T00:36:43Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -405,7 +405,13 @@ let get_final_files xs =\n     | Some lang -> Lang.files_of_dirs_or_files lang xs\n   in\n   let files = filter_files files in\n-  files\n+\n+  let explicit_files = xs |> List.filter(fun file ->\n+      Sys.file_exists file && not (Sys.is_directory file)\n+    )\n+  in\n+\n+  files @ explicit_files", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDg1Nw==", "bodyText": "FWIW, I'd think you'd make a set out of files, and check lack of set membership.", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435630857", "createdAt": "2020-06-05T00:40:44Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -405,7 +405,13 @@ let get_final_files xs =\n     | Some lang -> Lang.files_of_dirs_or_files lang xs\n   in\n   let files = filter_files files in\n-  files\n+\n+  let explicit_files = xs |> List.filter(fun file ->\n+      Sys.file_exists file && not (Sys.is_directory file)\n+    )\n+  in\n+\n+  files @ explicit_files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw=="}, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE0MA==", "bodyText": "Good call this doesn't dedup", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435631140", "createdAt": "2020-06-05T00:41:53Z", "author": {"login": "brendongo"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -405,7 +405,13 @@ let get_final_files xs =\n     | Some lang -> Lang.files_of_dirs_or_files lang xs\n   in\n   let files = filter_files files in\n-  files\n+\n+  let explicit_files = xs |> List.filter(fun file ->\n+      Sys.file_exists file && not (Sys.is_directory file)\n+    )\n+  in\n+\n+  files @ explicit_files", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYyOTkwNw=="}, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMzUxNjc0OnYy", "diffSide": "LEFT", "path": "semgrep-core/bin/Main.ml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQwMDozOToyOFrOGfcx4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNVQxNjo1OToyN1rOGf2NSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw==", "bodyText": "I think you want to move the langs_of_filename check in here, and keep the automated detection. So if someone omits -lang and passes in foo.py we parse as python, but if someone passes foo.blargh we error.", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435630563", "createdAt": "2020-06-05T00:39:28Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with\n-           | [lang] -> lang\n-           | x::_xs ->\n-               (match Lang.lang_of_string_opt !lang with\n-               | Some lang -> lang\n-               | None ->\n-                 pr2 (spf \"no language specified, defaulting to %s for %s\"\n-                      (Lang.string_of_lang x) file);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMTE2OQ==", "bodyText": "I think it's fine to not work when -lang is not passed?", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435631169", "createdAt": "2020-06-05T00:41:59Z", "author": {"login": "brendongo"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with\n-           | [lang] -> lang\n-           | x::_xs ->\n-               (match Lang.lang_of_string_opt !lang with\n-               | Some lang -> lang\n-               | None ->\n-                 pr2 (spf \"no language specified, defaulting to %s for %s\"\n-                      (Lang.string_of_lang x) file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTk5NzMxMw==", "bodyText": "OK, but then I think you'll want to audit all the documentation to make sure we have -lang in all our examples.\nIMO it's easier to make the smaller change here, but will leave it to you.", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r435997313", "createdAt": "2020-06-05T15:28:40Z", "author": {"login": "nbrahms"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with\n-           | [lang] -> lang\n-           | x::_xs ->\n-               (match Lang.lang_of_string_opt !lang with\n-               | Some lang -> lang\n-               | None ->\n-                 pr2 (spf \"no language specified, defaulting to %s for %s\"\n-                      (Lang.string_of_lang x) file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjA0NzE3Ng==", "bodyText": "This is to semgrep-core so it's not exposed externally anyway", "url": "https://github.com/returntocorp/semgrep/pull/921#discussion_r436047176", "createdAt": "2020-06-05T16:59:27Z", "author": {"login": "brendongo"}, "path": "semgrep-core/bin/Main.ml", "diffHunk": "@@ -415,18 +421,10 @@ let iter_generic_ast_of_files_and_get_matches_and_exn_to_errors f files =\n        if !verbose then pr2 (spf \"Analyzing %s\" file);\n        try\n          let lang =\n-           match Lang.langs_of_filename file with\n-           | [lang] -> lang\n-           | x::_xs ->\n-               (match Lang.lang_of_string_opt !lang with\n-               | Some lang -> lang\n-               | None ->\n-                 pr2 (spf \"no language specified, defaulting to %s for %s\"\n-                      (Lang.string_of_lang x) file);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTYzMDU2Mw=="}, "originalCommit": {"oid": "77a89aa07d49cad2beb84c82d869eaf1544bc415"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4532, "cost": 1, "resetAt": "2021-11-13T12:26:42Z"}}}