{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyMTQzNTY4", "number": 2178, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjowMzowNVrOFAhD1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjowMzowNVrOFAhD1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2MDg1OTcyOnYy", "diffSide": "LEFT", "path": "scripts/generate_test_matrix.py", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMjowMzowNVrOH-3DSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQyMDowNDo1OFrOH_gLhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA==", "bodyText": "Should we keep this and not include it in any of the alpha/beta/GA feature lists?", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r535675720", "createdAt": "2020-12-03T22:03:05Z", "author": {"login": "mschwager"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTczNTg4MA==", "bodyText": "I thought about leaving it in, but I think because it's javascript-specific it doesn't really belong in a cheatsheet with more generalized tests. It also leads to key errors in the new code \ud83d\ude13", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r535735880", "createdAt": "2020-12-04T00:01:34Z", "author": {"login": "colleend"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA=="}, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjE5Njc4Nw==", "bodyText": "I don't think there's anything inherently Javascript-specific to this feature, only that we've only implemented it for Javascript at the moment. I could see similar implementations for any language that supports key_value-like behavior, like Python and Ruby.\nIf we're getting errors I would lean toward fixing the errors instead of removing things until they go away \ud83d\udc4d", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r536196787", "createdAt": "2020-12-04T15:51:34Z", "author": {"login": "mschwager"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA=="}, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1NzExMA==", "bodyText": "i guess my question is -- are we planning on supporting it in other languages? If we're unsure, I feel like it's still better to remove it and place it back in later because it might give other people expectations that we'll be supporting this in other languages \ud83e\udd14\nI'm also not sure why we're keeping in regex_fieldname (which is currently only in js) as compared to something like metavar_typed_fieldaccess, which has tests in java and go \ud83e\udd14", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r536257110", "createdAt": "2020-12-04T17:25:43Z", "author": {"login": "colleend"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA=="}, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3NTkzNw==", "bodyText": "If we're unsure, I feel like it's still better to remove it and place it back in later because it might give other people expectations that we'll be supporting this in other languages\n\nThat's a good point. I had three reasons for including it originally: 1.) we'll continue to run the test and ensure the functionality continues to work, 2.) we'll understand our feature coverage by language for all features, not just common ones, and 3.) we'll include that feature's example code in our JSON output, which helps people trying to understanding the functionality in, e.g. the cloud app editor.\nIf people are concerned about this feature in other languages we can point them at our shiny new list that doesn't include it in any support tiers :)\n\nI'm also not sure why we're keeping in regex_fieldname (which is currently only in js) as compared to something like metavar_typed_fieldaccess, which has tests in java and go\n\nHuh, TIL about metavar_typed_fieldaccess! Similar to above, I'd vote we include this in VERBOSE_SUBCATEGORY_NAME and CHEATSHEET_ENTRIES for completeness sake.", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r536275937", "createdAt": "2020-12-04T17:55:58Z", "author": {"login": "mschwager"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA=="}, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjM0OTU3Mw==", "bodyText": "i see, makes sense to me \ud83d\udc4d good point that we'll have the alpha, beta, ga docs out soon.\nOk, i'll add in metavar typed fieldaccess and fieldname back in \ud83d\udc4d", "url": "https://github.com/returntocorp/semgrep/pull/2178#discussion_r536349573", "createdAt": "2020-12-04T20:04:58Z", "author": {"login": "colleend"}, "path": "scripts/generate_test_matrix.py", "diffHunk": "@@ -47,7 +47,6 @@\n     \"var\": \"Variables\",\n     \"naming_import\": \"Import Renaming/Aliasing\",\n     \"constant_propagation\": \"Constant Propagation\",\n-    \"fieldname\": \"Field Names\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY3NTcyMA=="}, "originalCommit": {"oid": "1b5cb20ff2d8611aab45680b6207683313bcc8e6"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4772, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}