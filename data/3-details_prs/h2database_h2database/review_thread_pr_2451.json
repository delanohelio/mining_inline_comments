{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1Nzg4NTA0", "number": 2451, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoxNDowNFrODgMc8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTowMDoxM1rODgNMqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDg1MDQzOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/command/Parser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoxNDowNFrOFqR6-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTozNzozNlrOFqTBoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODEzNw==", "bodyText": "Please, merge changes from the master branch and use \"'off' SSL\" here.", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379878137", "createdAt": "2020-02-16T06:14:04Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -1568,6 +1568,9 @@ private Prepared parseShow() {\n         } else if (readIf(\"SERVER_ENCODING\")) {\n             // for PostgreSQL compatibility\n             buff.append(\"'UTF8' AS SERVER_ENCODING FROM DUAL\");\n+        } else if (readIf(\"SSL\")) {\n+            // for PostgreSQL compatibility\n+            buff.append(\"'off' AS SSL FROM DUAL\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjIyNQ==", "bodyText": "merged", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379896225", "createdAt": "2020-02-16T11:37:36Z", "author": {"login": "auntyellow"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -1568,6 +1568,9 @@ private Prepared parseShow() {\n         } else if (readIf(\"SERVER_ENCODING\")) {\n             // for PostgreSQL compatibility\n             buff.append(\"'UTF8' AS SERVER_ENCODING FROM DUAL\");\n+        } else if (readIf(\"SSL\")) {\n+            // for PostgreSQL compatibility\n+            buff.append(\"'off' AS SSL FROM DUAL\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODEzNw=="}, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDg1MTU1OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/command/Parser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoxNzowOFrOFqR7jQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTozODoxN1rOFqTB0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODI4NQ==", "bodyText": "database.sysIdentifier() should be used here, but I'm not sure about the whole such replacement with this function. It doesn't have any real implementation and it isn't defined when PG server is not in use.", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379878285", "createdAt": "2020-02-16T06:17:08Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -4657,7 +4660,8 @@ private Expression readTerm() {\n                 read(DOT);\n             }\n             if (readIf(\"REGCLASS\")) {\n-                FunctionAlias f = findFunctionAlias(database.getMainSchema().getName(), \"PG_GET_OID\");\n+                FunctionAlias f = findFunctionAlias(database.getMainSchema().getName(),\n+                        identifiersToUpper ? \"PG_GET_OID\" : \"pg_get_oid\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjI3NQ==", "bodyText": "fixed", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379896275", "createdAt": "2020-02-16T11:38:17Z", "author": {"login": "auntyellow"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -4657,7 +4660,8 @@ private Expression readTerm() {\n                 read(DOT);\n             }\n             if (readIf(\"REGCLASS\")) {\n-                FunctionAlias f = findFunctionAlias(database.getMainSchema().getName(), \"PG_GET_OID\");\n+                FunctionAlias f = findFunctionAlias(database.getMainSchema().getName(),\n+                        identifiersToUpper ? \"PG_GET_OID\" : \"pg_get_oid\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODI4NQ=="}, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDg1MjkyOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/server/pg/pg_catalog.sql", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQwNjoyMjowM1rOFqR8PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTo0Mjo0NVrOFqTC2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODQ2MA==", "bodyText": "int array or some other normal data type should be used here.", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379878460", "createdAt": "2020-02-16T06:22:03Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/server/pg/pg_catalog.sql", "diffHunk": "@@ -149,6 +149,7 @@ create table pg_catalog.pg_proc(\n     oid int,\n     proname varchar_ignorecase,\n     prorettype int,\n+    proargtypes array,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NjUzOQ==", "bodyText": "fixed", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379896539", "createdAt": "2020-02-16T11:42:45Z", "author": {"login": "auntyellow"}, "path": "h2/src/main/org/h2/server/pg/pg_catalog.sql", "diffHunk": "@@ -149,6 +149,7 @@ create table pg_catalog.pg_proc(\n     oid int,\n     proname varchar_ignorecase,\n     prorettype int,\n+    proargtypes array,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg3ODQ2MA=="}, "originalCommit": {"oid": "677fa595e7e120768a7a7351605eaad870f1d2d9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MDk3MjU4OnYy", "diffSide": "RIGHT", "path": "h2/service/wrapper.conf", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMTowMDoxM1rOFqS5Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xNlQxMToxNToyN1rOFqS8rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NDA1OQ==", "bodyText": "You can't add this configuration file that easy. You need to adjust generation of Windows and ZIP distributions too, because they are currently packaged with another wrapper. It's better to do it in a separate pull request.\nSee also #2410.", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379894059", "createdAt": "2020-02-16T11:00:13Z", "author": {"login": "katzyn"}, "path": "h2/service/wrapper.conf", "diffHunk": "@@ -1,101 +1,101 @@\n-#********************************************************************\r\n-# Wrapper Properties\r\n-#********************************************************************\r\n-# Java Application\r\n-wrapper.java.command=java\r\n-\r\n-# Java Main class.  This class must implement the WrapperListener interface\r\n-#  or guarantee that the WrapperManager class is initialized.  Helper\r\n-#  classes are provided to do this for you.  See the Integration section\r\n-#  of the documentation for details.\r\n-wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp\r\n-\r\n-# Java Classpath (include wrapper.jar)  Add class path elements as\r\n-#  needed starting from 1\r\n-wrapper.java.classpath.1=wrapper.jar\r\n-wrapper.java.classpath.2=../bin/h2.jar\r\n-wrapper.java.classpath.3=%H2DRIVERS%\r\n-wrapper.java.classpath.4=%CLASSPATH%\r\n-\r\n-# Java Library Path (location of Wrapper.DLL or libwrapper.so)\r\n-wrapper.java.library.path.1=\r\n-\r\n-# Java Additional Parameters\r\n-#wrapper.java.additional.1=\r\n-\r\n-# Initial Java Heap Size (in MB)\r\n-#wrapper.java.initmemory=16\r\n-\r\n-# Maximum Java Heap Size (in MB)\r\n-#wrapper.java.maxmemory=64\r\n-\r\n-# Application parameters.  Add parameters as needed starting from 1\r\n-wrapper.app.parameter.1=org.h2.tools.Server\r\n-wrapper.app.parameter.2=-tcp\r\n-wrapper.app.parameter.3=-web\r\n-\r\n-#********************************************************************\r\n-# Wrapper Logging Properties\r\n-#********************************************************************\r\n-# Format of output for the console.  (See docs for formats)\r\n-wrapper.console.format=PM\r\n-\r\n-# Log Level for console output.  (See docs for log levels)\r\n-wrapper.console.loglevel=INFO\r\n-\r\n-# Log file to use for wrapper output logging.\r\n-wrapper.logfile=wrapper.log\r\n-\r\n-# Format of output for the log file.  (See docs for formats)\r\n-wrapper.logfile.format=LPTM\r\n-\r\n-# Log Level for log file output.  (See docs for log levels)\r\n-wrapper.logfile.loglevel=INFO\r\n-\r\n-# Maximum size that the log file will be allowed to grow to before\r\n-#  the log is rolled. Size is specified in bytes.  The default value\r\n-#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or\r\n-#  'm' (mb) suffix.  For example: 10m = 10 megabytes.\r\n-wrapper.logfile.maxsize=0\r\n-\r\n-# Maximum number of rolled log files which will be allowed before old\r\n-#  files are deleted.  The default value of 0 implies no limit.\r\n-wrapper.logfile.maxfiles=0\r\n-\r\n-# Log Level for sys/event log output.  (See docs for log levels)\r\n-wrapper.syslog.loglevel=NONE\r\n-\r\n-#********************************************************************\r\n-# Wrapper Windows Properties\r\n-#********************************************************************\r\n-# Title to use when running as a console\r\n-wrapper.console.title=H2 Console\r\n-\r\n-#********************************************************************\r\n-# Wrapper Windows NT/2000/XP Service Properties\r\n-#********************************************************************\r\n-# WARNING - Do not modify any of these properties when an application\r\n-#  using this configuration file has been installed as a service.\r\n-#  Please uninstall the service before modifying this section.  The\r\n-#  service can then be reinstalled.\r\n-\r\n-# Name of the service\r\n-wrapper.ntservice.name=H2DatabaseService\r\n-\r\n-# Display name of the service\r\n-wrapper.ntservice.displayname=H2 Database Engine Service\r\n-\r\n-# Description of the service\r\n-wrapper.ntservice.description=H2 Database Engine Service (TCP Server and H2 Console Web-Application)\r\n-\r\n-# Service dependencies.  Add dependencies as needed starting from 1\r\n-wrapper.ntservice.dependency.1=\r\n-\r\n-# Mode in which the service is installed.  AUTO_START or DEMAND_START\r\n-wrapper.ntservice.starttype=AUTO_START\r\n-\r\n-# Allow the service to interact with the desktop.\r\n-wrapper.ntservice.interactive=false\r\n-\r\n-# wrapper.ntservice.account=\r\n-# wrapper.ntservice.password=  \r\n+#********************************************************************\n+# Wrapper Properties\n+#********************************************************************\n+# Java Application", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bb92b8cd7ce38a7cd1bb6c47c746c327544dd97"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NDk1OA==", "bodyText": "Sorry, I make some mistakes duriing merge. This file should not be commited ;-(\nI will try rebase and double check before push.", "url": "https://github.com/h2database/h2database/pull/2451#discussion_r379894958", "createdAt": "2020-02-16T11:15:27Z", "author": {"login": "auntyellow"}, "path": "h2/service/wrapper.conf", "diffHunk": "@@ -1,101 +1,101 @@\n-#********************************************************************\r\n-# Wrapper Properties\r\n-#********************************************************************\r\n-# Java Application\r\n-wrapper.java.command=java\r\n-\r\n-# Java Main class.  This class must implement the WrapperListener interface\r\n-#  or guarantee that the WrapperManager class is initialized.  Helper\r\n-#  classes are provided to do this for you.  See the Integration section\r\n-#  of the documentation for details.\r\n-wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp\r\n-\r\n-# Java Classpath (include wrapper.jar)  Add class path elements as\r\n-#  needed starting from 1\r\n-wrapper.java.classpath.1=wrapper.jar\r\n-wrapper.java.classpath.2=../bin/h2.jar\r\n-wrapper.java.classpath.3=%H2DRIVERS%\r\n-wrapper.java.classpath.4=%CLASSPATH%\r\n-\r\n-# Java Library Path (location of Wrapper.DLL or libwrapper.so)\r\n-wrapper.java.library.path.1=\r\n-\r\n-# Java Additional Parameters\r\n-#wrapper.java.additional.1=\r\n-\r\n-# Initial Java Heap Size (in MB)\r\n-#wrapper.java.initmemory=16\r\n-\r\n-# Maximum Java Heap Size (in MB)\r\n-#wrapper.java.maxmemory=64\r\n-\r\n-# Application parameters.  Add parameters as needed starting from 1\r\n-wrapper.app.parameter.1=org.h2.tools.Server\r\n-wrapper.app.parameter.2=-tcp\r\n-wrapper.app.parameter.3=-web\r\n-\r\n-#********************************************************************\r\n-# Wrapper Logging Properties\r\n-#********************************************************************\r\n-# Format of output for the console.  (See docs for formats)\r\n-wrapper.console.format=PM\r\n-\r\n-# Log Level for console output.  (See docs for log levels)\r\n-wrapper.console.loglevel=INFO\r\n-\r\n-# Log file to use for wrapper output logging.\r\n-wrapper.logfile=wrapper.log\r\n-\r\n-# Format of output for the log file.  (See docs for formats)\r\n-wrapper.logfile.format=LPTM\r\n-\r\n-# Log Level for log file output.  (See docs for log levels)\r\n-wrapper.logfile.loglevel=INFO\r\n-\r\n-# Maximum size that the log file will be allowed to grow to before\r\n-#  the log is rolled. Size is specified in bytes.  The default value\r\n-#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or\r\n-#  'm' (mb) suffix.  For example: 10m = 10 megabytes.\r\n-wrapper.logfile.maxsize=0\r\n-\r\n-# Maximum number of rolled log files which will be allowed before old\r\n-#  files are deleted.  The default value of 0 implies no limit.\r\n-wrapper.logfile.maxfiles=0\r\n-\r\n-# Log Level for sys/event log output.  (See docs for log levels)\r\n-wrapper.syslog.loglevel=NONE\r\n-\r\n-#********************************************************************\r\n-# Wrapper Windows Properties\r\n-#********************************************************************\r\n-# Title to use when running as a console\r\n-wrapper.console.title=H2 Console\r\n-\r\n-#********************************************************************\r\n-# Wrapper Windows NT/2000/XP Service Properties\r\n-#********************************************************************\r\n-# WARNING - Do not modify any of these properties when an application\r\n-#  using this configuration file has been installed as a service.\r\n-#  Please uninstall the service before modifying this section.  The\r\n-#  service can then be reinstalled.\r\n-\r\n-# Name of the service\r\n-wrapper.ntservice.name=H2DatabaseService\r\n-\r\n-# Display name of the service\r\n-wrapper.ntservice.displayname=H2 Database Engine Service\r\n-\r\n-# Description of the service\r\n-wrapper.ntservice.description=H2 Database Engine Service (TCP Server and H2 Console Web-Application)\r\n-\r\n-# Service dependencies.  Add dependencies as needed starting from 1\r\n-wrapper.ntservice.dependency.1=\r\n-\r\n-# Mode in which the service is installed.  AUTO_START or DEMAND_START\r\n-wrapper.ntservice.starttype=AUTO_START\r\n-\r\n-# Allow the service to interact with the desktop.\r\n-wrapper.ntservice.interactive=false\r\n-\r\n-# wrapper.ntservice.account=\r\n-# wrapper.ntservice.password=  \r\n+#********************************************************************\n+# Wrapper Properties\n+#********************************************************************\n+# Java Application", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3OTg5NDA1OQ=="}, "originalCommit": {"oid": "3bb92b8cd7ce38a7cd1bb6c47c746c327544dd97"}, "originalPosition": 105}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2130, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}