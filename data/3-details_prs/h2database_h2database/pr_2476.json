{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMTY1MzMy", "number": 2476, "title": "Add some PostgreSQL compatibility features mentioned in issue #2450", "bodyText": "SET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()", "createdAt": "2020-03-02T04:24:20Z", "url": "https://github.com/h2database/h2database/pull/2476", "merged": true, "mergeCommit": {"oid": "d6cd45557c04df169eba12bed62beaea7de066c3"}, "closed": true, "closedAt": "2020-03-03T10:46:29Z", "author": {"login": "auntyellow"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcJn5AjABqjMwODY1OTg5MTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJ36DFgBqjMwOTAyOTQ2NjY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e8d86ec4e20c3053ab8ef23f07f3b4050248c0c", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/3e8d86ec4e20c3053ab8ef23f07f3b4050248c0c", "committedDate": "2020-03-02T04:21:17Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote not supported)\nfunction pg_table_is_visible()"}, "afterCommit": {"oid": "323d4749656b2f6888dba32916c42662fe0f43c4", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/323d4749656b2f6888dba32916c42662fe0f43c4", "committedDate": "2020-03-02T06:37:51Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2OTg1OTA4", "url": "https://github.com/h2database/h2database/pull/2476#pullrequestreview-366985908", "createdAt": "2020-03-02T07:14:16Z", "commit": {"oid": "323d4749656b2f6888dba32916c42662fe0f43c4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzoxNDoxNlrOFwVZRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQwNzoxNTozNFrOFwVagQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNjUwMg==", "bodyText": "All PostgreSQL-specific logic here should be restricted to PostgreSQL compatibility mode.", "url": "https://github.com/h2database/h2database/pull/2476#discussion_r386226502", "createdAt": "2020-03-02T07:14:16Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -7866,9 +7866,29 @@ private Prepared parseSet() {\n             readIfEqualOrTo();\n             Set command = new Set(session, SetTypes.SCHEMA_SEARCH_PATH);\n             ArrayList<String> list = Utils.newSmallArrayList();\n+            boolean hasPgCatalog = false;\n             do {\n-                list.add(readAliasIdentifier());\n+                // some PG clients will send single-quoted alias\n+                String s = currentTokenType == LITERAL ?\n+                        readString() : readAliasIdentifier();\n+                if (\"$USER\".equalsIgnoreCase(s)) {\n+                    continue;\n+                }\n+                if (\"PG_CATALOG\".equalsIgnoreCase(s)) {\n+                    hasPgCatalog = true;\n+                }\n+                list.add(s);\n             } while (readIf(COMMA));\n+            // for PostgreSQL compatibility\n+            // If \"pg_catalog\" is not in the path then it will be searched before\n+            // searching any of the path items. See\n+            // https://www.postgresql.org/docs/8.2/runtime-config-client.html\n+            if (!hasPgCatalog) {\n+                String pgCatalog = database.sysIdentifier(\"PG_CATALOG\");\n+                if (database.findSchema(pgCatalog) != null) {\n+                    list.add(0, pgCatalog);\n+                }\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "323d4749656b2f6888dba32916c42662fe0f43c4"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjIyNjgxNw==", "bodyText": "Please, remove this commented out code.", "url": "https://github.com/h2database/h2database/pull/2476#discussion_r386226817", "createdAt": "2020-03-02T07:15:34Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/unit/TestPgServer.java", "diffHunk": "@@ -666,6 +666,35 @@ private void testOtherPgClients() throws SQLException {\n                     \"WHERE \\\"n\\\".\\\"nspname\\\"='public';\")) {\n                 assertFalse(rs.next()); // \"pg_proc\" always empty\n             }\n+            try (ResultSet rs = stat.executeQuery(\"SELECT DISTINCT a.attname AS column_name, \" +\n+                    \"a.attnum, a.atttypid, FORMAT_TYPE(a.atttypid, a.atttypmod) AS data_type, \" +\n+                    \"CASE a.attnotnull WHEN false THEN 'YES' ELSE 'NO' END AS IS_NULLABLE, \" +\n+                    \"com.description AS column_comment, pg_get_expr(def.adbin, def.adrelid) AS column_default, \" +\n+                    \"NULL AS character_maximum_length FROM pg_attribute AS a \" +\n+                    \"JOIN pg_class AS pgc ON pgc.oid = a.attrelid \" +\n+                    \"LEFT JOIN pg_description AS com ON (pgc.oid = com.objoid AND a.attnum = com.objsubid) \" +\n+                    \"LEFT JOIN pg_attrdef AS def ON (a.attrelid = def.adrelid AND a.attnum = def.adnum) \" +\n+                    \"WHERE a.attnum > 0 AND pgc.oid = a.attrelid AND pg_table_is_visible(pgc.oid) \" +\n+                    \"AND NOT a.attisdropped AND pgc.relname = 'test' ORDER BY a.attnum\")) {\n+                assertTrue(rs.next());\n+                assertEquals(\"id\", rs.getString(\"column_name\"));\n+                assertTrue(rs.next());\n+                assertEquals(\"x1\", rs.getString(\"column_name\"));\n+                assertFalse(rs.next());\n+            }\n+            /* TODO\n+            try (ResultSet rs = stat.executeQuery(\"SELECT \\\"c\\\".\\\"conname\\\" AS \\\"CONSTRAINT_NAME\\\", \" +", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "323d4749656b2f6888dba32916c42662fe0f43c4"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "323d4749656b2f6888dba32916c42662fe0f43c4", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/323d4749656b2f6888dba32916c42662fe0f43c4", "committedDate": "2020-03-02T06:37:51Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}, "afterCommit": {"oid": "3988c6502f4837fe2dd07d95a57950ec7832c63a", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/3988c6502f4837fe2dd07d95a57950ec7832c63a", "committedDate": "2020-03-02T10:21:31Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MTIyNTc3", "url": "https://github.com/h2database/h2database/pull/2476#pullrequestreview-367122577", "createdAt": "2020-03-02T11:17:59Z", "commit": {"oid": "3988c6502f4837fe2dd07d95a57950ec7832c63a"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMToxODowMFrOFwb-Uw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMToyMzoxNVrOFwcHIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzNDI5MQ==", "bodyText": "PostgreSQL treats only lowercase $user in the special way.", "url": "https://github.com/h2database/h2database/pull/2476#discussion_r386334291", "createdAt": "2020-03-02T11:18:00Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -7866,9 +7866,34 @@ private Prepared parseSet() {\n             readIfEqualOrTo();\n             Set command = new Set(session, SetTypes.SCHEMA_SEARCH_PATH);\n             ArrayList<String> list = Utils.newSmallArrayList();\n-            do {\n-                list.add(readAliasIdentifier());\n-            } while (readIf(COMMA));\n+            if (database.getMode().getEnum() == Mode.ModeEnum.PostgreSQL) {\n+                boolean hasPgCatalog = false;\n+                do {\n+                    // some PG clients will send single-quoted alias\n+                    String s = currentTokenType == LITERAL ?\n+                            readString() : readAliasIdentifier();\n+                    if (\"$USER\".equalsIgnoreCase(s)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3988c6502f4837fe2dd07d95a57950ec7832c63a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjMzNjU0Nw==", "bodyText": "I think you need to check for exact name here too. The real PostgreSQL does not process its own pg_catalog before specified schemas only when pg_catalog is specified in the proper case in the search path.\npgCatalog.equals(s)", "url": "https://github.com/h2database/h2database/pull/2476#discussion_r386336547", "createdAt": "2020-03-02T11:23:15Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -7866,9 +7866,34 @@ private Prepared parseSet() {\n             readIfEqualOrTo();\n             Set command = new Set(session, SetTypes.SCHEMA_SEARCH_PATH);\n             ArrayList<String> list = Utils.newSmallArrayList();\n-            do {\n-                list.add(readAliasIdentifier());\n-            } while (readIf(COMMA));\n+            if (database.getMode().getEnum() == Mode.ModeEnum.PostgreSQL) {\n+                boolean hasPgCatalog = false;\n+                do {\n+                    // some PG clients will send single-quoted alias\n+                    String s = currentTokenType == LITERAL ?\n+                            readString() : readAliasIdentifier();\n+                    if (\"$USER\".equalsIgnoreCase(s)) {\n+                        continue;\n+                    }\n+                    if (\"PG_CATALOG\".equalsIgnoreCase(s)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3988c6502f4837fe2dd07d95a57950ec7832c63a"}, "originalPosition": 16}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3988c6502f4837fe2dd07d95a57950ec7832c63a", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/3988c6502f4837fe2dd07d95a57950ec7832c63a", "committedDate": "2020-03-02T10:21:31Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}, "afterCommit": {"oid": "2942d319d689846ec4c32897c7ae820140641c94", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/2942d319d689846ec4c32897c7ae820140641c94", "committedDate": "2020-03-02T14:19:23Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95b338cdeb2886f78e4ed8ad9adc6afd38acbcc7", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/95b338cdeb2886f78e4ed8ad9adc6afd38acbcc7", "committedDate": "2020-03-03T01:16:48Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2942d319d689846ec4c32897c7ae820140641c94", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/2942d319d689846ec4c32897c7ae820140641c94", "committedDate": "2020-03-02T14:19:23Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}, "afterCommit": {"oid": "95b338cdeb2886f78e4ed8ad9adc6afd38acbcc7", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/95b338cdeb2886f78e4ed8ad9adc6afd38acbcc7", "committedDate": "2020-03-03T01:16:48Z", "message": "Add some PostgreSQL compatibility features mentioned in issue #2450\n\nSET search_path TO 'public', '$user' (single quote supported)\nfunction pg_table_is_visible()"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3834, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}