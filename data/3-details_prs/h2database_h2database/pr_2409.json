{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2MjI0MDQ4", "number": 2409, "title": "Add own implementation of SQLType", "bodyText": "Closes #2194.\nI didn't allocate any LTS numbers for getVendorTypeNumber() here. Even the SQL Standard and JDBC have strange deviations in many numbers. Right now this method simply returns internal type numbers and its javadoc says that they are valid only for the current version.\nThis PR also contains some internal changes in names of constants and value implementations, not visible from our official API. Value.BYTES and ValueBytes are renamed to Value.VARBINARY and ValueVarbinary, for example. This class is going to be separated into VARBINARY and BINARY implementations, so it's better to have precise names of constants instead of BYTES. Value.FLOAT is renamed to Value.REAL, because the FLOAT is a different thing in SQL and such name only creates a confusion. And so on.", "createdAt": "2020-01-23T07:40:50Z", "url": "https://github.com/h2database/h2database/pull/2409", "merged": true, "mergeCommit": {"oid": "fc8cd7179d590aa0bc64fe6144e48b10b258befe"}, "closed": true, "closedAt": "2020-01-23T12:04:53Z", "author": {"login": "katzyn"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb8vrBhgH2gAyMzY2MjI0MDQ4OmU5NDBkZTNhMzEyMWNlNTBlNmIyYjkzN2ZiZjMwYjE1ZDM5OGRjY2Y=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb93EudgFqTM0ODMzNjI5Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e940de3a3121ce50e6b2b937fbf30b15d398dccf", "author": {"user": {"login": "katzyn", "name": "Evgenij Ryazanov"}}, "url": "https://github.com/h2database/h2database/commit/e940de3a3121ce50e6b2b937fbf30b15d398dccf", "committedDate": "2020-01-22T06:22:55Z", "message": "Fix building of documentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d568c78c7292df84bb758283b1ef293564a0219", "author": {"user": {"login": "katzyn", "name": "Evgenij Ryazanov"}}, "url": "https://github.com/h2database/h2database/commit/1d568c78c7292df84bb758283b1ef293564a0219", "committedDate": "2020-01-23T06:51:42Z", "message": "Use SQL names in other data type constants"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e139b29c645299dc084a53a7283462193bed178a", "author": {"user": {"login": "katzyn", "name": "Evgenij Ryazanov"}}, "url": "https://github.com/h2database/h2database/commit/e139b29c645299dc084a53a7283462193bed178a", "committedDate": "2020-01-23T06:59:42Z", "message": "Use SQL-like names for Value* classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a405c7ff258cc1d967c4c58417ae78dadca7858f", "author": {"user": {"login": "katzyn", "name": "Evgenij Ryazanov"}}, "url": "https://github.com/h2database/h2database/commit/a405c7ff258cc1d967c4c58417ae78dadca7858f", "committedDate": "2020-01-23T07:28:45Z", "message": "Add own implementation of SQLType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MzM2Mjk3", "url": "https://github.com/h2database/h2database/pull/2409#pullrequestreview-348336297", "createdAt": "2020-01-25T17:34:14Z", "commit": {"oid": "a405c7ff258cc1d967c4c58417ae78dadca7858f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzozNDoxNVrOFhwuEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNVQxNzozNDoxNVrOFhwuEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk0NTU1Mg==", "bodyText": "this string looks wrong?", "url": "https://github.com/h2database/h2database/pull/2409#discussion_r370945552", "createdAt": "2020-01-25T17:34:15Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/api/H2Type.java", "diffHunk": "@@ -0,0 +1,273 @@\n+/*\n+ * Copyright 2004-2020 H2 Group. Multiple-Licensed under the MPL 2.0,\n+ * and the EPL 1.0 (https://h2database.com/html/license.html).\n+ * Initial Developer: H2 Group\n+ */\n+package org.h2.api;\n+\n+import java.sql.SQLType;\n+\n+import org.h2.value.Value;\n+\n+/**\n+ * Data types of H2.\n+ */\n+public enum H2Type implements SQLType {\n+\n+    // Exact numeric data types\n+\n+    /**\n+     * The TINYINT data type.\n+     */\n+    TINYINT(\"TINYINT\", Value.TINYINT),\n+\n+    /**\n+     * The SMALLINT data type.\n+     */\n+    SMALLINT(\"SMALLINT\", Value.SMALLINT),\n+\n+    /**\n+     * The INTEGER data type.\n+     */\n+    INTEGER(\"INTEGER\", Value.INTEGER),\n+\n+    /**\n+     * The BIGINT data type.\n+     */\n+    BIGINT(\"BIGINT\", Value.BIGINT),\n+\n+    /**\n+     * The NUMERIC data type.\n+     */\n+    NUMERIC(\"NUMERIC\", Value.NUMERIC),\n+\n+    // Approximate numeric data types\n+\n+    /**\n+     * The REAL data type.\n+     */\n+    REAL(\"REAL\", Value.REAL),\n+\n+    /**\n+     * The DOUBLE data type.\n+     */\n+    DOUBLE(\"DOUBLE\", Value.DOUBLE),\n+\n+    // Character strings\n+\n+    /**\n+     * The CHAR data type.\n+     */\n+    CHAR(\"CHAR\", Value.CHAR),\n+\n+    /**\n+     * The VARCHAR data type.\n+     */\n+    VARCHAR(\"VARCHAR\", Value.VARCHAR),\n+\n+    /**\n+     * The VARCHAR_IGNORECASE data type.\n+     */\n+    VARCHAR_IGNORECASE(\"VARCHAR_IGNORECASE\", Value.VARCHAR_IGNORECASE),\n+\n+    /**\n+     * The CLOB data type.\n+     */\n+    CLOB(\"CLOB\", Value.CLOB),\n+\n+    // Date-time data types\n+\n+    /**\n+     * The DATE data type.\n+     */\n+    DATE(\"DATE\", Value.DATE),\n+\n+    /**\n+     * The TIME data type.\n+     */\n+    TIME(\"TIME\", Value.TIME),\n+\n+    /**\n+     * The TIME WITH TIME ZONE data type.\n+     */\n+    TIME_WITH_TIME_ZONE(\"TIME WITH TIME ZONE\", Value.TIME_TZ),\n+\n+    /**\n+     * The TIMESTAMP data type.\n+     */\n+    TIMESTAMP(\"TIMESTAMP\", Value.TIMESTAMP),\n+\n+    /**\n+     * The TIMESTAMP WITH TIME ZONE data type.\n+     */\n+    TIMESTAMP_WITH_TIME_ZONE(\"TIMESTAMP WITH TIME ZONE\", Value.TIMESTAMP_TZ),\n+\n+    // Intervals\n+\n+    /**\n+     * The INTERVAL YEAR data type.\n+     */\n+    INTERVAL_YEAR(\"INTERVAL YEAR\", Value.INTERVAL_YEAR),\n+\n+    /**\n+     * The INTERVAL MONTH data type.\n+     */\n+    INTERVAL_MONTH(\"INTERVAL MONTH\", Value.INTERVAL_MONTH),\n+\n+    /**\n+     * The INTERVAL DAY data type.\n+     */\n+    INTERVAL_DAY(\"INTERVAL DAY\", Value.INTERVAL_DAY),\n+\n+    /**\n+     * The INTERVAL HOUR data type.\n+     */\n+    INTERVAL_HOUR(\"INTERVAL HOUR\", Value.INTERVAL_HOUR),\n+\n+    /**\n+     * The INTERVAL MINUTE data type.\n+     */\n+    INTERVAL_MINUTE(\"INTERVAL MINUTE\", Value.INTERVAL_MINUTE),\n+\n+    /**\n+     * The INTERVAL SECOND data type.\n+     */\n+    INTERVAL_SECOND(\"INTERVAL SECOND\", Value.INTERVAL_SECOND),\n+\n+    /**\n+     * The INTERVAL YEAR TO MONTH data type.\n+     */\n+    INTERVAL_YEAR_TO_MONTH(\"INTERVAL YEAR TO MONTH\", Value.INTERVAL_YEAR_TO_MONTH),\n+\n+    /**\n+     * The INTERVAL DAY TO HOUR data type.\n+     */\n+    INTERVAL_DAY_TO_HOUR(\"INTERVAL DAY TO HOUR\", Value.INTERVAL_DAY_TO_HOUR),\n+\n+    /**\n+     * The INTERVAL DAY TO MINUTE data type.\n+     */\n+    INTERVAL_DAY_TO_MINUTE(\"INTERVAL DAY TO MINUTE\", Value.INTERVAL_DAY_TO_MINUTE),\n+\n+    /**\n+     * The INTERVAL DAY TO SECOND data type.\n+     */\n+    INTERVAL_DAY_TO_SECOND(\"INTERVAL DAY_TO_SECOND\", Value.INTERVAL_DAY_TO_SECOND),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a405c7ff258cc1d967c4c58417ae78dadca7858f"}, "originalPosition": 155}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3905, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}