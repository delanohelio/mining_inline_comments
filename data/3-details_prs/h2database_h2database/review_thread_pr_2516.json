{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMzkwODYx", "number": 2516, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzowMTo1OVrODpGY_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzoxMjoxM1rODpGoNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDIyOTExOnYy", "diffSide": "RIGHT", "path": "h2/src/test/org/h2/test/server/TestAutoServer.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzowMTo1OVrOF4D4eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzozMDo1OFrOF4FAMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyODE4NQ==", "bodyText": "It looks like indentation is too large here and below.", "url": "https://github.com/h2database/h2database/pull/2516#discussion_r394328185", "createdAt": "2020-03-18T13:01:59Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/server/TestAutoServer.java", "diffHunk": "@@ -72,42 +72,40 @@ private void testAutoServer(boolean port) throws Exception {\n             url += \";AUTO_SERVER_PORT=11111\";\n         }\n         String user = getUser(), password = getPassword();\n-        Connection connServer = getConnection(url + \";OPEN_NEW=TRUE\",\n-                user, password);\n-\n-        int i = ITERATIONS;\n-        for (; i > 0; i--) {\n-            Thread.sleep(100);\n-            SortedProperties prop = SortedProperties.loadProperties(\n-                    getBaseDir() + \"/\" + getTestName() + \".lock.db\");\n-            String key = prop.getProperty(\"id\");\n-            String server = prop.getProperty(\"server\");\n-            if (server != null) {\n-                String u2 = url.substring(url.indexOf(';'));\n-                u2 = \"jdbc:h2:tcp://\" + server + \"/\" + key + u2;\n-                Connection conn = DriverManager.getConnection(u2, user, password);\n-                conn.close();\n-                int gotPort = Integer.parseInt(server.substring(server.lastIndexOf(':') + 1));\n-                if (port) {\n-                    assertEquals(11111, gotPort);\n+        Connection connServer = getConnection(url + \";OPEN_NEW=TRUE\", user, password);\n+            int i = ITERATIONS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b6e29e9eb3444d6705b099748096c11845056"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDM0NjU0Nw==", "bodyText": "It meant to be try-with-resorce", "url": "https://github.com/h2database/h2database/pull/2516#discussion_r394346547", "createdAt": "2020-03-18T13:30:58Z", "author": {"login": "andreitokar"}, "path": "h2/src/test/org/h2/test/server/TestAutoServer.java", "diffHunk": "@@ -72,42 +72,40 @@ private void testAutoServer(boolean port) throws Exception {\n             url += \";AUTO_SERVER_PORT=11111\";\n         }\n         String user = getUser(), password = getPassword();\n-        Connection connServer = getConnection(url + \";OPEN_NEW=TRUE\",\n-                user, password);\n-\n-        int i = ITERATIONS;\n-        for (; i > 0; i--) {\n-            Thread.sleep(100);\n-            SortedProperties prop = SortedProperties.loadProperties(\n-                    getBaseDir() + \"/\" + getTestName() + \".lock.db\");\n-            String key = prop.getProperty(\"id\");\n-            String server = prop.getProperty(\"server\");\n-            if (server != null) {\n-                String u2 = url.substring(url.indexOf(';'));\n-                u2 = \"jdbc:h2:tcp://\" + server + \"/\" + key + u2;\n-                Connection conn = DriverManager.getConnection(u2, user, password);\n-                conn.close();\n-                int gotPort = Integer.parseInt(server.substring(server.lastIndexOf(':') + 1));\n-                if (port) {\n-                    assertEquals(11111, gotPort);\n+        Connection connServer = getConnection(url + \";OPEN_NEW=TRUE\", user, password);\n+            int i = ITERATIONS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMyODE4NQ=="}, "originalCommit": {"oid": "d55b6e29e9eb3444d6705b099748096c11845056"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0NDI2ODA2OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/pagestore/PageStore.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzoxMjoxM1rOF4EQ7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxMzoxMjoxM1rOF4EQ7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDMzNDQ0NA==", "bodyText": "Such line wrapping looks weird, it's better to place compactMode == 0 on the same line with && conditions to group all operands of logical AND together and have logical OR operands on different lines.\nIndentation of line 481 has one extra space character, build script will complain about it.", "url": "https://github.com/h2database/h2database/pull/2516#discussion_r394334444", "createdAt": "2020-03-18T13:12:13Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/pagestore/PageStore.java", "diffHunk": "@@ -477,7 +477,8 @@ public synchronized void compact(int compactMode) {\n             return;\n         }\n         if (SysProperties.MODIFY_ON_WRITE && readMode &&\n-                compactMode == 0) {\n+                compactMode == 0 ||\n+                 compactMode == CommandInterface.SHUTDOWN_IMMEDIATELY) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d55b6e29e9eb3444d6705b099748096c11845056"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2145, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}