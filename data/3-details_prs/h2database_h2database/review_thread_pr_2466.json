{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4NzI3MTM5", "number": 2466, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwMjozMDo0NFrODiMwkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwMjozNTowMVrODiMyIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTg3MjE5OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/command/Parser.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwMjozMDo0NFrOFtUl4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwMjozMDo0NFrOFtUl4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA2NzYxOQ==", "bodyText": "if (database.getMode().getEnum() == ModeEnum.MySQL) {\n\u2026\n}", "url": "https://github.com/h2database/h2database/pull/2466#discussion_r383067619", "createdAt": "2020-02-24T02:30:44Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -6001,6 +6001,13 @@ private Column parseColumnForTable(String columnName, boolean defaultNullable) {\n             int value = readNonNegativeInt();\n             column.setSelectivity(value);\n         }\n+        if (readIf(\"CHARACTER\")) {\n+            readIf(SET);\n+            readMySQLCharset();\n+        }\n+        if (readIf(\"COLLATE\")) {\n+            readMySQLCharset();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f359b8ccc9ec0c2cdeea6d5b887d11fbacf7752"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3MTg3NjE2OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/command/Parser.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQwMjozNTowMVrOFtUn-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxMTo1MjoxOFrOFteCaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA2ODE1Mw==", "bodyText": "if (!readIf(\"UTF8\") && !readIf(\"UTF8MB4\")) {\n    read(\"UTF8MB4_BIN\");\n}\nor something like it.", "url": "https://github.com/h2database/h2database/pull/2466#discussion_r383068153", "createdAt": "2020-02-24T02:35:01Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -9106,9 +9116,9 @@ private void parseCreateTableMySQLTableOptions(CreateTable command) {\n \n     private void readMySQLCharset() {\n         readIf(EQUAL);\n-        if (!readIf(\"UTF8\")) {\n-            read(\"UTF8MB4\");\n-        }\n+        readIf(\"UTF8\");\n+        readIf(\"UTF8MB4\");\n+        readIf(\"UTF8MB4_BIN\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1f359b8ccc9ec0c2cdeea6d5b887d11fbacf7752"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIxNzkwMA==", "bodyText": "Would you be interested in a function in the kind of\nreadAny(List<String> tokens) or ReadOneOf(List<String> tokens)?\nIf not, I'll apply your changes ASAP :)", "url": "https://github.com/h2database/h2database/pull/2466#discussion_r383217900", "createdAt": "2020-02-24T11:41:05Z", "author": {"login": "Drahakar"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -9106,9 +9116,9 @@ private void parseCreateTableMySQLTableOptions(CreateTable command) {\n \n     private void readMySQLCharset() {\n         readIf(EQUAL);\n-        if (!readIf(\"UTF8\")) {\n-            read(\"UTF8MB4\");\n-        }\n+        readIf(\"UTF8\");\n+        readIf(\"UTF8MB4\");\n+        readIf(\"UTF8MB4_BIN\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA2ODE1Mw=="}, "originalCommit": {"oid": "1f359b8ccc9ec0c2cdeea6d5b887d11fbacf7752"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzIyMjM3OQ==", "bodyText": "No, they will be slower and they aren't normally needed.\nIn this specific case you actually can use readUniqueIdentifier(). We aren't going to do something with these encodings and collations and can accept and ignore any name. I don't see any reason to limit it to these three values.", "url": "https://github.com/h2database/h2database/pull/2466#discussion_r383222379", "createdAt": "2020-02-24T11:52:18Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -9106,9 +9116,9 @@ private void parseCreateTableMySQLTableOptions(CreateTable command) {\n \n     private void readMySQLCharset() {\n         readIf(EQUAL);\n-        if (!readIf(\"UTF8\")) {\n-            read(\"UTF8MB4\");\n-        }\n+        readIf(\"UTF8\");\n+        readIf(\"UTF8MB4\");\n+        readIf(\"UTF8MB4_BIN\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzA2ODE1Mw=="}, "originalCommit": {"oid": "1f359b8ccc9ec0c2cdeea6d5b887d11fbacf7752"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2133, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}