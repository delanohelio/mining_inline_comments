{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0OTU3NzM1", "number": 2613, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNjowM1rOD6fohw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNDowNzowMlrOEHa_JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjYyMjc5OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNjowM1rOGSXYrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNjowM1rOGSXYrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxMDcwMg==", "bodyText": "Increase visibility of DateTimeFunctions.extractIntegerField() and use it here (DateTimeFunctions.extractIntegerField(session, DateTimeFunctions.TIMEZONE_HOUR, value);.\n\n\nPass StringBuilder directly to this method and to printTimeZoneHoursFromOffsetSeconds().\n\n\nInline printTimeZoneHoursFromOffsetSeconds() into this method.\n\n\nIf resulting method will be not very large, inline it into toCharDateTime().", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r421910702", "createdAt": "2020-05-08T03:06:03Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -546,6 +546,54 @@ private static String getTimeZone(Session session, Value value, boolean tzd) {\n         }\n     }\n \n+    private static String getTimeZoneHours(Session session, Value value) {\n+        if(value instanceof ValueTimestampTimeZone) {\n+            return printTimeZoneHoursFromOffsetSeconds(((ValueTimestampTimeZone) value).getTimeZoneOffsetSeconds());\n+        } else if( value instanceof ValueTimeTimeZone) {\n+            return printTimeZoneHoursFromOffsetSeconds( ((ValueTimeTimeZone)value).getTimeZoneOffsetSeconds());\n+        } else {\n+            TimeZoneProvider tz = session.currentTimeZone();\n+            ValueTimestamp v = (ValueTimestamp) value.convertTo(TypeInfo.TYPE_TIMESTAMP, session);\n+            return printTimeZoneHoursFromOffsetSeconds(tz.getTimeZoneOffsetLocal(v.getDateValue(), v.getTimeNanos()));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4eac17a0a0650d4bff9c0daf5ec4cb7d21c7148"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjYyNDQ1OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNjo1OFrOGSXZsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNjo1OFrOGSXZsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxMDk2Mw==", "bodyText": "The same here.", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r421910963", "createdAt": "2020-05-08T03:06:58Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -546,6 +546,54 @@ private static String getTimeZone(Session session, Value value, boolean tzd) {\n         }\n     }\n \n+    private static String getTimeZoneHours(Session session, Value value) {\n+        if(value instanceof ValueTimestampTimeZone) {\n+            return printTimeZoneHoursFromOffsetSeconds(((ValueTimestampTimeZone) value).getTimeZoneOffsetSeconds());\n+        } else if( value instanceof ValueTimeTimeZone) {\n+            return printTimeZoneHoursFromOffsetSeconds( ((ValueTimeTimeZone)value).getTimeZoneOffsetSeconds());\n+        } else {\n+            TimeZoneProvider tz = session.currentTimeZone();\n+            ValueTimestamp v = (ValueTimestamp) value.convertTo(TypeInfo.TYPE_TIMESTAMP, session);\n+            return printTimeZoneHoursFromOffsetSeconds(tz.getTimeZoneOffsetLocal(v.getDateValue(), v.getTimeNanos()));\n+        }\n+    }\n+\n+    private static String getTimeZoneMinutes(Session session, Value value) {\n+        if(value instanceof ValueTimestampTimeZone) {\n+            return printTimeZoneMinutesFromOffsetSeconds(((ValueTimestampTimeZone) value).getTimeZoneOffsetSeconds());\n+        } else if( value instanceof ValueTimeTimeZone) {\n+            return printTimeZoneMinutesFromOffsetSeconds( ((ValueTimeTimeZone)value).getTimeZoneOffsetSeconds());\n+        } else {\n+            TimeZoneProvider tz = session.currentTimeZone();\n+            ValueTimestamp v = (ValueTimestamp) value.convertTo(TypeInfo.TYPE_TIMESTAMP, session);\n+            return printTimeZoneMinutesFromOffsetSeconds(tz.getTimeZoneOffsetLocal(v.getDateValue(), v.getTimeNanos()));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4eac17a0a0650d4bff9c0daf5ec4cb7d21c7148"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjYyNDgzOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/util/DateTimeUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNzoxNlrOGSXZ8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzowNzoxNlrOGSXZ8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxMTAyNw==", "bodyText": "Please, remove this extra line.", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r421911027", "createdAt": "2020-05-08T03:07:16Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/util/DateTimeUtils.java", "diffHunk": "@@ -1077,6 +1077,7 @@ public static String timeZoneNameFromOffsetSeconds(int offsetSeconds) {\n         return b.toString();\n     }\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4eac17a0a0650d4bff9c0daf5ec4cb7d21c7148"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNjYzNjgyOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzoxNDowMlrOGSXg5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQwMzoxNDowMlrOGSXg5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTkxMjgwNQ==", "bodyText": "Please, add space after if and move // Week comment below.", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r421912805", "createdAt": "2020-05-08T03:14:02Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -831,6 +879,14 @@ public static String toCharDateTime(Session session, Value value, String format,\n \n                 // Week\n \n+            } else if(containsAt(format, i, \"TZH\") != null) {\n+                output.append(getTimeZoneHours(session, value));\n+                i += 3;\n+\n+            } else if(containsAt(format, i, \"TZM\") != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4eac17a0a0650d4bff9c0daf5ec4cb7d21c7148"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjExNTYxOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMzoxNjoyN1rOGmwzlA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMzoxNjoyN1rOGmwzlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5ODcwOA==", "bodyText": "Please, remove result and b, there is no need for their allocation. You can append everything to the output directly.", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r443298708", "createdAt": "2020-06-22T03:16:27Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -828,9 +828,32 @@ public static String toCharDateTime(Session session, Value value, String format,\n             } else if (containsAt(format, i, \"TZD\") != null) {\n                 output.append(getTimeZone(session, value, true));\n                 i += 3;\n+            } else if (containsAt(format, i, \"TZH\") != null) {\n+                String result;\n+                int hours = DateTimeFunctions.extractIntegerField(session, value, DateTimeFunctions.TIMEZONE_HOUR);\n+                StringBuilder b = new StringBuilder();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a04618cdff10e2f589caefe33d80da4ed564460c"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjExODkxOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMzoxOTozMVrOGmw1nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMzoxOTozMVrOGmw1nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5OTIyOA==", "bodyText": "output.append(\"00\") / StringUtils.appendTwoDigits(output, mins).\nAlso add a space between if and ( here and above.", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r443299228", "createdAt": "2020-06-22T03:19:31Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -828,9 +828,32 @@ public static String toCharDateTime(Session session, Value value, String format,\n             } else if (containsAt(format, i, \"TZD\") != null) {\n                 output.append(getTimeZone(session, value, true));\n                 i += 3;\n+            } else if (containsAt(format, i, \"TZH\") != null) {\n+                String result;\n+                int hours = DateTimeFunctions.extractIntegerField(session, value, DateTimeFunctions.TIMEZONE_HOUR);\n+                StringBuilder b = new StringBuilder();\n+                b.append( hours < 0 ? '-' : '+');\n+                hours = Math.abs(hours);\n+                if(hours == 0) {\n+                    result = b.append(\"00\").toString();\n+                } else {\n+                    result = StringUtils.appendTwoDigits(b, hours).toString();\n+                }\n+                output.append(result);\n+                i += 3;\n \n-                // Week\n+            } else if (containsAt(format, i, \"TZM\") != null) {\n+                String result;\n+                int mins = Math.abs(DateTimeFunctions.extractIntegerField(session, value, DateTimeFunctions.TIMEZONE_MINUTE));\n+                if(mins == 0) {\n+                    result = \"00\";\n+                } else {\n+                    result = StringUtils.appendTwoDigits(new StringBuilder(), mins).toString();\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a04618cdff10e2f589caefe33d80da4ed564460c"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjE3NjM3OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/expression/function/ToChar.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNDowNzowMlrOGmxXAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNDoxMToyNlrOGmxaIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwNzc3OQ==", "bodyText": "BTW, what is the point of this condition? Unconditional StringUtils.appendTwoDigits(output, hours) should produce the same result, or I'm missing something?", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r443307779", "createdAt": "2020-06-22T04:07:02Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -835,9 +835,27 @@ public static String toCharDateTime(Session session, Value value, String format,\n             } else if (containsAt(format, i, \"TZD\") != null) {\n                 output.append(getTimeZone(session, value, true));\n                 i += 3;\n+            } else if (containsAt(format, i, \"TZH\") != null) {\n+                int hours = DateTimeFunction.extractDateTime(session, value, DateTimeFunction.TIMEZONE_HOUR);\n+                output.append( hours < 0 ? '-' : '+');\n+                hours = Math.abs(hours);\n+                if (hours == 0) {\n+                    output.append(\"00\");\n+                } else {\n+                  StringUtils.appendTwoDigits(output, hours);\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01c36497b5ad2015712b2536df969a1dc28c036a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwODU3OQ==", "bodyText": "There's no difference, I've made that change", "url": "https://github.com/h2database/h2database/pull/2613#discussion_r443308579", "createdAt": "2020-06-22T04:11:26Z", "author": {"login": "paroxysm"}, "path": "h2/src/main/org/h2/expression/function/ToChar.java", "diffHunk": "@@ -835,9 +835,27 @@ public static String toCharDateTime(Session session, Value value, String format,\n             } else if (containsAt(format, i, \"TZD\") != null) {\n                 output.append(getTimeZone(session, value, true));\n                 i += 3;\n+            } else if (containsAt(format, i, \"TZH\") != null) {\n+                int hours = DateTimeFunction.extractDateTime(session, value, DateTimeFunction.TIMEZONE_HOUR);\n+                output.append( hours < 0 ? '-' : '+');\n+                hours = Math.abs(hours);\n+                if (hours == 0) {\n+                    output.append(\"00\");\n+                } else {\n+                  StringUtils.appendTwoDigits(output, hours);\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMwNzc3OQ=="}, "originalCommit": {"oid": "01c36497b5ad2015712b2536df969a1dc28c036a"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2169, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}