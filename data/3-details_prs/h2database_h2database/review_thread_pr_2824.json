{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTgwMDE1", "number": 2824, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozNToxOVrOEZVNEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozNToxOVrOEZVNEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTk3MjY2OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/engine/Database.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozNToxOVrOHCFRJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxNTo1Mjo1MVrOHCbCNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTUwOQ==", "bodyText": "I'd remove this piece - if you can't be bothered to obey the documented DbEventListener API, I don't see why we should leave the DB in some weird state.\nRather dump an exception and continue", "url": "https://github.com/h2database/h2database/pull/2824#discussion_r471945509", "createdAt": "2020-08-18T06:35:19Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/engine/Database.java", "diffHunk": "@@ -1339,38 +1339,38 @@ void close(boolean fromShutdownHook) {\n     }\n \n     private void closeImpl(boolean fromShutdownHook) {\n-        try {\n-            synchronized (this) {\n-                if (closing) {\n+        synchronized (this) {\n+            if (closing) {\n+                return;\n+            }\n+            closing = true;\n+            stopServer();\n+            if (!userSessions.isEmpty()) {\n+                if (!fromShutdownHook) {\n                     return;\n                 }\n-                closing = true;\n-                stopServer();\n+                trace.info(\"closing {0} from shutdown hook\", databaseName);\n+                closeAllSessionsExcept(null);\n+            }\n+            trace.info(\"closing {0}\", databaseName);\n+            if (eventListener != null) {\n+                // allow the event listener to connect to the database\n+                closing = false;\n+                DatabaseEventListener e = eventListener;\n+                // set it to null, to make sure it's called only once\n+                eventListener = null;\n+                e.closingDatabase();\n                 if (!userSessions.isEmpty()) {\n-                    if (!fromShutdownHook) {\n-                        return;\n-                    }\n-                    trace.info(\"closing {0} from shutdown hook\", databaseName);\n-                    closeAllSessionsExcept(null);\n-                }\n-                trace.info(\"closing {0}\", databaseName);\n-                if (eventListener != null) {\n-                    // allow the event listener to connect to the database\n-                    closing = false;\n-                    DatabaseEventListener e = eventListener;\n-                    // set it to null, to make sure it's called only once\n-                    eventListener = null;\n-                    e.closingDatabase();\n-                    if (!userSessions.isEmpty()) {\n-                        // if a connection was opened, we can't close the database\n-                        return;\n-                    }\n-                    closing = true;\n-                }\n-                if (!this.isReadOnly()) {\n-                    removeOrphanedLobs();\n+                    // if a connection was opened, we can't close the database\n+                    return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjMwMjEzNA==", "bodyText": "done", "url": "https://github.com/h2database/h2database/pull/2824#discussion_r472302134", "createdAt": "2020-08-18T15:52:51Z", "author": {"login": "andreitokar"}, "path": "h2/src/main/org/h2/engine/Database.java", "diffHunk": "@@ -1339,38 +1339,38 @@ void close(boolean fromShutdownHook) {\n     }\n \n     private void closeImpl(boolean fromShutdownHook) {\n-        try {\n-            synchronized (this) {\n-                if (closing) {\n+        synchronized (this) {\n+            if (closing) {\n+                return;\n+            }\n+            closing = true;\n+            stopServer();\n+            if (!userSessions.isEmpty()) {\n+                if (!fromShutdownHook) {\n                     return;\n                 }\n-                closing = true;\n-                stopServer();\n+                trace.info(\"closing {0} from shutdown hook\", databaseName);\n+                closeAllSessionsExcept(null);\n+            }\n+            trace.info(\"closing {0}\", databaseName);\n+            if (eventListener != null) {\n+                // allow the event listener to connect to the database\n+                closing = false;\n+                DatabaseEventListener e = eventListener;\n+                // set it to null, to make sure it's called only once\n+                eventListener = null;\n+                e.closingDatabase();\n                 if (!userSessions.isEmpty()) {\n-                    if (!fromShutdownHook) {\n-                        return;\n-                    }\n-                    trace.info(\"closing {0} from shutdown hook\", databaseName);\n-                    closeAllSessionsExcept(null);\n-                }\n-                trace.info(\"closing {0}\", databaseName);\n-                if (eventListener != null) {\n-                    // allow the event listener to connect to the database\n-                    closing = false;\n-                    DatabaseEventListener e = eventListener;\n-                    // set it to null, to make sure it's called only once\n-                    eventListener = null;\n-                    e.closingDatabase();\n-                    if (!userSessions.isEmpty()) {\n-                        // if a connection was opened, we can't close the database\n-                        return;\n-                    }\n-                    closing = true;\n-                }\n-                if (!this.isReadOnly()) {\n-                    removeOrphanedLobs();\n+                    // if a connection was opened, we can't close the database\n+                    return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTUwOQ=="}, "originalCommit": {"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2117, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}