{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3MTg3MzY2", "number": 2415, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMDozMToxMVrODathzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMDozMjo1NFrODatiCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzM1NTAzOnYy", "diffSide": "RIGHT", "path": "h2/src/test/org/h2/test/jdbc/TestResultSet.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMDozMToxMVrOFhzVVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMzoxOToyNlrOFhz7qA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODM3Mg==", "bodyText": "if\nsetObject(foo, enum or geometry, Types.OTHER)\nno longer works, that is an API change, and will quite likely break some client code", "url": "https://github.com/h2database/h2database/pull/2415#discussion_r370988372", "createdAt": "2020-01-26T10:31:11Z", "author": {"login": "grandinj"}, "path": "h2/src/test/org/h2/test/jdbc/TestResultSet.java", "diffHunk": "@@ -1949,13 +1949,7 @@ private void testEnum() throws SQLException {\n         prep.setObject(2, \"D\", Types.VARCHAR);\n         prep.executeUpdate();\n         prep.setInt(1, 5);\n-        prep.setObject(2, \"E\", Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 6);\n-        prep.setObject(2, 5, Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 7);\n-        prep.setObject(2, 6, Types.INTEGER);\n+        prep.setObject(2, 4, Types.INTEGER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a533c0f0d4209459a9def1427f5115abfed7e745"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODk3MQ==", "bodyText": "I introduced such support in e41b444 and that change isn't related in any way with the original issue about ENUM.\nOn the other hand, the Types.OTHER should not be the same as Types.JAVA_OBJECT. setObject() with Types.OTHER should not be mapped to ValueJavaObject like it currently does. OTHER is just a placeholder for database-specific data types. It isn't needed since JDBC 4.2, because in 4.2 database can provide own data types.\nPerhaps H2 should not create ValueJavaObject for Types.OTHER if more specific data type can be determined from the passed value.", "url": "https://github.com/h2database/h2database/pull/2415#discussion_r370988971", "createdAt": "2020-01-26T10:41:29Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/jdbc/TestResultSet.java", "diffHunk": "@@ -1949,13 +1949,7 @@ private void testEnum() throws SQLException {\n         prep.setObject(2, \"D\", Types.VARCHAR);\n         prep.executeUpdate();\n         prep.setInt(1, 5);\n-        prep.setObject(2, \"E\", Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 6);\n-        prep.setObject(2, 5, Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 7);\n-        prep.setObject(2, 6, Types.INTEGER);\n+        prep.setObject(2, 4, Types.INTEGER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODM3Mg=="}, "originalCommit": {"oid": "a533c0f0d4209459a9def1427f5115abfed7e745"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4OTc2Mw==", "bodyText": "Let's continue this discussion in #2416.", "url": "https://github.com/h2database/h2database/pull/2415#discussion_r370989763", "createdAt": "2020-01-26T10:56:33Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/jdbc/TestResultSet.java", "diffHunk": "@@ -1949,13 +1949,7 @@ private void testEnum() throws SQLException {\n         prep.setObject(2, \"D\", Types.VARCHAR);\n         prep.executeUpdate();\n         prep.setInt(1, 5);\n-        prep.setObject(2, \"E\", Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 6);\n-        prep.setObject(2, 5, Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 7);\n-        prep.setObject(2, 6, Types.INTEGER);\n+        prep.setObject(2, 4, Types.INTEGER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODM3Mg=="}, "originalCommit": {"oid": "a533c0f0d4209459a9def1427f5115abfed7e745"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk5ODE4NA==", "bodyText": "I restored support of Types.OTHER for GEOMETRY columns.", "url": "https://github.com/h2database/h2database/pull/2415#discussion_r370998184", "createdAt": "2020-01-26T13:19:26Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/jdbc/TestResultSet.java", "diffHunk": "@@ -1949,13 +1949,7 @@ private void testEnum() throws SQLException {\n         prep.setObject(2, \"D\", Types.VARCHAR);\n         prep.executeUpdate();\n         prep.setInt(1, 5);\n-        prep.setObject(2, \"E\", Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 6);\n-        prep.setObject(2, 5, Types.OTHER);\n-        prep.executeUpdate();\n-        prep.setInt(1, 7);\n-        prep.setObject(2, 6, Types.INTEGER);\n+        prep.setObject(2, 4, Types.INTEGER);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODM3Mg=="}, "originalCommit": {"oid": "a533c0f0d4209459a9def1427f5115abfed7e745"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MzM1NTYyOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/util/JdbcUtils.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMDozMjo1NFrOFhzVog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNlQxMDozMjo1NFrOFhzVog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDk4ODQ1MA==", "bodyText": "best to document the reason for this, something like\n\"to avoid a security hole with a malicously crafted serialised object\"", "url": "https://github.com/h2database/h2database/pull/2415#discussion_r370988450", "createdAt": "2020-01-26T10:32:54Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/util/JdbcUtils.java", "diffHunk": "@@ -415,6 +421,25 @@ public static Object deserialize(byte[] data, JavaObjectSerializer javaObjectSer\n         }\n     }\n \n+    /**\n+     * De-serialize the byte array to a UUID object.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2d996baa6fc1a0eefb1525695f5f82c14baf331"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2214, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}