{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMTgzNDIx", "number": 2836, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1OTo1NFrOEZ_dYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1OTo1NFrOEZ_dYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1Njg5NTcwOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/command/dml/Merge.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMzo1OTo1NFrOHDIx8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNDoxOToxMFrOHDJoIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ==", "bodyText": "with -> without", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473051635", "createdAt": "2020-08-19T13:59:54Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1NDc2Nw==", "bodyText": "It is what we expect and not what we found.", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473054767", "createdAt": "2020-08-19T14:04:21Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ=="}, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1OTg5OQ==", "bodyText": "Yes, we expect to \"have at least one updateable column\", but we did not find that.\nSo we should say\n\"Valid MERGE INTO statement requires at least one updatable column\"\nor\n\"MERGE INTO statement without at least one updatable column\"", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473059899", "createdAt": "2020-08-19T14:11:31Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ=="}, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2MjgxNA==", "bodyText": "The whole error message is:\nSyntax error in SQL statement \"MERGE INTO T0(C0) KEY(C1) VALUES (1)[*]\"; expected \"Valid MERGE INTO statement with at least one updatable column\"", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473062814", "createdAt": "2020-08-19T14:15:31Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ=="}, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NDUxMQ==", "bodyText": "Ah, you are correct", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473064511", "createdAt": "2020-08-19T14:17:49Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ=="}, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA2NTUwNA==", "bodyText": "It don't want to allocate a new error code for the normal error message for this specific corner case in non-standard command. This command has significant design problems, it can't handle GENERATED ALWAYS identity columns and generated columns well.", "url": "https://github.com/h2database/h2database/pull/2836#discussion_r473065504", "createdAt": "2020-08-19T14:19:10Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/dml/Merge.java", "diffHunk": "@@ -323,6 +323,10 @@ public void prepare() {\n                 column.getSQL(builder, HasSQL.DEFAULT_SQL_FLAGS).append(\"=?\");\n             }\n         }\n+        if (!hasColumn) {\n+            throw DbException.getSyntaxError(sqlStatement, sqlStatement.length(),\n+                    \"Valid MERGE INTO statement with at least one updatable column\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzA1MTYzNQ=="}, "originalCommit": {"oid": "4b2441e0629b8fea2bafca453128b7f7194625b8"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2121, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}