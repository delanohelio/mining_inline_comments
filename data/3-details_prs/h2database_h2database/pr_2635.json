{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwNzM2NjMy", "number": 2635, "title": "Implements the REGEXP_SUBSTR function, modeled on the same function a\u2026", "bodyText": "\u2026s defined in Oracle 18\nSee help.csv and test script for details, or https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/REGEXP_SUBSTR.html", "createdAt": "2020-05-20T13:02:40Z", "url": "https://github.com/h2database/h2database/pull/2635", "merged": true, "mergeCommit": {"oid": "8026534b4669516cbdc3f18daa0ec8836cde0175"}, "closed": true, "closedAt": "2020-05-21T07:55:30Z", "author": {"login": "vetler"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjIufRgBqjMzNTYzNjE0Mzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjYIhuABqjMzNTk1MDQ3NjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "62c37dadc19568954047b55eba9ec8e58f7765c1", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/62c37dadc19568954047b55eba9ec8e58f7765c1", "committedDate": "2020-05-20T13:01:41Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "4dc7b144bacd5fd93329e599bbb817c3026e1f7c", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/4dc7b144bacd5fd93329e599bbb817c3026e1f7c", "committedDate": "2020-05-20T13:03:21Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4dc7b144bacd5fd93329e599bbb817c3026e1f7c", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/4dc7b144bacd5fd93329e599bbb817c3026e1f7c", "committedDate": "2020-05-20T13:03:21Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "e23b3b7b0920b0d65d587001338fcf447c96fbeb", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/e23b3b7b0920b0d65d587001338fcf447c96fbeb", "committedDate": "2020-05-20T13:03:47Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e23b3b7b0920b0d65d587001338fcf447c96fbeb", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/e23b3b7b0920b0d65d587001338fcf447c96fbeb", "committedDate": "2020-05-20T13:03:47Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "37114aa7babbe2e298bb88c0e2e4d5905e0597f3", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/37114aa7babbe2e298bb88c0e2e4d5905e0597f3", "committedDate": "2020-05-20T13:21:48Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37114aa7babbe2e298bb88c0e2e4d5905e0597f3", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/37114aa7babbe2e298bb88c0e2e4d5905e0597f3", "committedDate": "2020-05-20T13:21:48Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/dac8b07425523e45dc43869d663dd682ebe25f4c", "committedDate": "2020-05-20T13:22:42Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/dac8b07425523e45dc43869d663dd682ebe25f4c", "committedDate": "2020-05-20T13:22:42Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "8f5d69ccc0b379d4c7642b0adebc81794a4ccdc5", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/8f5d69ccc0b379d4c7642b0adebc81794a4ccdc5", "committedDate": "2020-05-20T13:44:11Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f5d69ccc0b379d4c7642b0adebc81794a4ccdc5", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/8f5d69ccc0b379d4c7642b0adebc81794a4ccdc5", "committedDate": "2020-05-20T13:44:11Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "98617920d837f968f16f4df1c2cd5e9c94ab5411", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/98617920d837f968f16f4df1c2cd5e9c94ab5411", "committedDate": "2020-05-20T13:45:18Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98617920d837f968f16f4df1c2cd5e9c94ab5411", "author": {"user": null}, "url": "https://github.com/h2database/h2database/commit/98617920d837f968f16f4df1c2cd5e9c94ab5411", "committedDate": "2020-05-20T13:45:18Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/2979a6d15f87d4bbe1ff41439c09dbfed7a7c828", "committedDate": "2020-05-20T13:46:29Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MzQ3MzE0", "url": "https://github.com/h2database/h2database/pull/2635#pullrequestreview-415347314", "createdAt": "2020-05-20T13:42:27Z", "commit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo0MjoyN1rOGYMT6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMzo1OToyM1rOGYNLLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyMDcxNA==", "bodyText": "Please, use better names.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428020714", "createdAt": "2020-05-20T13:42:27Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,34 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value v0, Value v1, Value v2, Value v3, Value v4, Value v5) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyMTQwNg==", "bodyText": "Use int data type for both variables.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428021406", "createdAt": "2020-05-20T13:43:18Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,34 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value v0, Value v1, Value v2, Value v3, Value v4, Value v5) {\n+        Value result;\n+        String regexp = v1.getString();\n+        Integer position = v2 != null ? v2.getInt() - 1 : 0;\n+        Integer requestedOccurrence = v3 != null ? v3.getInt() : 1;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyMjI3Nw==", "bodyText": "substring is a slow operation, it looks like m.find(position) (for the first occurrence) can be used instead.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428022277", "createdAt": "2020-05-20T13:44:26Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,34 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value v0, Value v1, Value v2, Value v3, Value v4, Value v5) {\n+        Value result;\n+        String regexp = v1.getString();\n+        Integer position = v2 != null ? v2.getInt() - 1 : 0;\n+        Integer requestedOccurrence = v3 != null ? v3.getInt() : 1;\n+        String regexpMode = v4 != null ? v4.getString() : null;\n+        int subexpression = v5 != null ? v5.getInt() : 0;\n+        int flags = makeRegexpFlags(regexpMode, false);\n+        try {\n+            Matcher m = Pattern.compile(regexp, flags).matcher(v0.getString().substring(position));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dac8b07425523e45dc43869d663dd682ebe25f4c"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAyNTQ5Mg==", "bodyText": "This loop can return NULL quickly without iteration over all remaining occurrences.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428025492", "createdAt": "2020-05-20T13:48:21Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,34 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value v0, Value v1, Value v2, Value v3, Value v4, Value v5) {\n+        Value result;\n+        String regexp = v1.getString();\n+        Integer position = v2 != null ? v2.getInt() - 1 : 0;\n+        Integer requestedOccurrence = v3 != null ? v3.getInt() : 1;\n+        String regexpMode = v4 != null ? v4.getString() : null;\n+        int subexpression = v5 != null ? v5.getInt() : 0;\n+        int flags = makeRegexpFlags(regexpMode, false);\n+        try {\n+            Matcher m = Pattern.compile(regexp, flags).matcher(v0.getString().substring(position));\n+\n+            boolean found = false;\n+            for(int occurrence = 0; occurrence < requestedOccurrence; occurrence++) {\n+                found = m.find();\n+            }\n+\n+            if (!found) {\n+                result = ValueNull.INSTANCE;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMDE2Mw==", "bodyText": "Are you sure about nullIfParameterIsNull = false here? If so, you need to add explicit checks for ValueNull.INSTANCE for all parameters, add some logic for NULL arguments and describe it in documentation.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428030163", "createdAt": "2020-05-20T13:53:59Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -313,6 +314,7 @@\n         addFunction(\"TRANSLATE\", TRANSLATE, 3, Value.VARCHAR);\n         addFunction(\"QUOTE_IDENT\", QUOTE_IDENT, 1, Value.VARCHAR);\n         addFunction(\"REGEXP_LIKE\", REGEXP_LIKE, VAR_ARGS, Value.BOOLEAN);\n+        addFunction(\"REGEXP_SUBSTR\", REGEXP_SUBSTR, VAR_ARGS, Value.VARCHAR, false, true, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTYzNQ==", "bodyText": "It may throw IndexOutOfBoundsException and this exception needs to be caught.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428031635", "createdAt": "2020-05-20T13:55:45Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,34 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value v0, Value v1, Value v2, Value v3, Value v4, Value v5) {\n+        Value result;\n+        String regexp = v1.getString();\n+        Integer position = v2 != null ? v2.getInt() - 1 : 0;\n+        Integer requestedOccurrence = v3 != null ? v3.getInt() : 1;\n+        String regexpMode = v4 != null ? v4.getString() : null;\n+        int subexpression = v5 != null ? v5.getInt() : 0;\n+        int flags = makeRegexpFlags(regexpMode, false);\n+        try {\n+            Matcher m = Pattern.compile(regexp, flags).matcher(v0.getString().substring(position));\n+\n+            boolean found = false;\n+            for(int occurrence = 0; occurrence < requestedOccurrence; occurrence++) {\n+                found = m.find();\n+            }\n+\n+            if (!found) {\n+                result = ValueNull.INSTANCE;\n+            }\n+            else {\n+                result = ValueVarchar.get(m.group(subexpression));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNDg2MA==", "bodyText": "values are limited\nsymbols cause exception\ncould be used\nflags override first\n'ic' is equivalent", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428034860", "createdAt": "2020-05-20T13:59:23Z", "author": {"login": "katzyn"}, "path": "h2/src/docsrc/help/help.csv", "diffHunk": "@@ -5108,6 +5108,34 @@ Later flags overrides first ones, for example 'ic' equivalent to case sensitive\n REGEXP_LIKE('Hello    World', '[A-Z ]*', 'i')\n \"\n \n+\"Functions (String)\",\"REGEXP_SUBSTR\",\"\n+@h2@ REGEXP_SUBSTR(inputString, regexString [, position, occurrence, flagsString, group])\n+\",\"\n+Matches string to a regular expression and returns the matched substring.\n+For details, see the java.util.regex.Pattern and related functionality.\n+\n+The parameter position specifies where in inputString the match should start. Occurrence indicates\n+which occurrence of pattern in inputString to search for.\n+\n+Flags values limited to 'i', 'c', 'n', 'm'. Other symbols causes exception.\n+Multiple symbols could be uses in one flagsString parameter (like 'im').\n+Later flags overrides first ones, for example 'ic' equivalent to case sensitive matching 'c'.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828"}, "originalPosition": 15}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2979a6d15f87d4bbe1ff41439c09dbfed7a7c828", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/2979a6d15f87d4bbe1ff41439c09dbfed7a7c828", "committedDate": "2020-05-20T13:46:29Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "f49e77bda115e7ffe05968548d26c9a7035b83e0", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/f49e77bda115e7ffe05968548d26c9a7035b83e0", "committedDate": "2020-05-20T14:01:41Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fceff57e09f7f9b3cc825fd3b5f5bcd2e8d7a98", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/6fceff57e09f7f9b3cc825fd3b5f5bcd2e8d7a98", "committedDate": "2020-05-20T18:08:34Z", "message": "fixup! fixup! fixup! fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/84284b7ef69b4648df83da863d60a750830084e9", "committedDate": "2020-05-20T18:14:52Z", "message": "fixup! fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1ODM1ODky", "url": "https://github.com/h2database/h2database/pull/2635#pullrequestreview-415835892", "createdAt": "2020-05-21T02:19:55Z", "commit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjoyMDo0NFrOGYkCRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwMjozNDo0NFrOGYkO3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQwOTQxNQ==", "bodyText": "Please, add test cases for both exceptions.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428409415", "createdAt": "2020-05-21T02:20:44Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,42 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value inputString, Value regexpArg, Value positionArg, \n+            Value occurrenceArg, Value regexpModeArg, Value subexpressoinArg) {\n+        String regexp = regexpArg.getString();\n+\n+        if (regexpArg == ValueNull.INSTANCE || positionArg == ValueNull.INSTANCE \n+            || occurrenceArg == ValueNull.INSTANCE || subexpressoinArg == ValueNull.INSTANCE) {\n+            return ValueNull.INSTANCE;\n+        }\n+\n+        int position = positionArg != null ? positionArg.getInt() - 1 : 0;\n+        int requestedOccurrence = occurrenceArg != null ? occurrenceArg.getInt() : 1;\n+        String regexpMode = regexpModeArg != null ? regexpModeArg.getString() : null;\n+        int subexpression = subexpressoinArg != null && subexpressoinArg != ValueNull.INSTANCE ? subexpressoinArg.getInt() : 0;\n+        int flags = makeRegexpFlags(regexpMode, false);\n+        try {\n+            Matcher m = Pattern.compile(regexp, flags).matcher(inputString.getString());\n+\n+            boolean found = m.find(position);\n+            for(int occurrence = 1; occurrence < requestedOccurrence && found; occurrence++) {\n+                found = m.find();\n+            }\n+\n+            if (!found) {\n+                return ValueNull.INSTANCE;\n+            }\n+            else {\n+                return ValueVarchar.get(m.group(subexpression));\n+            }\n+        } catch (PatternSyntaxException e) {\n+            throw DbException.get(ErrorCode.LIKE_ESCAPE_ERROR_1, e, regexp);\n+        }\n+        catch (IndexOutOfBoundsException e) {\n+            return ValueNull.INSTANCE;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMDA5Ng==", "bodyText": "Add an empty line at the end of this file, H2 doesn't require it, but GitHub, git gui, and some other tools show a warning mark.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428410096", "createdAt": "2020-05-21T02:23:41Z", "author": {"login": "katzyn"}, "path": "h2/src/test/org/h2/test/scripts/functions/string/regexp-substr.sql", "diffHunk": "@@ -0,0 +1,71 @@\n+-- Copyright 2004-2020 H2 Group. Multiple-Licensed under the MPL 2.0,\n+-- and the EPL 1.0 (https://h2database.com/html/license.html).\n+-- Initial Developer: H2 Group\n+--\n+\n+-- case insensitive matches upper case\n+CALL REGEXP_SUBSTR('A', '[a-z]', 1, 1, 'i');\n+>> A\n+\n+-- case sensitive does not match upper case\n+CALL REGEXP_SUBSTR('A', '[a-z]', 1, 1, 'c');\n+>> null\n+\n+-- match string from position at string index 3\n+CALL REGEXP_SUBSTR('help helpful', 'help.*', 3);\n+>> helpful\n+\n+-- match string from position at string index 6\n+CALL REGEXP_SUBSTR('help helpful helping', 'help.*', 7);\n+>> helping\n+\n+-- should return first occurrence\n+CALL REGEXP_SUBSTR('helpful helping', 'help\\w*', 1, 1);\n+>> helpful\n+\n+-- should return second occurrence\n+CALL REGEXP_SUBSTR('helpful helping', 'help\\w*', 1, 2);\n+>> helping\n+\n+-- should return third occurrence\n+CALL REGEXP_SUBSTR('help helpful helping', 'help\\w*', 1, 3);\n+>> helping\n+\n+-- should return first occurrence, after string at index 3\n+CALL REGEXP_SUBSTR('help helpful helping', 'help\\w*', 3, 1);\n+>> helpful\n+\n+-- should first matching group\n+CALL REGEXP_SUBSTR('help helpful helping', '(help\\w*)', 1, 1, NULL, 1);\n+>> help\n+\n+-- should second occurrence of first group\n+CALL REGEXP_SUBSTR('help helpful helping', '(help\\w*)', 1, 2, NULL, 1);\n+>> helpful\n+\n+-- should second group\n+CALL REGEXP_SUBSTR('2020-10-01', '(\\d{4})-(\\d{2})-(\\d{2})', 1, 1, NULL, 2);\n+>> 10\n+\n+-- should third group\n+CALL REGEXP_SUBSTR('2020-10-01', '(\\d{4})-(\\d{2})-(\\d{2})', 1, 1, NULL, 3);\n+>> 01\n+\n+CALL REGEXP_SUBSTR('2020-10-01', '\\d{4}');\n+>> 2020\n+\n+-- Test variants of passing NULL, which should always result in NULL result\n+CALL REGEXP_SUBSTR('2020-10-01', NULL);\n+>> null\n+\n+CALL REGEXP_SUBSTR(NULL, NULL);\n+>> null\n+\n+CALL REGEXP_SUBSTR('2020-10-01', '\\d{4}', NULL);\n+>> null\n+\n+CALL REGEXP_SUBSTR('2020-10-01', '\\d{4}', 1, NULL);\n+>> null\n+\n+CALL REGEXP_SUBSTR('2020-10-01', '\\d{4}', 1, 1, NULL, NULL);\n+>> null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMTM1Mw==", "bodyText": "inputString == ValueNull.INSTANCE?", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428411353", "createdAt": "2020-05-21T02:28:56Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,42 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value inputString, Value regexpArg, Value positionArg, \n+            Value occurrenceArg, Value regexpModeArg, Value subexpressoinArg) {\n+        String regexp = regexpArg.getString();\n+\n+        if (regexpArg == ValueNull.INSTANCE || positionArg == ValueNull.INSTANCE \n+            || occurrenceArg == ValueNull.INSTANCE || subexpressoinArg == ValueNull.INSTANCE) {\n+            return ValueNull.INSTANCE;\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMjAxMQ==", "bodyText": "subexpressoinArg can't be ValueNull.INSTANCE here, and this parameter has a typo in its name, should be subexpressionArg.\n(regexpModeArg can, but ValueNull.INSTANCE.getString() simply returns null.)", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428412011", "createdAt": "2020-05-21T02:31:58Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,42 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value inputString, Value regexpArg, Value positionArg, \n+            Value occurrenceArg, Value regexpModeArg, Value subexpressoinArg) {\n+        String regexp = regexpArg.getString();\n+\n+        if (regexpArg == ValueNull.INSTANCE || positionArg == ValueNull.INSTANCE \n+            || occurrenceArg == ValueNull.INSTANCE || subexpressoinArg == ValueNull.INSTANCE) {\n+            return ValueNull.INSTANCE;\n+        }\n+\n+        int position = positionArg != null ? positionArg.getInt() - 1 : 0;\n+        int requestedOccurrence = occurrenceArg != null ? occurrenceArg.getInt() : 1;\n+        String regexpMode = regexpModeArg != null ? regexpModeArg.getString() : null;\n+        int subexpression = subexpressoinArg != null && subexpressoinArg != ValueNull.INSTANCE ? subexpressoinArg.getInt() : 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQxMjYzOA==", "bodyText": "String values are treated in special way in Oracle compatibility mode, so ValueVarchar.get() needs to know the mode.\n            else {\n                return ValueVarchar.get(m.group(subexpression), session);\n            }\nSession should be passed to this method.", "url": "https://github.com/h2database/h2database/pull/2635#discussion_r428412638", "createdAt": "2020-05-21T02:34:44Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/expression/function/Function.java", "diffHunk": "@@ -1534,6 +1540,42 @@ protected Value getValueWithArgs(Session session, Expression[] args) {\n         return result;\n     }\n \n+    private Value regexpSubstr(Value inputString, Value regexpArg, Value positionArg, \n+            Value occurrenceArg, Value regexpModeArg, Value subexpressoinArg) {\n+        String regexp = regexpArg.getString();\n+\n+        if (regexpArg == ValueNull.INSTANCE || positionArg == ValueNull.INSTANCE \n+            || occurrenceArg == ValueNull.INSTANCE || subexpressoinArg == ValueNull.INSTANCE) {\n+            return ValueNull.INSTANCE;\n+        }\n+\n+        int position = positionArg != null ? positionArg.getInt() - 1 : 0;\n+        int requestedOccurrence = occurrenceArg != null ? occurrenceArg.getInt() : 1;\n+        String regexpMode = regexpModeArg != null ? regexpModeArg.getString() : null;\n+        int subexpression = subexpressoinArg != null && subexpressoinArg != ValueNull.INSTANCE ? subexpressoinArg.getInt() : 0;\n+        int flags = makeRegexpFlags(regexpMode, false);\n+        try {\n+            Matcher m = Pattern.compile(regexp, flags).matcher(inputString.getString());\n+\n+            boolean found = m.find(position);\n+            for(int occurrence = 1; occurrence < requestedOccurrence && found; occurrence++) {\n+                found = m.find();\n+            }\n+\n+            if (!found) {\n+                return ValueNull.INSTANCE;\n+            }\n+            else {\n+                return ValueVarchar.get(m.group(subexpression));\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84284b7ef69b4648df83da863d60a750830084e9", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/84284b7ef69b4648df83da863d60a750830084e9", "committedDate": "2020-05-20T18:14:52Z", "message": "fixup! fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "bea8a665fe965c82063a4549bfc99d57567e01d1", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/bea8a665fe965c82063a4549bfc99d57567e01d1", "committedDate": "2020-05-21T06:37:14Z", "message": "fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bea8a665fe965c82063a4549bfc99d57567e01d1", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/bea8a665fe965c82063a4549bfc99d57567e01d1", "committedDate": "2020-05-21T06:37:14Z", "message": "fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "33b1736ae681ba2a6d67f15a856755666477694d", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/33b1736ae681ba2a6d67f15a856755666477694d", "committedDate": "2020-05-21T06:38:08Z", "message": "fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "33b1736ae681ba2a6d67f15a856755666477694d", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/33b1736ae681ba2a6d67f15a856755666477694d", "committedDate": "2020-05-21T06:38:08Z", "message": "fixup! Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}, "afterCommit": {"oid": "f589a191290e62e4b1d8dcde0c4d10d78a8fdc69", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/f589a191290e62e4b1d8dcde0c4d10d78a8fdc69", "committedDate": "2020-05-21T06:57:03Z", "message": "Fix wording and typos in documentation for regexp-functions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd77e0a9e5f961de5eeda4a05858f2de8bd0533c", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/cd77e0a9e5f961de5eeda4a05858f2de8bd0533c", "committedDate": "2020-05-21T07:00:10Z", "message": "Implements the REGEXP_SUBSTR function, modeled on the same function as defined in Oracle 18"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "caccceb0082cfd511c0f257b35b078343f3cdb45", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/caccceb0082cfd511c0f257b35b078343f3cdb45", "committedDate": "2020-05-21T07:00:15Z", "message": "Fix wording and typos in documentation for regexp-functions"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f589a191290e62e4b1d8dcde0c4d10d78a8fdc69", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/f589a191290e62e4b1d8dcde0c4d10d78a8fdc69", "committedDate": "2020-05-21T06:57:03Z", "message": "Fix wording and typos in documentation for regexp-functions"}, "afterCommit": {"oid": "caccceb0082cfd511c0f257b35b078343f3cdb45", "author": {"user": {"login": "vetler", "name": "Vetle Leinonen-Roeim"}}, "url": "https://github.com/h2database/h2database/commit/caccceb0082cfd511c0f257b35b078343f3cdb45", "committedDate": "2020-05-21T07:00:15Z", "message": "Fix wording and typos in documentation for regexp-functions"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3868, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}