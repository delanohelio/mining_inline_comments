{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzMjc1ODAw", "number": 2976, "title": "Linked table deadlock", "bodyText": "This PR fixes #2966", "createdAt": "2020-12-06T22:07:57Z", "url": "https://github.com/h2database/h2database/pull/2976", "merged": true, "mergeCommit": {"oid": "b176afac402af2d02c9275b435a9226ad7fbe949"}, "closed": true, "closedAt": "2020-12-08T02:51:51Z", "author": {"login": "andreitokar"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdjlvSDgH2gAyNTMzMjc1ODAwOjkyNzA4YjQwODUxYWJkYjVmYmYzNDJlOThiYTk0M2NlZjhlZTU5N2E=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj9JjtAH2gAyNTMzMjc1ODAwOjM4ZTE0MTQ0ZjllY2QyMjcwZGM0OThmZjA5MGY0ZDFkYmZlZDA5ZjE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92708b40851abdb5fbf342e98ba943cef8ee597a", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/92708b40851abdb5fbf342e98ba943cef8ee597a", "committedDate": "2020-12-06T19:02:43Z", "message": "allow differently named databases to be opened concurrently"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00f66566a03afc751509b3d7d70dc998e24b87ca", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/00f66566a03afc751509b3d7d70dc998e24b87ca", "committedDate": "2020-12-06T21:11:42Z", "message": "fix AUTO_SERVER case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODg5NTc2", "url": "https://github.com/h2database/h2database/pull/2976#pullrequestreview-545889576", "createdAt": "2020-12-07T07:37:41Z", "commit": {"oid": "92708b40851abdb5fbf342e98ba943cef8ee597a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzozNzo0MVrOIAZdiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzozNzo0MVrOIAZdiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI4ODA3Mg==", "bodyText": "extra semicolon", "url": "https://github.com/h2database/h2database/pull/2976#discussion_r537288072", "createdAt": "2020-12-07T07:37:41Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/engine/Engine.java", "diffHunk": "@@ -52,65 +52,75 @@ private static SessionLocal openSession(ConnectionInfo ci, boolean ifExists, boo\n         boolean openNew = ci.getProperty(\"OPEN_NEW\", false);\n         boolean opened = false;\n         User user = null;\n-        synchronized (DATABASES) {\n-            if (openNew || ci.isUnnamedInMemory()) {\n-                database = null;\n-            } else {\n-                database = DATABASES.get(name);\n+        DatabaseHolder databaseHolder = new DatabaseHolder();;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92708b40851abdb5fbf342e98ba943cef8ee597a"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ1ODkwMTAy", "url": "https://github.com/h2database/h2database/pull/2976#pullrequestreview-545890102", "createdAt": "2020-12-07T07:38:40Z", "commit": {"oid": "92708b40851abdb5fbf342e98ba943cef8ee597a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzozODo0MFrOIAZfUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QwNzozODo0MFrOIAZfUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzI4ODUyOA==", "bodyText": "this is a double-checked locking pattern, which always make me nervouse. Given that this is a rather infrequent operation, let's just do the simple thing and always lock the databasHolder?", "url": "https://github.com/h2database/h2database/pull/2976#discussion_r537288528", "createdAt": "2020-12-07T07:38:40Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/engine/Engine.java", "diffHunk": "@@ -52,65 +52,75 @@ private static SessionLocal openSession(ConnectionInfo ci, boolean ifExists, boo\n         boolean openNew = ci.getProperty(\"OPEN_NEW\", false);\n         boolean opened = false;\n         User user = null;\n-        synchronized (DATABASES) {\n-            if (openNew || ci.isUnnamedInMemory()) {\n-                database = null;\n-            } else {\n-                database = DATABASES.get(name);\n+        DatabaseHolder databaseHolder = new DatabaseHolder();;\n+        if (!ci.isUnnamedInMemory()) {\n+            synchronized (DATABASES) {\n+                if (openNew) {\n+                    DATABASES.put(name, databaseHolder);\n+                } else {\n+                    databaseHolder = DATABASES.computeIfAbsent(name, (key) -> new DatabaseHolder());\n+                }\n             }\n-            if (database == null) {\n-                if (ci.isPersistent()) {\n-                    String p = ci.getProperty(\"MV_STORE\");\n-                    String fileName;\n-                    if (p == null) {\n-                        fileName = name + Constants.SUFFIX_MV_FILE;\n-                        if (!FileUtils.exists(fileName)) {\n-                            fileName = name + Constants.SUFFIX_PAGE_FILE;\n-                            if (FileUtils.exists(fileName)) {\n-                                ci.setProperty(\"MV_STORE\", \"false\");\n-                            } else {\n-                                throwNotFound(ifExists, forbidCreation, name);\n-                                fileName = name + Constants.SUFFIX_OLD_DATABASE_FILE;\n+        }\n+        database = databaseHolder.database;\n+        if (database == null) {\n+            synchronized (databaseHolder) {\n+                database = databaseHolder.database;\n+                if (database == null) {\n+                    if (ci.isPersistent()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92708b40851abdb5fbf342e98ba943cef8ee597a"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dd7ac5e61aed9e48c054dbc65b6e449c3052b42", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/7dd7ac5e61aed9e48c054dbc65b6e449c3052b42", "committedDate": "2020-12-07T14:46:43Z", "message": "remove extra semicolon"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38e14144f9ecd2270dc498ff090f4d1dbfed09f1", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/38e14144f9ecd2270dc498ff090f4d1dbfed09f1", "committedDate": "2020-12-07T22:19:14Z", "message": "remove \"DCL\""}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4265, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}