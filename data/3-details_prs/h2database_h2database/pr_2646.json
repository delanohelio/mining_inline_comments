{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMzUzNzUx", "number": 2646, "title": "Add some PostgreSQL compatibility features in #2450", "bodyText": "Added these objects to prevent error from DBeaver:\n\nfunction session_user\ncolumn pg_type.typrelid\nfunction pg_get_expr, allow 3rd optional arg\nSHOW search_path\nfunction pg_stat_get_numscans\ntable pg_constraint\n\npg_constraint.conkey is implemented but DBeaver still require to choose a unique key when change a row during view table. Probably because conkey's type not correct, should be _int2 but now _text.", "createdAt": "2020-05-24T02:36:14Z", "url": "https://github.com/h2database/h2database/pull/2646", "merged": true, "mergeCommit": {"oid": "3d10b4ca17176f64dd0e07cc2cf338931295babb"}, "closed": true, "closedAt": "2020-05-24T05:30:34Z", "author": {"login": "auntyellow"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABckSXQdgFqTQxNzMyMjg3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABckUHwqABqjMzNjc2NDE0NDY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzIyODc4", "url": "https://github.com/h2database/h2database/pull/2646#pullrequestreview-417322878", "createdAt": "2020-05-24T02:51:02Z", "commit": {"oid": "c388347232f6b93ddc3daa34a178bb2dc0d8dfc9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjo1MTowMlrOGZsWKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMjo1MTowMlrOGZsWKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5NDE1Mg==", "bodyText": "constraintType.getSqlName() is more reliable than toString().", "url": "https://github.com/h2database/h2database/pull/2646#discussion_r429594152", "createdAt": "2020-05-24T02:51:02Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/mode/PgCatalogTable.java", "diffHunk": "@@ -351,6 +368,34 @@ public PgCatalogTable(Schema schema, int id, int type) {\n             break;\n         case PG_AUTHID:\n             break;\n+        case PG_CONSTRAINT:\n+            for (SchemaObject obj : database.getAllSchemaObjects(DbObject.CONSTRAINT)) {\n+                Constraint constraint = (Constraint) obj;\n+                Constraint.Type constraintType = constraint.getConstraintType();\n+                if (constraintType == Constraint.Type.DOMAIN) {\n+                    continue;\n+                }\n+                Table table = constraint.getTable();\n+                if (hideTable(table, session)) {\n+                    continue;\n+                }\n+                Table refTable = constraint.getRefTable();\n+                add(session,\n+                        rows,\n+                        // OID\n+                        ValueInteger.get(constraint.getId()),\n+                        // CONNAME\n+                        constraint.getName(),\n+                        // CONTYPE\n+                        StringUtils.toLowerEnglish(constraintType.toString().substring(0, 1)),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c388347232f6b93ddc3daa34a178bb2dc0d8dfc9"}, "originalPosition": 83}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c388347232f6b93ddc3daa34a178bb2dc0d8dfc9", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/c388347232f6b93ddc3daa34a178bb2dc0d8dfc9", "committedDate": "2020-05-24T02:22:28Z", "message": "add pg_constraint to prevent error from dbeaver"}, "afterCommit": {"oid": "54cc1d582b7e01ba7f371652d6967863cf0ee57d", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/54cc1d582b7e01ba7f371652d6967863cf0ee57d", "committedDate": "2020-05-24T02:53:14Z", "message": "add `pg_constraint` to prevent error from dbeaver\n\nimplemented `pg_constraint.conkey` but does not look to work"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c59672029882323f72096283f6356372a2c268d0", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/c59672029882323f72096283f6356372a2c268d0", "committedDate": "2020-05-24T03:02:55Z", "message": "add `pg_constraint` to prevent error from dbeaver\n\nimplemented `pg_constraint.conkey` but does not look to work"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "54cc1d582b7e01ba7f371652d6967863cf0ee57d", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/54cc1d582b7e01ba7f371652d6967863cf0ee57d", "committedDate": "2020-05-24T02:53:14Z", "message": "add `pg_constraint` to prevent error from dbeaver\n\nimplemented `pg_constraint.conkey` but does not look to work"}, "afterCommit": {"oid": "c59672029882323f72096283f6356372a2c268d0", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/c59672029882323f72096283f6356372a2c268d0", "committedDate": "2020-05-24T03:02:55Z", "message": "add `pg_constraint` to prevent error from dbeaver\n\nimplemented `pg_constraint.conkey` but does not look to work"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzIzNzM1", "url": "https://github.com/h2database/h2database/pull/2646#pullrequestreview-417323735", "createdAt": "2020-05-24T03:18:58Z", "commit": {"oid": "c59672029882323f72096283f6356372a2c268d0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMzoxODo1OFrOGZsaVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwMzoxODo1OFrOGZsaVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5NTIyMw==", "bodyText": "You need to double ' characters here. Use StringUtils.quoteStringSQL(StringBuilder, String) for it.\n\n\nSome schema names need to be enclosed into \" characters. Take a look on Parser.quoteIdentifier(). If you don't want to quote all of them for a some reason, you can't use this method directly, but you can do something similar with real databaseToUpper and databaseToLower flags passed to ParserUtil.isSimpleIdentifier().", "url": "https://github.com/h2database/h2database/pull/2646#discussion_r429595223", "createdAt": "2020-05-24T03:18:58Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -1572,6 +1572,9 @@ private Prepared parseShow() {\n         } else if (readIf(\"DATESTYLE\")) {\n             // for PostgreSQL compatibility\n             buff.append(\"'ISO' DATESTYLE\");\n+        } else if (readIf(\"SEARCH_PATH\")) {\n+            // for PostgreSQL compatibility\n+            buff.append('\\'').append(String.join(\", \", session.getSchemaSearchPath())).append('\\'');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c59672029882323f72096283f6356372a2c268d0"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzI2MDg2", "url": "https://github.com/h2database/h2database/pull/2646#pullrequestreview-417326086", "createdAt": "2020-05-24T04:36:49Z", "commit": {"oid": "58c6c1d5bdb66d4c3322060c763535f3dd07987a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNDozNjo0OVrOGZsmQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNDozNjo0OVrOGZsmQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5ODI3Mw==", "bodyText": "If you want to return null here, use buff.append(\"CAST(NULL AS VARCHAR)\"). Maybe empty string (buff.append(\"''\")) should be used instead, I don't know how to test it in the real PostgreSQL. I don't see any way to clear the path in it.", "url": "https://github.com/h2database/h2database/pull/2646#discussion_r429598273", "createdAt": "2020-05-24T04:36:49Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -1572,6 +1572,22 @@ private Prepared parseShow() {\n         } else if (readIf(\"DATESTYLE\")) {\n             // for PostgreSQL compatibility\n             buff.append(\"'ISO' DATESTYLE\");\n+        } else if (readIf(\"SEARCH_PATH\")) {\n+            // for PostgreSQL compatibility\n+            String[] searchPath = session.getSchemaSearchPath();\n+            if (searchPath == null || searchPath.length == 0) {\n+                StringUtils.quoteStringSQL(buff, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58c6c1d5bdb66d4c3322060c763535f3dd07987a"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "58c6c1d5bdb66d4c3322060c763535f3dd07987a", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/58c6c1d5bdb66d4c3322060c763535f3dd07987a", "committedDate": "2020-05-24T04:24:28Z", "message": "quote search_path"}, "afterCommit": {"oid": "bafd7f83991fab6ec18e457876ca5d32103059d2", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/bafd7f83991fab6ec18e457876ca5d32103059d2", "committedDate": "2020-05-24T04:41:07Z", "message": "quote search_path"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MzI2NTQ5", "url": "https://github.com/h2database/h2database/pull/2646#pullrequestreview-417326549", "createdAt": "2020-05-24T04:49:34Z", "commit": {"oid": "bafd7f83991fab6ec18e457876ca5d32103059d2"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNDo0OTozNVrOGZsoYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNFQwNDo0OTozNVrOGZsoYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU5ODgxNg==", "bodyText": "if searchPath == null an invalid SQL is generated (SELECT SEARCH_PATH) instead of expected SELECT '' SEARCH_PATH. Either append '' explicitly (and move searchPathBuff into if), or move StringUtils.quoteStringSQL(buff, searchPathBuff.toString()); outside of if.", "url": "https://github.com/h2database/h2database/pull/2646#discussion_r429598816", "createdAt": "2020-05-24T04:49:35Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/command/Parser.java", "diffHunk": "@@ -1572,6 +1572,20 @@ private Prepared parseShow() {\n         } else if (readIf(\"DATESTYLE\")) {\n             // for PostgreSQL compatibility\n             buff.append(\"'ISO' DATESTYLE\");\n+        } else if (readIf(\"SEARCH_PATH\")) {\n+            // for PostgreSQL compatibility\n+            String[] searchPath = session.getSchemaSearchPath();\n+            StringBuilder searchPathBuff = new StringBuilder();\n+            if (searchPath != null) {\n+                for (int i = 0; i < searchPath.length; i ++) {\n+                    if (i > 0) {\n+                        searchPathBuff.append(\", \");\n+                    }\n+                    quoteIdentifier(searchPathBuff, searchPath[i], HasSQL.QUOTE_ONLY_WHEN_REQUIRED);\n+                }\n+                StringUtils.quoteStringSQL(buff, searchPathBuff.toString());\n+            }\n+            buff.append(\" SEARCH_PATH\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bafd7f83991fab6ec18e457876ca5d32103059d2"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7a7a0367cec054a36716b85b7d6bb8b9dc7743", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/8d7a7a0367cec054a36716b85b7d6bb8b9dc7743", "committedDate": "2020-05-24T04:53:37Z", "message": "quote search_path"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bafd7f83991fab6ec18e457876ca5d32103059d2", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/bafd7f83991fab6ec18e457876ca5d32103059d2", "committedDate": "2020-05-24T04:41:07Z", "message": "quote search_path"}, "afterCommit": {"oid": "8d7a7a0367cec054a36716b85b7d6bb8b9dc7743", "author": {"user": {"login": "auntyellow", "name": null}}, "url": "https://github.com/h2database/h2database/commit/8d7a7a0367cec054a36716b85b7d6bb8b9dc7743", "committedDate": "2020-05-24T04:53:37Z", "message": "quote search_path"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3876, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}