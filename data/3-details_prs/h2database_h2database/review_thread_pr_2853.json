{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyODY5ODQ1", "number": 2853, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMTo0MTo0OVrOEb1HeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMTo0Mzo0NFrOEb1KbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NjE3MjczOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/mvstore/Page.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMTo0MTo0OVrOHF_o7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMTo0MTo0OVrOHF_o7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA0NzU5Ng==", "bodyText": "I didn't check it, but I guess it should be pos = buff.arrayOffset() + buff.position(). Maybe offset is always 0 with our current code, but who knows how it can be changed in the future.", "url": "https://github.com/h2database/h2database/pull/2853#discussion_r476047596", "createdAt": "2020-08-25T01:41:49Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/mvstore/Page.java", "diffHunk": "@@ -619,11 +619,18 @@ private void read(ByteBuffer buff) {\n             }\n             int lenAdd = DataUtils.readVarInt(buff);\n             int compLen = buff.remaining();\n-            byte[] comp = Utils.newBytes(compLen);\n-            buff.get(comp);\n+            byte[] comp;\n+            int pos = 0;\n+            if (buff.hasArray()) {\n+                comp = buff.array();\n+                pos = buff.position();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7c427a888648c7668d3a6e696b260c9aeb0b828"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3NjE4MDI4OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/mvstore/Page.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMTo0Mzo0NFrOHF_t4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQwMjoyMzozNVrOHGBVQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA0ODg2Ng==", "bodyText": "Here we need pos = byteBuffer.arrayOffset() + compressStart I guess.", "url": "https://github.com/h2database/h2database/pull/2853#discussion_r476048866", "createdAt": "2020-08-25T01:43:44Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/mvstore/Page.java", "diffHunk": "@@ -709,10 +716,18 @@ protected final int write(Chunk chunk, WriteBuffer buff, List<Long> toc) {\n                     compressor = store.getCompressorHigh();\n                     compressType = DataUtils.PAGE_COMPRESSED_HIGH;\n                 }\n-                byte[] exp = new byte[expLen];\n-                buff.position(compressStart).get(exp);\n                 byte[] comp = new byte[expLen * 2];\n-                int compLen = compressor.compress(exp, expLen, comp, 0);\n+                ByteBuffer byteBuffer = buff.getBuffer();\n+                int pos = 0;\n+                byte[] exp;\n+                if (byteBuffer.hasArray()) {\n+                    exp = byteBuffer.array();\n+                    pos = compressStart;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7c427a888648c7668d3a6e696b260c9aeb0b828"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA3NTMyOQ==", "bodyText": "Indeed, it's currently always zero, added", "url": "https://github.com/h2database/h2database/pull/2853#discussion_r476075329", "createdAt": "2020-08-25T02:23:35Z", "author": {"login": "andreitokar"}, "path": "h2/src/main/org/h2/mvstore/Page.java", "diffHunk": "@@ -709,10 +716,18 @@ protected final int write(Chunk chunk, WriteBuffer buff, List<Long> toc) {\n                     compressor = store.getCompressorHigh();\n                     compressType = DataUtils.PAGE_COMPRESSED_HIGH;\n                 }\n-                byte[] exp = new byte[expLen];\n-                buff.position(compressStart).get(exp);\n                 byte[] comp = new byte[expLen * 2];\n-                int compLen = compressor.compress(exp, expLen, comp, 0);\n+                ByteBuffer byteBuffer = buff.getBuffer();\n+                int pos = 0;\n+                byte[] exp;\n+                if (byteBuffer.hasArray()) {\n+                    exp = byteBuffer.array();\n+                    pos = compressStart;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjA0ODg2Ng=="}, "originalCommit": {"oid": "e7c427a888648c7668d3a6e696b260c9aeb0b828"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2125, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}