{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY5MTgwMDE1", "number": 2824, "title": "fix issue #2822", "bodyText": "fixes #2822", "createdAt": "2020-08-18T03:39:59Z", "url": "https://github.com/h2database/h2database/pull/2824", "merged": true, "mergeCommit": {"oid": "1f4c0bdb6eb610980fb3137777794586ac884457"}, "closed": true, "closedAt": "2020-08-18T15:53:29Z", "author": {"login": "andreitokar"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_9Ta-AH2gAyNDY5MTgwMDE1OmE1MzI5NjhkZWQ4ZTNlMmM4NGM2NmU2NmRiNjI1ZDc1MGJmNzc2MWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAIc2JgH2gAyNDY5MTgwMDE1OjgwYmY1ZDNkMjIwOGVkOWZkYTg5Y2I0NzQxZmJlYzRmNzk0ODUyOWI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/a532968ded8e3e2c84c66e66db625d750bf7761e", "committedDate": "2020-08-18T02:08:44Z", "message": "fix issue #2822"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5MDI4NTEz", "url": "https://github.com/h2database/h2database/pull/2824#pullrequestreview-469028513", "createdAt": "2020-08-18T06:35:19Z", "commit": {"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozNToxOVrOHCFRJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwNjozNToxOVrOHCFRJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTk0NTUwOQ==", "bodyText": "I'd remove this piece - if you can't be bothered to obey the documented DbEventListener API, I don't see why we should leave the DB in some weird state.\nRather dump an exception and continue", "url": "https://github.com/h2database/h2database/pull/2824#discussion_r471945509", "createdAt": "2020-08-18T06:35:19Z", "author": {"login": "grandinj"}, "path": "h2/src/main/org/h2/engine/Database.java", "diffHunk": "@@ -1339,38 +1339,38 @@ void close(boolean fromShutdownHook) {\n     }\n \n     private void closeImpl(boolean fromShutdownHook) {\n-        try {\n-            synchronized (this) {\n-                if (closing) {\n+        synchronized (this) {\n+            if (closing) {\n+                return;\n+            }\n+            closing = true;\n+            stopServer();\n+            if (!userSessions.isEmpty()) {\n+                if (!fromShutdownHook) {\n                     return;\n                 }\n-                closing = true;\n-                stopServer();\n+                trace.info(\"closing {0} from shutdown hook\", databaseName);\n+                closeAllSessionsExcept(null);\n+            }\n+            trace.info(\"closing {0}\", databaseName);\n+            if (eventListener != null) {\n+                // allow the event listener to connect to the database\n+                closing = false;\n+                DatabaseEventListener e = eventListener;\n+                // set it to null, to make sure it's called only once\n+                eventListener = null;\n+                e.closingDatabase();\n                 if (!userSessions.isEmpty()) {\n-                    if (!fromShutdownHook) {\n-                        return;\n-                    }\n-                    trace.info(\"closing {0} from shutdown hook\", databaseName);\n-                    closeAllSessionsExcept(null);\n-                }\n-                trace.info(\"closing {0}\", databaseName);\n-                if (eventListener != null) {\n-                    // allow the event listener to connect to the database\n-                    closing = false;\n-                    DatabaseEventListener e = eventListener;\n-                    // set it to null, to make sure it's called only once\n-                    eventListener = null;\n-                    e.closingDatabase();\n-                    if (!userSessions.isEmpty()) {\n-                        // if a connection was opened, we can't close the database\n-                        return;\n-                    }\n-                    closing = true;\n-                }\n-                if (!this.isReadOnly()) {\n-                    removeOrphanedLobs();\n+                    // if a connection was opened, we can't close the database\n+                    return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a532968ded8e3e2c84c66e66db625d750bf7761e"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80bf5d3d2208ed9fda89cb4741fbec4f7948529b", "author": {"user": {"login": "andreitokar", "name": "Andrei Tokar"}}, "url": "https://github.com/h2database/h2database/commit/80bf5d3d2208ed9fda89cb4741fbec4f7948529b", "committedDate": "2020-08-18T15:07:59Z", "message": "fix synchronization for Database.userSessions, handle back-to-back close-open last session scenario, tolerate misbehaving eventListener"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4290, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}