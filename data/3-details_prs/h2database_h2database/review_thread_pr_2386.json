{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNzU1NDY4", "number": 2386, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNDo1OToxNFrODWvVtA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNTowMTo0M1rODWvWsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTcwODY4OnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/mvstore/DataUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNDo1OToxNFrOFbq92w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNDo1OToxNFrOFbq92w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU1OTgzNQ==", "bodyText": "We have StringUtils.convertBytesToHex() for this purpose.", "url": "https://github.com/h2database/h2database/pull/2386#discussion_r364559835", "createdAt": "2020-01-09T04:59:14Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/mvstore/DataUtils.java", "diffHunk": "@@ -1106,6 +1149,56 @@ public static int readHexInt(Map<String, ?> map, String key, int defaultValue) {\n         }\n     }\n \n+    public static String hexEncodeBytes(byte[] bytes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94fcfcd387b8b98dff4a4411ba266428a623e265"}, "originalPosition": 103}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MTcxMTIzOnYy", "diffSide": "RIGHT", "path": "h2/src/main/org/h2/mvstore/DataUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNTowMTo0M1rOFbq_XA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQwNTowMTo0M1rOFbq_XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDU2MDIyMA==", "bodyText": "StringUtils.convertHexToBytes().", "url": "https://github.com/h2database/h2database/pull/2386#discussion_r364560220", "createdAt": "2020-01-09T05:01:43Z", "author": {"login": "katzyn"}, "path": "h2/src/main/org/h2/mvstore/DataUtils.java", "diffHunk": "@@ -1106,6 +1149,56 @@ public static int readHexInt(Map<String, ?> map, String key, int defaultValue) {\n         }\n     }\n \n+    public static String hexEncodeBytes(byte[] bytes) {\n+        StringBuilder sb = new StringBuilder(bytes.length * 2);\n+        for (byte b : bytes) {\n+            sb.append(getHexDigitFor(b >> 4));\n+            sb.append(getHexDigitFor(b));\n+        }\n+        return sb.toString();\n+    }\n+\n+    private static char getHexDigitFor(int digit) {\n+        digit &= 0xF;\n+        return (char)((digit < 10 ? '0' : 'a' - 10) + digit);\n+    }\n+\n+    public static byte[] parseHexBytes(Map<String, ?> map, String key) {\n+        Object v = map.get(key);\n+        if (v == null) {\n+            return null;\n+        }\n+        String s = (String)v;\n+        try {\n+            int length = s.length();\n+            byte[] data = new byte[length / 2];\n+            for(int i = 0; i < length; i += 2) {\n+                data[i / 2] = (byte)((hexValueOf(s.charAt(i)) << 4)\n+                                    | hexValueOf(s.charAt(i + 1)));\n+            }\n+            return data;\n+        } catch (NumberFormatException e) {\n+            throw newIllegalStateException(ERROR_FILE_CORRUPT,\n+                    \"Error parsing the value {0}\", v, e);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94fcfcd387b8b98dff4a4411ba266428a623e265"}, "originalPosition": 134}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2195, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}