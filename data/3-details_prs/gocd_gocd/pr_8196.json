{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NzQxNjI5", "number": 8196, "title": "Improve environments pipeline edit", "bodyText": "Fixes Issue: #8127", "createdAt": "2020-05-28T21:20:31Z", "url": "https://github.com/gocd/gocd/pull/8196", "merged": true, "mergeCommit": {"oid": "67d071468a5f9e58d3118ac8c7b887c07e1fc3bb"}, "closed": true, "closedAt": "2020-06-01T16:00:41Z", "author": {"login": "maheshp"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcl9U6iAFqTQyMDcxMzczMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcm5TAOgFqTQyMTU5ODM0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwNzEzNzMw", "url": "https://github.com/gocd/gocd/pull/8196#pullrequestreview-420713730", "createdAt": "2020-05-29T07:28:20Z", "commit": {"oid": "49763ba244cee66488725c4c22a47e359b865a82"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNzoyODoyMFrOGcRuYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQwNzoyODoyMFrOGcRuYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjMwMzcxMg==", "bodyText": "This is not required as the envs page does not need the users and roles info.", "url": "https://github.com/gocd/gocd/pull/8196#discussion_r432303712", "createdAt": "2020-05-29T07:28:20Z", "author": {"login": "kritika-singh3"}, "path": "api/api-internal-pipeline-groups-v1/src/main/java/com/thoughtworks/go/apiv1/internalpipelinegroups/representers/InternalPipelineGroupsRepresenter.java", "diffHunk": "@@ -0,0 +1,73 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.thoughtworks.go.apiv1.internalpipelinegroups.representers;\n+\n+import com.thoughtworks.go.api.base.OutputWriter;\n+import com.thoughtworks.go.apiv1.internalpipelinegroups.models.PipelineGroupsViewModel;\n+import com.thoughtworks.go.config.EnvironmentConfig;\n+import com.thoughtworks.go.config.PipelineConfig;\n+import com.thoughtworks.go.config.remote.ConfigOrigin;\n+import com.thoughtworks.go.config.remote.FileConfigOrigin;\n+import com.thoughtworks.go.config.remote.RepoConfigOrigin;\n+\n+import java.util.Collection;\n+\n+public class InternalPipelineGroupsRepresenter {\n+    public static void toJSON(OutputWriter outputWriter, PipelineGroupsViewModel pipelineGroupsViewModel) {\n+        outputWriter.\n+                addChildList(\"groups\", groupsWriter -> {\n+                    pipelineGroupsViewModel.getPipelineGroups().forEach(group -> {\n+                        groupsWriter.addChild(groupWriter -> {\n+                            groupWriter.add(\"name\", group.getGroup())\n+                                    .addChildList(\"pipelines\",\n+                                            outputListWriter -> group.forEach(pipelineConfig -> {\n+                                                outputListWriter.addChild(pipelineWriter -> {\n+                                                    pipelineWriter.add(\"name\", pipelineConfig.name());\n+                                                    writeOrigin(pipelineWriter, pipelineConfig.getOrigin());\n+                                                    renderEnvironment(pipelineWriter, pipelineConfig, pipelineGroupsViewModel);\n+                                                });\n+                                            }));\n+                        });\n+                    });\n+                });\n+    }\n+\n+    private static void renderEnvironment(OutputWriter pipelineWriter, PipelineConfig pipelineConfig, PipelineGroupsViewModel environments) {\n+        EnvironmentConfig envForPipeline = environments.environmentFor(pipelineConfig.name());\n+        if (envForPipeline != null) {\n+            pipelineWriter.add(\"environment\", envForPipeline.name());\n+        } else {\n+            pipelineWriter.renderNull(\"environment\");\n+        }\n+    }\n+\n+    private static void writeOrigin(OutputWriter jsonWriter, ConfigOrigin origin) {\n+        if (origin instanceof FileConfigOrigin) {\n+            jsonWriter.addChild(\"origin\", originWriter -> originWriter.add(\"type\", \"gocd\"));\n+        } else if (origin instanceof RepoConfigOrigin) {\n+            jsonWriter.addChild(\"origin\", originWriter -> {\n+                originWriter.add(\"type\", \"config_repo\");\n+                originWriter.add(\"id\", ((RepoConfigOrigin) origin).getConfigRepo().getId());\n+            });\n+        }\n+    }\n+\n+    public static void toJSON(OutputWriter outputWriter, PipelineGroupsViewModel pipelineGroupsViewModel, Collection<String> users, Collection<String> roles) {\n+        toJSON(outputWriter, pipelineGroupsViewModel);\n+        outputWriter.addChild(\"additional_info\", (writer) -> writer.addChildList(\"users\", users)\n+                .addChildList(\"roles\", roles));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49763ba244cee66488725c4c22a47e359b865a82"}, "originalPosition": 72}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5d0f6dfec6a11a51829e61eddf6410cf83b54f4", "author": {"user": {"login": "GaneshSPatil", "name": "Ganesh S Patil"}}, "url": "https://github.com/gocd/gocd/commit/f5d0f6dfec6a11a51829e61eddf6410cf83b54f4", "committedDate": "2020-05-28T17:59:39Z", "message": "Improve environment pipelines modal rendering performance.\n\n* The environment pipelines edit modal contains the following information:\n  - available pipelines:\n    The list of pipelines available for edit. Contains all XML defined pipelines\n    which does not belong to other environments.\n  - unavailable pipelines belonging to other environments:\n    The list of pipelines which are not available for association with current\n    environment because they're already associated with other environments.\n  - unavailable pipelines defined in config repository:\n    The list of pipelines which does not belong to any environment and are\n    defined remotely.\n\n* Prior implementation:\n  - To compute the above mentioned information, the pipeline vm model used\n    to iterate over all the pipelines several times. (at least 4 times).\n  - Also, to compute other environment pipelines, it would iterate over all\n    pipelines belonging to other environments (at least 2 times).\n  - The VM used to dynamically compute this information, hence, every mithril\n    redraw would cause this information to be recomputed.\n  - Due to alot of local variables (consisting of thousands of pipelines) and\n    recomputing every milliseconds, the CPU usage was 90%+ (with pipeline edit\n    modal open and no other operation)\n\n* Newer implementation:\n  - To compute the above mentioned information, the pipeline vm now just\n    iterate over all the pipelines only once.\n  - Use Map to store pipelines (pipelineName => Pipeline) making lookups faster.\n  - The VM computes all this information only once (during creation), hence,\n    subsequent redraws do not cause CPU spikes."}, "afterCommit": {"oid": "8a6153cb55ca521de9fd45db8b21fc93da835d84", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/8a6153cb55ca521de9fd45db8b21fc93da835d84", "committedDate": "2020-05-29T21:23:54Z", "message": "Environments pipeline edit should use the internal pipeline groups API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "722ec8fcb0c0788231f33879dbbf19cff774ddf0", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/722ec8fcb0c0788231f33879dbbf19cff774ddf0", "committedDate": "2020-05-29T21:27:09Z", "message": "Introduced internal pipeline groups API #000\n\n* This API will be used on the environments SPA for editing\n  pipelines."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3304d04cb9c7e48494e633a51c323c424ad085e", "author": {"user": {"login": "GaneshSPatil", "name": "Ganesh S Patil"}}, "url": "https://github.com/gocd/gocd/commit/c3304d04cb9c7e48494e633a51c323c424ad085e", "committedDate": "2020-05-29T21:27:18Z", "message": "Improve environment pipelines modal rendering performance.\n\n* The environment pipelines edit modal contains the following information:\n  - available pipelines:\n    The list of pipelines available for edit. Contains all XML defined pipelines\n    which does not belong to other environments.\n  - unavailable pipelines belonging to other environments:\n    The list of pipelines which are not available for association with current\n    environment because they're already associated with other environments.\n  - unavailable pipelines defined in config repository:\n    The list of pipelines which does not belong to any environment and are\n    defined remotely.\n\n* Prior implementation:\n  - To compute the above mentioned information, the pipeline vm model used\n    to iterate over all the pipelines several times. (at least 4 times).\n  - Also, to compute other environment pipelines, it would iterate over all\n    pipelines belonging to other environments (at least 2 times).\n  - The VM used to dynamically compute this information, hence, every mithril\n    redraw would cause this information to be recomputed.\n  - Due to alot of local variables (consisting of thousands of pipelines) and\n    recomputing every milliseconds, the CPU usage was 90%+ (with pipeline edit\n    modal open and no other operation)\n\n* Newer implementation:\n  - To compute the above mentioned information, the pipeline vm now just\n    iterate over all the pipelines only once.\n  - Use Map to store pipelines (pipelineName => Pipeline) making lookups faster.\n  - The VM computes all this information only once (during creation), hence,\n    subsequent redraws do not cause CPU spikes."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9993e795746fc3914de77a9953c0d4b3a9bf1977", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/9993e795746fc3914de77a9953c0d4b3a9bf1977", "committedDate": "2020-05-29T21:27:18Z", "message": "Environments pipeline edit should use the internal pipeline groups API"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a6153cb55ca521de9fd45db8b21fc93da835d84", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/8a6153cb55ca521de9fd45db8b21fc93da835d84", "committedDate": "2020-05-29T21:23:54Z", "message": "Environments pipeline edit should use the internal pipeline groups API"}, "afterCommit": {"oid": "9993e795746fc3914de77a9953c0d4b3a9bf1977", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/9993e795746fc3914de77a9953c0d4b3a9bf1977", "committedDate": "2020-05-29T21:27:18Z", "message": "Environments pipeline edit should use the internal pipeline groups API"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNTk4MzQz", "url": "https://github.com/gocd/gocd/pull/8196#pullrequestreview-421598343", "createdAt": "2020-06-01T05:20:33Z", "commit": {"oid": "9993e795746fc3914de77a9953c0d4b3a9bf1977"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1884, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}