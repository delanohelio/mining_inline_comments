{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0NTAxNjIy", "number": 8436, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoyODo1NFrOEWq1hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoyODo1NFrOEWq1hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyMjA1OTU4OnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/materials/modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoyODo1NFrOG-CpSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMFQwNjoyODo1NFrOG-CpSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzcwODIzMw==", "bodyText": "Currently, the search for a modification is throttled at 500 ms. Let me know if this is not required.", "url": "https://github.com/gocd/gocd/pull/8436#discussion_r467708233", "createdAt": "2020-08-10T06:28:54Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/materials/modal.tsx", "diffHunk": "@@ -0,0 +1,168 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+import classnames from \"classnames\";\n+import {SparkRoutes} from \"helpers/spark_routes\";\n+import {MithrilViewComponent} from \"jsx/mithril-component\";\n+import _ from \"lodash\";\n+import m from \"mithril\";\n+import Stream from \"mithril/stream\";\n+import {stringOrUndefined} from \"models/compare/pipeline_instance_json\";\n+import {MaterialModification} from \"models/config_repos/types\";\n+import {MaterialAPIs, MaterialModifications, MaterialWithFingerprint} from \"models/materials/materials\";\n+import {FlashMessage, MessageType} from \"views/components/flash_message\";\n+import {SearchField} from \"views/components/forms/input_fields\";\n+import {KeyValuePair} from \"views/components/key_value_pair\";\n+import {Link} from \"views/components/link\";\n+import linkStyles from \"views/components/link/index.scss\";\n+import {Modal, ModalState, Size} from \"views/components/modal\";\n+import styles from \"./index.scss\";\n+import {MaterialWidget} from \"./material_widget\";\n+\n+export class ShowModificationsModal extends Modal {\n+  errorMessage: Stream<string>                         = Stream();\n+  private material: MaterialWithFingerprint;\n+  private modifications: Stream<MaterialModifications> = Stream();\n+  private service: ApiService;\n+  private searchQuery: Stream<string>                  = Stream(\"\");\n+\n+  constructor(material: MaterialWithFingerprint, service: ApiService = new FetchHistoryService()) {\n+    super(Size.large);\n+    this.material = material;\n+    this.service  = service;\n+    this.fetchModifications();\n+  }\n+\n+  body(): m.Children {\n+    const onPatternChange = () => {\n+      if (_.isEmpty(this.searchQuery()) || this.searchQuery().length < 2) {\n+        return;\n+      }\n+      _.throttle(() => this.fetchModifications(), 500, {trailing: true})();\n+    };\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf042e17ee30f8ee1d62c13df471e4a0c02b2ca6"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2820, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}