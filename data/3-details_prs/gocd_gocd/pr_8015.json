{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA0MDEyNTIw", "number": 8015, "title": "Introduced SCM verify_connection internal api", "bodyText": "Verify Connection JSON using github.pr plugin\ncurl 'http://localhost:8153/go/api/admin/internal/scms/verify_connection' \\\n  -H 'Accept:application/vnd.go.cd.v1+json' \\\n  -H 'Content-Type:application/json' \\\n  -X POST -d '{\n  \"id\": \"scm-id\",\n  \"name\": \"foobar\",\n  \"auto_update\": true,\n  \"plugin_metadata\": {\n    \"id\": \"github.pr\",\n    \"version\": \"1\"\n  },\n  \"configuration\": [\n    {\n      \"key\": \"url\",\n      \"value\": \"https://github.com/gocd/gocd.git\"\n    }\n  ]\n }'\n\nResponse\n{\n  \"status\" : \"success\",\n  \"messages\" : [ \"Could connect to URL successfully\" ],\n  \"scm\" : {\n    \"id\" : \"scm-id\",\n    \"name\" : \"foobar\",\n    \"auto_update\" : true,\n    \"plugin_metadata\" : {\n      \"id\" : \"github.pr\",\n      \"version\" : \"1\"\n    },\n    \"configuration\" : [ {\n      \"key\" : \"url\",\n      \"value\" : \"https://github.com/gocd/gocd.git\"\n    } ]\n  }", "createdAt": "2020-04-15T22:05:46Z", "url": "https://github.com/gocd/gocd/pull/8015", "merged": true, "mergeCommit": {"oid": "e5f9fcd1128cc575ecf93c5d6d5edf0d212b4faa"}, "closed": true, "closedAt": "2020-04-16T05:07:09Z", "author": {"login": "maheshp"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcYEv7TAFqTM5NDI4NjAwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcYFE3JABqjMyMzgxNTI3Mzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0Mjg2MDA3", "url": "https://github.com/gocd/gocd/pull/8015#pullrequestreview-394286007", "createdAt": "2020-04-16T04:12:13Z", "commit": {"oid": "5328a35a8a7de2400394a8cf779bfa29550d6809"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDoxMjoxM1rOGGT4Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQwNDoxMjoxM1rOGGT4Iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTI3MDMwNw==", "bodyText": "We are not using this controller for CRUD operations. Does it still make sense to use CrudController interface?", "url": "https://github.com/gocd/gocd/pull/8015#discussion_r409270307", "createdAt": "2020-04-16T04:12:13Z", "author": {"login": "kritika-singh3"}, "path": "api/api-internal-scms-v1/src/main/java/com/thoughtworks/go/apiv1/internalscms/InternalSCMsControllerV1.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.internalscms;\n+\n+import com.thoughtworks.go.api.ApiController;\n+import com.thoughtworks.go.api.ApiVersion;\n+import com.thoughtworks.go.api.CrudController;\n+import com.thoughtworks.go.api.base.OutputWriter;\n+import com.thoughtworks.go.api.representers.JsonReader;\n+import com.thoughtworks.go.api.spring.ApiAuthenticationHelper;\n+import com.thoughtworks.go.api.util.GsonTransformer;\n+import com.thoughtworks.go.apiv1.internalscms.representers.SCMRepresenter;\n+import com.thoughtworks.go.apiv1.internalscms.representers.VerifyConnectionResultRepresenter;\n+import com.thoughtworks.go.config.exceptions.EntityType;\n+import com.thoughtworks.go.domain.scm.SCM;\n+import com.thoughtworks.go.plugin.api.response.Result;\n+import com.thoughtworks.go.server.service.EntityHashingService;\n+import com.thoughtworks.go.server.service.materials.PluggableScmService;\n+import com.thoughtworks.go.spark.Routes;\n+import com.thoughtworks.go.spark.spring.SparkSpringController;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.stereotype.Component;\n+import spark.Request;\n+import spark.Response;\n+\n+import java.io.IOException;\n+import java.util.function.Consumer;\n+\n+import static spark.Spark.*;\n+\n+@Component\n+public class InternalSCMsControllerV1 extends ApiController implements SparkSpringController, CrudController<SCM> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5328a35a8a7de2400394a8cf779bfa29550d6809"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca3fa386ecbebf36205f2160fbab36b952defd68", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/ca3fa386ecbebf36205f2160fbab36b952defd68", "committedDate": "2020-04-16T04:34:53Z", "message": "Introduced SCM verify_connection internal api\n\n* Currently this endpoint will be used only on the\n  SCM SPA, hence it is internal."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5328a35a8a7de2400394a8cf779bfa29550d6809", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/5328a35a8a7de2400394a8cf779bfa29550d6809", "committedDate": "2020-04-15T21:56:48Z", "message": "Introduced SCM verify_connection internal api\n\n* Currently this endpoint will be used only on the\n  SCM SPA, hence it is internal."}, "afterCommit": {"oid": "ca3fa386ecbebf36205f2160fbab36b952defd68", "author": {"user": {"login": "maheshp", "name": "Mahesh Panchaksharaiah"}}, "url": "https://github.com/gocd/gocd/commit/ca3fa386ecbebf36205f2160fbab36b952defd68", "committedDate": "2020-04-16T04:34:53Z", "message": "Introduced SCM verify_connection internal api\n\n* Currently this endpoint will be used only on the\n  SCM SPA, hence it is internal."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1923, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}