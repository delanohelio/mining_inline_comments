{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA1ODE4NTY4", "number": 8023, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDo1NTowMlrOFCH6HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDo1OToyM1rOFCH-ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzcxMDM3OnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/buttons/index.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDo1NTowMlrOIBHBkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDowNzo1N1rOICBYWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNDU3Nw==", "bodyText": "IMO, the default settings for the project is to align on value. Pls verify.", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538034577", "createdAt": "2020-12-08T04:55:02Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/buttons/index.tsx", "diffHunk": "@@ -60,9 +64,9 @@ function dataTestIdAttrs(attrs: Attrs) {\n }\n \n abstract class Button extends RestyleViewComponent<Styles, Attrs> {\n-  css: Styles                                  = defaultStyles;\n+  css: Styles = defaultStyles;\n   ajaxOperationMonitor: Stream<OperationState> = Stream<OperationState>(OperationState.UNKNOWN);\n-  forceSpinner                                 = false;\n+  forceSpinner = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0ad31e8512e0c7f26c181cd7328ce0fede5d22"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5MDY4MA==", "bodyText": "Sorry, that was vscode autoformatting with the typescript plugin. I can fix this.", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538990680", "createdAt": "2020-12-09T04:07:57Z", "author": {"login": "marques-work"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/buttons/index.tsx", "diffHunk": "@@ -60,9 +64,9 @@ function dataTestIdAttrs(attrs: Attrs) {\n }\n \n abstract class Button extends RestyleViewComponent<Styles, Attrs> {\n-  css: Styles                                  = defaultStyles;\n+  css: Styles = defaultStyles;\n   ajaxOperationMonitor: Stream<OperationState> = Stream<OperationState>(OperationState.UNKNOWN);\n-  forceSpinner                                 = false;\n+  forceSpinner = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNDU3Nw=="}, "originalCommit": {"oid": "2d0ad31e8512e0c7f26c181cd7328ce0fede5d22"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzcxNDIyOnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/config_repos/config_repos_widget.tsx", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDo1NjoyMVrOIBHDkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQwNDoyNDo0OVrOICBtMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNTA5MA==", "bodyText": "How about using generator instead of page?", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538035090", "createdAt": "2020-12-08T04:56:21Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/config_repos/config_repos_widget.tsx", "diffHunk": "@@ -14,38 +14,41 @@\n  * limitations under the License.\n  */\n \n-import {docsUrl} from \"gen/gocd_version\";\n-import {MithrilComponent, MithrilViewComponent} from \"jsx/mithril-component\";\n+import { docsUrl } from \"gen/gocd_version\";\n+import { MithrilComponent, MithrilViewComponent } from \"jsx/mithril-component\";\n import _ from \"lodash\";\n import m from \"mithril\";\n import Stream from \"mithril/stream\";\n-import {ConfigRepo, ParseInfo} from \"models/config_repos/types\";\n-import {PluginInfo} from \"models/shared/plugin_infos_new/plugin_info\";\n-import {Anchor, ScrollManager} from \"views/components/anchor/anchor\";\n-import {Code} from \"views/components/code\";\n-import {CollapsiblePanel} from \"views/components/collapsible_panel\";\n-import {FlashMessage, MessageType} from \"views/components/flash_message\";\n-import {HeaderIcon} from \"views/components/header_icon\";\n-import {Delete, Edit, IconGroup, Refresh} from \"views/components/icons\";\n-import {KeyValuePair} from \"views/components/key_value_pair\";\n-import {Link} from \"views/components/link\";\n-import {ShowRulesWidget} from \"views/components/rules/show_rules_widget\";\n-import {RequiresPluginInfos} from \"views/pages/page_operations\";\n-import {allAttributes, resolveHumanReadableAttributes, userDefinedProperties} from \"./config_repo_attribute_helper\";\n-import {CRResult} from \"./config_repo_result\";\n-import {ConfigRepoVM, CRVMAware} from \"./config_repo_view_model\";\n+import { ConfigRepo, ParseInfo } from \"models/config_repos/types\";\n+import { PluginInfo } from \"models/shared/plugin_infos_new/plugin_info\";\n+import { Anchor, ScrollManager } from \"views/components/anchor/anchor\";\n+import { Code } from \"views/components/code\";\n+import { CollapsiblePanel } from \"views/components/collapsible_panel\";\n+import { FlashMessage, MessageType } from \"views/components/flash_message\";\n+import { HeaderIcon } from \"views/components/header_icon\";\n+import { Delete, Edit, IconGroup, Refresh } from \"views/components/icons\";\n+import { KeyValuePair } from \"views/components/key_value_pair\";\n+import { Link } from \"views/components/link\";\n+import { ShowRulesWidget } from \"views/components/rules/show_rules_widget\";\n+import { RequiresPluginInfos } from \"views/pages/page_operations\";\n+import { allAttributes, resolveHumanReadableAttributes, userDefinedProperties } from \"./config_repo_attribute_helper\";\n+import { CRResult } from \"./config_repo_result\";\n+import { ConfigRepoVM, CRVMAware, WebhookUrlGenerator } from \"./config_repo_view_model\";\n import styles from \"./index.scss\";\n+import { WebhookSuggestions } from \"./webhook_suggestions\";\n \n interface CollectionAttrs extends RequiresPluginInfos {\n   models: Stream<ConfigRepoVM[]>;\n   flushEtag: () => void;\n   sm: ScrollManager;\n+  page: WebhookUrlGenerator;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d0ad31e8512e0c7f26c181cd7328ce0fede5d22"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODk5NjAxNg==", "bodyText": "True, I suppose I was looking at it from a different perspective. More descriptive.", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538996016", "createdAt": "2020-12-09T04:24:49Z", "author": {"login": "marques-work"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/config_repos/config_repos_widget.tsx", "diffHunk": "@@ -14,38 +14,41 @@\n  * limitations under the License.\n  */\n \n-import {docsUrl} from \"gen/gocd_version\";\n-import {MithrilComponent, MithrilViewComponent} from \"jsx/mithril-component\";\n+import { docsUrl } from \"gen/gocd_version\";\n+import { MithrilComponent, MithrilViewComponent } from \"jsx/mithril-component\";\n import _ from \"lodash\";\n import m from \"mithril\";\n import Stream from \"mithril/stream\";\n-import {ConfigRepo, ParseInfo} from \"models/config_repos/types\";\n-import {PluginInfo} from \"models/shared/plugin_infos_new/plugin_info\";\n-import {Anchor, ScrollManager} from \"views/components/anchor/anchor\";\n-import {Code} from \"views/components/code\";\n-import {CollapsiblePanel} from \"views/components/collapsible_panel\";\n-import {FlashMessage, MessageType} from \"views/components/flash_message\";\n-import {HeaderIcon} from \"views/components/header_icon\";\n-import {Delete, Edit, IconGroup, Refresh} from \"views/components/icons\";\n-import {KeyValuePair} from \"views/components/key_value_pair\";\n-import {Link} from \"views/components/link\";\n-import {ShowRulesWidget} from \"views/components/rules/show_rules_widget\";\n-import {RequiresPluginInfos} from \"views/pages/page_operations\";\n-import {allAttributes, resolveHumanReadableAttributes, userDefinedProperties} from \"./config_repo_attribute_helper\";\n-import {CRResult} from \"./config_repo_result\";\n-import {ConfigRepoVM, CRVMAware} from \"./config_repo_view_model\";\n+import { ConfigRepo, ParseInfo } from \"models/config_repos/types\";\n+import { PluginInfo } from \"models/shared/plugin_infos_new/plugin_info\";\n+import { Anchor, ScrollManager } from \"views/components/anchor/anchor\";\n+import { Code } from \"views/components/code\";\n+import { CollapsiblePanel } from \"views/components/collapsible_panel\";\n+import { FlashMessage, MessageType } from \"views/components/flash_message\";\n+import { HeaderIcon } from \"views/components/header_icon\";\n+import { Delete, Edit, IconGroup, Refresh } from \"views/components/icons\";\n+import { KeyValuePair } from \"views/components/key_value_pair\";\n+import { Link } from \"views/components/link\";\n+import { ShowRulesWidget } from \"views/components/rules/show_rules_widget\";\n+import { RequiresPluginInfos } from \"views/pages/page_operations\";\n+import { allAttributes, resolveHumanReadableAttributes, userDefinedProperties } from \"./config_repo_attribute_helper\";\n+import { CRResult } from \"./config_repo_result\";\n+import { ConfigRepoVM, CRVMAware, WebhookUrlGenerator } from \"./config_repo_view_model\";\n import styles from \"./index.scss\";\n+import { WebhookSuggestions } from \"./webhook_suggestions\";\n \n interface CollectionAttrs extends RequiresPluginInfos {\n   models: Stream<ConfigRepoVM[]>;\n   flushEtag: () => void;\n   sm: ScrollManager;\n+  page: WebhookUrlGenerator;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNTA5MA=="}, "originalCommit": {"oid": "2d0ad31e8512e0c7f26c181cd7328ce0fede5d22"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NzcyMTMyOnYy", "diffSide": "RIGHT", "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/request/payload/pr/GitLabPR.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNDo1OToyM1rOIBHHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQwNjo0MTozOVrOIBJZlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNjA0Nw==", "bodyText": "This should be id: https://docs.gitlab.com/ee/user/project/integrations/webhooks.html#merge-request-events", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538036047", "createdAt": "2020-12-08T04:59:23Z", "author": {"login": "kritika-singh3"}, "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/request/payload/pr/GitLabPR.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.webhook.request.payload.pr;\n+\n+import com.google.gson.annotations.SerializedName;\n+import com.thoughtworks.go.apiv1.webhook.request.json.GitLabProject;\n+\n+import static com.thoughtworks.go.apiv1.webhook.request.payload.pr.PrPayload.State.CLOSED;\n+import static com.thoughtworks.go.apiv1.webhook.request.payload.pr.PrPayload.State.OPEN;\n+import static java.lang.String.format;\n+\n+@SuppressWarnings({\"unused\", \"RedundantSuppression\"})\n+public class GitLabPR implements PrPayload {\n+    private GitLabProject project;\n+\n+    @SerializedName(\"object_attributes\")\n+    private Attrs attrs;\n+\n+    @Override\n+    public String identifier() {\n+        return format(\"#%d\", attrs.number);\n+    }\n+\n+    @Override\n+    public State state() {\n+        return \"opened\".equals(attrs.state) ? OPEN : CLOSED;\n+    }\n+\n+    @Override\n+    public String hostname() {\n+        return project.hostname();\n+    }\n+\n+    @Override\n+    public String fullName() {\n+        return project.fullName();\n+    }\n+\n+    private static class Attrs {\n+        @SerializedName(\"iid\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aec09a6eb2f20f50bf746e5ead1423e473442ece"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODA3MzQ5Mw==", "bodyText": "Sorry ignore me - I was thinking this was a typo - but we do have both id and iid.", "url": "https://github.com/gocd/gocd/pull/8023#discussion_r538073493", "createdAt": "2020-12-08T06:41:39Z", "author": {"login": "kritika-singh3"}, "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/request/payload/pr/GitLabPR.java", "diffHunk": "@@ -0,0 +1,59 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.webhook.request.payload.pr;\n+\n+import com.google.gson.annotations.SerializedName;\n+import com.thoughtworks.go.apiv1.webhook.request.json.GitLabProject;\n+\n+import static com.thoughtworks.go.apiv1.webhook.request.payload.pr.PrPayload.State.CLOSED;\n+import static com.thoughtworks.go.apiv1.webhook.request.payload.pr.PrPayload.State.OPEN;\n+import static java.lang.String.format;\n+\n+@SuppressWarnings({\"unused\", \"RedundantSuppression\"})\n+public class GitLabPR implements PrPayload {\n+    private GitLabProject project;\n+\n+    @SerializedName(\"object_attributes\")\n+    private Attrs attrs;\n+\n+    @Override\n+    public String identifier() {\n+        return format(\"#%d\", attrs.number);\n+    }\n+\n+    @Override\n+    public State state() {\n+        return \"opened\".equals(attrs.state) ? OPEN : CLOSED;\n+    }\n+\n+    @Override\n+    public String hostname() {\n+        return project.hostname();\n+    }\n+\n+    @Override\n+    public String fullName() {\n+        return project.fullName();\n+    }\n+\n+    private static class Attrs {\n+        @SerializedName(\"iid\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODAzNjA0Nw=="}, "originalCommit": {"oid": "aec09a6eb2f20f50bf746e5ead1423e473442ece"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2867, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}