{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MTk3MDA2", "number": 8558, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTowNTowMVrOEj9fLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozMDozOVrOEk6TxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTQzMDIxOnYy", "diffSide": "RIGHT", "path": "config/config-api/src/main/java/com/thoughtworks/go/domain/packagerepository/PackageDefinition.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTowNTowMVrOHSnZlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTowNTowMVrOHSnZlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTI4MTk0Mg==", "bodyText": "The logic for hasSecretParams and getSecretParams is repeated across classes. Is it ok to move it to Configuration class?", "url": "https://github.com/gocd/gocd/pull/8558#discussion_r489281942", "createdAt": "2020-09-16T09:05:01Z", "author": {"login": "maheshp"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/domain/packagerepository/PackageDefinition.java", "diffHunk": "@@ -326,4 +322,22 @@ public void ensureIdExists() {\n             setId(UUID.randomUUID().toString());\n         }\n     }\n+\n+    @Override\n+    public boolean hasSecretParams() {\n+        return this.getRepository().hasSecretParams()\n+                || this.getConfiguration()\n+                .stream()\n+                .anyMatch(ConfigurationProperty::hasSecretParams);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39539749221bad60568e7934783d5c565b2b7108"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTU0NzQxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/server/service/RulesService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozMzoxMVrOHSog4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozMzoxMVrOHSog4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMDE5NA==", "bodyText": "Map<CaseInsensitiveString, StringBuilder> errors = new HashMap<>();", "url": "https://github.com/gocd/gocd/pull/8558#discussion_r489300194", "createdAt": "2020-09-16T09:33:11Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/RulesService.java", "diffHunk": "@@ -136,24 +143,22 @@ private void addError(Map<CaseInsensitiveString, StringBuilder> pipelinesWithErr\n         pipelinesWithErrors.put(pipelineName, stringBuilder);\n     }\n \n-    @NotNull\n-    private HashMap<CaseInsensitiveString, StringBuilder> validate(SCM scmConfig) {\n-        String scmConfigName = scmConfig.getName();\n+    private String errorString(Map<CaseInsensitiveString, StringBuilder> errors) {\n+        return join(errors.values(), '\\n').trim();\n+    }\n+\n+    protected Map<CaseInsensitiveString, StringBuilder> validate(SecretParams secretParams, Class<? extends Validatable> entityClass, String entityName, String entityNameOrErrorMessagePrefix) {\n         HashMap<CaseInsensitiveString, StringBuilder> pipelinesWithErrors = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6f7e94fa8d5f121155f183ac4e50e56d11b1dd6"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM5MjI3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/server/service/materials/PackageDefinitionService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyOTo0MlrOHUHXHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDoyOTo0MlrOHUHXHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NDE3NQ==", "bodyText": "Don't log this error.", "url": "https://github.com/gocd/gocd/pull/8558#discussion_r490854175", "createdAt": "2020-09-18T10:29:42Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/materials/PackageDefinitionService.java", "diffHunk": "@@ -138,6 +145,9 @@ private void update(Username username, PackageDefinition packageDeinition, HttpL\n         } catch (Exception e) {\n             if (e instanceof GoConfigInvalidException && !result.hasMessage()) {\n                 result.unprocessableEntity(entityConfigValidationFailed(packageDeinition.getClass().getAnnotation(ConfigTag.class).value(), packageDeinition.getId(), e.getMessage()));\n+            } else if (e instanceof RulesViolationException || e instanceof SecretResolutionFailureException) {\n+                LOGGER.error(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d81c34207343b8e7d68a98633f4c54ac42d5f44"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MTM5NTI1OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/server/service/materials/PackageRepositoryService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozMDozOVrOHUHY5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxMDozMDozOVrOHUHY5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDg1NDYyOA==", "bodyText": "Don't log this error.", "url": "https://github.com/gocd/gocd/pull/8558#discussion_r490854628", "createdAt": "2020-09-18T10:30:39Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/materials/PackageRepositoryService.java", "diffHunk": "@@ -173,6 +176,9 @@ private void update(Username username, HttpLocalizedOperationResult result, Enti\n         } catch (Exception e) {\n             if (e instanceof GoConfigInvalidException && !result.hasMessage()) {\n                 result.unprocessableEntity(entityConfigValidationFailed(repository.getClass().getAnnotation(ConfigTag.class).value(), repository.getId(), e.getMessage()));\n+            } else if (e instanceof RulesViolationException || e instanceof SecretResolutionFailureException) {\n+                LOGGER.error(e.getMessage(), e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d81c34207343b8e7d68a98633f4c54ac42d5f44"}, "originalPosition": 103}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2793, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}