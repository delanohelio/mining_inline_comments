{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyODI4MDQ1", "number": 7804, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo1ODozOFrODnVV7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo1ODozOFrODnVV7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyNTcwNzMzOnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwNDo1ODozOFrOF1RREA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQwOTo0NDoxMVrOF1Xa3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA==", "bodyText": "Since id is intended to be unique per page (the browser won't fail, but getElementById() will always return the first), should we use a different attr?", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391401744", "createdAt": "2020-03-12T04:58:38Z", "author": {"login": "marques-work"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "diffHunk": "@@ -135,6 +133,14 @@ export class AutocompleteField extends RestyleViewComponent<Styles, AutoCompAttr\n       attrs.css = vnode.attrs.fieldCss;\n     }\n \n-    return <TextField {...attrs} />;\n+    return <TextFieldForAutoComplete {...attrs} />;\n+  }\n+}\n+\n+export class TextFieldForAutoComplete extends TextField {\n+  renderInputField(vnode: m.Vnode<TextFieldAttrs>) {\n+    return <div id=\"autocomplete-input-container\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "808c7ec852e09a085526c4ad625a5074e3dfd3b1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwNjM2Ng==", "bodyText": "@marques-work - Hmm, not against it.\nLet's assume, someone consumes this component on an SPA, and reuses this ID, which will cause auto-suggestions not to work. But this failure will be constant, meaning, it will always fail (kind of a static error which does not depend on the data). Shouldn't this be a good enough hint for the consumer to fix the conflicting IDs?\nAlso, if we're using a different attribute, we can also change the value and append a random-uuid-string at the end of it.", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391406366", "createdAt": "2020-03-12T05:20:06Z", "author": {"login": "GaneshSPatil"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "diffHunk": "@@ -135,6 +133,14 @@ export class AutocompleteField extends RestyleViewComponent<Styles, AutoCompAttr\n       attrs.css = vnode.attrs.fieldCss;\n     }\n \n-    return <TextField {...attrs} />;\n+    return <TextFieldForAutoComplete {...attrs} />;\n+  }\n+}\n+\n+export class TextFieldForAutoComplete extends TextField {\n+  renderInputField(vnode: m.Vnode<TextFieldAttrs>) {\n+    return <div id=\"autocomplete-input-container\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}, "originalCommit": {"oid": "808c7ec852e09a085526c4ad625a5074e3dfd3b1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQ4OTIzOQ==", "bodyText": "Shouldn't this be a good enough hint for the consumer to fix the conflicting IDs?\n\nThis is very much not my place to say, but I would be very confused if I added two autocomplete components in a page and this happened (or it started showing autocompletes in a component off screen). I think it is not recommended to use an id in a component, isn't it?\nPS: Feel free to ignore me. This is just a drive-by comment -- and I'm pretty sure I haven't understood the context of what this is).", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391489239", "createdAt": "2020-03-12T09:20:03Z", "author": {"login": "arvindsv"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "diffHunk": "@@ -135,6 +133,14 @@ export class AutocompleteField extends RestyleViewComponent<Styles, AutoCompAttr\n       attrs.css = vnode.attrs.fieldCss;\n     }\n \n-    return <TextField {...attrs} />;\n+    return <TextFieldForAutoComplete {...attrs} />;\n+  }\n+}\n+\n+export class TextFieldForAutoComplete extends TextField {\n+  renderInputField(vnode: m.Vnode<TextFieldAttrs>) {\n+    return <div id=\"autocomplete-input-container\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}, "originalCommit": {"oid": "808c7ec852e09a085526c4ad625a5074e3dfd3b1"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTUwMjU1OA==", "bodyText": "@arvindsv  @marques-work - You're right. This possibly can cause problems if the component is reused multiple times on the SPA.\nI will send a PR to fix this, to use autocomplete-id attribute which has a randomly generated uuid value.", "url": "https://github.com/gocd/gocd/pull/7804#discussion_r391502558", "createdAt": "2020-03-12T09:44:11Z", "author": {"login": "GaneshSPatil"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/components/forms/autocomplete.tsx", "diffHunk": "@@ -135,6 +133,14 @@ export class AutocompleteField extends RestyleViewComponent<Styles, AutoCompAttr\n       attrs.css = vnode.attrs.fieldCss;\n     }\n \n-    return <TextField {...attrs} />;\n+    return <TextFieldForAutoComplete {...attrs} />;\n+  }\n+}\n+\n+export class TextFieldForAutoComplete extends TextField {\n+  renderInputField(vnode: m.Vnode<TextFieldAttrs>) {\n+    return <div id=\"autocomplete-input-container\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTQwMTc0NA=="}, "originalCommit": {"oid": "808c7ec852e09a085526c4ad625a5074e3dfd3b1"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2719, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}