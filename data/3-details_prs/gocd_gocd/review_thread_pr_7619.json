{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjkyNTQ4", "number": 7619, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNDo1NTo0NFrODZGT2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNDo1NTo0NFrODZGT2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI3NjQ0Mzc2OnYy", "diffSide": "RIGHT", "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/GuessUrlWebHook.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNDo1NTo0NFrOFfTgRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQwNTo1NjozMFrOFfUGDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2OTczNQ==", "bodyText": "(Additionally) Read an environment variable? so that a user can pass more possible URLs?", "url": "https://github.com/gocd/gocd/pull/7619#discussion_r368369735", "createdAt": "2020-01-20T04:55:44Z", "author": {"login": "GaneshSPatil"}, "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/GuessUrlWebHook.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.webhook;\n+\n+import java.util.List;\n+\n+import static java.lang.String.format;\n+\n+public interface GuessUrlWebHook {\n+\n+    default List<String> possibleUrls(String hostname, String repoFullName) {\n+        return List.of(\n+            format(\"https://%s/%s\", hostname, repoFullName),\n+            format(\"https://%s/%s/\", hostname, repoFullName),\n+            format(\"https://%s/%s.git\", hostname, repoFullName),\n+            format(\"https://%s/%s.git/\", hostname, repoFullName),\n+            format(\"http://%s/%s\", hostname, repoFullName),\n+            format(\"http://%s/%s/\", hostname, repoFullName),\n+            format(\"http://%s/%s.git\", hostname, repoFullName),\n+            format(\"http://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git://%s/%s\", hostname, repoFullName),\n+            format(\"git://%s/%s/\", hostname, repoFullName),\n+            format(\"git://%s/%s.git\", hostname, repoFullName),\n+            format(\"git://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git@%s:%s\", hostname, repoFullName),\n+            format(\"git@%s:%s/\", hostname, repoFullName),\n+            format(\"git@%s:%s.git\", hostname, repoFullName),\n+            format(\"git@%s:%s.git/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s\", hostname, repoFullName),\n+            format(\"ssh://%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git/\", hostname, repoFullName)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "30e6ee197eb24f8a9eb8274f13b1147e64c630a7"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM3OTQwNA==", "bodyText": "That can happen separately as It may involve templating the URLs", "url": "https://github.com/gocd/gocd/pull/7619#discussion_r368379404", "createdAt": "2020-01-20T05:56:30Z", "author": {"login": "bdpiprava"}, "path": "api/api-webhook-v1/src/main/java/com/thoughtworks/go/apiv1/webhook/GuessUrlWebHook.java", "diffHunk": "@@ -0,0 +1,53 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.apiv1.webhook;\n+\n+import java.util.List;\n+\n+import static java.lang.String.format;\n+\n+public interface GuessUrlWebHook {\n+\n+    default List<String> possibleUrls(String hostname, String repoFullName) {\n+        return List.of(\n+            format(\"https://%s/%s\", hostname, repoFullName),\n+            format(\"https://%s/%s/\", hostname, repoFullName),\n+            format(\"https://%s/%s.git\", hostname, repoFullName),\n+            format(\"https://%s/%s.git/\", hostname, repoFullName),\n+            format(\"http://%s/%s\", hostname, repoFullName),\n+            format(\"http://%s/%s/\", hostname, repoFullName),\n+            format(\"http://%s/%s.git\", hostname, repoFullName),\n+            format(\"http://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git://%s/%s\", hostname, repoFullName),\n+            format(\"git://%s/%s/\", hostname, repoFullName),\n+            format(\"git://%s/%s.git\", hostname, repoFullName),\n+            format(\"git://%s/%s.git/\", hostname, repoFullName),\n+            format(\"git@%s:%s\", hostname, repoFullName),\n+            format(\"git@%s:%s/\", hostname, repoFullName),\n+            format(\"git@%s:%s.git\", hostname, repoFullName),\n+            format(\"git@%s:%s.git/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://git@%s/%s.git/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s\", hostname, repoFullName),\n+            format(\"ssh://%s/%s/\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git\", hostname, repoFullName),\n+            format(\"ssh://%s/%s.git/\", hostname, repoFullName)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODM2OTczNQ=="}, "originalCommit": {"oid": "30e6ee197eb24f8a9eb8274f13b1147e64c630a7"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2774, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}