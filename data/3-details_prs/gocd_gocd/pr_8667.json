{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Mzk1Nzky", "number": 8667, "title": "Allow `ConfigRepoConfig` to set `autoUpdate` to `false`", "bodyText": "Part of #8023\nProvides a UI to configure autoUpdate and removes validation enforcing it to be enabled.\nAs a byproduct, it also fixes the API etags to be built from the serialized representations rather than the weak hashCode() for proper caching.", "createdAt": "2020-10-20T01:50:29Z", "url": "https://github.com/gocd/gocd/pull/8667", "merged": true, "mergeCommit": {"oid": "141caf4e728ba92e2883d3e348ae4a17a6feb1f6"}, "closed": true, "closedAt": "2020-10-21T09:10:29Z", "author": {"login": "marques-work"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdUO4jpABqjM4OTYyMTk1NzI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdUo5I2AFqTUxMzQxNjUyMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d8a6a8ed617e0bd1b24f2f773d96f20a913bd64", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/8d8a6a8ed617e0bd1b24f2f773d96f20a913bd64", "committedDate": "2020-10-19T14:41:21Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\nAlso finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "af95059a3b423d5809f20430b8226fb8354bad53", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/af95059a3b423d5809f20430b8226fb8354bad53", "committedDate": "2020-10-20T01:54:31Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af95059a3b423d5809f20430b8226fb8354bad53", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/af95059a3b423d5809f20430b8226fb8354bad53", "committedDate": "2020-10-20T01:54:31Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/de4958ffa90153ecfc28519bf5347423b1b28ca2", "committedDate": "2020-10-20T08:15:14Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/de4958ffa90153ecfc28519bf5347423b1b28ca2", "committedDate": "2020-10-20T08:15:14Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "48b2e09981a024ec7e6a82106ab921b3378b1aaf", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/48b2e09981a024ec7e6a82106ab921b3378b1aaf", "committedDate": "2020-10-20T09:48:59Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "48b2e09981a024ec7e6a82106ab921b3378b1aaf", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/48b2e09981a024ec7e6a82106ab921b3378b1aaf", "committedDate": "2020-10-20T09:48:59Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "committedDate": "2020-10-20T10:04:23Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyNDk1OTE1", "url": "https://github.com/gocd/gocd/pull/8667#pullrequestreview-512495915", "createdAt": "2020-10-20T09:12:18Z", "commit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjoxOFrOHkyg2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNDo0NTowMlrOHlaEJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODM5NQ==", "bodyText": "Dint find usages for this method.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508338395", "createdAt": "2020-10-20T09:12:18Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java", "diffHunk": "@@ -397,6 +405,26 @@ public String hashForEntity(ArtifactConfig artifactConfig) {\n         return getFromCache(cacheKey, () -> String.valueOf(Objects.hash(artifactConfig)));\n     }\n \n+    public String hashForEntity(PartialConfig entity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw==", "bodyText": "The implementation for validateAutoUpdateState has to change to check if auto_update value for ConfigRepo material matches with regular material.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508986407", "createdAt": "2020-10-21T04:45:02Z", "author": {"login": "maheshp"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6"}, "originalPosition": 43}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f97caab8358750e2ecf8a688d4122417eafe66a", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/7f97caab8358750e2ecf8a688d4122417eafe66a", "committedDate": "2020-10-21T06:25:42Z", "message": "Compute ConfigRepoConfig and ConfigRepoWithResult etags based on serialized content instead of the easily-spoofed `hashCode()`\n\nThis also makes it more correct these now take account of `autoUpdate`; `hashCode()` did not."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/c1b63d3e919d02e5a032f2d8dbb26b7870402cb6", "committedDate": "2020-10-20T10:04:23Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "90854ebd19c4693b493f01eb424d15335dadbf1b", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/90854ebd19c4693b493f01eb424d15335dadbf1b", "committedDate": "2020-10-21T06:25:42Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "committedDate": "2020-10-21T08:06:26Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "90854ebd19c4693b493f01eb424d15335dadbf1b", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/90854ebd19c4693b493f01eb424d15335dadbf1b", "committedDate": "2020-10-21T06:25:42Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}, "afterCommit": {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/91cc0c42eed9ec076ca2fb9cc9f3e55146d44152", "committedDate": "2020-10-21T08:06:26Z", "message": "Add a UI option to configure `autoUpdate` on config repos\n\n  - Remove validation that required `autoUpdate == true` on `ConfigRepoConfig`\n  - Also finally write some tests for `accessor.ts`."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzNDE2NTIz", "url": "https://github.com/gocd/gocd/pull/8667#pullrequestreview-513416523", "createdAt": "2020-10-21T08:14:19Z", "commit": {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxNDoxOVrOHlfooQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxNDoxOVrOHlfooQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA3NzY2NQ==", "bodyText": "Changing this test to reflect that only materials and configrepos with auto_update = false will be considered.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509077665", "createdAt": "2020-10-21T08:14:19Z", "author": {"login": "marques-work"}, "path": "config/config-api/src/test/java/com/thoughtworks/go/config/CruiseConfigTestBase.java", "diffHunk": "@@ -811,24 +814,27 @@ public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWith\n     }\n \n     @Test\n-    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWithAutoUpdateFalseAndConfigRepos() {\n-        GitMaterialConfig gitAutoMaterial = MaterialConfigsMother.gitMaterialConfig(\"url\");\n-        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitAutoMaterial));\n-        GitMaterialConfig gitNonAutoMaterial = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n-        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitNonAutoMaterial));\n+    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsAndConfigReposWithAutoUpdateFalse() {\n+        GitMaterialConfig gitMaterialAuto = MaterialConfigsMother.gitMaterialConfig(\"url\");\n+        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitMaterialAuto));\n+        GitMaterialConfig gitMaterialManual = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n+        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitMaterialManual));\n         PipelineConfigs defaultGroup = createGroup(\"defaultGroup\", pipelineAuto, pipelineTriggerable);\n \n         cruiseConfig = new BasicCruiseConfig(defaultGroup);\n         ConfigReposConfig reposConfig = new ConfigReposConfig();\n-        GitMaterialConfig configRepoMaterial = git(\"http://git\");\n-        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterial, \"myplug\", \"id\"));\n+        GitMaterialConfig configRepoMaterialAutoUpdate = git(\"http://git\");\n+        GitMaterialConfig configRepoMaterialManual = tap(git(\"http://git2\"), g -> g.setAutoUpdate(false));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialAutoUpdate, \"myplug\", \"exclude\"));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialManual, \"myplug\", \"include\"));\n         cruiseConfig.setConfigRepos(reposConfig);\n \n \n         Set<MaterialConfig> materials = cruiseConfig.getAllUniquePostCommitSchedulableMaterials();\n         assertThat(materials.size(), is(2));\n-        assertThat(materials, hasItem(gitNonAutoMaterial));\n-        assertThat(materials, hasItem(configRepoMaterial));\n+        assertThat(materials, hasItem(gitMaterialManual));\n+        assertThat(materials, hasItem(configRepoMaterialManual));\n+        assertThat(materials, not(hasItem(configRepoMaterialAutoUpdate)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1804, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}