{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMDAzNTQ5", "number": 8895, "title": "Prevent gson serialization from serializing cipher-related instances", "bodyText": "Introduces a rejecting type adapter that throws exceptions when trying to un/marshal during agent JSON remoting:\n\nGoCipher\nAESEncrypter\nAESCipherProvider\nDESEncrypter\nDESCipherProvider", "createdAt": "2020-12-16T09:01:33Z", "url": "https://github.com/gocd/gocd/pull/8895", "merged": true, "mergeCommit": {"oid": "57c9b8fe24c26f21958e21b8ed7726bc3c41c6f8"}, "closed": true, "closedAt": "2020-12-18T04:52:13Z", "author": {"login": "marques-work"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdmrLb7AFqTU1MzQ4MDcwNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmsyPBgH2gAyNTQxMDAzNTQ5OjNhODYzODk2OTJkMWY1ZmRiOGJlNWMwMTNhYzAyY2NmYWVlNThmYWQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDgwNzA3", "url": "https://github.com/gocd/gocd/pull/8895#pullrequestreview-553480707", "createdAt": "2020-12-16T09:04:46Z", "commit": {"oid": "719282569014628f13dfc5249656c7ba4ea2e0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNDo0NlrOIG63SQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNDo0NlrOIG63SQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyNjc5Mw==", "bodyText": "Just IDEA suggesting terser syntax by converting to expression-lambda.", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544126793", "createdAt": "2020-12-16T09:04:46Z", "author": {"login": "marques-work"}, "path": "common/src/main/java/com/thoughtworks/go/remote/Serialization.java", "diffHunk": "@@ -169,10 +194,9 @@ private JsonArray configurations(ArtifactStore store) {\n         @Override\n         public ArtifactStore deserialize(JsonElement json, Type typeOfT, JsonDeserializationContext context) throws JsonParseException {\n             Configuration configuration = new Configuration();\n-            json.getAsJsonObject().get(\"configuration\").getAsJsonArray().forEach(el -> {\n-                configuration.add(new ConfigurationProperty(new ConfigurationKey(el.getAsJsonObject().get(\"key\").getAsString()),\n-                        new ConfigurationValue(el.getAsJsonObject().get(\"value\").getAsString())));\n-            });\n+            json.getAsJsonObject().get(\"configuration\").getAsJsonArray().forEach(el ->\n+                    configuration.add(new ConfigurationProperty(new ConfigurationKey(el.getAsJsonObject().get(\"key\").getAsString()),\n+                            new ConfigurationValue(el.getAsJsonObject().get(\"value\").getAsString()))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "719282569014628f13dfc5249656c7ba4ea2e0d1"}, "originalPosition": 72}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "committedDate": "2020-12-16T09:05:31Z", "message": "Prevent gson serialization from serializing cipher-related instances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "719282569014628f13dfc5249656c7ba4ea2e0d1", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/719282569014628f13dfc5249656c7ba4ea2e0d1", "committedDate": "2020-12-16T08:58:33Z", "message": "Prevent gson serialization from serializing cipher-related instances"}, "afterCommit": {"oid": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/ff49b4ff9ce81f2379e2382ad8db362ab7e331bc", "committedDate": "2020-12-16T09:05:31Z", "message": "Prevent gson serialization from serializing cipher-related instances"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDgyMDg4", "url": "https://github.com/gocd/gocd/pull/8895#pullrequestreview-553482088", "createdAt": "2020-12-16T09:06:36Z", "commit": {"oid": "719282569014628f13dfc5249656c7ba4ea2e0d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNzo1OFrOIG6_JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwOTowNzo1OFrOIG6_JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEyODgwNQ==", "bodyText": "What happens when we try to serialize ArtifactStore, the store needs to be serialized but deep down it does have a cipher.", "url": "https://github.com/gocd/gocd/pull/8895#discussion_r544128805", "createdAt": "2020-12-16T09:07:58Z", "author": {"login": "maheshp"}, "path": "common/src/test/java/com/thoughtworks/go/remote/SerializationTest.java", "diffHunk": "@@ -0,0 +1,130 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package com.thoughtworks.go.remote;\n+\n+import com.thoughtworks.go.security.*;\n+import com.thoughtworks.go.util.SystemEnvironment;\n+import lombok.SneakyThrows;\n+import org.junit.jupiter.api.Test;\n+\n+import java.io.File;\n+\n+import static java.lang.String.format;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.mockito.Mockito.mock;\n+\n+@SuppressWarnings(\"deprecation\")\n+class SerializationTest {\n+    @Test\n+    void rejectsSerializationOfGoCipher() {\n+        final IllegalArgumentException e = assertThrows(IllegalArgumentException.class, () ->\n+                Serialization.instance().toJson(new GoCipher(mock(Encrypter.class))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff49b4ff9ce81f2379e2382ad8db362ab7e331bc"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a86389692d1f5fdb8be5c013ac02ccfaee58fad", "author": {"user": {"login": "marques-work", "name": null}}, "url": "https://github.com/gocd/gocd/commit/3a86389692d1f5fdb8be5c013ac02ccfaee58fad", "committedDate": "2020-12-16T10:57:03Z", "message": "Add coverage to assert GoCipher is not de/serialized for ArtifactStore and ConfigurationProperty\n\nAlso embeds a dummy cipher when deserializing ConfigurationProperty on the agent so that the agent\nnever creates a new key on the filesystem and throws an error if any code actually tries to use\nthe dummy cipher."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1786, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}