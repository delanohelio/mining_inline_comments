{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MDEwMTQ0", "number": 7863, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMDo1NFrODqpMjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMTo1M1rODqpNCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDQxNzQyOnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/compare/stages/stages_widget.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMDo1NFrOF6hDVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMDo1NFrOF6hDVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwMzI1NQ==", "bodyText": "how about this?\nstatic stageStatusClass(status?: string = \"unknown\") {\n    return styles[status.trim().toLowerCase()];\n}\nSecondly, if we want to make that status can yield only specific values, we can change the type of the status argument from string to the possible values as follows:\nstatic stageStatusClass(status?: \"passed\" | \"failed\" |  \"unknown\" = \"unknown\") {\n    return styles[status.trim().toLowerCase()];\n}", "url": "https://github.com/gocd/gocd/pull/7863#discussion_r396903255", "createdAt": "2020-03-24T05:00:54Z", "author": {"login": "GaneshSPatil"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/compare/stages/stages_widget.tsx", "diffHunk": "@@ -24,11 +24,32 @@ const classnames = bind(styles);\n \n interface Attrs {\n   stages: Stages;\n-  pipelineCounter?: number;\n   onClick?: (stage: Stage) => void;\n }\n \n export class StagesWidget extends MithrilViewComponent<Attrs> {\n+\n+  static stageStatusClass(status: string) {\n+    if (!status) {\n+      return styles.unknown;\n+    }\n+\n+    switch (status.trim().toLowerCase()) {\n+      case \"building\":\n+        return styles.building;\n+      case \"failed\":\n+        return styles.failed;\n+      case \"failing\":\n+        return styles.failing;\n+      case \"cancelled\":\n+        return styles.cancelled;\n+      case \"passed\":\n+        return styles.passed;\n+      default:\n+        return styles.unknown;\n+    }\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95ed07febc0d588ac2e3438741a414390ba4e992"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MDQxODY2OnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/compare/timeline_modal.tsx", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMTo1M1rOF6hEHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQwNTowMTo1M1rOF6hEHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjkwMzQ1Mw==", "bodyText": "Hmm. I am not sure if there is a better way of writing this.\n@marques-work -- Thoughts??", "url": "https://github.com/gocd/gocd/pull/7863#discussion_r396903453", "createdAt": "2020-03-24T05:01:53Z", "author": {"login": "GaneshSPatil"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/views/pages/compare/timeline_modal.tsx", "diffHunk": "@@ -123,6 +126,34 @@ export class TimelineModal extends Modal {\n     return \"Select a pipeline to compare\";\n   }\n \n+  private getPipelineInstanceClassName(maxLength: number) {\n+    switch (maxLength) {\n+      case 1:\n+      case 2:\n+        return styles.xSmall;\n+      case 3:\n+        return styles.small;\n+      case 4:\n+      case 5:\n+        return styles.medium;\n+      case 6:\n+      case 7:\n+        return styles.large;\n+      default:\n+        return styles.xLarge;\n+    }\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "95ed07febc0d588ac2e3438741a414390ba4e992"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2723, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}