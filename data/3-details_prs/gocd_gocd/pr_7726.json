{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNTk4ODgz", "number": 7726, "title": "Deprecate config repos API v2", "bodyText": "Issue: #7713\nDescription:\nAdd deprecation headers to config repos API v2\n$ curl --head 'http://localhost:8153/go/api/admin/config_repos/repo' \\\n      -u 'admin:badger' \\\n      -H 'Accept:application/vnd.go.cd.v2+json'\n\nHTTP/1.1 200 OK\nDate: Wed, 12 Feb 2020 07:50:52 GMT\nX-XSS-Protection: 1; mode=block\nX-Content-Type-Options: nosniff\nX-Frame-Options: SAMEORIGIN\nX-UA-Compatible: chrome=1\nSet-Cookie: JSESSIONID=node01oj2xj1fxm0ni1q1ksufyzxvx418.node0; Path=/go; Expires=Wed, 26-Feb-2020 07:50:52 GMT; Max-Age=1209600; HttpOnly\nExpires: Thu, 01 Jan 1970 00:00:00 GMT\nCache-Control: max-age=0, private, must-revalidate\nX-GoCD-API-Deprecated-In: v20.2.0\nX-GoCD-API-Removal-In: v20.5.0\nX-GoCD-API-Deprecation-Info: https://api.gocd.org/20.2.0/#api-changelog\nLink: <http://localhost:8153/go/api/admin/config_repos/repo1>; Accept=\"application/vnd.go.cd.v3+json\"; rel=\"successor-version\"\nWarning: 299 GoCD/v20.2.0 \"The Config Repo API version v2 has been deprecated in GoCD Release v20.2.0. This version will be removed in GoCD Release v20.5.0. Version v3 of the API is available, and users are encouraged to use it\"\nContent-Type: application/vnd.go.cd.v2+json;charset=utf-8\nX-Runtime: 1\nVary: Accept-Encoding, User-Agent\nTransfer-Encoding: chunked", "createdAt": "2020-02-11T11:12:32Z", "url": "https://github.com/gocd/gocd/pull/7726", "merged": true, "mergeCommit": {"oid": "4fd4a7a9a5065362b3045e067115de7371cdeed2"}, "closed": true, "closedAt": "2020-02-12T07:52:48Z", "author": {"login": "GaneshSPatil"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDQD9wAFqTM1NjU4NDc1Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcDhg_AgBqjMwMjk3MDA2MTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2NTg0NzUz", "url": "https://github.com/gocd/gocd/pull/7726#pullrequestreview-356584753", "createdAt": "2020-02-11T11:30:40Z", "commit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMTozMDo0MFrOFoFn8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxMTozMDo0MFrOFoFn8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzU3OTUwNA==", "bodyText": "DeprecationHeadersTrait verifies whether appropriate deprecation headers are added or not, based on whether the controller is deprecated.\nIdeally, this test should be added for all the controllers to verify these headers are present or not, based on whether the controller is marked as deprecated.\nIs there a way to run a verification against all the registered route of a controller?\n\\cc: @maheshp @ketan @bdpiparva\nNote: Its possible through reflection, but the test becomes messy and unreadable :(.", "url": "https://github.com/gocd/gocd/pull/7726#discussion_r377579504", "createdAt": "2020-02-11T11:30:40Z", "author": {"login": "GaneshSPatil"}, "path": "api/api-config-repos-v2/src/test/groovy/com/thoughtworks/go/apiv2/configrepos/ConfigReposControllerV2Test.groovy", "diffHunk": "@@ -72,6 +73,74 @@ class ConfigReposControllerV2Test implements SecurityServiceTrait, ControllerTra\n     new ConfigReposControllerV2(new ApiAuthenticationHelper(securityService, goConfigService), service, entityHashingService)\n   }\n \n+  @Nested\n+  class DeprecationHeaders {\n+    @Nested\n+    class Index implements DeprecationHeadersTrait {\n+      @Override\n+      String getControllerMethodUnderTest() {\n+        return \"index\"\n+      }\n+\n+      @Override\n+      void makeHttpCall() {\n+        getWithApiHeader(controller.controllerBasePath(), [:])\n+      }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU2OTM0Mzg5", "url": "https://github.com/gocd/gocd/pull/7726#pullrequestreview-356934389", "createdAt": "2020-02-11T19:31:23Z", "commit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozMToyM1rOFoWPiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMVQxOTozNDo0MVrOFoWVsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MTc4NQ==", "bodyText": "WDYT about annotating the class as deprecated over passing these deprecation arguments in a constructor.", "url": "https://github.com/gocd/gocd/pull/7726#discussion_r377851785", "createdAt": "2020-02-11T19:31:23Z", "author": {"login": "maheshp"}, "path": "api/api-config-repos-v2/src/main/java/com/thoughtworks/go/apiv2/configrepos/ConfigReposControllerV2.java", "diffHunk": "@@ -53,7 +53,7 @@\n \n     @Autowired\n     public ConfigReposControllerV2(ApiAuthenticationHelper authHelper, ConfigRepoService service, EntityHashingService entityHashingService) {\n-        super(ApiVersion.v2);\n+        super(ApiVersion.v2, EntityType.ConfigRepo.name(), \"20.2.0\", \"20.5.0\", ApiVersion.v3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3Nzg1MzM2MA==", "bodyText": "X-API-Deprecated-In: GoCD v20.2.0\nX-API-Removal-In: GoCD v20.5.0\nX-API-Deprecation-Info: \"https://api.gocd.org/20.2.0/#api-changelog\"\n\nWDYT?", "url": "https://github.com/gocd/gocd/pull/7726#discussion_r377853360", "createdAt": "2020-02-11T19:34:41Z", "author": {"login": "maheshp"}, "path": "api/api-base/src/test/groovy/com/thoughtworks/go/api/DeprecationHeadersTrait.groovy", "diffHunk": "@@ -0,0 +1,69 @@\n+/*\n+ * Copyright 2020 ThoughtWorks, Inc.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package com.thoughtworks.go.api\n+\n+import com.google.gson.Gson\n+import com.thoughtworks.go.api.mocks.MockHttpServletResponseAssert\n+import com.thoughtworks.go.api.util.HaltApiMessages\n+import org.junit.jupiter.api.BeforeEach\n+import org.junit.jupiter.api.Test\n+import org.mockito.invocation.InvocationOnMock\n+import spark.Request\n+import spark.Response\n+\n+import static org.mockito.ArgumentMatchers.any\n+import static org.mockito.Mockito.doAnswer\n+\n+trait DeprecationHeadersTrait {\n+  abstract void makeHttpCall()\n+\n+  abstract String getControllerMethodUnderTest()\n+\n+  @BeforeEach\n+  void stubControllerAction() {\n+    doAnswer({ InvocationOnMock invocation -> return new Gson().toJson([message: \"response\"]) })\n+      .when(controller).\"${controllerMethodUnderTest}\"(any() as Request, any() as Response)\n+  }\n+\n+  @Test\n+  void 'should verify deprecation headers'() {\n+    makeHttpCall()\n+\n+    if (controller.isDeprecated()) {\n+      verifyDeprecationHeadersArePresent()\n+    } else {\n+      verifyNoDeprecationHeaders()\n+    }\n+  }\n+\n+  def verifyDeprecationHeadersArePresent() {\n+    ((MockHttpServletResponseAssert) assertThatResponse())\n+      .hasHeader(\"X-GoCD-API-Deprecation-Version\", \"v${controller.deprecatedRelease}\")\n+      .hasHeader(\"X-GoCD-API-Removal-Version\", \"v${controller.removalRelease}\")\n+      .hasHeader(\"X-GoCD-API-Deprecation-Info\", \"https://api.gocd.org/${controller.deprecatedRelease}/#api-changelog\")\n+      .hasHeader(\"Link\", \"<${request.getRequestURL().toString()}>; Accept=\\\"${controller.successorVersion.mimeType}\\\"; rel=\\\"successor-version\\\"\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca6546d305c94e2426866c5b2e7942833f412474", "author": {"user": {"login": "GaneshSPatil", "name": "Ganesh S Patil"}}, "url": "https://github.com/gocd/gocd/commit/ca6546d305c94e2426866c5b2e7942833f412474", "committedDate": "2020-02-12T07:48:21Z", "message": "Deprecate config repos API v2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "07a5dcae3728d929614af7329b003589bc1fc381", "author": {"user": {"login": "GaneshSPatil", "name": "Ganesh S Patil"}}, "url": "https://github.com/gocd/gocd/commit/07a5dcae3728d929614af7329b003589bc1fc381", "committedDate": "2020-02-11T11:03:49Z", "message": "Deprecate config repos API v2"}, "afterCommit": {"oid": "ca6546d305c94e2426866c5b2e7942833f412474", "author": {"user": {"login": "GaneshSPatil", "name": "Ganesh S Patil"}}, "url": "https://github.com/gocd/gocd/commit/ca6546d305c94e2426866c5b2e7942833f412474", "committedDate": "2020-02-12T07:48:21Z", "message": "Deprecate config repos API v2"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1960, "cost": 1, "resetAt": "2021-11-01T14:20:25Z"}}}