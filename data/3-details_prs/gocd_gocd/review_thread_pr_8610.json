{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NjM5NDc2", "number": 8610, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo0NTo0OFrOEqN9qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo0NjoxOVrOEqN-fQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzA0NDI2OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageConfigCommand.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo0NTo0OFrOHcTKdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQxMDoyMTozNFrOHcWsOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzNjE1MQ==", "bodyText": "The comparison check has been performed in the modifiedConfig.pipelinesAssociatedWithPackage method. Do we require it again.", "url": "https://github.com/gocd/gocd/pull/8610#discussion_r499436151", "createdAt": "2020-10-05T08:45:48Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageConfigCommand.java", "diffHunk": "@@ -68,6 +75,17 @@ public boolean canContinue(CruiseConfig cruiseConfig) {\n         return isAuthorized() && isRepositoryPresent(cruiseConfig) && isIdSame() && isRequestFresh();\n     }\n \n+    private void updatePackageConfigurationOnAssociatedPipelines(CruiseConfig modifiedConfig) {\n+        List<PipelineConfig> pipelinesWithPackage = modifiedConfig.pipelinesAssociatedWithPackage(newPackage);\n+        pipelinesWithPackage.forEach(pipelineConfig -> {\n+            pipelineConfig.packageMaterialConfigs().forEach(packageMaterialConfig -> {\n+                if (packageMaterialConfig.getPackageId().equals(newPackage.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203e37c08ba45832ee8fecc0b023b7dd0fc3f820"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ3NDQ0OA==", "bodyText": "I was thinking of a scenario where a PipleineConfig has more than one package material. We would need this check in those cases right?", "url": "https://github.com/gocd/gocd/pull/8610#discussion_r499474448", "createdAt": "2020-10-05T09:47:18Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageConfigCommand.java", "diffHunk": "@@ -68,6 +75,17 @@ public boolean canContinue(CruiseConfig cruiseConfig) {\n         return isAuthorized() && isRepositoryPresent(cruiseConfig) && isIdSame() && isRequestFresh();\n     }\n \n+    private void updatePackageConfigurationOnAssociatedPipelines(CruiseConfig modifiedConfig) {\n+        List<PipelineConfig> pipelinesWithPackage = modifiedConfig.pipelinesAssociatedWithPackage(newPackage);\n+        pipelinesWithPackage.forEach(pipelineConfig -> {\n+            pipelineConfig.packageMaterialConfigs().forEach(packageMaterialConfig -> {\n+                if (packageMaterialConfig.getPackageId().equals(newPackage.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzNjE1MQ=="}, "originalCommit": {"oid": "203e37c08ba45832ee8fecc0b023b7dd0fc3f820"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQ5Mzk0Nw==", "bodyText": "Yes right - we would need this check then.", "url": "https://github.com/gocd/gocd/pull/8610#discussion_r499493947", "createdAt": "2020-10-05T10:21:34Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageConfigCommand.java", "diffHunk": "@@ -68,6 +75,17 @@ public boolean canContinue(CruiseConfig cruiseConfig) {\n         return isAuthorized() && isRepositoryPresent(cruiseConfig) && isIdSame() && isRequestFresh();\n     }\n \n+    private void updatePackageConfigurationOnAssociatedPipelines(CruiseConfig modifiedConfig) {\n+        List<PipelineConfig> pipelinesWithPackage = modifiedConfig.pipelinesAssociatedWithPackage(newPackage);\n+        pipelinesWithPackage.forEach(pipelineConfig -> {\n+            pipelineConfig.packageMaterialConfigs().forEach(packageMaterialConfig -> {\n+                if (packageMaterialConfig.getPackageId().equals(newPackage.getId())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzNjE1MQ=="}, "originalCommit": {"oid": "203e37c08ba45832ee8fecc0b023b7dd0fc3f820"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNzA0NjM3OnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageRepositoryCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo0NjoxOVrOHcTLsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODo0NjoxOVrOHcTLsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQzNjQ2Ng==", "bodyText": "Same here: the check has performed in modifiedConfig.pipelinesAssociatedWithPackageRepository", "url": "https://github.com/gocd/gocd/pull/8610#discussion_r499436466", "createdAt": "2020-10-05T08:46:19Z", "author": {"login": "kritika-singh3"}, "path": "server/src/main/java/com/thoughtworks/go/config/update/UpdatePackageRepositoryCommand.java", "diffHunk": "@@ -50,16 +53,29 @@ public void update(CruiseConfig modifiedConfig) {\n         PackageRepositories repositories = modifiedConfig.getPackageRepositories();\n         repositories.replace(oldRepo, newRepo);\n         modifiedConfig.setPackageRepositories(repositories);\n+\n+        updatePackageRepositoryConfigurationOnAssociatedPipelines(modifiedConfig);\n     }\n \n     @Override\n     public boolean canContinue(CruiseConfig cruiseConfig) {\n         return super.canContinue(cruiseConfig) && isIdSame() && isRequestFresh();\n     }\n \n+    private void updatePackageRepositoryConfigurationOnAssociatedPipelines(CruiseConfig modifiedConfig) {\n+        List<PipelineConfig> pipelinesWithPackageRepo = modifiedConfig.pipelinesAssociatedWithPackageRepository(newRepo);\n+        pipelinesWithPackageRepo.forEach(pipelineConfig -> {\n+            pipelineConfig.packageMaterialConfigs().forEach(packageMaterialConfig -> {\n+                if (packageMaterialConfig.getPackageDefinition().getRepository().getId().equals(newRepo.getId())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203e37c08ba45832ee8fecc0b023b7dd0fc3f820"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2810, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}