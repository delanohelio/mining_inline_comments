{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NzYzMDgw", "number": 7659, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0Njo1M1rODacsIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0OToxOFrODacuqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDU5NjE4OnYy", "diffSide": "RIGHT", "path": "common/src/test/java/com/thoughtworks/go/domain/PipelineLabelTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0Njo1M1rOFhaAvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo1MTo1N1rOFhaJAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3MzUwMw==", "bodyText": "@arvindsv @maheshp\nAs part of GoCD release v18.10.0, we've added support to specify pipeline label as Environment Variable with pattern ${env:env_var_name}. But this pattern conflicts with package repository material with name env.\nSo lets say,\nWe've defined a package repository with name env and a package with name my_package and specified the label template of pipeline  as ${env:my_package}. Even though, the package-repository material name is specified, it won't be resolved. Because, as per our implementation, we always resolve ${env:my_package} to environment variable.\nHence, in this scenario, pipeline label would be set to empty as there is no env-var with name my_package is specified.\nThis bug is only applicable for GoCD releases from v18.10.0 to v19.11.0 as the pipeline label pattern for package material has changed to ${repo_package} in GoCD v19.12.0\nFor GoCD releases from v18.10.0 to v19.11.0, we should say, for patterns ${env:something}, env is a reserved GoCD keyword and will always be resolved to environment variable.\nWith the above-mentioned behavior, for pipeline-label migrations containing ${env:something}, the pattern template will be treated as environment variable pattern and will not migrate : to _.", "url": "https://github.com/gocd/gocd/pull/7659#discussion_r370573503", "createdAt": "2020-01-24T10:46:53Z", "author": {"login": "GaneshSPatil"}, "path": "common/src/test/java/com/thoughtworks/go/domain/PipelineLabelTest.java", "diffHunk": "@@ -282,6 +280,34 @@ public void shouldReturnEmptyIfThereIsNoMatchingEnvironmentVariable() {\n         assertThat(label.toString(), is(\"release-\"));\n     }\n \n+    @Test\n+    public void PipelineLabelTemplateMigration_shouldMigrateColonToUnderscoreForPackageMaterial() {\n+        List<List<String>> expectations = Arrays.asList(\n+                Arrays.asList(\"${COUNT}\", \"${COUNT}\"),\n+                Arrays.asList(\"something-${COUNT}\", \"something-${COUNT}\"),\n+                Arrays.asList(\"begin-${COUNT}-end\", \"begin-${COUNT}-end\"),\n+\n+                Arrays.asList(\"${repo:package}\", \"${repo_package}\"),\n+                Arrays.asList(\"start-${repo:package}-end\", \"start-${repo_package}-end\"),\n+\n+                Arrays.asList(\"release:v1-${repo:package}\", \"release:v1-${repo_package}\"),\n+                Arrays.asList(\"release:v1-${repo:package}:${svn}\", \"release:v1-${repo_package}:${svn}\"),\n+                Arrays.asList(\"release:v1-${repo:package}:${github[:7]}:${svn}\", \"release:v1-${repo_package}:${github[:7]}:${svn}\"),\n+                Arrays.asList(\"release:v1-${repo:package[:5]}:${github[:7]}:${svn}\", \"release:v1-${repo_package[:5]}:${github[:7]}:${svn}\"),\n+                Arrays.asList(\"start-release:v1-${repo:package}:${github[:7]}:${svn}-end\", \"start-release:v1-${repo_package}:${github[:7]}:${svn}-end\"),\n+\n+                Arrays.asList(\"${env:var}\", \"${env:var}\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e547219be3575278b9bb2577bb13488495f7c4d7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3NTYxOA==", "bodyText": "I understand. Makes sense to me.", "url": "https://github.com/gocd/gocd/pull/7659#discussion_r370575618", "createdAt": "2020-01-24T10:51:57Z", "author": {"login": "arvindsv"}, "path": "common/src/test/java/com/thoughtworks/go/domain/PipelineLabelTest.java", "diffHunk": "@@ -282,6 +280,34 @@ public void shouldReturnEmptyIfThereIsNoMatchingEnvironmentVariable() {\n         assertThat(label.toString(), is(\"release-\"));\n     }\n \n+    @Test\n+    public void PipelineLabelTemplateMigration_shouldMigrateColonToUnderscoreForPackageMaterial() {\n+        List<List<String>> expectations = Arrays.asList(\n+                Arrays.asList(\"${COUNT}\", \"${COUNT}\"),\n+                Arrays.asList(\"something-${COUNT}\", \"something-${COUNT}\"),\n+                Arrays.asList(\"begin-${COUNT}-end\", \"begin-${COUNT}-end\"),\n+\n+                Arrays.asList(\"${repo:package}\", \"${repo_package}\"),\n+                Arrays.asList(\"start-${repo:package}-end\", \"start-${repo_package}-end\"),\n+\n+                Arrays.asList(\"release:v1-${repo:package}\", \"release:v1-${repo_package}\"),\n+                Arrays.asList(\"release:v1-${repo:package}:${svn}\", \"release:v1-${repo_package}:${svn}\"),\n+                Arrays.asList(\"release:v1-${repo:package}:${github[:7]}:${svn}\", \"release:v1-${repo_package}:${github[:7]}:${svn}\"),\n+                Arrays.asList(\"release:v1-${repo:package[:5]}:${github[:7]}:${svn}\", \"release:v1-${repo_package[:5]}:${github[:7]}:${svn}\"),\n+                Arrays.asList(\"start-release:v1-${repo:package}:${github[:7]}:${svn}-end\", \"start-release:v1-${repo_package}:${github[:7]}:${svn}-end\"),\n+\n+                Arrays.asList(\"${env:var}\", \"${env:var}\"),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3MzUwMw=="}, "originalCommit": {"oid": "e547219be3575278b9bb2577bb13488495f7c4d7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5MDYwMjY0OnYy", "diffSide": "RIGHT", "path": "config/config-server/src/main/resources/upgrades/135.xsl", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0OToxOFrOFhaElQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQxMDo0OToxOFrOFhaElQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDU3NDQ4NQ==", "bodyText": "@maheshp -- This xsl invokes java code for migrations. I couldn't manage to write an integration spec for this behavior.\nHence, We would need to test this manually. :(\nwas able to write an integration test!", "url": "https://github.com/gocd/gocd/pull/7659#discussion_r370574485", "createdAt": "2020-01-24T10:49:18Z", "author": {"login": "GaneshSPatil"}, "path": "config/config-server/src/main/resources/upgrades/135.xsl", "diffHunk": "@@ -0,0 +1,42 @@\n+<?xml version=\"1.0\"?>\n+<!--\n+  ~ Copyright 2020 ThoughtWorks, Inc.\n+  ~\n+  ~ Licensed under the Apache License, Version 2.0 (the \"License\");\n+  ~ you may not use this file except in compliance with the License.\n+  ~ You may obtain a copy of the License at\n+  ~\n+  ~     http://www.apache.org/licenses/LICENSE-2.0\n+  ~\n+  ~ Unless required by applicable law or agreed to in writing, software\n+  ~ distributed under the License is distributed on an \"AS IS\" BASIS,\n+  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+  ~ See the License for the specific language governing permissions and\n+  ~ limitations under the License.\n+  -->\n+\n+<xsl:stylesheet xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\"\n+                xmlns:migratorClass=\"com.thoughtworks.go.domain.label.PipelineLabel\"\n+                version=\"1.0\">\n+    <xsl:template match=\"/cruise/@schemaVersion\">\n+        <xsl:attribute name=\"schemaVersion\">135</xsl:attribute>\n+    </xsl:template>\n+    <!-- Copy everything -->\n+    <xsl:template match=\"@*|node()\">\n+        <xsl:copy>\n+            <xsl:apply-templates select=\"@*|node()\"/>\n+        </xsl:copy>\n+    </xsl:template>\n+\n+    <xsl:template name=\"migratePipelineLabel\">\n+        <xsl:param name=\"templateValue\"/>\n+        <xsl:value-of select=\"migratorClass:migratePipelineLabelTemplate($templateValue)\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e547219be3575278b9bb2577bb13488495f7c4d7"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2734, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}