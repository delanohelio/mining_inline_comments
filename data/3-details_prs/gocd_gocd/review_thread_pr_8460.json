{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NzY5NTAy", "number": 8460, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToxNTo0OVrOEYVtPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToxNTo0OVrOEYVtPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzOTU2OTI1OnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/models/materials/types.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToxNTo0OVrOHAn0Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwNToxNTo0OVrOHAn0Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQxNDQzNQ==", "bodyText": "how about renaming the method name urlForDisplay?\n\n\nHow about simplifying the above code as:\n\n\nfunction urlForDisplay(url?: string) {\n  if (!url) { return undefined;}\n\n  const parsed = urlParse(url, {});\n  // do not mask passwords\n  if (_.isEmpty(parsed.auth) || parsed.protocol.includes('ssh') || parsed.protocol.includes('svn+ssh')) {\n    return parsed.href;\n  }\n\n  if (parsed.auth.includes(\":\")) {\n    // mask password when username and password is provided as username:password@url\n    parsed.set('password', '******');\n  } else {\n    // mask token when credentials are provided as token@url\n    parsed.set('username', '******');\n  }\n\n  return parsed.href;\n}", "url": "https://github.com/gocd/gocd/pull/8460#discussion_r470414435", "createdAt": "2020-08-14T05:15:49Z", "author": {"login": "GaneshSPatil"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/models/materials/types.ts", "diffHunk": "@@ -51,6 +51,24 @@ export const mapTypeToDisplayType: { [key: string]: string; } = {\n   plugin:     \"Plugin\"\n };\n \n+function clean(url?: string) {\n+  if (!url) {\n+    return url;\n+  }\n+  const parsedUrl = urlParse(url, {});\n+  if (!_.isEmpty(parsedUrl.auth)) {\n+    if (parsedUrl.auth.includes(\":\")) {\n+      parsedUrl.set('password', '******');\n+      return parsedUrl.href;\n+    }\n+    if (parsedUrl.protocol.includes('ssh') || parsedUrl.protocol.includes('svn+ssh')) {\n+      return parsedUrl.href;\n+    }\n+    parsedUrl.set('username', '******');\n+  }\n+  return parsedUrl.href;\n+}\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dacc77d19d5d8ab3a34f8e5bbfcfcb3a60b3e5c0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2822, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}