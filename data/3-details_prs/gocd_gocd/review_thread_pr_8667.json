{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2Mzk1Nzky", "number": 8667, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjoxOFrOEvrYaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxNDoxOVrOEwIHCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDI5MjkxOnYy", "diffSide": "RIGHT", "path": "server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwOToxMjoxOFrOHkyg2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNjoxMDozMlrOHlbppw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODM5NQ==", "bodyText": "Dint find usages for this method.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508338395", "createdAt": "2020-10-20T09:12:18Z", "author": {"login": "maheshp"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java", "diffHunk": "@@ -397,6 +405,26 @@ public String hashForEntity(ArtifactConfig artifactConfig) {\n         return getFromCache(cacheKey, () -> String.valueOf(Objects.hash(artifactConfig)));\n     }\n \n+    public String hashForEntity(PartialConfig entity) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMjM5MQ==", "bodyText": "I'll remove it. I think I had intended to use it from a controller, but realized it is really the PartialConfigParseResult that I needed to hash. Thanks for catching it.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509012391", "createdAt": "2020-10-21T06:10:32Z", "author": {"login": "marques-work"}, "path": "server/src/main/java/com/thoughtworks/go/server/service/EntityHashingService.java", "diffHunk": "@@ -397,6 +405,26 @@ public String hashForEntity(ArtifactConfig artifactConfig) {\n         return getFromCache(cacheKey, () -> String.valueOf(Objects.hash(artifactConfig)));\n     }\n \n+    public String hashForEntity(PartialConfig entity) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODMzODM5NQ=="}, "originalCommit": {"oid": "de4958ffa90153ecfc28519bf5347423b1b28ca2"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODQwMTc5OnYy", "diffSide": "RIGHT", "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNDo0NTowMlrOHlaEJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwNzoxMToxMlrOHldTCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw==", "bodyText": "The implementation for validateAutoUpdateState has to change to check if auto_update value for ConfigRepo material matches with regular material.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r508986407", "createdAt": "2020-10-21T04:45:02Z", "author": {"login": "maheshp"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxMjg1Ng==", "bodyText": "Is this because if there is an existing material that has the same config, auto_update must be the same?", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509012856", "createdAt": "2020-10-21T06:11:44Z", "author": {"login": "marques-work"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}, "originalCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAxODg0OA==", "bodyText": "Changed this to test if autoUpdate is the same across all matching materials", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509018848", "createdAt": "2020-10-21T06:27:21Z", "author": {"login": "marques-work"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}, "originalCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTAzOTM3MA==", "bodyText": "Is this because if there is an existing material that has the same config, auto_update must be the same?\n\nYes", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509039370", "createdAt": "2020-10-21T07:11:12Z", "author": {"login": "maheshp"}, "path": "config/config-api/src/main/java/com/thoughtworks/go/config/remote/ConfigRepoConfig.java", "diffHunk": "@@ -65,7 +67,6 @@ public void validate(ValidationContext validationContext) {\n         this.validateRepoIsSet();\n         this.validateMaterial(validationContext);\n         if (isValidMaterial()) {\n-            this.validateAutoUpdateEnabled();\n             this.validateAutoUpdateState(validationContext);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODk4NjQwNw=="}, "originalCommit": {"oid": "c1b63d3e919d02e5a032f2d8dbb26b7870402cb6"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4ODk5OTc2OnYy", "diffSide": "RIGHT", "path": "config/config-api/src/test/java/com/thoughtworks/go/config/CruiseConfigTestBase.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxNDoxOVrOHlfooQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwODoxNDoxOVrOHlfooQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTA3NzY2NQ==", "bodyText": "Changing this test to reflect that only materials and configrepos with auto_update = false will be considered.", "url": "https://github.com/gocd/gocd/pull/8667#discussion_r509077665", "createdAt": "2020-10-21T08:14:19Z", "author": {"login": "marques-work"}, "path": "config/config-api/src/test/java/com/thoughtworks/go/config/CruiseConfigTestBase.java", "diffHunk": "@@ -811,24 +814,27 @@ public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWith\n     }\n \n     @Test\n-    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsWithAutoUpdateFalseAndConfigRepos() {\n-        GitMaterialConfig gitAutoMaterial = MaterialConfigsMother.gitMaterialConfig(\"url\");\n-        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitAutoMaterial));\n-        GitMaterialConfig gitNonAutoMaterial = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n-        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitNonAutoMaterial));\n+    public void getAllUniquePostCommitSchedulableMaterials_shouldReturnMaterialsAndConfigReposWithAutoUpdateFalse() {\n+        GitMaterialConfig gitMaterialAuto = MaterialConfigsMother.gitMaterialConfig(\"url\");\n+        PipelineConfig pipelineAuto = pipelineConfig(\"pipelineAuto\", new MaterialConfigs(gitMaterialAuto));\n+        GitMaterialConfig gitMaterialManual = git(new UrlArgument(\"other-url\"), null, null, \"master\", \"dest\", false, null, false, null, new CaseInsensitiveString(\"git\"), false);\n+        PipelineConfig pipelineTriggerable = pipelineConfig(\"pipelineTriggerable\", new MaterialConfigs(gitMaterialManual));\n         PipelineConfigs defaultGroup = createGroup(\"defaultGroup\", pipelineAuto, pipelineTriggerable);\n \n         cruiseConfig = new BasicCruiseConfig(defaultGroup);\n         ConfigReposConfig reposConfig = new ConfigReposConfig();\n-        GitMaterialConfig configRepoMaterial = git(\"http://git\");\n-        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterial, \"myplug\", \"id\"));\n+        GitMaterialConfig configRepoMaterialAutoUpdate = git(\"http://git\");\n+        GitMaterialConfig configRepoMaterialManual = tap(git(\"http://git2\"), g -> g.setAutoUpdate(false));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialAutoUpdate, \"myplug\", \"exclude\"));\n+        reposConfig.add(ConfigRepoConfig.createConfigRepoConfig(configRepoMaterialManual, \"myplug\", \"include\"));\n         cruiseConfig.setConfigRepos(reposConfig);\n \n \n         Set<MaterialConfig> materials = cruiseConfig.getAllUniquePostCommitSchedulableMaterials();\n         assertThat(materials.size(), is(2));\n-        assertThat(materials, hasItem(gitNonAutoMaterial));\n-        assertThat(materials, hasItem(configRepoMaterial));\n+        assertThat(materials, hasItem(gitMaterialManual));\n+        assertThat(materials, hasItem(configRepoMaterialManual));\n+        assertThat(materials, not(hasItem(configRepoMaterialAutoUpdate)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91cc0c42eed9ec076ca2fb9cc9f3e55146d44152"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2687, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}