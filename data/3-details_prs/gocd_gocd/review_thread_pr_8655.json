{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNjg0MTg1", "number": 8655, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNToxNTowMFrOEtx2_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNToxNTowMFrOEtx2_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NDM4MjcwOnYy", "diffSide": "RIGHT", "path": "server/src/main/webapp/WEB-INF/rails/webpack/models/base/cache.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNToxNTowMFrOHhxC9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNToxNTowMFrOHhxC9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE2ODYyOQ==", "bodyText": "Adding another abstraction only because I like the idea of still allowing an explicit empty() if ever needed if subimplementations need to override markStale(). The data field is marked private and would be otherwise inaccessible in typescript.", "url": "https://github.com/gocd/gocd/pull/8655#discussion_r505168629", "createdAt": "2020-10-15T05:15:00Z", "author": {"login": "marques-work"}, "path": "server/src/main/webapp/WEB-INF/rails/webpack/models/base/cache.ts", "diffHunk": "@@ -88,10 +88,14 @@ export abstract class AbstractObjCache<T> implements ObjectCache<T> {\n   }\n \n   invalidate() {\n-    this.empty();\n+    this.markStale();\n     this.primed = false;\n   }\n \n+  protected markStale() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bbb36ec14491ec37243bd40cf9e3c6681e96bdb6"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2684, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}