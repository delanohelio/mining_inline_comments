{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTQ1MzQw", "number": 659, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODowOVrODWmfWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToyNVrODW1SFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDI1ODgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODowOVrOFbc1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODowOVrOFbc1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODIyNA==", "bodyText": "couldn't we use a Function<String,Value> parameterProvider here?", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328224", "createdAt": "2020-01-08T16:38:09Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -47,7 +49,8 @@\n public abstract class BasePageHelper<E extends BaseEntity<?>, C extends Constraint, Q extends Query<Q, E, C>, B extends BasePageHelper<E, C, Q, B>> {\n \n     protected static final int DEFAULT_PAGE_SIZE = 25;\n-    protected WebContext ctx;\n+    protected WebContext webContext;\n+    protected ProcessContext processContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDI2MDI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODozOFrOFbc2Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODozOFrOFbc2Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODQ1OQ==", "bodyText": "also this.parameterProvider = webContext::getParameter", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328459", "createdAt": "2020-01-08T16:38:38Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDI2MDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODo0OFrOFbc2ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODo0OFrOFbc2ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODU1NA==", "bodyText": "withParameterProvider(Function ...)", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328554", "createdAt": "2020-01-08T16:38:48Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;\n+    }\n+\n+    /**\n+     * Attaches a process context to the helper, to fetch filter values from.\n+     * This can be used intead of supplying a webContext via {@link #withContext(WebContext)}.\n+     *\n+     * @param processContext the context where filter values are fetched from\n+     * @return the helper itself for fluent method calls\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public B withProcessContext(ProcessContext processContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MDI2NjM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjo0MDozMVrOFbc52Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjo0MDozOFrOFbc6CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQzMw==", "bodyText": "getQuery", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364329433", "createdAt": "2020-01-08T16:40:31Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -325,10 +344,10 @@ public B withPageSize(int pageSize) {\n      * @return the given data wrapped as <tt>Page</tt>\n      */\n     public Page<E> asPage() {\n-        Objects.requireNonNull(ctx);\n+        Objects.requireNonNull(webContext);\n         Watch w = Watch.start();\n         Page<E> result = new Page<E>().withStart(1).withPageSize(pageSize);\n-        result.bindToRequest(ctx);\n+        result.bindToRequest(webContext);\n \n         if (Strings.isFilled(result.getQuery()) && !searchFields.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 135}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQ4MQ==", "bodyText": "or createQuery", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364329481", "createdAt": "2020-01-08T16:40:38Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -325,10 +344,10 @@ public B withPageSize(int pageSize) {\n      * @return the given data wrapped as <tt>Page</tt>\n      */\n     public Page<E> asPage() {\n-        Objects.requireNonNull(ctx);\n+        Objects.requireNonNull(webContext);\n         Watch w = Watch.start();\n         Page<E> result = new Page<E>().withStart(1).withPageSize(pageSize);\n-        result.bindToRequest(ctx);\n+        result.bindToRequest(webContext);\n \n         if (Strings.isFilled(result.getQuery()) && !searchFields.isEmpty()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQzMw=="}, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 135}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjY3OTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNDoyNlrOFbz97w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNDoyNlrOFbz97w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzMxMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707311", "createdAt": "2020-01-09T12:14:26Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 134}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjY4MDkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNDo1MFrOFbz-iA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNDo1MFrOFbz-iA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzQ2NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param resultHandler the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param resultHandler the handler to be invoked for each item in the result", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707464", "createdAt": "2020-01-09T12:14:50Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjY4MTg1OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToxMlrOFbz_Eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToxMlrOFbz_Eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzYwMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707602", "createdAt": "2020-01-09T12:15:12Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjY4MjQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToyNVrOFbz_Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToyNVrOFbz_Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzY4Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param consumer the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param consumer the handler to be invoked for each item in the result", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707687", "createdAt": "2020-01-09T12:15:25Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param consumer the handle to be invoked for each item in the result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 155}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2087, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}