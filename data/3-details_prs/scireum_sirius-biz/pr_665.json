{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0NDQyNjA3", "number": 665, "title": "Job parameter enhancements", "bodyText": "Adds the ability for StringParameters to be nullable\nAdds a new StringList Parameter which can be used to render a single select of key-value string pairs", "createdAt": "2020-01-18T16:37:39Z", "url": "https://github.com/scireum/sirius-biz/pull/665", "merged": true, "mergeCommit": {"oid": "b26aa22ab011d586fc87301f0dedef31effeaeb1"}, "closed": true, "closedAt": "2020-01-21T09:24:26Z", "author": {"login": "idlira"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7lfTCAH2gAyMzY0NDQyNjA3OjY1NDZmOWVlNDMxNmI5OTNiMDU0ODMwMWU4MTEyM2Y2NjM0MDNiZjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb8dqivAFqTM0NTczMTM1NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6546f9ee4316b993b0548301e81123f663403bf4", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/6546f9ee4316b993b0548301e81123f663403bf4", "committedDate": "2020-01-18T15:57:08Z", "message": "Permits String parameters to be nullable\n\nWhen markNullable is used, empty strings will be returned as null and.\n\nFixes: OX-5523"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53385e72a4ef942a451a318b6f2bebf3a4e4e17d", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/53385e72a4ef942a451a318b6f2bebf3a4e4e17d", "committedDate": "2020-01-18T16:34:38Z", "message": "Adds a new job parameter type: String List\n\nRenders a key-value like single select input. Returns null when not required and no value is selected.\n\nFixes: OX-5523"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56eef4c4982438cee68f9b2cfc8a9bc7673bd773", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/56eef4c4982438cee68f9b2cfc8a9bc7673bd773", "committedDate": "2020-01-18T16:34:47Z", "message": "JavaDoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ0OTU1NjE0", "url": "https://github.com/scireum/sirius-biz/pull/665#pullrequestreview-344955614", "createdAt": "2020-01-18T18:14:42Z", "commit": {"oid": "56eef4c4982438cee68f9b2cfc8a9bc7673bd773"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODoxNDo0MlrOFfLngw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xOFQxODoxNDo0MlrOFfLngw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODI0MDUxNQ==", "bodyText": "shouldn't this be the default? null instead of \"\" - even ifthe parameter isn marked as nullable it still might yield null as Value.getString() does filter null - asString would do this?", "url": "https://github.com/scireum/sirius-biz/pull/665#discussion_r368240515", "createdAt": "2020-01-18T18:14:42Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/params/StringParameter.java", "diffHunk": "@@ -28,8 +30,35 @@ public StringParameter(String name, String label) {\n         super(name, label);\n     }\n \n+    /**\n+     * Marks the parameter as nullable.\n+     * <p>\n+     * When set, forces empty strings to be returned as {@code null} and makes it no longer required.\n+     *\n+     * @return the parameter itself for fluent method calls\n+     */\n+    public StringParameter markNullable() {\n+        this.nullable = true;\n+        this.required = false;\n+        return self();\n+    }\n+\n+    /**\n+     * Marks the parameter as required and resets the nullable state if set.\n+     *\n+     * @return the parameter itself for fluent method calls\n+     */\n+    @Override\n+    public StringParameter markRequired() {\n+        this.nullable = false;\n+        return super.markRequired();\n+    }\n+\n     @Override\n     protected String checkAndTransformValue(Value input) {\n+        if (nullable && input.isEmptyString()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56eef4c4982438cee68f9b2cfc8a9bc7673bd773"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a229534c90e128e1f75b88c22db4835c59c879c7", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/a229534c90e128e1f75b88c22db4835c59c879c7", "committedDate": "2020-01-20T08:34:38Z", "message": "Allows smart get to be used when inserting entries to the list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14917b142385b3b0fc0e2a7107012ef569f7f665", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/14917b142385b3b0fc0e2a7107012ef569f7f665", "committedDate": "2020-01-20T10:05:53Z", "message": "Makes markNullable obsolete making null as the default value when the string is empty"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjEwMDQ5", "url": "https://github.com/scireum/sirius-biz/pull/665#pullrequestreview-345210049", "createdAt": "2020-01-20T10:26:15Z", "commit": {"oid": "14917b142385b3b0fc0e2a7107012ef569f7f665"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1MjMzNjQ0", "url": "https://github.com/scireum/sirius-biz/pull/665#pullrequestreview-345233644", "createdAt": "2020-01-20T11:06:32Z", "commit": {"oid": "14917b142385b3b0fc0e2a7107012ef569f7f665"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMTowNjozMlrOFfa4TQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMFQxMTowODowMlrOFfa6mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MDU3Mw==", "bodyText": "shouldn't i be receiving the whole Tuple in the job? There should be a lot of instance where the display value is never used in the job", "url": "https://github.com/scireum/sirius-biz/pull/665#discussion_r368490573", "createdAt": "2020-01-20T11:06:32Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/jobs/params/StringListParameter.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package sirius.biz.jobs.params;\n+\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.commons.Tuple;\n+import sirius.kernel.commons.Value;\n+import sirius.kernel.nls.NLS;\n+\n+import javax.annotation.Nonnull;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides a string list select parameter.\n+ */\n+public class StringListParameter extends Parameter<String, StringListParameter> {\n+\n+    private Map<String, String> entries = new LinkedHashMap<>();\n+\n+    /**\n+     * Creates a new parameter with the given name and label.\n+     *\n+     * @param name  the name of the parameter\n+     * @param label the label of the parameter, which will be {@link NLS#smartGet(String) auto translated}\n+     */\n+    public StringListParameter(String name, String label) {\n+        super(name, label);\n+    }\n+\n+    /**\n+     * Adds an entry to the list.\n+     *\n+     * @param key   the entry key\n+     * @param value the display value, which will be {@link NLS#smartGet(String) auto translated}\n+     * @return the parameter itself for fluent method calls\n+     */\n+    public StringListParameter withEntry(String key, String value) {\n+        this.entries.put(key, NLS.smartGet(value));\n+        return self();\n+    }\n+\n+    /**\n+     * Enumerates all values provided by the parameter.\n+     *\n+     * @return list of {@link Tuple entries} with the key as first and display value as second tuple items.\n+     */\n+    public List<Tuple<String, String>> getValues() {\n+        return entries.keySet()\n+                      .stream()\n+                      .map(entry -> Tuple.create(entry, entries.get(entry)))\n+                      .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public String getTemplateName() {\n+        return \"/templates/biz/jobs/params/selectString.html.pasta\";\n+    }\n+\n+    @Override\n+    protected String checkAndTransformValue(Value input) {\n+        if (Strings.isEmpty(input) || !entries.containsKey(input.asString())) {\n+            return null;\n+        }\n+        return input.asString();\n+    }\n+\n+    @Override\n+    protected Optional<String> resolveFromString(@Nonnull Value input) {\n+        if (!entries.containsKey(input.asString())) {\n+            return Optional.empty();\n+        }\n+        return Optional.of(entries.get(input.asString()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14917b142385b3b0fc0e2a7107012ef569f7f665"}, "originalPosition": 74}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2ODQ5MTE2MA==", "bodyText": "shouldnt this also return empty for null/\"\" ?", "url": "https://github.com/scireum/sirius-biz/pull/665#discussion_r368491160", "createdAt": "2020-01-20T11:08:02Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/jobs/params/StringListParameter.java", "diffHunk": "@@ -0,0 +1,76 @@\n+package sirius.biz.jobs.params;\n+\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.commons.Tuple;\n+import sirius.kernel.commons.Value;\n+import sirius.kernel.nls.NLS;\n+\n+import javax.annotation.Nonnull;\n+import java.util.LinkedHashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides a string list select parameter.\n+ */\n+public class StringListParameter extends Parameter<String, StringListParameter> {\n+\n+    private Map<String, String> entries = new LinkedHashMap<>();\n+\n+    /**\n+     * Creates a new parameter with the given name and label.\n+     *\n+     * @param name  the name of the parameter\n+     * @param label the label of the parameter, which will be {@link NLS#smartGet(String) auto translated}\n+     */\n+    public StringListParameter(String name, String label) {\n+        super(name, label);\n+    }\n+\n+    /**\n+     * Adds an entry to the list.\n+     *\n+     * @param key   the entry key\n+     * @param value the display value, which will be {@link NLS#smartGet(String) auto translated}\n+     * @return the parameter itself for fluent method calls\n+     */\n+    public StringListParameter withEntry(String key, String value) {\n+        this.entries.put(key, NLS.smartGet(value));\n+        return self();\n+    }\n+\n+    /**\n+     * Enumerates all values provided by the parameter.\n+     *\n+     * @return list of {@link Tuple entries} with the key as first and display value as second tuple items.\n+     */\n+    public List<Tuple<String, String>> getValues() {\n+        return entries.keySet()\n+                      .stream()\n+                      .map(entry -> Tuple.create(entry, entries.get(entry)))\n+                      .collect(Collectors.toList());\n+    }\n+\n+    @Override\n+    public String getTemplateName() {\n+        return \"/templates/biz/jobs/params/selectString.html.pasta\";\n+    }\n+\n+    @Override\n+    protected String checkAndTransformValue(Value input) {\n+        if (Strings.isEmpty(input) || !entries.containsKey(input.asString())) {\n+            return null;\n+        }\n+        return input.asString();\n+    }\n+\n+    @Override\n+    protected Optional<String> resolveFromString(@Nonnull Value input) {\n+        if (!entries.containsKey(input.asString())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14917b142385b3b0fc0e2a7107012ef569f7f665"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7650d2621125b03d4b9e7e81821dca7300a7101d", "author": {"user": {"login": "idlira", "name": "Idevaldo De Lira"}}, "url": "https://github.com/scireum/sirius-biz/commit/7650d2621125b03d4b9e7e81821dca7300a7101d", "committedDate": "2020-01-20T12:10:24Z", "message": "Refactors to SingleSelectParameter for a better understanding of its purpose"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NDI2MjA3", "url": "https://github.com/scireum/sirius-biz/pull/665#pullrequestreview-345426207", "createdAt": "2020-01-20T16:35:33Z", "commit": {"oid": "7650d2621125b03d4b9e7e81821dca7300a7101d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ1NzMxMzU0", "url": "https://github.com/scireum/sirius-biz/pull/665#pullrequestreview-345731354", "createdAt": "2020-01-21T09:24:06Z", "commit": {"oid": "7650d2621125b03d4b9e7e81821dca7300a7101d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4495, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}