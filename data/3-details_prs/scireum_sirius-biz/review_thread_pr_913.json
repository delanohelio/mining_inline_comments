{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMjk4MzI4", "number": 913, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoxNDo1N1rOE6pOKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0Mzo1M1rOE6-xCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTI4MjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoxNDo1N1rOH11q9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjo0ODoxNlrOH13P2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ==", "bodyText": "make a method and return a fresh instance each time? this avoids accidentally modifying a shared object", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526215925", "createdAt": "2020-11-18T16:14:57Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,16 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =\n+    protected final BooleanParameter requireValidFileBuilder =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNjQ3NA==", "bodyText": "maybe also define the name as reusable constant or a placeholder parameter as was there before.", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526216474", "createdAt": "2020-11-18T16:15:40Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,16 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =\n+    protected final BooleanParameter requireValidFileBuilder =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ=="}, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0MTc1NA==", "bodyText": "Added a shared name. Builder removed completely as this is handled internally by this class.", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526241754", "createdAt": "2020-11-18T16:48:16Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,16 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =\n+    protected final BooleanParameter requireValidFileBuilder =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNTkyNQ=="}, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTI5MzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoxNzoyMVrOH11yAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjo0ODo0MFrOH13RAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNzcyOQ==", "bodyText": "provide a factory method and or the name as shared constant.\nmaybe also prevent a lookup in the string list for when reading the parameter as the verification is done before and the value can be assumed to be correct. in other words a SelectStringParameter should behave like a StringParameter when it comes to reading the value from the job...", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526217729", "createdAt": "2020-11-18T16:17:21Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -31,9 +30,9 @@\n  */\n public abstract class XMLImportJob extends FileImportJob {\n \n-    public static final Parameter<String> XSD_SCHEMA_PARAMETER =\n+    protected static final SelectStringParameter XSD_SCHEMA_PARAMETER_BUILDER =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI0MjA1MQ==", "bodyText": "Builder delivered by static method.", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526242051", "createdAt": "2020-11-18T16:48:40Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -31,9 +30,9 @@\n  */\n public abstract class XMLImportJob extends FileImportJob {\n \n-    public static final Parameter<String> XSD_SCHEMA_PARAMETER =\n+    protected static final SelectStringParameter XSD_SCHEMA_PARAMETER_BUILDER =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxNzcyOQ=="}, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5OTI5NzczOnYy", "diffSide": "LEFT", "path": "src/main/java/sirius/biz/jobs/params/ParameterBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoxODoxOVrOH110wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNjoxODoxOVrOH110wQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjIxODQzMw==", "bodyText": "i think its better to share the name as a constant than sharing a mutable builder - as this is very easy to get wrong...(modify global state unintentionally)", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526218433", "createdAt": "2020-11-18T16:18:19Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/params/ParameterBuilder.java", "diffHunk": "@@ -261,7 +261,7 @@ protected V require(Map<String, String> context) {\n      *\n      * @return the name of the parameter\n      */\n-    protected String getName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "881a745c0d9213059f4c080d8c10189748355642"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjc5NzIxOnYy", "diffSide": "LEFT", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0MDoxNlrOH2W3-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0MzozOFrOH2XAsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1OTkyOA==", "bodyText": "why not keep this parameter this is a simple boolean and commonly needs no customization..", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526759928", "createdAt": "2020-11-19T10:40:16Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,15 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abe7f48e7de831aa3832928d128ba1a3604976c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjE2MA==", "bodyText": "parameter still exist, just the scope changes. It's created in L28 if xsd paths were provided.\n\n  \n    \n      sirius-biz/src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java\n    \n    \n         Line 28\n      in\n      d66daa6\n    \n    \n    \n    \n\n        \n          \n           Parameter<Boolean> validFileParameter = new BooleanParameter(VALID_FILE_PARAMETER_NAME,", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762160", "createdAt": "2020-11-19T10:43:38Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLExportJobFactory.java", "diffHunk": "@@ -20,16 +20,15 @@\n  */\n public abstract class XMLExportJobFactory extends FileExportJobFactory {\n \n-    protected final Parameter<Boolean> requireValidFile =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc1OTkyOA=="}, "originalCommit": {"oid": "2abe7f48e7de831aa3832928d128ba1a3604976c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjgxMTI3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0MzozN1rOH2XAmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0MzozN1rOH2XAmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjEzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {\n          \n          \n            \n                        for (Consumer<BiConsumer<String, NodeHandler>> processingStage : fetchStages()) {", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762137", "createdAt": "2020-11-19T10:43:37Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -47,14 +49,21 @@\n      */\n     protected XMLImportJob(ProcessContext process) {\n         super(process);\n-        validationXsdPath = process.getParameter(XSD_SCHEMA_PARAMETER).orElse(null);\n+        validationXsdPath = process.get(XSD_SCHEMA_PARAMETER_NAME).asString();\n+    }\n+\n+    protected static SelectStringParameter createSchemaParameter() {\n+        return new SelectStringParameter(XSD_SCHEMA_PARAMETER_NAME, \"$XMLImportJobFactory.xsdSchema\").withDescription(\n+                \"$XMLImportJobFactory.xsdSchema.help\");\n     }\n \n     @Override\n     protected void executeForStream(String filename, Producer<InputStream> inputSupplier) throws Exception {\n         if (isValid(inputSupplier)) {\n-            try (InputStream inputStream = inputSupplier.create()) {\n-                executeForValidStream(inputStream);\n+            for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abe7f48e7de831aa3832928d128ba1a3604976c"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMjgxMjI0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0Mzo1M1rOH2XBNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxMDo0Mzo1M1rOH2XBNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjc2MjI5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                executeForValidStream(inputStream, handlerConsumer);\n          \n          \n            \n                                executeProcessingStage(inputStream, stage);", "url": "https://github.com/scireum/sirius-biz/pull/913#discussion_r526762295", "createdAt": "2020-11-19T10:43:53Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jobs/batch/file/XMLImportJob.java", "diffHunk": "@@ -47,14 +49,21 @@\n      */\n     protected XMLImportJob(ProcessContext process) {\n         super(process);\n-        validationXsdPath = process.getParameter(XSD_SCHEMA_PARAMETER).orElse(null);\n+        validationXsdPath = process.get(XSD_SCHEMA_PARAMETER_NAME).asString();\n+    }\n+\n+    protected static SelectStringParameter createSchemaParameter() {\n+        return new SelectStringParameter(XSD_SCHEMA_PARAMETER_NAME, \"$XMLImportJobFactory.xsdSchema\").withDescription(\n+                \"$XMLImportJobFactory.xsdSchema.help\");\n     }\n \n     @Override\n     protected void executeForStream(String filename, Producer<InputStream> inputSupplier) throws Exception {\n         if (isValid(inputSupplier)) {\n-            try (InputStream inputStream = inputSupplier.create()) {\n-                executeForValidStream(inputStream);\n+            for (Consumer<BiConsumer<String, NodeHandler>> handlerConsumer : fetchHandlersList()) {\n+                try (InputStream inputStream = inputSupplier.create()) {\n+                    executeForValidStream(inputStream, handlerConsumer);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2abe7f48e7de831aa3832928d128ba1a3604976c"}, "originalPosition": 57}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1851, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}