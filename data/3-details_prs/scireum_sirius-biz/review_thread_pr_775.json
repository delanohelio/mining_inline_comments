{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNjgwNjg2", "number": 775, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzoyNzowM1rOEFa06A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyNDoxNFrOEFb-8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTE3ODY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/UserAccountController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzoyNzowM1rOGjmKYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwNzoyNzowM1rOGjmKYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTk3ODU5Mw==", "bodyText": "--> Tenants.java dann muss man das nicht \u00fcberall nachimplementieren", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r439978593", "createdAt": "2020-06-15T07:27:03Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/tenants/UserAccountController.java", "diffHunk": "@@ -119,6 +125,14 @@ public void accounts(WebContext webContext) {\n         webContext.respondWith().template(\"/templates/biz/tenants/user-accounts.html.pasta\", accounts, getUserClass());\n     }\n \n+    protected void assertProperUserManagementPermission() {\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            assertPermission(PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            assertPermission(PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31b5e47b033f999bded0e3f69084b5c9fc8cd5dc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTM2Njg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyMzo1MVrOGjoAAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyMzo1MVrOGjoAAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODcwNw==", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008707", "createdAt": "2020-06-15T08:23:51Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountExportJobFactory.java", "diffHunk": "@@ -10,27 +10,43 @@\n \n import sirius.biz.jobs.JobFactory;\n import sirius.biz.jobs.batch.file.EntityExportJobFactory;\n+import sirius.biz.tenants.Tenant;\n import sirius.biz.tenants.UserAccountController;\n import sirius.db.jdbc.SmartQuery;\n+import sirius.kernel.di.std.Part;\n import sirius.kernel.di.std.Register;\n import sirius.web.http.QueryString;\n import sirius.web.security.Permission;\n+import sirius.web.security.UserContext;\n+import sirius.web.security.UserInfo;\n \n import javax.annotation.Nonnull;\n \n /**\n  * Provides an export for {@link SQLUserAccount user accounts}.\n  */\n @Register(classes = JobFactory.class, framework = SQLTenants.FRAMEWORK_TENANTS_JDBC)\n-@Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class SQLUserAccountExportJobFactory extends EntityExportJobFactory<SQLUserAccount, SmartQuery<SQLUserAccount>> {\n \n+    @Part\n+    private SQLTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"export-sql-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85c28443fad760dd6752b6ba4dd6fc02e027c79e"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTM2NzI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyMzo1OVrOGjoARg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyMzo1OVrOGjoARg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODc3NA==", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008774", "createdAt": "2020-06-15T08:23:59Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/tenants/jdbc/SQLUserAccountImportJobFactory.java", "diffHunk": "@@ -25,12 +29,25 @@\n @Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class SQLUserAccountImportJobFactory extends EntityImportJobFactory {\n \n+    @Part\n+    private SQLTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"import-sql-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85c28443fad760dd6752b6ba4dd6fc02e027c79e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTM2NzY0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyNDowNlrOGjoAiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyNDowNlrOGjoAiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODg0Mw==", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008843", "createdAt": "2020-06-15T08:24:06Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountExportJobFactory.java", "diffHunk": "@@ -10,28 +10,45 @@\n \n import sirius.biz.jobs.JobFactory;\n import sirius.biz.jobs.batch.file.EntityExportJobFactory;\n+import sirius.biz.tenants.Tenant;\n import sirius.biz.tenants.UserAccountController;\n import sirius.db.mongo.MongoQuery;\n+import sirius.kernel.di.std.Part;\n import sirius.kernel.di.std.Register;\n import sirius.web.http.QueryString;\n import sirius.web.security.Permission;\n+import sirius.web.security.UserContext;\n+import sirius.web.security.UserInfo;\n \n import javax.annotation.Nonnull;\n \n /**\n  * Provides an export for {@link MongoUserAccount user accounts}.\n  */\n @Register(classes = JobFactory.class, framework = MongoTenants.FRAMEWORK_TENANTS_MONGO)\n-@Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class MongoUserAccountExportJobFactory\n         extends EntityExportJobFactory<MongoUserAccount, MongoQuery<MongoUserAccount>> {\n \n+    @Part\n+    private MongoTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"export-mongo-user-accounts\";\n     }\n \n+\n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85c28443fad760dd6752b6ba4dd6fc02e027c79e"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTM2ODE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyNDoxNFrOGjoA3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODoyNDoxNFrOGjoA3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAwODkyNQ==", "bodyText": "UserAccountController.assertProperUserManagementPermission()", "url": "https://github.com/scireum/sirius-biz/pull/775#discussion_r440008925", "createdAt": "2020-06-15T08:24:14Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/tenants/mongo/MongoUserAccountImportJobFactory.java", "diffHunk": "@@ -25,18 +29,30 @@\n @Permission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS)\n public class MongoUserAccountImportJobFactory extends EntityImportJobFactory {\n \n+    @Part\n+    private MongoTenants tenants;\n+\n     @Nonnull\n     @Override\n     public String getName() {\n         return \"import-mongo-user-accounts\";\n     }\n \n+    @Override\n+    protected void checkPermissions() {\n+        UserInfo currentUser = UserContext.getCurrentUser();\n+        if (tenants.getRequiredTenant().hasPermission(Tenant.PERMISSION_SYSTEM_TENANT)) {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_SYSTEM_USERS);\n+        } else {\n+            currentUser.assertPermission(UserAccountController.PERMISSION_MANAGE_USER_ACCOUNTS);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "85c28443fad760dd6752b6ba4dd6fc02e027c79e"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1917, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}