{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2MTUyOTcx", "number": 709, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDozM1rODtATkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDo0OFrODtAT7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTE3NTIxOnYy", "diffSide": "RIGHT", "path": "src/test/java/sirius/biz/importer/format/ValueCheckSpec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDozM1rOF-LNaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDozM1rOF-LNaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczOTY4OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    when: \"The check fails for an imput which is too long\"\n          \n          \n            \n                    when: \"The check fails for an input which is too long\"", "url": "https://github.com/scireum/sirius-biz/pull/709#discussion_r400739688", "createdAt": "2020-03-31T08:40:33Z", "author": {"login": "sabieber"}, "path": "src/test/java/sirius/biz/importer/format/ValueCheckSpec.groovy", "diffHunk": "@@ -65,4 +65,61 @@ class ValueCheckSpec extends BaseSpecification {\n         5         | 2     | \"123\"\n     }\n \n+    def \"LenghCheck works as expected\"() {\n+        when: \"Check with proper lengths work and perform an auto-trim\"\n+        new LengthCheck(5).perform(Value.of(\"     55555\"))\n+        new LengthCheck(5).perform(Value.of(\"55555\"))\n+        then:\n+        noExceptionThrown()\n+        when: \"Without trimming, the check fails appropriately\"\n+        new LengthCheck(5).checkUntrimmed().perform(Value.of(\"     55555\"))\n+        then:\n+        thrown(IllegalArgumentException)\n+        when: \"The check fails for an imput which is too long\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0724691b92d55ec5acb537da7c052ef3009330f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ4NTE3NjE1OnYy", "diffSide": "RIGHT", "path": "src/test/java/sirius/biz/importer/format/ValueCheckSpec.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDo0OFrOF-LOBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQwODo0MDo0OFrOF-LOBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDczOTg0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    when: \"Check detects a whitespace input (when trimmin is enabled)\"\n          \n          \n            \n                    when: \"Check detects a whitespace input (when trimming is enabled)\"", "url": "https://github.com/scireum/sirius-biz/pull/709#discussion_r400739847", "createdAt": "2020-03-31T08:40:48Z", "author": {"login": "sabieber"}, "path": "src/test/java/sirius/biz/importer/format/ValueCheckSpec.groovy", "diffHunk": "@@ -65,4 +65,61 @@ class ValueCheckSpec extends BaseSpecification {\n         5         | 2     | \"123\"\n     }\n \n+    def \"LenghCheck works as expected\"() {\n+        when: \"Check with proper lengths work and perform an auto-trim\"\n+        new LengthCheck(5).perform(Value.of(\"     55555\"))\n+        new LengthCheck(5).perform(Value.of(\"55555\"))\n+        then:\n+        noExceptionThrown()\n+        when: \"Without trimming, the check fails appropriately\"\n+        new LengthCheck(5).checkUntrimmed().perform(Value.of(\"     55555\"))\n+        then:\n+        thrown(IllegalArgumentException)\n+        when: \"The check fails for an imput which is too long\"\n+        new LengthCheck(5).checkUntrimmed().perform(Value.of(\"555555555\"))\n+        then:\n+        thrown(IllegalArgumentException)\n+    }\n+\n+    def \"RequiredCheck works as expected\"() {\n+        when: \"Check accepts values and whitespaces (when checking untrimmed)\"\n+        new RequiredCheck().perform(Value.of(\"55555\"))\n+        new RequiredCheck().checkUntrimmed().perform(Value.of(\"  \"))\n+        then:\n+        noExceptionThrown()\n+        when: \"Check detects an empty input\"\n+        new RequiredCheck().perform(Value.of(\"\"))\n+        then:\n+        thrown(IllegalArgumentException)\n+        when: \"Check detects a null input\"\n+        new RequiredCheck().perform(Value.EMPTY)\n+        then:\n+        thrown(IllegalArgumentException)\n+        when: \"Check detects a whitespace input (when trimmin is enabled)\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0724691b92d55ec5acb537da7c052ef3009330f"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2026, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}