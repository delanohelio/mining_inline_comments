{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3ODUwNzA3", "number": 688, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo0NToyOFrODh0f9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo0NDozNVrODiuoBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2Nzg5NzUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOTo0NToyOFrOFsxIxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNFQxNTo0NTowMVrOFtla6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw==", "bodyText": "why this intermediate step, couldn't we transform into a BiConsumer which accepts an entity and a StringBuilder or even BiConsumer<PrefixSearchableEntity, Consumer> and then invoke with (entity, this::addContentString) or the like", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382486727", "createdAt": "2020-02-21T09:45:28Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import sirius.db.mixing.properties.MultiLanguageStringProperty;\n+import sirius.db.mixing.types.StringList;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.di.transformers.Transformer;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Generates a {@link StringList} from the values of a {@link MultiLanguageStringProperty}.\n+ */\n+@Register\n+public class MultiLanguageStringPropertyTransformer\n+        implements Transformer<MultiLanguageStringProperty, PrefixSearchableContentSupplier> {\n+\n+    @Override\n+    public Class<MultiLanguageStringProperty> getSourceClass() {\n+        return MultiLanguageStringProperty.class;\n+    }\n+\n+    @Override\n+    public Class<PrefixSearchableContentSupplier> getTargetClass() {\n+        return PrefixSearchableContentSupplier.class;\n+    }\n+\n+    @Nullable\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public PrefixSearchableContentSupplier make(@Nonnull MultiLanguageStringProperty source) {\n+        return entity -> {\n+            StringList tokens = new StringList();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7aced99e32c7b0b41a7dd62d71536251d4356add"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NzExMA==", "bodyText": "or simply transform to String", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382487110", "createdAt": "2020-02-21T09:46:13Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import sirius.db.mixing.properties.MultiLanguageStringProperty;\n+import sirius.db.mixing.types.StringList;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.di.transformers.Transformer;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Generates a {@link StringList} from the values of a {@link MultiLanguageStringProperty}.\n+ */\n+@Register\n+public class MultiLanguageStringPropertyTransformer\n+        implements Transformer<MultiLanguageStringProperty, PrefixSearchableContentSupplier> {\n+\n+    @Override\n+    public Class<MultiLanguageStringProperty> getSourceClass() {\n+        return MultiLanguageStringProperty.class;\n+    }\n+\n+    @Override\n+    public Class<PrefixSearchableContentSupplier> getTargetClass() {\n+        return PrefixSearchableContentSupplier.class;\n+    }\n+\n+    @Nullable\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public PrefixSearchableContentSupplier make(@Nonnull MultiLanguageStringProperty source) {\n+        return entity -> {\n+            StringList tokens = new StringList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}, "originalCommit": {"oid": "7aced99e32c7b0b41a7dd62d71536251d4356add"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjU1NDA5Ng==", "bodyText": "We index not only the words, but the phrase as well (see test case)\nIndigo blue becomes: [\"indigo blue\", \"indigo\", \"blue\"]\nFor Multi-Language scenario we want each translation \"phrase\" to be processed independently and not only its loose words...", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r382554096", "createdAt": "2020-02-21T12:24:26Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import sirius.db.mixing.properties.MultiLanguageStringProperty;\n+import sirius.db.mixing.types.StringList;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.di.transformers.Transformer;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Generates a {@link StringList} from the values of a {@link MultiLanguageStringProperty}.\n+ */\n+@Register\n+public class MultiLanguageStringPropertyTransformer\n+        implements Transformer<MultiLanguageStringProperty, PrefixSearchableContentSupplier> {\n+\n+    @Override\n+    public Class<MultiLanguageStringProperty> getSourceClass() {\n+        return MultiLanguageStringProperty.class;\n+    }\n+\n+    @Override\n+    public Class<PrefixSearchableContentSupplier> getTargetClass() {\n+        return PrefixSearchableContentSupplier.class;\n+    }\n+\n+    @Nullable\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public PrefixSearchableContentSupplier make(@Nonnull MultiLanguageStringProperty source) {\n+        return entity -> {\n+            StringList tokens = new StringList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}, "originalCommit": {"oid": "7aced99e32c7b0b41a7dd62d71536251d4356add"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzM0MzMzOQ==", "bodyText": "Implemented as BiConsumer. Hopefully nailed it now \ud83d\ude2c", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r383343339", "createdAt": "2020-02-24T15:45:01Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/mongo/MultiLanguageStringPropertyTransformer.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import sirius.db.mixing.properties.MultiLanguageStringProperty;\n+import sirius.db.mixing.types.StringList;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.di.transformers.Transformer;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.Map;\n+\n+/**\n+ * Generates a {@link StringList} from the values of a {@link MultiLanguageStringProperty}.\n+ */\n+@Register\n+public class MultiLanguageStringPropertyTransformer\n+        implements Transformer<MultiLanguageStringProperty, PrefixSearchableContentSupplier> {\n+\n+    @Override\n+    public Class<MultiLanguageStringProperty> getSourceClass() {\n+        return MultiLanguageStringProperty.class;\n+    }\n+\n+    @Override\n+    public Class<PrefixSearchableContentSupplier> getTargetClass() {\n+        return PrefixSearchableContentSupplier.class;\n+    }\n+\n+    @Nullable\n+    @Override\n+    @SuppressWarnings(\"unchecked\")\n+    public PrefixSearchableContentSupplier make(@Nonnull MultiLanguageStringProperty source) {\n+        return entity -> {\n+            StringList tokens = new StringList();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ4NjcyNw=="}, "originalCommit": {"oid": "7aced99e32c7b0b41a7dd62d71536251d4356add"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM3NzQyMDg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/mongo/PrefixSearchableContentConsumer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo0NDozNVrOFuIv9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNDo0NDozNVrOFuIv9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MzkyMjE2Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<Object>> {\n          \n          \n            \n            public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<String>> {", "url": "https://github.com/scireum/sirius-biz/pull/688#discussion_r383922167", "createdAt": "2020-02-25T14:44:35Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/mongo/PrefixSearchableContentConsumer.java", "diffHunk": "@@ -0,0 +1,22 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.mongo;\n+\n+import java.util.function.BiConsumer;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Used as target class to transform {@link sirius.db.mixing.Property properties} into a {@link BiConsumer}.\n+ * <p>\n+ * The consumer takes the {@link PrefixSearchableEntity} containing the values to extract which are then\n+ * passed as the {@link Consumer} argument.\n+ */\n+public interface PrefixSearchableContentConsumer extends BiConsumer<PrefixSearchableEntity, Consumer<Object>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1bfce98195963628b0e3a14511dd4ee3525814b5"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2122, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}