{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NDE5ODE5", "number": 670, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTo0ODoxMVrODaOCMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTo0ODoxMVrODaOCMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4ODE5NTA3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/model/PermissionData.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTo0ODoxMVrOFhDIbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yM1QxNTo0ODoxMVrOFhDIbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDE5ODYzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * will most probably way more efficient.\n          \n          \n            \n                 * will most probably be way more efficient.", "url": "https://github.com/scireum/sirius-biz/pull/670#discussion_r370198637", "createdAt": "2020-01-23T15:48:11Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/model/PermissionData.java", "diffHunk": "@@ -82,6 +89,43 @@ public StringList getPermissions() {\n         return permissions;\n     }\n \n+    /**\n+     * Provides a helper to determine the effective set of permissions based on {@link #getPermissions()} and\n+     * {@link Permissions#copyAndApplyProfiles(Collection)}.\n+     * <p>\n+     * Note that the result of applying all profiles is cached within this entity and will not reflect\n+     * any changes to {@link #getPermissions()}.\n+     *\n+     * @return the effective set of permissions\n+     */\n+    public Set<String> getEffectivePermissions() {\n+        if (effectivePermissions == null) {\n+            effectivePermissions = Permissions.copyAndApplyProfiles(getPermissions().data());\n+        }\n+\n+        return Collections.unmodifiableSet(effectivePermissions);\n+    }\n+\n+    /**\n+     * Checks if the requested permission expression is satisfied by the permissions granted in\n+     * {@link #getPermissions()}.\n+     * <p>\n+     * Note that this uses {@link #getEffectivePermissions()} which applies all profiles to the granted permissions,\n+     * which will be cached in this entity and will not reflect changes to {@link #getPermissions()}.\n+     * <p>\n+     * Also note that this is a helper method for rare cases, a call to\n+     * {@link sirius.web.security.UserInfo#hasPermission(String)} should always be preferred (if appropriate) as this\n+     * will most probably way more efficient.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97c417504e1b352e96210ac24b821307ae97c6a2"}, "originalPosition": 55}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2107, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}