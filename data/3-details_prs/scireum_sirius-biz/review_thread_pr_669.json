{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1NDIzMTg0", "number": 669, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzoyMTo0MFrODZu8vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTo0MTozM1rODa7FOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzEwMjA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQwNzoyMTo0MFrOFgSeRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMDo1OTo1NFrOFgYKRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw==", "bodyText": "Do we need to make sure these file names are also Windows-compatible? If so, we should include a few more characters to the list.\n\nLinux/Unix: / (forward slash)\nWindows: < (less than) > (greater than) : (colon - sometimes works, but is actually NTFS Alternate Data Streams) \" (double quote) / (forward slash) \\ (backslash) | (vertical bar or pipe) ? ( question mark) * (asterisk)", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369401413", "createdAt": "2020-01-22T07:21:40Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -40,15 +42,44 @@ protected MutableVirtualFile() {\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n      *\n-     * @param parent the parent of the file\n-     * @param name   the name of the file\n+     * @see #create(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n      */\n     protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n         super(parent, name);\n     }\n \n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains '/'\n+     */\n+    public static MutableVirtualFile create(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any '/' chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replace('/', '_'));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da8fabf1528212c4bcc3de1b242b0cd5e00ded7f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5MDE3NQ==", "bodyText": "I think we only have to regard the SFTP restrictions for filenames", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369490175", "createdAt": "2020-01-22T10:50:17Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -40,15 +42,44 @@ protected MutableVirtualFile() {\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n      *\n-     * @param parent the parent of the file\n-     * @param name   the name of the file\n+     * @see #create(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n      */\n     protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n         super(parent, name);\n     }\n \n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains '/'\n+     */\n+    public static MutableVirtualFile create(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any '/' chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replace('/', '_'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw=="}, "originalCommit": {"oid": "da8fabf1528212c4bcc3de1b242b0cd5e00ded7f"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NDU5Nw==", "bodyText": "Maybe blocking some more restricted characters would be a sane approach and wouldn't hurt too much(?)\nhttps://en.wikipedia.org/wiki/Filename has a good table - and everythign except . and \" \" seems dangerous. Maybe we provide three methods one that crashes, one that replaces and one that accepts everything (while trusting the caller) to properly check and format the string(?)", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r369494597", "createdAt": "2020-01-22T10:59:54Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -40,15 +42,44 @@ protected MutableVirtualFile() {\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n      *\n-     * @param parent the parent of the file\n-     * @param name   the name of the file\n+     * @see #create(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n      */\n     protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n         super(parent, name);\n     }\n \n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains '/'\n+     */\n+    public static MutableVirtualFile create(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any '/' chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replace('/', '_'));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQwMTQxMw=="}, "originalCommit": {"oid": "da8fabf1528212c4bcc3de1b242b0cd5e00ded7f"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU2NjkxOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOToxNVrOFiHMMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOToxNVrOFiHMMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMzcxNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n          \n          \n            \n                 * @throws IllegalArgumentException if the given name is empty or contains an {@link #REGEX_ILLEGAL_FILE_CHARS illegal} char", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371313715", "createdAt": "2020-01-27T15:39:15Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "904c362498daba81db6501d121cd2ff6111d7fa6"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU2ODAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOTozMlrOFiHM4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOTozMlrOFiHM4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxMzg4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n          \n          \n            \n                 * Replaces any {@link #REGEX_ILLEGAL_FILE_CHARS illegal} chars in the given String and if the given String is empty, <tt>null</tt> is returned.", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371313889", "createdAt": "2020-01-27T15:39:32Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n      */\n-    public MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n-        super(parent, name);\n+    public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n+            throw new IllegalArgumentException(\"A filename must be filled and must not contain illegal charachters.\");\n+        }\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "904c362498daba81db6501d121cd2ff6111d7fa6"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU2OTE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOTo0OFrOFiHNhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTozOTo0OFrOFiHNhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxNDA1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * or {@link #safeCreate(VirtualFile, String)} to account for illegal characters.\n          \n          \n            \n                 * or {@link #safeCreate(VirtualFile, String)} to account for {@link #REGEX_ILLEGAL_FILE_CHARS illegal} characters.", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371314053", "createdAt": "2020-01-27T15:39:48Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";\n \n     protected MutableVirtualFile() {\n         super();\n     }\n \n     /**\n-     * Creates a new file with the given name.\n+     * Use the static factory methods to obtain a new instance.\n+     *\n+     * @see #checkedCreate(VirtualFile, String)\n+     * @see #safeCreate(VirtualFile, String)\n+     */\n+    protected MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        super(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n      *\n      * @param parent the parent of the file\n      * @param name   the name of the file\n+     * @return a new instance of this class\n+     * @throws IllegalArgumentException if the given name is empty or contains an illegal char\n      */\n-    public MutableVirtualFile(@Nonnull VirtualFile parent, @Nonnull String name) {\n-        super(parent, name);\n+    public static MutableVirtualFile checkedCreate(@Nonnull VirtualFile parent, @Nonnull String name) {\n+        if (Strings.isEmpty(name) || Pattern.compile(REGEX_ILLEGAL_FILE_CHARS).split(name).length > 1) {\n+            throw new IllegalArgumentException(\"A filename must be filled and must not contain illegal charachters.\");\n+        }\n+        return new MutableVirtualFile(parent, name);\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * Replaces any illegal chars in the given String and if the given String is empty, <tt>null</tt> is returned.\n+     *\n+     * @param parent the parent of the file\n+     * @param name   the name of the file\n+     * @return a new instance of this class\n+     */\n+    @Nullable\n+    public static MutableVirtualFile safeCreate(@Nonnull VirtualFile parent, @Nullable String name) {\n+        if (Strings.isEmpty(name)) {\n+            return null;\n+        }\n+        return new MutableVirtualFile(parent, name.replaceAll(REGEX_ILLEGAL_FILE_CHARS, \"_\"));\n+    }\n+\n+    /**\n+     * Creates a new file with the given name in the given directory.\n+     * <p>\n+     * This method should only be used if you know what you are doing. In most cases use either {@link #checkedCreate(VirtualFile, String)}\n+     * or {@link #safeCreate(VirtualFile, String)} to account for illegal characters.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "904c362498daba81db6501d121cd2ff6111d7fa6"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NTU3NTYwOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTo0MTozM1rOFiHRYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNTo0MTozM1rOFiHRYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTMxNTA0MQ==", "bodyText": "Add javadoc here and explain here these characters came from (e.g. link to https://en.wikipedia.org/wiki/Filename)", "url": "https://github.com/scireum/sirius-biz/pull/669#discussion_r371315041", "createdAt": "2020-01-27T15:41:33Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer3/MutableVirtualFile.java", "diffHunk": "@@ -34,19 +37,66 @@\n      * Provides a prediacte which is always <tt>false</tt>.\n      */\n     public static final Predicate<VirtualFile> CONSTANT_FALSE = ignored -> false;\n+    private static final String REGEX_ILLEGAL_FILE_CHARS = \"[/\\\\\\\\?%*:|\\\"<>]\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "904c362498daba81db6501d121cd2ff6111d7fa6"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2106, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}