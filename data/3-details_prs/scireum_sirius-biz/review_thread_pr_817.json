{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTAwODgy", "number": 817, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo1MToxMVrOEMI45A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo1MToxMVrOEMI45A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTY0MDA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNTo1MToxMVrOGuE6tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjowMTozNVrOGuFWrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2ODI0Ng==", "bodyText": "why not\n Blob blob = fetchOrCreateByPath(tenantId, path);\nblobByPathCache.put(key, blob);", "url": "https://github.com/scireum/sirius-biz/pull/817#discussion_r450968246", "createdAt": "2020-07-07T15:51:11Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -373,8 +373,13 @@ public Blob findOrCreateByPath(String tenantId, String path) {\n             throw new IllegalArgumentException(\"An empty path was provided!\");\n         }\n \n-        return blobByPathCache.get(determinePathCacheKey(tenantId, path),\n-                                   ignored -> fetchOrCreateByPath(tenantId, path));\n+        String key = determinePathCacheKey(tenantId, path);\n+        Blob blob = blobByPathCache.get(key);\n+        if (blob == null) {\n+            blobByPathCache.remove(key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f0c3a9e3992336aa1479b6f18b934f44a0232b61"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2ODI4Ng==", "bodyText": "+-", "url": "https://github.com/scireum/sirius-biz/pull/817#discussion_r450968286", "createdAt": "2020-07-07T15:51:17Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -373,8 +373,13 @@ public Blob findOrCreateByPath(String tenantId, String path) {\n             throw new IllegalArgumentException(\"An empty path was provided!\");\n         }\n \n-        return blobByPathCache.get(determinePathCacheKey(tenantId, path),\n-                                   ignored -> fetchOrCreateByPath(tenantId, path));\n+        String key = determinePathCacheKey(tenantId, path);\n+        Blob blob = blobByPathCache.get(key);\n+        if (blob == null) {\n+            blobByPathCache.remove(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2ODI0Ng=="}, "originalCommit": {"oid": "f0c3a9e3992336aa1479b6f18b934f44a0232b61"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk3NTQwNw==", "bodyText": "Unfortunately put won't sync a coherent cache", "url": "https://github.com/scireum/sirius-biz/pull/817#discussion_r450975407", "createdAt": "2020-07-07T16:01:35Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -373,8 +373,13 @@ public Blob findOrCreateByPath(String tenantId, String path) {\n             throw new IllegalArgumentException(\"An empty path was provided!\");\n         }\n \n-        return blobByPathCache.get(determinePathCacheKey(tenantId, path),\n-                                   ignored -> fetchOrCreateByPath(tenantId, path));\n+        String key = determinePathCacheKey(tenantId, path);\n+        Blob blob = blobByPathCache.get(key);\n+        if (blob == null) {\n+            blobByPathCache.remove(key);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk2ODI0Ng=="}, "originalCommit": {"oid": "f0c3a9e3992336aa1479b6f18b934f44a0232b61"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1966, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}