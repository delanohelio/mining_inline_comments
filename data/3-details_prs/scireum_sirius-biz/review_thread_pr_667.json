{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY1Mjg5MDk4", "number": 667, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTowMjozOFrODZyq7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTowMjozOFrODZyq7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI4MzcxMTgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMTowMjozOFrOFgYO4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yMlQxMjozNToyOVrOFgak5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NTc3Nw==", "bodyText": "couldn't we then kill iterate and iterateAll as these as 100% redundant to query.iteratAll etc...", "url": "https://github.com/scireum/sirius-biz/pull/667#discussion_r369495777", "createdAt": "2020-01-22T11:02:38Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -392,6 +388,19 @@ public void iterateAllTotalItems(Consumer<E> consumer) {\n         });\n     }\n \n+    /**\n+     * Returns the underlying query for this page helper including all given facets.\n+     *\n+     * @return the {@link Query} object\n+     */\n+    public Q buildUnderlyingQuery() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd3e818de0ede497cb3bd675a6a2b6e8b5962f2f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTUzNDE4MA==", "bodyText": "Sound logical. Will rip'em off...", "url": "https://github.com/scireum/sirius-biz/pull/667#discussion_r369534180", "createdAt": "2020-01-22T12:35:29Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -392,6 +388,19 @@ public void iterateAllTotalItems(Consumer<E> consumer) {\n         });\n     }\n \n+    /**\n+     * Returns the underlying query for this page helper including all given facets.\n+     *\n+     * @return the {@link Query} object\n+     */\n+    public Q buildUnderlyingQuery() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2OTQ5NTc3Nw=="}, "originalCommit": {"oid": "bd3e818de0ede497cb3bd675a6a2b6e8b5962f2f"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2099, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}