{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNjg1NDI0", "number": 943, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODoxNTo0MVrOFGlGCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODoxNTo0MVrOFGlGCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNDQzNTI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODoxNTo0MVrOIHpi0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwODoyMDo0NFrOIHpucQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTYwMA==", "bodyText": "Is this enough added precision for now or do we want to track download, conversion and upload duration separately right away?", "url": "https://github.com/scireum/sirius-biz/pull/943#discussion_r544891600", "createdAt": "2020-12-17T08:15:41Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -1408,12 +1407,14 @@ private V awaitConversionResultAndRetryToFindVariant(B blob, String variantName,\n      * @param variant the variant to generate\n      */\n     private void invokeConversionPipelineAsync(B blob, V variant) {\n-        Watch watch = Watch.start();\n-        conversionEngine.performConversion(blob, variant.getVariantName()).onSuccess(handle -> {\n-            try (FileHandle automaticHandle = handle) {\n+        conversionEngine.performConversion(blob, variant.getVariantName()).onSuccess(handleAndWatch -> {\n+            try (FileHandle automaticHandle = handleAndWatch.getFirst()) {\n                 String physicalKey = keyGenerator.generateId();\n                 getPhysicalSpace().upload(physicalKey, automaticHandle.getFile());\n-                markConversionSuccess(variant, physicalKey, automaticHandle.getFile().length(), watch.elapsedMillis());\n+                markConversionSuccess(variant,\n+                                      physicalKey,\n+                                      automaticHandle.getFile().length(),\n+                                      handleAndWatch.getSecond().elapsedMillis());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f67da9919acdb64a1f2a889935c46eb91c87006"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5NDU3Nw==", "bodyText": "Well we could add a 2nd measurement for the \"overall time\" - this would als include the queuing time...", "url": "https://github.com/scireum/sirius-biz/pull/943#discussion_r544894577", "createdAt": "2020-12-17T08:20:44Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer2/BasicBlobStorageSpace.java", "diffHunk": "@@ -1408,12 +1407,14 @@ private V awaitConversionResultAndRetryToFindVariant(B blob, String variantName,\n      * @param variant the variant to generate\n      */\n     private void invokeConversionPipelineAsync(B blob, V variant) {\n-        Watch watch = Watch.start();\n-        conversionEngine.performConversion(blob, variant.getVariantName()).onSuccess(handle -> {\n-            try (FileHandle automaticHandle = handle) {\n+        conversionEngine.performConversion(blob, variant.getVariantName()).onSuccess(handleAndWatch -> {\n+            try (FileHandle automaticHandle = handleAndWatch.getFirst()) {\n                 String physicalKey = keyGenerator.generateId();\n                 getPhysicalSpace().upload(physicalKey, automaticHandle.getFile());\n-                markConversionSuccess(variant, physicalKey, automaticHandle.getFile().length(), watch.elapsedMillis());\n+                markConversionSuccess(variant,\n+                                      physicalKey,\n+                                      automaticHandle.getFile().length(),\n+                                      handleAndWatch.getSecond().elapsedMillis());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDg5MTYwMA=="}, "originalCommit": {"oid": "4f67da9919acdb64a1f2a889935c46eb91c87006"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1883, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}