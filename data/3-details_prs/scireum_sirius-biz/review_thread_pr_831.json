{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2NzM0Njcx", "number": 831, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMTozMzoxMlrOESI8dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTozNTowM1rOESLX5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDU2Mzc1OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMTozMzoxMlrOG3LpMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxMTozMzoxMlrOG3LpMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDUxNTYzNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * This is a Clickhouse database and the given query is automatically marked as potentiall long running to\n          \n          \n            \n                 * This is a Clickhouse database and the given query is automatically marked as potentially long running to", "url": "https://github.com/scireum/sirius-biz/pull/831#discussion_r460515634", "createdAt": "2020-07-26T11:33:12Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "diffHunk": "@@ -135,6 +136,27 @@ public Database getDatabase() {\n         return database;\n     }\n \n+    /**\n+     * Directly creates a new quey on the datastore used for events.\n+     * <p>\n+     * This is a Clickhouse database and the given query is automatically marked as potentiall long running to", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "22c8de1cf5401c32a22de77dd3620d790bee86d7"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk2MDgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTozNDoxMVrOG3OpDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTozNDoxMVrOG3OpDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDc1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * Directly creates a new quey on the datastore used for events.\n          \n          \n            \n                 * Directly creates a new query on the datastore used for events.", "url": "https://github.com/scireum/sirius-biz/pull/831#discussion_r460564750", "createdAt": "2020-07-26T19:34:11Z", "author": {"login": "bwiedmann"}, "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "diffHunk": "@@ -135,6 +136,27 @@ public Database getDatabase() {\n         return database;\n     }\n \n+    /**\n+     * Directly creates a new quey on the datastore used for events.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a85d80f2263f40b9cdbbb229e62d94db611a78"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3NDk2MTY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNlQxOTozNTowM1rOG3OpcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwNTo1OTowNFrOG3Um8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDg0OA==", "bodyText": "Codestyle?", "url": "https://github.com/scireum/sirius-biz/pull/831#discussion_r460564848", "createdAt": "2020-07-26T19:35:03Z", "author": {"login": "bwiedmann"}, "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "diffHunk": "@@ -135,6 +136,27 @@ public Database getDatabase() {\n         return database;\n     }\n \n+    /**\n+     * Directly creates a new quey on the datastore used for events.\n+     * <p>\n+     * This is a Clickhouse database and the given query is automatically marked as potentially long running to\n+     * suppress warnings if the query takes longer than a usual SQL query (which is kind of expected for large\n+     * data warehouses).\n+     *\n+     * @param sql the SQL to execute. Note that this should be a constant string as parameters can later be passed in\n+     *            using {@link SQLQuery#set(String, Object)}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "64a85d80f2263f40b9cdbbb229e62d94db611a78"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDY2MjUxMg==", "bodyText": "Einr\u00fcckung passt hier glaub", "url": "https://github.com/scireum/sirius-biz/pull/831#discussion_r460662512", "createdAt": "2020-07-27T05:59:04Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/analytics/events/EventRecorder.java", "diffHunk": "@@ -135,6 +136,27 @@ public Database getDatabase() {\n         return database;\n     }\n \n+    /**\n+     * Directly creates a new quey on the datastore used for events.\n+     * <p>\n+     * This is a Clickhouse database and the given query is automatically marked as potentially long running to\n+     * suppress warnings if the query takes longer than a usual SQL query (which is kind of expected for large\n+     * data warehouses).\n+     *\n+     * @param sql the SQL to execute. Note that this should be a constant string as parameters can later be passed in\n+     *            using {@link SQLQuery#set(String, Object)}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDU2NDg0OA=="}, "originalCommit": {"oid": "64a85d80f2263f40b9cdbbb229e62d94db611a78"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1989, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}