{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NDU2MDYx", "number": 815, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDozODoxN1rOEMG6cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDozODoxN1rOEMG6cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTMxNjM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDozODoxN1rOGuBsbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNjozNDo0N1rOGuaAvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw==", "bodyText": ".flatMap(row -> row.getValue(\"numberOfDays\")).asOptionalInt()).orElse(0);", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r450915437", "createdAt": "2020-07-07T14:38:17Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java", "diffHunk": "@@ -70,29 +70,30 @@\n     @Override\n     public void compute(LocalDate date, U entity) throws Exception {\n         LocalDate lowerLimit = date.minusDays(observationPeriodDays);\n-        int numberOfActiveDays = eventRecorder.getDatabase()\n-                                              .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n-                                                           + \" FROM useractivityevent\"\n-                                                           + \" WHERE userData_userId = ${userId}\"\n-                                                           + \"   AND eventDate > ${lowerLimit}\"\n-                                                           + \"   AND eventDate <= ${upperLimit}\")\n-                                              .set(\"userId\", entity.getUniqueName())\n-                                              .set(\"lowerLimit\", lowerLimit)\n-                                              .set(\"upperLimit\", date)\n-                                              .queryFirst()\n-                                              .getValue(\"numberOfDays\")\n-                                              .asInt(0);\n+        eventRecorder.getDatabase()\n+                     .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n+                                  + \" FROM useractivityevent\"\n+                                  + \" WHERE userData_userId = ${userId}\"\n+                                  + \"   AND eventDate > ${lowerLimit}\"\n+                                  + \"   AND eventDate <= ${upperLimit}\")\n+                     .set(\"userId\", entity.getUniqueName())\n+                     .set(\"lowerLimit\", lowerLimit)\n+                     .set(\"upperLimit\", date)\n+                     .first()\n+                     .ifPresent(row -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "476affcfa17d928e20bc54bf50ade8c551fe42fa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTc1Ng==", "bodyText": "sonst wirds nie auf 0 / false gesetzt", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r450915756", "createdAt": "2020-07-07T14:38:43Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java", "diffHunk": "@@ -70,29 +70,30 @@\n     @Override\n     public void compute(LocalDate date, U entity) throws Exception {\n         LocalDate lowerLimit = date.minusDays(observationPeriodDays);\n-        int numberOfActiveDays = eventRecorder.getDatabase()\n-                                              .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n-                                                           + \" FROM useractivityevent\"\n-                                                           + \" WHERE userData_userId = ${userId}\"\n-                                                           + \"   AND eventDate > ${lowerLimit}\"\n-                                                           + \"   AND eventDate <= ${upperLimit}\")\n-                                              .set(\"userId\", entity.getUniqueName())\n-                                              .set(\"lowerLimit\", lowerLimit)\n-                                              .set(\"upperLimit\", date)\n-                                              .queryFirst()\n-                                              .getValue(\"numberOfDays\")\n-                                              .asInt(0);\n+        eventRecorder.getDatabase()\n+                     .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n+                                  + \" FROM useractivityevent\"\n+                                  + \" WHERE userData_userId = ${userId}\"\n+                                  + \"   AND eventDate > ${lowerLimit}\"\n+                                  + \"   AND eventDate <= ${upperLimit}\")\n+                     .set(\"userId\", entity.getUniqueName())\n+                     .set(\"lowerLimit\", lowerLimit)\n+                     .set(\"upperLimit\", date)\n+                     .first()\n+                     .ifPresent(row -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw=="}, "originalCommit": {"oid": "476affcfa17d928e20bc54bf50ade8c551fe42fa"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMxMzg1NQ==", "bodyText": "Danke sch\u00f6n. Ist korrigiert.", "url": "https://github.com/scireum/sirius-biz/pull/815#discussion_r451313855", "createdAt": "2020-07-08T06:34:47Z", "author": {"login": "marvinwoop"}, "path": "src/main/java/sirius/biz/tenants/UserAccountActivityMetricComputer.java", "diffHunk": "@@ -70,29 +70,30 @@\n     @Override\n     public void compute(LocalDate date, U entity) throws Exception {\n         LocalDate lowerLimit = date.minusDays(observationPeriodDays);\n-        int numberOfActiveDays = eventRecorder.getDatabase()\n-                                              .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n-                                                           + \" FROM useractivityevent\"\n-                                                           + \" WHERE userData_userId = ${userId}\"\n-                                                           + \"   AND eventDate > ${lowerLimit}\"\n-                                                           + \"   AND eventDate <= ${upperLimit}\")\n-                                              .set(\"userId\", entity.getUniqueName())\n-                                              .set(\"lowerLimit\", lowerLimit)\n-                                              .set(\"upperLimit\", date)\n-                                              .queryFirst()\n-                                              .getValue(\"numberOfDays\")\n-                                              .asInt(0);\n+        eventRecorder.getDatabase()\n+                     .createQuery(\"SELECT COUNT(DISTINCT eventDate) AS numberOfDays\"\n+                                  + \" FROM useractivityevent\"\n+                                  + \" WHERE userData_userId = ${userId}\"\n+                                  + \"   AND eventDate > ${lowerLimit}\"\n+                                  + \"   AND eventDate <= ${upperLimit}\")\n+                     .set(\"userId\", entity.getUniqueName())\n+                     .set(\"lowerLimit\", lowerLimit)\n+                     .set(\"upperLimit\", date)\n+                     .first()\n+                     .ifPresent(row -> {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkxNTQzNw=="}, "originalCommit": {"oid": "476affcfa17d928e20bc54bf50ade8c551fe42fa"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1963, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}