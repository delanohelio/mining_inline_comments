{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwMTcxMDk2", "number": 933, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MDo1M1rOE_DfoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MTozMFrOE_DhXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTUyOTkzOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/util/ArchiveExtractor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MDo1M1rOH8iyFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MDo1M1rOH8iyFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0NjQ4Ng==", "bodyText": "i'd remove this error handling here? (as it presumes createHandled)", "url": "https://github.com/scireum/sirius-biz/pull/933#discussion_r533246486", "createdAt": "2020-12-01T09:50:53Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/util/ArchiveExtractor.java", "diffHunk": "@@ -257,9 +257,16 @@ private void extractZipEntriesFromZipFile(Predicate<String> filter,\n \n             if (!entry.isDirectory() && filter.test(entry.getName())) {\n                 Amount progress = Amount.of(numberOfFiles).divideBy(Amount.of(zipFile.size()));\n-                boolean shouldContinue = extractedFileConsumer.apply(new ExtractedZipFile(entry,\n-                                                                                          zipFile.getInputStream(entry),\n-                                                                                          progress));\n+                boolean shouldContinue = extractedFileConsumer.apply(new ExtractedZipFile(entry, () -> {\n+                    try {\n+                        return zipFile.getInputStream(entry);\n+                    } catch (IOException e) {\n+                        throw Exceptions.createHandled()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9205b38f137ae2433cbd84250122fba1c241f08e"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTUzMTAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/util/ExtractedZipFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MTowMlrOH8iyww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MTowMlrOH8iyww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0NjY1OQ==", "bodyText": "use a Provider here...", "url": "https://github.com/scireum/sirius-biz/pull/933#discussion_r533246659", "createdAt": "2020-12-01T09:51:02Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/util/ExtractedZipFile.java", "diffHunk": "@@ -25,18 +24,18 @@\n class ExtractedZipFile implements ExtractedFile {\n \n     private final ZipEntry entry;\n-    private final InputStream zipInputStream;\n+    private final Supplier<InputStream> inputStreamSupplier;\n     private final Amount progress;\n \n-    ExtractedZipFile(ZipEntry entry, InputStream zipInputStream, Amount progress) {\n+    ExtractedZipFile(ZipEntry entry, Supplier<InputStream> inputStreamSupplier, Amount progress) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9205b38f137ae2433cbd84250122fba1c241f08e"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM0NTUzNDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/util/ExtractedZipFile.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MTozMFrOH8i0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOTo1MTozMFrOH8i0yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI0NzE3Ng==", "bodyText": "catch and rethrow IOException catch and properly handle all other exceptions as .handled().", "url": "https://github.com/scireum/sirius-biz/pull/933#discussion_r533247176", "createdAt": "2020-12-01T09:51:30Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/util/ExtractedZipFile.java", "diffHunk": "@@ -25,18 +24,18 @@\n class ExtractedZipFile implements ExtractedFile {\n \n     private final ZipEntry entry;\n-    private final InputStream zipInputStream;\n+    private final Supplier<InputStream> inputStreamSupplier;\n     private final Amount progress;\n \n-    ExtractedZipFile(ZipEntry entry, InputStream zipInputStream, Amount progress) {\n+    ExtractedZipFile(ZipEntry entry, Supplier<InputStream> inputStreamSupplier, Amount progress) {\n         this.entry = entry;\n-        this.zipInputStream = zipInputStream;\n+        this.inputStreamSupplier = inputStreamSupplier;\n         this.progress = progress;\n     }\n \n     @Override\n     public InputStream openInputStream() throws IOException {\n-        return new CloseShieldInputStream(zipInputStream);\n+        return new CloseShieldInputStream(inputStreamSupplier.get());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9205b38f137ae2433cbd84250122fba1c241f08e"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1870, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}