{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NjU0NTcz", "number": 741, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxNjoyMVrOD80KPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxNjoyMVrOD80KPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1MDk1NzQwOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/importer/format/ImportDictionary.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxNjoyMVrOGV--Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxMDoxNjo1MVrOGV-_YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNTAzOA==", "bodyText": "Die Fehlermeldung passt nicht! Das alte alias wird ja ersetzt...", "url": "https://github.com/scireum/sirius-biz/pull/741#discussion_r425705038", "createdAt": "2020-05-15T10:16:21Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/importer/format/ImportDictionary.java", "diffHunk": "@@ -83,17 +83,24 @@ public ImportDictionary addField(FieldDefinition field) {\n \n         this.fields.put(field.getName(), field);\n \n-        for (String alias : field.getAliases()) {\n-            if (aliases.containsKey(alias)) {\n-                throw new IllegalArgumentException(Strings.apply(\"An alias named '%s' is already present!\", alias));\n-            }\n-\n-            aliases.put(alias, field.getName());\n-        }\n+        addCheckedAlias(field, field.getName());\n+        addCheckedAlias(field, field.getLabel());\n+        field.getAliases().forEach(alias -> addCheckedAlias(field, alias));\n \n         return this;\n     }\n \n+    private void addCheckedAlias(FieldDefinition field, String alias) {\n+        String previousField = aliases.put(normalize(alias), field.getName());\n+        if (Strings.isFilled(previousField) && !Strings.areEqual(field.getName(), previousField)) {\n+            throw new IllegalArgumentException(Strings.apply(\n+                    \"Cannot add alias '%s' for field '%s', as this alias already points to '%s'!\",\n+                    alias,\n+                    field.getName(),\n+                    previousField));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acc16219be3643447fed0b07bf3961721ab58116"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNTMxMw==", "bodyText": "also entweder putIfAbsent oder Fehlermeldung anpassen", "url": "https://github.com/scireum/sirius-biz/pull/741#discussion_r425705313", "createdAt": "2020-05-15T10:16:51Z", "author": {"login": "qw3ry"}, "path": "src/main/java/sirius/biz/importer/format/ImportDictionary.java", "diffHunk": "@@ -83,17 +83,24 @@ public ImportDictionary addField(FieldDefinition field) {\n \n         this.fields.put(field.getName(), field);\n \n-        for (String alias : field.getAliases()) {\n-            if (aliases.containsKey(alias)) {\n-                throw new IllegalArgumentException(Strings.apply(\"An alias named '%s' is already present!\", alias));\n-            }\n-\n-            aliases.put(alias, field.getName());\n-        }\n+        addCheckedAlias(field, field.getName());\n+        addCheckedAlias(field, field.getLabel());\n+        field.getAliases().forEach(alias -> addCheckedAlias(field, alias));\n \n         return this;\n     }\n \n+    private void addCheckedAlias(FieldDefinition field, String alias) {\n+        String previousField = aliases.put(normalize(alias), field.getName());\n+        if (Strings.isFilled(previousField) && !Strings.areEqual(field.getName(), previousField)) {\n+            throw new IllegalArgumentException(Strings.apply(\n+                    \"Cannot add alias '%s' for field '%s', as this alias already points to '%s'!\",\n+                    alias,\n+                    field.getName(),\n+                    previousField));\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTcwNTAzOA=="}, "originalCommit": {"oid": "acc16219be3643447fed0b07bf3961721ab58116"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2062, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}