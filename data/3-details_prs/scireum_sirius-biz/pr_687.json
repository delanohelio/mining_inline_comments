{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NjE3MjQ5", "number": 687, "title": "Backend Search of Mongo and ElasticSearch entities", "bodyText": "SIRI-170", "createdAt": "2020-02-20T08:27:45Z", "url": "https://github.com/scireum/sirius-biz/pull/687", "merged": true, "mergeCommit": {"oid": "5a9b9f5e4a5afbcc495290427f6222f3190998a3"}, "closed": true, "closedAt": "2020-02-21T11:54:46Z", "author": {"login": "fhaScireum"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGG1L0gH2gAyMzc3NjE3MjQ5OjJhNjlmMjNkNWY2ZmI1YzcwOGE1ODU1ODE5MTY0ZmU4MmU0OGY5MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcGeZhBgFqTM2MjU3OTI1MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2a69f23d5f6fb5c708a5855819164fe82e48f921", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/2a69f23d5f6fb5c708a5855819164fe82e48f921", "committedDate": "2020-02-20T08:27:09Z", "message": "Backend Search of Mongo and ElasticSearch entities\n\nSIRI-170"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/1d3bf02811f47e99042571b552e8abb2fa8570bc", "committedDate": "2020-02-20T09:32:15Z", "message": "Adds the page to the system menu and changes the routing from /system/db to /system/query\n\nSIRI-170"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYxNzY4MTQ3", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-361768147", "createdAt": "2020-02-20T09:57:37Z", "commit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyMDY0Njg3", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362064687", "createdAt": "2020-02-20T16:49:02Z", "commit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDU0Mzcx", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362454371", "createdAt": "2020-02-21T08:05:37Z", "commit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODowNTozN1rOFsuhJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODowNzozMVrOFsujtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0MzgxMw==", "bodyText": "Adjust javadoc as it now handles more than just mongo", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382443813", "createdAt": "2020-02-21T08:05:37Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/jdbc/MongoAndElasticDatabaseController.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jdbc;\n+\n+import com.alibaba.fastjson.JSON;\n+import sirius.biz.tenants.TenantUserManager;\n+import sirius.db.es.ElasticEntity;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Mixing;\n+import sirius.db.mixing.query.Query;\n+import sirius.db.mongo.MongoEntity;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.Counter;\n+import sirius.web.controller.AutocompleteHelper;\n+import sirius.web.controller.BasicController;\n+import sirius.web.controller.Controller;\n+import sirius.web.controller.Routed;\n+import sirius.web.http.WebContext;\n+import sirius.web.security.Permission;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides the management GUI for mongo database related activities.\n+ */\n+@Register(classes = Controller.class)\n+public class MongoAndElasticDatabaseController extends BasicController {\n+\n+    @Part\n+    private Mixing mixing;\n+\n+    /**\n+     * Executes the given mongo query and renders the UI.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NDQ2OA==", "bodyText": "As this would be more secure and easier to use than the SQL query tool, is there any reason not to include SQL Entities as well?", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382444468", "createdAt": "2020-02-21T08:07:31Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/jdbc/MongoAndElasticDatabaseController.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jdbc;\n+\n+import com.alibaba.fastjson.JSON;\n+import sirius.biz.tenants.TenantUserManager;\n+import sirius.db.es.ElasticEntity;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Mixing;\n+import sirius.db.mixing.query.Query;\n+import sirius.db.mongo.MongoEntity;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.Counter;\n+import sirius.web.controller.AutocompleteHelper;\n+import sirius.web.controller.BasicController;\n+import sirius.web.controller.Controller;\n+import sirius.web.controller.Routed;\n+import sirius.web.http.WebContext;\n+import sirius.web.security.Permission;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides the management GUI for mongo database related activities.\n+ */\n+@Register(classes = Controller.class)\n+public class MongoAndElasticDatabaseController extends BasicController {\n+\n+    @Part\n+    private Mixing mixing;\n+\n+    /**\n+     * Executes the given mongo query and renders the UI.\n+     *\n+     * @param webContext the context containing the query\n+     */\n+    @Permission(TenantUserManager.PERMISSION_SYSTEM_ADMINISTRATOR)\n+    @Routed(\"/system/query\")\n+    public void db(WebContext webContext) {\n+        String className = webContext.get(\"class\").asString();\n+        String queryString = webContext.get(\"query\").asString();\n+        int limit = webContext.get(\"limit\").asInt(10);\n+\n+        StringBuilder sourceBuilder = new StringBuilder();\n+        Counter counter = new Counter();\n+\n+        if (Strings.isFilled(className)) {\n+            EntityDescriptor descriptor = mixing.getDescriptor(className.toUpperCase());\n+            Class<? extends BaseEntity> type = descriptor.getType().asSubclass(BaseEntity.class);\n+            Query<?, ?, ?> query = descriptor.getMapper().select(type).queryString(queryString);\n+\n+            sourceBuilder.append(\"/* Number of results: \").append(query.count()).append(\" */\\n\\n\");\n+\n+            ((Query<?, ?, ?>) query.limit(limit)).iterateAll(entity -> addEntity(sourceBuilder, entity, counter));\n+        }\n+\n+        webContext.respondWith()\n+                  .template(\"/templates/biz/model/db.html.pasta\",\n+                            getAvailableEntityTypes(),\n+                            className,\n+                            queryString,\n+                            sourceBuilder.toString(),\n+                            limit);\n+    }\n+\n+    /**\n+     * Provides suggestions for available database entities based on the query.\n+     *\n+     * @param webContext the current web context containing the query\n+     */\n+    @Permission(TenantUserManager.PERMISSION_SYSTEM_ADMINISTRATOR)\n+    @Routed(\"/system/query/autocomplete\")\n+    public void entityTypeAutocomplete(WebContext webContext) {\n+        AutocompleteHelper.handle(webContext, ((query, result) -> {\n+            for (Class<?> type : getAvailableEntityTypes()) {\n+                String displayableName = getDisplayableName(type);\n+                if (displayableName.toLowerCase().contains(query.toLowerCase())) {\n+                    result.accept(new AutocompleteHelper.Completion(type.getSimpleName(), displayableName));\n+                }\n+            }\n+        }));\n+    }\n+\n+    private <E extends BaseEntity<?>> void addEntity(StringBuilder sourceBuilder, E entity, Counter counter) {\n+        sourceBuilder.append(\"/* \").append(counter.inc()).append(\" */\").append(\"\\n\");\n+\n+        Map<String, Object> properties = new TreeMap<>();\n+        mixing.getDescriptor(entity.getClass()).getProperties().forEach(property -> {\n+            String name = property.getName();\n+            Object value = property.getValue(entity);\n+\n+            properties.put(name, value);\n+        });\n+\n+        sourceBuilder.append(JSON.toJSONString(properties, true));\n+        sourceBuilder.append(\"\\n\\n\");\n+    }\n+\n+    private List<Class<?>> getAvailableEntityTypes() {\n+        return mixing.getDescriptors()\n+                     .stream()\n+                     .filter(descriptor -> MongoEntity.class.isAssignableFrom(descriptor.getType())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "originalPosition": 115}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDU3MDk3", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362457097", "createdAt": "2020-02-21T08:11:51Z", "commit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODoxMTo1MlrOFsupxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwODoxMTo1MlrOFsupxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ0NjAyMw==", "bodyText": "Adjust javadoc as it now handles more than just mongo", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382446023", "createdAt": "2020-02-21T08:11:52Z", "author": {"login": "meg1502"}, "path": "src/main/java/sirius/biz/jdbc/MongoAndElasticDatabaseController.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jdbc;\n+\n+import com.alibaba.fastjson.JSON;\n+import sirius.biz.tenants.TenantUserManager;\n+import sirius.db.es.ElasticEntity;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Mixing;\n+import sirius.db.mixing.query.Query;\n+import sirius.db.mongo.MongoEntity;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.Counter;\n+import sirius.web.controller.AutocompleteHelper;\n+import sirius.web.controller.BasicController;\n+import sirius.web.controller.Controller;\n+import sirius.web.controller.Routed;\n+import sirius.web.http.WebContext;\n+import sirius.web.security.Permission;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides the management GUI for mongo database related activities.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d3bf02811f47e99042571b552e8abb2fa8570bc"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/11bddc97763491061cfd8d7411502d80c6e04a62", "committedDate": "2020-02-21T09:03:51Z", "message": "Small javadoc changes.\n\nSIRI-170"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDg1MTIx", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362485121", "createdAt": "2020-02-21T09:06:45Z", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDg5OTA1", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362489905", "createdAt": "2020-02-21T09:15:03Z", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToxNTowM1rOFswOrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToxNTowM1rOFswOrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MTg1Mg==", "bodyText": "QueryController", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382471852", "createdAt": "2020-02-21T09:15:03Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jdbc/MongoAndElasticDatabaseController.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jdbc;\n+\n+import com.alibaba.fastjson.JSON;\n+import sirius.biz.tenants.TenantUserManager;\n+import sirius.db.es.ElasticEntity;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Mixing;\n+import sirius.db.mixing.query.Query;\n+import sirius.db.mongo.MongoEntity;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.Counter;\n+import sirius.web.controller.AutocompleteHelper;\n+import sirius.web.controller.BasicController;\n+import sirius.web.controller.Controller;\n+import sirius.web.controller.Routed;\n+import sirius.web.http.WebContext;\n+import sirius.web.security.Permission;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides the management GUI for MongoDB or ElasticSearch database related queries.\n+ */\n+@Register(classes = Controller.class)\n+public class MongoAndElasticDatabaseController extends BasicController {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDkwMjk4", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362490298", "createdAt": "2020-02-21T09:15:42Z", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToxNTo0M1rOFswP5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQwOToxNTo0M1rOFswP5g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjQ3MjE2Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Provides the management GUI for MongoDB or ElasticSearch database related queries.\n          \n          \n            \n             * Provides a query GUI for all entities managed by <tt>Mixing</tt>.", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382472166", "createdAt": "2020-02-21T09:15:43Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jdbc/MongoAndElasticDatabaseController.java", "diffHunk": "@@ -0,0 +1,141 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.jdbc;\n+\n+import com.alibaba.fastjson.JSON;\n+import sirius.biz.tenants.TenantUserManager;\n+import sirius.db.es.ElasticEntity;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Mixing;\n+import sirius.db.mixing.query.Query;\n+import sirius.db.mongo.MongoEntity;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.Counter;\n+import sirius.web.controller.AutocompleteHelper;\n+import sirius.web.controller.BasicController;\n+import sirius.web.controller.Controller;\n+import sirius.web.controller.Routed;\n+import sirius.web.http.WebContext;\n+import sirius.web.security.Permission;\n+\n+import java.util.Comparator;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.TreeMap;\n+import java.util.stream.Collectors;\n+\n+/**\n+ * Provides the management GUI for MongoDB or ElasticSearch database related queries.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNDkxODU4", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362491858", "createdAt": "2020-02-21T09:18:24Z", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b34dc77d42ed46c18a65a29de4b790de2a9b4d4d", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/b34dc77d42ed46c18a65a29de4b790de2a9b4d4d", "committedDate": "2020-02-21T09:54:17Z", "message": "Renames controller.\n\nSIRI-170"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTE1Njc0", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362515674", "createdAt": "2020-02-21T09:57:45Z", "commit": {"oid": "11bddc97763491061cfd8d7411502d80c6e04a62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTE1ODQ2", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362515846", "createdAt": "2020-02-21T09:58:04Z", "commit": {"oid": "b34dc77d42ed46c18a65a29de4b790de2a9b4d4d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "970d9eab69d8b2a1f4e6624266d1ff758e31b427", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/970d9eab69d8b2a1f4e6624266d1ff758e31b427", "committedDate": "2020-02-21T09:58:59Z", "message": "Renames the template.\n\nSIRI-170"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a52855616e8d26457394b3efbf940231ad533581", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/a52855616e8d26457394b3efbf940231ad533581", "committedDate": "2020-02-21T10:05:09Z", "message": "Small changes to the javadoc and page title.\n\nSIRI-170"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTIzNDAz", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362523403", "createdAt": "2020-02-21T10:10:46Z", "commit": {"oid": "a52855616e8d26457394b3efbf940231ad533581"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTIzNjU1", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362523655", "createdAt": "2020-02-21T10:11:13Z", "commit": {"oid": "a52855616e8d26457394b3efbf940231ad533581"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTMyMjk1", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362532295", "createdAt": "2020-02-21T10:25:54Z", "commit": {"oid": "a52855616e8d26457394b3efbf940231ad533581"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMDoyNTo1NFrOFsyTmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxMDoyNTo1NFrOFsyTmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjUwNTg4Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (e.keyCode === 13) {\n          \n          \n            \n                        if (e.keyCode === sirius.keys.KEY_ENTER) {", "url": "https://github.com/scireum/sirius-biz/pull/687#discussion_r382505883", "createdAt": "2020-02-21T10:25:54Z", "author": {"login": "tbiScireum"}, "path": "src/main/resources/default/templates/biz/model/query.html.pasta", "diffHunk": "@@ -0,0 +1,69 @@\n+<i:arg type=\"List\" name=\"selectableClasses\"/>\n+<i:arg type=\"String\" name=\"selectedClass\"/>\n+<i:arg type=\"String\" name=\"query\"/>\n+<i:arg type=\"String\" name=\"entitySource\" default=\"\"/>\n+<i:arg type=\"int\" name=\"limit\"/>\n+\n+<w:page title=\"Query Tool\">\n+    <i:block name=\"head\">\n+        <script src=\"/assets/wondergem/ace/ace.js\" type=\"text/javascript\"></script>\n+    </i:block>\n+\n+    <i:block name=\"breadcrumbs\">\n+        <li><a href=\"/system/query\">Query Tool</a></li>\n+    </i:block>\n+\n+    <w:pageHeader title=\"Query Tool\"/>\n+\n+    <div class=\"row\">\n+        <div class=\"col-md-12\">\n+            <w:editForm url=\"/system/query\">\n+                <div class=\"col-md-8\">\n+                    <label>\n+                        Query\n+                    </label>\n+                    <div class=\"input-group\">\n+                        <input type=\"text\" name=\"query\" class=\"form-control\" value=\"@query\" autofocus/>\n+                        <span class=\"input-group-addon\" onclick=\"$('#editForm').submit()\">\n+                            <i class=\"fa fa-search\"></i>\n+                        </span>\n+                    </div>\n+                </div>\n+                <w:autocompleteSingleSelect span=\"3\" name=\"class\" label=\"Entity Type\"\n+                                            serviceUri=\"/system/query/autocomplete\"\n+                                            required=\"true\">\n+                    <i:for var=\"clazz\" items=\"selectableClasses\" type=\"java.lang.Class\">\n+                        <option value=\"@clazz.getSimpleName()\"\n+                                @selected=\"selectedClass == clazz.getSimpleName()\">\n+                            @clazz.getSimpleName()\n+                        </option>\n+                    </i:for>\n+                </w:autocompleteSingleSelect>\n+                <div class=\"col-md-1\">\n+                    <label>\n+                        <span class=\"input-required\">\n+                            Limit\n+                        </span>\n+                    </label>\n+                    <div class=\"input-group\">\n+                        <input type=\"text\" name=\"limit\" class=\"form-control\" value=\"@limit\" autofocus/>\n+                    </div>\n+                </div>\n+            </w:editForm>\n+        </div>\n+        <div class=\"col-md-12\">\n+            <w:codeEditor readonly=\"true\" mode=\"json\" height=\"600\">@entitySource</w:codeEditor>\n+        </div>\n+    </div>\n+</w:page>\n+\n+<script type=\"text/javascript\">\n+    $(document).ready(function () {\n+        $('#editForm').keydown(function (e) {\n+            if (e.keyCode === 13) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a52855616e8d26457394b3efbf940231ad533581"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac13221c096dce05e8ae2b877ec158ab86b821be", "author": {"user": {"login": "fhaScireum", "name": "Florian H\u00e4fner"}}, "url": "https://github.com/scireum/sirius-biz/commit/ac13221c096dce05e8ae2b877ec158ab86b821be", "committedDate": "2020-02-21T10:30:28Z", "message": "Use sirius Framework to lookup pressed key.\n\nSIRI-170"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNTc5MjUw", "url": "https://github.com/scireum/sirius-biz/pull/687#pullrequestreview-362579250", "createdAt": "2020-02-21T11:54:39Z", "commit": {"oid": "ac13221c096dce05e8ae2b877ec158ab86b821be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4523, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}