{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2Njg3NzY4", "number": 727, "title": "SE-9561 save entity with unchanged blob", "bodyText": "Bugfix for an issue that happened on the dev-17.0.3 tag code base that is currently productive at Arge and will have to be patched outside of regular release cycle.\nCompares actual entities as entities mapped from DB were always handles as changed in the past.", "createdAt": "2020-04-21T13:50:17Z", "url": "https://github.com/scireum/sirius-biz/pull/727", "merged": true, "mergeCommit": {"oid": "561d5792ad966bdc5a545bbb224045a204e5fc69"}, "closed": true, "closedAt": "2020-04-29T06:52:43Z", "author": {"login": "mkeckmkeck"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcZwZNXAH2gAyNDA2Njg3NzY4OjVkODM3MzAxNDgxM2YyZWFlMmI0MGIzMWEyYWYyYzEzNGYyOTkzMWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcbwcFCgH2gAyNDA2Njg3NzY4OjU5MTU4NWU0Y2UxNTkzOWQ3MDY3MDJlZmEyZGM3NzEwMjE4ZTNiNGM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5d8373014813f2eae2b40b31a2af2c134f29931d", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/5d8373014813f2eae2b40b31a2af2c134f29931d", "committedDate": "2020-04-21T09:37:10Z", "message": "Create parent class for Blob*RefProperty classes\n\nFixes: SE-9561"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ed6fc6ad6b30b000e2f64a76b710cde48d6435", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/86ed6fc6ad6b30b000e2f64a76b710cde48d6435", "committedDate": "2020-04-21T09:50:56Z", "message": "Determine if blob has changed by comparing on entity\n\nFixes: SE-9561"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adc8cbc3fdc39e8b28230923da5af5126d6831a3", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/adc8cbc3fdc39e8b28230923da5af5126d6831a3", "committedDate": "2020-04-21T12:51:45Z", "message": "Remove old changed field and usages, add javadocs\n\nFixes: SE-9561"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/48ac972467dd6c5c96ec6fffab338b6f68b7a38b", "committedDate": "2020-04-21T13:34:32Z", "message": "Add testcase for bug verification\n\nFixes: SE-9561"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU0MDc3", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397354077", "createdAt": "2020-04-21T13:55:02Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NTowMlrOGJHCyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NTowMlrOGJHCyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwNTc2OA==", "bodyText": "oma.refresh oder or oma.findOrFail", "url": "https://github.com/scireum/sirius-biz/pull/727#discussion_r412205768", "createdAt": "2020-04-21T13:55:02Z", "author": {"login": "andyHa"}, "path": "src/test/java/sirius/biz/storage/layer2/BlobHardRefSpec.groovy", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer2\n+\n+import sirius.db.jdbc.OMA\n+import sirius.kernel.BaseSpecification\n+import sirius.kernel.di.std.Part\n+\n+class BlobHardRefSpec extends BaseSpecification {\n+\n+    @Part\n+    private static OMA oma;\n+\n+    @Part\n+    private static BlobStorage blobStorage;\n+\n+    def \"store entity with unchanged hard ref blob must not fail\"() {\n+        given:\n+        def testEntity = new BlobHardRefEntity()\n+        Blob blob = blobStorage.getSpace(\"blob-files\").createTemporaryBlob()\n+        testEntity.getTheBlobRef().setBlob(blob)\n+        oma.update(testEntity)\n+        when:\n+        def loadedEntity = oma.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU0ODI1", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397354825", "createdAt": "2020-04-21T13:55:50Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NTo1MFrOGJHFbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NTo1MFrOGJHFbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwNjQ0NA==", "bodyText": "protected or package visibility?", "url": "https://github.com/scireum/sirius-biz/pull/727#discussion_r412206444", "createdAt": "2020-04-21T13:55:50Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer2/BlobRefProperty.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer2;\n+\n+import sirius.db.jdbc.OMA;\n+import sirius.db.jdbc.schema.SQLPropertyInfo;\n+import sirius.db.jdbc.schema.Table;\n+import sirius.db.jdbc.schema.TableColumn;\n+import sirius.db.mixing.AccessPath;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Property;\n+import sirius.kernel.commons.Value;\n+import sirius.kernel.health.Exceptions;\n+\n+import javax.annotation.Nonnull;\n+import java.lang.reflect.Field;\n+import java.sql.Types;\n+\n+/**\n+ * Holder of common parts of blob reference property handling.\n+ * <p>\n+ * NOTE: This implementation assumes that BlobHardRef stays the parent class for all blob reference\n+ * property classes, which should be valid because hard and soft references should be enough.\n+ */\n+public abstract class BlobRefProperty extends Property implements SQLPropertyInfo {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU1NDY1", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397355465", "createdAt": "2020-04-21T13:56:29Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NjoyOVrOGJHHlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1NjoyOVrOGJHHlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwNjk5OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @return <tt>true</tt> if unchanged, else <tt>false</tt>\n          \n          \n            \n                 * @return <tt>true</tt> if changed, <tt>false</tt> otherwise", "url": "https://github.com/scireum/sirius-biz/pull/727#discussion_r412206998", "createdAt": "2020-04-21T13:56:29Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/storage/layer2/BlobRefProperty.java", "diffHunk": "@@ -0,0 +1,126 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer2;\n+\n+import sirius.db.jdbc.OMA;\n+import sirius.db.jdbc.schema.SQLPropertyInfo;\n+import sirius.db.jdbc.schema.Table;\n+import sirius.db.jdbc.schema.TableColumn;\n+import sirius.db.mixing.AccessPath;\n+import sirius.db.mixing.BaseEntity;\n+import sirius.db.mixing.EntityDescriptor;\n+import sirius.db.mixing.Property;\n+import sirius.kernel.commons.Value;\n+import sirius.kernel.health.Exceptions;\n+\n+import javax.annotation.Nonnull;\n+import java.lang.reflect.Field;\n+import java.sql.Types;\n+\n+/**\n+ * Holder of common parts of blob reference property handling.\n+ * <p>\n+ * NOTE: This implementation assumes that BlobHardRef stays the parent class for all blob reference\n+ * property classes, which should be valid because hard and soft references should be enough.\n+ */\n+public abstract class BlobRefProperty extends Property implements SQLPropertyInfo {\n+\n+    protected static final int DEFAULT_KEY_LENGTH = 64;\n+\n+    /**\n+     * Creates a new property for the given descriptor, access path and field.\n+     *\n+     * @param descriptor the descriptor which owns the property\n+     * @param accessPath the access path required to obtain the target object which contains the field\n+     * @param field      the field which stores the database value\n+     */\n+    protected BlobRefProperty(@Nonnull EntityDescriptor descriptor,\n+                              @Nonnull AccessPath accessPath,\n+                              @Nonnull Field field) {\n+        super(descriptor, accessPath, field);\n+    }\n+\n+    /**\n+     * Gets a {@link BlobHardRef} for the given entity.\n+     *\n+     * @param entity The entity to get the reference from\n+     * @return a {@link BlobHardRef} or a subclass of it\n+     */\n+    protected BlobHardRef getRef(Object entity) {\n+        try {\n+            return (BlobHardRef) super.getValueFromField(this.accessPath.apply(entity));\n+        } catch (Exception e) {\n+            throw Exceptions.handle()\n+                            .to(OMA.LOG)\n+                            .error(e)\n+                            .withSystemErrorMessage(\n+                                    \"Unable to obtain a reference object from entity ref field ('%s' in '%s'): %s (%s)\",\n+                                    getName(),\n+                                    descriptor.getType().getName())\n+                            .handle();\n+        }\n+    }\n+\n+    @Override\n+    protected Object getValueFromField(Object target) {\n+        return getRef(target).getKey();\n+    }\n+\n+    @Override\n+    public Object transformValue(Value value) {\n+        return value.get();\n+    }\n+\n+    @Override\n+    protected Object transformToJDBC(Object object) {\n+        return object;\n+    }\n+\n+    @Override\n+    protected Object transformFromJDBC(Value object) {\n+        return object.get();\n+    }\n+\n+    @Override\n+    public void setValue(Object entity, Object object) {\n+        this.setValueToField(object, entity);\n+    }\n+\n+    /**\n+     * Sets the given value on the target entity as either a blob or a key depending on the value.\n+     *\n+     * @param value        The value to be set\n+     * @param targetEntity The entity to be set on\n+     */\n+    protected void setValueToField(Object value, Object targetEntity) {\n+        BlobHardRef ref = getRef(targetEntity);\n+\n+        if (value == null || value instanceof Blob) {\n+            ref.setBlob((Blob) value);\n+        } else {\n+            ref.setKey((String) value);\n+        }\n+    }\n+\n+    @Override\n+    public void contributeToTable(Table table) {\n+        table.getColumns().add(new TableColumn(this, Types.CHAR));\n+    }\n+\n+    /**\n+     * Checks if the blob reference on the entity has changed since loading from DB.\n+     *\n+     * @param entity the entity to check\n+     * @return <tt>true</tt> if unchanged, else <tt>false</tt>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "originalPosition": 120}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU4Njgx", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397358681", "createdAt": "2020-04-21T13:59:45Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1OTo0NVrOGJHSaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxMzo1OTo0NVrOGJHSaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIwOTc3MQ==", "bodyText": "while being at it - maybe add another test for the happy path (meaning the given part of the test below as when: and in then: simply ensure that the blob is no longer temporary)\nand then delete the entity and check that the blob is marked as deleted :) (either in one case or in two cases)", "url": "https://github.com/scireum/sirius-biz/pull/727#discussion_r412209771", "createdAt": "2020-04-21T13:59:45Z", "author": {"login": "andyHa"}, "path": "src/test/java/sirius/biz/storage/layer2/BlobHardRefSpec.groovy", "diffHunk": "@@ -0,0 +1,40 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer2\n+\n+import sirius.db.jdbc.OMA\n+import sirius.kernel.BaseSpecification\n+import sirius.kernel.di.std.Part\n+\n+class BlobHardRefSpec extends BaseSpecification {\n+\n+    @Part\n+    private static OMA oma;\n+\n+    @Part\n+    private static BlobStorage blobStorage;\n+\n+    def \"store entity with unchanged hard ref blob must not fail\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU5MTYw", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397359160", "createdAt": "2020-04-21T14:00:12Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMDoxMlrOGJHTzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxNDowMDoxMlrOGJHTzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjIxMDEyNw==", "bodyText": "just for the record - the description isn't necessary in test configs :)", "url": "https://github.com/scireum/sirius-biz/pull/727#discussion_r412210127", "createdAt": "2020-04-21T14:00:12Z", "author": {"login": "andyHa"}, "path": "src/test/resources/test.conf", "diffHunk": "@@ -182,6 +182,13 @@ storage {\n             reply-secondary {\n                 engine = \"s3\"\n             }\n+            blob-files {}\n+        }\n+    }\n+    layer2.spaces {\n+        blob-files {\n+                readPermission = \"disabled\"\n+                description = \"blob-files {}\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3MzU5Mjk0", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-397359294", "createdAt": "2020-04-21T14:00:20Z", "commit": {"oid": "48ac972467dd6c5c96ec6fffab338b6f68b7a38b"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c77a985d6e08dd1198863bdd6f83bef525d70f1d", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/c77a985d6e08dd1198863bdd6f83bef525d70f1d", "committedDate": "2020-04-22T10:03:07Z", "message": "Add some more tests\n\nFixes: SE-9561"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfb940e25ded1ff4fcb71f130575f17cc360eb62", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/bfb940e25ded1ff4fcb71f130575f17cc360eb62", "committedDate": "2020-04-22T10:03:41Z", "message": "Fix review comments\n\nFixes: SE-9561"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDc0NjI5", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-398074629", "createdAt": "2020-04-22T10:57:36Z", "commit": {"oid": "bfb940e25ded1ff4fcb71f130575f17cc360eb62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDgwODM2", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-398080836", "createdAt": "2020-04-22T11:06:47Z", "commit": {"oid": "bfb940e25ded1ff4fcb71f130575f17cc360eb62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDgzMTIz", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-398083123", "createdAt": "2020-04-22T11:10:18Z", "commit": {"oid": "bfb940e25ded1ff4fcb71f130575f17cc360eb62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4MDk0ODA3", "url": "https://github.com/scireum/sirius-biz/pull/727#pullrequestreview-398094807", "createdAt": "2020-04-22T11:27:39Z", "commit": {"oid": "bfb940e25ded1ff4fcb71f130575f17cc360eb62"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "591585e4ce15939d706702efa2dc7710218e3b4c", "author": {"user": {"login": "mkeckmkeck", "name": "Matthias Keck"}}, "url": "https://github.com/scireum/sirius-biz/commit/591585e4ce15939d706702efa2dc7710218e3b4c", "committedDate": "2020-04-27T14:48:09Z", "message": "Merge branch 'master' into mke/SE-9561_save_entity_with_unchanged_blob\n\n# Conflicts:\n#\tsrc/main/java/sirius/biz/storage/layer2/BlobHardRefProperty.java\n#\tsrc/main/java/sirius/biz/storage/layer2/BlobSoftRefProperty.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4452, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}