{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ2MjQ4Njg2", "number": 820, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToyNDoxMVrOEMihLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToyNDoxMVrOEMihLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxNTgzOTE5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/cluster/InterconnectCacheCoherence.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToyNDoxMVrOGutUSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQxNToyNTo1MlrOGutZCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMDE1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (Strings.areEqual(CallContext.getNodeName(), event.getString(NODE_IDENTIFIER))) {\n          \n          \n            \n                    if (Strings.areEqual(CallContext.getNodeName(), event.getString(MESSAGE_NODE))) {", "url": "https://github.com/scireum/sirius-biz/pull/820#discussion_r451630153", "createdAt": "2020-07-08T15:24:11Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/cluster/InterconnectCacheCoherence.java", "diffHunk": "@@ -63,13 +67,19 @@ public void removeAll(Cache<String, ?> cache, String discriminator, String testI\n                                               .fluentPut(MESSAGE_DISCRIMINATOR, discriminator)\n                                               .fluentPut(MESSAGE_TEST_VALUE, testInput)\n                                               .fluentPut(MESSAGE_NODE, CallContext.getNodeName()));\n+        CacheManager.coherentCacheRemoveAllLocally(getName(), discriminator, testInput);\n     }\n \n     @Override\n     public void handleEvent(JSONObject event) {\n         String type = event.getString(MESSAGE_TYPE);\n         String cache = event.getString(MESSAGE_CACHE);\n \n+        // Ignore our own messages, as we already have executed them...\n+        if (Strings.areEqual(CallContext.getNodeName(), event.getString(NODE_IDENTIFIER))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a32aac02480aedff358badec59cfd8424e777fd6"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMTM2OA==", "bodyText": "Oder muss oben auch der NODE_IDENTIFIER rein geschrieben werden? So passt aber glaub auf jeden Fall ned oder?", "url": "https://github.com/scireum/sirius-biz/pull/820#discussion_r451631368", "createdAt": "2020-07-08T15:25:52Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/cluster/InterconnectCacheCoherence.java", "diffHunk": "@@ -63,13 +67,19 @@ public void removeAll(Cache<String, ?> cache, String discriminator, String testI\n                                               .fluentPut(MESSAGE_DISCRIMINATOR, discriminator)\n                                               .fluentPut(MESSAGE_TEST_VALUE, testInput)\n                                               .fluentPut(MESSAGE_NODE, CallContext.getNodeName()));\n+        CacheManager.coherentCacheRemoveAllLocally(getName(), discriminator, testInput);\n     }\n \n     @Override\n     public void handleEvent(JSONObject event) {\n         String type = event.getString(MESSAGE_TYPE);\n         String cache = event.getString(MESSAGE_CACHE);\n \n+        // Ignore our own messages, as we already have executed them...\n+        if (Strings.areEqual(CallContext.getNodeName(), event.getString(NODE_IDENTIFIER))) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTYzMDE1Mw=="}, "originalCommit": {"oid": "a32aac02480aedff358badec59cfd8424e777fd6"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1972, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}