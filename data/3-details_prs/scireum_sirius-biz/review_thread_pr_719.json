{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxODUxODM1", "number": 719, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzowMDoyOFrODy5ESg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjo1MzozOVrOD3f2Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0NjkwMzc4OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xN1QxMzowMDoyOFrOGHM-Ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMjoyODoyN1rOGIR_pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNTcxNQ==", "bodyText": "What does DDS means? I know the term DDL (Data Definition Language).", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r410205715", "createdAt": "2020-04-17T13:00:28Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "diffHunk": "@@ -89,33 +89,39 @@ public void sql(WebContext ctx) {\n     public void executeQuery(WebContext ctx, JSONStructuredOutput out) throws SQLException {\n         Watch w = Watch.start();\n \n-        String database = ctx.get(\"db\").asString(defaultDatabase);\n-        Database db = determineDatabase(database);\n-        String sqlStatement = ctx.get(\"query\").asString();\n-        SQLQuery qry = db.createQuery(sqlStatement);\n-\n-        if (isDDSStatement(sqlStatement)) {\n-            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n-            // only permit them against our system database.\n-            if (!Strings.areEqual(database, defaultDatabase)) {\n-                throw Exceptions.createHandled()\n-                                .withSystemErrorMessage(\n-                                        \"Cannot execute a DDS query against this database. This can be only done for '%s'\",\n-                                        database)\n-                                .handle();\n-            }\n-\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else if (isModifyStatement(sqlStatement)) {\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else {\n-            Monoflop monoflop = Monoflop.create();\n-            qry.iterateAll(r -> outputRow(out, monoflop, r), new Limit(0, ctx.get(\"limit\").asInt(DEFAULT_LIMIT)));\n-            if (monoflop.successiveCall()) {\n-                out.endArray();\n+        try {\n+            String database = ctx.get(\"db\").asString(defaultDatabase);\n+            Database db = determineDatabase(database);\n+            String sqlStatement = ctx.get(\"query\").asString();\n+            SQLQuery qry = db.createQuery(sqlStatement);\n+\n+            if (isDDSStatement(sqlStatement)) {\n+                // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cffe036ff065328001717720354e65e753e7b88"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTMzNjYxNA==", "bodyText": "Rename DDS --> DDL?", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r411336614", "createdAt": "2020-04-20T12:28:27Z", "author": {"login": "bwiedmann"}, "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "diffHunk": "@@ -89,33 +89,39 @@ public void sql(WebContext ctx) {\n     public void executeQuery(WebContext ctx, JSONStructuredOutput out) throws SQLException {\n         Watch w = Watch.start();\n \n-        String database = ctx.get(\"db\").asString(defaultDatabase);\n-        Database db = determineDatabase(database);\n-        String sqlStatement = ctx.get(\"query\").asString();\n-        SQLQuery qry = db.createQuery(sqlStatement);\n-\n-        if (isDDSStatement(sqlStatement)) {\n-            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n-            // only permit them against our system database.\n-            if (!Strings.areEqual(database, defaultDatabase)) {\n-                throw Exceptions.createHandled()\n-                                .withSystemErrorMessage(\n-                                        \"Cannot execute a DDS query against this database. This can be only done for '%s'\",\n-                                        database)\n-                                .handle();\n-            }\n-\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else if (isModifyStatement(sqlStatement)) {\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else {\n-            Monoflop monoflop = Monoflop.create();\n-            qry.iterateAll(r -> outputRow(out, monoflop, r), new Limit(0, ctx.get(\"limit\").asInt(DEFAULT_LIMIT)));\n-            if (monoflop.successiveCall()) {\n-                out.endArray();\n+        try {\n+            String database = ctx.get(\"db\").asString(defaultDatabase);\n+            Database db = determineDatabase(database);\n+            String sqlStatement = ctx.get(\"query\").asString();\n+            SQLQuery qry = db.createQuery(sqlStatement);\n+\n+            if (isDDSStatement(sqlStatement)) {\n+                // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMDIwNTcxNQ=="}, "originalCommit": {"oid": "0cffe036ff065328001717720354e65e753e7b88"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTIwMDcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjo1MzozOVrOGNx2gg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNjo1MzozOVrOGNx2gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEwMTQ0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n          \n          \n            \n                            // To prevent accidential damage, we try to filter DDL queries (modifying the database structure) and", "url": "https://github.com/scireum/sirius-biz/pull/719#discussion_r417101442", "createdAt": "2020-04-29T06:53:39Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/jdbc/DatabaseController.java", "diffHunk": "@@ -89,33 +89,39 @@ public void sql(WebContext ctx) {\n     public void executeQuery(WebContext ctx, JSONStructuredOutput out) throws SQLException {\n         Watch w = Watch.start();\n \n-        String database = ctx.get(\"db\").asString(defaultDatabase);\n-        Database db = determineDatabase(database);\n-        String sqlStatement = ctx.get(\"query\").asString();\n-        SQLQuery qry = db.createQuery(sqlStatement);\n-\n-        if (isDDSStatement(sqlStatement)) {\n-            // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and\n-            // only permit them against our system database.\n-            if (!Strings.areEqual(database, defaultDatabase)) {\n-                throw Exceptions.createHandled()\n-                                .withSystemErrorMessage(\n-                                        \"Cannot execute a DDS query against this database. This can be only done for '%s'\",\n-                                        database)\n-                                .handle();\n-            }\n-\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else if (isModifyStatement(sqlStatement)) {\n-            out.property(\"rowModified\", qry.executeUpdate());\n-        } else {\n-            Monoflop monoflop = Monoflop.create();\n-            qry.iterateAll(r -> outputRow(out, monoflop, r), new Limit(0, ctx.get(\"limit\").asInt(DEFAULT_LIMIT)));\n-            if (monoflop.successiveCall()) {\n-                out.endArray();\n+        try {\n+            String database = ctx.get(\"db\").asString(defaultDatabase);\n+            Database db = determineDatabase(database);\n+            String sqlStatement = ctx.get(\"query\").asString();\n+            SQLQuery qry = db.createQuery(sqlStatement);\n+\n+            if (isDDSStatement(sqlStatement)) {\n+                // To prevent accidential damage, we try to filter DDS queries (modifying the database structure) and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cffe036ff065328001717720354e65e753e7b88"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2038, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}