{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0MzU5NDI5", "number": 763, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDowNjoyNlrOEAcXfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozNTozMlrOEAfOBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTAwMjIyOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMDowNjoyNlrOGbuYjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjoyODo1N1rOGby0xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyNDY4Ng==", "bodyText": "That is a very long variable name :-)\nperhaps appendContextInErrorMessage ?", "url": "https://github.com/scireum/sirius-biz/pull/763#discussion_r431724686", "createdAt": "2020-05-28T10:06:26Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "diffHunk": "@@ -38,6 +38,7 @@\n     protected Supplier<String> label;\n     protected Set<String> aliases = new HashSet<>();\n     protected List<ValueCheck> checks = new ArrayList<>();\n+    protected boolean includeIdentifierAndValueInErrorMessage;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5a858b40e04b64a99b55f89c9d9e390d6c4bb16"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTc5NzQ0Ng==", "bodyText": "Has been renamed \ud83d\udc4d", "url": "https://github.com/scireum/sirius-biz/pull/763#discussion_r431797446", "createdAt": "2020-05-28T12:28:57Z", "author": {"login": "bwiedmann"}, "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "diffHunk": "@@ -38,6 +38,7 @@\n     protected Supplier<String> label;\n     protected Set<String> aliases = new HashSet<>();\n     protected List<ValueCheck> checks = new ArrayList<>();\n+    protected boolean includeIdentifierAndValueInErrorMessage;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTcyNDY4Ng=="}, "originalCommit": {"oid": "f5a858b40e04b64a99b55f89c9d9e390d6c4bb16"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4OTQ2OTQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxMjozNTozMlrOGbzCuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjoxOToxOVrOGcaVjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTAxNg==", "bodyText": "Now this method's name look kinda strange. shouldAppend... fits better its purpose, but let's see what the others have to say.", "url": "https://github.com/scireum/sirius-biz/pull/763#discussion_r431801016", "createdAt": "2020-05-28T12:35:32Z", "author": {"login": "idlira"}, "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "diffHunk": "@@ -264,6 +265,25 @@ public FieldDefinition markRequired() {\n         return withCheck(new RequiredCheck());\n     }\n \n+    /**\n+     * Marks the current field definition to be included in error messages with name and value for row identification purposes.\n+     *\n+     * @return the field itself for fluent method calls\n+     */\n+    public FieldDefinition appendContextInErrorMessage() {\n+        this.appendContextInErrorMessage = true;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns the info if this field's name and value should be included in error messages.\n+     *\n+     * @return true if this field's name and value should be included in error messages, false otherwise\n+     */\n+    public boolean isAppendContextInErrorMessage() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a9774c1ef439652d50967937ec5bb54dd1f3eec"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ0NDgxMg==", "bodyText": "has been renamed to shouldAppendContextInErrorMessage", "url": "https://github.com/scireum/sirius-biz/pull/763#discussion_r432444812", "createdAt": "2020-05-29T12:19:19Z", "author": {"login": "bwiedmann"}, "path": "src/main/java/sirius/biz/importer/format/FieldDefinition.java", "diffHunk": "@@ -264,6 +265,25 @@ public FieldDefinition markRequired() {\n         return withCheck(new RequiredCheck());\n     }\n \n+    /**\n+     * Marks the current field definition to be included in error messages with name and value for row identification purposes.\n+     *\n+     * @return the field itself for fluent method calls\n+     */\n+    public FieldDefinition appendContextInErrorMessage() {\n+        this.appendContextInErrorMessage = true;\n+        return this;\n+    }\n+\n+    /**\n+     * Returns the info if this field's name and value should be included in error messages.\n+     *\n+     * @return true if this field's name and value should be included in error messages, false otherwise\n+     */\n+    public boolean isAppendContextInErrorMessage() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTgwMTAxNg=="}, "originalCommit": {"oid": "0a9774c1ef439652d50967937ec5bb54dd1f3eec"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1899, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}