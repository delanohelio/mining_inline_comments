{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyMzA1NjY1", "number": 801, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0MjozMVrOEKXpLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoxNDo1M1rOEKYCmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzA4NTg5OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0MjozMVrOGrXg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0MjozMVrOGrXg2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzE5NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param force       determines if executon is forced\n          \n          \n            \n                 * @param force       determines if execution is forced", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448127194", "createdAt": "2020-07-01T05:42:31Z", "author": {"login": "mkeckmkeck"}, "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -149,24 +156,31 @@ private Boolean checkIfQueueIsEmpty(String queueName) {\n      * Creates an entry which is processed by the {@link AnalyticsScheduler#getExecutorForScheduling() scheduling executor}\n      * and will eventually invoke {@link AnalyticsScheduler#scheduleBatches(Consumer)} for the given scheduler.\n      * <p>\n-     * This method also enforces the {@link AnalyticsScheduler#getInterval() scheduling interval}.\n+     * This method also enforces the {@link AnalyticsScheduler#getInterval() scheduling interval} unless <tt>force</tt>\n+     * is set to <tt>true</tt>.\n      *\n-     * @param scheduler the scheduler to queue\n+     * @param scheduler   the scheduler to queue\n+     * @param force       determines if executon is forced", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1f61adb408a24d2f607e4dedb70bea8346d691c"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzA5MDA1OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0NDo1N1rOGrXjcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0NDo1N1rOGrXjcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyNzg1OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * executions for the current day. If an execution if foced for another day, this will not be recorded\n          \n          \n            \n                 * executions for the current day. If an execution if forced for another day, this will not be recorded", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448127858", "createdAt": "2020-07-01T05:44:57Z", "author": {"login": "mkeckmkeck"}, "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -193,12 +207,25 @@ private boolean shouldExecuteAgain(AnalyticsScheduler scheduler) {\n             return true;\n         }\n \n-        LocalDateTime lastExecution =\n-                flags.readExecutionFlag(computeExecutionFlagName(scheduler), EXECUTION_FLAG).orElse(null);\n+        LocalDateTime lastExecution = getLastExecution(scheduler).orElse(null);\n         if (lastExecution == null) {\n             return true;\n         }\n \n         return lastExecution.getMonthValue() != LocalDate.now().getMonthValue();\n     }\n+\n+    /**\n+     * Determines the last execution timestamp of the given scheduler.\n+     * <p>\n+     * Note that this only accounts for regular (planned) invocations of the scheduler as well as forced\n+     * executions for the current day. If an execution if foced for another day, this will not be recorded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1f61adb408a24d2f607e4dedb70bea8346d691c"}, "originalPosition": 116}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzA5MTU4OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0NTo0MFrOGrXkWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNTo0NTo0MFrOGrXkWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEyODA4OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * as execution flag and therefore not be reported here.\n          \n          \n            \n                 * as execution flag and therefore not be returned here.", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448128089", "createdAt": "2020-07-01T05:45:40Z", "author": {"login": "mkeckmkeck"}, "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticalEngine.java", "diffHunk": "@@ -193,12 +207,25 @@ private boolean shouldExecuteAgain(AnalyticsScheduler scheduler) {\n             return true;\n         }\n \n-        LocalDateTime lastExecution =\n-                flags.readExecutionFlag(computeExecutionFlagName(scheduler), EXECUTION_FLAG).orElse(null);\n+        LocalDateTime lastExecution = getLastExecution(scheduler).orElse(null);\n         if (lastExecution == null) {\n             return true;\n         }\n \n         return lastExecution.getMonthValue() != LocalDate.now().getMonthValue();\n     }\n+\n+    /**\n+     * Determines the last execution timestamp of the given scheduler.\n+     * <p>\n+     * Note that this only accounts for regular (planned) invocations of the scheduler as well as forced\n+     * executions for the current day. If an execution if foced for another day, this will not be recorded\n+     * as execution flag and therefore not be reported here.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1f61adb408a24d2f607e4dedb70bea8346d691c"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MzE1MDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticsCommand.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoxNDo1M1rOGrYH9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQwNjoxNDo1M1rOGrYH9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODEzNzIwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * Provides a maintenance command to execute analytical schedulers on demand and to also diplay their state.\n          \n          \n            \n             * Provides a maintenance command to execute analytical schedulers on demand and to also display their state.", "url": "https://github.com/scireum/sirius-biz/pull/801#discussion_r448137204", "createdAt": "2020-07-01T06:14:53Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/analytics/scheduler/AnalyticsCommand.java", "diffHunk": "@@ -0,0 +1,116 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.analytics.scheduler;\n+\n+import sirius.biz.cluster.work.DistributedTaskExecutor;\n+import sirius.biz.cluster.work.DistributedTasks;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.health.console.Command;\n+import sirius.kernel.nls.NLS;\n+\n+import javax.annotation.Nonnull;\n+import java.time.LocalDate;\n+import java.time.LocalDateTime;\n+import java.util.HashMap;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+/**\n+ * Provides a maintenance command to execute analytical schedulers on demand and to also diplay their state.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f1f61adb408a24d2f607e4dedb70bea8346d691c"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1945, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}