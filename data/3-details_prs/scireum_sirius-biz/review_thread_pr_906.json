{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5NDU1ODM5", "number": 906, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MDo0OVrOE4DtvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxOTowOVrOE4NZ5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3MjE2NTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/storage/layer3/ExtractArchiveJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MDo0OVrOHxwcpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQwODo1MDo0OVrOHxwcpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTkzNjAzOQ==", "bodyText": "sourceParameter", "url": "https://github.com/scireum/sirius-biz/pull/906#discussion_r521936039", "createdAt": "2020-11-12T08:50:49Z", "author": {"login": "mkeckmkeck"}, "path": "src/main/java/sirius/biz/storage/layer3/ExtractArchiveJob.java", "diffHunk": "@@ -0,0 +1,200 @@\n+/*\n+ * Made with all the love in the world\n+ * by scireum in Remshalden, Germany\n+ *\n+ * Copyright by scireum GmbH\n+ * http://www.scireum.de - info@scireum.de\n+ */\n+\n+package sirius.biz.storage.layer3;\n+\n+import sirius.biz.jobs.batch.SimpleBatchProcessJobFactory;\n+import sirius.biz.jobs.params.BooleanParameter;\n+import sirius.biz.jobs.params.EnumParameter;\n+import sirius.biz.jobs.params.Parameter;\n+import sirius.biz.process.PersistencePeriod;\n+import sirius.biz.process.ProcessContext;\n+import sirius.biz.process.logs.ProcessLog;\n+import sirius.biz.storage.layer1.FileHandle;\n+import sirius.biz.util.ArchiveExtractor;\n+import sirius.biz.util.ExtractedFile;\n+import sirius.kernel.async.TaskContext;\n+import sirius.kernel.commons.Files;\n+import sirius.kernel.commons.Strings;\n+import sirius.kernel.commons.Watch;\n+import sirius.kernel.di.std.Part;\n+import sirius.kernel.di.std.Register;\n+import sirius.kernel.nls.NLS;\n+import sirius.web.http.QueryString;\n+\n+import javax.annotation.Nonnull;\n+import javax.annotation.Nullable;\n+import java.util.ArrayList;\n+import java.util.Map;\n+import java.util.function.Consumer;\n+\n+/**\n+ * Provides a job able to extract archives from the {@link VirtualFileSystem}.\n+ * <p>\n+ * This uses the {@link ArchiveExtractor} so depending if 7-ZIP is enabled this supports either a whole bunch\n+ * of formats (rar, 7z, tar etc.) or \"just\" ZIP files using the Java API.\n+ */\n+@Register\n+public class ExtractArchiveJob extends SimpleBatchProcessJobFactory {\n+\n+    @Part\n+    private VirtualFileSystem vfs;\n+\n+    @Part\n+    private ArchiveExtractor extractor;\n+\n+    private final Parameter<VirtualFile> sourceParamter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e7b86eafd6eb0de75af377f1160013d81bf7038e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI3Mzc1MzMzOnYy", "diffSide": "RIGHT", "path": "src/main/java/sirius/biz/jobs/batch/file/FileImportJob.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxOTowOVrOHx_sMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMlQxNToxOTowOVrOHx_sMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjE4NTc3Ng==", "bodyText": "vfs -> fileSystem?", "url": "https://github.com/scireum/sirius-biz/pull/906#discussion_r522185776", "createdAt": "2020-11-12T15:19:09Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/jobs/batch/file/FileImportJob.java", "diffHunk": "@@ -42,7 +50,48 @@\n      */\n     public static final Parameter<VirtualFile> FILE_PARAMETER = createFileParameter(null);\n \n+    /**\n+     * Determines the mode in which auxiliary files are handled (if this job supports it).\n+     */\n+    public static final Parameter<AuxiliaryFileMode> AUX_FILE_MODE_PARAMETER = new EnumParameter<>(\"auxFileMode\",\n+                                                                                                   \"$FileImportJobFactory.auxFileMode\",\n+                                                                                                   AuxiliaryFileMode.class)\n+            .withDefault(AuxiliaryFileMode.UPDATE_ON_CHANGE)\n+            .markRequired()\n+            .build();\n+\n+    @Part\n+    private static VirtualFileSystem vfs;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8016e7777932d2451ef8321f22af211dfe817ac9"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1845, "cost": 1, "resetAt": "2021-11-12T12:57:47Z"}}}