{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTQ1MzQw", "number": 659, "title": "Adds some methods to re-use PageHelpers in processes to iterate over total items", "bodyText": "While this is not really the purpose of these helpers, this prevents a lot of duplicate code when building processes that are linked to page views, for example export processes.\nFixes: SIRI-146", "createdAt": "2020-01-08T16:32:26Z", "url": "https://github.com/scireum/sirius-biz/pull/659", "merged": true, "mergeCommit": {"oid": "e016bf5c9e25a88d971c99318b38ab0f371eae2c"}, "closed": true, "closedAt": "2020-01-09T15:46:44Z", "author": {"login": "meg1502"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb4X-ySgH2gAyMzYwNTQ1MzQwOjJkNzUzOGEwMmIxNjQxOGZhNzU1NzZlNjM0ODFjMDRiOGNhNjQ5Yzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb4o_0iAFqTM0MDQ4MTk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7", "author": {"user": {"login": "meg1502", "name": null}}, "url": "https://github.com/scireum/sirius-biz/commit/2d7538a02b16418fa75576e63481c04b8ca649c7", "committedDate": "2020-01-08T16:31:05Z", "message": "Adds some methods to re-use PageHelpers in processes to iterate over total items\n\nWhile this is not really the purpose of these helpers, this prevents a lot of duplicate code when building processes that are linked to page views, for example export processes.\n\nFixes: SIRI-146"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7f1a3485968518d3d5924068cc2602491539ea10", "author": {"user": {"login": "meg1502", "name": null}}, "url": "https://github.com/scireum/sirius-biz/commit/7f1a3485968518d3d5924068cc2602491539ea10", "committedDate": "2020-01-08T16:38:06Z", "message": "Enables aggregations with a processContext\n\nFixes: SIRI-146"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTkyNzEy", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-339992712", "createdAt": "2020-01-08T16:38:09Z", "commit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODowOVrOFbc1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODowOVrOFbc1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODIyNA==", "bodyText": "couldn't we use a Function<String,Value> parameterProvider here?", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328224", "createdAt": "2020-01-08T16:38:09Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -47,7 +49,8 @@\n public abstract class BasePageHelper<E extends BaseEntity<?>, C extends Constraint, Q extends Query<Q, E, C>, B extends BasePageHelper<E, C, Q, B>> {\n \n     protected static final int DEFAULT_PAGE_SIZE = 25;\n-    protected WebContext ctx;\n+    protected WebContext webContext;\n+    protected ProcessContext processContext;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 22}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTkzMDIy", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-339993022", "createdAt": "2020-01-08T16:38:38Z", "commit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODozOFrOFbc2Cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODozOFrOFbc2Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODQ1OQ==", "bodyText": "also this.parameterProvider = webContext::getParameter", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328459", "createdAt": "2020-01-08T16:38:38Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTkzMTM5", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-339993139", "createdAt": "2020-01-08T16:38:48Z", "commit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODo0OFrOFbc2ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjozODo0OFrOFbc2ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyODU1NA==", "bodyText": "withParameterProvider(Function ...)", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364328554", "createdAt": "2020-01-08T16:38:48Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -61,12 +64,25 @@ protected BasePageHelper(Q query) {\n     /**\n      * Attaches a web context to the helper, to fetch filter and pagination values from.\n      *\n-     * @param ctx the request to attach\n+     * @param webContext the request to attach\n      * @return the helper itself for fluent method calls\n      */\n     @SuppressWarnings(\"unchecked\")\n-    public B withContext(WebContext ctx) {\n-        this.ctx = ctx;\n+    public B withContext(WebContext webContext) {\n+        this.webContext = webContext;\n+        return (B) this;\n+    }\n+\n+    /**\n+     * Attaches a process context to the helper, to fetch filter values from.\n+     * This can be used intead of supplying a webContext via {@link #withContext(WebContext)}.\n+     *\n+     * @param processContext the context where filter values are fetched from\n+     * @return the helper itself for fluent method calls\n+     */\n+    @SuppressWarnings(\"unchecked\")\n+    public B withProcessContext(ProcessContext processContext) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzM5OTk0MzAy", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-339994302", "createdAt": "2020-01-08T16:40:31Z", "commit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjo0MDozMVrOFbc52Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOFQxNjo0MDozMVrOFbc52Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDMyOTQzMw==", "bodyText": "getQuery", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364329433", "createdAt": "2020-01-08T16:40:31Z", "author": {"login": "andyHa"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -325,10 +344,10 @@ public B withPageSize(int pageSize) {\n      * @return the given data wrapped as <tt>Page</tt>\n      */\n     public Page<E> asPage() {\n-        Objects.requireNonNull(ctx);\n+        Objects.requireNonNull(webContext);\n         Watch w = Watch.start();\n         Page<E> result = new Page<E>().withStart(1).withPageSize(pageSize);\n-        result.bindToRequest(ctx);\n+        result.bindToRequest(webContext);\n \n         if (Strings.isFilled(result.getQuery()) && !searchFields.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d7538a02b16418fa75576e63481c04b8ca649c7"}, "originalPosition": 135}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3", "author": {"user": {"login": "meg1502", "name": null}}, "url": "https://github.com/scireum/sirius-biz/commit/2b83d9be4c57251876dd2b2d3387457b0bb403f3", "committedDate": "2020-01-09T10:21:13Z", "message": "Uses a generic parameter provider instead of a process context\n\nFixes: SIRI-146"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDE5OTc3", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-340419977", "createdAt": "2020-01-09T10:24:19Z", "commit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDc4Njg2", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-340478686", "createdAt": "2020-01-09T12:14:26Z", "commit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNDoyNlrOFbz97w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMjoxNToyNVrOFbz_Zw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzMxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707311", "createdAt": "2020-01-09T12:14:26Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 134}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzQ2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param resultHandler the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param resultHandler the handler to be invoked for each item in the result", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707464", "createdAt": "2020-01-09T12:14:50Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzYwMg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n          \n          \n            \n                 * While this is not the purpose of this helper, this can be used to easily re-use code that is intended for page views.", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707602", "createdAt": "2020-01-09T12:15:12Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 151}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDcwNzY4Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                 * @param consumer the handle to be invoked for each item in the result\n          \n          \n            \n                 * @param consumer the handler to be invoked for each item in the result", "url": "https://github.com/scireum/sirius-biz/pull/659#discussion_r364707687", "createdAt": "2020-01-09T12:15:25Z", "author": {"login": "sabieber"}, "path": "src/main/java/sirius/biz/web/BasePageHelper.java", "diffHunk": "@@ -349,6 +359,53 @@ public B withPageSize(int pageSize) {\n         return result;\n     }\n \n+    /**\n+     * Calls the given function on all items in the result ignoring {@link #pageSize}, as long as it returns <tt>true</tt>.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param resultHandler the handle to be invoked for each item in the result\n+     */\n+    public void iterateTotalItems(Function<E, Boolean> resultHandler) {\n+        String query = getParameterValue(\"query\").getString();\n+        applyQuery(query);\n+\n+        applyFacets(null);\n+        baseQuery.iterate(resultHandler);\n+    }\n+\n+    /**\n+     * Calls the given consumer on all items in the result ignoring {@link #pageSize}.\n+     * <p>\n+     * While this is not the purpose of this helper, this can be used to easily re-use code that is inteded for page views.\n+     * For example, together with {@link #withParameterProvider(Function)} this can be used to export the same page view in a process,\n+     * using the same query and facet suppliers as the view that is to be exported.\n+     *\n+     * @param consumer the handle to be invoked for each item in the result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b83d9be4c57251876dd2b2d3387457b0bb403f3"}, "originalPosition": 155}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e360b646be7eacae07c027619d64b6f8308746d", "author": {"user": {"login": "meg1502", "name": null}}, "url": "https://github.com/scireum/sirius-biz/commit/0e360b646be7eacae07c027619d64b6f8308746d", "committedDate": "2020-01-09T12:17:36Z", "message": "Fixes javadoc typos\n\nCo-Authored-By: Sascha Bieberstein <sabieber@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQwNDgxOTU1", "url": "https://github.com/scireum/sirius-biz/pull/659#pullrequestreview-340481955", "createdAt": "2020-01-09T12:20:36Z", "commit": {"oid": "0e360b646be7eacae07c027619d64b6f8308746d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4487, "cost": 1, "resetAt": "2021-11-02T10:47:05Z"}}}