{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MzU5MjE0", "number": 954, "title": "Make parallel bind/unbind of services", "bodyText": "JIRA:LMCROSSITXSADEPLOY-1867", "createdAt": "2020-09-18T14:38:57Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954", "merged": true, "mergeCommit": {"oid": "5afb30c1190e51652c9a942ec7ebfa214c725fd9"}, "closed": true, "closedAt": "2020-10-09T11:22:38Z", "author": {"login": "theghost5800"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdKG0jxgBqjM3ODI5OTUyNzA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQyqGuABqjM4NTkyNDg5Njc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bd49049c6e5f28f53c236cecc4300ddf9c802334", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/bd49049c6e5f28f53c236cecc4300ddf9c802334", "committedDate": "2020-09-18T14:37:59Z", "message": "Make parallel bind/unbind of services\n\nJIRA:LMCROSSITXSADEPLOY-1867"}, "afterCommit": {"oid": "acd457990f9bf51ee2ca18682c4dd11ebaa227cb", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/acd457990f9bf51ee2ca18682c4dd11ebaa227cb", "committedDate": "2020-09-18T14:49:26Z", "message": "Make parallel bind/unbind of services\n\nJIRA:LMCROSSITXSADEPLOY-1867"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "361f67df3e154d08e233dab6ab7a25663f6f01f2", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/361f67df3e154d08e233dab6ab7a25663f6f01f2", "committedDate": "2020-09-21T12:55:53Z", "message": "Fix setting of call activity variable in parent process"}, "afterCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ae4f9425ec33a6d2adf380b25ef07b0b218c016c", "committedDate": "2020-09-30T14:44:13Z", "message": "Fix setting of call activity variable in parent process"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMTE3ODYz", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#pullrequestreview-501117863", "createdAt": "2020-10-02T13:07:04Z", "commit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxMzowNzowNFrOHbs5KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQxNDoxOTozM1rOHbveTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgwOTEyOA==", "bodyText": "Make this variable final", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498809128", "createdAt": "2020-10-02T13:07:04Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateOrUpdateAppStep.java", "diffHunk": "@@ -51,15 +52,25 @@\n import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n import org.cloudfoundry.multiapps.mta.handlers.ArchiveHandler;\n import org.cloudfoundry.multiapps.mta.util.NameUtil;\n+import org.flowable.engine.ProcessEngine;\n import org.springframework.beans.factory.config.BeanDefinition;\n import org.springframework.context.annotation.Scope;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+\n @Named(\"createOrUpdateAppStep\")\n @Scope(BeanDefinition.SCOPE_PROTOTYPE)\n public class CreateOrUpdateAppStep extends SyncFlowableStep {\n \n     protected BooleanSupplier shouldPrettyPrint = () -> true;\n \n+    private ProcessEngine processEngine;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgxNzIwMQ==", "bodyText": "Instead of getting this JsonNode and checking if it's null, can we move getBindUnbindServicesCallActivity(context) in a method and check if it is null and the to use this method in this if statement: if (bindUnbindServicesCallActivity != null), something like \"shouldUseNewHandlers(...)\", it will be more readable. I guess this is only for a temporary backwards compatibility?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498817201", "createdAt": "2020-10-02T13:21:48Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateOrUpdateAppStep.java", "diffHunk": "@@ -90,10 +101,27 @@ protected String getStepErrorMessage(ProcessContext context) {\n \n     private StepFlowHandler createStepFlowHandler(ProcessContext context, CloudControllerClient client, CloudApplicationExtended app,\n                                                   CloudApplication existingApp) {\n+        JsonNode bindUnbindServicesCallActivity = getBindUnbindServicesCallActivity(context);\n+        if (bindUnbindServicesCallActivity != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODgyODYyMg==", "bodyText": "Really nice, but can we move this stream in a separate method?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498828622", "createdAt": "2020-10-02T13:41:18Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateOrUpdateAppStep.java", "diffHunk": "@@ -242,16 +353,11 @@ public void handleApplicationServices() throws FileStorageException {\n             if (context.getVariable(Variables.SHOULD_SKIP_SERVICE_REBINDING)) {\n                 return;\n             }\n-\n-            List<String> services = app.getServices();\n-            boolean hasUnboundServices = unbindServicesIfNeeded(app, existingApp, client, services);\n-\n-            Map<String, Map<String, Object>> bindingParameters = getBindingParameters(context, app);\n-\n-            boolean hasUpdatedServices = updateServices(context, app.getName(), bindingParameters, client,\n-                                                        calculateServicesForUpdate(app, existingApp.getServices()));\n-\n-            context.setVariable(Variables.VCAP_SERVICES_PROPERTIES_CHANGED, hasUnboundServices || hasUpdatedServices);\n+            List<String> services = Stream.of(app.getServices(), existingApp.getServices())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 205}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0MjIzNQ==", "bodyText": "services.stream() .map(service -> BindUnbindServiceEndListener.buildExportedVariableName(app.getName(), service)) .map(variableName -> StepsUtil.getObject(context.getExecution(), variableName)) .filter(Boolean.class::isInstance) .anyMatch(Boolean.class::cast);", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498842235", "createdAt": "2020-10-02T14:04:01Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineVcapServicesPropertiesChangedStep.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.List;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.listeners.BindUnbindServiceEndListener;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"determineVcapServicesPropertiesChangedStep\")\n+@Scope(BeanDefinition.SCOPE_PROTOTYPE)\n+public class DetermineVcapServicesPropertiesChangedStep extends SyncFlowableStep {\n+\n+    @Override\n+    protected StepPhase executeStep(ProcessContext context) {\n+        List<String> services = context.getVariable(Variables.SERVICES_TO_UNBIND_BIND);\n+        CloudApplicationExtended app = context.getVariable(Variables.APP_TO_PROCESS);\n+\n+        boolean changedVcapServicesProperties = services.stream()\n+                                                        .map(service -> BindUnbindServiceEndListener.buildExportedVariableName(app.getName(),\n+                                                                                                                               service))\n+                                                        .map(variableName -> StepsUtil.getObject(context.getExecution(), variableName))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0Mjk4NQ==", "bodyText": "Can be simplified a bit.\nIs this filter needed: filter(Boolean.class::isInstance). It should always be boolean?\nCan you extract it in a separate method?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498842985", "createdAt": "2020-10-02T14:05:18Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineVcapServicesPropertiesChangedStep.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.List;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.listeners.BindUnbindServiceEndListener;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"determineVcapServicesPropertiesChangedStep\")\n+@Scope(BeanDefinition.SCOPE_PROTOTYPE)\n+public class DetermineVcapServicesPropertiesChangedStep extends SyncFlowableStep {\n+\n+    @Override\n+    protected StepPhase executeStep(ProcessContext context) {\n+        List<String> services = context.getVariable(Variables.SERVICES_TO_UNBIND_BIND);\n+        CloudApplicationExtended app = context.getVariable(Variables.APP_TO_PROCESS);\n+\n+        boolean changedVcapServicesProperties = services.stream()\n+                                                        .map(service -> BindUnbindServiceEndListener.buildExportedVariableName(app.getName(),\n+                                                                                                                               service))\n+                                                        .map(variableName -> StepsUtil.getObject(context.getExecution(), variableName))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0MjIzNQ=="}, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg0OTczMQ==", "bodyText": "Use UUID.randomUUID()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498849731", "createdAt": "2020-10-02T14:16:46Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/util/ServiceBindingParametersGetterTest.java", "diffHunk": "@@ -0,0 +1,215 @@\n+package org.cloudfoundry.multiapps.controller.process.util;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNull;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.anyString;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.UUID;\n+import java.util.stream.Stream;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.CloudOperationException;\n+import org.cloudfoundry.client.lib.domain.CloudApplication;\n+import org.cloudfoundry.client.lib.domain.CloudServiceBinding;\n+import org.cloudfoundry.client.lib.domain.ImmutableCloudMetadata;\n+import org.cloudfoundry.client.lib.domain.ImmutableCloudServiceBinding;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.ImmutableCloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.ImmutableCloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.core.helpers.MtaArchiveElements;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileService;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileStorageException;\n+import org.cloudfoundry.multiapps.controller.process.steps.ProcessContext;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+import org.springframework.http.HttpStatus;\n+\n+class ServiceBindingParametersGetterTest {\n+\n+    private static final String APP_NAME = \"test_application\";\n+    private static final String SERVICE_NAME = \"test_service\";\n+    private static final String APP_ARCHIVE_ID = \"test_archive_id\";\n+    private static final String SERVICE_BINDING_PARAMETERS_FILENAME = \"test_binding_parameters.json\";\n+    private static final UUID RANDOM_GUID = UUID.fromString(\"9f274e3f-e086-426d-8ab7-e16bda2485ae\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODg1MTQwNg==", "bodyText": "openMocks().close", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r498851406", "createdAt": "2020-10-02T14:19:33Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/listeners/BindUnbindServiceEndListenerTest.java", "diffHunk": "@@ -0,0 +1,89 @@\n+package org.cloudfoundry.multiapps.controller.process.listeners;\n+\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n+\n+import java.util.stream.Stream;\n+\n+import org.cloudfoundry.client.lib.domain.CloudApplication;\n+import org.cloudfoundry.client.lib.domain.ImmutableCloudApplication;\n+import org.cloudfoundry.multiapps.common.util.JsonUtil;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.flowable.engine.RuntimeService;\n+import org.flowable.engine.delegate.DelegateExecution;\n+import org.flowable.engine.runtime.Execution;\n+import org.flowable.engine.runtime.ExecutionQuery;\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.params.ParameterizedTest;\n+import org.junit.jupiter.params.provider.Arguments;\n+import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.Mock;\n+import org.mockito.MockitoAnnotations;\n+\n+class BindUnbindServiceEndListenerTest {\n+\n+    private static final String APPLICATION_NAME = \"test_application\";\n+    private static final String SERVICE_NAME = \"test_service\";\n+    private static final String PARENT_EXECUTION_ID = \"1234\";\n+\n+    @Mock\n+    private DelegateExecution execution;\n+    @Mock\n+    private RuntimeService runtimeService;\n+    @Mock\n+    private ExecutionQuery executionQuery;\n+    @Mock\n+    private Execution parentExecution;\n+\n+    private BindUnbindServiceEndListener bindUnbindServiceEndListener;\n+\n+    @BeforeEach\n+    void setUp() {\n+        MockitoAnnotations.openMocks(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxNzYwNDM4", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#pullrequestreview-501760438", "createdAt": "2020-10-05T06:51:05Z", "commit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "state": "COMMENTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNjo1MTowNlrOHcPevQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwODoyODozM1rOHcSjvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NTgwNQ==", "bodyText": "It should be in reverse wording:\nError while binding service\"{0}\" to application \"{1}\"", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499375805", "createdAt": "2020-10-05T06:51:06Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/Messages.java", "diffHunk": "@@ -142,6 +142,10 @@\n     public static final String ERROR_DELETING_OPERATION_WITH_ID = \"Error deleting operation with ID \\\"{0}\\\"\";\n     public static final String ERROR_DELETING_FLOWABLE_PROCESS_WITH_ID = \"Error deleting Flowable process with ID \\\"{0}\\\"\";\n     public static final String ERROR_MISSING_DEFAULT_DOMAIN = \"Missing default domain in current org\";\n+    public static final String ERROR_WHILE_DETERMINE_BIND_UNBIND_OEPRATIONS_OF_APPLICATION_TO_SERVICE = \"Error while determine bind/unbind operations of application \\\"{0}\\\" to service \\\"{1}\\\"\";\n+    public static final String ERROR_WHILE_UNBINDING_SERVICE_FROM_APPLICATION = \"Error while unbinding service \\\"{0}\\\" from application \\\"{1}\\\"\";\n+    public static final String ERROR_WHILE_BINDING_APPLICATION_TO_SERVICE = \"Error while binding application \\\"{0}\\\" to service \\\"{1}\\\"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NzE1Ng==", "bodyText": "Can you extract this in separate new super class that this and other listeners to reuse?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499377156", "createdAt": "2020-10-05T06:54:34Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/listeners/BindUnbindServiceEndListener.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package org.cloudfoundry.multiapps.controller.process.listeners;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.process.Constants;\n+import org.cloudfoundry.multiapps.controller.process.variables.VariableHandling;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.flowable.engine.RuntimeService;\n+import org.flowable.engine.delegate.DelegateExecution;\n+import org.flowable.engine.delegate.ExecutionListener;\n+import org.flowable.engine.impl.context.Context;\n+import org.flowable.engine.runtime.Execution;\n+\n+@Named(\"bindUnbindServiceEndListener\")\n+public class BindUnbindServiceEndListener implements ExecutionListener {\n+\n+    private static final long serialVersionUID = 1L;\n+\n+    @Override\n+    public void notify(DelegateExecution execution) {\n+        RuntimeService runtimeService = getRuntimeService();\n+\n+        CloudApplicationExtended app = VariableHandling.get(execution, Variables.APP_TO_PROCESS);\n+        String service = VariableHandling.get(execution, Variables.SERVICE_TO_UNBIND_BIND);\n+        boolean shouldUnbindService = VariableHandling.get(execution, Variables.SHOULD_UNBIND_SERVICE);\n+        boolean shouldBindService = VariableHandling.get(execution, Variables.SHOULD_BIND_SERVICE);\n+\n+        String superExecutionId = execution.getParentId();\n+        Execution superExecutionResult = runtimeService.createExecutionQuery()\n+                                                       .executionId(superExecutionId)\n+                                                       .singleResult();\n+        superExecutionId = superExecutionResult.getSuperExecutionId();\n+        String exportedVariableName = buildExportedVariableName(app.getName(), service);\n+\n+        runtimeService.setVariable(superExecutionId, exportedVariableName, shouldUnbindService || shouldBindService);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3NzY1OA==", "bodyText": "Replact Vcap services with VCAP_SERVICES", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499377658", "createdAt": "2020-10-05T06:55:49Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/Messages.java", "diffHunk": "@@ -538,6 +542,8 @@\n     public static final String VERIFYING_APPLICATION_0_EXISTS = \"Verifying application: \\\"{0}\\\" exists\";\n     public static final String TIME_STATISTICS_FOR_PROCESS_0_OPERATION_1_DURATION_2_DELAY_3 = \"Time statistics for process \\\"{0}\\\" (part of operation \\\"{1}\\\"): duration \\\"{2}\\\" ms; delay between steps \\\"{3}\\\" ms\";\n     public static final String TIME_STATISTICS_FOR_OPERATION_0_DURATION_1_DELAY_2 = \"Time statistics for operation \\\"{0}\\\": duration \\\"{1}\\\" ms; delay between steps \\\"{2}\\\" ms\";\n+    public static final String DETERMINE_BIND_UNBIND_OPERATIONS_APPLICATION_0_SERVICE_1 = \"Determine bind/unbind operations of application \\\"{0}\\\" to service \\\"{1}\\\"\";\n+    public static final String VCAP_SERVICES_PROPERTIES_FOR_APPLICATION_CHANGED = \"Vcap services properties for application \\\"{0}\\\" changed: {1}\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3ODgyNQ==", "bodyText": "Is there a possibility to have situation where the variable is not set in the cotext (e.g. some flowable bug)?\nIf so what will happen with the code below?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499378825", "createdAt": "2020-10-05T06:58:44Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineVcapServicesPropertiesChangedStep.java", "diffHunk": "@@ -0,0 +1,44 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.List;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.listeners.BindUnbindServiceEndListener;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"determineVcapServicesPropertiesChangedStep\")\n+@Scope(BeanDefinition.SCOPE_PROTOTYPE)\n+public class DetermineVcapServicesPropertiesChangedStep extends SyncFlowableStep {\n+\n+    @Override\n+    protected StepPhase executeStep(ProcessContext context) {\n+        List<String> services = context.getVariable(Variables.SERVICES_TO_UNBIND_BIND);\n+        CloudApplicationExtended app = context.getVariable(Variables.APP_TO_PROCESS);\n+\n+        boolean changedVcapServicesProperties = services.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM3OTQ0Mg==", "bodyText": "You can rename it to be more explicit with \"unbindServiceFromAppStep\"\nI sugggest this because we could support bind and unbind services from routes at some moment in future.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499379442", "createdAt": "2020-10-05T07:00:13Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UnbindServiceStep.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"unbindServiceStep\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQwMzAxMA==", "bodyText": "I think the previous logic does not rebind at all. It only bind (existing or non-existing) and unbind not needed.\nPlease verify that rebinding is ok", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499403010", "createdAt": "2020-10-05T07:50:30Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceBindUnbindStep.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.domain.CloudApplication;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended.AttributeUpdateStrategy;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileStorageException;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.util.ServiceBindingParametersGetter;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"determineServiceBindUnbindStep\")\n+@Scope(BeanDefinition.SCOPE_PROTOTYPE)\n+public class DetermineServiceBindUnbindStep extends SyncFlowableStep {\n+\n+    @Override\n+    protected StepPhase executeStep(ProcessContext context) throws FileStorageException {\n+        CloudApplicationExtended app = context.getVariable(Variables.APP_TO_PROCESS);\n+        String service = context.getVariable(Variables.SERVICE_TO_UNBIND_BIND);\n+        getStepLogger().debug(Messages.DETERMINE_BIND_UNBIND_OPERATIONS_APPLICATION_0_SERVICE_1, app.getName(), service);\n+\n+        if (!isServicePartFromMta(app, service) && !shouldKeepExistingServiceBindings(app)) {\n+            context.setVariable(Variables.SHOULD_UNBIND_SERVICE, true);\n+            context.setVariable(Variables.SHOULD_BIND_SERVICE, false);\n+            return StepPhase.DONE;\n+        }\n+\n+        CloudControllerClient client = context.getControllerClient();\n+        CloudApplication existingApp = client.getApplication(app.getName());\n+\n+        ServiceBindingParametersGetter serviceBindingParametersGetter = getServiceBindingParametersGetter(context);\n+        Map<String, Object> bindingParameters = serviceBindingParametersGetter.getServiceBindingParametersFromMta(app, service);\n+        if (!doesServiceBindingExist(service, existingApp)) {\n+            context.setVariable(Variables.SHOULD_UNBIND_SERVICE, false);\n+            context.setVariable(Variables.SHOULD_BIND_SERVICE, true);\n+            context.setVariable(Variables.SERVICE_BINDING_PARAMETERS, bindingParameters);\n+            return StepPhase.DONE;\n+        }\n+\n+        if (shouldRebindService(serviceBindingParametersGetter, existingApp, service, bindingParameters)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQwOTQ4OA==", "bodyText": "You could rename to bindServiceToAppStep becaus we could support route services in future.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499409488", "createdAt": "2020-10-05T08:00:31Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/BindServiceStep.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.List;\n+import java.util.Map;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.client.lib.ApplicationServicesUpdateCallback;\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.CloudOperationException;\n+import org.cloudfoundry.multiapps.common.SLException;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"bindServiceStep\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxMTI0Ng==", "bodyText": "You can generilize the naming to \"Manage Application Service Bindings Call Activity\" and propagate the wording.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499411246", "createdAt": "2020-10-05T08:02:02Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/resources/org/cloudfoundry/multiapps/controller/process/deploy-app.bpmn", "diffHunk": "@@ -130,6 +126,25 @@\n       </extensionElements>\n       <conditionExpression xsi:type=\"tFormalExpression\"><![CDATA[${appStateActionsToExecute.contains('START')}]]></conditionExpression>\n     </sequenceFlow>\n+    <callActivity id=\"bindUnbindServicesCallActivity\" name=\"Bind Unbind Services Call Activity\" flowable:async=\"true\" calledElement=\"bindUnbindServiceSubProcess\" flowable:calledElementType=\"key\" flowable:inheritVariables=\"true\" flowable:completeAsync=\"true\" flowable:fallbackToDefaultTenant=\"false\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxMjQ5OQ==", "bodyText": "We can rename it to \"CreateOrUpdateAppStepWithExistingAppTests\"", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499412499", "createdAt": "2020-10-05T08:03:12Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/steps/CreateOrUpdateStepWithExistingAppTest.java", "diffHunk": "@@ -30,18 +30,25 @@\n import org.cloudfoundry.multiapps.controller.client.lib.domain.ServiceKeyToInject;\n import org.cloudfoundry.multiapps.controller.core.util.NameUtil;\n import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.flowable.engine.ProcessEngine;\n import org.junit.jupiter.api.Assertions;\n import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.junit.jupiter.params.ParameterizedTest;\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n+import org.mockito.Mock;\n import org.mockito.Mockito;\n \n+import com.fasterxml.jackson.databind.JsonNode;\n+\n class CreateOrUpdateStepWithExistingAppTest extends SyncFlowableStepTest<CreateOrUpdateAppStep> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQxODc2NQ==", "bodyText": "Rename to \"DeterminServiceBindingsActionsStep\"", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499418765", "createdAt": "2020-10-05T08:14:51Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DetermineServiceBindUnbindStep.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+import java.util.Map;\n+import java.util.Objects;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.domain.CloudApplication;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended.AttributeUpdateStrategy;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileStorageException;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.util.ServiceBindingParametersGetter;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Scope;\n+\n+@Named(\"determineServiceBindUnbindStep\")\n+@Scope(BeanDefinition.SCOPE_PROTOTYPE)\n+public class DetermineServiceBindUnbindStep extends SyncFlowableStep {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyMDQzOA==", "bodyText": "One idea is to change naming only to service and consequent check to !service.isPresent()\nit is to not mislead this service to the optional services term", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499420438", "createdAt": "2020-10-05T08:18:02Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/util/ServiceBindingParametersGetter.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package org.cloudfoundry.multiapps.controller.process.util;\n+\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.text.MessageFormat;\n+import java.util.Collections;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+import java.util.UUID;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.CloudOperationException;\n+import org.cloudfoundry.client.lib.domain.CloudApplication;\n+import org.cloudfoundry.client.lib.domain.CloudEntity;\n+import org.cloudfoundry.client.lib.domain.CloudServiceBinding;\n+import org.cloudfoundry.client.lib.domain.CloudServiceInstance;\n+import org.cloudfoundry.multiapps.common.SLException;\n+import org.cloudfoundry.multiapps.common.util.JsonUtil;\n+import org.cloudfoundry.multiapps.common.util.MapUtil;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudApplicationExtended;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.core.helpers.MtaArchiveElements;\n+import org.cloudfoundry.multiapps.controller.core.security.serialization.SecureSerialization;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileContentProcessor;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileService;\n+import org.cloudfoundry.multiapps.controller.persistence.services.FileStorageException;\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.cloudfoundry.multiapps.controller.process.steps.ProcessContext;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+import org.cloudfoundry.multiapps.mta.handlers.ArchiveHandler;\n+import org.cloudfoundry.multiapps.mta.util.NameUtil;\n+import org.springframework.http.HttpStatus;\n+\n+public class ServiceBindingParametersGetter {\n+\n+    private final ProcessContext context;\n+    private final FileService fileService;\n+    private final long maxManifestSize;\n+\n+    public ServiceBindingParametersGetter(ProcessContext context, FileService fileService, long maxManifestSize) {\n+        this.context = context;\n+        this.fileService = fileService;\n+        this.maxManifestSize = maxManifestSize;\n+    }\n+\n+    public Map<String, Object> getServiceBindingParametersFromMta(CloudApplicationExtended app, String serviceName)\n+        throws FileStorageException {\n+        Optional<CloudServiceInstanceExtended> optionalService = getService(context.getVariable(Variables.SERVICES_TO_BIND), serviceName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTQyNjIzNg==", "bodyText": "This will skip test of two differents flows (New and old), is that right?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#discussion_r499426236", "createdAt": "2020-10-05T08:28:33Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/steps/CreateOrUpdateStepWithExistingAppTest.java", "diffHunk": "@@ -359,10 +366,19 @@ CloudServiceInstanceExtended toCloudService() {\n \n     @Override\n     protected CreateOrUpdateAppStep createStep() {\n-        return new CreateAppStepMock();\n+        return new CreateAppStepMock(processEngine);\n     }\n \n     private static class CreateAppStepMock extends CreateOrUpdateAppStep {\n+        public CreateAppStepMock(ProcessEngine processEngine) {\n+            super(processEngine);\n+        }\n+\n+        @Override\n+        protected JsonNode getBindUnbindServicesCallActivity(ProcessContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ae4f9425ec33a6d2adf380b25ef07b0b218c016c"}, "originalPosition": 40}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "55c9261e903f0341772025dca50d224e39937284", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/55c9261e903f0341772025dca50d224e39937284", "committedDate": "2020-10-06T13:29:51Z", "message": "Refactor 1"}, "afterCommit": {"oid": "721df3a73550cd35d8d2ab086ccb48089f85124d", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/721df3a73550cd35d8d2ab086ccb48089f85124d", "committedDate": "2020-10-07T13:11:40Z", "message": "Refactor 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "721df3a73550cd35d8d2ab086ccb48089f85124d", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/721df3a73550cd35d8d2ab086ccb48089f85124d", "committedDate": "2020-10-07T13:11:40Z", "message": "Refactor 2"}, "afterCommit": {"oid": "5338a0d727e1c4b0d49a9224c12475a7ee52beeb", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/5338a0d727e1c4b0d49a9224c12475a7ee52beeb", "committedDate": "2020-10-07T13:26:34Z", "message": "Refactor 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAzOTY2MDc4", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#pullrequestreview-503966078", "createdAt": "2020-10-07T14:51:19Z", "commit": {"oid": "5338a0d727e1c4b0d49a9224c12475a7ee52beeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5338a0d727e1c4b0d49a9224c12475a7ee52beeb", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/5338a0d727e1c4b0d49a9224c12475a7ee52beeb", "committedDate": "2020-10-07T13:26:34Z", "message": "Refactor 2"}, "afterCommit": {"oid": "51ab57c5c313e249c75cff57c3d8eb44a19bc6eb", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/51ab57c5c313e249c75cff57c3d8eb44a19bc6eb", "committedDate": "2020-10-08T13:07:57Z", "message": "Refactor 2"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0ODc4NTM2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#pullrequestreview-504878536", "createdAt": "2020-10-08T15:00:46Z", "commit": {"oid": "51ab57c5c313e249c75cff57c3d8eb44a19bc6eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1NDY5MDQ2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/954#pullrequestreview-505469046", "createdAt": "2020-10-09T08:32:19Z", "commit": {"oid": "5dae3fb1dbfe9e087aea87a3e619a8ccce482e5c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e399323e77803452284b72cc3dd616d54b541dc", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6e399323e77803452284b72cc3dd616d54b541dc", "committedDate": "2020-10-09T09:00:51Z", "message": "Make parallel bind/unbind of services\n\nJIRA:LMCROSSITXSADEPLOY-1867"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5dae3fb1dbfe9e087aea87a3e619a8ccce482e5c", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/5dae3fb1dbfe9e087aea87a3e619a8ccce482e5c", "committedDate": "2020-10-09T08:00:21Z", "message": "Fix log messages"}, "afterCommit": {"oid": "6e399323e77803452284b72cc3dd616d54b541dc", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6e399323e77803452284b72cc3dd616d54b541dc", "committedDate": "2020-10-09T09:00:51Z", "message": "Make parallel bind/unbind of services\n\nJIRA:LMCROSSITXSADEPLOY-1867"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 806, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}