{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTc2NjI1", "number": 984, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzo0OToyOVrOEzzQCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0MTowOVrOEz0oaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzUyNTIyOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzo0OToyOVrOHrP1ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMzo0OToyOVrOHrP1ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTExMDI2Nw==", "bodyText": "Will adopt the released version", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/984#discussion_r515110267", "createdAt": "2020-10-30T13:49:29Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "pom.xml", "diffHunk": "@@ -37,7 +37,7 @@\n         <jackson.version>2.11.2</jackson.version>\n         <liquibase.version>4.1.1</liquibase.version>\n         <liquibase-slf4j.version>4.0.0</liquibase-slf4j.version>\n-        <cloudfoundry-client.version>2.0.1</cloudfoundry-client.version>\n+        <cloudfoundry-client.version>2.1.0-SNAPSHOT</cloudfoundry-client.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7917accaf01801bde5aeb7c96e4c29967c04a5b6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzc1MTQ3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/security/SpaceWithUser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0MTowOVrOHrSDGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowMTo1MVrOHrTFTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0NjUyMA==", "bodyText": "I think the convention is to have any getters / other methods before equals and hashCode", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/984#discussion_r515146520", "createdAt": "2020-10-30T14:41:09Z", "author": {"login": "radito3"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/security/SpaceWithUser.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.cloudfoundry.multiapps.controller.web.security;\n+\n+import java.util.Objects;\n+import java.util.UUID;\n+\n+public class SpaceWithUser {\n+\n+    private final UUID userGuid;\n+    private final UUID spaceGuid;\n+\n+    public SpaceWithUser(UUID userGuid, UUID spaceGuid) {\n+        this.userGuid = userGuid;\n+        this.spaceGuid = spaceGuid;\n+    }\n+\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) {\n+            return true;\n+        }\n+        if (object == null || getClass() != object.getClass()) {\n+            return false;\n+        }\n+        SpaceWithUser spaceWithUser = (SpaceWithUser) object;\n+        return Objects.equals(userGuid, spaceWithUser.userGuid) && Objects.equals(spaceGuid, spaceWithUser.spaceGuid);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(userGuid, spaceGuid);\n+    }\n+\n+    public UUID getUserGuid() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3931ef088562a2bf05862d7f80dde5d6aba5cce8"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MzQ3MQ==", "bodyText": "Done", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/984#discussion_r515163471", "createdAt": "2020-10-30T15:01:51Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/security/SpaceWithUser.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.cloudfoundry.multiapps.controller.web.security;\n+\n+import java.util.Objects;\n+import java.util.UUID;\n+\n+public class SpaceWithUser {\n+\n+    private final UUID userGuid;\n+    private final UUID spaceGuid;\n+\n+    public SpaceWithUser(UUID userGuid, UUID spaceGuid) {\n+        this.userGuid = userGuid;\n+        this.spaceGuid = spaceGuid;\n+    }\n+\n+    @Override\n+    public boolean equals(Object object) {\n+        if (this == object) {\n+            return true;\n+        }\n+        if (object == null || getClass() != object.getClass()) {\n+            return false;\n+        }\n+        SpaceWithUser spaceWithUser = (SpaceWithUser) object;\n+        return Objects.equals(userGuid, spaceWithUser.userGuid) && Objects.equals(spaceGuid, spaceWithUser.spaceGuid);\n+    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(userGuid, spaceGuid);\n+    }\n+\n+    public UUID getUserGuid() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0NjUyMA=="}, "originalCommit": {"oid": "3931ef088562a2bf05862d7f80dde5d6aba5cce8"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 456, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}