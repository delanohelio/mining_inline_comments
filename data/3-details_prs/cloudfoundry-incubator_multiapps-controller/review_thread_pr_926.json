{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2MDcwNjYy", "number": 926, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNDoxNVrOEXL6mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0MToyNFrOEXMSag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzQ3OTI5OnYy", "diffSide": "LEFT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateServiceStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNDoxNVrOG-1Yeg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNDoxNVrOG-1Yeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzOTUxNA==", "bodyText": "The unit tests fail after this change. I'll fix'em after I get some lunch.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/926#discussion_r468539514", "createdAt": "2020-08-11T12:24:15Z", "author": {"login": "nictas"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateServiceStep.java", "diffHunk": "@@ -95,20 +92,10 @@ private void processServiceCreationFailure(ProcessContext context, CloudServiceI\n                              ExceptionMessageTailMapper.map(configuration, CloudComponents.SERVICE_BROKERS, service.getLabel()));\n     }\n \n-    private void updateServiceMetadata(CloudServiceInstanceExtended serviceToProcess, CloudControllerClient client) {\n-        ImmutableCloudServiceInstance serviceWithMetadata = ImmutableCloudServiceInstance.copyOf(serviceToProcess);\n-        CloudMetadata serviceMeta = client.getServiceInstance(serviceWithMetadata.getName())\n-                                          .getMetadata();\n-        serviceWithMetadata = serviceWithMetadata.withMetadata(serviceMeta);\n-        client.updateServiceInstanceMetadata(serviceWithMetadata.getMetadata()\n-                                                                .getGuid(),\n-                                             serviceWithMetadata.getV3Metadata());\n-    }\n-\n     @Override\n     protected List<AsyncExecution> getAsyncStepExecutions(ProcessContext context) {\n-        return Collections.singletonList(new PollServiceCreateOrUpdateOperationsExecution(getServiceOperationGetter(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c9c27302f82ce3f6b883788b2e6785f4db1fc57"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzQ4MjA3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceMetadataExecution.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNTowM1rOG-1aGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNTowM1rOG-1aGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODUzOTkzMQ==", "bodyText": "Will be extracted in the Messages class after I get some lunch.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/926#discussion_r468539931", "createdAt": "2020-08-11T12:25:03Z", "author": {"login": "nictas"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceMetadataExecution.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.domain.CloudMetadata;\n+import org.cloudfoundry.client.lib.domain.CloudServiceInstance;\n+import org.cloudfoundry.client.lib.domain.ImmutableCloudServiceInstance;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+\n+public class UpdateServiceMetadataExecution implements AsyncExecution {\n+\n+    @Override\n+    public AsyncExecutionState execute(ProcessContext context) {\n+        CloudServiceInstanceExtended serviceInstance = context.getVariable(Variables.SERVICE_TO_PROCESS);\n+        updateMetadata(context.getControllerClient(), serviceInstance);\n+        return AsyncExecutionState.FINISHED;\n+    }\n+\n+    private void updateMetadata(CloudControllerClient client, CloudServiceInstanceExtended serviceInstance) {\n+        CloudMetadata serviceMetadata = client.getServiceInstance(serviceInstance.getName())\n+                                              .getMetadata();\n+        CloudServiceInstance serviceWithMetadata = ImmutableCloudServiceInstance.copyOf(serviceInstance)\n+                                                                                .withMetadata(serviceMetadata);\n+        client.updateServiceInstanceMetadata(serviceWithMetadata.getMetadata()\n+                                                                .getGuid(),\n+                                             serviceWithMetadata.getV3Metadata());\n+    }\n+\n+    @Override\n+    public String getPollingErrorMessage(ProcessContext context) {\n+        CloudServiceInstanceExtended serviceInstance = context.getVariable(Variables.SERVICE_TO_PROCESS);\n+        return MessageFormat.format(\"Could not update metadata of service instance \\\"{0}\\\"\", serviceInstance.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c9c27302f82ce3f6b883788b2e6785f4db1fc57"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzQ4NjEwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceMetadataExecution.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNjoxMVrOG-1ceA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjoyNjoxMVrOG-1ceA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0MDUzNg==", "bodyText": "Don't get this metadata confused with the V3 metadata. This one is just the V2 metadata of the resource that includes its GUID, created/updated timestamps, etc. The V3 metadata comes from the getV3Metadata() method.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/926#discussion_r468540536", "createdAt": "2020-08-11T12:26:11Z", "author": {"login": "nictas"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/UpdateServiceMetadataExecution.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package org.cloudfoundry.multiapps.controller.process.steps;\n+\n+import java.text.MessageFormat;\n+\n+import org.cloudfoundry.client.lib.CloudControllerClient;\n+import org.cloudfoundry.client.lib.domain.CloudMetadata;\n+import org.cloudfoundry.client.lib.domain.CloudServiceInstance;\n+import org.cloudfoundry.client.lib.domain.ImmutableCloudServiceInstance;\n+import org.cloudfoundry.multiapps.controller.client.lib.domain.CloudServiceInstanceExtended;\n+import org.cloudfoundry.multiapps.controller.process.variables.Variables;\n+\n+public class UpdateServiceMetadataExecution implements AsyncExecution {\n+\n+    @Override\n+    public AsyncExecutionState execute(ProcessContext context) {\n+        CloudServiceInstanceExtended serviceInstance = context.getVariable(Variables.SERVICE_TO_PROCESS);\n+        updateMetadata(context.getControllerClient(), serviceInstance);\n+        return AsyncExecutionState.FINISHED;\n+    }\n+\n+    private void updateMetadata(CloudControllerClient client, CloudServiceInstanceExtended serviceInstance) {\n+        CloudMetadata serviceMetadata = client.getServiceInstance(serviceInstance.getName())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c9c27302f82ce3f6b883788b2e6785f4db1fc57"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkyNzU0MDI2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateServiceStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0MToyNFrOG-19ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQxMjo0MToyNFrOG-19ZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODU0ODk2NA==", "bodyText": "We should ensure that it will be last on the list of other executions somehow.\nI dont have perfect solutions but there are two options:\n\nunit test\nshort comment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/926#discussion_r468548964", "createdAt": "2020-08-11T12:41:24Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CreateServiceStep.java", "diffHunk": "@@ -95,20 +92,10 @@ private void processServiceCreationFailure(ProcessContext context, CloudServiceI\n                              ExceptionMessageTailMapper.map(configuration, CloudComponents.SERVICE_BROKERS, service.getLabel()));\n     }\n \n-    private void updateServiceMetadata(CloudServiceInstanceExtended serviceToProcess, CloudControllerClient client) {\n-        ImmutableCloudServiceInstance serviceWithMetadata = ImmutableCloudServiceInstance.copyOf(serviceToProcess);\n-        CloudMetadata serviceMeta = client.getServiceInstance(serviceWithMetadata.getName())\n-                                          .getMetadata();\n-        serviceWithMetadata = serviceWithMetadata.withMetadata(serviceMeta);\n-        client.updateServiceInstanceMetadata(serviceWithMetadata.getMetadata()\n-                                                                .getGuid(),\n-                                             serviceWithMetadata.getV3Metadata());\n-    }\n-\n     @Override\n     protected List<AsyncExecution> getAsyncStepExecutions(ProcessContext context) {\n-        return Collections.singletonList(new PollServiceCreateOrUpdateOperationsExecution(getServiceOperationGetter(),\n-                                                                                          getServiceProgressReporter()));\n+        return Arrays.asList(new PollServiceCreateOrUpdateOperationsExecution(getServiceOperationGetter(), getServiceProgressReporter()),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c9c27302f82ce3f6b883788b2e6785f4db1fc57"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 387, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}