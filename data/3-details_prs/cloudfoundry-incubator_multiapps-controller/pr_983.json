{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTMxMTAy", "number": 983, "title": "Namespace to routes merge", "bodyText": "", "createdAt": "2020-10-30T11:25:00Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983", "merged": true, "mergeCommit": {"oid": "78383ab551a7a2f7d68f4f7a969922a9b59458f0"}, "closed": true, "closedAt": "2020-11-05T16:14:26Z", "author": {"login": "theghost5800"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXpqPEAFqTUyMDgxMDg1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdZkRKMAFqTUyNDM5MjM5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODEwODU0", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-520810854", "createdAt": "2020-10-30T15:59:58Z", "commit": {"oid": "cdd0b30ee3ed25c9005eef0d777e2d8b8af51b73"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjowNzo0NlrOHrV8bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo0NjowNFrOHrXXAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxMDM1MQ==", "bodyText": "maybe rename this to initValidators instead of get, since it should be called more than once in the constructor of an instance; or just put this in the constructor and overwrite in child class", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r515210351", "createdAt": "2020-10-30T16:07:46Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -21,15 +20,17 @@\n     private final Map<String, ParameterValidator> validators;\n     private final Set<String> supportedParamsWithoutValidators;\n \n-    public RoutesValidator() {\n-        this.validators = new HashMap<>();\n-        ParameterValidator routeValidator = new RouteValidator();\n-        this.validators.put(routeValidator.getParameterName(), routeValidator);\n-\n-        this.supportedParamsWithoutValidators = new TreeSet<>();\n+    public RoutesValidator(String namespace, boolean applyNamespaceGlobal) {\n+        this.validators = getRoutesValidators(namespace, applyNamespaceGlobal);\n+\t\tthis.supportedParamsWithoutValidators = new TreeSet<>();\n         this.supportedParamsWithoutValidators.add(SupportedParameters.NO_HOSTNAME);\n     }\n \n+    protected Map<String, ParameterValidator> getRoutesValidators(String namespace, boolean applyNamespaceGlobal) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdd0b30ee3ed25c9005eef0d777e2d8b8af51b73"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIxMDgyNQ==", "bodyText": "same here", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r515210825", "createdAt": "2020-10-30T16:08:30Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "diffHunk": "@@ -1,22 +1,37 @@\n package org.cloudfoundry.multiapps.controller.core.validators.parameters;\n \n+import java.util.Collections;\n import java.util.Locale;\n import java.util.Map;\n+import java.util.Set;\n \n import org.cloudfoundry.multiapps.common.SLException;\n+import org.cloudfoundry.multiapps.common.util.MapUtil;\n+import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n import org.cloudfoundry.multiapps.controller.core.util.NameUtil;\n import org.cloudfoundry.multiapps.mta.model.Module;\n \n public abstract class RoutePartValidator implements ParameterValidator {\n \n+    protected final String namespace;\n+    protected final boolean applyNamespaceGlobal;\n+\n+    public RoutePartValidator(String namespace, boolean applyNamespaceGlobal) {\n+        this.namespace = namespace;\n+        this.applyNamespaceGlobal = applyNamespaceGlobal;\n+    }\n+\n     @Override\n     public String attemptToCorrect(Object routePart, final Map<String, Object> context) {\n         if (!(routePart instanceof String)) {\n             throw new SLException(getErrorMessage(), routePart);\n         }\n \n-        String result = (String) routePart;\n-        result = NameUtil.getNameWithProperLength(result, getRoutePartMaxLength());\n+        // FIXME This logic does not work in case where apply-namespace is set to false", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cdd0b30ee3ed25c9005eef0d777e2d8b8af51b73"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIyNTQ5NA==", "bodyText": "does this need to be in a separate method? it seems to only hide what the method is actually doing with the generic 'getRouteName'", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r515225494", "createdAt": "2020-10-30T16:32:41Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "diffHunk": "@@ -43,6 +27,10 @@ public String attemptToCorrect(Object routePart, final Map<String, Object> conte\n         return result;\n     }\n \n+    protected String getRouteName(Object routePart, Map<String, Object> context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzMjEyMw==", "bodyText": "is it guaranteed that these parameters are in the context? this way of processing does not specify a default value if they are not present.\nAlso this whole method is a bit hard to understand. Maybe also name 'updatedParameters' something more clear e.g. globalParameterValues", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r515232123", "createdAt": "2020-10-30T16:43:56Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -74,22 +73,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n-                         .map(route -> attemptToCorrectParameterMap(route, context))\n+                         .map(routesElement -> getRelatedParametersForContext(routesElement, context))\n+                         .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem, Map<String, Object> context) {\n+    private Map<String, Object> getRelatedParametersForContext(Map<String, Object> routesElement, Map<String, Object> context) {\n+        Map<String, Object> updatedContext = new HashMap<>(routesElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> updatedParamters = relatedParameters.stream()\n+                                                                .filter(relatedParameter -> doesParameterMissingInRoutesElement(relatedParameter,\n+                                                                                                                                routesElement,\n+                                                                                                                                context))\n+                                                                .collect(Collectors.toMap(Function.identity(), context::get));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTIzMzUzNg==", "bodyText": "rename this method to isParameterMissingInRoutes or maybe even isGlobalParameterValueOverridden", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r515233536", "createdAt": "2020-10-30T16:46:04Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -74,22 +73,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n-                         .map(route -> attemptToCorrectParameterMap(route, context))\n+                         .map(routesElement -> getRelatedParametersForContext(routesElement, context))\n+                         .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem, Map<String, Object> context) {\n+    private Map<String, Object> getRelatedParametersForContext(Map<String, Object> routesElement, Map<String, Object> context) {\n+        Map<String, Object> updatedContext = new HashMap<>(routesElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> updatedParamters = relatedParameters.stream()\n+                                                                .filter(relatedParameter -> doesParameterMissingInRoutesElement(relatedParameter,\n+                                                                                                                                routesElement,\n+                                                                                                                                context))\n+                                                                .collect(Collectors.toMap(Function.identity(), context::get));\n+        updatedContext.putAll(updatedParamters);\n+        return updatedContext;\n+    }\n+\n+    private boolean doesParameterMissingInRoutesElement(String relatedParameter, Map<String, Object> routesElement,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyMzM2MzIy", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-522336322", "createdAt": "2020-11-03T09:56:29Z", "commit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QwOTo1NjoyOVrOHsnWcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMTowODowM1rOHsp_Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0NDExNA==", "bodyText": "Can we use List.of(...)?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516544114", "createdAt": "2020-11-03T09:56:29Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/helpers/MtaDescriptorPropertiesResolver.java", "diffHunk": "@@ -42,8 +41,7 @@ public MtaDescriptorPropertiesResolver(MtaDescriptorPropertiesResolverContext co\n     }\n \n     public List<ParameterValidator> getValidatorsList() {\n-        return Arrays.asList(new HostValidator(context.getNamespace(), context.applyNamespace()),\n-                             new IdleHostValidator(context.getNamespace(), context.applyNamespace()), new DomainValidator(),\n+        return Arrays.asList(new HostValidator(), new DomainValidator(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0NjU3NA==", "bodyText": "Can we use StringUtils.startsWith(routePart, namespace)?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516546574", "createdAt": "2020-11-03T10:00:22Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/HostValidator.java", "diffHunk": "@@ -1,15 +1,39 @@\n package org.cloudfoundry.multiapps.controller.core.validators.parameters;\n \n+import java.util.Collections;\n import java.util.Map;\n+import java.util.Set;\n \n-import org.apache.commons.lang3.StringUtils;\n+import org.cloudfoundry.multiapps.common.util.MapUtil;\n import org.cloudfoundry.multiapps.controller.core.Messages;\n import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+import org.cloudfoundry.multiapps.controller.core.util.NameUtil;\n \n public class HostValidator extends RoutePartValidator {\n \n+    private final String namespace;\n+    private final boolean applyNamespaceGlobal;\n+\n+    public HostValidator() {\n+        this.namespace = null;\n+        this.applyNamespaceGlobal = false;\n+    }\n+\n     public HostValidator(String namespace, boolean applyNamespaceGlobal) {\n-        super(namespace, applyNamespaceGlobal);\n+        this.namespace = namespace;\n+        this.applyNamespaceGlobal = applyNamespaceGlobal;\n+    }\n+\n+    @Override\n+    public boolean isValid(Object routePart, final Map<String, Object> context) {\n+        boolean validRoutePart = super.isValid(routePart, context);\n+        if (!validRoutePart) {\n+            return false;\n+        }\n+        if (shouldApplyNamespace(context)) {\n+            return ((String) routePart).startsWith(namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU0OTQ2NQ==", "bodyText": "This value is always true, maybe it will be easier if we return true instead of validRoutePart.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516549465", "createdAt": "2020-11-03T10:05:11Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/HostValidator.java", "diffHunk": "@@ -1,15 +1,39 @@\n package org.cloudfoundry.multiapps.controller.core.validators.parameters;\n \n+import java.util.Collections;\n import java.util.Map;\n+import java.util.Set;\n \n-import org.apache.commons.lang3.StringUtils;\n+import org.cloudfoundry.multiapps.common.util.MapUtil;\n import org.cloudfoundry.multiapps.controller.core.Messages;\n import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+import org.cloudfoundry.multiapps.controller.core.util.NameUtil;\n \n public class HostValidator extends RoutePartValidator {\n \n+    private final String namespace;\n+    private final boolean applyNamespaceGlobal;\n+\n+    public HostValidator() {\n+        this.namespace = null;\n+        this.applyNamespaceGlobal = false;\n+    }\n+\n     public HostValidator(String namespace, boolean applyNamespaceGlobal) {\n-        super(namespace, applyNamespaceGlobal);\n+        this.namespace = namespace;\n+        this.applyNamespaceGlobal = applyNamespaceGlobal;\n+    }\n+\n+    @Override\n+    public boolean isValid(Object routePart, final Map<String, Object> context) {\n+        boolean validRoutePart = super.isValid(routePart, context);\n+        if (!validRoutePart) {\n+            return false;\n+        }\n+        if (shouldApplyNamespace(context)) {\n+            return ((String) routePart).startsWith(namespace);\n+        }\n+        return validRoutePart;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU1OTM4MA==", "bodyText": "updatedParamteres", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516559380", "createdAt": "2020-11-03T10:20:59Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -74,22 +73,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n-                         .map(route -> attemptToCorrectParameterMap(route, context))\n+                         .map(routesElement -> getRelatedParametersForContext(routesElement, context))\n+                         .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem, Map<String, Object> context) {\n+    private Map<String, Object> getRelatedParametersForContext(Map<String, Object> routesElement, Map<String, Object> context) {\n+        Map<String, Object> updatedContext = new HashMap<>(routesElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> updatedParamters = relatedParameters.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MDQ2OQ==", "bodyText": "maybe isParameterMissingInRoutesElement?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516560469", "createdAt": "2020-11-03T10:22:44Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -74,22 +73,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n-                         .map(route -> attemptToCorrectParameterMap(route, context))\n+                         .map(routesElement -> getRelatedParametersForContext(routesElement, context))\n+                         .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem, Map<String, Object> context) {\n+    private Map<String, Object> getRelatedParametersForContext(Map<String, Object> routesElement, Map<String, Object> context) {\n+        Map<String, Object> updatedContext = new HashMap<>(routesElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> updatedParamters = relatedParameters.stream()\n+                                                                .filter(relatedParameter -> doesParameterMissingInRoutesElement(relatedParameter,\n+                                                                                                                                routesElement,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU2MjU1Nw==", "bodyText": "orginialElement looks better in my opinion", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516562557", "createdAt": "2020-11-03T10:26:07Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -74,22 +73,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n-                         .map(route -> attemptToCorrectParameterMap(route, context))\n+                         .map(routesElement -> getRelatedParametersForContext(routesElement, context))\n+                         .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem, Map<String, Object> context) {\n+    private Map<String, Object> getRelatedParametersForContext(Map<String, Object> routesElement, Map<String, Object> context) {\n+        Map<String, Object> updatedContext = new HashMap<>(routesElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> updatedParamters = relatedParameters.stream()\n+                                                                .filter(relatedParameter -> doesParameterMissingInRoutesElement(relatedParameter,\n+                                                                                                                                routesElement,\n+                                                                                                                                context))\n+                                                                .collect(Collectors.toMap(Function.identity(), context::get));\n+        updatedContext.putAll(updatedParamters);\n+        return updatedContext;\n+    }\n+\n+    private boolean doesParameterMissingInRoutesElement(String relatedParameter, Map<String, Object> routesElement,\n+                                                        Map<String, Object> context) {\n+        return !routesElement.containsKey(relatedParameter) && context.containsKey(relatedParameter);\n+    }\n+\n+    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjU4NzI5MA==", "bodyText": "Can we move this in the Builder class?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r516587290", "createdAt": "2020-11-03T11:08:03Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/helpers/SystemParameters.java", "diffHunk": "@@ -54,6 +55,9 @@ public SystemParameters(Builder builder) {\n         this.credentialsGenerator = builder.credentialsGenerator;\n         this.reserveTemporaryRoutes = builder.reserveTemporaryRoutes;\n         this.timestampSupplier = builder.timestampSupplier;\n+        this.namespace = builder.namespace;\n+        this.applyNamespace = builder.applyNamespace;\n+        this.hostValidator = new HostValidator(namespace, applyNamespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3450d38736712928ef4199278c85ef299c8f7d26"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIyNTEyNjg1", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-522512685", "createdAt": "2020-11-03T13:51:20Z", "commit": {"oid": "5f1558acf675c6c520c168b478383033ddecdf0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f1558acf675c6c520c168b478383033ddecdf0a", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/5f1558acf675c6c520c168b478383033ddecdf0a", "committedDate": "2020-11-03T13:08:47Z", "message": "Refactor"}, "afterCommit": {"oid": "6fa8385a41fd5469e5f2d59ba5f8448d98ba4e3c", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6fa8385a41fd5469e5f2d59ba5f8448d98ba4e3c", "committedDate": "2020-11-05T10:59:11Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6fa8385a41fd5469e5f2d59ba5f8448d98ba4e3c", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6fa8385a41fd5469e5f2d59ba5f8448d98ba4e3c", "committedDate": "2020-11-05T10:59:11Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}, "afterCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/dd31019409757de8297e367dd7769ccc19d62239", "committedDate": "2020-11-05T13:37:23Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0Mjc4MDA0", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-524278004", "createdAt": "2020-11-05T13:50:56Z", "commit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo1MDo1NlrOHuEJ7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo1MzoyNVrOHuEQ0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2NDYyMg==", "bodyText": "Is this constructor even needed now?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518064622", "createdAt": "2020-11-05T13:50:56Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/IdleRoutesValidator.java", "diffHunk": "@@ -0,0 +1,24 @@\n+package org.cloudfoundry.multiapps.controller.core.validators.parameters;\n+\n+import java.util.Map;\n+\n+import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+\n+public class IdleRoutesValidator extends RoutesValidator {\n+\n+    public IdleRoutesValidator(String namespace, boolean applyNamespaceGlobal) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA2NjM4Ng==", "bodyText": "doesn't this check the opposite of what the method name implies? my mistake - you can negate the check or name it isGlobalParameterValueInAction or isGlobalParameterValueNotOverridden :D", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518066386", "createdAt": "2020-11-05T13:53:25Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -71,22 +74,42 @@ public Object attemptToCorrect(Object routes, final Map<String, Object> context)\n         }\n \n         return routesList.stream()\n+                         .map(originalElement -> getUpdatedAllRouteElements(originalElement, context))\n                          .map(this::attemptToCorrectParameterMap)\n                          .collect(Collectors.toList());\n     }\n \n-    private Map<String, Object> attemptToCorrectParameterMap(Map<String, Object> originalElem) {\n+    private Map<String, Object> getUpdatedAllRouteElements(Map<String, Object> routeElement, Map<String, Object> context) {\n+        Map<String, Object> updatedAllRouteElements = new HashMap<>(routeElement);\n+        Set<String> relatedParameters = getRelatedParameterNames();\n+        Map<String, Object> globalParametersValues = relatedParameters.stream()\n+                                                                      .filter(relatedParameter -> isGlobalParameterValueOverridden(relatedParameter,\n+                                                                                                                                   routeElement,\n+                                                                                                                                   context))\n+                                                                      .collect(Collectors.toMap(Function.identity(), context::get));\n+        updatedAllRouteElements.putAll(globalParametersValues);\n+        return updatedAllRouteElements;\n+    }\n+\n+    private boolean isGlobalParameterValueOverridden(String relatedParameter, Map<String, Object> routeElement,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 75}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MzAyNjM4", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-524302638", "createdAt": "2020-11-05T14:16:22Z", "commit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNDoxNjoyM1rOHuFRnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxNDoyNjo0NFrOHuFw0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA4Mjk3Mw==", "bodyText": "Do we really need namespace and applyNamespace in the Builder class? Is it possible to have a method in CollectSystemParametersStep which creates HostValidator and passes it to the builder? This way the builder won't need to create the HostValidator it will be injected instead.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518082973", "createdAt": "2020-11-05T14:16:23Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/CollectSystemParametersStep.java", "diffHunk": "@@ -111,6 +113,8 @@ private SystemParameters createSystemParameters(ProcessContext context, CloudCon\n                                              .reserveTemporaryRoutes(reserveTemporaryRoutes)\n                                              .credentialsGenerator(credentialsGeneratorSupplier.get())\n                                              .timestampSupplier(timestampSupplier)\n+                                             .namespace(namespace)\n+                                             .applyNamespace(applyNamespace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA4NTk3Nw==", "bodyText": "List.of() ?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518085977", "createdAt": "2020-11-05T14:20:17Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidator.java", "diffHunk": "@@ -17,8 +17,8 @@\n \n     private final List<ParameterValidator> validators;\n \n-    public RouteValidator() {\n-        this.validators = Arrays.asList(new HostValidator(), new DomainValidator());\n+    public RouteValidator(String namespace, boolean applyNamespaceGlobal) {\n+        this.validators = Arrays.asList(new HostValidator(namespace, applyNamespaceGlobal), new DomainValidator());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA4OTkwMA==", "bodyText": "Cool!", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518089900", "createdAt": "2020-11-05T14:25:14Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/helpers/SystemParametersTest.java", "diffHunk": "@@ -54,26 +61,18 @@ void initialize() throws Exception {\n                .thenReturn(TIMESTAMP);\n     }\n \n-    @Test\n-    void testGeneralParametersWithoutReserveTemporaryRoutes() throws Exception {\n-        testGeneralParameters(false);\n-    }\n-\n-    @Test\n-    void testGeneralParametersWithReserveTemporaryRoutes() throws Exception {\n-        testGeneralParameters(true);\n-    }\n-\n-    private void testGeneralParameters(Boolean reserveTemporaryRoutes) throws Exception {\n-        SystemParameters testedClass = createSystemParameters(reserveTemporaryRoutes);\n+    @ParameterizedTest\n+    @ValueSource(booleans = { false, true })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA5MDk2MA==", "bodyText": "Can we use assertEquals instead of if/else?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#discussion_r518090960", "createdAt": "2020-11-05T14:26:44Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/helpers/SystemParametersTest.java", "diffHunk": "@@ -194,6 +198,12 @@ private void verifyModuleParameters(String moduleName, Map<String, Object> modul\n             assertFalse(moduleParameters.containsKey(SupportedParameters.IDLE_DOMAIN));\n         }\n \n+        if (applyNamespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239"}, "originalPosition": 148}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "947e2f35874a80f918c3932a7cc2b0d72c8818e9", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/947e2f35874a80f918c3932a7cc2b0d72c8818e9", "committedDate": "2020-11-05T15:36:28Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd31019409757de8297e367dd7769ccc19d62239", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/dd31019409757de8297e367dd7769ccc19d62239", "committedDate": "2020-11-05T13:37:23Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}, "afterCommit": {"oid": "947e2f35874a80f918c3932a7cc2b0d72c8818e9", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/947e2f35874a80f918c3932a7cc2b0d72c8818e9", "committedDate": "2020-11-05T15:36:28Z", "message": "Add namespace to routes\n\nJIRA:LMCROSSITXSADEPLOY-2124"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI0MzkyMzkx", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/983#pullrequestreview-524392391", "createdAt": "2020-11-05T15:40:40Z", "commit": {"oid": "947e2f35874a80f918c3932a7cc2b0d72c8818e9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 837, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}