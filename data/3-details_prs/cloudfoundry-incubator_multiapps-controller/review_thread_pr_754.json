{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczNjM1NzQ0", "number": 754, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MjoyMVrODfEv9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyNjowOFrODfFaGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEwMjYyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MjoyMVrOFokUcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MjoyMVrOFokUcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjQxNg==", "bodyText": "Do we need to report the delay at this point in the process?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082416", "createdAt": "2020-02-12T07:42:21Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/CreateOrUpdateServiceEndListener.java", "diffHunk": "@@ -35,5 +50,8 @@ public void notify(DelegateExecution context) {\n         superExecutionId = superExecutionResult.getSuperExecutionId();\n \n         runtimeService.setVariable(superExecutionId, exportedVariableName, isServiceUpdated);\n+\n+        ProcessTime processTime = processTimeCalculator.calculate(context.getProcessInstanceId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2908df80c57e344c444fcfbd72bf91b544e45163"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEwMjk3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MjoyOVrOFokUpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0MjoyOVrOFokUpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjQ2OA==", "bodyText": "Do we need to report the delay at this point in the process?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082468", "createdAt": "2020-02-12T07:42:29Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/DeployAppSubProcessEndListener.java", "diffHunk": "@@ -1,32 +1,43 @@\n package com.sap.cloud.lm.sl.cf.process.listeners;\n \n+import javax.inject.Inject;\n import javax.inject.Named;\n \n import org.cloudfoundry.client.lib.domain.CloudServiceBroker;\n import org.flowable.engine.delegate.DelegateExecution;\n+import org.flowable.engine.delegate.ExecutionListener;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.sap.cloud.lm.sl.cf.process.Constants;\n import com.sap.cloud.lm.sl.cf.process.steps.StepsUtil;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTime;\n+import com.sap.cloud.lm.sl.cf.process.util.ProcessTimeCalculator.ProcessTimeLogger;\n \n @Named(\"deployAppSubProcessEndListener\")\n-public class DeployAppSubProcessEndListener extends AbstractProcessExecutionListener {\n+public class DeployAppSubProcessEndListener implements ExecutionListener {\n \n     private static final long serialVersionUID = 1L;\n     private static final Logger LOGGER = LoggerFactory.getLogger(DeployAppSubProcessEndListener.class);\n \n+    private ProcessTimeCalculator processTimeCalculator;\n+\n+    @Inject\n+    public DeployAppSubProcessEndListener(ProcessTimeCalculator processTimeCalculator) {\n+        this.processTimeCalculator = processTimeCalculator;\n+    }\n+\n     @Override\n-    protected void notifyInternal(DelegateExecution context) {\n+    public void notify(DelegateExecution context) {\n         CloudServiceBroker cloudServiceBrokerExtended = StepsUtil.getCreatedOrUpdatedServiceBroker(context);\n \n         if (cloudServiceBrokerExtended != null) {\n             StepsUtil.setVariableInParentProcess(context, Constants.VAR_APP_SERVICE_BROKER_VAR_PREFIX, cloudServiceBrokerExtended);\n         }\n-    }\n \n-    @Override\n-    protected Logger getLogger() {\n-        return LOGGER;\n+        ProcessTime processTime = processTimeCalculator.calculate(context.getProcessInstanceId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2908df80c57e344c444fcfbd72bf91b544e45163"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEwMzY0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0Mjo0OFrOFokVCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0Mjo0OFrOFokVCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MjU2OQ==", "bodyText": "Do we need to report the delay at this point in the process?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378082569", "createdAt": "2020-02-12T07:42:48Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/listeners/ErrorProcessListener.java", "diffHunk": "@@ -59,6 +64,14 @@ private void handle(FlowableEngineEvent event, DeadLetterJobEntity entity) {\n                          event.getProcessDefinitionId(), entity.getExceptionStacktrace());\r\n             eventHandler.handle(event, entity.getExceptionMessage());\r\n         }\r\n+\r\n+        logProcessTime(event.getProcessInstanceId());\r\n+\r\n+    }\r\n+\r\n+    private void logProcessTime(String processInstanceId) {\r\n+        ProcessTime processTime = processTimeCalculator.calculate(processInstanceId);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2908df80c57e344c444fcfbd72bf91b544e45163"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTEwNzAyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0NDoyNlrOFokXHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwNzo0NDoyNlrOFokXHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA4MzEwMg==", "bodyText": "Why not make this private final and set it through a package-private constructor?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378083102", "createdAt": "2020-02-12T07:44:26Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.text.MessageFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.flowable.engine.history.HistoricActivityInstance;\n+import org.flowable.engine.history.HistoricProcessInstance;\n+import org.immutables.value.Value.Immutable;\n+import org.slf4j.Logger;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.sap.cloud.lm.sl.cf.process.flowable.FlowableFacade;\n+\n+@Named\n+public class ProcessTimeCalculator {\n+\n+    private static final String CALL_ACTIVITY_TYPE = \"callActivity\";\n+\n+    private FlowableFacade flowableFacade;\n+    protected Supplier<Long> currentTimeSupplier = System::currentTimeMillis;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2908df80c57e344c444fcfbd72bf91b544e45163"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzOTIxMDUwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyNjowOFrOFolUcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMlQwODoyNjowOFrOFolUcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODA5ODgwMg==", "bodyText": "Shouldn't we also filter out timers?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/754#discussion_r378098802", "createdAt": "2020-02-12T08:26:08Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ProcessTimeCalculator.java", "diffHunk": "@@ -0,0 +1,92 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.text.MessageFormat;\n+import java.util.Date;\n+import java.util.List;\n+import java.util.function.Supplier;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.flowable.engine.history.HistoricActivityInstance;\n+import org.flowable.engine.history.HistoricProcessInstance;\n+import org.immutables.value.Value.Immutable;\n+import org.slf4j.Logger;\n+\n+import com.fasterxml.jackson.databind.annotation.JsonDeserialize;\n+import com.fasterxml.jackson.databind.annotation.JsonSerialize;\n+import com.sap.cloud.lm.sl.cf.process.flowable.FlowableFacade;\n+\n+@Named\n+public class ProcessTimeCalculator {\n+\n+    private static final String CALL_ACTIVITY_TYPE = \"callActivity\";\n+\n+    private FlowableFacade flowableFacade;\n+    protected Supplier<Long> currentTimeSupplier = System::currentTimeMillis;\n+\n+    @Inject\n+    public ProcessTimeCalculator(FlowableFacade flowableFacade) {\n+        this.flowableFacade = flowableFacade;\n+    }\n+\n+    public ProcessTime calculate(String processInstanceId) {\n+        HistoricProcessInstance processInstance = flowableFacade.getHistoricProcessInstance(processInstanceId);\n+        long processDuration = calculateProcessDuration(processInstance);\n+        long allProcessStepsDuration = calculateAllProcessStepsDuration(processInstanceId);\n+\n+        return ImmutableProcessTime.builder()\n+                                   .processDuration(processDuration)\n+                                   .delayBetweenSteps(processDuration - allProcessStepsDuration)\n+                                   .build();\n+    }\n+\n+    private long calculateProcessDuration(HistoricProcessInstance processInstance) {\n+        Date processInstanceStartTime = processInstance.getStartTime();\n+        Date processInstanceEndTime = determineProcessInstanceEndTime(processInstance);\n+        return processInstanceEndTime.getTime() - processInstanceStartTime.getTime();\n+    }\n+\n+    private Date determineProcessInstanceEndTime(HistoricProcessInstance processInstance) {\n+        return processInstance.getEndTime() != null ? processInstance.getEndTime() : new Date(currentTimeSupplier.get());\n+    }\n+\n+    private long calculateAllProcessStepsDuration(String processInstanceId) {\n+        List<HistoricActivityInstance> processActivities = flowableFacade.getProcessEngine()\n+                                                                         .getHistoryService()\n+                                                                         .createHistoricActivityInstanceQuery()\n+                                                                         .processInstanceId(processInstanceId)\n+                                                                         .list();\n+        return processActivities.stream()\n+                                .filter(this::isNotCallActivity)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2908df80c57e344c444fcfbd72bf91b544e45163"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 591, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}