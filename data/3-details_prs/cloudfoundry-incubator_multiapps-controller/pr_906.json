{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwOTQ4MjQ0", "number": 906, "title": "Fix status code Bad Gateway instead of Not Found for requests to non-\u2026", "bodyText": "\u2026existent spaces\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes\nIssue: LMCROSSITXSADEPLOY-2114", "createdAt": "2020-07-17T09:15:03Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906", "merged": true, "mergeCommit": {"oid": "f744489158b5f51a2a75edb0aafab9736af87580"}, "closed": true, "closedAt": "2020-07-22T14:48:17Z", "author": {"login": "Boris-ILIEV"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1wStkgFqTQ1MDUwMzc0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc3b_B-AFqTQ1MzM5Mjk5Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNTAzNzQx", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#pullrequestreview-450503741", "createdAt": "2020-07-17T09:18:14Z", "commit": {"oid": "ea1e36ef48d5ea23f8334688d236c478f5d9f22f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwOToxODoxNFrOGzL0kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwOToxODoxNFrOGzL0kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjMyNDI0MA==", "bodyText": "filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value())", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#discussion_r456324240", "createdAt": "2020-07-17T09:18:14Z", "author": {"login": "radito3"}, "path": "com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java", "diffHunk": "@@ -44,11 +44,36 @@ public void testHandleException(Exception exception, RestResponse expectedRespon\n             Arguments.of(new ResponseStatusException(HttpStatus.NOT_FOUND, \"Not found\"), new RestResponse(404, \"Not found\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.BAD_REQUEST, \"Bad request\"), new RestResponse(400, \"Bad request\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, \"Something went wrong\"), new RestResponse(500, \"Something went wrong\")),\n-            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(502, \"429 Too Many Requests: Rate limit exceeded\")),\n+            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(429, \"429 Too Many Requests: Rate limit exceeded\")),\n             Arguments.of(new SQLException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER)),\n             Arguments.of(new PersistenceException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER))\n         // @formatter:on\n         );\n     }\n \n+    @ParameterizedTest\n+    @MethodSource\n+    public void testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses(HttpStatus httpStatus) {\n+        ResponseEntity<String> response = exceptionMapper.handleException(new CloudOperationException(httpStatus,\n+                                                                                                      httpStatus.getReasonPhrase()));\n+        StringBuilder expectedMessage = new StringBuilder();\n+        expectedMessage.append(httpStatus.value());\n+        expectedMessage.append(\" \");\n+        expectedMessage.append(httpStatus.getReasonPhrase());\n+        RestResponse expectedResponse = new RestResponse(httpStatus.value(), expectedMessage.toString());\n+\n+        assertEquals(expectedResponse.getStatus(), response.getStatusCodeValue());\n+        assertEquals(expectedResponse.getEntity(), response.getBody());\n+    }\n+\n+    public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n+        return Stream.of(HttpStatus.values())\n+                     .filter(httpStatus -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea1e36ef48d5ea23f8334688d236c478f5d9f22f"}, "originalPosition": 29}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea1e36ef48d5ea23f8334688d236c478f5d9f22f", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ea1e36ef48d5ea23f8334688d236c478f5d9f22f", "committedDate": "2020-07-17T09:12:06Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\nCFExceptionMapper now returns the true"}, "afterCommit": {"oid": "a1583339a0531d1b77ddedd0cfc7407efb356f18", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a1583339a0531d1b77ddedd0cfc7407efb356f18", "committedDate": "2020-07-17T09:22:49Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a1583339a0531d1b77ddedd0cfc7407efb356f18", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a1583339a0531d1b77ddedd0cfc7407efb356f18", "committedDate": "2020-07-17T09:22:49Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}, "afterCommit": {"oid": "c1b738afaf3c6a737eed00d32c84f380dd258be6", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c1b738afaf3c6a737eed00d32c84f380dd258be6", "committedDate": "2020-07-17T09:31:19Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUwNTM5MTk2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#pullrequestreview-450539196", "createdAt": "2020-07-17T10:11:39Z", "commit": {"oid": "c1b738afaf3c6a737eed00d32c84f380dd258be6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxMTozOVrOGzNe_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxMDoxMTozOVrOGzNe_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjM1MTQ4NA==", "bodyText": "You're filtering out 429, because there's already a test for it, but there's no problem in having this small overlap between the tests. Remove this .filter.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#discussion_r456351484", "createdAt": "2020-07-17T10:11:39Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.web/src/test/java/com/sap/cloud/lm/sl/cf/web/resources/CFExceptionMapperTest.java", "diffHunk": "@@ -44,11 +44,31 @@ public void testHandleException(Exception exception, RestResponse expectedRespon\n             Arguments.of(new ResponseStatusException(HttpStatus.NOT_FOUND, \"Not found\"), new RestResponse(404, \"Not found\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.BAD_REQUEST, \"Bad request\"), new RestResponse(400, \"Bad request\")),\n             Arguments.of(new ResponseStatusException(HttpStatus.INTERNAL_SERVER_ERROR, \"Something went wrong\"), new RestResponse(500, \"Something went wrong\")),\n-            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(502, \"429 Too Many Requests: Rate limit exceeded\")),\n+            Arguments.of(new CloudOperationException(HttpStatus.TOO_MANY_REQUESTS, HttpStatus.TOO_MANY_REQUESTS.getReasonPhrase(), \"Rate limit exceeded\"), new RestResponse(429, \"429 Too Many Requests: Rate limit exceeded\")),\n             Arguments.of(new SQLException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER)),\n             Arguments.of(new PersistenceException(), new RestResponse(500, Messages.TEMPORARY_PROBLEM_WITH_PERSISTENCE_LAYER))\n         // @formatter:on\n         );\n     }\n \n+    @ParameterizedTest\n+    @MethodSource\n+    public void testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses(HttpStatus httpStatus) {\n+        ResponseEntity<String> response = exceptionMapper.handleException(new CloudOperationException(httpStatus,\n+                                                                                                      httpStatus.getReasonPhrase()));\n+        StringBuilder expectedMessage = new StringBuilder();\n+        expectedMessage.append(httpStatus.value());\n+        expectedMessage.append(\" \");\n+        expectedMessage.append(httpStatus.getReasonPhrase());\n+        RestResponse expectedResponse = new RestResponse(httpStatus.value(), expectedMessage.toString());\n+\n+        assertEquals(expectedResponse.getStatus(), response.getStatusCodeValue());\n+        assertEquals(expectedResponse.getEntity(), response.getBody());\n+    }\n+\n+    public static Stream<HttpStatus> testHandleExceptionForCloudOperationExceptionWithAllHttpStatuses() {\n+        return Stream.of(HttpStatus.values())\n+                     .filter(httpStatus -> httpStatus.value() != HttpStatus.TOO_MANY_REQUESTS.value());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1b738afaf3c6a737eed00d32c84f380dd258be6"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "committedDate": "2020-07-17T10:34:55Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c1b738afaf3c6a737eed00d32c84f380dd258be6", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c1b738afaf3c6a737eed00d32c84f380dd258be6", "committedDate": "2020-07-17T09:31:19Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}, "afterCommit": {"oid": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "author": {"user": {"login": "Boris-ILIEV", "name": null}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/6c3a91b2e3527840b5235fbf7e8b3227e58762bf", "committedDate": "2020-07-17T10:34:55Z", "message": "Fix status code Bad Gateway instead of Not Found for requests to non-existent spaces\n\n-- CFExceptionMapper now returns the true status code of CloudOperationException instead of always Bad Gateway\n-- Adds tests for the changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUzMzkyOTky", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/906#pullrequestreview-453392992", "createdAt": "2020-07-22T14:48:12Z", "commit": {"oid": "6c3a91b2e3527840b5235fbf7e8b3227e58762bf"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 758, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}