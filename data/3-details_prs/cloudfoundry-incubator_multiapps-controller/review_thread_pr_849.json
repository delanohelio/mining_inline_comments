{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwODMwODQz", "number": 849, "reviewThreads": {"totalCount": 97, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODozNzo1MFrOD45diw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzozODoxMlrOD_jnpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTg4Mjk5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApiService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODozNzo1MFrOGP3PPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODozNzo1MFrOGP3PPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI4Njg0Nw==", "bodyText": "What was the agreement to reuse one mtar in different namespaces?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419286847", "createdAt": "2020-05-04T08:37:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApiService.java", "diffHunk": "@@ -10,8 +10,8 @@\n \n public interface FilesApiService {\n \n-    ResponseEntity<List<FileMetadata>> getFiles(String spaceGuid);\n+    ResponseEntity<List<FileMetadata>> getFiles(String spaceGuid, String namespace);\n \n-    ResponseEntity<FileMetadata> uploadFile(HttpServletRequest request, String spaceGuid);\n+    ResponseEntity<FileMetadata> uploadFile(HttpServletRequest request, String spaceGuid, String namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTkwNDg4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/InfoApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwODo0NDoyOVrOGP3cyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo1MTowMlrOGUKhpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5MDMxNQ==", "bodyText": "Why we need Path Variable parameter spaceGuid? I don't see usage of this parameter in the metod.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419290315", "createdAt": "2020-05-04T08:44:29Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/InfoApi.java", "diffHunk": "@@ -31,7 +32,7 @@\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = Info.class) })\n-    public ResponseEntity<Info> getInfo() {\n+    public ResponseEntity<Info> getInfo(@PathVariable(\"spaceGuid\") String spaceGuid) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzc5NzE1OA==", "bodyText": "Probably an error while fixing the swagger file, removed it.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r423797158", "createdAt": "2020-05-12T14:51:02Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/InfoApi.java", "diffHunk": "@@ -31,7 +32,7 @@\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = Info.class) })\n-    public ResponseEntity<Info> getInfo() {\n+    public ResponseEntity<Info> getInfo(@PathVariable(\"spaceGuid\") String spaceGuid) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTI5MDMxNQ=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDAwMzI2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/MtasApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNDoyNlrOGP4ZWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNDoyNlrOGP4ZWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwNTgxOQ==", "bodyText": "Missing ApiParam annotation for mtaId", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419305819", "createdAt": "2020-05-04T09:14:26Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/MtasApi.java", "diffHunk": "@@ -37,7 +38,7 @@\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = Mta.class) })\n-    public ResponseEntity<Mta> getMta(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid,\n+    public ResponseEntity<Mta> getMta(@ApiParam(value = \"GUID of space with mtas\") @PathVariable(PathVariables.SPACE_GUID) String spaceGuid,\n                                       @PathVariable(RequestVariables.MTA_ID) String mtaId) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDAwNzYzOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNTo1MlrOGP4cHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNTo1MlrOGP4cHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwNjUyNg==", "bodyText": "missing ApiParam for spaceGuid", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419306526", "createdAt": "2020-05-04T09:15:52Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "diffHunk": "@@ -32,24 +35,28 @@\n     private FilesApiService delegate;\n \n     @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"getMtaFiles\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n         @Authorization(value = \"oauth2\", scopes = {\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = FileMetadata.class, responseContainer = \"List\") })\n-    public ResponseEntity<List<FileMetadata>> getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid) {\n-        return delegate.getFiles(spaceGuid);\n+    public ResponseEntity<List<FileMetadata>>\n+           getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDAxMDIxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNjozM1rOGP4dmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxNjozM1rOGP4dmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwNjkwNQ==", "bodyText": "same comment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419306905", "createdAt": "2020-05-04T09:16:33Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "diffHunk": "@@ -32,24 +35,28 @@\n     private FilesApiService delegate;\n \n     @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"getMtaFiles\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n         @Authorization(value = \"oauth2\", scopes = {\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = FileMetadata.class, responseContainer = \"List\") })\n-    public ResponseEntity<List<FileMetadata>> getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid) {\n-        return delegate.getFiles(spaceGuid);\n+    public ResponseEntity<List<FileMetadata>>\n+           getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid,\n+                    @ApiParam(value = \"Filter mtas by namespace\") @RequestParam(name = RequestVariables.NAMESPACE, required = false) String namespace) {\n+        return delegate.getFiles(spaceGuid, namespace);\n     }\n \n     @PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = { MediaType.APPLICATION_JSON_VALUE,\n         MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"uploadMtaFile\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {\n         @Authorization(value = \"oauth2\", scopes = {\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 201, message = \"Created\", response = FileMetadata.class) })\n-    public ResponseEntity<FileMetadata> uploadFile(HttpServletRequest request, @PathVariable(PathVariables.SPACE_GUID) String spaceGuid) {\n-        return delegate.uploadFile(request, spaceGuid);\n+    public ResponseEntity<FileMetadata>\n+           uploadFile(HttpServletRequest request, @PathVariable(PathVariables.SPACE_GUID) String spaceGuid,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDAyMzE3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/MtasApiService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToyMDozNFrOGP4llg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNDo1NjozM1rOGUKy9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwODk1MA==", "bodyText": "In the old api(v1) it wouldn't possible to get mta by namespace, right?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419308950", "createdAt": "2020-05-04T09:20:34Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/MtasApiService.java", "diffHunk": "@@ -12,4 +12,6 @@\n \n     ResponseEntity<Mta> getMta(String spaceGuid, String mtaId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzgwMTU5MA==", "bodyText": "yes", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r423801590", "createdAt": "2020-05-12T14:56:33Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/MtasApiService.java", "diffHunk": "@@ -12,4 +12,6 @@\n \n     ResponseEntity<Mta> getMta(String spaceGuid, String mtaId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwODk1MA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDAzODQ1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToyNToxMFrOGP4uyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzoyMDo0NFrOGUxOyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxMTMwNQ==", "bodyText": "Why this property should be hidden in API documentation?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419311305", "createdAt": "2020-05-04T09:25:10Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "diffHunk": "@@ -52,23 +53,32 @@\n     public abstract String getSpace();\n \n     @Override\n+    @ApiModelProperty(hidden = true)\n     public String getConfigurationType() {\n         return \"file metadata\";\n     }\n \n     @Override\n+    @ApiModelProperty(hidden = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzMTMwNw==", "bodyText": "It's only used for audit-logging. It shouldn't be included in the response.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424431307", "createdAt": "2020-05-13T13:20:44Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "diffHunk": "@@ -52,23 +53,32 @@\n     public abstract String getSpace();\n \n     @Override\n+    @ApiModelProperty(hidden = true)\n     public String getConfigurationType() {\n         return \"file metadata\";\n     }\n \n     @Override\n+    @ApiModelProperty(hidden = true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxMTMwNQ=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDA4MTk5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOTozODowN1rOGP5Jhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNzo1NDo0M1rOGU9Dxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxODE1MQ==", "bodyText": "What is the difference between \"nid\" and \"namespace\"?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419318151", "createdAt": "2020-05-04T09:38:07Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "diffHunk": "@@ -30,9 +30,10 @@\n     public static final String COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0 = \"Could not create a valid application name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0 = \"Could not create a valid service name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_PARSE_ROUTE = \"Cannot parse 'routes' property - check documentation for correct format.\";\r\n+    public static final String COULD_NOT_PARSE_BOOLEAN_FLAG = \"Cannot parse \\\"{0}\\\" flag - expected a boolean format.\";\r\n     public static final String COULD_NOT_CREATE_VALID_ROUTE_NESTED_EXCEPTION = \"Invalid route \\\"{0}\\\" : {1}\";\r\n     public static final String CANNOT_CORRECT_PARAMETER = \"Value for parameter \\\"{0}\\\" is not valid and cannot be corrected\";\r\n-    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with namespace ID \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", target org \\\"{3}\\\" and target space \\\"{4}\\\", already exists\";\r\n+    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with nid \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", namespace \\\"{3}\\\", target org \\\"{4}\\\" and target space \\\"{5}\\\", already exists\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyNTA5NQ==", "bodyText": "nid is an older parameter, was set to 'mta' by default. Keeping it as is to avoid migrating db data", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424625095", "createdAt": "2020-05-13T17:54:43Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "diffHunk": "@@ -30,9 +30,10 @@\n     public static final String COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0 = \"Could not create a valid application name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0 = \"Could not create a valid service name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_PARSE_ROUTE = \"Cannot parse 'routes' property - check documentation for correct format.\";\r\n+    public static final String COULD_NOT_PARSE_BOOLEAN_FLAG = \"Cannot parse \\\"{0}\\\" flag - expected a boolean format.\";\r\n     public static final String COULD_NOT_CREATE_VALID_ROUTE_NESTED_EXCEPTION = \"Invalid route \\\"{0}\\\" : {1}\";\r\n     public static final String CANNOT_CORRECT_PARAMETER = \"Value for parameter \\\"{0}\\\" is not valid and cannot be corrected\";\r\n-    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with namespace ID \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", target org \\\"{3}\\\" and target space \\\"{4}\\\", already exists\";\r\n+    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with nid \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", namespace \\\"{3}\\\", target org \\\"{4}\\\" and target space \\\"{5}\\\", already exists\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMxODE1MQ=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDQ2NDQ2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTo0ODo1NVrOGP83Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjo1Mzo1MVrOGQJLRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3OTAwMw==", "bodyText": "Can you extract the version as property?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419379003", "createdAt": "2020-05-04T11:48:55Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "diffHunk": "@@ -51,4 +51,75 @@\n             <artifactId>com.sap.cloud.lm.sl.mta</artifactId>\r\n         </dependency>\r\n     </dependencies>\r\n+\t\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>com.github.kongchen</groupId>\r\n+\t\t\t\t<artifactId>swagger-maven-plugin</artifactId>\r\n+\t\t\t\t<version>3.1.8</version>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU4MDc0Mg==", "bodyText": "Sure, should I also move most of the other configuration? It's possible but I'm not sure if it isn't better kept in the api project.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419580742", "createdAt": "2020-05-04T16:53:51Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "diffHunk": "@@ -51,4 +51,75 @@\n             <artifactId>com.sap.cloud.lm.sl.mta</artifactId>\r\n         </dependency>\r\n     </dependencies>\r\n+\t\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>com.github.kongchen</groupId>\r\n+\t\t\t\t<artifactId>swagger-maven-plugin</artifactId>\r\n+\t\t\t\t<version>3.1.8</version>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM3OTAwMw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDQ3MDkxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTo1MTowM1rOGP87RA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTo1MTowM1rOGP87RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MDAzNg==", "bodyText": "Rename it to MTA_NAME to be self-explaining", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419380036", "createdAt": "2020-05-04T11:51:03Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "diffHunk": "@@ -23,6 +23,8 @@ private RequestVariables() {\n         }\n \n         public static final String MTA_ID = \"mtaId\";\n+        public static final String NAMESPACE = \"namespace\";\n+        public static final String V2_NAME = \"name\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDQ4NDgzOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTo1NTo0M1rOGP9Dww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMTo1NTo0M1rOGP9Dww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM4MjIxMQ==", "bodyText": "I would rename it to MTAS_V2 because sounds more naturally.\nOr event prepare two constants ROOT_v2 = \"/api/v2\" and MTAS_V2 =  ROOT_V2 + \"spaces/{\" + PathVariables.SPACE_GUID + \"}/mtas\";", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419382211", "createdAt": "2020-05-04T11:55:43Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "diffHunk": "@@ -60,6 +62,7 @@ private Endpoints() {\n         public static final String OPERATION_LOGS = OPERATION + \"/logs\";\n         public static final String OPERATION_LOG_CONTENT = OPERATION_LOGS + \"/{\" + PathVariables.LOG_ID + \"}/content\";\n         public static final String OPERATION_ACTIONS = OPERATION + \"/actions\";\n+        public static final String V2_MTAS = \"/api/v2/spaces/{\" + PathVariables.SPACE_GUID + \"}/mtas\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDU0MjI5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoxMzo0OFrOGP9mgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzoxOTowMVrOGUxJtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTEwNA==", "bodyText": "Let's add that extension descriptor is also uploaded from here, e.g.\nUploads an Multi Target Application archive or an Extension Descriptor", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419391104", "createdAt": "2020-05-04T12:13:48Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "diffHunk": "@@ -32,24 +35,28 @@\n     private FilesApiService delegate;\n \n     @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"getMtaFiles\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n         @Authorization(value = \"oauth2\", scopes = {\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = FileMetadata.class, responseContainer = \"List\") })\n-    public ResponseEntity<List<FileMetadata>> getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid) {\n-        return delegate.getFiles(spaceGuid);\n+    public ResponseEntity<List<FileMetadata>>\n+           getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid,\n+                    @ApiParam(value = \"Filter mtas by namespace\") @RequestParam(name = RequestVariables.NAMESPACE, required = false) String namespace) {\n+        return delegate.getFiles(spaceGuid, namespace);\n     }\n \n     @PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = { MediaType.APPLICATION_JSON_VALUE,\n         MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"uploadMtaFile\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzMDAwNA==", "bodyText": "This API should not know about MTARs or extension descriptors. \"uploadFile\" should be sufficient.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424430004", "createdAt": "2020-05-13T13:19:01Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/FilesApi.java", "diffHunk": "@@ -32,24 +35,28 @@\n     private FilesApiService delegate;\n \n     @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"getMtaFiles\", notes = \"Retrieves all Multi-Target Application files \", response = FileMetadata.class, responseContainer = \"List\", authorizations = {\n         @Authorization(value = \"oauth2\", scopes = {\n \n         }) }, tags = {})\n     @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = FileMetadata.class, responseContainer = \"List\") })\n-    public ResponseEntity<List<FileMetadata>> getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid) {\n-        return delegate.getFiles(spaceGuid);\n+    public ResponseEntity<List<FileMetadata>>\n+           getFiles(@PathVariable(PathVariables.SPACE_GUID) String spaceGuid,\n+                    @ApiParam(value = \"Filter mtas by namespace\") @RequestParam(name = RequestVariables.NAMESPACE, required = false) String namespace) {\n+        return delegate.getFiles(spaceGuid, namespace);\n     }\n \n     @PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE, produces = { MediaType.APPLICATION_JSON_VALUE,\n         MediaType.APPLICATION_JSON_UTF8_VALUE })\n-    @ApiOperation(value = \"\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {\n+    @ApiOperation(value = \"\", nickname = \"uploadMtaFile\", notes = \"Uploads an Multi Target Application file \", response = FileMetadata.class, authorizations = {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5MTEwNA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDU2NjUyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/resources/mtarest.yaml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoyMToyNFrOGP91EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNjo0MTo0MlrOGQIsJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5NDgzMw==", "bodyText": "Is it generated file after build?\nIf so it would be out of the repo?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419394833", "createdAt": "2020-05-04T12:21:24Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/resources/mtarest.yaml", "diffHunk": "@@ -0,0 +1,588 @@\n+---", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTU3Mjc3NQ==", "bodyText": "It is an autogenerated file after each build - I was thinking of persisting it in the repo since that way it will be clear when a change has been made to either of the swagger files - and so the developer would be reminded to upload the changed files to the swagger site.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419572775", "createdAt": "2020-05-04T16:41:42Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/resources/mtarest.yaml", "diffHunk": "@@ -0,0 +1,588 @@\n+---", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5NDgzMw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDU3MDIwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjoyMjoyN1rOGP93Lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1NzowNlrOGVOeCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5NTM3NA==", "bodyText": "This is an API for the deploy-service(MTA) application\n->\nThis is an API for the MTA Deployment Service in SAP Cloud Platform Cloud Foundry environment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419395374", "createdAt": "2020-05-04T12:22:27Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "diffHunk": "@@ -51,4 +51,75 @@\n             <artifactId>com.sap.cloud.lm.sl.mta</artifactId>\r\n         </dependency>\r\n     </dependencies>\r\n+\t\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>com.github.kongchen</groupId>\r\n+\t\t\t\t<artifactId>swagger-maven-plugin</artifactId>\r\n+\t\t\t\t<version>3.1.8</version>\r\n+\t\t\t\t<configuration>\r\n+\t\t\t\t\t<skipSwaggerGeneration>false</skipSwaggerGeneration>\r\n+\t\t\t\t\t<apiSources>\r\n+\t\t\t\t\t\t<apiSource>\r\n+\t\t\t\t\t\t\t<springmvc>true</springmvc>\r\n+\t\t\t\t\t\t\t<schemes>https</schemes>\r\n+\t\t\t\t\t\t\t<info>\r\n+\t\t\t\t\t\t\t\t<title>MTA REST API</title>\r\n+\t\t\t\t\t\t\t\t<description>This is an API for the deploy-service(MTA) application</description>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxMDM0Nw==", "bodyText": "I prefer something like This is the API of the Cloud Foundry MultiApps Controller. This is the open source project after all.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424910347", "createdAt": "2020-05-14T06:57:06Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "diffHunk": "@@ -51,4 +51,75 @@\n             <artifactId>com.sap.cloud.lm.sl.mta</artifactId>\r\n         </dependency>\r\n     </dependencies>\r\n+\t\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>com.github.kongchen</groupId>\r\n+\t\t\t\t<artifactId>swagger-maven-plugin</artifactId>\r\n+\t\t\t\t<version>3.1.8</version>\r\n+\t\t\t\t<configuration>\r\n+\t\t\t\t\t<skipSwaggerGeneration>false</skipSwaggerGeneration>\r\n+\t\t\t\t\t<apiSources>\r\n+\t\t\t\t\t\t<apiSource>\r\n+\t\t\t\t\t\t\t<springmvc>true</springmvc>\r\n+\t\t\t\t\t\t\t<schemes>https</schemes>\r\n+\t\t\t\t\t\t\t<info>\r\n+\t\t\t\t\t\t\t\t<title>MTA REST API</title>\r\n+\t\t\t\t\t\t\t\t<description>This is an API for the deploy-service(MTA) application</description>\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM5NTM3NA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDYwNDgwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/resources/mtarest.yaml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMjoxN1rOGP-L7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjozMjoxN1rOGP-L7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwMDY4NA==", "bodyText": "Where do you plan to publish our internal DL ? \ud83d\ude04", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419400684", "createdAt": "2020-05-04T12:32:17Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/resources/mtarest.yaml", "diffHunk": "@@ -0,0 +1,588 @@\n+---\n+swagger: \"2.0\"\n+info:\n+  description: \"This is an API for the deploy-service(MTA) application\"\n+  version: \"1.0.0\"\n+  title: \"MTA REST API\"\n+  contact:\n+    email: \"DL_563CD7577BCF844DBD000037@exchange.sap.corp\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMDY2MjE4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxMjo0ODoxMFrOGP-u2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNjo0ODowMVrOGQccbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwOTYyNA==", "bodyText": "Do we need to print nid \"MTA\" at all?\nthis is some internal logic that can be deleted at some moment.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419409624", "createdAt": "2020-05-04T12:48:10Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "diffHunk": "@@ -30,9 +30,10 @@\n     public static final String COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0 = \"Could not create a valid application name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0 = \"Could not create a valid service name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_PARSE_ROUTE = \"Cannot parse 'routes' property - check documentation for correct format.\";\r\n+    public static final String COULD_NOT_PARSE_BOOLEAN_FLAG = \"Cannot parse \\\"{0}\\\" flag - expected a boolean format.\";\r\n     public static final String COULD_NOT_CREATE_VALID_ROUTE_NESTED_EXCEPTION = \"Invalid route \\\"{0}\\\" : {1}\";\r\n     public static final String CANNOT_CORRECT_PARAMETER = \"Value for parameter \\\"{0}\\\" is not valid and cannot be corrected\";\r\n-    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with namespace ID \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", target org \\\"{3}\\\" and target space \\\"{4}\\\", already exists\";\r\n+    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with nid \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", namespace \\\"{3}\\\", target org \\\"{4}\\\" and target space \\\"{5}\\\", already exists\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MTI5Mw==", "bodyText": "Then we could remove it from the message then as well. I feel it is a bit clearer if we print both at this point since the names are so close - to avoid any mix-ups.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419491293", "createdAt": "2020-05-04T14:45:24Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "diffHunk": "@@ -30,9 +30,10 @@\n     public static final String COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0 = \"Could not create a valid application name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0 = \"Could not create a valid service name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_PARSE_ROUTE = \"Cannot parse 'routes' property - check documentation for correct format.\";\r\n+    public static final String COULD_NOT_PARSE_BOOLEAN_FLAG = \"Cannot parse \\\"{0}\\\" flag - expected a boolean format.\";\r\n     public static final String COULD_NOT_CREATE_VALID_ROUTE_NESTED_EXCEPTION = \"Invalid route \\\"{0}\\\" : {1}\";\r\n     public static final String CANNOT_CORRECT_PARAMETER = \"Value for parameter \\\"{0}\\\" is not valid and cannot be corrected\";\r\n-    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with namespace ID \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", target org \\\"{3}\\\" and target space \\\"{4}\\\", already exists\";\r\n+    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with nid \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", namespace \\\"{3}\\\", target org \\\"{4}\\\" and target space \\\"{5}\\\", already exists\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwOTYyNA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTg5NjQyOA==", "bodyText": "If it does not appear in console output it is ok to stay as it is.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419896428", "createdAt": "2020-05-05T06:48:01Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/Messages.java", "diffHunk": "@@ -30,9 +30,10 @@\n     public static final String COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0 = \"Could not create a valid application name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0 = \"Could not create a valid service name from \\\"{0}\\\"\";\r\n     public static final String COULD_NOT_PARSE_ROUTE = \"Cannot parse 'routes' property - check documentation for correct format.\";\r\n+    public static final String COULD_NOT_PARSE_BOOLEAN_FLAG = \"Cannot parse \\\"{0}\\\" flag - expected a boolean format.\";\r\n     public static final String COULD_NOT_CREATE_VALID_ROUTE_NESTED_EXCEPTION = \"Invalid route \\\"{0}\\\" : {1}\";\r\n     public static final String CANNOT_CORRECT_PARAMETER = \"Value for parameter \\\"{0}\\\" is not valid and cannot be corrected\";\r\n-    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with namespace ID \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", target org \\\"{3}\\\" and target space \\\"{4}\\\", already exists\";\r\n+    public static final String CONFIGURATION_ENTRY_ALREADY_EXISTS = \"Configuration entry with nid \\\"{0}\\\", ID \\\"{1}\\\", version \\\"{2}\\\", namespace \\\"{3}\\\", target org \\\"{4}\\\" and target space \\\"{5}\\\", already exists\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQwOTYyNA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTAxMTQ3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDowNzoxOVrOGQCAvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNTozOToyN1rOGU3tYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2MzM1Ng==", "bodyText": "Why we always return first element of list? If we go through flow where we get deployed mta by env and combine both lists, it will result in list with 2 elements, then which will be the right one?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419463356", "createdAt": "2020-05-04T14:07:19Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "diffHunk": "@@ -32,13 +33,73 @@\n     private DeployedMtaEnvDetector deployedMtaEnvDetector;\n \n     public List<DeployedMta> detectDeployedMtas(CloudControllerClient client) {\n+        MtaMetadataCriteria allMtasCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                        .label(MtaMetadataLabels.MTA_ID)\n+                                                                        .exists()\n+                                                                        .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(allMtasCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMtas(client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasWithoutNamespace(CloudControllerClient client) {\n+        MtaMetadataCriteria mtasWithoutNamespaceCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                                     .label(MtaMetadataLabels.MTA_ID)\n+                                                                                     .exists()\n+                                                                                     .and()\n+                                                                                     .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                                     .doesNotExist()\n+                                                                                     .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(mtasWithoutNamespaceCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMtasWithoutNamespace(client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasByName(String mtaName, CloudControllerClient client) {\n+        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                          .label(MtaMetadataLabels.MTA_ID)\n+                                                                          .hasValue(MtaMetadataUtil.getHashedLabel(mtaName))\n+                                                                          .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMta(mtaName, client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasByNamespace(String mtaNamespace, CloudControllerClient client) {\n         MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n                                                                           .label(MtaMetadataLabels.MTA_ID)\n                                                                           .exists()\n+                                                                          .and()\n+                                                                          .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                          .hasValueOrIsntPresent(MtaMetadataUtil.getHashedLabel(mtaNamespace))\n+                                                                          .build();\n+\n+        return getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n+    }\n+\n+    public Optional<DeployedMta> detectDeployedMtaByNameAndNamespace(String mtaName, String mtaNamespace, CloudControllerClient client,\n+                                                                     boolean envDetectionEnabled) {\n+        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                          .label(MtaMetadataLabels.MTA_ID)\n+                                                                          .hasValue(MtaMetadataUtil.getHashedLabel(mtaName))\n+                                                                          .and()\n+                                                                          .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                          .hasValueOrIsntPresent(MtaMetadataUtil.getHashedLabel(mtaNamespace))\n                                                                           .build();\n+\n         List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n-        List<DeployedMta> deployedMtasByEnv = getDeployedMtasByEnv(client, deployedMtas);\n-        return ListUtils.union(deployedMtas, deployedMtasByEnv);\n+\n+        if (StringUtils.isEmpty(mtaNamespace) && envDetectionEnabled) {\n+            // no need to check by env if namespace was provided - that guarantees mta has metadata\n+            List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMta(mtaName, client);\n+            deployedMtas = combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+        }\n+\n+        return deployedMtas.stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 79}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUzNzQ0MA==", "bodyText": "the pair of (mtaId, namespace) is unique so this shouldn't be an issue, but I agree that the code is confusing here", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424537440", "createdAt": "2020-05-13T15:39:27Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "diffHunk": "@@ -32,13 +33,73 @@\n     private DeployedMtaEnvDetector deployedMtaEnvDetector;\n \n     public List<DeployedMta> detectDeployedMtas(CloudControllerClient client) {\n+        MtaMetadataCriteria allMtasCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                        .label(MtaMetadataLabels.MTA_ID)\n+                                                                        .exists()\n+                                                                        .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(allMtasCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMtas(client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasWithoutNamespace(CloudControllerClient client) {\n+        MtaMetadataCriteria mtasWithoutNamespaceCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                                     .label(MtaMetadataLabels.MTA_ID)\n+                                                                                     .exists()\n+                                                                                     .and()\n+                                                                                     .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                                     .doesNotExist()\n+                                                                                     .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(mtasWithoutNamespaceCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMtasWithoutNamespace(client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasByName(String mtaName, CloudControllerClient client) {\n+        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                          .label(MtaMetadataLabels.MTA_ID)\n+                                                                          .hasValue(MtaMetadataUtil.getHashedLabel(mtaName))\n+                                                                          .build();\n+        List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n+        List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMta(mtaName, client);\n+\n+        return combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+    }\n+\n+    public List<DeployedMta> detectDeployedMtasByNamespace(String mtaNamespace, CloudControllerClient client) {\n         MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n                                                                           .label(MtaMetadataLabels.MTA_ID)\n                                                                           .exists()\n+                                                                          .and()\n+                                                                          .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                          .hasValueOrIsntPresent(MtaMetadataUtil.getHashedLabel(mtaNamespace))\n+                                                                          .build();\n+\n+        return getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n+    }\n+\n+    public Optional<DeployedMta> detectDeployedMtaByNameAndNamespace(String mtaName, String mtaNamespace, CloudControllerClient client,\n+                                                                     boolean envDetectionEnabled) {\n+        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n+                                                                          .label(MtaMetadataLabels.MTA_ID)\n+                                                                          .hasValue(MtaMetadataUtil.getHashedLabel(mtaName))\n+                                                                          .and()\n+                                                                          .label(MtaMetadataLabels.MTA_NAMESPACE)\n+                                                                          .hasValueOrIsntPresent(MtaMetadataUtil.getHashedLabel(mtaNamespace))\n                                                                           .build();\n+\n         List<DeployedMta> deployedMtas = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n-        List<DeployedMta> deployedMtasByEnv = getDeployedMtasByEnv(client, deployedMtas);\n-        return ListUtils.union(deployedMtas, deployedMtasByEnv);\n+\n+        if (StringUtils.isEmpty(mtaNamespace) && envDetectionEnabled) {\n+            // no need to check by env if namespace was provided - that guarantees mta has metadata\n+            List<DeployedMta> deployedMtasByEnv = deployedMtaEnvDetector.detectDeployedMta(mtaName, client);\n+            deployedMtas = combineMetadataAndEnvMtas(deployedMtas, deployedMtasByEnv);\n+        }\n+\n+        return deployedMtas.stream()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2MzM1Ng=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTAyMzM3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaEnvDetector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDowOTo1M1rOGQCIHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNjowMjozMFrOGU4wQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NTI0Nw==", "bodyText": "This is little bit confusing, we are looking for single element and return list. Decide to return single element or rename method name.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419465247", "createdAt": "2020-05-04T14:09:53Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaEnvDetector.java", "diffHunk": "@@ -118,11 +130,18 @@ private DeployedMtaService toDeployedMtaService(String serviceName) {\n                                           .build();\n     }\n \n-    public Optional<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client) {\n+    public List<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDU1NDU2MQ==", "bodyText": "An mta is no longer unique by mtaID, this is why a List is the better choice here", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424554561", "createdAt": "2020-05-13T16:02:30Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaEnvDetector.java", "diffHunk": "@@ -118,11 +130,18 @@ private DeployedMtaService toDeployedMtaService(String serviceName) {\n                                           .build();\n     }\n \n-    public Optional<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client) {\n+    public List<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ2NTI0Nw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 90}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTE3ODcwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo0Mzo1MFrOGQDpWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODoyNjoxNVrOGU-OgQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MDEzOQ==", "bodyText": "Remove second if. You can have a look in DeployedMtaEnvDetector::getMtaMetadata", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419490139", "createdAt": "2020-05-04T14:43:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));\n         return entitiesByMtaId.entrySet()\n                               .stream()\n-                              .map(entry -> toDeployedMta(entry.getKey(), entry.getValue()))\n+                              .map(entry -> toDeployedMta(entry.getValue()))\n                               .collect(Collectors.toList());\n     }\n \n-    private String getMtaId(CloudEntity entity) {\n-        return mtaMetadataParser.parseMtaMetadata(entity)\n-                                .getId();\n-    }\n-\n-    private DeployedMta toDeployedMta(String mtaId, List<CloudEntity> entities) {\n-        Version mtaVersion = getMtaVersion(entities);\n-        MtaMetadata mtaMetadata = getMtaMetadata(mtaId, mtaVersion);\n+    private DeployedMta toDeployedMta(List<CloudEntity> entities) {\n+        MtaMetadata mtaMetadata = getMtaMetadata(entities);\n         List<DeployedMtaApplication> applications = getApplications(entities);\n         List<DeployedMtaService> services = getServices(entities);\n         List<DeployedMtaService> userProvidedServices = getUserProvidedServices(applications, services);\n+        \n         return ImmutableDeployedMta.builder()\n                                    .metadata(mtaMetadata)\n                                    .applications(applications)\n                                    .services(ListUtils.union(services, userProvidedServices))\n                                    .build();\n     }\n \n-    private Version getMtaVersion(List<CloudEntity> entities) {\n+    private MtaMetadata getMtaMetadata(List<CloudEntity> entities) {\n+        String mtaId = null;\n+        String mtaNamespace = null;\n         Version currentVersion = null;\n+        \n         for (CloudEntity entity : entities) {\n-            Version version = mtaMetadataParser.parseMtaMetadata(entity)\n-                                               .getVersion();\n-            if (currentVersion != null && !currentVersion.equals(version)) {\n+            MtaMetadata entityMetadata = mtaMetadataParser.parseMtaMetadata(entity);\n+\n+            if (mtaId == null) {\n+                mtaId = entityMetadata.getId();\n+                mtaNamespace = entityMetadata.getNamespace();\n+            }\n+\n+            Version version = entityMetadata.getVersion();\n+            if (currentVersion == null) {\n+                currentVersion = version;\n+            } else if (!currentVersion.equals(version)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0NDIyNQ==", "bodyText": "I assumed this way it was more readable", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424644225", "createdAt": "2020-05-13T18:26:15Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));\n         return entitiesByMtaId.entrySet()\n                               .stream()\n-                              .map(entry -> toDeployedMta(entry.getKey(), entry.getValue()))\n+                              .map(entry -> toDeployedMta(entry.getValue()))\n                               .collect(Collectors.toList());\n     }\n \n-    private String getMtaId(CloudEntity entity) {\n-        return mtaMetadataParser.parseMtaMetadata(entity)\n-                                .getId();\n-    }\n-\n-    private DeployedMta toDeployedMta(String mtaId, List<CloudEntity> entities) {\n-        Version mtaVersion = getMtaVersion(entities);\n-        MtaMetadata mtaMetadata = getMtaMetadata(mtaId, mtaVersion);\n+    private DeployedMta toDeployedMta(List<CloudEntity> entities) {\n+        MtaMetadata mtaMetadata = getMtaMetadata(entities);\n         List<DeployedMtaApplication> applications = getApplications(entities);\n         List<DeployedMtaService> services = getServices(entities);\n         List<DeployedMtaService> userProvidedServices = getUserProvidedServices(applications, services);\n+        \n         return ImmutableDeployedMta.builder()\n                                    .metadata(mtaMetadata)\n                                    .applications(applications)\n                                    .services(ListUtils.union(services, userProvidedServices))\n                                    .build();\n     }\n \n-    private Version getMtaVersion(List<CloudEntity> entities) {\n+    private MtaMetadata getMtaMetadata(List<CloudEntity> entities) {\n+        String mtaId = null;\n+        String mtaNamespace = null;\n         Version currentVersion = null;\n+        \n         for (CloudEntity entity : entities) {\n-            Version version = mtaMetadataParser.parseMtaMetadata(entity)\n-                                               .getVersion();\n-            if (currentVersion != null && !currentVersion.equals(version)) {\n+            MtaMetadata entityMetadata = mtaMetadataParser.parseMtaMetadata(entity);\n+\n+            if (mtaId == null) {\n+                mtaId = entityMetadata.getId();\n+                mtaNamespace = entityMetadata.getNamespace();\n+            }\n+\n+            Version version = entityMetadata.getVersion();\n+            if (currentVersion == null) {\n+                currentVersion = version;\n+            } else if (!currentVersion.equals(version)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5MDEzOQ=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTIxMjA0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1MDo1MVrOGQD9cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODozOTozMFrOGU-stw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NTI4Mw==", "bodyText": "You have added some unnecessary tab or spaces", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419495283", "createdAt": "2020-05-04T14:50:51Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "diffHunk": "@@ -14,16 +14,18 @@\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataAnnotations;\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataLabels;\n \n+import io.micrometer.core.instrument.util.StringUtils;\n+\n public class MtaMetadataUtil {\n \n     public static final List<String> ENV_MTA_METADATA_FIELDS = Collections.unmodifiableList(Arrays.asList(Constants.ENV_MTA_METADATA,\n                                                                                                           Constants.ENV_MTA_MODULE_METADATA,\n                                                                                                           Constants.ENV_MTA_SERVICES,\n                                                                                                           Constants.ENV_MTA_MODULE_PUBLIC_PROVIDED_DEPENDENCIES));\n \n-    public static final List<String> MTA_METADATA_LABELS = Collections.unmodifiableList(Arrays.asList(MtaMetadataLabels.MTA_ID));\n-    public static final List<String> MTA_METADATA_ANNOTATIONS = Collections.unmodifiableList(Arrays.asList(MtaMetadataAnnotations.MTA_ID,\n-                                                                                                           MtaMetadataAnnotations.MTA_VERSION));\n+    public static final List<String> MTA_METADATA_MANDATORY_LABELS = Collections.unmodifiableList(Arrays.asList(MtaMetadataLabels.MTA_ID));\n+    public static final List<String> MTA_METADATA_MANDATORY_ANNOTATIONS = Collections.unmodifiableList(Arrays.asList(MtaMetadataAnnotations.MTA_ID,\n+                                                                                                                     MtaMetadataAnnotations.MTA_VERSION));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MTk1OQ==", "bodyText": "it's from the formatter - aligned under the asLilst( opening bracket", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424651959", "createdAt": "2020-05-13T18:39:30Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "diffHunk": "@@ -14,16 +14,18 @@\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataAnnotations;\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataLabels;\n \n+import io.micrometer.core.instrument.util.StringUtils;\n+\n public class MtaMetadataUtil {\n \n     public static final List<String> ENV_MTA_METADATA_FIELDS = Collections.unmodifiableList(Arrays.asList(Constants.ENV_MTA_METADATA,\n                                                                                                           Constants.ENV_MTA_MODULE_METADATA,\n                                                                                                           Constants.ENV_MTA_SERVICES,\n                                                                                                           Constants.ENV_MTA_MODULE_PUBLIC_PROVIDED_DEPENDENCIES));\n \n-    public static final List<String> MTA_METADATA_LABELS = Collections.unmodifiableList(Arrays.asList(MtaMetadataLabels.MTA_ID));\n-    public static final List<String> MTA_METADATA_ANNOTATIONS = Collections.unmodifiableList(Arrays.asList(MtaMetadataAnnotations.MTA_ID,\n-                                                                                                           MtaMetadataAnnotations.MTA_VERSION));\n+    public static final List<String> MTA_METADATA_MANDATORY_LABELS = Collections.unmodifiableList(Arrays.asList(MtaMetadataLabels.MTA_ID));\n+    public static final List<String> MTA_METADATA_MANDATORY_ANNOTATIONS = Collections.unmodifiableList(Arrays.asList(MtaMetadataAnnotations.MTA_ID,\n+                                                                                                                     MtaMetadataAnnotations.MTA_VERSION));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTQ5NTI4Mw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTI0OTQ3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNDo1ODo1MFrOGQEUwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0MTo1MVrOGU-yXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwMTI1MA==", "bodyText": "Why we have to return empty string or null? If we return empty or null hashed label what will happen?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419501250", "createdAt": "2020-05-04T14:58:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "diffHunk": "@@ -45,11 +47,16 @@ public static boolean hasMtaMetadata(CloudEntity entity) {\n                                              .keySet();\n         Set<String> metadataAnnotations = metadata.getAnnotations()\n                                                   .keySet();\n-        return metadataLabels.containsAll(MTA_METADATA_LABELS) && metadataAnnotations.containsAll(MTA_METADATA_ANNOTATIONS);\n+        return metadataLabels.containsAll(MTA_METADATA_MANDATORY_LABELS)\n+            && metadataAnnotations.containsAll(MTA_METADATA_MANDATORY_ANNOTATIONS);\n     }\n \n-    public static String getHashedMtaId(String mtaId) {\n-        return DigestUtils.md5DigestAsHex(mtaId.getBytes());\n+    public static String getHashedLabel(String mtaLabel) {\n+        if (StringUtils.isEmpty(mtaLabel)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1MzQwNg==", "bodyText": "null values cannot be hashed, so that's why we catch them and an empty string doesn't really need hashing in the first place (we're hashing for length concerns). The null value is handled down the line as it could have a meaning of 'label doesn't exist'", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424653406", "createdAt": "2020-05-13T18:41:51Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "diffHunk": "@@ -45,11 +47,16 @@ public static boolean hasMtaMetadata(CloudEntity entity) {\n                                              .keySet();\n         Set<String> metadataAnnotations = metadata.getAnnotations()\n                                                   .keySet();\n-        return metadataLabels.containsAll(MTA_METADATA_LABELS) && metadataAnnotations.containsAll(MTA_METADATA_ANNOTATIONS);\n+        return metadataLabels.containsAll(MTA_METADATA_MANDATORY_LABELS)\n+            && metadataAnnotations.containsAll(MTA_METADATA_MANDATORY_ANNOTATIONS);\n     }\n \n-    public static String getHashedMtaId(String mtaId) {\n-        return DigestUtils.md5DigestAsHex(mtaId.getBytes());\n+    public static String getHashedLabel(String mtaLabel) {\n+        if (StringUtils.isEmpty(mtaLabel)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwMTI1MA=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTI3NDYwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationEnvironmentCloudModelBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTowNDoxNlrOGQEkhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0NDowN1rOGU-3uA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNTI4Ng==", "bodyText": "Do you think that it will be better if we use builder for this class?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419505286", "createdAt": "2020-05-04T15:04:16Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationEnvironmentCloudModelBuilder.java", "diffHunk": "@@ -24,11 +24,13 @@\n \r\n     protected final DeploymentDescriptor deploymentDescriptor;\r\n     protected final String deployId;\r\n+    protected final String namespace;\r\n     protected final boolean prettyPrinting;\r\n \r\n-    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, boolean prettyPrinting) {\r\n+    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, String namespace, boolean prettyPrinting) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2NzkzOQ==", "bodyText": "A builder for the builder would be too much. :D", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424467939", "createdAt": "2020-05-13T14:09:37Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationEnvironmentCloudModelBuilder.java", "diffHunk": "@@ -24,11 +24,13 @@\n \r\n     protected final DeploymentDescriptor deploymentDescriptor;\r\n     protected final String deployId;\r\n+    protected final String namespace;\r\n     protected final boolean prettyPrinting;\r\n \r\n-    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, boolean prettyPrinting) {\r\n+    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, String namespace, boolean prettyPrinting) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNTI4Ng=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NDc3Ng==", "bodyText": "I agree that some sort of refactoring could be useful here, but also didn't want to extend the scope once again; sad part is - it's already a builder :D", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424654776", "createdAt": "2020-05-13T18:44:07Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationEnvironmentCloudModelBuilder.java", "diffHunk": "@@ -24,11 +24,13 @@\n \r\n     protected final DeploymentDescriptor deploymentDescriptor;\r\n     protected final String deployId;\r\n+    protected final String namespace;\r\n     protected final boolean prettyPrinting;\r\n \r\n-    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, boolean prettyPrinting) {\r\n+    public ApplicationEnvironmentCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, String deployId, String namespace, boolean prettyPrinting) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNTI4Ng=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTI5MDY2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationMetadataBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTowNzo1NFrOGQEumw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0NToxMlrOGU-6Tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNzg2Nw==", "bodyText": "I think it will be better to use StringUtils from apache commons (org.apache.commons.lang3)", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419507867", "createdAt": "2020-05-04T15:07:54Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationMetadataBuilder.java", "diffHunk": "@@ -17,21 +17,32 @@\n import com.sap.cloud.lm.sl.mta.model.Module;\n import com.sap.cloud.lm.sl.mta.model.ProvidedDependency;\n \n+import io.micrometer.core.instrument.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NTQzOA==", "bodyText": "this was just a typo on my part, good catch!", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424655438", "createdAt": "2020-05-13T18:45:12Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ApplicationMetadataBuilder.java", "diffHunk": "@@ -17,21 +17,32 @@\n import com.sap.cloud.lm.sl.mta.model.Module;\n import com.sap.cloud.lm.sl.mta.model.ProvidedDependency;\n \n+import io.micrometer.core.instrument.util.StringUtils;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNzg2Nw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTI5MTIxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTowODowM1rOGQEu-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTowODowM1rOGQEu-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUwNzk2MQ==", "bodyText": "I think it will be better to use StringUtils from apache commons (org.apache.commons.lang3)", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419507961", "createdAt": "2020-05-04T15:08:03Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/util/MtaMetadataUtil.java", "diffHunk": "@@ -14,16 +14,18 @@\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataAnnotations;\n import com.sap.cloud.lm.sl.cf.core.cf.metadata.MtaMetadataLabels;\n \n+import io.micrometer.core.instrument.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTMxMDgxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ConfigurationEntriesCloudModelBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNToxMjo0MFrOGQE7fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODo0Njo1N1rOGU--Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxMTE2Ng==", "bodyText": "What do you think to use builder (Immutables)?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419511166", "createdAt": "2020-05-04T15:12:40Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ConfigurationEntriesCloudModelBuilder.java", "diffHunk": "@@ -25,11 +25,13 @@\n     private final String orgName;\n     private final String spaceName;\n     private final String spaceId;\n+    private final String namespace;\n \n-    public ConfigurationEntriesCloudModelBuilder(String orgName, String spaceName, String spaceId) {\n+    public ConfigurationEntriesCloudModelBuilder(String orgName, String spaceName, String spaceId, String namespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY1NjQzOQ==", "bodyText": "see comment for ApplicationEnvironmentCloudModelBuilder, it's a good idea", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424656439", "createdAt": "2020-05-13T18:46:57Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ConfigurationEntriesCloudModelBuilder.java", "diffHunk": "@@ -25,11 +25,13 @@\n     private final String orgName;\n     private final String spaceName;\n     private final String spaceId;\n+    private final String namespace;\n \n-    public ConfigurationEntriesCloudModelBuilder(String orgName, String spaceName, String spaceId) {\n+    public ConfigurationEntriesCloudModelBuilder(String orgName, String spaceName, String spaceId, String namespace) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxMTE2Ng=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTM0MjE1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/DummyConfigurationFilterParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNToxOTozOVrOGQFOwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjoyNzoyOFrOGWLtMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNjA5Nw==", "bodyText": "Can we add empty constuctor in super class?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419516097", "createdAt": "2020-05-04T15:19:39Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/DummyConfigurationFilterParser.java", "diffHunk": "@@ -8,7 +8,7 @@\n     private final ConfigurationFilter filter;\n \n     public DummyConfigurationFilterParser(ConfigurationFilter filter) {\n-        super(null, null);\n+        super(null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxMzY0OA==", "bodyText": "I think it's more explicit this way that the null values aren't actually a default behaviour", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r425913648", "createdAt": "2020-05-15T16:27:28Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/DummyConfigurationFilterParser.java", "diffHunk": "@@ -8,7 +8,7 @@\n     private final ConfigurationFilter filter;\n \n     public DummyConfigurationFilterParser(ConfigurationFilter filter) {\n-        super(null, null);\n+        super(null, null, null);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNjA5Nw=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTM2MTI3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/MtaConfigurationPurger.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNToyMzo1OVrOGQFa-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNjozNjo1MFrOGWMDpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxOTIyNg==", "bodyText": "Add builder in ConfigurationEntry class or at least another constructs, passing multiple null arguments is awful.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419519226", "createdAt": "2020-05-04T15:23:59Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/MtaConfigurationPurger.java", "diffHunk": "@@ -148,6 +148,7 @@ private ConfigurationEntry toConfigurationEntry(MtaMetadata metadata, String pro\n                                       null,\n                                       null,\n                                       null,\n+                                      null,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTkxOTM5Nw==", "bodyText": "added constructor as I don't wan't to add more refactorings", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r425919397", "createdAt": "2020-05-15T16:36:50Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/MtaConfigurationPurger.java", "diffHunk": "@@ -148,6 +148,7 @@ private ConfigurationEntry toConfigurationEntry(MtaMetadata metadata, String pro\n                                       null,\n                                       null,\n                                       null,\n+                                      null,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxOTIyNg=="}, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMTQyNTMxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/SystemParameters.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTozNzo0N1rOGQGB6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNTozNzo0N1rOGQGB6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUyOTE5Mw==", "bodyText": "I think it will be better to return previous state of \"isValid\" and \"attemptToCorrect\" methods and add as default methods \"isValid\" and \"attemptToCorrect\" methods with 2 parameters. In this way you wouldn't need to pass null values to all implementations of ParameterValidator interface.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419529193", "createdAt": "2020-05-04T15:37:47Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/SystemParameters.java", "diffHunk": "@@ -174,8 +174,8 @@ private String appendRoutePathIfPresent(String uri, Map<String, Object> modulePa\n     private String getDefaultHost(String moduleName) {\n         String host = (targetName + \" \" + moduleName).replaceAll(\"\\\\s\", \"-\")\n                                                      .toLowerCase();\n-        if (!HOST_VALIDATOR.isValid(host)) {\n-            return HOST_VALIDATOR.attemptToCorrect(host);\n+        if (!HOST_VALIDATOR.isValid(host, null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDAwOTM3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationFilter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1Mjo0MlrOGQeMIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1Mjo0MlrOGQeMIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyNTAyNQ==", "bodyText": "Can we use builder instead?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419925025", "createdAt": "2020-05-05T07:52:42Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationFilter.java", "diffHunk": "@@ -12,25 +13,27 @@\n     private String providerNid;\n     private CloudTarget targetSpace;\n     private String providerVersion;\n+    private String providerNamespace;\n     @JsonIgnore\n     private boolean strictTargetSpace;\n \n     public ConfigurationFilter() {\n         // Required by Jackson\n     }\n \n-    public ConfigurationFilter(String providerNid, String providerId, String providerVersion, CloudTarget targetSpace,\n-                               Map<String, Object> requiredContent) {\n-        this(providerNid, providerId, providerVersion, targetSpace, requiredContent, true);\n+    public ConfigurationFilter(String providerNid, String providerId, String providerVersion, String providerNamespace,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDAxNDUwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/v2/ConfigurationFilterParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1NDoxM1rOGQePMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwNzo1NDoxM1rOGQePMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTkyNTgwOQ==", "bodyText": "If we use builder, it will prevent passing null arguments", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419925809", "createdAt": "2020-05-05T07:54:13Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/helpers/v2/ConfigurationFilterParser.java", "diffHunk": "@@ -49,20 +51,20 @@ private ConfigurationFilter parseOldSyntaxFilter(Resource resource) {\n         String mtaProvidesDependency = getRequiredParameter(parameters, SupportedParameters.MTA_PROVIDES_DEPENDENCY);\n         String mtaVersion = getRequiredParameter(parameters, SupportedParameters.MTA_VERSION);\n         String providerId = ConfigurationEntriesUtil.computeProviderId(mtaId, mtaProvidesDependency);\n-        return new ConfigurationFilter(PROVIDER_NID, providerId, mtaVersion, currentTarget, null);\n+        return new ConfigurationFilter(PROVIDER_NID, providerId, mtaVersion, null, currentTarget, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDE0OTEyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationEntry.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNDowNFrOGQfh5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwODozNDowNFrOGQfh5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk0Njk4Mw==", "bodyText": "Builder it could be used for this class", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419946983", "createdAt": "2020-05-05T08:34:04Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationEntry.java", "diffHunk": "@@ -29,21 +30,22 @@\n     protected ConfigurationEntry() {\n     }\n \n-    public ConfigurationEntry(long id, String providerNid, String providerId, Version providerVersion, CloudTarget targetSpace,\n-                              String content, List<CloudTarget> visibility, String spaceId) {\n+    public ConfigurationEntry(long id, String providerNid, String providerId, Version providerVersion, String providerNamespace,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDMwMTk1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/persistence/query/impl/ConfigurationEntryQueryImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOToxNzowMVrOGQhAHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOToxNzowMVrOGQhAHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk3MTEwMw==", "bodyText": "Is it possible to have null value in DB for provider-namespace? If it is possible, why in ConfigurationEntryDto -@column(name = TableColumnNames.CONFIGURATION_ENTRY_PROVIDER_NAMESPACE, nullable = false)\nnullable is set to false", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419971103", "createdAt": "2020-05-05T09:17:01Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/persistence/query/impl/ConfigurationEntryQueryImpl.java", "diffHunk": "@@ -80,6 +81,31 @@ public ConfigurationEntryQuery providerId(String providerId) {\n         return this;\n     }\n \n+    @Override\n+    public ConfigurationEntryQuery providerNamespace(String providerNamespace, boolean considerNullAsEmpty) {\n+        boolean shouldFilterForEmptyNamespace = ConfigurationEntriesUtil.providerNamespaceIsEmpty(providerNamespace, considerNullAsEmpty);\n+\n+        if (providerNamespace == null && !shouldFilterForEmptyNamespace) {\n+            return this;\n+        }\n+\n+        if (shouldFilterForEmptyNamespace) {\n+            queryCriteria.addRestriction(ImmutableQueryAttributeRestriction.builder()\n+                                                                           .attribute(AttributeNames.PROVIDER_NAMESPACE)\n+                                                                           .condition(getCriteriaBuilder()::equal)\n+                                                                           .value(null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQzMzcyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo1NDoyMVrOGQiRKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQwOTo1NDoyMVrOGQiRKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5MTg0OQ==", "bodyText": "Why not use only primitive types? As I can see the reason is that parseBooleanFlag return object of Boolean, which could be also primitive type. If you use only primitives, you will avoid null check", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419991849", "createdAt": "2020-05-05T09:54:21Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "diffHunk": "@@ -36,28 +41,29 @@ private NameRequirements() {\n     private NameUtil() {\n     }\n \n-    public static String getNamespacePrefix(String namespace) {\n-        return namespace + \".\";\n+    public static boolean isValidName(String name, String namePattern) {\n+        return name.matches(namePattern);\n     }\n \n-    public static String getWithoutNamespacePrefix(String name) {\n-        int i = name.lastIndexOf('.');\n-        return (i >= 0) ? name.substring(i + 1) : name;\n+    public static Boolean parseBooleanFlag(final Map<String, Object> parameters, String flagName) throws ContentException {\n+        Object applyNamespaceParameter = parameters.get(flagName);\n+\n+        if (applyNamespaceParameter != null && !(applyNamespaceParameter instanceof Boolean)) {\n+            throw new ContentException(Messages.COULD_NOT_PARSE_BOOLEAN_FLAG, flagName);\n+        }\n+        return (Boolean) applyNamespaceParameter;\n     }\n \n-    public static boolean isValidName(String name, String namePattern) {\n-        return name.matches(namePattern);\n+    public static boolean resolveApplyNamespaceFlag(boolean applyNamespaceGlobal, Boolean applyNamespaceParameter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQ1Nzg3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMTowN1rOGQifrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMTowN1rOGQifrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NTU2NQ==", "bodyText": "I think it will be better to use primitive boolean type", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419995565", "createdAt": "2020-05-05T10:01:07Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidator.java", "diffHunk": "@@ -38,11 +41,20 @@ public boolean canCorrect() {\n     }\n \n     @Override\n-    public Object attemptToCorrect(Object applicationName) {\n+    public Object attemptToCorrect(Object applicationName, final Map<String, Object> relatedParameters) {\n         if (!(applicationName instanceof String)) {\n             throw new ContentException(Messages.COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0, applicationName);\n         }\n-        return NameUtil.computeValidApplicationName((String) applicationName, namespace, useNamespaces);\n+\n+        Boolean applyNamespaceLocal = NameUtil.parseBooleanFlag(relatedParameters, SupportedParameters.APPLY_NAMESPACE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQ2NDI1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParameterValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMjo1OVrOGQijoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowMjo1OVrOGQijoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5NjU3Ng==", "bodyText": "Use Collections.emptySet() method instead - https://stackoverflow.com/questions/27958698/difference-between-emptylist-and-empty-list-android", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419996576", "createdAt": "2020-05-05T10:02:59Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParameterValidator.java", "diffHunk": "@@ -1,21 +1,28 @@\n package com.sap.cloud.lm.sl.cf.core.validators.parameters;\n \n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Set;\n+\n public interface ParameterValidator {\n \n-    default boolean isValid(Object parameter) {\n+    default boolean isValid(Object parameter, final Map<String, Object> relatedParameters) {\n         return true;\n     }\n \n     default boolean canCorrect() {\n         return false;\n     }\n \n-    default Object attemptToCorrect(Object parameter) {\n+    default Object attemptToCorrect(Object parameter, final Map<String, Object> relatedParameters) {\n         throw new UnsupportedOperationException();\n     }\n \n-    Class<?> getContainerType();\n+    default Set<String> getRelatedParameterNames() {\n+        return Collections.EMPTY_SET;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDQ4MjMyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParameterValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowODoyM1rOGQiusg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDowODoyM1rOGQiusg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTk5OTQxMA==", "bodyText": "I think it will be better to return previous state of \"isValid\" and \"attemptToCorrect\" methods and add as default methods \"isValid\" and \"attemptToCorrect\" methods with 2 parameters. In this way you wouldn't need to pass null values to all implementations of ParameterValidator interface.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r419999410", "createdAt": "2020-05-05T10:08:23Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParameterValidator.java", "diffHunk": "@@ -1,21 +1,28 @@\n package com.sap.cloud.lm.sl.cf.core.validators.parameters;\n \n+import java.util.Collections;\n+import java.util.Map;\n+import java.util.Set;\n+\n public interface ParameterValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDYzNjMwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1NTozNlrOGQkMCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMDo1NTozNlrOGQkMCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAyMzMwNQ==", "bodyText": "Use Collections.emptyMap() method", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420023305", "createdAt": "2020-05-05T10:55:36Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "diffHunk": "@@ -65,28 +67,45 @@ private void correctInvalidPluralParameters(String prefix, ParameterValidator va\n         List<Object> correctedParameterValues = initialParameterValues.stream()\n                                                                       .map(parameter -> validateAndCorrect(ValidatorUtil.getPrefixedName(prefix,\n                                                                                                                                          validator.getParameterName()),\n-                                                                                                           parameter, validator))\n+                                                                                                           parameter, validator,\n+                                                                                                           parameters))\n                                                                       .collect(Collectors.toList());\n         correctedParameters.put(parameterPluralName, correctedParameterValues);\n     }\n \n-    private Object validateAndCorrect(String parameterName, Object parameter, ParameterValidator validator) {\n-        if (shouldCorrectParameter(parameter, validator)) {\n-            return attemptToCorrect(parameterName, parameter, validator);\n+    private Object validateAndCorrect(String parameterName, Object parameter, ParameterValidator validator,\n+                                      Map<String, Object> parameters) {\n+        Map<String, Object> relatedParameters = getRelatedParameters(validator, parameters);\n+\n+        if (shouldCorrectParameter(parameter, validator, relatedParameters)) {\n+            return attemptToCorrect(parameterName, parameter, validator, relatedParameters);\n         } else {\n             return parameter;\n         }\n     }\n \n-    private boolean shouldCorrectParameter(Object parameter, ParameterValidator validator) {\n-        return parameter != null && !validator.isValid(parameter);\n+    private Map<String, Object> getRelatedParameters(ParameterValidator validator, Map<String, Object> parameters) {\n+        Set<String> relatedParameterNames = validator.getRelatedParameterNames();\n+\n+        if (relatedParameterNames.isEmpty()) {\n+            return Collections.EMPTY_MAP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDcxNDIwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToyMDo1M1rOGQk65g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToyMDo1M1rOGQk65g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAzNTMwMg==", "bodyText": "You can use Function.identify() instead name -> name . Also you can use method reference when you build value of the map - parameters::get", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420035302", "createdAt": "2020-05-05T11:20:53Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "diffHunk": "@@ -65,28 +67,45 @@ private void correctInvalidPluralParameters(String prefix, ParameterValidator va\n         List<Object> correctedParameterValues = initialParameterValues.stream()\n                                                                       .map(parameter -> validateAndCorrect(ValidatorUtil.getPrefixedName(prefix,\n                                                                                                                                          validator.getParameterName()),\n-                                                                                                           parameter, validator))\n+                                                                                                           parameter, validator,\n+                                                                                                           parameters))\n                                                                       .collect(Collectors.toList());\n         correctedParameters.put(parameterPluralName, correctedParameterValues);\n     }\n \n-    private Object validateAndCorrect(String parameterName, Object parameter, ParameterValidator validator) {\n-        if (shouldCorrectParameter(parameter, validator)) {\n-            return attemptToCorrect(parameterName, parameter, validator);\n+    private Object validateAndCorrect(String parameterName, Object parameter, ParameterValidator validator,\n+                                      Map<String, Object> parameters) {\n+        Map<String, Object> relatedParameters = getRelatedParameters(validator, parameters);\n+\n+        if (shouldCorrectParameter(parameter, validator, relatedParameters)) {\n+            return attemptToCorrect(parameterName, parameter, validator, relatedParameters);\n         } else {\n             return parameter;\n         }\n     }\n \n-    private boolean shouldCorrectParameter(Object parameter, ParameterValidator validator) {\n-        return parameter != null && !validator.isValid(parameter);\n+    private Map<String, Object> getRelatedParameters(ParameterValidator validator, Map<String, Object> parameters) {\n+        Set<String> relatedParameterNames = validator.getRelatedParameterNames();\n+\n+        if (relatedParameterNames.isEmpty()) {\n+            return Collections.EMPTY_MAP;\n+        }\n+\n+        return relatedParameterNames.stream()\n+                                    .filter(name -> parameters.get(name) != null)\n+                                    .collect(Collectors.toMap(name -> name, name -> parameters.get(name)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 56}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDcyNzE2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToyNToyOFrOGQlC2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMToyNToyOFrOGQlC2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDAzNzMzOA==", "bodyText": "Use primitive boolean", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420037338", "createdAt": "2020-05-05T11:25:28Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidator.java", "diffHunk": "@@ -40,11 +41,20 @@ public boolean canCorrect() {\n     }\n \n     @Override\n-    public Object attemptToCorrect(Object serviceName) {\n+    public Object attemptToCorrect(Object serviceName, final Map<String, Object> relatedParameters) {\n         if (!(serviceName instanceof String)) {\n             throw new ContentException(Messages.COULD_NOT_CREATE_VALID_SERVICE_NAME_FROM_0, serviceName);\n         }\n-        return NameUtil.computeValidServiceName((String) serviceName, namespace, useNamespaces, useNamespacesForServices);\n+\n+        Boolean applyNamespaceLocal = NameUtil.parseBooleanFlag(relatedParameters, SupportedParameters.APPLY_NAMESPACE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDgxNDM1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1Mjo1MlrOGQl4FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMTo1Mjo1MlrOGQl4FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1MDk2NQ==", "bodyText": "How you pass only one argument to constructor when ApplicationNameValidator accepts two?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420050965", "createdAt": "2020-05-05T11:52:52Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "diffHunk": "@@ -20,47 +20,45 @@\n \n     @Test\n     public void testCorrectionWithNoNamespaces() {\n-        boolean useNamespaces = false;\n-        ApplicationNameValidator applicationNameValidator = new ApplicationNameValidator(NAMESPACE, false);\n+        ApplicationNameValidator applicationNameValidator = new ApplicationNameValidator(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDg1NTk0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.persistence/src/main/java/com/sap/cloud/lm/sl/cf/persistence/query/providers/SqlFileQueryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjowNToyM1rOGQmRJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjowNToyM1rOGQmRJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA1NzM4MA==", "bodyText": "These if blocks could be split in separate method and new method will be return statement with already set Strings", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420057380", "createdAt": "2020-05-05T12:05:23Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.persistence/src/main/java/com/sap/cloud/lm/sl/cf/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -101,13 +103,16 @@ public SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDialec\n             ResultSet resultSet = null;\n             try {\n                 List<FileEntry> files = new ArrayList<>();\n-                if (namespace != null) {\n+                if (namespace==null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDg4ODMwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoxNTowMVrOGQmkuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMVQwNjo1OTozOFrOGYoXCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MjM5Mg==", "bodyText": "What will be namespace value if the user does not use namespace feature?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420062392", "createdAt": "2020-05-05T12:15:01Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "diffHunk": "@@ -209,7 +209,7 @@\n     public static final String MTA_SCHEMA_VERSION_DETECTED_AS = \"Detected MTA schema version: \\\"{0}\\\"\";\r\n     public static final String DEPLOYING_IN_ORG_0_AND_SPACE_1 = \"Deploying in org \\\"{0}\\\" and space \\\"{1}\\\"\";\r\n     public static final String NO_DEPLOYED_MTA_DETECTED = \"No deployed MTA detected - this is initial deployment\";\r\n-    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with ID \\\"{0}\\\" and version \\\"{1}\\\"\";\r\n+    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with namespace \\\"{0}\\\", ID \\\"{1}\\\" and version \\\"{2}\\\"\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzMTY1MQ==", "bodyText": "an empty string in quotes", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r428031651", "createdAt": "2020-05-20T13:55:46Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "diffHunk": "@@ -209,7 +209,7 @@\n     public static final String MTA_SCHEMA_VERSION_DETECTED_AS = \"Detected MTA schema version: \\\"{0}\\\"\";\r\n     public static final String DEPLOYING_IN_ORG_0_AND_SPACE_1 = \"Deploying in org \\\"{0}\\\" and space \\\"{1}\\\"\";\r\n     public static final String NO_DEPLOYED_MTA_DETECTED = \"No deployed MTA detected - this is initial deployment\";\r\n-    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with ID \\\"{0}\\\" and version \\\"{1}\\\"\";\r\n+    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with namespace \\\"{0}\\\", ID \\\"{1}\\\" and version \\\"{2}\\\"\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MjM5Mg=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODQ4MDI2NA==", "bodyText": "Sounds fine to me", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r428480264", "createdAt": "2020-05-21T06:59:38Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "diffHunk": "@@ -209,7 +209,7 @@\n     public static final String MTA_SCHEMA_VERSION_DETECTED_AS = \"Detected MTA schema version: \\\"{0}\\\"\";\r\n     public static final String DEPLOYING_IN_ORG_0_AND_SPACE_1 = \"Deploying in org \\\"{0}\\\" and space \\\"{1}\\\"\";\r\n     public static final String NO_DEPLOYED_MTA_DETECTED = \"No deployed MTA detected - this is initial deployment\";\r\n-    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with ID \\\"{0}\\\" and version \\\"{1}\\\"\";\r\n+    public static final String DEPLOYED_MTA_DETECTED_WITH_VERSION = \"Detected deployed MTA with namespace \\\"{0}\\\", ID \\\"{1}\\\" and version \\\"{2}\\\"\";\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MjM5Mg=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDg5Mzg0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoxNjozMlrOGQmoBw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoxNjozMlrOGQmoBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2MzIzOQ==", "bodyText": "What is operation parameter? Is this some parameter provided from command line option?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420063239", "createdAt": "2020-05-05T12:16:32Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/Messages.java", "diffHunk": "@@ -523,6 +523,7 @@\n     public static final String UPDATING_METADATA_OF_APPLICATION_0_TO_1 = \"Updating metadata of application \\\"{0}\\\" to: {1}\";\r\n     public static final String GETTING_SERVICE_INSTANCES_BY_METADATA_LABEL_SELECTOR_0 = \"Getting service instances by metadata label selector \\\"{0}\\\"...\";\r\n     public static final String UPDATING_METADATA_OF_SERVICE_INSTANCE_0_TO_1 = \"Updating metadata of service instance \\\"{0}\\\": {1}\";\r\n+    public static final String NAMESPACE_IN_DESCRIPTOR_IS_OVERWRITTEN = \"Namespace parameter provided multiple times - operation parameter overwriting one given in descriptor.\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDkwNjI5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/metadata/BlueGreenDeployMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoyMDowM1rOGQmvqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOTo1NTo1NFrOGXFfzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NTE5Mw==", "bodyText": "What should be default value for namespace? null or empty string?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420065193", "createdAt": "2020-05-05T12:20:03Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/metadata/BlueGreenDeployMetadata.java", "diffHunk": "@@ -35,13 +35,12 @@\n                                              .type(ParameterType.INTEGER)\n                                              .build());\n         PARAMS.add(ImmutableParameterMetadata.builder()\n-                                             .id(Variables.USE_NAMESPACES.getName())\n-                                             .defaultValue(Variables.USE_NAMESPACES.getDefaultValue())\n-                                             .type(ParameterType.BOOLEAN)\n+                                             .id(Variables.MTA_NAMESPACE.getName())\n+                                             .type(ParameterType.STRING)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2MDQ5Mw==", "bodyText": "I left it null, can change it if you think it'll be easier to understand", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426860493", "createdAt": "2020-05-18T19:55:54Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/metadata/BlueGreenDeployMetadata.java", "diffHunk": "@@ -35,13 +35,12 @@\n                                              .type(ParameterType.INTEGER)\n                                              .build());\n         PARAMS.add(ImmutableParameterMetadata.builder()\n-                                             .id(Variables.USE_NAMESPACES.getName())\n-                                             .defaultValue(Variables.USE_NAMESPACES.getDefaultValue())\n-                                             .type(ParameterType.BOOLEAN)\n+                                             .id(Variables.MTA_NAMESPACE.getName())\n+                                             .type(ParameterType.STRING)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2NTE5Mw=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNDkyODI4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/BuildApplicationDeployModelStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoyNjowOFrOGQm9OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjoyNjowOFrOGQm9OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA2ODY2NA==", "bodyText": "Why log level is warn? Do you intent to send progress message to user's cli? If you don't want to send progress message, you can use infoWithoutProgressMessage method.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420068664", "createdAt": "2020-05-05T12:26:08Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/BuildApplicationDeployModelStep.java", "diffHunk": "@@ -94,7 +95,10 @@ private ConfigurationEntriesCloudModelBuilder getConfigurationEntriesCloudModelB\n         String orgName = context.getVariable(Variables.ORG);\r\n         String spaceName = context.getVariable(Variables.SPACE);\r\n         String spaceId = context.getVariable(Variables.SPACE_ID);\r\n-        return new ConfigurationEntriesCloudModelBuilder(orgName, spaceName, spaceId);\r\n+        String namespace = context.getVariable(Variables.MTA_NAMESPACE);\r\n+        getStepLogger().warn(\"Building configuration entries for org {0}, space {1}, spaceId {2} and namespace {3}!\", orgName, spaceName,\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTA0MDM2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/DetectDeployedMtaStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo1NjoxNlrOGQoDHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo1NjoxNlrOGQoDHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4NjU1Ng==", "bodyText": "Reminder to remove this line", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420086556", "createdAt": "2020-05-05T12:56:16Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/DetectDeployedMtaStep.java", "diffHunk": "@@ -30,17 +31,22 @@ protected StepPhase executeStep(ProcessContext context) {\n         CloudControllerClient client = context.getControllerClient();\n \n         String mtaId = context.getVariable(Variables.MTA_ID);\n+\n+        String mtaNamespace = context.getVariable(Variables.MTA_NAMESPACE);\n         boolean envDetectionEnabled = context.getVariable(Variables.ENABLE_ENV_DETECTION);\n \n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, client, envDetectionEnabled);\n+        getStepLogger().info(\"Detecting MTA by id {0} and namespace {1}\", mtaId, mtaNamespace); // TODO: remove after verification", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTA1MzY3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/MergeDescriptorsStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo1OToyNlrOGQoLLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMjo1OToyNlrOGQoLLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4ODYyMw==", "bodyText": "Remove unnecessary logs message", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420088623", "createdAt": "2020-05-05T12:59:26Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/MergeDescriptorsStep.java", "diffHunk": "@@ -36,9 +36,12 @@ protected StepPhase executeStep(ProcessContext context) {\n         context.setVariable(Variables.DEPLOYMENT_DESCRIPTOR, descriptor);\n         getStepLogger().debug(Messages.DESCRIPTORS_MERGED);\n \n+        getStepLogger().debug(Messages.DESCRIPTORS_MERGED);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTA2MDI1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/MergeDescriptorsStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzowMTowNFrOGQoPVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzowMTowNFrOGQoPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA4OTY4NQ==", "bodyText": "If this is not applicable any longer, remove this comment.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420089685", "createdAt": "2020-05-05T13:01:04Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/MergeDescriptorsStep.java", "diffHunk": "@@ -36,9 +36,12 @@ protected StepPhase executeStep(ProcessContext context) {\n         context.setVariable(Variables.DEPLOYMENT_DESCRIPTOR, descriptor);\n         getStepLogger().debug(Messages.DESCRIPTORS_MERGED);\n \n+        getStepLogger().debug(Messages.DESCRIPTORS_MERGED);\n         return StepPhase.DONE;\n     }\n \n+    // TODO: recalculate the namespace once support in deployment descriptor is added", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTA2NjgxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/PrepareToUndeployStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzowMjo1MFrOGQoTfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDowMjoxMFrOGXFrJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5MDc1MA==", "bodyText": "Git visualize some tabs or spaces which are unnecessary", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420090750", "createdAt": "2020-05-05T13:02:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/PrepareToUndeployStep.java", "diffHunk": "@@ -40,8 +42,8 @@ protected StepPhase executeStep(ProcessContext context) {\n         context.setVariable(Variables.MTA_MAJOR_SCHEMA_VERSION, 2);\r\n \r\n         conflictPreventerSupplier.apply(operationService)\r\n-                                 .acquireLock(mtaId, context.getVariable(Variables.SPACE_ID), context.getExecution()\r\n-                                                                                                     .getProcessInstanceId());\r\n+                                 .acquireLock(mtaId, namespace, context.getVariable(Variables.SPACE_ID), context.getExecution()\r\n+                                                                                                                .getProcessInstanceId());\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2MzM5Nw==", "bodyText": "this is again due to the formatter - maybe you have different settings?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426863397", "createdAt": "2020-05-18T20:02:10Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/PrepareToUndeployStep.java", "diffHunk": "@@ -40,8 +42,8 @@ protected StepPhase executeStep(ProcessContext context) {\n         context.setVariable(Variables.MTA_MAJOR_SCHEMA_VERSION, 2);\r\n \r\n         conflictPreventerSupplier.apply(operationService)\r\n-                                 .acquireLock(mtaId, context.getVariable(Variables.SPACE_ID), context.getExecution()\r\n-                                                                                                     .getProcessInstanceId());\r\n+                                 .acquireLock(mtaId, namespace, context.getVariable(Variables.SPACE_ID), context.getExecution()\r\n+                                                                                                                .getProcessInstanceId());\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5MDc1MA=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTExMjI2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/StepsUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoxMzo1MFrOGQovtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDowMjo1MVrOGXFsdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5Nzk3NA==", "bodyText": "You can avoid using of qualifiedId local variable and else statement if you just use short if -\nreturn StringUtils.isNotEmpty(namespace) ? NAMESPACE_SEPARATOR + mtaId : mtaId;", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420097974", "createdAt": "2020-05-05T13:13:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/StepsUtil.java", "diffHunk": "@@ -98,10 +100,30 @@ public static HandlerFactory getHandlerFactory(VariableScope scope) {\n         int majorSchemaVersion = VariableHandling.get(scope, Variables.MTA_MAJOR_SCHEMA_VERSION);\r\n         return new HandlerFactory(majorSchemaVersion);\r\n     }\r\n+    \r\n+    public static CloudTarget getCloudTarget(VariableScope scope) {\r\n+        String org = VariableHandling.get(scope, Variables.ORG);\r\n+        String space = VariableHandling.get(scope, Variables.SPACE);\r\n+        \r\n+        return new CloudTarget(org, space);\r\n+    }\r\n+\r\n+    public static String getQualifiedMtaId(String mtaId, String namespace) {\r\n+        String qualifiedId;\r\n+\r\n+        if (StringUtils.isNotEmpty(namespace)) {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg2MzczNQ==", "bodyText": "I think it's more readable this way", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426863735", "createdAt": "2020-05-18T20:02:51Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/StepsUtil.java", "diffHunk": "@@ -98,10 +100,30 @@ public static HandlerFactory getHandlerFactory(VariableScope scope) {\n         int majorSchemaVersion = VariableHandling.get(scope, Variables.MTA_MAJOR_SCHEMA_VERSION);\r\n         return new HandlerFactory(majorSchemaVersion);\r\n     }\r\n+    \r\n+    public static CloudTarget getCloudTarget(VariableScope scope) {\r\n+        String org = VariableHandling.get(scope, Variables.ORG);\r\n+        String space = VariableHandling.get(scope, Variables.SPACE);\r\n+        \r\n+        return new CloudTarget(org, space);\r\n+    }\r\n+\r\n+    public static String getQualifiedMtaId(String mtaId, String namespace) {\r\n+        String qualifiedId;\r\n+\r\n+        if (StringUtils.isNotEmpty(namespace)) {\r", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDA5Nzk3NA=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTE2MDk3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/variables/Variables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyNDo1N1rOGQpOJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyNDo1N1rOGQpOJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwNTc2NQ==", "bodyText": "This has been already changed in latest master", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420105765", "createdAt": "2020-05-05T13:24:57Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/variables/Variables.java", "diffHunk": "@@ -114,7 +121,7 @@\n     Variable<String> STEP_EXECUTION = ImmutableSimpleVariable.<String> builder()\n                                                              .name(\"StepExecution\")\n                                                              .build();\n-    // TODO: Saving booleans as strings... Really???\n+    // TODO: Saving booleans as strings... Really??? XD\n     Variable<String> APP_CONTENT_CHANGED = ImmutableSimpleVariable.<String> builder()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTE2Njg3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/resources/com/sap/cloud/lm/sl/cf/process/xs2-deploy.bpmn", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyNjoyMlrOGQpR3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyNjoyMlrOGQpR3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwNjcxOQ==", "bodyText": "This variable should be added in all flowable diagrams", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420106719", "createdAt": "2020-05-05T13:26:22Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/resources/com/sap/cloud/lm/sl/cf/process/xs2-deploy.bpmn", "diffHunk": "@@ -118,6 +118,7 @@\n         <flowable:in source=\"deleteServiceKeys\" target=\"deleteServiceKeys\"></flowable:in>\n         <flowable:in source=\"mtaArchiveElements\" target=\"mtaArchiveElements\"></flowable:in>\n         <flowable:in source=\"appArchiveId\" target=\"appArchiveId\"></flowable:in>\n+        <flowable:in source=\"namespace\" target=\"namespace\"></flowable:in>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTE3NTg0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/test/java/com/sap/cloud/lm/sl/cf/process/steps/CollectSystemParametersStepBaseTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyODoyNlrOGQpXtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzoyODoyNlrOGQpXtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEwODIxMw==", "bodyText": "Shouldn't be \"default\" value of  DEFAULT_NAMESPACE?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420108213", "createdAt": "2020-05-05T13:28:26Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.process/src/test/java/com/sap/cloud/lm/sl/cf/process/steps/CollectSystemParametersStepBaseTest.java", "diffHunk": "@@ -33,8 +33,8 @@\n     protected static final UUID DEFAULT_DOMAIN_GUID = UUID.fromString(\"7b5987e9-4325-4bb6-93e2-a0b1c562e60c\");\n     protected static final VersionRule VERSION_RULE = VersionRule.SAME_HIGHER;\n \n-    protected static final boolean DEFAULT_USE_NAMESPACES = false;\n-    protected static final boolean DEFAULT_USE_NAMESPACES_FOR_SERVICES = false;\n+    protected static final String DEFAULT_NAMESPACE = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTI2MDMzOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0Njo1MlrOGQqMlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo0Njo1MlrOGQqMlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyMTc1MQ==", "bodyText": "I think this structure is complicated. Do you think it will be simpler in that way\n    if (name == null && namespace == null) {\n        return getAllMtas();\n    }\n\n    if (namespace == null) {\n        return getMtasByName;\n    }\n\n    if (name == null) {\n        return getMtasByNamespace;\n    }", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420121751", "createdAt": "2020-05-05T13:46:52Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -40,18 +45,77 @@\n \n     @Override\n     public ResponseEntity<List<Mta>> getMtas(String spaceGuid) {\n-        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasWithoutNamespace(getCloudFoundryClient(spaceGuid));\n         List<Mta> mtas = getMtas(deployedMtas);\n         return ResponseEntity.ok()\n                              .body(mtas);\n     }\n \n     @Override\n     public ResponseEntity<Mta> getMta(String spaceGuid, String mtaId) {\n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, getCloudFoundryClient(spaceGuid), true);\n-        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.MTA_NOT_FOUND, mtaId));\n+        List<DeployedMta> mtas = deployedMtaDetector.detectDeployedMtasByName(mtaId, getCloudFoundryClient(spaceGuid));\n+\n+        if (mtas.isEmpty()) {\n+            throw new NotFoundException(Messages.MTA_NOT_FOUND, mtaId);\n+        }\n+\n+        if (mtas.size() != 1) {\n+            throw new ConflictException(Messages.MTA_SEARCH_NOT_UNIQUE_BY_NAME, mtaId);\n+        }\n+\n+        return ResponseEntity.ok()\n+                             .body(getMta(mtas.get(0)));\n+    }\n+\n+    @Override\n+    public ResponseEntity<List<Mta>> getMtas(String spaceGuid, String namespace, String name) {\n+\n+        if (name == null && namespace == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTI3ODE2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MDo0MlrOGQqXnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MDo0MlrOGQqXnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNDU3Mw==", "bodyText": "Use isEmpty() method instead", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420124573", "createdAt": "2020-05-05T13:50:42Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -40,18 +45,77 @@\n \n     @Override\n     public ResponseEntity<List<Mta>> getMtas(String spaceGuid) {\n-        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasWithoutNamespace(getCloudFoundryClient(spaceGuid));\n         List<Mta> mtas = getMtas(deployedMtas);\n         return ResponseEntity.ok()\n                              .body(mtas);\n     }\n \n     @Override\n     public ResponseEntity<Mta> getMta(String spaceGuid, String mtaId) {\n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, getCloudFoundryClient(spaceGuid), true);\n-        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.MTA_NOT_FOUND, mtaId));\n+        List<DeployedMta> mtas = deployedMtaDetector.detectDeployedMtasByName(mtaId, getCloudFoundryClient(spaceGuid));\n+\n+        if (mtas.isEmpty()) {\n+            throw new NotFoundException(Messages.MTA_NOT_FOUND, mtaId);\n+        }\n+\n+        if (mtas.size() != 1) {\n+            throw new ConflictException(Messages.MTA_SEARCH_NOT_UNIQUE_BY_NAME, mtaId);\n+        }\n+\n+        return ResponseEntity.ok()\n+                             .body(getMta(mtas.get(0)));\n+    }\n+\n+    @Override\n+    public ResponseEntity<List<Mta>> getMtas(String spaceGuid, String namespace, String name) {\n+\n+        if (name == null && namespace == null) {\n+            return getAllMtas(spaceGuid);\n+        } else if (namespace == null) {\n+            return getMtasByName(spaceGuid, name);\n+        } else if (name == null) {\n+            return getMtasByNamespace(spaceGuid, namespace);\n+        }\n+\n+        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMtaByNameAndNamespace(name, namespace,\n+                                                                                                            getCloudFoundryClient(spaceGuid),\n+                                                                                                            true);\n+        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.SPECIFIC_MTA_NOT_FOUND,\n+                                                                                              name,\n+                                                                                              namespace));\n+\n+        return ResponseEntity.ok()\n+                             .body(Arrays.asList(getMta(deployedMta)));\n+    }\n+\n+    protected ResponseEntity<List<Mta>> getAllMtas(String spaceGuid) {\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+\n+        return ResponseEntity.ok()\n+                             .body(getMtas(deployedMtas));\n+    }\n+\n+    protected ResponseEntity<List<Mta>> getMtasByNamespace(String spaceGuid, String namespace) {\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasByNamespace(namespace, getCloudFoundryClient(spaceGuid));\n+\n+        if (deployedMtas.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 102}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTI4MTAyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1MToyM1rOGQqZfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMDoyMDo0NFrOGXGM4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNTA1Mw==", "bodyText": "Maybe it will be better to use mtas.size() > 1", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420125053", "createdAt": "2020-05-05T13:51:23Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -40,18 +45,77 @@\n \n     @Override\n     public ResponseEntity<List<Mta>> getMtas(String spaceGuid) {\n-        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasWithoutNamespace(getCloudFoundryClient(spaceGuid));\n         List<Mta> mtas = getMtas(deployedMtas);\n         return ResponseEntity.ok()\n                              .body(mtas);\n     }\n \n     @Override\n     public ResponseEntity<Mta> getMta(String spaceGuid, String mtaId) {\n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, getCloudFoundryClient(spaceGuid), true);\n-        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.MTA_NOT_FOUND, mtaId));\n+        List<DeployedMta> mtas = deployedMtaDetector.detectDeployedMtasByName(mtaId, getCloudFoundryClient(spaceGuid));\n+\n+        if (mtas.isEmpty()) {\n+            throw new NotFoundException(Messages.MTA_NOT_FOUND, mtaId);\n+        }\n+\n+        if (mtas.size() != 1) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg3MjAzMw==", "bodyText": "it's more explicit this way", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426872033", "createdAt": "2020-05-18T20:20:44Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -40,18 +45,77 @@\n \n     @Override\n     public ResponseEntity<List<Mta>> getMtas(String spaceGuid) {\n-        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasWithoutNamespace(getCloudFoundryClient(spaceGuid));\n         List<Mta> mtas = getMtas(deployedMtas);\n         return ResponseEntity.ok()\n                              .body(mtas);\n     }\n \n     @Override\n     public ResponseEntity<Mta> getMta(String spaceGuid, String mtaId) {\n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, getCloudFoundryClient(spaceGuid), true);\n-        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.MTA_NOT_FOUND, mtaId));\n+        List<DeployedMta> mtas = deployedMtaDetector.detectDeployedMtasByName(mtaId, getCloudFoundryClient(spaceGuid));\n+\n+        if (mtas.isEmpty()) {\n+            throw new NotFoundException(Messages.MTA_NOT_FOUND, mtaId);\n+        }\n+\n+        if (mtas.size() != 1) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyNTA1Mw=="}, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 62}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNTMwODg1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NzowNFrOGQqqoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxMzo1NzowNFrOGQqqoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDEyOTQ0MQ==", "bodyText": "Same comment as above", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r420129441", "createdAt": "2020-05-05T13:57:04Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -40,18 +45,77 @@\n \n     @Override\n     public ResponseEntity<List<Mta>> getMtas(String spaceGuid) {\n-        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasWithoutNamespace(getCloudFoundryClient(spaceGuid));\n         List<Mta> mtas = getMtas(deployedMtas);\n         return ResponseEntity.ok()\n                              .body(mtas);\n     }\n \n     @Override\n     public ResponseEntity<Mta> getMta(String spaceGuid, String mtaId) {\n-        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMta(mtaId, getCloudFoundryClient(spaceGuid), true);\n-        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.MTA_NOT_FOUND, mtaId));\n+        List<DeployedMta> mtas = deployedMtaDetector.detectDeployedMtasByName(mtaId, getCloudFoundryClient(spaceGuid));\n+\n+        if (mtas.isEmpty()) {\n+            throw new NotFoundException(Messages.MTA_NOT_FOUND, mtaId);\n+        }\n+\n+        if (mtas.size() != 1) {\n+            throw new ConflictException(Messages.MTA_SEARCH_NOT_UNIQUE_BY_NAME, mtaId);\n+        }\n+\n+        return ResponseEntity.ok()\n+                             .body(getMta(mtas.get(0)));\n+    }\n+\n+    @Override\n+    public ResponseEntity<List<Mta>> getMtas(String spaceGuid, String namespace, String name) {\n+\n+        if (name == null && namespace == null) {\n+            return getAllMtas(spaceGuid);\n+        } else if (namespace == null) {\n+            return getMtasByName(spaceGuid, name);\n+        } else if (name == null) {\n+            return getMtasByNamespace(spaceGuid, namespace);\n+        }\n+\n+        Optional<DeployedMta> optionalDeployedMta = deployedMtaDetector.detectDeployedMtaByNameAndNamespace(name, namespace,\n+                                                                                                            getCloudFoundryClient(spaceGuid),\n+                                                                                                            true);\n+        DeployedMta deployedMta = optionalDeployedMta.orElseThrow(() -> new NotFoundException(Messages.SPECIFIC_MTA_NOT_FOUND,\n+                                                                                              name,\n+                                                                                              namespace));\n+\n+        return ResponseEntity.ok()\n+                             .body(Arrays.asList(getMta(deployedMta)));\n+    }\n+\n+    protected ResponseEntity<List<Mta>> getAllMtas(String spaceGuid) {\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtas(getCloudFoundryClient(spaceGuid));\n+\n+        return ResponseEntity.ok()\n+                             .body(getMtas(deployedMtas));\n+    }\n+\n+    protected ResponseEntity<List<Mta>> getMtasByNamespace(String spaceGuid, String namespace) {\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasByNamespace(namespace, getCloudFoundryClient(spaceGuid));\n+\n+        if (deployedMtas.size() == 0) {\n+            throw new NotFoundException(Messages.MTAS_NOT_FOUND_BY_NAMESPACE, namespace);\n+        }\n+\n+        return ResponseEntity.ok()\n+                             .body(getMtas(deployedMtas));\n+    }\n+\n+    protected ResponseEntity<List<Mta>> getMtasByName(String spaceGuid, String name) {\n+        List<DeployedMta> deployedMtas = deployedMtaDetector.detectDeployedMtasByName(name, getCloudFoundryClient(spaceGuid));\n+\n+        if (deployedMtas.size() == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDM4OTk4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo0MDowMlrOGSB4Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo0MDowMlrOGSB4Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU1ODMwMw==", "bodyText": "type in namespacce", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r421558303", "createdAt": "2020-05-07T14:40:02Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "diffHunk": "@@ -52,23 +53,32 @@\n     public abstract String getSpace();\n \n     @Override\n+    @ApiModelProperty(hidden = true)\n     public String getConfigurationType() {\n         return \"file metadata\";\n     }\n \n     @Override\n+    @ApiModelProperty(hidden = true)\n     public String getConfigurationName() {\n         return getName();\n     }\n \n+    @Nullable\n+    @ApiModelProperty\n+    @JsonProperty(\"namespace\")\n+    public abstract String getNamespace();\n+\n     @Override\n+    @ApiModelProperty(hidden = true)\n     public List<ConfigurationIdentifier> getConfigurationIdentifiers() {\n         List<ConfigurationIdentifier> configurationIdentifiers = new ArrayList<>();\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"id\", getId()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"digest\", getDigest()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"digestAlgorithm\", getDigestAlgorithm()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"space\", getSpace()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"size\", Objects.toString(getSize())));\n+        configurationIdentifiers.add(new ConfigurationIdentifier(\"namespacce\", Objects.toString(getNamespace())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDQ1NjQwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/resources/com/sap/cloud/lm/sl/cf/core/db/changelog/db-changelog-alter_operation_table_add_namespace_column.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1Mzo1N1rOGSCisA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1Mzo1N1rOGSCisA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2OTIwMA==", "bodyText": "Probably this should have id:\ndb-changelog-alter_operation_table_add_namespace_column", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r421569200", "createdAt": "2020-05-07T14:53:57Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/resources/com/sap/cloud/lm/sl/cf/core/db/changelog/db-changelog-alter_operation_table_add_namespace_column.xml", "diffHunk": "@@ -0,0 +1,12 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+    <changeSet author=\"sap.com\" id=\"db-changelog-alter_configuration_registry_table_add_space_id_column\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyNDQ1OTc1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/resources/com/sap/cloud/lm/sl/cf/core/db/changelog/db-changelog-alter_configuration_registry_table_add_namespace_column.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1NDozOFrOGSCkvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNDo1NDozOFrOGSCkvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU2OTcyNg==", "bodyText": "This should have id:\ndb-changelog-alter_configuration_registry_table_add_namespace_column.xml\nNow both xml have the same changeSet id", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r421569726", "createdAt": "2020-05-07T14:54:38Z", "author": {"login": "boyan-velinov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/resources/com/sap/cloud/lm/sl/cf/core/db/changelog/db-changelog-alter_configuration_registry_table_add_namespace_column.xml", "diffHunk": "@@ -0,0 +1,15 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+    xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog/1.9\n+                      http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-1.9.xsd\">\n+    <changeSet author=\"sap.com\" id=\"db-changelog-alter_configuration_registry_table_add_space_id_column\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzA3MDA3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/v2/MtasApiV2.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzoyMTozNFrOGUxRMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzoyMTozNFrOGUxRMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQzMTkyMQ==", "bodyText": "Do we need V2 in the name of the method. It's already in the name of the class. Having it here as well seems a bit redundant.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424431921", "createdAt": "2020-05-13T13:21:34Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/v2/MtasApiV2.java", "diffHunk": "@@ -0,0 +1,49 @@\n+package com.sap.cloud.lm.sl.cf.web.api.v2;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+\n+import org.springframework.http.MediaType;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.web.bind.annotation.GetMapping;\n+import org.springframework.web.bind.annotation.PathVariable;\n+import org.springframework.web.bind.annotation.RequestMapping;\n+import org.springframework.web.bind.annotation.RequestParam;\n+import org.springframework.web.bind.annotation.RestController;\n+\n+import com.sap.cloud.lm.sl.cf.web.api.Constants.Endpoints;\n+import com.sap.cloud.lm.sl.cf.web.api.Constants.PathVariables;\n+import com.sap.cloud.lm.sl.cf.web.api.Constants.RequestVariables;\n+import com.sap.cloud.lm.sl.cf.web.api.MtasApiService;\n+import com.sap.cloud.lm.sl.cf.web.api.model.Mta;\n+\n+import io.swagger.annotations.Api;\n+import io.swagger.annotations.ApiOperation;\n+import io.swagger.annotations.ApiParam;\n+import io.swagger.annotations.ApiResponse;\n+import io.swagger.annotations.ApiResponses;\n+import io.swagger.annotations.Authorization;\n+\n+@Api(description = \"mtas API V2\")\n+@RestController\n+@RequestMapping(Endpoints.V2_MTAS)\n+public class MtasApiV2 {\n+\n+    @Inject\n+    private MtasApiService delegate;\n+\n+    @GetMapping(produces = { MediaType.APPLICATION_JSON_VALUE, MediaType.APPLICATION_JSON_UTF8_VALUE })\n+    @ApiOperation(value = \"\", notes = \"Retrieves all Multi-Target Applications in a space \", response = Mta.class, responseContainer = \"List\", authorizations = {\n+        @Authorization(value = \"oauth2\", scopes = {\n+\n+        }) }, tags = {})\n+    @ApiResponses(value = { @ApiResponse(code = 200, message = \"OK\", response = Mta.class, responseContainer = \"List\") })\n+    public ResponseEntity<List<Mta>>\n+           getMtasV2(@ApiParam(value = \"GUID of space with mtas\") @PathVariable(PathVariables.SPACE_GUID) String spaceGuid,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzEyMTk1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/HandlerFactory.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzozMzoxM1rOGUxywQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMDoyMFrOGU9Rfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0MDUxMw==", "bodyText": "Would it make sense to include the namespace in the DeployedMta object somehow?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424440513", "createdAt": "2020-05-13T13:33:13Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/HandlerFactory.java", "diffHunk": "@@ -106,14 +106,15 @@ public PlatformMerger getPlatformMerger(Platform platform) {\n \n     @Override\n     public ApplicationCloudModelBuilder getApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting,\n-                                                                        DeployedMta deployedMta, String deployId,\n+                                                                        DeployedMta deployedMta, String deployId, String namespace,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyODYwNw==", "bodyText": "deployedMta would be null for an initial deployment. Also, it is already included in the metadata, but we cannot rely on it for the reason above", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424628607", "createdAt": "2020-05-13T18:00:20Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/HandlerFactory.java", "diffHunk": "@@ -106,14 +106,15 @@ public PlatformMerger getPlatformMerger(Platform platform) {\n \n     @Override\n     public ApplicationCloudModelBuilder getApplicationCloudModelBuilder(DeploymentDescriptor deploymentDescriptor, boolean prettyPrinting,\n-                                                                        DeployedMta deployedMta, String deployId,\n+                                                                        DeployedMta deployedMta, String deployId, String namespace,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0MDUxMw=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzE0NTMyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzozODoyNVrOGUyBrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODowMTozN1rOGU9UUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0NDMzNA==", "bodyText": "Why wouldn't this work? From what I can tell, DeployedMta objects are compared based only on their metadata (the rest of the fields are annotated with @Value.Auxiliary, which means they're not considered in the equals method).", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424444334", "createdAt": "2020-05-13T13:38:25Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "diffHunk": "@@ -49,27 +110,23 @@\n         return mtaMetadataEntityAggregator.aggregate(mtaMetadataEntities);\n     }\n \n-    private List<DeployedMta> getDeployedMtasByEnv(CloudControllerClient client, List<DeployedMta> deployedMtas) {\n-        return deployedMtaEnvDetector.detectDeployedMtas(client)\n-                                     .stream()\n-                                     .filter(deployedMtaByEnv -> !deployedMtas.contains(deployedMtaByEnv))\n-                                     .collect(Collectors.toList());\n-    }\n+    /**\n+     * Extra step required for backwards compatibility (see {@link DeployedMtaEnvDetector})\n+     *\n+     * @param mtasByMetadata\n+     * @param mtasByEnv\n+     * @return\n+     */\n+    private List<DeployedMta> combineMetadataAndEnvMtas(List<DeployedMta> mtasByMetadata, List<DeployedMta> mtasByEnv) {\n \n-    public Optional<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client, boolean envDetectionEnabled) {\n-        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n-                                                                          .label(MtaMetadataLabels.MTA_ID)\n-                                                                          .haveValue(MtaMetadataUtil.getHashedMtaId(mtaId))\n-                                                                          .build();\n-        List<DeployedMta> deployedMtasByMetadata = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n-        if (!deployedMtasByMetadata.isEmpty()) {\n-            return deployedMtasByMetadata.stream()\n-                                         .findFirst();\n-        }\n-        if (envDetectionEnabled) {\n-            return deployedMtaEnvDetector.detectDeployedMta(mtaId, client);\n-        }\n-        return Optional.empty();\n+        List<DeployedMta> missedMtas = mtasByEnv.stream()\n+                                                .filter(mta -> !mtasByMetadata.contains(mta)) // TODO: test how well this", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYyOTMyOQ==", "bodyText": "yeah, it actually worked when manual testing, this was more a reminder for me to double-check it", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424629329", "createdAt": "2020-05-13T18:01:37Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/detect/DeployedMtaDetector.java", "diffHunk": "@@ -49,27 +110,23 @@\n         return mtaMetadataEntityAggregator.aggregate(mtaMetadataEntities);\n     }\n \n-    private List<DeployedMta> getDeployedMtasByEnv(CloudControllerClient client, List<DeployedMta> deployedMtas) {\n-        return deployedMtaEnvDetector.detectDeployedMtas(client)\n-                                     .stream()\n-                                     .filter(deployedMtaByEnv -> !deployedMtas.contains(deployedMtaByEnv))\n-                                     .collect(Collectors.toList());\n-    }\n+    /**\n+     * Extra step required for backwards compatibility (see {@link DeployedMtaEnvDetector})\n+     *\n+     * @param mtasByMetadata\n+     * @param mtasByEnv\n+     * @return\n+     */\n+    private List<DeployedMta> combineMetadataAndEnvMtas(List<DeployedMta> mtasByMetadata, List<DeployedMta> mtasByEnv) {\n \n-    public Optional<DeployedMta> detectDeployedMta(String mtaId, CloudControllerClient client, boolean envDetectionEnabled) {\n-        MtaMetadataCriteria selectionCriteria = MtaMetadataCriteriaBuilder.builder()\n-                                                                          .label(MtaMetadataLabels.MTA_ID)\n-                                                                          .haveValue(MtaMetadataUtil.getHashedMtaId(mtaId))\n-                                                                          .build();\n-        List<DeployedMta> deployedMtasByMetadata = getDeployedMtasByMetadataSelectionCriteria(selectionCriteria, client);\n-        if (!deployedMtasByMetadata.isEmpty()) {\n-            return deployedMtasByMetadata.stream()\n-                                         .findFirst();\n-        }\n-        if (envDetectionEnabled) {\n-            return deployedMtaEnvDetector.detectDeployedMta(mtaId, client);\n-        }\n-        return Optional.empty();\n+        List<DeployedMta> missedMtas = mtasByEnv.stream()\n+                                                .filter(mta -> !mtasByMetadata.contains(mta)) // TODO: test how well this", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ0NDMzNA=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 118}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI1MDY1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowMDo1OVrOGUzFLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODoyODoyN1rOGU-T5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTYxNA==", "bodyText": "What's this? Why do we have the same piece of code in two places? :O", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424461614", "createdAt": "2020-05-13T14:00:59Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));\n         return entitiesByMtaId.entrySet()\n                               .stream()\n-                              .map(entry -> toDeployedMta(entry.getKey(), entry.getValue()))\n+                              .map(entry -> toDeployedMta(entry.getValue()))\n                               .collect(Collectors.toList());\n     }\n \n-    private String getMtaId(CloudEntity entity) {\n-        return mtaMetadataParser.parseMtaMetadata(entity)\n-                                .getId();\n-    }\n-\n-    private DeployedMta toDeployedMta(String mtaId, List<CloudEntity> entities) {\n-        Version mtaVersion = getMtaVersion(entities);\n-        MtaMetadata mtaMetadata = getMtaMetadata(mtaId, mtaVersion);\n+    private DeployedMta toDeployedMta(List<CloudEntity> entities) {\n+        MtaMetadata mtaMetadata = getMtaMetadata(entities);\n         List<DeployedMtaApplication> applications = getApplications(entities);\n         List<DeployedMtaService> services = getServices(entities);\n         List<DeployedMtaService> userProvidedServices = getUserProvidedServices(applications, services);\n+        \n         return ImmutableDeployedMta.builder()\n                                    .metadata(mtaMetadata)\n                                    .applications(applications)\n                                    .services(ListUtils.union(services, userProvidedServices))\n                                    .build();\n     }\n \n-    private Version getMtaVersion(List<CloudEntity> entities) {\n+    private MtaMetadata getMtaMetadata(List<CloudEntity> entities) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDY0NTYwNQ==", "bodyText": "good question :D", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424645605", "createdAt": "2020-05-13T18:28:27Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));\n         return entitiesByMtaId.entrySet()\n                               .stream()\n-                              .map(entry -> toDeployedMta(entry.getKey(), entry.getValue()))\n+                              .map(entry -> toDeployedMta(entry.getValue()))\n                               .collect(Collectors.toList());\n     }\n \n-    private String getMtaId(CloudEntity entity) {\n-        return mtaMetadataParser.parseMtaMetadata(entity)\n-                                .getId();\n-    }\n-\n-    private DeployedMta toDeployedMta(String mtaId, List<CloudEntity> entities) {\n-        Version mtaVersion = getMtaVersion(entities);\n-        MtaMetadata mtaMetadata = getMtaMetadata(mtaId, mtaVersion);\n+    private DeployedMta toDeployedMta(List<CloudEntity> entities) {\n+        MtaMetadata mtaMetadata = getMtaMetadata(entities);\n         List<DeployedMtaApplication> applications = getApplications(entities);\n         List<DeployedMtaService> services = getServices(entities);\n         List<DeployedMtaService> userProvidedServices = getUserProvidedServices(applications, services);\n+        \n         return ImmutableDeployedMta.builder()\n                                    .metadata(mtaMetadata)\n                                    .applications(applications)\n                                    .services(ListUtils.union(services, userProvidedServices))\n                                    .build();\n     }\n \n-    private Version getMtaVersion(List<CloudEntity> entities) {\n+    private MtaMetadata getMtaMetadata(List<CloudEntity> entities) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2MTYxNA=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI3MzU4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDowNjowNlrOGUzUBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxODoxMjo1N1rOGU9u2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2NTQxNA==", "bodyText": "Can't we group based on mtaMetadataParser::parseMtaMetadata?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424465414", "createdAt": "2020-05-13T14:06:06Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDYzNjEyMQ==", "bodyText": "there is some preexisting logic about parsing versions that can differ between entities, so I assumed I cannot use the whole metadata", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424636121", "createdAt": "2020-05-13T18:12:57Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -34,49 +35,52 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n \n     public List<DeployedMta> aggregate(List<CloudEntity> entities) {\n         Map<String, List<CloudEntity>> entitiesByMtaId = entities.stream()\n-                                                                 .collect(Collectors.groupingBy(this::getMtaId));\n+                                                                 .collect(Collectors.groupingBy(mtaMetadataParser::parseQualifiedMtaId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2NTQxNA=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzI5Njg1OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxMToyOVrOGUzjSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxMToyOVrOGUzjSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2OTMyMw==", "bodyText": "Why is there an extra check for applications (StringUtils.isNotEmpty(namespace)), but not here?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424469323", "createdAt": "2020-05-13T14:11:29Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "diffHunk": "@@ -16,12 +16,15 @@\n \n public class ServiceMetadataBuilder {\n \n-    public static Metadata build(DeploymentDescriptor deploymentDescriptor, Resource resource) {\n-        String hashedMtaId = MtaMetadataUtil.getHashedMtaId(deploymentDescriptor.getId());\n+    public static Metadata build(DeploymentDescriptor deploymentDescriptor, String namespace, Resource resource) {\n+        String hashedMtaId = MtaMetadataUtil.getHashedLabel(deploymentDescriptor.getId());\n+        String hashedNamespace = MtaMetadataUtil.getHashedLabel(namespace);\n         String mtaResourceAnnotation = buildMtaResourceAnnotation(resource);\n         return Metadata.builder()\n                        .label(MtaMetadataLabels.MTA_ID, hashedMtaId)\n+                       .label(MtaMetadataLabels.MTA_NAMESPACE, hashedNamespace)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzMwMDQxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServicesCloudModelBuilder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxMjoxNVrOGUzlhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxMjoxNVrOGUzlhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ2OTg5Mg==", "bodyText": "I think the old formatting was the correct one. .name and `.builder are not aligned now.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424469892", "createdAt": "2020-05-13T14:12:15Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServicesCloudModelBuilder.java", "diffHunk": "@@ -71,24 +73,25 @@ protected CloudServiceInstanceExtended createManagedService(Resource resource, S\n                                                                 boolean shouldIgnoreUpdateErrors) {\r\n         Map<String, Object> parameters = resource.getParameters();\r\n         SpecialResourceTypesRequiredParametersUtil.checkRequiredParameters(serviceName, ResourceType.MANAGED_SERVICE, parameters);\r\n+        \r\n         return ImmutableCloudServiceInstanceExtended.builder()\r\n-                                                    .name(serviceName)\r\n-                                                    .resourceName(resource.getName())\r\n-                                                    .label((String) parameters.get(SupportedParameters.SERVICE))\r\n-                                                    .plan((String) parameters.get(SupportedParameters.SERVICE_PLAN))\r\n-                                                    .type(ServiceInstanceType.MANAGED)\r\n-                                                    .provider((String) parameters.get(SupportedParameters.SERVICE_PROVIDER))\r\n-                                                    .version((String) parameters.get(SupportedParameters.SERVICE_VERSION))\r\n-                                                    .tags((List<String>) parameters.getOrDefault(SupportedParameters.SERVICE_TAGS,\r\n-                                                                                                 Collections.emptyList()))\r\n-                                                    .credentials(getServiceParameters(serviceName, parameters))\r\n-                                                    .alternativeLabels((List<String>) parameters.getOrDefault(SupportedParameters.SERVICE_ALTERNATIVES,\r\n-                                                                                                              Collections.emptyList()))\r\n-                                                    .isOptional(isOptional)\r\n-                                                    .isManaged(true)\r\n-                                                    .shouldIgnoreUpdateErrors(shouldIgnoreUpdateErrors)\r\n-                                                    .v3Metadata(ServiceMetadataBuilder.build(deploymentDescriptor, resource))\r\n-                                                    .build();\r\n+                                            .name(serviceName)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzMyOTAyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationFilter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxODoyMVrOGUz3wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoxODoyMVrOGUz3wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ3NDU2Mg==", "bodyText": "Put this below the matches method so that the class reads more naturally.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424474562", "createdAt": "2020-05-13T14:18:21Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/ConfigurationFilter.java", "diffHunk": "@@ -57,6 +60,22 @@ public String getProviderId() {\n     public boolean isStrictTargetSpace() {\n         return strictTargetSpace;\n     }\n+    \n+    public String getProviderNamespace() {\n+        return providerNamespace;\n+    }\n+\n+    private boolean namespaceConstraintIsSatisfied(String providerNamespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzM3NDM4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/persistence/query/impl/ConfigurationEntryQueryImpl.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDoyODoxMFrOGU0VoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxODo0MzowM1rOGWP9nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MjIwOQ==", "bodyText": "This whole isEmpty and considerNullAsEmpty takes too many brain cells to comprehend. Can we make the column non-nullable and add \"default\" everywhere when creating it? Would this save us from this complexity?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424482209", "createdAt": "2020-05-13T14:28:10Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/persistence/query/impl/ConfigurationEntryQueryImpl.java", "diffHunk": "@@ -80,6 +81,31 @@ public ConfigurationEntryQuery providerId(String providerId) {\n         return this;\n     }\n \n+    @Override\n+    public ConfigurationEntryQuery providerNamespace(String providerNamespace, boolean considerNullAsEmpty) {\n+        boolean shouldFilterForEmptyNamespace = ConfigurationEntriesUtil.providerNamespaceIsEmpty(providerNamespace, considerNullAsEmpty);\n+\n+        if (providerNamespace == null && !shouldFilterForEmptyNamespace) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTk4MzM5MQ==", "bodyText": "I agree it is too complex in the code, but it isn't directly related to whether we save null values in the database. Would removing the 'considerNullAsEmpty' flag and passing 'default' constant as namespace solve this?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r425983391", "createdAt": "2020-05-15T18:43:03Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/persistence/query/impl/ConfigurationEntryQueryImpl.java", "diffHunk": "@@ -80,6 +81,31 @@ public ConfigurationEntryQuery providerId(String providerId) {\n         return this;\n     }\n \n+    @Override\n+    public ConfigurationEntryQuery providerNamespace(String providerNamespace, boolean considerNullAsEmpty) {\n+        boolean shouldFilterForEmptyNamespace = ConfigurationEntriesUtil.providerNamespaceIsEmpty(providerNamespace, considerNullAsEmpty);\n+\n+        if (providerNamespace == null && !shouldFilterForEmptyNamespace) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MjIwOQ=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzM4NDIxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMDoxNlrOGU0b6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozMDoxNlrOGU0b6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4MzgxNw==", "bodyText": "This method does not belong in this class. Also, check whether MapUtils.getBoolean would work for you.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424483817", "createdAt": "2020-05-13T14:30:16Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "diffHunk": "@@ -36,28 +41,29 @@ private NameRequirements() {\n     private NameUtil() {\n     }\n \n-    public static String getNamespacePrefix(String namespace) {\n-        return namespace + \".\";\n+    public static boolean isValidName(String name, String namePattern) {\n+        return name.matches(namePattern);\n     }\n \n-    public static String getWithoutNamespacePrefix(String name) {\n-        int i = name.lastIndexOf('.');\n-        return (i >= 0) ? name.substring(i + 1) : name;\n+    public static Boolean parseBooleanFlag(final Map<String, Object> parameters, String flagName) throws ContentException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzQwODg0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozNTozOVrOGU0r-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDowMjo1NVrOGYNWMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NzkyOQ==", "bodyText": "Why not add the prefix before applying getNameWithProperLength? With the current piece of code if I supply a long enough namespace I'd get a new SLException(Messages.CANNOT_SHORTEN_NAME_TO_N_CHARACTERS, name, maxLength); because maxLength - prefix.length() would be a negative number.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424487929", "createdAt": "2020-05-13T14:35:39Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "diffHunk": "@@ -89,6 +95,18 @@ public static String getNameWithProperLength(String name, int maxLength) {\n         return name;\n     }\n \n+    private static String computeNamespacedNameWithLength(String name, String namespace, boolean applyNamespace, int maxLength) {\n+        String prefix = \"\";\n+        if (StringUtils.isNotEmpty(namespace) && applyNamespace) {\n+            prefix = getNamespacePrefix(namespace);\n+        }\n+        return prefix + getNameWithProperLength(name, maxLength - prefix.length());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjYyMzkzOA==", "bodyText": "if we add the prefix before - this could lead to the prefix also getting hashed for long prefixes; I agree the length exception is a bad way to notify the user though", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426623938", "createdAt": "2020-05-18T13:25:54Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "diffHunk": "@@ -89,6 +95,18 @@ public static String getNameWithProperLength(String name, int maxLength) {\n         return name;\n     }\n \n+    private static String computeNamespacedNameWithLength(String name, String namespace, boolean applyNamespace, int maxLength) {\n+        String prefix = \"\";\n+        if (StringUtils.isNotEmpty(namespace) && applyNamespace) {\n+            prefix = getNamespacePrefix(namespace);\n+        }\n+        return prefix + getNameWithProperLength(name, maxLength - prefix.length());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NzkyOQ=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODAzNzY4Mg==", "bodyText": "prefix is now passed as part of name so it will be possible to hash longer namespace-name strings but also hash the namespace itself", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r428037682", "createdAt": "2020-05-20T14:02:55Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/NameUtil.java", "diffHunk": "@@ -89,6 +95,18 @@ public static String getNameWithProperLength(String name, int maxLength) {\n         return name;\n     }\n \n+    private static String computeNamespacedNameWithLength(String name, String namespace, boolean applyNamespace, int maxLength) {\n+        String prefix = \"\";\n+        if (StringUtils.isNotEmpty(namespace) && applyNamespace) {\n+            prefix = getNamespacePrefix(namespace);\n+        }\n+        return prefix + getNameWithProperLength(name, maxLength - prefix.length());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ4NzkyOQ=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzQyMzgwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDozODo0NVrOGU01ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxMzo1Njo0N1rOGW4WdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5MDM0MQ==", "bodyText": "Can we use MapUtil.getBoolean(relatedParameters, SupportedParameters.APPLY_NAMESPACE, applyNamespaceGlobal);. That way we shouldn't even need the NameUtil.resolveApplyNamespaceFlag method.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424490341", "createdAt": "2020-05-13T14:38:45Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidator.java", "diffHunk": "@@ -38,11 +41,20 @@ public boolean canCorrect() {\n     }\n \n     @Override\n-    public Object attemptToCorrect(Object applicationName) {\n+    public Object attemptToCorrect(Object applicationName, final Map<String, Object> relatedParameters) {\n         if (!(applicationName instanceof String)) {\n             throw new ContentException(Messages.COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0, applicationName);\n         }\n-        return NameUtil.computeValidApplicationName((String) applicationName, namespace, useNamespaces);\n+\n+        Boolean applyNamespaceLocal = NameUtil.parseBooleanFlag(relatedParameters, SupportedParameters.APPLY_NAMESPACE);\n+        boolean applyNamespace = NameUtil.resolveApplyNamespaceFlag(applyNamespaceGlobal, applyNamespaceLocal);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjY0NTEwOA==", "bodyText": "the MapUtil method does some additional parsing (\"1\" would be considered as true); also resolve method is needed because the global value isn't simply a default e.g.: global values of 'false' and an excplicit local value of 'true' -> this should be resolved to 'false'", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r426645108", "createdAt": "2020-05-18T13:56:47Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidator.java", "diffHunk": "@@ -38,11 +41,20 @@ public boolean canCorrect() {\n     }\n \n     @Override\n-    public Object attemptToCorrect(Object applicationName) {\n+    public Object attemptToCorrect(Object applicationName, final Map<String, Object> relatedParameters) {\n         if (!(applicationName instanceof String)) {\n             throw new ContentException(Messages.COULD_NOT_CREATE_VALID_APPLICATION_NAME_FROM_0, applicationName);\n         }\n-        return NameUtil.computeValidApplicationName((String) applicationName, namespace, useNamespaces);\n+\n+        Boolean applyNamespaceLocal = NameUtil.parseBooleanFlag(relatedParameters, SupportedParameters.APPLY_NAMESPACE);\n+        boolean applyNamespace = NameUtil.resolveApplyNamespaceFlag(applyNamespaceGlobal, applyNamespaceLocal);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQ5MDM0MQ=="}, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzUwMzMxOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/variables/Variables.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NTowMVrOGU1oMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NTowMVrOGU1oMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwMzM0NQ==", "bodyText": "The pattern we have so far is to use camel case for variable names.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424503345", "createdAt": "2020-05-13T14:55:01Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/variables/Variables.java", "diffHunk": "@@ -74,6 +74,13 @@\n     Variable<String> MTA_ID = ImmutableSimpleVariable.<String> builder()\n                                                      .name(\"mtaId\")\n                                                      .build();\n+    Variable<String> MTA_NAMESPACE = ImmutableSimpleVariable.<String> builder()\n+                                                            .name(\"namespace\")\n+                                                            .build();\n+    Variable<Boolean> APPLY_NAMESPACE = ImmutableSimpleVariable.<Boolean> builder()\n+                                                                           .name(\"apply-namespace\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MzUwNTk4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/metadata/DeployMetadata.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NToyOVrOGU1p4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxNDo1NToyOVrOGU1p4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDUwMzc3Ng==", "bodyText": "Why not Variables.APPLY_NAMESPACE.getDefaultValue()?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424503776", "createdAt": "2020-05-13T14:55:29Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/metadata/DeployMetadata.java", "diffHunk": "@@ -34,14 +34,13 @@\n                                              .defaultValue(Variables.START_TIMEOUT.getDefaultValue())\r\n                                              .build());\r\n         PARAMS.add(ImmutableParameterMetadata.builder()\r\n-                                             .id(Variables.USE_NAMESPACES.getName())\r\n-                                             .type(ParameterType.BOOLEAN)\r\n-                                             .defaultValue(Variables.USE_NAMESPACES.getDefaultValue())\r\n+                                             .id(Variables.MTA_NAMESPACE.getName())\r\n+                                             .type(ParameterType.STRING)\r\n                                              .build());\r\n         PARAMS.add(ImmutableParameterMetadata.builder()\r\n-                                             .id(Variables.USE_NAMESPACES_FOR_SERVICES.getName())\r\n+                                             .id(Variables.APPLY_NAMESPACE.getName())\r\n                                              .type(ParameterType.BOOLEAN)\r\n-                                             .defaultValue(Variables.USE_NAMESPACES_FOR_SERVICES.getDefaultValue())\r\n+                                             .defaultValue(false)\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjAwNDMyOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/DeleteDiscontinuedConfigurationEntriesForAppStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo0NDoyNFrOGVOH-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo0NDoyNFrOGVOH-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwNDY5OA==", "bodyText": "Inconsistent naming. It should be \"configuration entries\" and not \"config entries\".", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424904698", "createdAt": "2020-05-14T06:44:24Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/DeleteDiscontinuedConfigurationEntriesForAppStep.java", "diffHunk": "@@ -92,24 +106,8 @@ private DeployedMtaApplication getDeployedMtaApplication(CloudApplication existi\n         return envMtaMetadataParser.parseDeployedMtaApplication(existingApp);\n     }\n \n-    @Override\n-    protected String getStepErrorMessage(ProcessContext context) {\n-        return MessageFormat.format(Messages.ERROR_DELETING_DISCONTINUED_CONFIGURATION_ENTRIES_FOR_APP,\n-                                    context.getVariable(Variables.EXISTING_APP)\n-                                           .getName());\n-    }\n-\n-    private List<ConfigurationEntry> getEntriesToDelete(String mtaId, String mtaVersion, CloudTarget target,\n-                                                        List<String> providedDependencyNames, List<ConfigurationEntry> publishedEntries) {\n-        List<ConfigurationEntry> entriesForCurrentMta = getEntries(mtaId, mtaVersion, target);\n-        List<ConfigurationEntry> entriesForCurrentModule = getConfigurationEntriesWithProviderIds(entriesForCurrentMta,\n-                                                                                                  getProviderIds(mtaId,\n-                                                                                                                 providedDependencyNames));\n-        return getEntriesNotUpdatedByThisProcess(entriesForCurrentModule, publishedEntries);\n-    }\n-\n-    private List<ConfigurationEntry> getEntriesNotUpdatedByThisProcess(List<ConfigurationEntry> entriesForCurrentModule,\n-                                                                       List<ConfigurationEntry> publishedEntries) {\n+    private List<ConfigurationEntry> getConfigEntriesNotUpdatedByThisProcess(List<ConfigurationEntry> entriesForCurrentModule,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjAyNzE3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MjoyMlrOGVOVwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MjoyMlrOGVOVwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwODIyNA==", "bodyText": "I think it would be more consistent if the message said `MTAs with name \"{0}\" do not exist\".", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424908224", "createdAt": "2020-05-14T06:52:22Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "diffHunk": "@@ -18,6 +18,10 @@\n \r\n     // ERROR log messages\r\n     public static final String MTA_NOT_FOUND = \"MTA with id \\\"{0}\\\" does not exist\";\r\n+    public static final String MTAS_NOT_FOUND_BY_NAME = \"MTAs with name \\\"{0}\\\" not found\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjAyNzcwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MjozMFrOGVOWCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MjozMFrOGVOWCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwODI5OQ==", "bodyText": "I think it would be more consistent if the message said `MTAs with namespace \"{0}\" do not exist\".", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424908299", "createdAt": "2020-05-14T06:52:30Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "diffHunk": "@@ -18,6 +18,10 @@\n \r\n     // ERROR log messages\r\n     public static final String MTA_NOT_FOUND = \"MTA with id \\\"{0}\\\" does not exist\";\r\n+    public static final String MTAS_NOT_FOUND_BY_NAME = \"MTAs with name \\\"{0}\\\" not found\";\r\n+    public static final String MTAS_NOT_FOUND_BY_NAMESPACE = \"MTAs with namespace \\\"{0}\\\" not found\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjAzMDgwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MzozNlrOGVOYAA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1MzozNlrOGVOYAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkwODgwMA==", "bodyText": "We're trying not to use anything from Guava, since it's just a transitive dependency coming from JClouds.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424908800", "createdAt": "2020-05-14T06:53:36Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/api/impl/MtasApiServiceImpl.java", "diffHunk": "@@ -1,15 +1,18 @@\n package com.sap.cloud.lm.sl.cf.web.api.impl;\n \n+import java.util.Arrays;\n import java.util.List;\n import java.util.Optional;\n import java.util.stream.Collectors;\n \n import javax.inject.Inject;\n import javax.inject.Named;\n \n+import org.apache.commons.collections4.ListUtils;\n import org.cloudfoundry.client.lib.CloudControllerClient;\n import org.springframework.http.ResponseEntity;\n \n+import com.google.common.collect.Lists;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6e66d37be8823da7a463e74c369b607600873c9"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjA0MTI0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1NzoyNlrOGVOeqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1NzoyNlrOGVOeqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxMDUwNQ==", "bodyText": "Internal DL. Do we want this exposed?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424910505", "createdAt": "2020-05-14T06:57:26Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/pom.xml", "diffHunk": "@@ -51,4 +51,75 @@\n             <artifactId>com.sap.cloud.lm.sl.mta</artifactId>\r\n         </dependency>\r\n     </dependencies>\r\n+\t\r\n+\t<build>\r\n+\t\t<plugins>\r\n+\t\t\t<plugin>\r\n+\t\t\t\t<groupId>com.github.kongchen</groupId>\r\n+\t\t\t\t<artifactId>swagger-maven-plugin</artifactId>\r\n+\t\t\t\t<version>3.1.8</version>\r\n+\t\t\t\t<configuration>\r\n+\t\t\t\t\t<skipSwaggerGeneration>false</skipSwaggerGeneration>\r\n+\t\t\t\t\t<apiSources>\r\n+\t\t\t\t\t\t<apiSource>\r\n+\t\t\t\t\t\t\t<springmvc>true</springmvc>\r\n+\t\t\t\t\t\t\t<schemes>https</schemes>\r\n+\t\t\t\t\t\t\t<info>\r\n+\t\t\t\t\t\t\t\t<title>MTA REST API</title>\r\n+\t\t\t\t\t\t\t\t<description>This is an API for the deploy-service(MTA) application</description>\r\n+\t\t\t\t\t\t\t\t<contact>\r\n+\t\t\t\t\t\t\t\t\t<email>DL_563CD7577BCF844DBD000037@exchange.sap.corp</email>\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88a5c26a7f715076fa572f9d8381cb51646ae7aa"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjA0Njk0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1OToyNFrOGVOiTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNjo1OToyNFrOGVOiTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxMTQzOA==", "bodyText": "I think this should be in the Resources class above. There should also be a SPACE_V2 constant.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424911438", "createdAt": "2020-05-14T06:59:24Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/Constants.java", "diffHunk": "@@ -62,7 +63,7 @@ private Endpoints() {\n         public static final String OPERATION_LOGS = OPERATION + \"/logs\";\n         public static final String OPERATION_LOG_CONTENT = OPERATION_LOGS + \"/{\" + PathVariables.LOG_ID + \"}/content\";\n         public static final String OPERATION_ACTIONS = OPERATION + \"/actions\";\n-        public static final String V2_MTAS = \"/api/v2/spaces/{\" + PathVariables.SPACE_GUID + \"}/mtas\";\n+        public static final String MTAS_V2 = Resources.ROOT_V2 + \"/spaces/{\" + PathVariables.SPACE_GUID + \"}/mtas\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e51f12ae116f3f72a4f750f5e90c970a9fb1f86"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjA1NzAzOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzowMjo1OVrOGVOoow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwNzowMjo1OVrOGVOoow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDkxMzA1OQ==", "bodyText": "Wrong import.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r424913059", "createdAt": "2020-05-14T07:02:59Z", "author": {"login": "nictas"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "diffHunk": "@@ -14,20 +15,27 @@\n import com.sap.cloud.lm.sl.mta.model.DeploymentDescriptor;\n import com.sap.cloud.lm.sl.mta.model.Resource;\n \n+import io.micrometer.core.instrument.util.StringUtils;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e55027369461e1048c9379ef25656df48eb9877d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDUyMDY0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODoxOTo1N1rOGYAbIw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDoxMToxMVrOGYNwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyNTk1NQ==", "bodyText": "There is a typo namespacce . Why Objects.toString was removed?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427825955", "createdAt": "2020-05-20T08:19:57Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "diffHunk": "@@ -78,7 +78,7 @@ public String getConfigurationName() {\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"digestAlgorithm\", getDigestAlgorithm()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"space\", getSpace()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"size\", Objects.toString(getSize())));\n-        configurationIdentifiers.add(new ConfigurationIdentifier(\"namespacce\", Objects.toString(getNamespace())));\n+        configurationIdentifiers.add(new ConfigurationIdentifier(\"namespacce\", getNamespace()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA0NDM1MA==", "bodyText": "Objects.toString was unneeded, since it is a String to start with, was a copy-paste error", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r428044350", "createdAt": "2020-05-20T14:11:11Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.api/src/main/java/com/sap/cloud/lm/sl/cf/web/api/model/FileMetadata.java", "diffHunk": "@@ -78,7 +78,7 @@ public String getConfigurationName() {\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"digestAlgorithm\", getDigestAlgorithm()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"space\", getSpace()));\n         configurationIdentifiers.add(new ConfigurationIdentifier(\"size\", Objects.toString(getSize())));\n-        configurationIdentifiers.add(new ConfigurationIdentifier(\"namespacce\", Objects.toString(getNamespace())));\n+        configurationIdentifiers.add(new ConfigurationIdentifier(\"namespacce\", getNamespace()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzgyNTk1NQ=="}, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDYyMzUwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODo0NjowN1rOGYBcvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODo0NjowN1rOGYBcvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0Mjc1MA==", "bodyText": "Reminder to add unit tests and remove this TODO comment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427842750", "createdAt": "2020-05-20T08:46:07Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -25,7 +25,7 @@\n @Named\n public class MtaMetadataEntityAggregator {\n \n-    //TODO: write unit tests for this and detectors\n+    // TODO: write unit tests for this and detectors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDY0MjE4OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODo1MDoyN1rOGYBolg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwODo1MDoyN1rOGYBolg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg0NTc4Mg==", "bodyText": "Why access modifier was changed to public?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427845782", "createdAt": "2020-05-20T08:50:27Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/metadata/entity/processor/MtaMetadataEntityAggregator.java", "diffHunk": "@@ -43,23 +43,23 @@ public MtaMetadataEntityAggregator(MtaMetadataParser mtaMetadataParser) {\n     }\n \n     private DeployedMta toDeployedMta(List<CloudEntity> entities) {\n-        MtaMetadata mtaMetadata = getMtaMetadata(entities);\n+        MtaMetadata mtaMetadata = aggregateMetadata(entities);\n         List<DeployedMtaApplication> applications = getApplications(entities);\n         List<DeployedMtaService> services = getServices(entities);\n         List<DeployedMtaService> userProvidedServices = getUserProvidedServices(applications, services);\n-        \n+\n         return ImmutableDeployedMta.builder()\n                                    .metadata(mtaMetadata)\n                                    .applications(applications)\n                                    .services(ListUtils.union(services, userProvidedServices))\n                                    .build();\n     }\n \n-    private MtaMetadata getMtaMetadata(List<CloudEntity> entities) {\n+    public MtaMetadata aggregateMetadata(List<CloudEntity> entities) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDgxMzU5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtil.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNTo1OVrOGYDYoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTozNTo1OVrOGYDYoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg3NDQ2NA==", "bodyText": "I think this method belongs to MapUtil class in package com.sap.cloud.lm.sl.common.util", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427874464", "createdAt": "2020-05-20T09:35:59Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtil.java", "diffHunk": "@@ -63,6 +65,20 @@ public static ApplicationColor getApplicationColor(DeployedMtaApplication deploy\n                      .orElse(COLOR_OF_APPLICATIONS_WITHOUT_SUFFIX);\r\n     }\r\n \r\n+    public static boolean parseBooleanFlag(final Map<String, Object> parameters, String flagName, boolean defaultValue) throws ContentException {\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDg1ODkwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQwOTo0ODowN1rOGYD1kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNDo0NDowM1rOGYPWIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTg3NQ==", "bodyText": "I mean using of Function.identity() from java.util.function package. Sorry for my previous typo.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427881875", "createdAt": "2020-05-20T09:48:07Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "diffHunk": "@@ -8,6 +8,7 @@\n import java.util.TreeMap;\n import java.util.stream.Collectors;\n \n+import com.google.common.base.Functions;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODA3MDQzMw==", "bodyText": "sorry for not thinking it through properly", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r428070433", "createdAt": "2020-05-20T14:44:03Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ParametersValidatorHelper.java", "diffHunk": "@@ -8,6 +8,7 @@\n import java.util.TreeMap;\n import java.util.stream.Collectors;\n \n+import com.google.common.base.Functions;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4MTg3NQ=="}, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDkwNzk0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ConfigurationEntriesCloudModelBuilderTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowMDo0OFrOGYEULA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowMDo0OFrOGYEULA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg4OTcwOA==", "bodyText": "Can you refactor this test using Parameterized and MethodSource annotations from junit5?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427889708", "createdAt": "2020-05-20T10:00:48Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ConfigurationEntriesCloudModelBuilderTest.java", "diffHunk": "@@ -74,7 +80,7 @@ public void parseDeploymentDescriptor() {\n \n     @Test\n     public void testBuild() {\n-        ConfigurationEntriesCloudModelBuilder builder = new ConfigurationEntriesCloudModelBuilder(orgName, spaceName, \"\");\n+        ConfigurationEntriesCloudModelBuilder builder = new ConfigurationEntriesCloudModelBuilder(orgName, spaceName, \"\", namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDkzNjI0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/persistence/service/ConfigurationEntryServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowODozMlrOGYEl9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDowODozMlrOGYEl9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NDI2Mg==", "bodyText": "Why we need to print something in console?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427894262", "createdAt": "2020-05-20T10:08:32Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/persistence/service/ConfigurationEntryServiceTest.java", "diffHunk": "@@ -131,19 +159,33 @@ private void addConfigurationEntries(List<ConfigurationEntry> entries) {\n         entries.forEach(configurationEntryService::add);\n     }\n \n+    private void assertThereAndDeleteEntries(List<ConfigurationEntry> entries,\n+                                             ConfigurationEntryQueryBuilder configurationEntryQueryBuilder) {\n+        for (ConfigurationEntry entry : entries) {\n+            assertConfigurationEntryExists(entry.getId());\n+            System.out.println(String.format(\"Id %s is here\", entry.getId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1MDc0OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMjo1MFrOGYEvKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMjo1MFrOGYEvKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NjYxOA==", "bodyText": "Use import from juni5 org.junit.jupiter.api", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427896618", "createdAt": "2020-05-20T10:12:50Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtilTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.sap.cloud.lm.sl.cf.core.util;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+import static org.junit.jupiter.api.Assertions.assertThrows;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.junit.Test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1MTc5OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMzowOVrOGYEvyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxMzowOVrOGYEvyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5Njc3OA==", "bodyText": "Use assertTrue from org.junit.jupiter.api.Assertions", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427896778", "createdAt": "2020-05-20T10:13:09Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/CloudModelBuilderUtilTest.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package com.sap.cloud.lm.sl.cf.core.util;\n+\n+import static org.junit.Assert.assertTrue;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk1NzIzOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/NameUtilTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDo1NlrOGYEzJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNDo1NlrOGYEzJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5NzYzNw==", "bodyText": "This test could be refactored to Parameterized test using junit5 api", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427897637", "createdAt": "2020-05-20T10:14:56Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/util/NameUtilTest.java", "diffHunk": "@@ -81,4 +81,25 @@ public void testCreateValidXsAppName() {\n         assertTrue(NameUtil.isValidName(xsAppName3, NameRequirements.XS_APP_NAME_PATTERN));\n     }\n \n+    @Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2NDEwOnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzowMVrOGYE3kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzowMVrOGYE3kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODc3MQ==", "bodyText": "For single key-value pair, you can use asMap method from MapUtil class in com.sap.cloud.lm.sl.common.util", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427898771", "createdAt": "2020-05-20T10:17:01Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "diffHunk": "@@ -17,48 +20,66 @@\n \n     private static final String NAMESPACE = \"foo\";\n     private static final String APPLICATION_NAME = \"bar\";\n+    private static final Map<String, Object> CONTEXT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NDk2NDk3OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzoyMVrOGYE4NA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDoxNzoyMVrOGYE4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzg5ODkzMg==", "bodyText": "same comment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427898932", "createdAt": "2020-05-20T10:17:21Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ApplicationNameValidatorTest.java", "diffHunk": "@@ -17,48 +20,66 @@\n \n     private static final String NAMESPACE = \"foo\";\n     private static final String APPLICATION_NAME = \"bar\";\n+    private static final Map<String, Object> CONTEXT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(true));\n+        }\n+    };\n+    private static final Map<String, Object> CONTEXT_DO_NOT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTAxMjk2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozMjowM1rOGYFX7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozMjowM1rOGYFX7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNzA1NQ==", "bodyText": "Same comment like in ApplicationNameValidatorTest", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427907055", "createdAt": "2020-05-20T10:32:03Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidatorTest.java", "diffHunk": "@@ -17,50 +20,58 @@\n \n     private static final String NAMESPACE = \"foo\";\n     private static final String SERVICE_NAME = \"bar\";\n+    private static final Map<String, Object> CONTEXT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(true));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTAxMzI2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozMjowOFrOGYFYGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDozMjowOFrOGYFYGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkwNzA5OQ==", "bodyText": "Same comment like in ApplicationNameValidatorTest", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427907099", "createdAt": "2020-05-20T10:32:08Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/test/java/com/sap/cloud/lm/sl/cf/core/validators/parameters/ServiceNameValidatorTest.java", "diffHunk": "@@ -17,50 +20,58 @@\n \n     private static final String NAMESPACE = \"foo\";\n     private static final String SERVICE_NAME = \"bar\";\n+    private static final Map<String, Object> CONTEXT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(true));\n+        }\n+    };\n+    private static final Map<String, Object> CONTEXT_DO_NOT_APPLY_NAMESPACE = new HashMap() {\n+        {\n+            put(SupportedParameters.APPLY_NAMESPACE, new Boolean(false));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NTA2NjE2OnYy", "diffSide": "RIGHT", "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo0OToxNlrOGYF6KA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMDo0OToxNlrOGYF6KA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzkxNTgxNg==", "bodyText": "You can also change name of constants", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r427915816", "createdAt": "2020-05-20T10:49:16Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/Messages.java", "diffHunk": "@@ -18,8 +18,8 @@\n \r\n     // ERROR log messages\r\n     public static final String MTA_NOT_FOUND = \"MTA with id \\\"{0}\\\" does not exist\";\r\n-    public static final String MTAS_NOT_FOUND_BY_NAME = \"MTAs with name \\\"{0}\\\" not found\";\r\n-    public static final String MTAS_NOT_FOUND_BY_NAMESPACE = \"MTAs with namespace \\\"{0}\\\" not found\";\r\n+    public static final String MTAS_NOT_FOUND_BY_NAME = \"MTAs with name \\\"{0}\\\" do not exist\";\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96da098800aaf884f2c1d4724a41b1c68043f88c"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3OTcwNDcwOnYy", "diffSide": "LEFT", "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwNzozODoxMlrOGaSKGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQwODowMDo1NFrOGaS81Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxMzY1OQ==", "bodyText": "Does it mean that namespace passed in the method is already hashed?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r430213659", "createdAt": "2020-05-26T07:38:12Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "diffHunk": "@@ -15,13 +16,10 @@\n import com.sap.cloud.lm.sl.mta.model.DeploymentDescriptor;\n import com.sap.cloud.lm.sl.mta.model.Resource;\n \n-import io.micrometer.core.instrument.util.StringUtils;\n-\n public class ServiceMetadataBuilder {\n \n     public static Metadata build(DeploymentDescriptor deploymentDescriptor, String namespace, Resource resource) {\n         String hashedMtaId = MtaMetadataUtil.getHashedLabel(deploymentDescriptor.getId());\n-        String hashedNamespace = MtaMetadataUtil.getHashedLabel(namespace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffe4c3112f00efe8304e52740d72f18d5a519366"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIyNjY0NQ==", "bodyText": "get hashed namespace logic is moved", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/849#discussion_r430226645", "createdAt": "2020-05-26T08:00:54Z", "author": {"login": "theghost5800"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/cf/v2/ServiceMetadataBuilder.java", "diffHunk": "@@ -15,13 +16,10 @@\n import com.sap.cloud.lm.sl.mta.model.DeploymentDescriptor;\n import com.sap.cloud.lm.sl.mta.model.Resource;\n \n-import io.micrometer.core.instrument.util.StringUtils;\n-\n public class ServiceMetadataBuilder {\n \n     public static Metadata build(DeploymentDescriptor deploymentDescriptor, String namespace, Resource resource) {\n         String hashedMtaId = MtaMetadataUtil.getHashedLabel(deploymentDescriptor.getId());\n-        String hashedNamespace = MtaMetadataUtil.getHashedLabel(namespace);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDIxMzY1OQ=="}, "originalCommit": {"oid": "ffe4c3112f00efe8304e52740d72f18d5a519366"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 518, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}