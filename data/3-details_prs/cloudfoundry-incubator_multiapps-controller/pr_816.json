{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxNTg4NjIy", "number": 816, "title": "Execute AbortProcessAction when abortOnError", "bodyText": "As CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false and delete failed root\nprocess if set to true. JIRA: LMCROSSITXSADEPLOY-1793", "createdAt": "2020-03-20T15:18:32Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816", "merged": true, "mergeCommit": {"oid": "0ccf80b9210bc8e6eb382cc7257f6fe849d8742f"}, "closed": true, "closedAt": "2020-04-06T08:58:13Z", "author": {"login": "radoslav-d"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQe8b1AFqTM3OTQ2MjU2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcT8zHpgFqTM4NzA2NDMwNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5NDYyNTY2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#pullrequestreview-379462566", "createdAt": "2020-03-23T14:08:22Z", "commit": {"oid": "771c8a877776abde41cc54464d9aa4735b62f3f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDowODoyMlrOF6HCvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxNDoxMTo1NFrOF6HMbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NzExNw==", "bodyText": "I would suggest the following workflow -\n\nCheck in the current process that there is a variable PARAM_ABORT_ON_ERROR - this is done.\nIf there is -> get the correlation id\nabort the process with the correlation id.\n\nBenefits:\n\ndelete the whole process instance(by the correlationId) recursively(do not rely on that logic - it could be broken).\nNo OptimisticLockingException could rise because if we are pass here we know that there is no running executions\n\nDrawbacks:\n\nif there are parallel processing and we should abort - there could be an OptimisticLockingException. Check what is done in the AbortProcessAction and decide what could be done here.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r396477117", "createdAt": "2020-03-23T14:08:22Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -66,14 +67,26 @@ private String findProcessInstanceId(CommandContext commandContext) {\n         }\n \n         private void abortProcessIfRequested(CommandContext commandContext, String processInstanceId) {\n-            String correlationId = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.VAR_CORRELATION_ID);\n-            if (!processInstanceId.equals(correlationId)) {\n-                return;\n-            }\n-            Boolean shouldAbortOnError = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.PARAM_ABORT_ON_ERROR);\n-            if (BooleanUtils.toBoolean(shouldAbortOnError)) {\n+            if (shouldAbort(commandContext, processInstanceId)) {\n                 abortProcess(commandContext, processInstanceId);\n             }\n+            String rootProcessInstanceId = getRootProcessInstanceId(commandContext, processInstanceId);\n+            if (rootProcessInstanceId != null && shouldAbort(commandContext, rootProcessInstanceId)) {\n+                abortProcess(commandContext, rootProcessInstanceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "771c8a877776abde41cc54464d9aa4735b62f3f1"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3OTU5OA==", "bodyText": "Current implementation drawbacks:\n\nOptimisticLocking would be risen if you have parallel exectuins because of this: if (rootProcessInstanceId != null && shouldAbort(commandContext, rootProcessInstanceId)) { abortProcess(commandContext, rootProcessInstanceId);\nSome lefover processes will be presented because the you are not making sure that all the child executions will be deleted.\nOther elements, part of the process(jobs, executions, timers, variables, etc.), are not again guaranteed to be removed as a whole because the deletion will not happen recursively from the root process element.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r396479598", "createdAt": "2020-03-23T14:11:54Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -66,14 +67,26 @@ private String findProcessInstanceId(CommandContext commandContext) {\n         }\n \n         private void abortProcessIfRequested(CommandContext commandContext, String processInstanceId) {\n-            String correlationId = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.VAR_CORRELATION_ID);\n-            if (!processInstanceId.equals(correlationId)) {\n-                return;\n-            }\n-            Boolean shouldAbortOnError = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.PARAM_ABORT_ON_ERROR);\n-            if (BooleanUtils.toBoolean(shouldAbortOnError)) {\n+            if (shouldAbort(commandContext, processInstanceId)) {\n                 abortProcess(commandContext, processInstanceId);\n             }\n+            String rootProcessInstanceId = getRootProcessInstanceId(commandContext, processInstanceId);\n+            if (rootProcessInstanceId != null && shouldAbort(commandContext, rootProcessInstanceId)) {\n+                abortProcess(commandContext, rootProcessInstanceId);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjQ3NzExNw=="}, "originalCommit": {"oid": "771c8a877776abde41cc54464d9aa4735b62f3f1"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "771c8a877776abde41cc54464d9aa4735b62f3f1", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/771c8a877776abde41cc54464d9aa4735b62f3f1", "committedDate": "2020-03-20T15:10:17Z", "message": "Delete root process instance when abortOnError\n\nJIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ddb0e467a2e698b7dfdc1ec147430097b86c04ce", "committedDate": "2020-03-24T10:10:34Z", "message": "Execute AbortProcessAction when abortOnError\n\nJIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwMTc2MDgz", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#pullrequestreview-380176083", "createdAt": "2020-03-24T10:27:04Z", "commit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDoyNzowNFrOF6p0ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxMDozMDozMlrOF6p9Rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0Njk3MA==", "bodyText": "Why @ Lazy ? It is initialized at the startup of the deploy-service.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r397046970", "createdAt": "2020-03-24T10:27:04Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -2,42 +2,48 @@\n \n import java.text.MessageFormat;\n \n+import com.sap.cloud.lm.sl.cf.process.flowable.AbortProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessActionRegistry;\n import org.apache.commons.lang3.BooleanUtils;\n import org.flowable.common.engine.impl.interceptor.Command;\n import org.flowable.common.engine.impl.interceptor.CommandContext;\n-import org.flowable.engine.RuntimeService;\n-import org.flowable.engine.impl.context.Context;\n import org.flowable.engine.impl.jobexecutor.DefaultFailedJobCommandFactory;\n import org.flowable.engine.impl.util.CommandContextUtil;\n import org.flowable.job.service.impl.persistence.entity.JobEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.sap.cloud.lm.sl.cf.process.util.HistoryUtil;\n-import com.sap.cloud.lm.sl.cf.web.api.model.Operation;\n+import org.springframework.context.annotation.Lazy;\n \n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+@Named\n+@Lazy", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0OTE1OA==", "bodyText": "Why the two checks?\nIf you end up here, the process with the correlationId(the super parent) will have the variable (ABORT_ON_ERROR). So, isn't only the second check enough?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r397049158", "createdAt": "2020-03-24T10:30:32Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -50,43 +56,34 @@ public Object execute(CommandContext commandContext) {\n \n         private void abortProcessIfRequested(CommandContext commandContext) {\n             String processInstanceId = findProcessInstanceId(commandContext);\n-            if (processInstanceId == null) {\n-                return;\n+            if (processInstanceId != null) {\n+                abortProcessIfRequested(commandContext, processInstanceId);\n             }\n-            abortProcessIfRequested(commandContext, processInstanceId);\n         }\n \n         private String findProcessInstanceId(CommandContext commandContext) {\n             JobEntity job = CommandContextUtil.getJobService(commandContext)\n                                               .findJobById(jobId);\n-            if (job == null) {\n-                return null;\n-            }\n-            return job.getProcessInstanceId();\n+            return job != null ? job.getProcessInstanceId() : null;\n         }\n \n         private void abortProcessIfRequested(CommandContext commandContext, String processInstanceId) {\n             String correlationId = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.VAR_CORRELATION_ID);\n-            if (!processInstanceId.equals(correlationId)) {\n-                return;\n-            }\n-            Boolean shouldAbortOnError = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.PARAM_ABORT_ON_ERROR);\n-            if (BooleanUtils.toBoolean(shouldAbortOnError)) {\n-                abortProcess(commandContext, processInstanceId);\n+            if (shouldAbort(commandContext, processInstanceId) || shouldAbort(commandContext, correlationId)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce"}, "originalPosition": 89}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/ddb0e467a2e698b7dfdc1ec147430097b86c04ce", "committedDate": "2020-03-24T10:10:34Z", "message": "Execute AbortProcessAction when abortOnError\n\nJIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "cc6449517f62f1bb9ce5deacde4990086e77ee0b", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/cc6449517f62f1bb9ce5deacde4990086e77ee0b", "committedDate": "2020-03-24T14:07:28Z", "message": "Execute AbortProcessAction when abortOnError\n\nJIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc6449517f62f1bb9ce5deacde4990086e77ee0b", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/cc6449517f62f1bb9ce5deacde4990086e77ee0b", "committedDate": "2020-03-24T14:07:28Z", "message": "Execute AbortProcessAction when abortOnError\n\nJIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "db018950600531d0b26d861a0ce13a22713e2660", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/db018950600531d0b26d861a0ce13a22713e2660", "committedDate": "2020-03-26T12:37:00Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false and delete failed root\nprocess if set to true. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db018950600531d0b26d861a0ce13a22713e2660", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/db018950600531d0b26d861a0ce13a22713e2660", "committedDate": "2020-03-26T12:37:00Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false and delete failed root\nprocess if set to true. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "c24d354a9ce55f54a79898836ca82d1e51a3e2b0", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c24d354a9ce55f54a79898836ca82d1e51a3e2b0", "committedDate": "2020-03-26T13:06:14Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false and delete failed root\nprocess if set to true. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c24d354a9ce55f54a79898836ca82d1e51a3e2b0", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c24d354a9ce55f54a79898836ca82d1e51a3e2b0", "committedDate": "2020-03-26T13:06:14Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false and delete failed root\nprocess if set to true. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "12d405a3818719c0b91b6471f40e40f2dee8a276", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/12d405a3818719c0b91b6471f40e40f2dee8a276", "committedDate": "2020-03-31T15:13:01Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false or if the root process has\nfailed. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "12d405a3818719c0b91b6471f40e40f2dee8a276", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/12d405a3818719c0b91b6471f40e40f2dee8a276", "committedDate": "2020-03-31T15:13:01Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false or if the root process has\nfailed. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "f23472f70065426eb6fadb0aa8c83fd1f8b5b7e9", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/f23472f70065426eb6fadb0aa8c83fd1f8b5b7e9", "committedDate": "2020-04-01T07:21:26Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false or if the root process has\nfailed. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f23472f70065426eb6fadb0aa8c83fd1f8b5b7e9", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/f23472f70065426eb6fadb0aa8c83fd1f8b5b7e9", "committedDate": "2020-04-01T07:21:26Z", "message": "Execute AbortProcessAction when abortOnError\n\nAs CTS deploy process relies on that sub-processes will not abort/delete\nthe root process, add new parameter NO_ROOT_ABORT_PROCESS_ABORT, which\nwill be TRUE as default for CTS deploy. When considering, what should\nhappen for a process, which has failed, check if this flag is set. Abort\nroot process if the flag is not set or false or if the root process has\nfailed. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "84dc1e5e0880f792f6d125af87f0fec59592b3ed", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/84dc1e5e0880f792f6d125af87f0fec59592b3ed", "committedDate": "2020-04-01T16:50:31Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "84dc1e5e0880f792f6d125af87f0fec59592b3ed", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/84dc1e5e0880f792f6d125af87f0fec59592b3ed", "committedDate": "2020-04-01T16:50:31Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/fbac65a70a1fd200698bb7779a82b98abcbd029f", "committedDate": "2020-04-02T09:26:58Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg0NjE0MTA3", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#pullrequestreview-384614107", "createdAt": "2020-03-31T10:48:11Z", "commit": {"oid": "c24d354a9ce55f54a79898836ca82d1e51a3e2b0"}, "state": "APPROVED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0zMVQxMDo0ODoxMVrOF-P7LA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoyNzo1OVrOF_k-8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMDgxNjk0MA==", "bodyText": "Do we want to keep this behavior? Is @ Lazy guarantees on 100% that this will not brake?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r400816940", "createdAt": "2020-03-31T10:48:11Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -2,42 +2,48 @@\n \n import java.text.MessageFormat;\n \n+import com.sap.cloud.lm.sl.cf.process.flowable.AbortProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessActionRegistry;\n import org.apache.commons.lang3.BooleanUtils;\n import org.flowable.common.engine.impl.interceptor.Command;\n import org.flowable.common.engine.impl.interceptor.CommandContext;\n-import org.flowable.engine.RuntimeService;\n-import org.flowable.engine.impl.context.Context;\n import org.flowable.engine.impl.jobexecutor.DefaultFailedJobCommandFactory;\n import org.flowable.engine.impl.util.CommandContextUtil;\n import org.flowable.job.service.impl.persistence.entity.JobEntity;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n import com.sap.cloud.lm.sl.cf.process.util.HistoryUtil;\n-import com.sap.cloud.lm.sl.cf.web.api.model.Operation;\n+import org.springframework.context.annotation.Lazy;\n \n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+@Named\n+@Lazy", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzA0Njk3MA=="}, "originalCommit": {"oid": "ddb0e467a2e698b7dfdc1ec147430097b86c04ce"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwODYwMQ==", "bodyText": "Let's rename this to FlowableCommandExecutor", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402208601", "createdAt": "2020-04-02T10:24:21Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/CommandExecutor.java", "diffHunk": "@@ -0,0 +1,7 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands;\n+\n+\n+public interface CommandExecutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwODczNw==", "bodyText": "Same, FlowableCommandExecutorFactory", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402208737", "createdAt": "2020-04-02T10:24:37Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/CommandExecutorFactory.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands;\n+\n+import org.flowable.common.engine.impl.interceptor.CommandContext;\n+\n+public interface CommandExecutorFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwOTA1MQ==", "bodyText": "This could be renamed to AbortProcessFlowableCommandExecutor", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402209051", "createdAt": "2020-04-02T10:25:11Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/abort/AbortCommandExecutor.java", "diffHunk": "@@ -0,0 +1,30 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands.abort;\n+\n+import com.sap.cloud.lm.sl.cf.process.Messages;\n+import com.sap.cloud.lm.sl.cf.process.flowable.AbortProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessAction;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessActionRegistry;\n+import com.sap.cloud.lm.sl.cf.process.flowable.commands.CommandExecutor;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import java.text.MessageFormat;\n+\n+public class AbortCommandExecutor implements CommandExecutor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwOTI1MA==", "bodyText": "Same, AbortProcessFlowableCommandExec...", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402209250", "createdAt": "2020-04-02T10:25:35Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/abort/AbortCommandExecutorFactory.java", "diffHunk": "@@ -0,0 +1,28 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands.abort;\n+\n+import com.sap.cloud.lm.sl.cf.process.Constants;\n+import com.sap.cloud.lm.sl.cf.process.flowable.ProcessActionRegistry;\n+import com.sap.cloud.lm.sl.cf.process.flowable.commands.CommandExecutor;\n+import com.sap.cloud.lm.sl.cf.process.flowable.commands.CommandExecutorFactory;\n+import com.sap.cloud.lm.sl.cf.process.util.HistoryUtil;\n+import org.flowable.common.engine.impl.interceptor.CommandContext;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+@Named\n+public class AbortCommandExecutorFactory implements CommandExecutorFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIwOTU1MQ==", "bodyText": "Extract to variable", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402209551", "createdAt": "2020-04-02T10:26:10Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/abort/AbortFailedProcessCommand.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands.abort;\n+\n+import com.sap.cloud.lm.sl.cf.process.Constants;\n+import com.sap.cloud.lm.sl.cf.process.util.HistoryUtil;\n+import org.apache.commons.lang3.BooleanUtils;\n+import org.flowable.common.engine.impl.interceptor.Command;\n+import org.flowable.common.engine.impl.interceptor.CommandContext;\n+import org.flowable.engine.impl.util.CommandContextUtil;\n+import org.flowable.job.service.impl.persistence.entity.JobEntity;\n+\n+public class AbortFailedProcessCommand implements Command<Object> {\n+\n+    private AbortCommandExecutorFactory abortCommandExecutorFactory;\n+    private final String jobId;\n+    private final Command<Object> delegate;\n+\n+    public AbortFailedProcessCommand(AbortCommandExecutorFactory abortCommandExecutorFactory, String jobId, Command<Object> delegate) {\n+        this.abortCommandExecutorFactory = abortCommandExecutorFactory;\n+        this.jobId = jobId;\n+        this.delegate = delegate;\n+    }\n+\n+    @Override\n+    public Object execute(CommandContext commandContext) {\n+        Object result = delegate.execute(commandContext);\n+        abortProcessIfRequested(commandContext);\n+        return result;\n+    }\n+\n+    private void abortProcessIfRequested(CommandContext commandContext) {\n+        String processInstanceId = findProcessInstanceId(commandContext);\n+        if (processInstanceId != null) {\n+            abortProcessIfRequested(commandContext, processInstanceId);\n+        }\n+    }\n+\n+    private String findProcessInstanceId(CommandContext commandContext) {\n+        JobEntity job = CommandContextUtil.getJobService(commandContext)\n+                                          .findJobById(jobId);\n+        return job != null ? job.getProcessInstanceId() : null;\n+    }\n+\n+    private void abortProcessIfRequested(CommandContext commandContext, String processInstanceId) {\n+        String correlationId = HistoryUtil.getVariableValue(commandContext, processInstanceId, Constants.VAR_CORRELATION_ID);\n+        if (shouldAbortOnError(commandContext, correlationId)) {\n+            abortCommandExecutorFactory.getExecutor(commandContext, processInstanceId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMDMxNg==", "bodyText": "This has naming problem from the beginning -> AbortProcessFailedJobCommandFactory", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402210316", "createdAt": "2020-04-02T10:27:33Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/abort/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands.abort;\n+\n+import org.flowable.common.engine.impl.interceptor.Command;\n+import org.flowable.engine.impl.jobexecutor.DefaultFailedJobCommandFactory;\n+\n+import org.springframework.context.annotation.Lazy;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+@Named\n+@Lazy\n+public class AbortFailedProcessCommandFactory extends DefaultFailedJobCommandFactory {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMDU0Ng==", "bodyText": "Why not Constructor-based injection?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402210546", "createdAt": "2020-04-02T10:27:59Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/flowable/commands/abort/AbortFailedProcessCommandFactory.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package com.sap.cloud.lm.sl.cf.process.flowable.commands.abort;\n+\n+import org.flowable.common.engine.impl.interceptor.Command;\n+import org.flowable.engine.impl.jobexecutor.DefaultFailedJobCommandFactory;\n+\n+import org.springframework.context.annotation.Lazy;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+@Named\n+@Lazy\n+public class AbortFailedProcessCommandFactory extends DefaultFailedJobCommandFactory {\n+\n+    private AbortCommandExecutorFactory abortCommandExecutorFactory;\n+\n+    @Override\n+    public Command<Object> getCommand(String jobId, Throwable exception) {\n+        return new AbortFailedProcessCommand(abortCommandExecutorFactory, jobId, super.getCommand(jobId, exception));\n+    }\n+\n+    @Inject\n+    public void setCommandExecutorFactory(AbortCommandExecutorFactory abortCommandExecutorFactory) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2Mjk3Mjk3", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#pullrequestreview-386297297", "createdAt": "2020-04-02T10:29:01Z", "commit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoyOTowMVrOF_lA9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMDoyOTowMVrOF_lA9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjIxMTA2Mw==", "bodyText": "Empty comment for changing the review status", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#discussion_r402211063", "createdAt": "2020-04-02T10:29:01Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.web/src/main/java/com/sap/cloud/lm/sl/cf/web/configuration/FlowableConfiguration.java", "diffHunk": "@@ -83,10 +83,6 @@ public SpringProcessEngineConfiguration processEngineConfiguration(DataSource da\n         return new ArrayList<>(Arrays.asList(flowableResources));\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f"}, "originalPosition": 31}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbac65a70a1fd200698bb7779a82b98abcbd029f", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/fbac65a70a1fd200698bb7779a82b98abcbd029f", "committedDate": "2020-04-02T09:26:58Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "2d250bd833a6d876d3907faf3f1d4a6465cec843", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/2d250bd833a6d876d3907faf3f1d4a6465cec843", "committedDate": "2020-04-03T08:25:35Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88ee39ddac3440bf031aaca2b4973a32100c96b1", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/88ee39ddac3440bf031aaca2b4973a32100c96b1", "committedDate": "2020-04-03T08:34:38Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d250bd833a6d876d3907faf3f1d4a6465cec843", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/2d250bd833a6d876d3907faf3f1d4a6465cec843", "committedDate": "2020-04-03T08:25:35Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}, "afterCommit": {"oid": "88ee39ddac3440bf031aaca2b4973a32100c96b1", "author": {"user": {"login": "radoslav-d", "name": "Radoslav Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/88ee39ddac3440bf031aaca2b4973a32100c96b1", "committedDate": "2020-04-03T08:34:38Z", "message": "Execute AbortProcessAction when abortOnError\n\nImplement abstract factory mechanism to produce command executing\nclasses. Custom CommandExecutorFactory will be implemented in\nxsa-multiapps-controller to handle CTS deploy scenario.\n\nAbortCommandExecutor triggers an AbortProcessAction for the root process\nof the failed sub-process. JIRA: LMCROSSITXSADEPLOY-1793"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg3MDY0MzA0", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/816#pullrequestreview-387064304", "createdAt": "2020-04-03T08:40:47Z", "commit": {"oid": "88ee39ddac3440bf031aaca2b4973a32100c96b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 874, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}