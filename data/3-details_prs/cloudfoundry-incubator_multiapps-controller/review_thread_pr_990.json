{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE3NjMwODY2", "number": 990, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDozOToxOVrOE_pmgQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozOTowN1rOFE15OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTc3MzQ1OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDozOToxOVrOH9eCwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDozOToxOVrOH9eCwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIxNzQwOA==", "bodyText": "The name is a bit misleading. I initially thought that the query wouldn't set the content, but it does. Rename it to something like `INSERT_FILE_ATTRIBUTES_AND_CONTENT_WITHOUT_DIGEST.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534217408", "createdAt": "2020-12-02T14:39:19Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -24,9 +27,13 @@\n import org.cloudfoundry.multiapps.controller.persistence.util.JdbcUtil;\n import org.slf4j.Logger;\n \n+import javax.xml.bind.DatatypeConverter;\n+\n public abstract class SqlFileQueryProvider {\n \n     private static final String INSERT_FILE_ATTRIBUTES_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\";\n+    private static final String INSERT_FILE_ATTRIBUTES_NO_DIGEST_AND_CONTENT = \"INSERT INTO %s (FILE_ID, SPACE, FILE_NAME, NAMESPACE, FILE_SIZE, DIGEST_ALGORITHM, MODIFIED, %s) VALUES (?, ?, ?, ?, ?, ?, ?, ?)\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTgxMDk1OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo0Njo1MFrOH9eaLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo0Njo1MFrOH9eaLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyMzQwNw==", "bodyText": "The name/signature of the method doesn't indicate in any way that the result will be the digest of the input stream.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534223407", "createdAt": "2020-12-02T14:46:50Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -73,6 +80,41 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n         };\n     }\n \n+    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTgzNDk0OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1MTo0MVrOH9epgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNDo1MTo0MVrOH9epgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIyNzMzMQ==", "bodyText": "I'm not the biggest fan of this re-throw. The exceptions don't have anything to do with SQL, so it's a bit of a hack to wrap them in an SQLException. I'd be a bit more OK if the wrapper exception was an IllegalStateException.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534227331", "createdAt": "2020-12-02T14:51:41Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -73,6 +80,41 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n         };\n     }\n \n+    public SqlQuery<String> getStoreFileWithoutDigestQuery(FileEntry entryWithoutDigest, InputStream content) {\n+        return (Connection connection) -> {\n+            PreparedStatement statement = null;\n+            try (DigestInputStream dis = new DigestInputStream(content, MessageDigest.getInstance(Constants.DIGEST_ALGORITHM))) {\n+                statement = connection.prepareStatement(getInsertWithContentWithoutDigestQuery());\n+                statement.setString(1, entryWithoutDigest.getId());\n+                statement.setString(2, entryWithoutDigest.getSpace());\n+                statement.setString(3, entryWithoutDigest.getName());\n+                setOrNull(statement, 4, entryWithoutDigest.getNamespace());\n+                getDataSourceDialect().setBigInteger(statement, 5, entryWithoutDigest.getSize());\n+                statement.setString(6, Constants.DIGEST_ALGORITHM);\n+                statement.setTimestamp(7, new Timestamp(entryWithoutDigest.getModified()\n+                                                                          .getTime()));\n+                setContentBinaryStream(statement, 8, dis);\n+                statement.executeUpdate();\n+                return DatatypeConverter.printHexBinary(dis.getMessageDigest()\n+                                                           .digest());\n+            } catch (NoSuchAlgorithmException | IOException e) {\n+                throw new SQLException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1MTkwMDIxOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQxNTowNDowOVrOH9fR4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMTo1MDoyNlrOH_NhfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNzY2NA==", "bodyText": "Is this in the same transaction and if not, can this be a problem? For example, having two people upload the same file in parallel. The first stores the content in the database successfully, but before updating the digest, the second person tries to retrieve the list of files to check whether he can skip the upload. He sees the file entry, tries to use the digest and fails with a nil pointer dereference, because it is nil.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534237664", "createdAt": "2020-12-02T15:04:09Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java", "diffHunk": "@@ -65,17 +65,17 @@ public int deleteFilesEntriesWithoutContent() throws FileStorageException {\n     }\n \n     @Override\n-    protected void storeFile(FileEntry fileEntry, FileInfo fileinfo) throws FileStorageException {\n-        try (InputStream fileStream = fileinfo.getInputStream()) {\n-            storeFileWithContent(fileEntry, fileStream);\n-        } catch (IOException e) {\n-            logger.debug(e.getMessage(), e);\n-        }\n-    }\n-\n-    private boolean storeFileWithContent(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n+    protected FileEntry storeFile(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n         try {\n-            return getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+            if (fileEntry.getDigest() != null) {\n+                getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+                return fileEntry;\n+            }\n+            String digest = getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileWithoutDigestQuery(fileEntry, fileStream));\n+            getSqlQueryExecutor().execute(getSqlFileQueryProvider().getUpdateFileDigestQuery(fileEntry, digest));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjA0MzkwMQ==", "bodyText": "You're right. It's currently not in a single transaction but I will change it to be.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r536043901", "createdAt": "2020-12-04T11:50:26Z", "author": {"login": "radito3"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/DatabaseFileService.java", "diffHunk": "@@ -65,17 +65,17 @@ public int deleteFilesEntriesWithoutContent() throws FileStorageException {\n     }\n \n     @Override\n-    protected void storeFile(FileEntry fileEntry, FileInfo fileinfo) throws FileStorageException {\n-        try (InputStream fileStream = fileinfo.getInputStream()) {\n-            storeFileWithContent(fileEntry, fileStream);\n-        } catch (IOException e) {\n-            logger.debug(e.getMessage(), e);\n-        }\n-    }\n-\n-    private boolean storeFileWithContent(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n+    protected FileEntry storeFile(FileEntry fileEntry, InputStream fileStream) throws FileStorageException {\n         try {\n-            return getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+            if (fileEntry.getDigest() != null) {\n+                getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileQuery(fileEntry, fileStream));\n+                return fileEntry;\n+            }\n+            String digest = getSqlQueryExecutor().execute(getSqlFileQueryProvider().getStoreFileWithoutDigestQuery(fileEntry, fileStream));\n+            getSqlQueryExecutor().execute(getSqlFileQueryProvider().getUpdateFileDigestQuery(fileEntry, digest));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDIzNzY2NA=="}, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjEzNjY2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozNDoyNFrOH-I-AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODozNDoyNFrOH-I-AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDkyMDcwNQ==", "bodyText": "StringUtils.isEmpty ?\n\"\".equals(..) ?\nWill look better", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534920705", "createdAt": "2020-12-03T08:34:24Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationConfiguration.java", "diffHunk": "@@ -575,7 +572,7 @@ public Integer getServiceHandlingMaxParallelThreads() {\n \n     private URL getControllerUrlFromEnvironment() {\n         String controllerUrlString = environment.getString(\"CF_API\");\n-        if(controllerUrlString == null || controllerUrlString.isEmpty()){\n+        if (controllerUrlString == null || controllerUrlString.isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjQ4ODkyOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.110.0-persistence.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMDoyN1rOH-MuqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMDoyN1rOH-MuqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4MjMxMg==", "bodyText": "You can't do this, as it will break the migration on existing databases. Modifying an existing Liquibase changelog is very dangerous - see https://www.liquibase.org/blog/dealing-with-changing-changesets. You need to create a new changelog - db-changelog-1.115.0-persistence.xml and use the following change there:\nhttps://docs.liquibase.com/change-types/community/drop-not-null-constraint.html", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534982312", "createdAt": "2020-12-03T09:10:27Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.110.0-persistence.xml", "diffHunk": "@@ -15,9 +15,7 @@\n                 <constraints primaryKey=\"true\" primaryKeyName=\"file_id_pk\" nullable=\"false\" />\n             </column>\n             <column name=\"content\" type=\"${large-blob.type}\" />\n-            <column name=\"digest\" type=\"VARCHAR(255)\">\n-                <constraints nullable=\"false\" />\n-            </column>\n+            <column name=\"digest\" type=\"VARCHAR(255)\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjQ5MjA0OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/sql/create_unlink_file_content_triggers.sql", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMTowOFrOH-Mwbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMTowOFrOH-Mwbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4Mjc2Nw==", "bodyText": "The same comment applies here. You can't modify existing Liquibase changes like this - you need to create new ones.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534982767", "createdAt": "2020-12-03T09:11:08Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/sql/create_unlink_file_content_triggers.sql", "diffHunk": "@@ -1,4 +1,4 @@\n-CREATE TRIGGER DELETE_FROM_SYSTEM_TABLE_LM_SL_PERSISTENCE_FILE AFTER UPDATE OR DELETE\n+CREATE TRIGGER DELETE_FROM_SYSTEM_TABLE_LM_SL_PERSISTENCE_FILE AFTER DELETE", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1NjUwMDg2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMzowOFrOH-M15g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwOToxMzowOFrOH-M15g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDk4NDE2Ng==", "bodyText": "What if some moron passes a non-integer here? Will this be handled gracefully by our exception handlers?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r534984166", "createdAt": "2020-12-03T09:13:08Z", "author": {"login": "nictas"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "diffHunk": "@@ -87,7 +87,13 @@\n             }\n \n             try (InputStream in = item.openStream()) {\n-                FileEntry entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n+                FileEntry entry;\n+                if (request.getHeader(\"X-File-Size\") != null) {\n+                    entry = fileService.addFile(spaceGuid, namespace, item.getName(), in,\n+                                                Long.parseLong(request.getHeader(\"X-File-Size\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "67eebcf325c68f08058bdb3e480e186605fe7789"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjIwMzExOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.116.0-persistence.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNTowOFrOIFDQfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNTowOFrOIFDQfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NzE2NA==", "bodyText": "The db-changelog-1.110.0-xxx.xml files are full of preconditions, because they replace previous Liquibase changelogs and they must be skipped in case their previous versions were already executed. However, this is a brand new change and it should always be executed, so that the lm_sl_persistence_file table is in a consistent state across all landscapes.\nRemove this precondition and let the change fail if there are any problems.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r542167164", "createdAt": "2020-12-14T07:35:08Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.116.0-persistence.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd\">\n+\n+    <changeSet author=\"sap.com\" id=\"alter_table_lm_sl_persistence_file\">\n+        <preConditions onFail=\"MARK_RAN\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733116ba7a775ea62c1bcfe675a5b77d355d5717"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjIwNDcwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.116.0-persistence.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNTo0MlrOIFDRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozNTo0MlrOIFDRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2NzQwMA==", "bodyText": "Same.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r542167400", "createdAt": "2020-12-14T07:35:42Z", "author": {"login": "nictas"}, "path": "multiapps-controller-persistence/src/main/resources/org/cloudfoundry/multiapps/controller/persistence/db/changelog/db-changelog-1.116.0-persistence.xml", "diffHunk": "@@ -0,0 +1,25 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<databaseChangeLog xmlns=\"http://www.liquibase.org/xml/ns/dbchangelog\"\n+                   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n+                   xsi:schemaLocation=\"http://www.liquibase.org/xml/ns/dbchangelog\n+         http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.6.xsd\">\n+\n+    <changeSet author=\"sap.com\" id=\"alter_table_lm_sl_persistence_file\">\n+        <preConditions onFail=\"MARK_RAN\">\n+            <tableExists tableName=\"lm_sl_persistence_file\" />\n+        </preConditions>\n+        <dropNotNullConstraint tableName=\"lm_sl_persistence_file\" columnName=\"digest\" />\n+    </changeSet>\n+\n+    <changeSet author=\"sap.com\" id=\"create_new_unlink_file_content_trigger\">\n+        <preConditions onFail=\"MARK_RAN\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733116ba7a775ea62c1bcfe675a5b77d355d5717"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNjIxNjI0OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozOTowN1rOIFDX3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwNzozOTowN1rOIFDX3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjE2OTA1Mg==", "bodyText": "You could extract this and the following 3 lines of code in a separate method called getFileSizeHeaderValue and let it return a Long instead of a String.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/990#discussion_r542169052", "createdAt": "2020-12-14T07:39:07Z", "author": {"login": "nictas"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/api/impl/FilesApiServiceImpl.java", "diffHunk": "@@ -87,7 +88,16 @@\n             }\n \n             try (InputStream in = item.openStream()) {\n-                FileEntry entry = fileService.addFile(spaceGuid, namespace, item.getName(), in);\n+                FileEntry entry;\n+                String fileSizeHeader = request.getHeader(\"X-File-Size\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "733116ba7a775ea62c1bcfe675a5b77d355d5717"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 460, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}