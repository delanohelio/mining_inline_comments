{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0Mzk5NTMx", "number": 867, "title": "Adjust names of hooks' phases", "bodyText": "Rename hooks names:\nExamples:\nblue-green.application.before-start.idle\nblue-green.application.before-start.live\nblue-green.application.after-stop.live\ndeploy.application.before-start\nLMCROSSITXSADEPLOY-2080", "createdAt": "2020-05-28T10:37:27Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867", "merged": true, "mergeCommit": {"oid": "32f1be6e5ab2b97c626db11e671850a6fcaaeaa9"}, "closed": true, "closedAt": "2020-06-01T15:42:06Z", "author": {"login": "IvanBorislavovDimitrov"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclrmh8gBqjMzODIyMTQ5NDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnAWITAFqTQyMTg0NTMwMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91f0af5c63ce90924b3216562a7953976f80fb34", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/91f0af5c63ce90924b3216562a7953976f80fb34", "committedDate": "2020-05-28T10:30:02Z", "message": "Adjust names of hooks' phases"}, "afterCommit": {"oid": "a60d18b831be760803fd0eea2887f55b6a1abe28", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a60d18b831be760803fd0eea2887f55b6a1abe28", "committedDate": "2020-05-28T10:49:06Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a60d18b831be760803fd0eea2887f55b6a1abe28", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/a60d18b831be760803fd0eea2887f55b6a1abe28", "committedDate": "2020-05-28T10:49:06Z", "message": "Adjust names of hooks' phases"}, "afterCommit": {"oid": "19e852880763bc18ad607080653e06b7cfa83421", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/19e852880763bc18ad607080653e06b7cfa83421", "committedDate": "2020-05-28T10:53:55Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwMTQ2NzQ0", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#pullrequestreview-420146744", "createdAt": "2020-05-28T14:10:29Z", "commit": {"oid": "78911872acd2c91e82dbe3a9788588bdc34c1367"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoxMDoyOVrOGb28Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQxNDoyNDo0NFrOGb3kjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2NDgzNA==", "bodyText": "Add this to the abstract *WithHooks step", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r431864834", "createdAt": "2020-05-28T14:10:29Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/RestartAppStep.java", "diffHunk": "@@ -28,6 +29,8 @@\n \r\n     @Inject\r\n     protected RecentLogsRetriever recentLogsRetriever;\r\n+    @Inject\r\n+    private HooksPhaseBuilder hooksPhaseBuilder;\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78911872acd2c91e82dbe3a9788588bdc34c1367"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2ODA3MA==", "bodyText": "I do not get why we need this.\nIf we need the blue_green phase, why not directly put it here - SubprocessPhase -> BlueGreenPhase\nand the corresponding phases will be IDLE/LIVE", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r431868070", "createdAt": "2020-05-28T14:15:05Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/SubprocessPhase.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.sap.cloud.lm.sl.cf.core.model;\n+\n+public enum SubprocessPhase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e852880763bc18ad607080653e06b7cfa83421"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2ODg5Ng==", "bodyText": "Or can we use only the Phase.AFTER_RESUME in order to determine whether we are in IDLE or LIVE phases?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r431868896", "createdAt": "2020-05-28T14:16:15Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/SubprocessPhase.java", "diffHunk": "@@ -0,0 +1,6 @@\n+package com.sap.cloud.lm.sl.cf.core.model;\n+\n+public enum SubprocessPhase {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg2ODA3MA=="}, "originalCommit": {"oid": "19e852880763bc18ad607080653e06b7cfa83421"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTg3NTIxMw==", "bodyText": "I would extract the whole logic as follows - as we are having hook phases which consists of the following parts ... we could extract this logic in different methods or inner classes and the whole method would look like this:\npublic String buildHookPhase(HookPhase hookPhase){\n     String getDeploymentType = getDeploymentType(); // perform some validation whether the current deployment                                                                                                                                                      type is deploy or blue-green\n     String optionalPhaseLocator = getOptionalPhaseLocator(); // here the check whether the context.getVariable(Variables.PHASE) != Phase.AFTER_RESUME should be made\n     return getDeploymentType + \".\" + DEFAULT_HOOK_ENTITY + \".\" + hookPhase.getValue() + \".\" + optionalPhaseLocator // if presented, else it should be omitted.\n\n}", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r431875213", "createdAt": "2020-05-28T14:24:44Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/HooksPhaseBuilder.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhaseProcessType;\n+import com.sap.cloud.lm.sl.cf.core.model.HookProcessPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.Phase;\n+import com.sap.cloud.lm.sl.cf.core.model.SubprocessPhase;\n+import com.sap.cloud.lm.sl.cf.process.steps.ProcessContext;\n+import com.sap.cloud.lm.sl.cf.process.variables.Variables;\n+import com.sap.cloud.lm.sl.cf.web.api.model.ProcessType;\n+\n+public class HooksPhaseBuilder {\n+\n+    private static final String HOOKS_DELIMITER = \".\";\n+    private final ProcessTypeParser processTypeParser;\n+    private final ProcessContext context;\n+\n+    public HooksPhaseBuilder(ProcessTypeParser processTypeParser, ProcessContext context) {\n+        this.processTypeParser = processTypeParser;\n+        this.context = context;\n+    }\n+\n+    public String buildHookPhase(HookPhase hookPhase) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19e852880763bc18ad607080653e06b7cfa83421"}, "originalPosition": 23}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78911872acd2c91e82dbe3a9788588bdc34c1367", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/78911872acd2c91e82dbe3a9788588bdc34c1367", "committedDate": "2020-05-28T14:00:06Z", "message": "Fix comments"}, "afterCommit": {"oid": "cd36759977453fe025fd01b64d910c4a3d061d2f", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/cd36759977453fe025fd01b64d910c4a3d061d2f", "committedDate": "2020-05-28T15:07:25Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd36759977453fe025fd01b64d910c4a3d061d2f", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/cd36759977453fe025fd01b64d910c4a3d061d2f", "committedDate": "2020-05-28T15:07:25Z", "message": "Adjust names of hooks' phases"}, "afterCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/98d98fdc93c91c4517c83095b8f968695ed46140", "committedDate": "2020-05-29T10:34:59Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIwODg5OTQ2", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#pullrequestreview-420889946", "createdAt": "2020-05-29T12:04:54Z", "commit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMjowNDo1NFrOGcZ6_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOVQxMzowNDoyNlrOGcbw0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQzODAxMw==", "bodyText": "can replace this with Function.identity()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r432438013", "createdAt": "2020-05-29T12:04:54Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.core/src/main/java/com/sap/cloud/lm/sl/cf/core/model/HookPhase.java", "diffHunk": "@@ -6,26 +6,33 @@\n import java.util.stream.Collectors;\n \n public enum HookPhase {\n-    APPLICATION_BEFORE_STOP_LIVE(\"application.before-stop.live\"),\n-    APPLICATION_BEFORE_STOP_IDLE(\"application.before-stop.idle\"),\n-    APPLICATION_AFTER_STOP_LIVE(\"application.after-stop.live\"),\n-    APPLICATION_AFTER_STOP_IDLE(\"application.after-stop.idle\"),\n-    APPLICATION_BEFORE_UNMAP_ROUTES(\"application.before-unmap-routes\"),\n-    APPLICATION_BEFORE_START_IDLE(\"application.before-start.idle\"),\n-    APPLICATION_BEFORE_START_LIVE(\"application.before-start.live\"),\n-    APPLICATION_BEFORE_START(\"application.before-start\"),\n+    BEFORE_STOP(\"before-stop\"),\n+    DEPLOY_APPLICATION_BEFORE_STOP(\"deploy.application.before-stop\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_STOP_IDLE(\"blue-green.application.before-stop.idle\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_STOP_LIVE(\"blue-green.application.before-stop.live\"),\n+    AFTER_STOP(\"after-stop\"),\n+    DEPLOY_APPLICATION_AFTER_STOP(\"deploy.application.after-stop\"),\n+    BLUE_GREEN_APPLICATION_AFTER_STOP_IDLE(\"blue-green.application.after-stop.idle\"),\n+    BLUE_GREEN_APPLICATION_AFTER_STOP_LIVE(\"blue-green.application.after-stop.live\"),\n+    BEFORE_UNMAP_ROUTES(\"before-unmap-routes\"),\n+    DEPLOY_APPLICATION_BEFORE_UNMAP_ROUTES(\"deploy.application.before-unmap-routes\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_UNMAP_ROUTES_LIVE(\"blue-green.application.before-unmap-routes.live\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_UNMAP_ROUTES_IDLE(\"blue-green.application.before-unmap-routes.idle\"),\n+    BEFORE_START(\"before-start\"),\n+    DEPLOY_APPLICATION_BEFORE_START(\"deploy.application.before-start\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_START_IDLE(\"blue-green.application.before-start.idle\"),\n+    BLUE_GREEN_APPLICATION_BEFORE_START_LIVE(\"blue-green.application.before-start.live\"),\n     NONE(\"\");\n \n+    private static Map<String, HookPhase> namesToValues = Arrays.stream(HookPhase.values())\n+                                                                .collect(Collectors.toMap(hookPhase -> hookPhase.value,\n+                                                                                          hookPhase -> hookPhase));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ0OTM2NQ==", "bodyText": "why is this saved in the executedHooks but not used for anything?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r432449365", "createdAt": "2020-05-29T12:27:56Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/SyncFlowableStepWithHooks.java", "diffHunk": "@@ -25,20 +26,21 @@\n     @Inject\n     private HooksPhaseGetter hooksPhaseGetter;\n     @Inject\n-    private HooksExecutor hooksExecutor;\n+    protected HooksPhaseBuilder hooksPhaseBuilder;\n \n     @Override\n     protected StepPhase executeStep(ProcessContext context) {\n         ModuleDeterminer moduleDeterminer = getModuleDeterminer(context);\n         StepPhase currentStepPhase = context.getVariable(Variables.STEP_PHASE);\n         Module moduleToDeploy = moduleDeterminer.determineModuleToDeploy(context);\n         HooksCalculator hooksCalculator = getHooksCalculator(context);\n-        List<Hook> executedHooks = hooksExecutor.executeBeforeStepHooks(hooksCalculator, moduleToDeploy, currentStepPhase);\n+        HooksExecutor hooksExecutor = getHooksExecutor(hooksCalculator, moduleToDeploy);\n+        List<Hook> executedHooks = hooksExecutor.executeBeforeStepHooks(currentStepPhase);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2NjM1NQ==", "bodyText": "wouldn't it make a bit more sense to have this code in the enum for the HookPhase itself?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r432466355", "createdAt": "2020-05-29T13:01:11Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/HooksPhaseBuilder.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhaseProcessType;\n+import com.sap.cloud.lm.sl.cf.core.model.HookProcessPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.Phase;\n+import com.sap.cloud.lm.sl.cf.core.model.SubprocessPhase;\n+import com.sap.cloud.lm.sl.cf.process.steps.ProcessContext;\n+import com.sap.cloud.lm.sl.cf.process.variables.Variables;\n+import com.sap.cloud.lm.sl.cf.web.api.model.ProcessType;\n+\n+@Named\n+public class HooksPhaseBuilder {\n+\n+    private static final String HOOKS_DELIMITER = \".\";\n+    private static final String DEFAULT_HOOK_ENTITY = \"application\";\n+    private final ProcessTypeParser processTypeParser;\n+\n+    @Inject\n+    public HooksPhaseBuilder(ProcessTypeParser processTypeParser) {\n+        this.processTypeParser = processTypeParser;\n+    }\n+\n+    public List<HookPhase> buildHookPhases(List<HookPhase> hookPhases, ProcessContext context) {\n+        return hookPhases.stream()\n+                         .map(hookPhase -> buildPhase(hookPhase, context))\n+                         .map(HookPhase::fromString)\n+                         .collect(Collectors.toList());\n+    }\n+\n+    private String buildPhase(HookPhase hookPhase, ProcessContext context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2ODE3Ng==", "bodyText": "for example: HOOKS_DELIMITER is something already used in the enum, as well as the enum has a method to get a value from 1 string, why not add a method to get a value from all the needed strings (deploymentType, phase, phaseLocator)", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r432468176", "createdAt": "2020-05-29T13:04:26Z", "author": {"login": "ikasarov"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/HooksPhaseBuilder.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package com.sap.cloud.lm.sl.cf.process.util;\n+\n+import java.util.List;\n+import java.util.stream.Collectors;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.HookPhaseProcessType;\n+import com.sap.cloud.lm.sl.cf.core.model.HookProcessPhase;\n+import com.sap.cloud.lm.sl.cf.core.model.Phase;\n+import com.sap.cloud.lm.sl.cf.core.model.SubprocessPhase;\n+import com.sap.cloud.lm.sl.cf.process.steps.ProcessContext;\n+import com.sap.cloud.lm.sl.cf.process.variables.Variables;\n+import com.sap.cloud.lm.sl.cf.web.api.model.ProcessType;\n+\n+@Named\n+public class HooksPhaseBuilder {\n+\n+    private static final String HOOKS_DELIMITER = \".\";\n+    private static final String DEFAULT_HOOK_ENTITY = \"application\";\n+    private final ProcessTypeParser processTypeParser;\n+\n+    @Inject\n+    public HooksPhaseBuilder(ProcessTypeParser processTypeParser) {\n+        this.processTypeParser = processTypeParser;\n+    }\n+\n+    public List<HookPhase> buildHookPhases(List<HookPhase> hookPhases, ProcessContext context) {\n+        return hookPhases.stream()\n+                         .map(hookPhase -> buildPhase(hookPhase, context))\n+                         .map(HookPhase::fromString)\n+                         .collect(Collectors.toList());\n+    }\n+\n+    private String buildPhase(HookPhase hookPhase, ProcessContext context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMjQ2NjM1NQ=="}, "originalCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98d98fdc93c91c4517c83095b8f968695ed46140", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/98d98fdc93c91c4517c83095b8f968695ed46140", "committedDate": "2020-05-29T10:34:59Z", "message": "Adjust names of hooks' phases"}, "afterCommit": {"oid": "95f9c849a8e614a380e95b893a93530c6b5733fd", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/95f9c849a8e614a380e95b893a93530c6b5733fd", "committedDate": "2020-06-01T07:26:00Z", "message": "Support for old phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "95f9c849a8e614a380e95b893a93530c6b5733fd", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/95f9c849a8e614a380e95b893a93530c6b5733fd", "committedDate": "2020-06-01T07:26:00Z", "message": "Support for old phases"}, "afterCommit": {"oid": "8366ba55439f634eedf1ef18f2d6dad51b63d388", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/8366ba55439f634eedf1ef18f2d6dad51b63d388", "committedDate": "2020-06-01T08:33:29Z", "message": "Support for old phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8366ba55439f634eedf1ef18f2d6dad51b63d388", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/8366ba55439f634eedf1ef18f2d6dad51b63d388", "committedDate": "2020-06-01T08:33:29Z", "message": "Support for old phases"}, "afterCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/eae61914f7ef8e5a7f2140231e1f9d031995e547", "committedDate": "2020-06-01T08:41:57Z", "message": "Support for old phases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxNzMyNzQx", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#pullrequestreview-421732741", "createdAt": "2020-06-01T10:09:54Z", "commit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDowOTo1NFrOGdFYLw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxMDoxNzoyMFrOGdFj_Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE0OTk5OQ==", "bodyText": "Try extracting the whole block of code into another method and try to re-use it below, in the method getHookPhasesAfterStep, because it seems like a copy-pasted below?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r433149999", "createdAt": "2020-06-01T10:09:54Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/steps/StopAppStep.java", "diffHunk": "@@ -58,12 +59,28 @@ protected String getStepErrorMessage(ProcessContext context) {\n \r\n     @Override\r\n     public List<HookPhase> getHookPhasesBeforeStep(ProcessContext context) {\r\n-        return hooksPhaseBuilder.buildHookPhases(Collections.singletonList(HookPhase.BEFORE_STOP), context);\r\n+        List<HookPhase> hookPhases = new ArrayList<>();\r\n+        hookPhases.add(HookPhase.BEFORE_STOP);\r\n+        ProcessType processType = processTypeParser.getProcessType(context.getExecution());\r\n+        if (ProcessType.BLUE_GREEN_DEPLOY.equals(processType)) {\r\n+            hookPhases.add(HookPhase.APPLICATION_BEFORE_STOP_IDLE);\r\n+        } else {\r\n+            hookPhases.add(HookPhase.APPLICATION_BEFORE_STOP_LIVE);\r\n+        }\r\n+        return hooksPhaseBuilder.buildHookPhases(hookPhases, context);\r", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1MjI1MQ==", "bodyText": "rename to containsOldPhase", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r433152251", "createdAt": "2020-06-01T10:15:17Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ModuleHooksAggregator.java", "diffHunk": "@@ -82,7 +82,26 @@ private boolean shouldExecuteHook(Map<String, List<String>> alreadyExecutedHooks\n     private boolean hasAllPhasesExecuted(Map<String, List<String>> alreadyExecutedHooks, Hook hookToBeExecuted,\n                                          List<HookPhase> hookPhasesForCurrentStepPhase) {\n         List<HookPhase> executedHookPhasesForHook = getExecutedHookPhasesForHook(alreadyExecutedHooks, hookToBeExecuted.getName());\n-        return executedHookPhasesForHook.containsAll(hookPhasesForCurrentStepPhase);\n+        return executedHookPhasesForHook.containsAll(getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase));\n+    }\n+\n+    @Deprecated\n+    private List<HookPhase> getHookPhasesForCurrentStepPhase(Hook hookToBeExecuted, List<HookPhase> hookPhasesForCurrentStepPhase) {\n+        boolean isThereOldPhase = hookToBeExecuted.getPhases()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1Mjc2OQ==", "bodyText": "extract this getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase) to a variable", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r433152769", "createdAt": "2020-06-01T10:16:41Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ModuleHooksAggregator.java", "diffHunk": "@@ -82,7 +82,26 @@ private boolean shouldExecuteHook(Map<String, List<String>> alreadyExecutedHooks\n     private boolean hasAllPhasesExecuted(Map<String, List<String>> alreadyExecutedHooks, Hook hookToBeExecuted,\n                                          List<HookPhase> hookPhasesForCurrentStepPhase) {\n         List<HookPhase> executedHookPhasesForHook = getExecutedHookPhasesForHook(alreadyExecutedHooks, hookToBeExecuted.getName());\n-        return executedHookPhasesForHook.containsAll(hookPhasesForCurrentStepPhase);\n+        return executedHookPhasesForHook.containsAll(getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzE1MzAyMQ==", "bodyText": "Extract HookPhase.getOldPhases() .contains(hookPhase) into method and re-use it below", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#discussion_r433153021", "createdAt": "2020-06-01T10:17:20Z", "author": {"login": "enchobelezirev"}, "path": "com.sap.cloud.lm.sl.cf.process/src/main/java/com/sap/cloud/lm/sl/cf/process/util/ModuleHooksAggregator.java", "diffHunk": "@@ -82,7 +82,26 @@ private boolean shouldExecuteHook(Map<String, List<String>> alreadyExecutedHooks\n     private boolean hasAllPhasesExecuted(Map<String, List<String>> alreadyExecutedHooks, Hook hookToBeExecuted,\n                                          List<HookPhase> hookPhasesForCurrentStepPhase) {\n         List<HookPhase> executedHookPhasesForHook = getExecutedHookPhasesForHook(alreadyExecutedHooks, hookToBeExecuted.getName());\n-        return executedHookPhasesForHook.containsAll(hookPhasesForCurrentStepPhase);\n+        return executedHookPhasesForHook.containsAll(getHookPhasesForCurrentStepPhase(hookToBeExecuted, hookPhasesForCurrentStepPhase));\n+    }\n+\n+    @Deprecated\n+    private List<HookPhase> getHookPhasesForCurrentStepPhase(Hook hookToBeExecuted, List<HookPhase> hookPhasesForCurrentStepPhase) {\n+        boolean isThereOldPhase = hookToBeExecuted.getPhases()\n+                                                  .stream()\n+                                                  .anyMatch(hookPhase -> HookPhase.getOldPhases()\n+                                                                                  .contains(HookPhase.fromString(hookPhase)));\n+        if (isThereOldPhase) {\n+            return hookPhasesForCurrentStepPhase.stream()\n+                                                .filter(hookPhase -> HookPhase.getOldPhases()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547"}, "originalPosition": 34}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eae61914f7ef8e5a7f2140231e1f9d031995e547", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/eae61914f7ef8e5a7f2140231e1f9d031995e547", "committedDate": "2020-06-01T08:41:57Z", "message": "Support for old phases"}, "afterCommit": {"oid": "bafd28a2a9ab045a08ff29d250ae1ad50a820c6e", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/bafd28a2a9ab045a08ff29d250ae1ad50a820c6e", "committedDate": "2020-06-01T10:41:13Z", "message": "Support for old phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bafd28a2a9ab045a08ff29d250ae1ad50a820c6e", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/bafd28a2a9ab045a08ff29d250ae1ad50a820c6e", "committedDate": "2020-06-01T10:41:13Z", "message": "Support for old phases"}, "afterCommit": {"oid": "805c1ebd4c246b8f669beccfd2a254aea9a92bd5", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/805c1ebd4c246b8f669beccfd2a254aea9a92bd5", "committedDate": "2020-06-01T11:27:50Z", "message": "Support for old phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "805c1ebd4c246b8f669beccfd2a254aea9a92bd5", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/805c1ebd4c246b8f669beccfd2a254aea9a92bd5", "committedDate": "2020-06-01T11:27:50Z", "message": "Support for old phases"}, "afterCommit": {"oid": "c8397f19e2ade37fe95266b851c0d7bb9bbc2e78", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c8397f19e2ade37fe95266b851c0d7bb9bbc2e78", "committedDate": "2020-06-01T12:08:00Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "00d7548ab95249272d9cb7614a7f41989be19245", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/00d7548ab95249272d9cb7614a7f41989be19245", "committedDate": "2020-06-01T12:54:39Z", "message": "Adjust names of hooks' phases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c1fc9d482dfe0aa8c2f866c7c1243f01adce7b20", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c1fc9d482dfe0aa8c2f866c7c1243f01adce7b20", "committedDate": "2020-06-01T12:54:41Z", "message": "Support for old phases"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8397f19e2ade37fe95266b851c0d7bb9bbc2e78", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c8397f19e2ade37fe95266b851c0d7bb9bbc2e78", "committedDate": "2020-06-01T12:08:00Z", "message": "Adjust names of hooks' phases"}, "afterCommit": {"oid": "c1fc9d482dfe0aa8c2f866c7c1243f01adce7b20", "author": {"user": {"login": "IvanBorislavovDimitrov", "name": "Ivan Dimitrov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/c1fc9d482dfe0aa8c2f866c7c1243f01adce7b20", "committedDate": "2020-06-01T12:54:41Z", "message": "Support for old phases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxODQ1MzAz", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/867#pullrequestreview-421845303", "createdAt": "2020-06-01T13:33:18Z", "commit": {"oid": "c1fc9d482dfe0aa8c2f866c7c1243f01adce7b20"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 927, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}