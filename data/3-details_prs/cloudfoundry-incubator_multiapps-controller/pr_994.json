{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzA4MTMw", "number": 994, "title": "Refactor data termination", "bodyText": "List blobs only once and check the whole list of deleted spaces to match\nspecified filter. Add temporary cleaners of orphaned data which will not\nbe deleted from Data Termination cleaner\nJIRA:LMCROSSITXSADEPLOY-2248", "createdAt": "2020-11-16T14:43:29Z", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994", "merged": true, "mergeCommit": {"oid": "5e70491498aa12db7b500920dbc2a3212a5f88c3"}, "closed": true, "closedAt": "2020-11-18T08:13:53Z", "author": {"login": "theghost5800"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddF_YyAH2gAyNTIxNzA4MTMwOmQ2ODI1NTI1ODhmZDJjYWJlMTg2ZDA4NzQ5ZWYxMTY5ZTBhNjliZjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABddpqi2gFqTUzMzE5MjY2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/d682552588fd2cabe186d08749ef1169e0a69bf5", "committedDate": "2020-11-16T14:39:48Z", "message": "Refactor data termination\n\nList blobs only once and check the whole list of deleted spaces to match\nspecified filter. Add temporary cleaners of orphaned data which will not\nbe deleted from Data Termination cleaner\n\nJIRA:LMCROSSITXSADEPLOY-2248"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMTIwMzIw", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#pullrequestreview-532120320", "createdAt": "2020-11-17T08:25:36Z", "commit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyNTozNlrOH0pXoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODoyODo0NVrOH0pe5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NTc5Mg==", "bodyText": "Could be replaced by this one-liner: int deletedFiles = IntStream.of(batchResult).sum();", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524965792", "createdAt": "2020-11-17T08:25:36Z", "author": {"login": "radoslav-d"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -226,14 +226,18 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpaceQuery(String space) {\n+    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                statement.setString(1, space);\n-                int deletedFiles = statement.executeUpdate();\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACE_1, deletedFiles, space));\n+                addSpacesAsBatches(statement, spaces);\n+                int[] batchResults = statement.executeBatch();\n+                int deletedFiles = 0;\n+                for (int batchResult : batchResults) {\n+                    deletedFiles += batchResult;\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2NzY1Mg==", "bodyText": "really nice approach!", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524967652", "createdAt": "2020-11-17T08:28:45Z", "author": {"login": "radoslav-d"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/OrphanedDataCleaner.java", "diffHunk": "@@ -0,0 +1,103 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.Date;\n+import java.util.List;\n+import java.util.UUID;\n+\n+import org.cloudfoundry.multiapps.controller.core.auditlogging.AuditLoggingProvider;\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.core.util.SecurityUtil;\n+import org.cloudfoundry.multiapps.mta.model.AuditableConfiguration;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.HttpStatus;\n+\n+import com.sap.cloudfoundry.client.facade.CloudControllerClient;\n+import com.sap.cloudfoundry.client.facade.CloudControllerClientImpl;\n+import com.sap.cloudfoundry.client.facade.CloudCredentials;\n+import com.sap.cloudfoundry.client.facade.CloudOperationException;\n+\n+public abstract class OrphanedDataCleaner<T extends AuditableConfiguration> implements Cleaner {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMyMDk2MDMz", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#pullrequestreview-532096033", "createdAt": "2020-11-17T07:56:55Z", "commit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "state": "COMMENTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwNzo1Njo1NVrOH0oLXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwODozMDozOFrOH0pjkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjI3MA==", "bodyText": "Do you agree that \"spaceIds\" sounds better than \"spaces\" since List spaces holds only ids?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946270", "createdAt": "2020-11-17T07:56:55Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -140,12 +146,16 @@ private void deleteUserOperationsOrphanData(String deleteEventSpaceId) {\n                         .delete();\n     }\n \n-    private void deleteSpaceLeftovers(String spaceId) {\n+    private void deleteSpacesLeftovers(List<String> spaces) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0NjY4NA==", "bodyText": "I know that this is an old code but can we rename to spaceEventsToBeDeleted, I think it sounds a bit better.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946684", "createdAt": "2020-11-17T07:57:50Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -53,10 +57,12 @@ public void deleteOrphanUserData() {\n         assertGlobalAuditorCredentialsExist();\n         List<String> deleteSpaceEventsToBeDeleted = getDeleteSpaceEvents();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk0Njk4Mg==", "bodyText": "If you agree with the previous comment maybe rename this method to deleteBySpaceIds.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524946982", "createdAt": "2020-11-17T07:58:33Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/security/data/termination/DataTerminationService.java", "diffHunk": "@@ -140,12 +146,16 @@ private void deleteUserOperationsOrphanData(String deleteEventSpaceId) {\n                         .delete();\n     }\n \n-    private void deleteSpaceLeftovers(String spaceId) {\n+    private void deleteSpacesLeftovers(List<String> spaces) {\n         try {\n-            fileService.deleteBySpace(spaceId);\n+            fileService.deleteBySpaces(spaces);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk1OTQyOQ==", "bodyText": "Arrays.stream(batchResults).sum();", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524959429", "createdAt": "2020-11-17T08:14:30Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/query/providers/SqlFileQueryProvider.java", "diffHunk": "@@ -226,14 +226,18 @@ protected SqlFileQueryProvider(String tableName, DataSourceDialect dataSourceDia\n \n     }\n \n-    public SqlQuery<Integer> getDeleteBySpaceQuery(String space) {\n+    public SqlQuery<Integer> getDeleteBySpacesQuery(List<String> spaces) {\n         return (Connection connection) -> {\n             PreparedStatement statement = null;\n             try {\n                 statement = connection.prepareStatement(getQuery(DELETE_FILES_BY_SPACE));\n-                statement.setString(1, space);\n-                int deletedFiles = statement.executeUpdate();\n-                logger.debug(MessageFormat.format(Messages.DELETED_0_FILES_WITH_SPACE_1, deletedFiles, space));\n+                addSpacesAsBatches(statement, spaces);\n+                int[] batchResults = statement.executeBatch();\n+                int deletedFiles = 0;\n+                for (int batchResult : batchResults) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Njk4MQ==", "bodyText": "If this method throws an exception, some files for spaces will not be deleted. Do you think it is worth wrapping it into a try-catch?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524966981", "createdAt": "2020-11-17T08:27:37Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-persistence/src/main/java/org/cloudfoundry/multiapps/controller/persistence/services/FileSystemFileStorage.java", "diffHunk": "@@ -82,14 +82,9 @@ public void deleteFile(String id, String space) throws FileStorageException {\n     }\n \n     @Override\n-    public void deleteFilesBySpace(String space) throws FileStorageException {\n-        File spaceDirectory = getSpaceDirectory(space).toFile();\n-        try {\n-            if (spaceDirectory.exists()) {\n-                FileUtils.deleteDirectory(spaceDirectory);\n-            }\n-        } catch (IOException e) {\n-            throw new FileStorageException(MessageFormat.format(Messages.ERROR_DELETING_DIRECTORY, spaceDirectory), e);\n+    public void deleteFilesBySpaces(List<String> spaces) throws FileStorageException {\n+        for (String space : spaces) {\n+            deleteFilesBySpace(space);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2Nzk1NQ==", "bodyText": "Make it final", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524967955", "createdAt": "2020-11-17T08:29:19Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationEntry;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationEntryService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n+\n+    private ConfigurationEntryService configurationEntryService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODE0MQ==", "bodyText": "Can you extract these messages in constants?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968141", "createdAt": "2020-11-17T08:29:35Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationEntriesCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationEntry;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationEntryService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationEntriesCleaner extends OrphanedDataCleaner<ConfigurationEntry> {\n+\n+    private ConfigurationEntryService configurationEntryService;\n+\n+    @Inject\n+    public ConfigurationEntriesCleaner(ApplicationConfiguration applicationConfiguration,\n+                                       ConfigurationEntryService configurationEntryService) {\n+        super(applicationConfiguration);\n+        this.configurationEntryService = configurationEntryService;\n+    }\n+\n+    @Override\n+    protected String getStartCleanupLogMessage() {\n+        return \"Deleting orphaned configuration entries...\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODc4Ng==", "bodyText": "Constants?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968786", "createdAt": "2020-11-17T08:30:32Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationSubscription;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationSubscriptionService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n+\n+    private ConfigurationSubscriptionService configurationSubscriptionService;\n+\n+    @Inject\n+    public ConfigurationSubscriptionCleaner(ApplicationConfiguration applicationConfiguration,\n+                                            ConfigurationSubscriptionService configurationSubscriptionService) {\n+        super(applicationConfiguration);\n+        this.configurationSubscriptionService = configurationSubscriptionService;\n+    }\n+\n+    @Override\n+    protected String getStartCleanupLogMessage() {\n+        return \"Deleting orphaned configuration subscriptions...\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDk2ODg1MA==", "bodyText": "final?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#discussion_r524968850", "createdAt": "2020-11-17T08:30:38Z", "author": {"login": "IvanBorislavovDimitrov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/jobs/ConfigurationSubscriptionCleaner.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.jobs;\n+\n+import java.util.List;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+import org.cloudfoundry.multiapps.controller.persistence.model.ConfigurationSubscription;\n+import org.cloudfoundry.multiapps.controller.persistence.services.ConfigurationSubscriptionService;\n+import org.springframework.core.annotation.Order;\n+\n+@Named()\n+@Order(40)\n+public class ConfigurationSubscriptionCleaner extends OrphanedDataCleaner<ConfigurationSubscription> {\n+\n+    private ConfigurationSubscriptionService configurationSubscriptionService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d682552588fd2cabe186d08749ef1169e0a69bf5"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "author": {"user": {"login": "theghost5800", "name": "Kristian Atanasov"}}, "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/commit/167ac48bad01a8f5c82cfde6872e5ecc1e26243f", "committedDate": "2020-11-17T16:41:13Z", "message": "Refactor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTY5ODE5", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#pullrequestreview-533169819", "createdAt": "2020-11-18T07:40:17Z", "commit": {"oid": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTkyNjY4", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/994#pullrequestreview-533192668", "createdAt": "2020-11-18T08:13:37Z", "commit": {"oid": "167ac48bad01a8f5c82cfde6872e5ecc1e26243f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 852, "cost": 1, "resetAt": "2021-11-01T13:07:16Z"}}}