{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTc0MzI5", "number": 946, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjowNzo0NlrOEhNokw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjowNzo0NlrOEhNokw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjYxODQzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/listeners/ExpiredJobListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjowNzo0NlrOHOZ0ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzoyMzozNFrOHO6ENA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NTIxOQ==", "bodyText": "maybe split this if for readability", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/946#discussion_r484865219", "createdAt": "2020-09-08T12:07:46Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/listeners/ExpiredJobListener.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.listeners;\n+\n+import static java.text.MessageFormat.format;\n+\n+import java.time.Instant;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.flowable.common.engine.api.delegate.event.FlowableEngineEntityEvent;\n+import org.flowable.engine.delegate.event.AbstractFlowableEngineEventListener;\n+import org.flowable.job.service.impl.persistence.entity.JobEntity;\n+import org.flowable.job.service.impl.persistence.entity.JobInfoEntity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Named(\"expiredJobListener\")\n+public class ExpiredJobListener extends AbstractFlowableEngineEventListener {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ExpiredJobListener.class);\n+\n+    @Override\n+    public boolean isFailOnException() {\n+        return false;\n+    }\n+\n+    @Override\n+    protected void entityDeleted(FlowableEngineEntityEvent event) {\n+        JobEntity jobEntity = getJobEntity(event);\n+        if (jobEntity != null && hasJobEntityExpired(jobEntity)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3fb03424e2e190208f689021c2832db357281c76"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5MzQ2MA==", "bodyText": "Done", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/946#discussion_r485393460", "createdAt": "2020-09-09T07:23:34Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/listeners/ExpiredJobListener.java", "diffHunk": "@@ -0,0 +1,53 @@\n+package org.cloudfoundry.multiapps.controller.process.listeners;\n+\n+import static java.text.MessageFormat.format;\n+\n+import java.time.Instant;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.process.Messages;\n+import org.flowable.common.engine.api.delegate.event.FlowableEngineEntityEvent;\n+import org.flowable.engine.delegate.event.AbstractFlowableEngineEventListener;\n+import org.flowable.job.service.impl.persistence.entity.JobEntity;\n+import org.flowable.job.service.impl.persistence.entity.JobInfoEntity;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+@Named(\"expiredJobListener\")\n+public class ExpiredJobListener extends AbstractFlowableEngineEventListener {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(ExpiredJobListener.class);\n+\n+    @Override\n+    public boolean isFailOnException() {\n+        return false;\n+    }\n+\n+    @Override\n+    protected void entityDeleted(FlowableEngineEntityEvent event) {\n+        JobEntity jobEntity = getJobEntity(event);\n+        if (jobEntity != null && hasJobEntityExpired(jobEntity)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg2NTIxOQ=="}, "originalCommit": {"oid": "3fb03424e2e190208f689021c2832db357281c76"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 412, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}