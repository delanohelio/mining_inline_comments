{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5MjAxODc1", "number": 953, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoyMjo0MlrOEmgBGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDowMDo1NVrOEmndwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODA1OTE1OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDoyMjo0MlrOHWj2Ow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1Njo1MlrOHWo74g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQxODA0Mw==", "bodyText": "Why we don't use latest version compatible with java 11\nJava 8 thru 11 maven artifact:\n<dependency>\n        <groupId>com.zaxxer</groupId>\n        <artifactId>HikariCP</artifactId>\n        <version>3.4.5</version>\n</dependency>", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493418043", "createdAt": "2020-09-23T10:22:42Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-web/pom.xml", "diffHunk": "@@ -203,5 +194,17 @@\n             <groupId>commons-fileupload</groupId>\n             <artifactId>commons-fileupload</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>io.pivotal.cfenv</groupId>\n+            <artifactId>java-cfenv</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.pivotal.cfenv</groupId>\n+            <artifactId>java-cfenv-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.zaxxer</groupId>\n+            <artifactId>HikariCP-java7</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzUwMTQxMA==", "bodyText": "Quartz uses HikariCP-java7, and we cannot upgrade to a newer version as a result.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493501410", "createdAt": "2020-09-23T11:56:52Z", "author": {"login": "nictas"}, "path": "multiapps-controller-web/pom.xml", "diffHunk": "@@ -203,5 +194,17 @@\n             <groupId>commons-fileupload</groupId>\n             <artifactId>commons-fileupload</artifactId>\n         </dependency>\n+        <dependency>\n+            <groupId>io.pivotal.cfenv</groupId>\n+            <artifactId>java-cfenv</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>io.pivotal.cfenv</groupId>\n+            <artifactId>java-cfenv-jdbc</artifactId>\n+        </dependency>\n+        <dependency>\n+            <groupId>com.zaxxer</groupId>\n+            <artifactId>HikariCP-java7</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQxODA0Mw=="}, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE3NDgzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/FileSystemFileStorageFactoryBean.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0Mzo0NFrOHWlBvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1MTo1OFrOHWopNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzM3NA==", "bodyText": "Are volume_mounts and container_dir properties names from FSS binding?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493437374", "createdAt": "2020-09-23T10:43:44Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/FileSystemFileStorageFactoryBean.java", "diffHunk": "@@ -1,69 +1,60 @@\n package org.cloudfoundry.multiapps.controller.web.configuration.bean.factory;\n \n-import java.text.MessageFormat;\n+import java.util.List;\n+import java.util.Map;\n \n-import org.apache.commons.lang3.StringUtils;\n import org.cloudfoundry.multiapps.controller.persistence.services.FileSystemFileStorage;\n-import org.cloudfoundry.multiapps.controller.web.Messages;\n-import org.cloudfoundry.multiapps.controller.web.configuration.service.FileSystemServiceInfo;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.cloudfoundry.multiapps.controller.web.util.VcapServiceFinder;\n import org.springframework.beans.factory.FactoryBean;\n import org.springframework.beans.factory.InitializingBean;\n-import org.springframework.cloud.Cloud;\n-import org.springframework.cloud.CloudException;\n-import org.springframework.cloud.CloudFactory;\n \n-public class FileSystemFileStorageFactoryBean implements FactoryBean<FileSystemFileStorage>, InitializingBean {\n+import io.pivotal.cfenv.core.CfService;\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(FileSystemFileStorageFactoryBean.class);\n+public class FileSystemFileStorageFactoryBean implements FactoryBean<FileSystemFileStorage>, InitializingBean {\n \n     private final String serviceName;\n+    private final VcapServiceFinder vcapServiceFinder;\n     private FileSystemFileStorage fileSystemFileStorage;\n \n-    public FileSystemFileStorageFactoryBean(String serviceName) {\n+    public FileSystemFileStorageFactoryBean(String serviceName, VcapServiceFinder vcapServiceFinder) {\n         this.serviceName = serviceName;\n+        this.vcapServiceFinder = vcapServiceFinder;\n     }\n \n     @Override\n     public void afterPropertiesSet() {\n         String storagePath = getStoragePath(serviceName);\n-        this.fileSystemFileStorage = createFileSystemFileStorage(storagePath);\n-    }\n-\n-    private FileSystemFileStorage createFileSystemFileStorage(String storagePath) {\n-        return storagePath == null ? null : new FileSystemFileStorage(storagePath);\n-    }\n-\n-    @Override\n-    public FileSystemFileStorage getObject() {\n-        return fileSystemFileStorage;\n+        if (storagePath == null) {\n+            return;\n+        }\n+        this.fileSystemFileStorage = new FileSystemFileStorage(storagePath);\n     }\n \n     @Override\n-    public Class<?> getObjectType() {\n+    public Class<FileSystemFileStorage> getObjectType() {\n         return FileSystemFileStorage.class;\n     }\n \n     @Override\n-    public boolean isSingleton() {\n-        return true;\n+    public FileSystemFileStorage getObject() {\n+        return fileSystemFileStorage;\n     }\n \n     private String getStoragePath(String serviceName) {\n-        if (StringUtils.isEmpty(serviceName)) {\n-            LOGGER.warn(Messages.FILE_SYSTEM_SERVICE_NAME_IS_NOT_SPECIFIED);\n+        CfService service = vcapServiceFinder.findService(serviceName);\n+        if (service == null) {\n             return null;\n         }\n-        try {\n-            CloudFactory cloudFactory = new CloudFactory();\n-            Cloud cloud = cloudFactory.getCloud();\n-            FileSystemServiceInfo serviceInfo = (FileSystemServiceInfo) cloud.getServiceInfo(serviceName);\n-            return serviceInfo.getStoragePath();\n-        } catch (CloudException e) {\n-            LOGGER.warn(MessageFormat.format(Messages.FAILED_TO_DETECT_FILE_SERVICE_STORAGE_PATH, serviceName), e);\n-        }\n-        return null;\n+        return getStoragePath(service);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private String getStoragePath(CfService service) {\n+        Map<String, Object> credentials = service.getCredentials()\n+                                                 .getMap();\n+        List<Object> volumeMounts = (List<Object>) credentials.get(\"volume_mounts\");\n+        Map<String, Object> volumeMount = (Map<String, Object>) volumeMounts.get(0);\n+        return (String) volumeMount.get(\"container_dir\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 93}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5NjYyOA==", "bodyText": "I don't know. This is unchanged code from: \n  \n    \n      multiapps-controller/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/service/FileSystemServiceInfoCreator.java\n    \n    \n         Line 31\n      in\n      4f9ad9d\n    \n    \n    \n    \n\n        \n          \n           public FileSystemServiceInfo createServiceInfo(Map<String, Object> serviceData) {", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493496628", "createdAt": "2020-09-23T11:51:58Z", "author": {"login": "nictas"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/FileSystemFileStorageFactoryBean.java", "diffHunk": "@@ -1,69 +1,60 @@\n package org.cloudfoundry.multiapps.controller.web.configuration.bean.factory;\n \n-import java.text.MessageFormat;\n+import java.util.List;\n+import java.util.Map;\n \n-import org.apache.commons.lang3.StringUtils;\n import org.cloudfoundry.multiapps.controller.persistence.services.FileSystemFileStorage;\n-import org.cloudfoundry.multiapps.controller.web.Messages;\n-import org.cloudfoundry.multiapps.controller.web.configuration.service.FileSystemServiceInfo;\n-import org.slf4j.Logger;\n-import org.slf4j.LoggerFactory;\n+import org.cloudfoundry.multiapps.controller.web.util.VcapServiceFinder;\n import org.springframework.beans.factory.FactoryBean;\n import org.springframework.beans.factory.InitializingBean;\n-import org.springframework.cloud.Cloud;\n-import org.springframework.cloud.CloudException;\n-import org.springframework.cloud.CloudFactory;\n \n-public class FileSystemFileStorageFactoryBean implements FactoryBean<FileSystemFileStorage>, InitializingBean {\n+import io.pivotal.cfenv.core.CfService;\n \n-    private static final Logger LOGGER = LoggerFactory.getLogger(FileSystemFileStorageFactoryBean.class);\n+public class FileSystemFileStorageFactoryBean implements FactoryBean<FileSystemFileStorage>, InitializingBean {\n \n     private final String serviceName;\n+    private final VcapServiceFinder vcapServiceFinder;\n     private FileSystemFileStorage fileSystemFileStorage;\n \n-    public FileSystemFileStorageFactoryBean(String serviceName) {\n+    public FileSystemFileStorageFactoryBean(String serviceName, VcapServiceFinder vcapServiceFinder) {\n         this.serviceName = serviceName;\n+        this.vcapServiceFinder = vcapServiceFinder;\n     }\n \n     @Override\n     public void afterPropertiesSet() {\n         String storagePath = getStoragePath(serviceName);\n-        this.fileSystemFileStorage = createFileSystemFileStorage(storagePath);\n-    }\n-\n-    private FileSystemFileStorage createFileSystemFileStorage(String storagePath) {\n-        return storagePath == null ? null : new FileSystemFileStorage(storagePath);\n-    }\n-\n-    @Override\n-    public FileSystemFileStorage getObject() {\n-        return fileSystemFileStorage;\n+        if (storagePath == null) {\n+            return;\n+        }\n+        this.fileSystemFileStorage = new FileSystemFileStorage(storagePath);\n     }\n \n     @Override\n-    public Class<?> getObjectType() {\n+    public Class<FileSystemFileStorage> getObjectType() {\n         return FileSystemFileStorage.class;\n     }\n \n     @Override\n-    public boolean isSingleton() {\n-        return true;\n+    public FileSystemFileStorage getObject() {\n+        return fileSystemFileStorage;\n     }\n \n     private String getStoragePath(String serviceName) {\n-        if (StringUtils.isEmpty(serviceName)) {\n-            LOGGER.warn(Messages.FILE_SYSTEM_SERVICE_NAME_IS_NOT_SPECIFIED);\n+        CfService service = vcapServiceFinder.findService(serviceName);\n+        if (service == null) {\n             return null;\n         }\n-        try {\n-            CloudFactory cloudFactory = new CloudFactory();\n-            Cloud cloud = cloudFactory.getCloud();\n-            FileSystemServiceInfo serviceInfo = (FileSystemServiceInfo) cloud.getServiceInfo(serviceName);\n-            return serviceInfo.getStoragePath();\n-        } catch (CloudException e) {\n-            LOGGER.warn(MessageFormat.format(Messages.FAILED_TO_DETECT_FILE_SERVICE_STORAGE_PATH, serviceName), e);\n-        }\n-        return null;\n+        return getStoragePath(service);\n+    }\n+\n+    @SuppressWarnings(\"unchecked\")\n+    private String getStoragePath(CfService service) {\n+        Map<String, Object> credentials = service.getCredentials()\n+                                                 .getMap();\n+        List<Object> volumeMounts = (List<Object>) credentials.get(\"volume_mounts\");\n+        Map<String, Object> volumeMount = (Map<String, Object>) volumeMounts.get(0);\n+        return (String) volumeMount.get(\"container_dir\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQzNzM3NA=="}, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 93}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODE5NDI5OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/ObjectStoreFileStorageFactoryBean.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0NzoxOVrOHWlOrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo0NzoxOVrOHWlOrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0MDY4NQ==", "bodyText": "You can remove this method like other FactoryBean implementation classes. I saw that default implementation of this method always return true.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493440685", "createdAt": "2020-09-23T10:47:19Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/ObjectStoreFileStorageFactoryBean.java", "diffHunk": "@@ -85,4 +69,5 @@ public ObjectStoreFileStorage getObject() {\n     public boolean isSingleton() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODIyNjY2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/util/VcapServiceFinder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMDo1MzozM1rOHWlkbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTo1NDo0M1rOHWoznA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NjI1Mw==", "bodyText": "Is it expected to pass null or empty String?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493446253", "createdAt": "2020-09-23T10:53:33Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/util/VcapServiceFinder.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.cloudfoundry.multiapps.controller.web.util;\n+\n+import javax.inject.Named;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.util.CollectionUtils;\n+\n+import io.pivotal.cfenv.core.CfService;\n+import io.pivotal.cfenv.jdbc.CfJdbcEnv;\n+import io.pivotal.cfenv.jdbc.CfJdbcService;\n+\n+@Named\n+public class VcapServiceFinder {\n+\n+    private final CfJdbcEnv env = new CfJdbcEnv();\n+\n+    public CfJdbcService findJdbcService(String name) {\n+        if (StringUtils.isEmpty(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ5OTI5Mg==", "bodyText": "No idea. Same code as in: \n  \n    \n      multiapps-controller/multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/CloudDataSourceFactoryBean.java\n    \n    \n         Line 59\n      in\n      4f9ad9d\n    \n    \n    \n    \n\n        \n          \n           if (serviceName != null && !serviceName.isEmpty()) { \n        \n    \n  \n\n\nMy goal was to change as little as possible.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493499292", "createdAt": "2020-09-23T11:54:43Z", "author": {"login": "nictas"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/util/VcapServiceFinder.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.cloudfoundry.multiapps.controller.web.util;\n+\n+import javax.inject.Named;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.util.CollectionUtils;\n+\n+import io.pivotal.cfenv.core.CfService;\n+import io.pivotal.cfenv.jdbc.CfJdbcEnv;\n+import io.pivotal.cfenv.jdbc.CfJdbcService;\n+\n+@Named\n+public class VcapServiceFinder {\n+\n+    private final CfJdbcEnv env = new CfJdbcEnv();\n+\n+    public CfJdbcService findJdbcService(String name) {\n+        if (StringUtils.isEmpty(name)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ0NjI1Mw=="}, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODI2MTcwOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTowMDoyMVrOHWl7vQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTowMDoyMVrOHWl7vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ1MjIyMQ==", "bodyText": "There exists newer versions for java 8 and 11 https://github.com/brettwooldridge/HikariCP", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493452221", "createdAt": "2020-09-23T11:00:21Z", "author": {"login": "theghost5800"}, "path": "pom.xml", "diffHunk": "@@ -37,7 +37,7 @@\n         <spring-security.version>5.3.4.RELEASE</spring-security.version>\n         <spring-security-oauth2.version>2.5.0.RELEASE</spring-security-oauth2.version>\n         <spring-security-jwt.version>1.1.1.RELEASE</spring-security-jwt.version>\n-        <spring-cloud.version>2.0.7.RELEASE</spring-cloud.version>\n+        <hikari.version>2.4.13</hikari.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4ODI2MzU1OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/util/VcapServiceFinder.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTowMDo0M1rOHWl8-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMTowMDo0M1rOHWl8-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzQ1MjUzNg==", "bodyText": "Same comment", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493452536", "createdAt": "2020-09-23T11:00:43Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/util/VcapServiceFinder.java", "diffHunk": "@@ -0,0 +1,39 @@\n+package org.cloudfoundry.multiapps.controller.web.util;\n+\n+import javax.inject.Named;\n+\n+import org.apache.commons.lang3.StringUtils;\n+import org.springframework.util.CollectionUtils;\n+\n+import io.pivotal.cfenv.core.CfService;\n+import io.pivotal.cfenv.jdbc.CfJdbcEnv;\n+import io.pivotal.cfenv.jdbc.CfJdbcService;\n+\n+@Named\n+public class VcapServiceFinder {\n+\n+    private final CfJdbcEnv env = new CfJdbcEnv();\n+\n+    public CfJdbcService findJdbcService(String name) {\n+        if (StringUtils.isEmpty(name)) {\n+            return null;\n+        }\n+        try {\n+            return env.findJdbcServiceByName(name);\n+        } catch (IllegalArgumentException e) { // Thrown when there are 0 or more matches for the specified name.\n+            return null;\n+        }\n+    }\n+\n+    public CfService findService(String name) {\n+        if (StringUtils.isEmpty(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad318cbd6ed134231f0b2fc6400b59803afde9e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTI3Mjk5OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/DataSourceFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1OTozOVrOHWv8ug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzo1OTozOVrOHWv8ug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxNjMxNA==", "bodyText": "Shouldn't this be annotated with @Inject ?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493616314", "createdAt": "2020-09-23T13:59:39Z", "author": {"login": "radito3"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/bean/factory/DataSourceFactory.java", "diffHunk": "@@ -0,0 +1,35 @@\n+package org.cloudfoundry.multiapps.controller.web.configuration.bean.factory;\n+\n+import javax.inject.Named;\n+\n+import org.cloudfoundry.multiapps.controller.core.util.ApplicationConfiguration;\n+\n+import com.zaxxer.hikari.HikariConfig;\n+import com.zaxxer.hikari.HikariDataSource;\n+\n+import io.pivotal.cfenv.jdbc.CfJdbcService;\n+\n+@Named\n+public class DataSourceFactory {\n+\n+    private final ApplicationConfiguration configuration;\n+\n+    public DataSourceFactory(ApplicationConfiguration configuration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee2adec57dda4a55714629e963bf719b1664496"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4OTI3OTM3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/service/ObjectStoreServiceInfo.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDowMDo1NVrOHWwA0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxNDowMDo1NVrOHWwA0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYxNzM2MQ==", "bodyText": "Nice", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/953#discussion_r493617361", "createdAt": "2020-09-23T14:00:55Z", "author": {"login": "radito3"}, "path": "multiapps-controller-web/src/main/java/org/cloudfoundry/multiapps/controller/web/configuration/service/ObjectStoreServiceInfo.java", "diffHunk": "@@ -1,103 +1,23 @@\n package org.cloudfoundry.multiapps.controller.web.configuration.service;\n \n-import org.springframework.cloud.service.BaseServiceInfo;\n-import org.springframework.cloud.service.ServiceInfo.ServiceLabel;\n+import org.cloudfoundry.multiapps.common.Nullable;\n+import org.immutables.value.Value;\n \n-@ServiceLabel(\"objectstore\")\n-public class ObjectStoreServiceInfo extends BaseServiceInfo {\n+@Value.Immutable", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ee2adec57dda4a55714629e963bf719b1664496"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 422, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}