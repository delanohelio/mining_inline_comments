{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEyOTI1MzA2", "number": 982, "reviewThreads": {"totalCount": 31, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDozMzozMFrOEz0b-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1NzowM1rOE1IMHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzcxOTYxOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDozMzozMFrOHrRvTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODowMDo1MVrOHs6eLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MTQ1Mg==", "bodyText": "If we have complex and well defined equals of CloudRouteSummary, it could be possible to use native set addAll()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515141452", "createdAt": "2020-10-30T14:33:30Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "diffHunk": "@@ -45,19 +46,28 @@ private Object getPropertyValue(List<Map<String, Object>> propertiesList, String\n         return PropertiesUtil.getPropertyValue(propertiesList, propertyName, defaultValue);\n     }\n \n-    private List<String> appendExistingUris(List<String> uris, DeployedMtaApplication deployedMtaApplication) {\n-        Set<String> result = new HashSet<>(uris);\n-        if (deployedMtaApplication != null) {\n-            result.addAll(deployedMtaApplication.getUris());\n+    private Set<CloudRouteSummary> addExistingRoutes(Set<CloudRouteSummary> routes, DeployedMtaApplication deployedMtaApplication) {\n+        if (deployedMtaApplication == null) {\n+            return routes;\n+        }\n+\n+        Set<CloudRouteSummary> combinedRoutes = new HashSet<>(deployedMtaApplication.getRoutes());\n+        for (CloudRouteSummary newRoute : routes) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg0MDAzMg==", "bodyText": "+1", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515840032", "createdAt": "2020-11-02T09:28:54Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "diffHunk": "@@ -45,19 +46,28 @@ private Object getPropertyValue(List<Map<String, Object>> propertiesList, String\n         return PropertiesUtil.getPropertyValue(propertiesList, propertyName, defaultValue);\n     }\n \n-    private List<String> appendExistingUris(List<String> uris, DeployedMtaApplication deployedMtaApplication) {\n-        Set<String> result = new HashSet<>(uris);\n-        if (deployedMtaApplication != null) {\n-            result.addAll(deployedMtaApplication.getUris());\n+    private Set<CloudRouteSummary> addExistingRoutes(Set<CloudRouteSummary> routes, DeployedMtaApplication deployedMtaApplication) {\n+        if (deployedMtaApplication == null) {\n+            return routes;\n+        }\n+\n+        Set<CloudRouteSummary> combinedRoutes = new HashSet<>(deployedMtaApplication.getRoutes());\n+        for (CloudRouteSummary newRoute : routes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MTQ1Mg=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1NzM4OA==", "bodyText": "done", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516857388", "createdAt": "2020-11-03T18:00:51Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "diffHunk": "@@ -45,19 +46,28 @@ private Object getPropertyValue(List<Map<String, Object>> propertiesList, String\n         return PropertiesUtil.getPropertyValue(propertiesList, propertyName, defaultValue);\n     }\n \n-    private List<String> appendExistingUris(List<String> uris, DeployedMtaApplication deployedMtaApplication) {\n-        Set<String> result = new HashSet<>(uris);\n-        if (deployedMtaApplication != null) {\n-            result.addAll(deployedMtaApplication.getUris());\n+    private Set<CloudRouteSummary> addExistingRoutes(Set<CloudRouteSummary> routes, DeployedMtaApplication deployedMtaApplication) {\n+        if (deployedMtaApplication == null) {\n+            return routes;\n+        }\n+\n+        Set<CloudRouteSummary> combinedRoutes = new HashSet<>(deployedMtaApplication.getRoutes());\n+        for (CloudRouteSummary newRoute : routes) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0MTQ1Mg=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzczNjQ0OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/IdleUriParametersParser.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDozNzoyOVrOHrR5ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODowMToxN1rOHs6fHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0NDA3NA==", "bodyText": "Is that a leftover?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515144074", "createdAt": "2020-10-30T14:37:29Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/IdleUriParametersParser.java", "diffHunk": "@@ -24,51 +28,63 @@ public IdleUriParametersParser(String defaultHost, String defaultDomain, String\n     }\n \n     @Override\n-    public List<String> getApplicationRoutes(List<Map<String, Object>> parametersList) {\n-        List<String> idleRoutes = getIdleRoutes(parametersList);\n+    public Set<CloudRouteSummary> getApplicationRoutes(List<Map<String, Object>> parametersList) {\n+        Set<CloudRouteSummary> idleRoutes = getIdleRoutes(parametersList);\n         if (!idleRoutes.isEmpty()) {\n             return idleRoutes;\n         }\n \n-        List<String> liveRoutes = super.getApplicationRoutes(parametersList);\n+        Set<CloudRouteSummary> liveRoutes = super.getApplicationRoutes(parametersList);\n         if (!liveRoutes.isEmpty()) {\n             return modifyLiveRoutes(liveRoutes);\n         }\n-        return Collections.emptyList();\n+        return Collections.emptySet();\n     }\n \n-    private List<String> getIdleRoutes(List<Map<String, Object>> parametersList) {\n+    private Set<CloudRouteSummary> getIdleRoutes(List<Map<String, Object>> parametersList) {\n         List<Map<String, Object>> idleRoutesMaps = RoutesValidator.applyRoutesType(PropertiesUtil.getPropertyValue(parametersList,\n                                                                                                                    SupportedParameters.IDLE_ROUTES,\n                                                                                                                    null));\n         return idleRoutesMaps.stream()\n-                             .map(routesMap -> (String) routesMap.get(SupportedParameters.IDLE_ROUTE))\n+                             .map(this::parseIdleRouteMap)\n                              .filter(Objects::nonNull)\n-                             .map(UriUtil::stripScheme)\n-                             .collect(Collectors.toList());\n+                             .collect(Collectors.toSet());\n \n     }\n \n-    private List<String> modifyLiveRoutes(List<String> liveRoutes) {\n-        return liveRoutes.stream()\n-                         .map(this::modifyUri)\n-                         .collect(Collectors.toList());\n+    public CloudRouteSummary parseIdleRouteMap(Map<String, Object> routeMap) {\n+        String routeString = (String) routeMap.get(SupportedParameters.IDLE_ROUTE);\n+        boolean noHostname = MapUtil.parseBooleanFlag(routeMap, SupportedParameters.NO_HOSTNAME, false);\n+\n+        if (routeString == null) {\n+            return null;\n+        }\n+\n+        return new ApplicationURI(routeString, noHostname).toCloudRouteSummary();\n     }\n \n-    private String modifyUri(String inputURI) {\n-        ApplicationURI modifiedURI = new ApplicationURI(inputURI);\n+    private Set<CloudRouteSummary> modifyLiveRoutes(Set<CloudRouteSummary> liveRoutes) {\n+        return liveRoutes.stream()\n+                         .map(this::modifyRoute)\n+                         .collect(Collectors.toSet());\n+    }\n \n+    private CloudRouteSummary modifyRoute(CloudRouteSummary inputRoute) {\n+        ImmutableCloudRouteSummary.Builder modifiedRouteBuilder = ImmutableCloudRouteSummary.builder()\n+                                                                                            .from(inputRoute);\n         String defaultDomain = getDefaultDomain();\n         String defaultHost = getDefaultHost();\n \n         if (defaultDomain != null) {\n-            modifiedURI.setDomain(defaultDomain);\n+            modifiedRouteBuilder.domain(defaultDomain);\n         }\n \n         if (defaultHost != null) {\n-            modifiedURI.setHost(defaultHost);\n+            modifiedRouteBuilder.host(defaultHost);\n+        } else if (inputRoute.getHost() == null) {\n+            // TODO: must handle this weird case", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg1NzYzMQ==", "bodyText": "yes, upon investigation, this case shouldn't be an issue", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516857631", "createdAt": "2020-11-03T18:01:17Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/IdleUriParametersParser.java", "diffHunk": "@@ -24,51 +28,63 @@ public IdleUriParametersParser(String defaultHost, String defaultDomain, String\n     }\n \n     @Override\n-    public List<String> getApplicationRoutes(List<Map<String, Object>> parametersList) {\n-        List<String> idleRoutes = getIdleRoutes(parametersList);\n+    public Set<CloudRouteSummary> getApplicationRoutes(List<Map<String, Object>> parametersList) {\n+        Set<CloudRouteSummary> idleRoutes = getIdleRoutes(parametersList);\n         if (!idleRoutes.isEmpty()) {\n             return idleRoutes;\n         }\n \n-        List<String> liveRoutes = super.getApplicationRoutes(parametersList);\n+        Set<CloudRouteSummary> liveRoutes = super.getApplicationRoutes(parametersList);\n         if (!liveRoutes.isEmpty()) {\n             return modifyLiveRoutes(liveRoutes);\n         }\n-        return Collections.emptyList();\n+        return Collections.emptySet();\n     }\n \n-    private List<String> getIdleRoutes(List<Map<String, Object>> parametersList) {\n+    private Set<CloudRouteSummary> getIdleRoutes(List<Map<String, Object>> parametersList) {\n         List<Map<String, Object>> idleRoutesMaps = RoutesValidator.applyRoutesType(PropertiesUtil.getPropertyValue(parametersList,\n                                                                                                                    SupportedParameters.IDLE_ROUTES,\n                                                                                                                    null));\n         return idleRoutesMaps.stream()\n-                             .map(routesMap -> (String) routesMap.get(SupportedParameters.IDLE_ROUTE))\n+                             .map(this::parseIdleRouteMap)\n                              .filter(Objects::nonNull)\n-                             .map(UriUtil::stripScheme)\n-                             .collect(Collectors.toList());\n+                             .collect(Collectors.toSet());\n \n     }\n \n-    private List<String> modifyLiveRoutes(List<String> liveRoutes) {\n-        return liveRoutes.stream()\n-                         .map(this::modifyUri)\n-                         .collect(Collectors.toList());\n+    public CloudRouteSummary parseIdleRouteMap(Map<String, Object> routeMap) {\n+        String routeString = (String) routeMap.get(SupportedParameters.IDLE_ROUTE);\n+        boolean noHostname = MapUtil.parseBooleanFlag(routeMap, SupportedParameters.NO_HOSTNAME, false);\n+\n+        if (routeString == null) {\n+            return null;\n+        }\n+\n+        return new ApplicationURI(routeString, noHostname).toCloudRouteSummary();\n     }\n \n-    private String modifyUri(String inputURI) {\n-        ApplicationURI modifiedURI = new ApplicationURI(inputURI);\n+    private Set<CloudRouteSummary> modifyLiveRoutes(Set<CloudRouteSummary> liveRoutes) {\n+        return liveRoutes.stream()\n+                         .map(this::modifyRoute)\n+                         .collect(Collectors.toSet());\n+    }\n \n+    private CloudRouteSummary modifyRoute(CloudRouteSummary inputRoute) {\n+        ImmutableCloudRouteSummary.Builder modifiedRouteBuilder = ImmutableCloudRouteSummary.builder()\n+                                                                                            .from(inputRoute);\n         String defaultDomain = getDefaultDomain();\n         String defaultHost = getDefaultHost();\n \n         if (defaultDomain != null) {\n-            modifiedURI.setDomain(defaultDomain);\n+            modifiedRouteBuilder.domain(defaultDomain);\n         }\n \n         if (defaultHost != null) {\n-            modifiedURI.setHost(defaultHost);\n+            modifiedRouteBuilder.host(defaultHost);\n+        } else if (inputRoute.getHost() == null) {\n+            // TODO: must handle this weird case", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0NDA3NA=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 91}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzc2MTQ2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0MzozMFrOHrSJYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0MzozMFrOHrSJYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE0ODEyOA==", "bodyText": "Can we make it on one line", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515148128", "createdAt": "2020-10-30T14:43:30Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "diffHunk": "@@ -33,20 +33,24 @@ public UriParametersParser(String defaultHost, String defaultDomain, String host\n         this.defaultDomain = defaultDomain;\n         this.hostParameterName = hostParameterName;\n         this.domainParameterName = domainParameterName;\n-        this.routePath = routePath;\n+        if (routePath != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzc4MTQzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/TestData.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0ODoxOVrOHrSV9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo0ODoxOVrOHrSV9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1MTM0OQ==", "bodyText": "Why this is called TestDataUtil but file TestData.java", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515151349", "createdAt": "2020-10-30T14:48:19Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/TestData.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.cloudfoundry.multiapps.controller.core.parser;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+\n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n+import com.sap.cloudfoundry.client.facade.domain.ImmutableCloudRouteSummary;\n+\n+public class TestDataUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzgwMjA2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteApplicationRoutesStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1MTo0OFrOHrSjLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODoyMjo1NVrOHs7ObA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NDczMg==", "bodyText": "The class also has toString()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515154732", "createdAt": "2020-10-30T14:51:48Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteApplicationRoutesStep.java", "diffHunk": "@@ -57,20 +58,20 @@ protected ApplicationRoutesGetter getApplicationRoutesGetter(CloudControllerClie\n         return new ApplicationRoutesGetter(client);\n     }\n \n-    private void deleteApplicationRoutes(CloudControllerClient client, List<CloudRoute> routes, String uri) {\n+    private void deleteApplicationRoutes(CloudControllerClient client, List<CloudRoute> routes, CloudRouteSummary routeSummary) {\n         try {\n-            CloudRoute route = UriUtil.findRoute(routes, uri);\n+            CloudRoute route = UriUtil.matchRoute(routes, routeSummary);\n             if (route.getAppsUsingRoute() > 1 || route.hasServiceUsingRoute()) {\n-                getStepLogger().warn(Messages.ROUTE_NOT_DELETED, uri);\n+                getStepLogger().warn(Messages.ROUTE_NOT_DELETED, routeSummary.toUriString());\n                 return;\n             }\n         } catch (NotFoundException e) {\n-            getStepLogger().debug(org.cloudfoundry.multiapps.controller.core.Messages.ROUTE_NOT_FOUND, uri);\n+            getStepLogger().debug(org.cloudfoundry.multiapps.controller.core.Messages.ROUTE_NOT_FOUND, routeSummary.toUriString());\n             return;\n         }\n-        getStepLogger().info(Messages.DELETING_ROUTE, uri);\n-        new ClientHelper(client).deleteRoute(uri);\n-        getStepLogger().debug(Messages.ROUTE_DELETED, uri);\n+        getStepLogger().info(Messages.DELETING_ROUTE, routeSummary.toUriString());\n+        new ClientHelper(client).deleteRoute(routeSummary);\n+        getStepLogger().debug(Messages.ROUTE_DELETED, routeSummary.toUriString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2OTc0MA==", "bodyText": "used the longer method name for clarity", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516869740", "createdAt": "2020-11-03T18:22:55Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteApplicationRoutesStep.java", "diffHunk": "@@ -57,20 +58,20 @@ protected ApplicationRoutesGetter getApplicationRoutesGetter(CloudControllerClie\n         return new ApplicationRoutesGetter(client);\n     }\n \n-    private void deleteApplicationRoutes(CloudControllerClient client, List<CloudRoute> routes, String uri) {\n+    private void deleteApplicationRoutes(CloudControllerClient client, List<CloudRoute> routes, CloudRouteSummary routeSummary) {\n         try {\n-            CloudRoute route = UriUtil.findRoute(routes, uri);\n+            CloudRoute route = UriUtil.matchRoute(routes, routeSummary);\n             if (route.getAppsUsingRoute() > 1 || route.hasServiceUsingRoute()) {\n-                getStepLogger().warn(Messages.ROUTE_NOT_DELETED, uri);\n+                getStepLogger().warn(Messages.ROUTE_NOT_DELETED, routeSummary.toUriString());\n                 return;\n             }\n         } catch (NotFoundException e) {\n-            getStepLogger().debug(org.cloudfoundry.multiapps.controller.core.Messages.ROUTE_NOT_FOUND, uri);\n+            getStepLogger().debug(org.cloudfoundry.multiapps.controller.core.Messages.ROUTE_NOT_FOUND, routeSummary.toUriString());\n             return;\n         }\n-        getStepLogger().info(Messages.DELETING_ROUTE, uri);\n-        new ClientHelper(client).deleteRoute(uri);\n-        getStepLogger().debug(Messages.ROUTE_DELETED, uri);\n+        getStepLogger().info(Messages.DELETING_ROUTE, routeSummary.toUriString());\n+        new ClientHelper(client).deleteRoute(routeSummary);\n+        getStepLogger().debug(Messages.ROUTE_DELETED, routeSummary.toUriString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NDczMg=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzgxMDMwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1Mjo1MlrOHrSo4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNzoxNToyMlrOHtLfUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NjE5Mg==", "bodyText": "It is ok to send null or empty since it is not used.\nProbably this was the reason for passing null before.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515156192", "createdAt": "2020-10-30T14:52:52Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "diffHunk": "@@ -22,7 +22,7 @@ public String attemptToCorrect(Object routePart, final Map<String, Object> conte\n         result = result.replaceAll(\"^(-*)\", \"\");\n         result = result.replaceAll(\"(-*)$\", \"\");\n \n-        if (!isValid(result, null)) {\n+        if (!isValid(result, context)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg2OTYwMw==", "bodyText": "changed it to pass the context since Kris required that as well for his changes", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516869603", "createdAt": "2020-11-03T18:22:39Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "diffHunk": "@@ -22,7 +22,7 @@ public String attemptToCorrect(Object routePart, final Map<String, Object> conte\n         result = result.replaceAll(\"^(-*)\", \"\");\n         result = result.replaceAll(\"(-*)$\", \"\");\n \n-        if (!isValid(result, null)) {\n+        if (!isValid(result, context)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NjE5Mg=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEzNjIxMQ==", "bodyText": "Good", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r517136211", "createdAt": "2020-11-04T07:15:22Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutePartValidator.java", "diffHunk": "@@ -22,7 +22,7 @@ public String attemptToCorrect(Object routePart, final Map<String, Object> conte\n         result = result.replaceAll(\"^(-*)\", \"\");\n         result = result.replaceAll(\"(-*)$\", \"\");\n \n-        if (!isValid(result, null)) {\n+        if (!isValid(result, context)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE1NjE5Mg=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg0MzA2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1OToyMlrOHrS-mA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNDo1OToyMlrOHrS-mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MTc1Mg==", "bodyText": "Use directly Set.of()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515161752", "createdAt": "2020-10-30T14:59:22Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -17,11 +19,15 @@\n public class RoutesValidator implements ParameterValidator {\n \n     private final Map<String, ParameterValidator> validators;\n+    private final Set<String> supportedParamsWithoutValidators;\n \n     public RoutesValidator() {\n         this.validators = new HashMap<>();\n         ParameterValidator routeValidator = new RouteValidator();\n         this.validators.put(routeValidator.getParameterName(), routeValidator);\n+\n+        this.supportedParamsWithoutValidators = new TreeSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg0NjEzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowMDowMlrOHrTAdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODoyMzo1NFrOHs7Qkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MjIyOA==", "bodyText": "I think context should be renamed to routesElement because this is a private function dedicated only for this use case where we pass route entry and routesElement. However, this is my personal perception becai", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515162228", "createdAt": "2020-10-30T15:00:02Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -45,9 +51,17 @@ public boolean isValid(Object routes, final Map<String, Object> context) {\n         return true;\n     }\n \n-    private boolean isElementUnsupportedOrInvalid(Entry<String, Object> entry) {\n-        ParameterValidator validator = validators.get(entry.getKey());\n-        return validator == null || !validator.isValid(entry.getValue(), null);\n+    private boolean isElementUnsupportedOrInvalid(Entry<String, Object> entry, final Map<String, Object> context) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3MDI5MA==", "bodyText": "Changed the names, the previous ones were too generic, I agree", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516870290", "createdAt": "2020-11-03T18:23:54Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RoutesValidator.java", "diffHunk": "@@ -45,9 +51,17 @@ public boolean isValid(Object routes, final Map<String, Object> context) {\n         return true;\n     }\n \n-    private boolean isElementUnsupportedOrInvalid(Entry<String, Object> entry) {\n-        ParameterValidator validator = validators.get(entry.getKey());\n-        return validator == null || !validator.isValid(entry.getValue(), null);\n+    private boolean isElementUnsupportedOrInvalid(Entry<String, Object> entry, final Map<String, Object> context) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2MjIyOA=="}, "originalCommit": {"oid": "2b61c57eb34579768b4c545aeed19d44085fd30d"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg2MzIzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/resources/mta/devxwebide/xs2-apps.json", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowNDoxN1rOHrTLVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwNzoxNDo0NVrOHtLeXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2NTAxMw==", "bodyText": "If it is not too mu effort remove theses internal entities like sofd60245639a and i users", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515165013", "createdAt": "2020-10-30T15:04:17Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/test/resources/mta/devxwebide/xs2-apps.json", "diffHunk": "@@ -20,8 +20,12 @@\n     \"staging\": {\n       \"buildpacks\": []\n     },\n-    \"uris\": [\n-      \"webide.sofd60245639a\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"sofd60245639a\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3MDg1MA==", "bodyText": "this should probably be a separate task, as we have a lot of json test files with these, I think", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516870850", "createdAt": "2020-11-03T18:24:53Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/test/resources/mta/devxwebide/xs2-apps.json", "diffHunk": "@@ -20,8 +20,12 @@\n     \"staging\": {\n       \"buildpacks\": []\n     },\n-    \"uris\": [\n-      \"webide.sofd60245639a\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"sofd60245639a\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2NTAxMw=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzEzNTk2NA==", "bodyText": "Good", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r517135964", "createdAt": "2020-11-04T07:14:45Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/test/resources/mta/devxwebide/xs2-apps.json", "diffHunk": "@@ -20,8 +20,12 @@\n     \"staging\": {\n       \"buildpacks\": []\n     },\n-    \"uris\": [\n-      \"webide.sofd60245639a\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"sofd60245639a\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2NTAxMw=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNzg3NjMzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowNzo0MlrOHrTTyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNTowNzo0MlrOHrTTyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTE2NzE3Nw==", "bodyText": "can you add some short description for each test", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515167177", "createdAt": "2020-10-30T15:07:42Z", "author": {"login": "boyan-velinov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "diffHunk": "@@ -19,36 +25,58 @@\n     static Stream<Arguments> getParameters() {\n         return Stream.of(\n // @formatter:off\n-            // [0]\n-            Arguments.of(\"valid-host.domain\", true, \"valid-host.domain\", null),\n             // [1]\n-            Arguments.of(\"should_correct$this$host.domain\", false, \"should-correct-this-host.domain\", null),\n+            Arguments.of(\"valid-host.domain\", null, true, \"valid-host.domain\", null),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjcwOTMyOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToyNjo0N1rOHr8TMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQwOToyNjo0N1rOHr8TMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTgzODc2OA==", "bodyText": "getUriParametersParser should be renamed to routeParameterParser", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515838768", "createdAt": "2020-11-02T09:26:47Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/cf/v2/ApplicationRoutesCloudModelBuilder.java", "diffHunk": "@@ -16,27 +15,29 @@\n import org.cloudfoundry.multiapps.mta.model.Module;\n import org.cloudfoundry.multiapps.mta.util.PropertiesUtil;\n \n-public class ApplicationUrisCloudModelBuilder {\n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n+\n+public class ApplicationRoutesCloudModelBuilder {\n \n     private final DeploymentDescriptor descriptor;\n     private final CloudApplicationExtended.AttributeUpdateStrategy applicationAttributeUpdateStrategy;\n \n-    public ApplicationUrisCloudModelBuilder(DeploymentDescriptor descriptor,\n-                                            CloudApplicationExtended.AttributeUpdateStrategy applicationAttributeUpdateStrategy) {\n+    public ApplicationRoutesCloudModelBuilder(DeploymentDescriptor descriptor,\n+                                              CloudApplicationExtended.AttributeUpdateStrategy applicationAttributeUpdateStrategy) {\n         this.descriptor = descriptor;\n         this.applicationAttributeUpdateStrategy = applicationAttributeUpdateStrategy;\n     }\n \n-    public List<String> getApplicationUris(Module module, List<Map<String, Object>> propertiesList,\n-                                           DeployedMtaApplication deployedApplication) {\n-        List<String> uris = getUriParametersParser(module).parse(propertiesList);\n-        if (shouldKeepExistingUris(propertiesList)) {\n-            return appendExistingUris(uris, deployedApplication);\n+    public Set<CloudRouteSummary> getApplicationRoutes(Module module, List<Map<String, Object>> propertiesList,\n+                                                       DeployedMtaApplication deployedApplication) {\n+        Set<CloudRouteSummary> routes = getUriParametersParser(module).parse(propertiesList);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjg3NjY4OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDowOTozOFrOHr94BQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDowOTozOFrOHr94BQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg2NDU4MQ==", "bodyText": "I think now this class should be renamed to RouteParameterParser", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515864581", "createdAt": "2020-11-02T10:09:38Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "diffHunk": "@@ -9,13 +8,14 @@\n import java.util.Set;\n import java.util.stream.Collectors;\n \n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n+import org.cloudfoundry.multiapps.common.util.MapUtil;\n import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n import org.cloudfoundry.multiapps.controller.core.util.ApplicationURI;\n-import org.cloudfoundry.multiapps.controller.core.util.UriUtil;\n import org.cloudfoundry.multiapps.controller.core.validators.parameters.RoutesValidator;\n import org.cloudfoundry.multiapps.mta.util.PropertiesUtil;\n \n-public class UriParametersParser implements ParametersParser<List<String>> {\n+public class UriParametersParser implements ParametersParser<Set<CloudRouteSummary>> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjkxOTgxOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoxOTo1N1rOHr-RCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDoxOTo1N1rOHr-RCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3MDk4NA==", "bodyText": "You can add that set of assembled routes is returned", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515870984", "createdAt": "2020-11-02T10:19:57Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "diffHunk": "@@ -94,40 +98,57 @@ public UriParametersParser(String defaultHost, String defaultDomain, String host\n         return domains;\n     }\n \n-    private List<String> assembleUris(List<String> hosts, List<String> domains) {\n-        Set<String> uris = new LinkedHashSet<>();\n+    /**\n+     * This method is doing a DesCartesian multiplication for given hosts and domains and returns constructed routes\n+     * \n+     * @param hosts\n+     * @param domains\n+     * @return", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMjk2NTg5OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDozMTozM1rOHr-sfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMDozMTozM1rOHr-sfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTg3ODAxMw==", "bodyText": "Rename uris to routes", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515878013", "createdAt": "2020-11-02T10:31:33Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/UriParametersParser.java", "diffHunk": "@@ -94,40 +98,57 @@ public UriParametersParser(String defaultHost, String defaultDomain, String host\n         return domains;\n     }\n \n-    private List<String> assembleUris(List<String> hosts, List<String> domains) {\n-        Set<String> uris = new LinkedHashSet<>();\n+    /**\n+     * This method is doing a DesCartesian multiplication for given hosts and domains and returns constructed routes\n+     * \n+     * @param hosts\n+     * @param domains\n+     * @return\n+     */\n+    private Set<CloudRouteSummary> assembleRoutes(List<String> hosts, List<String> domains) {\n+        Set<CloudRouteSummary> routes = new LinkedHashSet<>();\n         for (String domain : domains) {\n             if (!hosts.isEmpty()) {\n-                addHostBasedUris(uris, domain, hosts);\n+                addHostBasedRoutes(routes, domain, hosts);\n             } else {\n-                uris.add(appendRoutePathIfPresent(domain));\n+                routes.add(buildCloudPathSummary(\"\", domain));\n             }\n         }\n \n-        return new ArrayList<>(uris);\n+        return routes;\n     }\n \n-    private void addHostBasedUris(Set<String> uris, String domain, List<String> hosts) {\n+    private void addHostBasedRoutes(Set<CloudRouteSummary> uris, String domain, List<String> hosts) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzI0OTI3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMTo1MjoyNFrOHsBU9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozODoxMlrOHs7uXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyMTE0Mw==", "bodyText": "Is it exist case when passed argument will be null?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515921143", "createdAt": "2020-11-02T11:52:24Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "diffHunk": "@@ -41,21 +41,26 @@ public ApplicationURI(String initial) {\n         }\n     }\n \n-    public ApplicationURI(CloudRoute route) {\n-        if (route == null) {\n+    public ApplicationURI(CloudRouteSummary routeSummary) {\n+        if (routeSummary == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NzkxOQ==", "bodyText": "this constructor as is is only used in tests; I don't really want to restrict it's use by removing the null value check though", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516877919", "createdAt": "2020-11-03T18:38:12Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "diffHunk": "@@ -41,21 +41,26 @@ public ApplicationURI(String initial) {\n         }\n     }\n \n-    public ApplicationURI(CloudRoute route) {\n-        if (route == null) {\n+    public ApplicationURI(CloudRouteSummary routeSummary) {\n+        if (routeSummary == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyMTE0Mw=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzI5NjUwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjowNzo0MFrOHsBw9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozNDowOFrOHs7l5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyODMwOQ==", "bodyText": "Did we previously support routes with port in CF?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515928309", "createdAt": "2020-11-02T12:07:40Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "diffHunk": "@@ -104,6 +114,15 @@ public void setURIPart(String partName, String part) {\n         }\n     }\n \n+    public CloudRouteSummary toCloudRouteSummary() {\n+        return ImmutableCloudRouteSummary.builder()\n+                                         .host(getHost())\n+                                         .domain(getDomain())\n+                                         .path(getPath())\n+                                         .port(null)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3NTc1MQ==", "bodyText": "yes, but have since removed it from the source; setting it to null here as the apps/summary response does contain a null port", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516875751", "createdAt": "2020-11-03T18:34:08Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "diffHunk": "@@ -104,6 +114,15 @@ public void setURIPart(String partName, String part) {\n         }\n     }\n \n+    public CloudRouteSummary toCloudRouteSummary() {\n+        return ImmutableCloudRouteSummary.builder()\n+                                         .host(getHost())\n+                                         .domain(getDomain())\n+                                         .path(getPath())\n+                                         .port(null)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyODMwOQ=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzMwMjMzOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjowOTo0MlrOHsB0hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjowOTo0MlrOHsB0hQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkyOTIyMQ==", "bodyText": "I think this method should be use private access modifier", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515929221", "createdAt": "2020-11-02T12:09:42Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURI.java", "diffHunk": "@@ -146,6 +165,12 @@ public void setPath(String path) {\n         this.path = path;\n     }\n \n+    public void setParts(String host, String domain, String path) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 124}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzM2NTE3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/cf/v2/CloudModelBuilderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjozMDo1MVrOHsCZ-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODozOTowNlrOHs7wQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzODgxMQ==", "bodyText": "Is it used the right code formatter for this class?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515938811", "createdAt": "2020-11-02T12:30:51Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/cf/v2/CloudModelBuilderTest.java", "diffHunk": "@@ -44,567 +44,562 @@\n \n public class CloudModelBuilderTest {\n \n-    protected static final String DEFAULT_DOMAIN_CF = \"cfapps.neo.ondemand.com\";\n-    protected static final String DEFAULT_DOMAIN_XS = \"sofd60245639a\";\n-    protected static final AppSuffixDeterminer DEFAULT_APP_SUFFIX_DETERMINER = new AppSuffixDeterminer(false, false);\n-\n-    protected static final String DEPLOY_ID = \"123\";\n-\n-    protected final Tester tester = Tester.forClass(getClass());\n-    protected final DescriptorParser descriptorParser = getDescriptorParser();\n-    protected final ConfigurationParser configurationParser = new ConfigurationParser();\n-    protected DeploymentDescriptor deploymentDescriptor;\n-\n-    protected String deploymentDescriptorLocation;\n-    protected String extensionDescriptorLocation;\n-    protected String platformLocation;\n-    protected String deployedMtaLocation;\n-    protected String namespace;\n-    protected boolean applyNamespace;\n-    private ModulesCloudModelBuilderContentCalculator modulesCalculator;\n-    protected ModuleToDeployHelper moduleToDeployHelper;\n-    protected ResourcesCloudModelBuilderContentCalculator resourcesCalculator;\n-\n-    protected ApplicationCloudModelBuilder appBuilder;\n-    protected ServicesCloudModelBuilder servicesBuilder;\n-\n-    public static Stream<Arguments> getParameters() {\n-        return Stream.of(\n+\tprotected static final String DEFAULT_DOMAIN_CF = \"cfapps.neo.ondemand.com\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg3ODQwMQ==", "bodyText": "no, mistake when switching workspaces", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516878401", "createdAt": "2020-11-03T18:39:06Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/cf/v2/CloudModelBuilderTest.java", "diffHunk": "@@ -44,567 +44,562 @@\n \n public class CloudModelBuilderTest {\n \n-    protected static final String DEFAULT_DOMAIN_CF = \"cfapps.neo.ondemand.com\";\n-    protected static final String DEFAULT_DOMAIN_XS = \"sofd60245639a\";\n-    protected static final AppSuffixDeterminer DEFAULT_APP_SUFFIX_DETERMINER = new AppSuffixDeterminer(false, false);\n-\n-    protected static final String DEPLOY_ID = \"123\";\n-\n-    protected final Tester tester = Tester.forClass(getClass());\n-    protected final DescriptorParser descriptorParser = getDescriptorParser();\n-    protected final ConfigurationParser configurationParser = new ConfigurationParser();\n-    protected DeploymentDescriptor deploymentDescriptor;\n-\n-    protected String deploymentDescriptorLocation;\n-    protected String extensionDescriptorLocation;\n-    protected String platformLocation;\n-    protected String deployedMtaLocation;\n-    protected String namespace;\n-    protected boolean applyNamespace;\n-    private ModulesCloudModelBuilderContentCalculator modulesCalculator;\n-    protected ModuleToDeployHelper moduleToDeployHelper;\n-    protected ResourcesCloudModelBuilderContentCalculator resourcesCalculator;\n-\n-    protected ApplicationCloudModelBuilder appBuilder;\n-    protected ServicesCloudModelBuilder servicesBuilder;\n-\n-    public static Stream<Arguments> getParameters() {\n-        return Stream.of(\n+\tprotected static final String DEFAULT_DOMAIN_CF = \"cfapps.neo.ondemand.com\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTkzODgxMQ=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzQzMjg2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURITest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjo1MDoxMlrOHsDBcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMjo1MDoxMlrOHsDBcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk0ODkxNA==", "bodyText": "You can use Map.of instead of new HashMap() {}", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515948914", "createdAt": "2020-11-02T12:50:12Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/ApplicationURITest.java", "diffHunk": "@@ -11,68 +13,88 @@\n import org.junit.jupiter.params.provider.Arguments;\n import org.junit.jupiter.params.provider.MethodSource;\n \n-import com.sap.cloudfoundry.client.facade.domain.CloudDomain;\n-import com.sap.cloudfoundry.client.facade.domain.CloudRoute;\n-import com.sap.cloudfoundry.client.facade.domain.ImmutableCloudDomain;\n-import com.sap.cloudfoundry.client.facade.domain.ImmutableCloudRoute;\n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n \n class ApplicationURITest {\n \n     private static final String CUSTOM = \"custom-\";\n \n-    static Stream<Arguments> testParameters() {\n-        return Stream.of(Arguments.of(\"https://valid-host.valid-domain\", \"valid-host\", \"valid-domain\", \"\"),\n-                         Arguments.of(\"https://valid-domain\", \"\", \"valid-domain\", \"\"), Arguments.of(\"valid-domain\", \"\", \"valid-domain\", \"\"),\n-                         Arguments.of(\"https://valid-domain/really/long/path\", \"\", \"valid-domain\", \"/really/long/path\"),\n-                         Arguments.of(\"https://valid-host.valid-domain/really/long/path\", \"valid-host\", \"valid-domain\",\n+    static Stream<Arguments> testGetHostDomainPath() {\n+        return Stream.of(Arguments.of(\"https://valid-host.valid-domain\", false, \"valid-host\", \"valid-domain\", \"\"),\n+                         Arguments.of(\"https://valid-domain\", false, \"\", \"valid-domain\", \"\"),\n+                         Arguments.of(\"valid-domain\", true, \"\", \"valid-domain\", \"\"),\n+                         Arguments.of(\"https://valid-domain/really/long/path\", false, \"\", \"valid-domain\", \"/really/long/path\"),\n+                         Arguments.of(\"https://valid-host.valid-domain/really/long/path\", false, \"valid-host\", \"valid-domain\",\n                                       \"/really/long/path\"),\n-                         Arguments.of(\"deploy-service.cfapps.industrycloud-staging.siemens.com\", \"deploy-service\",\n-                                      \"cfapps.industrycloud-staging.siemens.com\", \"\"));\n+                         Arguments.of(\"deploy-service.cfapps.industrycloud-staging.siemens.com\", false, \"deploy-service\",\n+                                      \"cfapps.industrycloud-staging.siemens.com\", \"\"),\n+                         Arguments.of(\"everything.is.in.domain/and/path\", true, \"\", \"everything.is.in.domain\", \"/and/path\"));\n     }\n \n     @ParameterizedTest\n-    @MethodSource(\"testParameters\")\n-    void testGetHostDomainPath(String uri, String expectedHost, String expectedDomain, String expectedPath) {\n-        ApplicationURI applicationURI = new ApplicationURI(uri);\n+    @MethodSource\n+    void testGetHostDomainPath(String uri, boolean noHostname, String expectedHost, String expectedDomain, String expectedPath) {\n+        ApplicationURI applicationURI = new ApplicationURI(uri, noHostname);\n         Assertions.assertEquals(expectedHost, applicationURI.getHost());\n         Assertions.assertEquals(expectedDomain, applicationURI.getDomain());\n         Assertions.assertEquals(expectedPath, applicationURI.getPath());\n     }\n \n+    @SuppressWarnings(\"serial\")\n+    static Stream<Arguments> testGetURIParts() {\n+        return Stream.of(Arguments.of(\"host\", \"domain.com\", \"/path\", new HashMap<String, Object>() {\n+            {\n+                put(SupportedParameters.HOST, \"host\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzQ3Mjg2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/TestData.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowMToyMlrOHsDZrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0NDo0OVrOHs78TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NTExNg==", "bodyText": "So we cannot keep only one TestData class in util or process package?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515955116", "createdAt": "2020-11-02T13:01:22Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/TestData.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.cloudfoundry.multiapps.controller.core.util;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+\n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n+import com.sap.cloudfoundry.client.facade.domain.ImmutableCloudRouteSummary;\n+\n+//TODO: this class repeats code from test class org.cloudfoundry.multiapps.controller.process.steps.TestData; consolidate if we refactor core module and stplit ApplicationUri out of it", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MTQ4NA==", "bodyText": "no, since we do not want to export a test jar to share the classes", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516881484", "createdAt": "2020-11-03T18:44:49Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/util/TestData.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package org.cloudfoundry.multiapps.controller.core.util;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+import java.util.stream.Stream;\n+\n+import org.cloudfoundry.multiapps.controller.core.model.SupportedParameters;\n+\n+import com.sap.cloudfoundry.client.facade.domain.CloudRouteSummary;\n+import com.sap.cloudfoundry.client.facade.domain.ImmutableCloudRouteSummary;\n+\n+//TODO: this class repeats code from test class org.cloudfoundry.multiapps.controller.process.steps.TestData; consolidate if we refactor core module and stplit ApplicationUri out of it", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1NTExNg=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzQ5OTE2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowODozNFrOHsDpSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzowODozNFrOHsDpSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk1OTExNA==", "bodyText": "You can use Map.of with short if statement", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515959114", "createdAt": "2020-11-02T13:08:34Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "diffHunk": "@@ -19,36 +25,58 @@\n     static Stream<Arguments> getParameters() {\n         return Stream.of(\n // @formatter:off\n-            // [0]\n-            Arguments.of(\"valid-host.domain\", true, \"valid-host.domain\", null),\n             // [1]\n-            Arguments.of(\"should_correct$this$host.domain\", false, \"should-correct-this-host.domain\", null),\n+            Arguments.of(\"valid-host.domain\", null, true, \"valid-host.domain\", null),\n             // [2]\n-            Arguments.of(\"host_can_be_corrected.domain.com\", false, \"host-can-be-corrected.domain.com\", null)\n+            Arguments.of(\"should_correct$this$host.domain\", null, false, \"should-correct-this-host.domain\", null),\n+            // [3]\n+            Arguments.of(\"host_can_be_corrected.domain.com\", Boolean.FALSE, false, \"host-can-be-corrected.domain.com\", null),\n+            // [4]\n+            Arguments.of(\"doesnt.matter.com\", 1, false, null, MessageFormat.format(Messages.COULD_NOT_PARSE_BOOLEAN_FLAG, SupportedParameters.NO_HOSTNAME)),\n+            // [5]\n+            Arguments.of(\"domain_can_be_corrected.com\", Boolean.TRUE, false, \"domain-can-be-corrected.com\", null)\n // @formatter:on\n         );\n     }\n \n     @ParameterizedTest\n     @MethodSource(\"getParameters\")\n-    void testValidate(String inputRoute, boolean isValid, String correctedRoute, String expectedException) {\n-        assertEquals(isValid, validator.isValid(inputRoute, null));\n+    void testValidate(String inputRoute, Object noHostname, boolean isValid, String correctedRoute, String expectedException) {\n+        Map<String, Object> routeContext = constructContext(noHostname);\n+        try {\n+            assertEquals(isValid, validator.isValid(inputRoute, routeContext));\n+            assertNull(expectedException, \"Expected an exception but test passed!\");\n+        } catch (Exception e) {\n+            assertNotNull(expectedException, \"Didn't expect an exception, but got \" + e.getMessage());\n+            assertEquals(expectedException, e.getMessage(), \"Exception's message doesn't match up!\");\n+        }\n     }\n \n     @ParameterizedTest\n     @MethodSource(\"getParameters\")\n-    void testAttemptToCorrect(String inputRoute, boolean isValid, String correctedRoute, String expectedException) {\n+    void testAttemptToCorrect(String inputRoute, Object noHostname, boolean isValid, String correctedRoute, String expectedException) {\n         if (!validator.canCorrect())\n             return;\n         try {\n-            String result = validator.attemptToCorrect(inputRoute, null);\n+            Map<String, Object> routeContext = constructContext(noHostname);\n+            String result = validator.attemptToCorrect(inputRoute, routeContext);\n+            assertNull(expectedException, \"Expected an exception but test passed!\");\n             assertEquals(correctedRoute, result);\n         } catch (Exception e) {\n-            assertNotNull(e.getMessage(), expectedException);\n-            assertEquals(\"Exception's message doesn't match up!\", e.getMessage(), expectedException);\n+            assertNotNull(expectedException, \"Didn't expect an exception, but got \" + e.getMessage());\n+            assertEquals(expectedException, e.getMessage(), \"Exception's message doesn't match up!\");\n         }\n     }\n \n+    private Map<String, Object> constructContext(Object noHostname) {\n+        Map<String, Object> context = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzUwNzI2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/resources/mta/devxdi/apps.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMDo0NFrOHsDuLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMDo0NFrOHsDuLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MDM2Ng==", "bodyText": "we should delete this user from all tests", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515960366", "createdAt": "2020-11-02T13:10:44Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/resources/mta/devxdi/apps.json", "diffHunk": "@@ -22,8 +22,12 @@\n         \"git://github.example.com/xs2-java/java-buildpack.git\"\n       ]\n     },\n-    \"uris\": [\n-      \"i027947-di-core.cfapps.neo.ondemand.com\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"cfapps.neo.ondemand.com\",\n+        \"host\": \"i027947-di-core\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzUwOTY0OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/resources/mta/devxdi/apps.json", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMToyN1rOHsDvrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0Njo1N1rOHs8BHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MDc1MQ==", "bodyText": "I am not sure is it okay to use such domain in our tests", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515960751", "createdAt": "2020-11-02T13:11:27Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/resources/mta/devxdi/apps.json", "diffHunk": "@@ -22,8 +22,12 @@\n         \"git://github.example.com/xs2-java/java-buildpack.git\"\n       ]\n     },\n-    \"uris\": [\n-      \"i027947-di-core.cfapps.neo.ondemand.com\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"cfapps.neo.ondemand.com\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MjcxOA==", "bodyText": "for these tests I only changed the data types, did not edit the data itself; I agree we should switch the test data", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516882718", "createdAt": "2020-11-03T18:46:57Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-core/src/test/resources/mta/devxdi/apps.json", "diffHunk": "@@ -22,8 +22,12 @@\n         \"git://github.example.com/xs2-java/java-buildpack.git\"\n       ]\n     },\n-    \"uris\": [\n-      \"i027947-di-core.cfapps.neo.ondemand.com\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"cfapps.neo.ondemand.com\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MDc1MQ=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzUxMzEwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/resources/mta/devxdi/xs2-apps.json", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMjoyM1rOHsDx0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzoxMjoyM1rOHsDx0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk2MTI5OQ==", "bodyText": "I am not sure is it okay to use this as test domain in OSS", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515961299", "createdAt": "2020-11-02T13:12:23Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/resources/mta/devxdi/xs2-apps.json", "diffHunk": "@@ -20,8 +20,12 @@\n     \"staging\": {\n       \"buildpacks\": []\n     },\n-    \"uris\": [\n-      \"di-core.sofd60245639a\"\n+    \"routes\": [\n+      {\n+        \"domain\": \"sofd60245639a\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzYxOTc1OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/BuildApplicationDeployModelStep.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo0MToyOVrOHsEzTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo0MToyOVrOHsEzTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk3ODA2MQ==", "bodyText": "I didn't see where is used java.util.stream.Collectors and StringUtils imports", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515978061", "createdAt": "2020-11-02T13:41:29Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/BuildApplicationDeployModelStep.java", "diffHunk": "@@ -3,10 +3,14 @@\n import java.util.Collections;\n import java.util.List;\n import java.util.Map;\n+import java.util.Set;\n+import java.util.stream.Collectors;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY0OTA2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteIdleRoutesStep.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxMzo0OTozNFrOHsFFcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0ODoxNVrOHs8D4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4MjcwNA==", "bodyText": "CloudRouteSummary as far as I remember it has toString() imeplemented. So you can just pass the object itself and it will be printed", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515982704", "createdAt": "2020-11-02T13:49:34Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteIdleRoutesStep.java", "diffHunk": "@@ -44,30 +45,31 @@ protected String getStepErrorMessage(ProcessContext context) {\n     }\n \n     private void deleteIdleRoutes(CloudApplication idleApp, CloudControllerClient client, CloudApplication newLiveApp) {\n-        List<String> idleUris = ListUtils.subtract(idleApp.getUris(), newLiveApp.getUris());\n-        getStepLogger().debug(Messages.IDLE_URIS_FOR_APPLICATION, idleUris);\n+        Set<CloudRouteSummary> idleRoutes = SetUtils.difference(idleApp.getRoutes(), newLiveApp.getRoutes())\n+                                                    .toSet();\n+        getStepLogger().debug(Messages.IDLE_URIS_FOR_APPLICATION, idleRoutes);\n \n-        for (String idleUri : idleUris) {\n-            deleteRoute(idleUri, client);\n-            getStepLogger().debug(Messages.ROUTE_DELETED, idleUri);\n+        for (CloudRouteSummary idleRoute : idleRoutes) {\n+            deleteRoute(idleRoute, client);\n+            getStepLogger().debug(Messages.ROUTE_DELETED, idleRoute.toUriString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MzQyNQ==", "bodyText": "intentionally used this method, to make it more clear that we're doing custom string formatting (i.e. concat with '.')", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516883425", "createdAt": "2020-11-03T18:48:15Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteIdleRoutesStep.java", "diffHunk": "@@ -44,30 +45,31 @@ protected String getStepErrorMessage(ProcessContext context) {\n     }\n \n     private void deleteIdleRoutes(CloudApplication idleApp, CloudControllerClient client, CloudApplication newLiveApp) {\n-        List<String> idleUris = ListUtils.subtract(idleApp.getUris(), newLiveApp.getUris());\n-        getStepLogger().debug(Messages.IDLE_URIS_FOR_APPLICATION, idleUris);\n+        Set<CloudRouteSummary> idleRoutes = SetUtils.difference(idleApp.getRoutes(), newLiveApp.getRoutes())\n+                                                    .toSet();\n+        getStepLogger().debug(Messages.IDLE_URIS_FOR_APPLICATION, idleRoutes);\n \n-        for (String idleUri : idleUris) {\n-            deleteRoute(idleUri, client);\n-            getStepLogger().debug(Messages.ROUTE_DELETED, idleUri);\n+        for (CloudRouteSummary idleRoute : idleRoutes) {\n+            deleteRoute(idleRoute, client);\n+            getStepLogger().debug(Messages.ROUTE_DELETED, idleRoute.toUriString());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4MjcwNA=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzY5NjMwOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/util/ElementUpdater.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDowMDo1OFrOHsFh3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxODo0OTowOVrOHs8F2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4OTk4Mw==", "bodyText": "Previously this will result in List with duplicated old elements in result list, is it right?", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515989983", "createdAt": "2020-11-02T14:00:58Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/util/ElementUpdater.java", "diffHunk": "@@ -30,7 +39,14 @@\n \n         @Override\n         public <T> List<T> updateList(List<T> oldList, List<T> newList) {\n-            return ListUtils.union(oldList, newList);\n+            List<T> newPartsOnly = ListUtils.subtract(newList, oldList);\n+            return ListUtils.union(oldList, newPartsOnly);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjg4MzkyOA==", "bodyText": "yes, this was a defect previously; thankfully we also didn't have a real case which would've used this code", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r516883928", "createdAt": "2020-11-03T18:49:09Z", "author": {"login": "ikasarov"}, "path": "multiapps-controller-process/src/main/java/org/cloudfoundry/multiapps/controller/process/util/ElementUpdater.java", "diffHunk": "@@ -30,7 +39,14 @@\n \n         @Override\n         public <T> List<T> updateList(List<T> oldList, List<T> newList) {\n-            return ListUtils.union(oldList, newList);\n+            List<T> newPartsOnly = ListUtils.subtract(newList, oldList);\n+            return ListUtils.union(oldList, newPartsOnly);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk4OTk4Mw=="}, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzcyNTI2OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteApplicationRoutesStepTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDowNzozMlrOHsFzGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDowNzozMlrOHsFzGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5NDM5NA==", "bodyText": "There is some issue with spaces, maybe there is tabs instead of spaces", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515994394", "createdAt": "2020-11-02T14:07:32Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-process/src/test/java/org/cloudfoundry/multiapps/controller/process/steps/DeleteApplicationRoutesStepTest.java", "diffHunk": "@@ -67,7 +67,7 @@ private void assertRoutesWereDeleted() {\n         assertEquals(0, routesToDeleteCount, \"A number of routes were not deleted: \");\n     }\n \n-    @Test\n+\t@Test", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMzc2MTU0OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNjowMlrOHsGIjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMlQxNDoxNjowMlrOHsGIjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTk5OTg4NA==", "bodyText": "Don't forget before merge of this PR to make release of multiapps and cloudfoundry-client projects.", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r515999884", "createdAt": "2020-11-02T14:16:02Z", "author": {"login": "theghost5800"}, "path": "pom.xml", "diffHunk": "@@ -49,7 +49,7 @@\n         <aliyun-sdk-oss.version>3.11.0</aliyun-sdk-oss.version>\n         <auto-service.version>1.0-rc7</auto-service.version>\n         <java-cfenv.version>2.2.2.RELEASE</java-cfenv.version>\n-        <multiapps.version>2.3.2</multiapps.version>\n+        <multiapps.version>2.4.0-SNAPSHOT</multiapps.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b580b042a3b612a04bd547169e6734537ee8803e"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTQyNjMxOnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/IdleUriParametersParser.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MzowOFrOHtOZRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1MzowOFrOHtOZRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4MzgxNA==", "bodyText": "Rename IdleUriParametersParser to IdleRouteParametersParser", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r517183814", "createdAt": "2020-11-04T08:53:08Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/main/java/org/cloudfoundry/multiapps/controller/core/parser/IdleUriParametersParser.java", "diffHunk": "@@ -16,7 +16,7 @@\n import org.cloudfoundry.multiapps.controller.core.validators.parameters.RoutesValidator;\n import org.cloudfoundry.multiapps.mta.util.PropertiesUtil;\n \n-public class IdleUriParametersParser extends UriParametersParser {\n+public class IdleUriParametersParser extends RouteParametersParser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df4cdbbdb25e8110199178bb731a8246e608e7aa"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MTQ0MTU3OnYy", "diffSide": "RIGHT", "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1NzowM1rOHtOiqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQwODo1NzowM1rOHtOiqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzE4NjIxNw==", "bodyText": "If you don't add entries in the map after that, you can return Collections.emptyMap()", "url": "https://github.com/cloudfoundry-incubator/multiapps-controller/pull/982#discussion_r517186217", "createdAt": "2020-11-04T08:57:03Z", "author": {"login": "theghost5800"}, "path": "multiapps-controller-core/src/test/java/org/cloudfoundry/multiapps/controller/core/validators/parameters/RouteValidatorTest.java", "diffHunk": "@@ -69,12 +69,11 @@ void testAttemptToCorrect(String inputRoute, Object noHostname, boolean isValid,\n     }\n \n     private Map<String, Object> constructContext(Object noHostname) {\n-        Map<String, Object> context = new HashMap<>();\n-        if (noHostname != null) {\n-            context.put(SupportedParameters.NO_HOSTNAME, noHostname);\n+        if (noHostname == null) {\n+            return new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df4cdbbdb25e8110199178bb731a8246e608e7aa"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 451, "cost": 1, "resetAt": "2021-11-12T18:49:56Z"}}}