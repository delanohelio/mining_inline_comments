{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MjMzMDQ5", "number": 380, "title": "XRDDEV-860 add client", "bodyText": "https://jira.niis.org/browse/XRDDEV-860\nNew endpoint POST /clients for adding new clients", "createdAt": "2020-02-19T15:50:28Z", "url": "https://github.com/nordic-institute/X-Road/pull/380", "merged": true, "mergeCommit": {"oid": "bf200a3666d035927722021a0b05f98a97558cbb"}, "closed": true, "closedAt": "2020-03-03T06:09:58Z", "author": {"login": "jansu76"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcD7vOPAH2gAyMzc3MjMzMDQ5OjBjNWQxYzBkMzFjYjU0NTBiZGU5ODY0NDI0ZjUwNzNmOTVmZTJkMTY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJuDV2gH2gAyMzc3MjMzMDQ5OmUwYmI4NTU0NGIzMThiNzNkZDNkMDQ0NTZhMmUwMjZiODgzOWZlOWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0c5d1c0d31cb5450bde9864424f5073f95fe2d16", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/0c5d1c0d31cb5450bde9864424f5073f95fe2d16", "committedDate": "2020-02-13T14:23:50Z", "message": "XRDDEV-860 small api change. update clientService to make localClient and globalClient difference more explicit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "084cd5f66cdb62d97c670fc7e5fb14b93358a1cf", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/084cd5f66cdb62d97c670fc7e5fb14b93358a1cf", "committedDate": "2020-02-17T07:28:14Z", "message": "XRDDEV-860 add service method skeleton, add failing (ignored) tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5c8660a63c7a6c03e3ca71f06d8f52097ee4ab5", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/f5c8660a63c7a6c03e3ca71f06d8f52097ee4ab5", "committedDate": "2020-02-17T07:40:26Z", "message": "Merge branch 'develop' into XRDDEV-860-add-client\n\nFixed conflicts:\n\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ServiceDescriptionService.java\n\tsrc/proxy-ui-api/src/test/java/org/niis/xroad/restapi/service/ServiceDescriptionServiceIntegrationTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2d1ae6283809dd5db3386d4fb546a30408a0c5e9", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/2d1ae6283809dd5db3386d4fb546a30408a0c5e9", "committedDate": "2020-02-17T08:18:08Z", "message": "XRDDEV-860 wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a74f8583d5826b3205155aba539339021a4e0002", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/a74f8583d5826b3205155aba539339021a4e0002", "committedDate": "2020-02-18T07:02:18Z", "message": "XRDDEV-860 add more tests, change default connection type to HTTPS, add implementation that fixes the tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04c459309615675e9d42fffd9862ae3a9e147cc3", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/04c459309615675e9d42fffd9862ae3a9e147cc3", "committedDate": "2020-02-18T16:45:29Z", "message": "XRDDEV-860 implement controller layer, update api to include client.instance_id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad61617971eaab4f0d4bcae1b6f2bc9405d7945d", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/ad61617971eaab4f0d4bcae1b6f2bc9405d7945d", "committedDate": "2020-02-19T07:12:20Z", "message": "XRDDEV-860 add test and fix implementation for cases where client identifier already exists in DB"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2115f27c7c59cc4029e931c1112d3568d840c733", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/2115f27c7c59cc4029e931c1112d3568d840c733", "committedDate": "2020-02-19T08:27:33Z", "message": "XRDDEV-860 cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d9f8a045958f886ad590d2a2196591cd5deaed9", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/6d9f8a045958f886ad590d2a2196591cd5deaed9", "committedDate": "2020-02-19T09:42:50Z", "message": "XRDDEV-860 add synchronization to prevent multiple-additional-members problem"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3665602e6f328c7ac845310e19213e3af63d22e9", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/3665602e6f328c7ac845310e19213e3af63d22e9", "committedDate": "2020-02-19T10:29:08Z", "message": "XRDDEV-860 add controller tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ad632bfe1405fe1170e75c1491c1560cafa1cebf", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/ad632bfe1405fe1170e75c1491c1560cafa1cebf", "committedDate": "2020-02-19T15:11:04Z", "message": "Merge branch 'develop' into XRDDEV-860-add-client\n\nFix conflicts:\n\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/GlobalConfService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d3ba274782b13c467aa085704b67017602266287", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/d3ba274782b13c467aa085704b67017602266287", "committedDate": "2020-02-19T15:41:06Z", "message": "XRDDEV-860 remove unused serverConfRepository.saveOrUpdate"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82d3a6323aa3fb19de4e93b5d8573b89fd3502d8", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/82d3a6323aa3fb19de4e93b5d8573b89fd3502d8", "committedDate": "2020-02-19T17:14:59Z", "message": "XRDDEV-860 fix ClientId.getMemberId breaking json serialization"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8e8aa14f2171c0fa1cfe00a5aae6bd6089673a91", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/8e8aa14f2171c0fa1cfe00a5aae6bd6089673a91", "committedDate": "2020-02-26T08:56:49Z", "message": "XRDDEV-860 lock instance_id to current instance for add client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/9c5232112d6cde37b4796672147cab5e9e77989d", "committedDate": "2020-02-26T09:05:59Z", "message": "XRDDEV-860 fix problem with mandatory key_label, should have been optional"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDI0NTQw", "url": "https://github.com/nordic-institute/X-Road/pull/380#pullrequestreview-366424540", "createdAt": "2020-02-28T14:13:31Z", "commit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNDoxMzozMlrOFv2Rew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTowNzo1MFrOFv4GeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcxNjYwMw==", "bodyText": "Very comprehensive Javadocs! This was gonna be my first question \ud83d\ude01", "url": "https://github.com/nordic-institute/X-Road/pull/380#discussion_r385716603", "createdAt": "2020-02-28T14:13:32Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -439,4 +464,121 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         }\n         return clientTypePredicate;\n     }\n+\n+    /**\n+     * Add a new client to this security server. Can add either a member or a subsystem.\n+     * Member (added client, or member associated with the client subsystem) can either\n+     * be one already registered to global conf, or an unregistered one. Unregistered one\n+     * can only be added with ignoreWarnings = true.\n+     *\n+     * Client is added to this instance, it is not possible to add clients who would have\n+     * different instance_id from this security server's instance.\n+     *\n+     * To prevent against two threads both creating \"first\" additional members,\n+     * synchronize access to this method on controller layer\n+     * (synchronizing this method does not help since transaction start & commit\n+     * are outside of this method).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d"}, "originalPosition": 186}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc0NjU1Mg==", "bodyText": "Very thorough testing on this quite error prone feature! \ud83d\udc4d", "url": "https://github.com/nordic-institute/X-Road/pull/380#discussion_r385746552", "createdAt": "2020-02-28T15:07:50Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/service/ClientServiceIntegrationTest.java", "diffHunk": "@@ -114,10 +147,282 @@ public void setup() throws Exception {\n         assertTrue(sqlFileBytes.length > 1);\n     }\n \n+    private int countIdentifiers() {\n+        return JdbcTestUtils.countRowsInTable(jdbcTemplate, \"identifier\");\n+    }\n+    private long countMembers() {\n+        return countByType(false);\n+    }\n+    private long countSubsystems() {\n+        return countByType(true);\n+    }\n+    private long countByType(boolean subsystems) {\n+        List<ClientType> localClients = clientService.getAllLocalClients();\n+        return localClients.stream()\n+                .filter(client -> (client.getIdentifier().getSubsystemCode() != null) == subsystems)\n+                .count();\n+    }\n+\n+    @Test\n+    public void addLocalClientSubsystemToExistingClient() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d"}, "originalPosition": 141}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDg1MDA5", "url": "https://github.com/nordic-institute/X-Road/pull/380#pullrequestreview-366485009", "createdAt": "2020-02-28T15:34:34Z", "commit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTozNDozNFrOFv5E8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNTozNDozNFrOFv5E8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc2MjU0NA==", "bodyText": "Just wondering why this does not require saving the serverConfType itself? Since there is cascade=none from ClientType to ServerConf now.", "url": "https://github.com/nordic-institute/X-Road/pull/380#discussion_r385762544", "createdAt": "2020-02-28T15:34:34Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -439,4 +464,121 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         }\n         return clientTypePredicate;\n     }\n+\n+    /**\n+     * Add a new client to this security server. Can add either a member or a subsystem.\n+     * Member (added client, or member associated with the client subsystem) can either\n+     * be one already registered to global conf, or an unregistered one. Unregistered one\n+     * can only be added with ignoreWarnings = true.\n+     *\n+     * Client is added to this instance, it is not possible to add clients who would have\n+     * different instance_id from this security server's instance.\n+     *\n+     * To prevent against two threads both creating \"first\" additional members,\n+     * synchronize access to this method on controller layer\n+     * (synchronizing this method does not help since transaction start & commit\n+     * are outside of this method).\n+     *\n+     * @param memberClass member class of added client\n+     * @param memberCode member code of added client\n+     * @param subsystemCode subsystem code of added client (null if adding a member)\n+     * @param isAuthentication {@code IsAuthentication} value to set for the new client\n+     * @param ignoreWarnings if warning about unregistered member should be ignored\n+     * @return\n+     * @throws ClientAlreadyExistsException if client has already been added to security server\n+     * @throws AdditionalMemberAlreadyExistsException if tried to add a new member, and\n+     * security server already has owner member + one additional member\n+     * @throws UnhandledWarningsException if tried to add client associated with a member which\n+     * does not exist in global conf yet, and ignoreWarnings was false\n+     */\n+    public ClientType addLocalClient(String memberClass,\n+            String memberCode,\n+            String subsystemCode,\n+            IsAuthentication isAuthentication,\n+            boolean ignoreWarnings) throws ClientAlreadyExistsException,\n+            AdditionalMemberAlreadyExistsException, UnhandledWarningsException {\n+\n+        ClientId clientId = ClientId.create(globalConfFacade.getInstanceIdentifier(),\n+                memberClass,\n+                memberCode,\n+                subsystemCode);\n+\n+        ClientType existingLocalClient = getLocalClient(clientId);\n+        ClientId ownerId = serverConfService.getSecurityServerOwnerId();\n+        if (existingLocalClient != null) {\n+            throw new ClientAlreadyExistsException(\"client \" + clientId + \" already exists\");\n+        }\n+        if (clientId.getSubsystemCode() == null) {\n+            // adding member - check that we dont already have owner + one additional member\n+            List<ClientType> existingMembers = getAllLocalMembers();\n+            Optional<ClientType> additionalMember = existingMembers.stream()\n+                    .filter(m -> !ownerId.equals(m.getIdentifier()))\n+                    .findFirst();\n+            if (additionalMember.isPresent()) {\n+                throw new AdditionalMemberAlreadyExistsException(\"additional member \"\n+                        + additionalMember.get().getIdentifier() + \" already exists\");\n+            }\n+        }\n+\n+        // check if the member associated with clientId exists in global conf\n+        ClientId memberId = clientId.getMemberId();\n+        if (globalConfFacade.getMemberName(memberId) == null) {\n+            // unregistered member\n+            if (!ignoreWarnings) {\n+                WarningDeviation warning = new WarningDeviation(WARNING_UNREGISTERED_MEMBER, memberId.toShortString());\n+                throw new UnhandledWarningsException(warning);\n+            }\n+        }\n+\n+        boolean clientRegistered = globalConfService.isSecurityServerClientForThisInstance(clientId);\n+        ClientType client = new ClientType();\n+        client.setIdentifier(getPossiblyManagedEntity(clientId));\n+        if (clientRegistered) {\n+            client.setClientStatus(ClientType.STATUS_REGISTERED);\n+        } else {\n+            client.setClientStatus(ClientType.STATUS_SAVED);\n+        }\n+        client.setIsAuthentication(isAuthentication.name());\n+        ServerConfType serverConfType = serverConfService.getServerConf();\n+        client.setConf(serverConfType);\n+        serverConfType.getClient().add(client);\n+\n+        clientRepository.saveOrUpdate(client);\n+        return client;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c5232112d6cde37b4796672147cab5e9e77989d"}, "originalPosition": 253}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0bb85544b318b73dd3d04456a2e026b8839fe9e", "author": {"user": {"login": "jansu76", "name": null}}, "url": "https://github.com/nordic-institute/X-Road/commit/e0bb85544b318b73dd3d04456a2e026b8839fe9e", "committedDate": "2020-03-02T13:50:41Z", "message": "Merge branch 'develop' into XRDDEV-860-add-client\n\nFixed Conflicts:\n\tsrc/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ClientRepository.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4324, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}