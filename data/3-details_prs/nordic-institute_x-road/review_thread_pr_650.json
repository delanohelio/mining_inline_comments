{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4Mjk4NTg3", "number": 650, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxOTo0NlrOEaVZTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0ODo1MVrOEaWM6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDQ4OTc1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/KeyService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjoxOTo0NlrOHDsqbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoxMjowNFrOHD5W2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzOTUzMw==", "bodyText": "Swallowing exceptions should almost never be done. Even if UnhandledWarningsException should indeed be impossible, wrapping it as RuntimeException is preferrable, in case there's some weird bug that does cause UnhandledWarningsException, or if someone later changes code so that our current assumptions are not valid anymore. Even if unlikely, I've seen those two things happen, and then it may mean a long bughunt since from outside everything looks like the key delete was successful.\nAdding throw new RuntimeException(e); here also does not have any real downside, in case we are correct and this never happens. Comment is a good one to keep IMO, to explain this to updater.", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473639533", "createdAt": "2020-08-20T06:19:46Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/KeyService.java", "diffHunk": "@@ -202,15 +206,27 @@ private static String signerFaultCode(String detail) {\n \n     static final String KEY_NOT_FOUND_FAULT_CODE = signerFaultCode(X_KEY_NOT_FOUND);\n \n+    public void deleteKey(String keyId) throws KeyNotFoundException, ActionNotPossibleException,\n+            GlobalConfOutdatedException {\n+        try {\n+            deleteKey(keyId, true);\n+        } catch (UnhandledWarningsException e) {\n+            // Since \"ignoreWarnings = true\", the exception is never thrown", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg0NzUxNA==", "bodyText": "Good points, RuntimeException is now thrown in case UnhandledWarningsException is catched.", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473847514", "createdAt": "2020-08-20T10:12:04Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/KeyService.java", "diffHunk": "@@ -202,15 +206,27 @@ private static String signerFaultCode(String detail) {\n \n     static final String KEY_NOT_FOUND_FAULT_CODE = signerFaultCode(X_KEY_NOT_FOUND);\n \n+    public void deleteKey(String keyId) throws KeyNotFoundException, ActionNotPossibleException,\n+            GlobalConfOutdatedException {\n+        try {\n+            deleteKey(keyId, true);\n+        } catch (UnhandledWarningsException e) {\n+            // Since \"ignoreWarnings = true\", the exception is never thrown", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzYzOTUzMw=="}, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDU1Mjc1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjozMzo0N1rOHDtSUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMToyOTo0MVrOHD8lag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY0OTc0Nw==", "bodyText": "Hmmm. I feel we might need to better explain users what the warnings related to this operation could be? Like in this case, give specifics so that user understands the warnings are about registered auth certificates?\nYou could also instead (or, also) explain these things in the markdown documentation, but maybe the openapi definition is a pretty good place for this?\nClient add says this in definition-part:\n      description: >\n        Adds new client to the system.\n        Note that with this endpoint it is possible to add an unregistered member as a client.\n        Attempt to add an unregistered member with ClientAdd.ignore_warnings = false causes the operation to fail with a warning in response's ErrorInfo object.\n        Attempt to add an unregistered member with ClientAdd.ignore_warnings = true succeeds.\n\nBut unfortunately this is not consistent, other endpoints with an ignore_warnings possibility do not have the same type of explanation.\nThis ticket could add some explanation of warnings for this endpoint, or maybe documentation for all endpoints could be updated and made consistent in a separate ticket....", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473649747", "createdAt": "2020-08-20T06:33:47Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2154,6 +2154,14 @@ paths:\n             type: string\n             format: text\n             minLength: 1\n+        - in: query\n+          name: ignore_warnings\n+          description: if true, any ignorable warnings are ignored. if false (or missing),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1MjIyNw==", "bodyText": "I updated the OpenAPI definition for this endpoint. I think it's better to have all the related documentation in one place to make consuming the API easier for the users. In my opinion OpenAPI definition is the right place for this kind of documentation. I also think that it's a good idea to create a separate ticket about updating the OpenAPI definition and making it more consistent. More example messages should be added to the documentation too since some endpoints  have parameters which values are difficult to get right, e.g. endpoints related to CSR creation.", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473852227", "createdAt": "2020-08-20T10:17:48Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2154,6 +2154,14 @@ paths:\n             type: string\n             format: text\n             minLength: 1\n+        - in: query\n+          name: ignore_warnings\n+          description: if true, any ignorable warnings are ignored. if false (or missing),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY0OTc0Nw=="}, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkwMDM5NA==", "bodyText": "Created https://jira.niis.org/browse/XRDDEV-1272", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473900394", "createdAt": "2020-08-20T11:29:41Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2154,6 +2154,14 @@ paths:\n             type: string\n             format: text\n             minLength: 1\n+        - in: query\n+          name: ignore_warnings\n+          description: if true, any ignorable warnings are ignored. if false (or missing),", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY0OTc0Nw=="}, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MDYyMTg3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/KeysApiController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo0ODo1MVrOHDt-Fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMDoxODoyMlrOHD5q5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2MDk1MQ==", "bodyText": "Would be good to add javadocs to old public void deleteKey(String keyId) { so that it explains the ignoreWarnings = true deal. (weird, I thought checkstyle requires javadocs for public methods. It is good practice to have those anyhow)\nMaybe also consider changing old method name to something like deleteKeyAndIgnoreWarnings, or removing it altogether and using deleteKey(keyId, true) instead. Does having a shorthand version, without boolean parameter, make things better or worse? Maybe without it code might be more clear and more explicit about what is the intended action. Well, not sure about that one really.", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473660951", "createdAt": "2020-08-20T06:48:51Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/KeysApiController.java", "diffHunk": "@@ -225,14 +226,14 @@ private Key getKeyFromService(String keyId) {\n     @Override\n     @PreAuthorize(\"hasAnyAuthority('DELETE_KEY', 'DELETE_AUTH_KEY', 'DELETE_SIGN_KEY')\")\n     @AuditEventMethod(event = DELETE_KEY)\n-    public ResponseEntity<Void> deleteKey(String keyId) {\n+    public ResponseEntity<Void> deleteKey(String keyId, Boolean ignoreWarnings) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzg1MjY0Nw==", "bodyText": "Changed the old method name to deleteKeyAndIgnoreWarnings and updated javadocs.", "url": "https://github.com/nordic-institute/X-Road/pull/650#discussion_r473852647", "createdAt": "2020-08-20T10:18:22Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/KeysApiController.java", "diffHunk": "@@ -225,14 +226,14 @@ private Key getKeyFromService(String keyId) {\n     @Override\n     @PreAuthorize(\"hasAnyAuthority('DELETE_KEY', 'DELETE_AUTH_KEY', 'DELETE_SIGN_KEY')\")\n     @AuditEventMethod(event = DELETE_KEY)\n-    public ResponseEntity<Void> deleteKey(String keyId) {\n+    public ResponseEntity<Void> deleteKey(String keyId, Boolean ignoreWarnings) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2MDk1MQ=="}, "originalCommit": {"oid": "9f93c21e05a1c119c4689d3206cbfcededf6261d"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2674, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}