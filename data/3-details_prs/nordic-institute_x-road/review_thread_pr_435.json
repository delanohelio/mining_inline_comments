{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MTA1NzM0", "number": 435, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxMDo1MFrODsCapA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1Mjo0MVrODsDRfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTAzNTI0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ApiKeyRepository.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoxMDo1MFrOF8udbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxMjozMTo1NlrOF_o_BA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMDA3Nw==", "bodyText": "Feels like this ApiKeyRepository is a bit different from the conventions used in other repositories. Other repositories mostly\n\nhave a saveOrUpdate method which is used for both creating and updating\ndo not deletegate simple update / delete operations to DAO, but instead just use direct calls with persistenceUtils, e.g. \n  \n    \n      X-Road/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/LocalGroupRepository.java\n    \n    \n        Lines 104 to 106\n      in\n      735e853\n    \n    \n    \n    \n\n        \n          \n           public void delete(LocalGroupType localGroupType) { \n        \n\n        \n          \n               persistenceUtils.getCurrentSession().delete(localGroupType); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\n\nBut this is earlier legacy than this ticket so nothing has to be done here. I think I will add a few lines to confluence to offer some conventions for future repository implementations.\nI think I will pick an API key related ticket next, so I might refactor this part there. Or, if you get the inspiration, you can do it also.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399220077", "createdAt": "2020-03-27T12:10:50Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ApiKeyRepository.java", "diffHunk": "@@ -108,6 +108,44 @@ private String createApiKey() {\n         return entry;\n     }\n \n+    /**\n+     * update api key with one role by key id\n+     * @param id\n+     * @param roleName\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, String roleName)\n+            throws InvalidRoleNameException, ApiKeyNotFoundException {\n+        return update(id, Collections.singletonList(roleName));\n+    }\n+\n+    /**\n+     * update api key with collection of roles by key id\n+     * @param id\n+     * @param roleNames\n+     * @return\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, Collection<String> roleNames)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyNDU0Nw==", "bodyText": "Confluence updated: https://confluence.niis.org/display/XRDDEV/API+backend+conventions#APIbackendconventions-Repositories", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399224547", "createdAt": "2020-03-27T12:19:53Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ApiKeyRepository.java", "diffHunk": "@@ -108,6 +108,44 @@ private String createApiKey() {\n         return entry;\n     }\n \n+    /**\n+     * update api key with one role by key id\n+     * @param id\n+     * @param roleName\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, String roleName)\n+            throws InvalidRoleNameException, ApiKeyNotFoundException {\n+        return update(id, Collections.singletonList(roleName));\n+    }\n+\n+    /**\n+     * update api key with collection of roles by key id\n+     * @param id\n+     * @param roleNames\n+     * @return\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, Collection<String> roleNames)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMDA3Nw=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTc2NTMxMw==", "bodyText": "I got inspired and did some refactoring. As a result the implementation now follows the same structure with other endpoints. Repository and service layers are separated, and business logic is implemented in the service layer.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399765313", "createdAt": "2020-03-29T08:36:05Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ApiKeyRepository.java", "diffHunk": "@@ -108,6 +108,44 @@ private String createApiKey() {\n         return entry;\n     }\n \n+    /**\n+     * update api key with one role by key id\n+     * @param id\n+     * @param roleName\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, String roleName)\n+            throws InvalidRoleNameException, ApiKeyNotFoundException {\n+        return update(id, Collections.singletonList(roleName));\n+    }\n+\n+    /**\n+     * update api key with collection of roles by key id\n+     * @param id\n+     * @param roleNames\n+     * @return\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, Collection<String> roleNames)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMDA3Nw=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjI3NjEwMA==", "bodyText": "That's great! Looks good. Very nice to have this consistent with the rest of the app now.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r402276100", "createdAt": "2020-04-02T12:31:56Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/repository/ApiKeyRepository.java", "diffHunk": "@@ -108,6 +108,44 @@ private String createApiKey() {\n         return entry;\n     }\n \n+    /**\n+     * update api key with one role by key id\n+     * @param id\n+     * @param roleName\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, String roleName)\n+            throws InvalidRoleNameException, ApiKeyNotFoundException {\n+        return update(id, Collections.singletonList(roleName));\n+    }\n+\n+    /**\n+     * update api key with collection of roles by key id\n+     * @param id\n+     * @param roleNames\n+     * @return\n+     * @throws InvalidRoleNameException if roleNames was empty or contained invalid roles\n+     * @throws ApiKeyNotFoundException if api key was not found\n+     */\n+    @CacheEvict(allEntries = true, cacheNames = { LIST_ALL_KEYS_CACHE, GET_KEY_CACHE })\n+    public PersistentApiKeyType update(long id, Collection<String> roleNames)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyMDA3Nw=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTA4NzAxOnYy", "diffSide": "RIGHT", "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjoyNzowOFrOF8u9fw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxMzowM1rOF9KGcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyODI4Nw==", "bodyText": "Looks like update targets key 60 but returns 61, is it a mistake?", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399228287", "createdAt": "2020-03-27T12:27:08Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2025,7 +2027,24 @@ curl -X GET -u <user>:<password> https://localhost:4000/api/api-key -k\n \n ```\n \n-#### 19.1.3 Revoking API keys\n+#### 19.1.3 Updating API keys\n+\n+An existing API key is updated with a `PUT` request to `/api/api-key/{id}`. Message body must contain the roles to be\n+associated with the key. Server responds with data that contains the key id and roles associated with the key.\n+\n+```\n+curl -X PUT -u <user>:<password> https://localhost:4000/api/api-key/60 --data '[\"XROAD_SECURITYSERVER_OBSERVER\",\"XROAD_REGISTRATION_OFFICER\"]' --header \"Content-Type: application/json\" -k\n+{\n+  \"id\": 61,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3Mjk0Nw==", "bodyText": "This was a mistake. It's fixed now.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399672947", "createdAt": "2020-03-28T15:13:03Z", "author": {"login": "petkivim"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2025,7 +2027,24 @@ curl -X GET -u <user>:<password> https://localhost:4000/api/api-key -k\n \n ```\n \n-#### 19.1.3 Revoking API keys\n+#### 19.1.3 Updating API keys\n+\n+An existing API key is updated with a `PUT` request to `/api/api-key/{id}`. Message body must contain the roles to be\n+associated with the key. Server responds with data that contains the key id and roles associated with the key.\n+\n+```\n+curl -X PUT -u <user>:<password> https://localhost:4000/api/api-key/60 --data '[\"XROAD_SECURITYSERVER_OBSERVER\",\"XROAD_REGISTRATION_OFFICER\"]' --header \"Content-Type: application/json\" -k\n+{\n+  \"id\": 61,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIyODI4Nw=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTEzMDg5OnYy", "diffSide": "RIGHT", "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo0MDowNlrOF8vXpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToxMzo1N1rOF9KG7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDk4Mw==", "bodyText": "Should the use case documentation also be updated, as it contains other API key related operations? https://github.com/nordic-institute/X-Road/blob/735e853ba2b24871b82606d8df77478ba2283ecb/doc/UseCases/uc-ss_x-road_use_case_model_for_security_server_management_1.4_Y-883-4.md#344-uc-ss_43-create-a-new-api-key", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399234983", "createdAt": "2020-03-27T12:40:06Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -6,7 +6,7 @@\n \n **X-ROAD 6**\n \n-Version: 2.36\n+Version: 2.38", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3MzA2OA==", "bodyText": "Yes, it should be updated too. Editing an API key is now added to the use case document.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399673068", "createdAt": "2020-03-28T15:13:57Z", "author": {"login": "petkivim"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -6,7 +6,7 @@\n \n **X-ROAD 6**\n \n-Version: 2.36\n+Version: 2.38", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTIzNDk4Mw=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ3NTE3NTY2OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ApiKeyController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QxMjo1Mjo0MVrOF8vyag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yOFQxNToyMToxNFrOF9KJwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0MTgzNA==", "bodyText": "ApiKeyNotFoundException should probably result in ResourceNotFoundException instead (see revoke)", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399241834", "createdAt": "2020-03-27T12:52:41Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ApiKeyController.java", "diffHunk": "@@ -82,6 +82,20 @@\n         return result;\n     }\n \n+    /**\n+     * update an existing api key\n+     */\n+    @RequestMapping(value = \"/{id}\", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n+    public ResponseEntity<PublicKeyData> updateKey(@PathVariable(\"id\") long id,\n+                                                          @RequestBody List<String> roles) {\n+        try {\n+            PersistentApiKeyType key = apiKeyRepository.update(id, roles);\n+            return new ResponseEntity<>(new PublicKeyData(key.getId(), key.getRoles()), HttpStatus.OK);\n+        } catch (InvalidRoleNameException | ApiKeyRepository.ApiKeyNotFoundException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTY3Mzc5Mg==", "bodyText": "Fixed.", "url": "https://github.com/nordic-institute/X-Road/pull/435#discussion_r399673792", "createdAt": "2020-03-28T15:21:14Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/controller/ApiKeyController.java", "diffHunk": "@@ -82,6 +82,20 @@\n         return result;\n     }\n \n+    /**\n+     * update an existing api key\n+     */\n+    @RequestMapping(value = \"/{id}\", method = RequestMethod.PUT, produces = MediaType.APPLICATION_JSON_UTF8_VALUE)\n+    public ResponseEntity<PublicKeyData> updateKey(@PathVariable(\"id\") long id,\n+                                                          @RequestBody List<String> roles) {\n+        try {\n+            PersistentApiKeyType key = apiKeyRepository.update(id, roles);\n+            return new ResponseEntity<>(new PublicKeyData(key.getId(), key.getRoles()), HttpStatus.OK);\n+        } catch (InvalidRoleNameException | ApiKeyRepository.ApiKeyNotFoundException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTI0MTgzNA=="}, "originalCommit": {"oid": "735e853ba2b24871b82606d8df77478ba2283ecb"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2792, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}