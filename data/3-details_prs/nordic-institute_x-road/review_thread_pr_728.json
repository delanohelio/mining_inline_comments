{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NTc5ODg5", "number": 728, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMToyMjoyMVrOErIcHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo1OTowMFrOErRdxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNjYyNDk0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMToyMjoyMVrOHdulMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo1NDo1NFrOHeQW8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzMzkzOA==", "bodyText": "Since Spring Boot has been updated to 2.3.4, this bug spring-projects/spring-boot#22566 has been fixed, and there should be no need for overriding Tomcat version anymore, so this could be removed:\next['tomcat.version'] = '9.0.37' \nWould be good to verify that the too-many-contexts-created problem is indeed fixed now.\nMore: https://jira.niis.org/browse/XRDDEV-1204?focusedCommentId=14794&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-14794\nAlso unless it was already done, effects of Spring Boot 2.3 upgrade should be tested. Some pointers from release log, may be relevant or not:\n\ndo we need to add validator starter dependency? https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#validation-starter-no-longer-included-in-web-starters\nare there any configuration properties that need to updated? Maybe run this: https://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.3-Release-Notes#configuration-properties\n\nMaybe a separate ticket for these Spring Boot 2.3.x upgrade related things would be good?", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r500933938", "createdAt": "2020-10-07T11:22:21Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/build.gradle", "diffHunk": "@@ -2,29 +2,26 @@ import org.niis.xroad.oasvalidatorplugin.Oas3ValidatorGradlePlugin\n \n buildscript {\n     ext {\n-        openapiGeneratorVersion = '4.2.0'\n-        nodePluginVersion = '1.3.1'\n+        openapiGeneratorVersion = '4.2.1'\n+        nodePluginVersion = '2.2.4'\n         nodeVersion = '12.16.3'\n         swaggerParserVersion = '2.0.21'\n     }\n     repositories {\n         mavenCentral()\n         jcenter()\n     }\n-    dependencies {\n-        classpath \"org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}\"\n-        classpath \"com.moowork.gradle:gradle-node-plugin:${nodePluginVersion}\"\n-    }\n-\n }\n \n plugins {\n-    id \"io.spring.dependency-management\"\n+    id 'io.spring.dependency-management'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4NzM0NA==", "bodyText": "There were no deprecated properties in use and all tests pass so the upgrade seems fine. I'll create a follow-up ticket about checking the too-many-contexts problem.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501487344", "createdAt": "2020-10-08T06:54:54Z", "author": {"login": "jhyoty"}, "path": "src/proxy-ui-api/build.gradle", "diffHunk": "@@ -2,29 +2,26 @@ import org.niis.xroad.oasvalidatorplugin.Oas3ValidatorGradlePlugin\n \n buildscript {\n     ext {\n-        openapiGeneratorVersion = '4.2.0'\n-        nodePluginVersion = '1.3.1'\n+        openapiGeneratorVersion = '4.2.1'\n+        nodePluginVersion = '2.2.4'\n         nodeVersion = '12.16.3'\n         swaggerParserVersion = '2.0.21'\n     }\n     repositories {\n         mavenCentral()\n         jcenter()\n     }\n-    dependencies {\n-        classpath \"org.openapitools:openapi-generator-gradle-plugin:${openapiGeneratorVersion}\"\n-        classpath \"com.moowork.gradle:gradle-node-plugin:${nodePluginVersion}\"\n-    }\n-\n }\n \n plugins {\n-    id \"io.spring.dependency-management\"\n+    id 'io.spring.dependency-management'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDkzMzkzOA=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzY5NDg3OnYy", "diffSide": "RIGHT", "path": "src/addons/proxymonitor/metaservice/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNToyNTo0MVrOHd48qA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo1MzoxNFrOHeQUJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMzc4NA==", "bodyText": "Some discussion already in slack PMs. I understand a) proxy shadow jar and b) common-util + serverconf are  not needed at the same time strictly as dependencies, but exist due to secondary technical reasons:\n\nshadow jar: parallel builds can fail without it\nIntelliJ IDEA cannot handle just the shadow jar dependency by itself\n\nMaybe consider adding some kind of comment about this? Otherwise future maintainers might not understand why this setup exists (and e.g. remove either \"redundant\" one).\nChallenge is how to do this without lots of repeats, since similar structure is used in several other places. Don't know the answer, but maybe repeats is not horribly wrong after all.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501103784", "createdAt": "2020-10-07T15:25:41Z", "author": {"login": "jansu76"}, "path": "src/addons/proxymonitor/metaservice/build.gradle", "diffHunk": "@@ -13,18 +13,23 @@ sourceSets {\n }\n \n dependencies {\n-    compile project(':common-util')\n-    compile project(':proxy')\n-    compile project(':monitor-common')\n-    compile project(':monitoring-conf')\n-    compile project(':addons:proxymonitor:common')\n-    compile 'com.google.guava:guava:29.0-jre'\n-\n-    testCompile project (path: \":proxy\", configuration: 'testArtifacts')\n-    testCompile project(':common-test')\n-    testCompile 'org.hamcrest:hamcrest:2.2'\n-    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'\n-    testCompile \"com.typesafe.akka:akka-testkit_$akkaVersion\"\n+    implementation project(':common-util')\n+    implementation project(\":serverconf\")\n+    implementation project(\":common-op-monitoring\")\n+    implementation project(path: ':proxy', configuration: 'shadow')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4NjYyOA==", "bodyText": "Added some comments. Not sure if there is an easy fix for the repeated dependencies. In this particular case, it feels wrong to make proxy a java library (since it is an application) so that its dependencies could be transitively published.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501486628", "createdAt": "2020-10-08T06:53:14Z", "author": {"login": "jhyoty"}, "path": "src/addons/proxymonitor/metaservice/build.gradle", "diffHunk": "@@ -13,18 +13,23 @@ sourceSets {\n }\n \n dependencies {\n-    compile project(':common-util')\n-    compile project(':proxy')\n-    compile project(':monitor-common')\n-    compile project(':monitoring-conf')\n-    compile project(':addons:proxymonitor:common')\n-    compile 'com.google.guava:guava:29.0-jre'\n-\n-    testCompile project (path: \":proxy\", configuration: 'testArtifacts')\n-    testCompile project(':common-test')\n-    testCompile 'org.hamcrest:hamcrest:2.2'\n-    testCompile 'com.github.stefanbirkner:system-rules:1.19.0'\n-    testCompile \"com.typesafe.akka:akka-testkit_$akkaVersion\"\n+    implementation project(':common-util')\n+    implementation project(\":serverconf\")\n+    implementation project(\":common-op-monitoring\")\n+    implementation project(path: ':proxy', configuration: 'shadow')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEwMzc4NA=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzc0MDg0OnYy", "diffSide": "RIGHT", "path": "src/monitor-common/build.gradle", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTozNTozMFrOHd5Zew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0ODo1NlrOHeQMpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTE2Mw==", "bodyText": "Is this comment change accidental? (\"implementation time\")", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501111163", "createdAt": "2020-10-07T15:35:30Z", "author": {"login": "jansu76"}, "path": "src/monitor-common/build.gradle", "diffHunk": "@@ -21,14 +21,14 @@ repositories {\n // In this section you declare the dependencies for your production and test code\n dependencies {\n \n-    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n+    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n \n-    // The production code uses the SLF4J logging API at compile time\n-    compile 'org.slf4j:slf4j-api:1.7.30'\n+    // The production code uses the SLF4J logging API at implementation time", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTkwMQ==", "bodyText": "(although I am not 100% sure about the comment even before the change...does it say something useful)", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501111901", "createdAt": "2020-10-07T15:36:30Z", "author": {"login": "jansu76"}, "path": "src/monitor-common/build.gradle", "diffHunk": "@@ -21,14 +21,14 @@ repositories {\n // In this section you declare the dependencies for your production and test code\n dependencies {\n \n-    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n+    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n \n-    // The production code uses the SLF4J logging API at compile time\n-    compile 'org.slf4j:slf4j-api:1.7.30'\n+    // The production code uses the SLF4J logging API at implementation time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTE2Mw=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4NDcwOQ==", "bodyText": "Those are some generated comments, removed.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501484709", "createdAt": "2020-10-08T06:48:56Z", "author": {"login": "jhyoty"}, "path": "src/monitor-common/build.gradle", "diffHunk": "@@ -21,14 +21,14 @@ repositories {\n // In this section you declare the dependencies for your production and test code\n dependencies {\n \n-    compile group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n+    implementation group: 'com.google.guava', name: 'guava', version: '29.0-jre'\n \n-    // The production code uses the SLF4J logging API at compile time\n-    compile 'org.slf4j:slf4j-api:1.7.30'\n+    // The production code uses the SLF4J logging API at implementation time", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExMTE2Mw=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzgxMzQwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1MToxMFrOHd6GOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0ODozOVrOHeQMPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyMjYxNg==", "bodyText": "I guess @Riippi asked about what happens if there's no changes to code, but a new vulnerability has been added to database.\nI understand it works so that gradle clean build will - naturally - do the audit check, but a gradle build when there is an earlier tracked build, will not.\nI think that the behavior feels pretty natural that way. Daily Jenkins builds will also fail if new vulnerabilities are added to database, since they do a clean build.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501122616", "createdAt": "2020-10-07T15:51:10Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/build.gradle", "diffHunk": "@@ -82,8 +77,8 @@ task checkFrontAudit(type: NpmTask, dependsOn: 'npmInstall') {\n     onlyIf {\n         !project.hasProperty('skip-frontend-build')\n     }\n-    inputs.dir(\"frontend\")\n-    outputs.dir(\"frontend/dist\")\n+    inputs.files(\"frontend/package.json\", \"frontend/audit-resolve.json\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4NDYwNA==", "bodyText": "After some reconsideration, the previous up-to-date check is (mostly) restored. Optimally, the check would depend on time and the package.json (e.g. run once a day even if there are no modifications to the dependencies).", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501484604", "createdAt": "2020-10-08T06:48:39Z", "author": {"login": "jhyoty"}, "path": "src/proxy-ui-api/build.gradle", "diffHunk": "@@ -82,8 +77,8 @@ task checkFrontAudit(type: NpmTask, dependsOn: 'npmInstall') {\n     onlyIf {\n         !project.hasProperty('skip-frontend-build')\n     }\n-    inputs.dir(\"frontend\")\n-    outputs.dir(\"frontend/dist\")\n+    inputs.files(\"frontend/package.json\", \"frontend/audit-resolve.json\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyMjYxNg=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzODEwMzc0OnYy", "diffSide": "RIGHT", "path": "src/build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNjo1OTowMFrOHd87Tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjo0NzoxMFrOHeQJog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2ODk3NA==", "bodyText": "Ran into some issues with build. Not sure if related to this task, but mentioning it anyway. This might work like this already in current develop, maybe I will check tomorrow. For me this is reproducible.\n\nclean proxy-ui-api module\n\n~/p/n/x/g/X/s/proxy-ui-api (XRDDEV-1085 \u26a1\u21a9\u2621=) ../gradlew clean\n\nBUILD SUCCESSFUL in 2s\n1 actionable task: 1 executed\n\n\n\nbuild root project -> one proxy-ui-api test fails\n\n~/p/n/x/g/X/src (XRDDEV-1085 \u26a1\u21a9\u2621=) ./gradlew build\n\n> Task :proxy-ui-api:test\n\norg.niis.xroad.restapi.openapi.ServiceDescriptionsApiControllerIntegrationTest > refreshServiceDescription FAILED\n    java.lang.AssertionError at ServiceDescriptionsApiControllerIntegrationTest.java:250\n\n\nbuild root project again -> proxy-ui-api tests now all pass. This time messagelog test fails.\n\n> Task :addons:messagelog:test\n\nee.ria.xroad.proxy.messagelog.MessageLogTest > logTimestampArchiveAndClean FAILED\n    java.lang.RuntimeException at MessageLogTest.java:514", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501168974", "createdAt": "2020-10-07T16:59:00Z", "author": {"login": "jansu76"}, "path": "src/build.gradle", "diffHunk": "@@ -3,9 +3,9 @@ buildscript {\n         jcenter()\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ4MzkzOA==", "bodyText": "I was not able to reproduce the problem.", "url": "https://github.com/nordic-institute/X-Road/pull/728#discussion_r501483938", "createdAt": "2020-10-08T06:47:10Z", "author": {"login": "jhyoty"}, "path": "src/build.gradle", "diffHunk": "@@ -3,9 +3,9 @@ buildscript {\n         jcenter()\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTE2ODk3NA=="}, "originalCommit": {"oid": "0f81ebc2466ec0c8d57cb7382e48bf0b1730b797"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2709, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}