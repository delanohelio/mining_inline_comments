{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwMTcyMzY0", "number": 452, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozMjo0NVrODwYqyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjo0MDo1M1rODwY1XA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDYyNDExOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozMjo0NVrOGDWsuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNDoxMjoxOVrOGDajWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MDgwOQ==", "bodyText": "Probably correct reaction to this, but parameter numbers warning is probably also an indication that this controller is getting too large. That's probably true, but there's not much we can do about the controller size & parameter numbers, since it is direct result of the API design.", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406170809", "createdAt": "2020-04-09T12:32:45Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -113,18 +115,20 @@\n     private final SubjectConverter subjectConverter;\n     private final TokenCertificateConverter tokenCertificateConverter;\n     private final OrphanRemovalService orphanRemovalService;\n+    private final ServiceClientConverter serviceClientConverter;\n \n     /**\n      * ClientsApiController constructor\n      */\n+    @SuppressWarnings(\"checkstyle:ParameterNumber\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzMzk0Ng==", "bodyText": "Yeah, I don't know if we can do anything (else than refactoring api) with this(?)", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406233946", "createdAt": "2020-04-09T14:12:19Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -113,18 +115,20 @@\n     private final SubjectConverter subjectConverter;\n     private final TokenCertificateConverter tokenCertificateConverter;\n     private final OrphanRemovalService orphanRemovalService;\n+    private final ServiceClientConverter serviceClientConverter;\n \n     /**\n      * ClientsApiController constructor\n      */\n+    @SuppressWarnings(\"checkstyle:ParameterNumber\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MDgwOQ=="}, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDYzMzE5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozNToyOVrOGDWyQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNDoyNjoxOFrOGE9voQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MjIyNg==", "bodyText": "Would it make sense to split AccessRightService into AccessRightService and ServiceClientService? It's quite big already.\nIf so, it probably makes sense to do it in XRDDEV-961 branch after refactoring, though.", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406172226", "createdAt": "2020-04-09T12:35:29Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjIzMzQwNA==", "bodyText": "I did think whether I should have created ServiceClientService already in this ticket (created in XRDDEV-961 -branch) but as access right logic for endpoints was also in this service class I decided to move it also here. But I guess it would sense to move the logic to ServiceClientService as this logic is a bit different.", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406233404", "createdAt": "2020-04-09T14:11:35Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MjIyNg=="}, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg1OTEwNQ==", "bodyText": "Part of the service methods are moved to ServiceClientService in XRDDEV-961", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r407859105", "createdAt": "2020-04-14T04:26:18Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MjIyNg=="}, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDYzOTA5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjozNzoxOFrOGDW18w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowNzowM1rOGDc-hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MzE3MQ==", "bodyText": "Missing javadocs, I think all public (service) methods should have ones? This one might explain the base endpoint -filtering and what it means for the caller.", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406173171", "createdAt": "2020-04-09T12:37:18Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3MzY3MQ==", "bodyText": "Added javadoc and also a brief definition of base endpoint. Also added base endpoint definition to EndpointType as it contains isBaseEndpoint-method. Don't know if this is the best place.", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406273671", "createdAt": "2020-04-09T15:07:03Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3MzE3MQ=="}, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUyMDY1MTE2OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxMjo0MDo1M1rOGDW9ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxNTowNzoxNVrOGDc_EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3NTA5OQ==", "bodyText": "It is quite clear when you read the code, and has a descriptive name, but it might make sense to add a tiny comment to explain what it does?", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406175099", "createdAt": "2020-04-09T12:40:53Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)\n+            throws ClientNotFoundException {\n+        ClientType clientType = clientRepository.getClient(clientId);\n+        if (clientType == null) {\n+            throw new ClientNotFoundException(\"Client \" + clientId.toShortString() + \" not found\");\n+        }\n+        // Filter just acls that are set to base endpoints so they are on service code level\n+        List<AccessRightType> serviceCodeLevelAcls = clientType.getAcl().stream()\n+                .filter(acl -> acl.getEndpoint().isBaseEndpoint())\n+                .collect(Collectors.toList());\n+        List<AccessRightType> distinctAccessRightTypes = distinctAccessRightTypeByXroadId(serviceCodeLevelAcls);\n+        return mapAccessRightsToAccessRightHolders(clientType, distinctAccessRightTypes);\n+    }\n+\n+    private List<AccessRightType> distinctAccessRightTypeByXroadId(List<AccessRightType> acls) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjI3MzgwOQ==", "bodyText": "Added short description", "url": "https://github.com/nordic-institute/X-Road/pull/452#discussion_r406273809", "createdAt": "2020-04-09T15:07:15Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/AccessRightService.java", "diffHunk": "@@ -96,6 +96,30 @@ public AccessRightService(LocalGroupRepository localGroupRepository, GlobalConfF\n         this.endpointService = endpointService;\n     }\n \n+    public List<AccessRightHolderDto> getAccessRightHoldersByClient(ClientId clientId)\n+            throws ClientNotFoundException {\n+        ClientType clientType = clientRepository.getClient(clientId);\n+        if (clientType == null) {\n+            throw new ClientNotFoundException(\"Client \" + clientId.toShortString() + \" not found\");\n+        }\n+        // Filter just acls that are set to base endpoints so they are on service code level\n+        List<AccessRightType> serviceCodeLevelAcls = clientType.getAcl().stream()\n+                .filter(acl -> acl.getEndpoint().isBaseEndpoint())\n+                .collect(Collectors.toList());\n+        List<AccessRightType> distinctAccessRightTypes = distinctAccessRightTypeByXroadId(serviceCodeLevelAcls);\n+        return mapAccessRightsToAccessRightHolders(clientType, distinctAccessRightTypes);\n+    }\n+\n+    private List<AccessRightType> distinctAccessRightTypeByXroadId(List<AccessRightType> acls) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjE3NTA5OQ=="}, "originalCommit": {"oid": "0374282e4059785c4b584dc515937e0886585ef6"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}