{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTEzMDU2", "number": 712, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNDo0OVrOEj-PbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxOTo0NFrOEkBzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MTU1MzczOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwOTozNDo0OVrOHSok3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo0MDoyNFrOHSu3rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMTIxMg==", "bodyText": "typo", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489301212", "createdAt": "2020-09-16T09:34:49Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "diffHunk": "@@ -206,37 +204,37 @@ export default Vue.extend({\n     };\n   },\n   computed: {\n-    hasPermission(): boolean {\n+    canImportFromToken(): boolean {\n+      // Can the user import cwrtificate from hardware token", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwNDMzMg==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489404332", "createdAt": "2020-09-16T12:40:24Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "diffHunk": "@@ -206,37 +204,37 @@ export default Vue.extend({\n     };\n   },\n   computed: {\n-    hasPermission(): boolean {\n+    canImportFromToken(): boolean {\n+      // Can the user import cwrtificate from hardware token", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTMwMTIxMg=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjEyMDc0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeyRow.vue", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxNToyNFrOHSt-Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNjo1NDowOFrOHS51tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4OTU3MA==", "bodyText": "Does this work OK if key does not yet have a defined usage (no CSRs have been created) and user has only generate_auth_cert_req permission, not generate_sign_cert_req? (there is no such role at the moment, though, which would hide the issue)", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489389570", "createdAt": "2020-09-16T12:15:24Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeyRow.vue", "diffHunk": "@@ -65,29 +63,41 @@ export default Vue.extend({\n       type: Object as Prop<Key>,\n       required: true,\n     },\n-    hasPermission: {\n-      type: Boolean,\n-    },\n     tokenLoggedIn: {\n       type: Boolean,\n     },\n   },\n-  methods: {\n-    disableGenerateCsr(key: Key): boolean {\n-      if (!this.tokenLoggedIn) {\n-        return true;\n+  computed: {\n+    showGenerateCsr(): boolean {\n+      // Check if the user has permission to see generate csr action\n+      if (this.tokenKey.usage === 'AUTHENTICATION') {\n+        return this.$store.getters.hasPermission(\n+          Permissions.GENERATE_AUTH_CERT_REQ,\n+        );\n       }\n+      // If key usage is not auth then it has to be sign\n+      return this.$store.getters.hasPermission(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwNDE5NQ==", "bodyText": "If the key doesn't have a usage type it ends up in UnknownKeysTable.vue. That doesn't use the KeyRow component.", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489404195", "createdAt": "2020-09-16T12:40:13Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeyRow.vue", "diffHunk": "@@ -65,29 +63,41 @@ export default Vue.extend({\n       type: Object as Prop<Key>,\n       required: true,\n     },\n-    hasPermission: {\n-      type: Boolean,\n-    },\n     tokenLoggedIn: {\n       type: Boolean,\n     },\n   },\n-  methods: {\n-    disableGenerateCsr(key: Key): boolean {\n-      if (!this.tokenLoggedIn) {\n-        return true;\n+  computed: {\n+    showGenerateCsr(): boolean {\n+      // Check if the user has permission to see generate csr action\n+      if (this.tokenKey.usage === 'AUTHENTICATION') {\n+        return this.$store.getters.hasPermission(\n+          Permissions.GENERATE_AUTH_CERT_REQ,\n+        );\n       }\n+      // If key usage is not auth then it has to be sign\n+      return this.$store.getters.hasPermission(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4OTU3MA=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTU4NDA1NQ==", "bodyText": "ah, gotcha \ud83d\udc4d", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489584055", "createdAt": "2020-09-16T16:54:08Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeyRow.vue", "diffHunk": "@@ -65,29 +63,41 @@ export default Vue.extend({\n       type: Object as Prop<Key>,\n       required: true,\n     },\n-    hasPermission: {\n-      type: Boolean,\n-    },\n     tokenLoggedIn: {\n       type: Boolean,\n     },\n   },\n-  methods: {\n-    disableGenerateCsr(key: Key): boolean {\n-      if (!this.tokenLoggedIn) {\n-        return true;\n+  computed: {\n+    showGenerateCsr(): boolean {\n+      // Check if the user has permission to see generate csr action\n+      if (this.tokenKey.usage === 'AUTHENTICATION') {\n+        return this.$store.getters.hasPermission(\n+          Permissions.GENERATE_AUTH_CERT_REQ,\n+        );\n       }\n+      // If key usage is not auth then it has to be sign\n+      return this.$store.getters.hasPermission(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM4OTU3MA=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjEyNjg1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxNzowMlrOHSuBzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo0ODoyMVrOHSvLUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MDU0Mg==", "bodyText": "Should be generate_sign_cert_req?", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489390542", "createdAt": "2020-09-16T12:17:02Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "diffHunk": "@@ -206,37 +204,37 @@ export default Vue.extend({\n     };\n   },\n   computed: {\n-    hasPermission(): boolean {\n+    canImportFromToken(): boolean {\n+      // Can the user import cwrtificate from hardware token\n+      return this.$store.getters.hasPermission(Permissions.IMPORT_SIGN_CERT);\n+    },\n+\n+    showRegisterCertButton(): boolean {\n+      // Decide if the user can register a certificate\n       return this.$store.getters.hasPermission(\n-        Permissions.ACTIVATE_DEACTIVATE_TOKEN,\n+        Permissions.SEND_AUTH_CERT_REG_REQ,\n       );\n     },\n-    showRegisterCertButton(): boolean {\n-      if (\n-        this.hasPermission &&\n-        this.$store.getters.hasPermission(Permissions.SEND_AUTH_CERT_REG_REQ)\n-      ) {\n-        return true;\n-      }\n-      return false;\n+\n+    canCreateAuthCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,\n+      );\n+    },\n+    canCreateSignCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwNjg3NA==", "bodyText": "Seems that these two methods are not used at all. This is checked in KeyRow component.", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489406874", "createdAt": "2020-09-16T12:44:32Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "diffHunk": "@@ -206,37 +204,37 @@ export default Vue.extend({\n     };\n   },\n   computed: {\n-    hasPermission(): boolean {\n+    canImportFromToken(): boolean {\n+      // Can the user import cwrtificate from hardware token\n+      return this.$store.getters.hasPermission(Permissions.IMPORT_SIGN_CERT);\n+    },\n+\n+    showRegisterCertButton(): boolean {\n+      // Decide if the user can register a certificate\n       return this.$store.getters.hasPermission(\n-        Permissions.ACTIVATE_DEACTIVATE_TOKEN,\n+        Permissions.SEND_AUTH_CERT_REG_REQ,\n       );\n     },\n-    showRegisterCertButton(): boolean {\n-      if (\n-        this.hasPermission &&\n-        this.$store.getters.hasPermission(Permissions.SEND_AUTH_CERT_REG_REQ)\n-      ) {\n-        return true;\n-      }\n-      return false;\n+\n+    canCreateAuthCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,\n+      );\n+    },\n+    canCreateSignCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MDU0Mg=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwOTM2MQ==", "bodyText": "I will remove these.", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489409361", "createdAt": "2020-09-16T12:48:21Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/KeysTable.vue", "diffHunk": "@@ -206,37 +204,37 @@ export default Vue.extend({\n     };\n   },\n   computed: {\n-    hasPermission(): boolean {\n+    canImportFromToken(): boolean {\n+      // Can the user import cwrtificate from hardware token\n+      return this.$store.getters.hasPermission(Permissions.IMPORT_SIGN_CERT);\n+    },\n+\n+    showRegisterCertButton(): boolean {\n+      // Decide if the user can register a certificate\n       return this.$store.getters.hasPermission(\n-        Permissions.ACTIVATE_DEACTIVATE_TOKEN,\n+        Permissions.SEND_AUTH_CERT_REG_REQ,\n       );\n     },\n-    showRegisterCertButton(): boolean {\n-      if (\n-        this.hasPermission &&\n-        this.$store.getters.hasPermission(Permissions.SEND_AUTH_CERT_REG_REQ)\n-      ) {\n-        return true;\n-      }\n-      return false;\n+\n+    canCreateAuthCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,\n+      );\n+    },\n+    canCreateSignCsr(): boolean {\n+      return this.$store.getters.hasPermission(\n+        Permissions.GENERATE_AUTH_CERT_REQ,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MDU0Mg=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjEzNjgxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/UnknownKeysTable.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjoxOTo0NFrOHSuHzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMjo0Nzo0OFrOHSvJ8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MjA3OQ==", "bodyText": "Would method name canCreateCsr be more descriptive (and same style seems to be used elsewhere)?", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489392079", "createdAt": "2020-09-16T12:19:44Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/UnknownKeysTable.vue", "diffHunk": "@@ -94,9 +94,9 @@ export default Vue.extend({\n   },\n   computed: {\n     hasPermission(): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQwOTAwOQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/712#discussion_r489409009", "createdAt": "2020-09-16T12:47:48Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/UnknownKeysTable.vue", "diffHunk": "@@ -94,9 +94,9 @@ export default Vue.extend({\n   },\n   computed: {\n     hasPermission(): boolean {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTM5MjA3OQ=="}, "originalCommit": {"oid": "de69a4d98afaacba65cb4c951bdc03fbf3abba81"}, "originalPosition": 3}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2694, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}