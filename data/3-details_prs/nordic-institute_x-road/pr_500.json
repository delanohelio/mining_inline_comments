{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE3OTU0MTI5", "number": 500, "title": "XRDDEV-1027 adding duplicate access rights for a localgroup is prevented.", "bodyText": "This was actually done already in a refactoring, but I added a couple of tests just for this.\nhttps://jira.niis.org/browse/XRDDEV-1027", "createdAt": "2020-05-14T12:11:26Z", "url": "https://github.com/nordic-institute/X-Road/pull/500", "merged": true, "mergeCommit": {"oid": "74defd8f4b133db22634f1a846479f2716e0e17d"}, "closed": true, "closedAt": "2020-05-25T06:44:48Z", "author": {"login": "TJaakkola"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABchMAJKAH2gAyNDE3OTU0MTI5OmNiODMzNDhmZGQ5ODk4MmEyODczM2RjMGNlYjM4ODI0OTYwNzBjZDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABckqQarAFqTQxNzQ4Njk1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "cb83348fdd98982a28733dc0ceb3882496070cd5", "author": {"user": {"login": "TJaakkola", "name": "Tapio Jaakkola"}}, "url": "https://github.com/nordic-institute/X-Road/commit/cb83348fdd98982a28733dc0ceb3882496070cd5", "committedDate": "2020-05-14T11:44:36Z", "message": "XRRDEV-1027: Add tests for adding duplicate accessrights for a localgroup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "123a823cd10c77c8c5b5d70e358dc7d79842d9ed", "author": {"user": {"login": "TJaakkola", "name": "Tapio Jaakkola"}}, "url": "https://github.com/nordic-institute/X-Road/commit/123a823cd10c77c8c5b5d70e358dc7d79842d9ed", "committedDate": "2020-05-14T11:59:39Z", "message": "XRDDEV-1027: improve test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2", "author": {"user": {"login": "TJaakkola", "name": "Tapio Jaakkola"}}, "url": "https://github.com/nordic-institute/X-Road/commit/10594d4a5c4a5edb318b5dad58f3ecac452908b2", "committedDate": "2020-05-14T12:10:42Z", "message": "XRDDEV-1027: improve test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MjcwNDc4", "url": "https://github.com/nordic-institute/X-Road/pull/500#pullrequestreview-415270478", "createdAt": "2020-05-20T12:15:17Z", "commit": {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxNToxN1rOGYInrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxMjoxODoxMVrOGYIu4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MDIzNw==", "bodyText": "Missing @Test annotation so the test does not actually run", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427960237", "createdAt": "2020-05-20T12:15:17Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MTk3MA==", "bodyText": "Could use fail() assertion here instead of throwing a plain Exception. It would better indicate that there was an actual assertion error and not an application error.", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427961970", "createdAt": "2020-05-20T12:17:58Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)\n     @WithMockUser(authorities = { \"VIEW_SERVICE_ACL\", \"EDIT_SERVICE_ACL\" })\n-    public void addDuplicateAccessRight() {\n+    public void addDuplicateAccessRight() throws Exception {\n         when(globalConfService.clientsExist(any())).thenReturn(true);\n         when(globalConfService.globalGroupsExist(any())).thenReturn(true);\n         List<ServiceClient> serviceClients = servicesApiController.getServiceServiceClients(\n                 TestUtils.SS1_GET_RANDOM_V1).getBody();\n         assertEquals(SS1_GET_RANDOM_SERVICE_CLIENTS, serviceClients.size());\n \n+        // add subsystem TestUtils.CLIENT_ID_SS2 as duplicate\n         ServiceClients clientsToAdd = new ServiceClients()\n                 .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_2).serviceClientType(\n                         ServiceClientType.LOCALGROUP))\n                 .addItemsItem(new ServiceClient().id(TestUtils.CLIENT_ID_SS2).serviceClientType(\n                         ServiceClientType.SUBSYSTEM));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzk2MjA4Mw==", "bodyText": "Same as above \ud83d\udc46", "url": "https://github.com/nordic-institute/X-Road/pull/500#discussion_r427962083", "createdAt": "2020-05-20T12:18:11Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/test/java/org/niis/xroad/restapi/openapi/ServicesApiControllerIntegrationTest.java", "diffHunk": "@@ -484,22 +484,45 @@ public void addAccessRights() {\n         assertEquals(calculatePrimeClientsBefore + 3, updatedServiceClients.size());\n     }\n \n-    @Test(expected = ConflictException.class)\n     @WithMockUser(authorities = { \"VIEW_SERVICE_ACL\", \"EDIT_SERVICE_ACL\" })\n-    public void addDuplicateAccessRight() {\n+    public void addDuplicateAccessRight() throws Exception {\n         when(globalConfService.clientsExist(any())).thenReturn(true);\n         when(globalConfService.globalGroupsExist(any())).thenReturn(true);\n         List<ServiceClient> serviceClients = servicesApiController.getServiceServiceClients(\n                 TestUtils.SS1_GET_RANDOM_V1).getBody();\n         assertEquals(SS1_GET_RANDOM_SERVICE_CLIENTS, serviceClients.size());\n \n+        // add subsystem TestUtils.CLIENT_ID_SS2 as duplicate\n         ServiceClients clientsToAdd = new ServiceClients()\n                 .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_2).serviceClientType(\n                         ServiceClientType.LOCALGROUP))\n                 .addItemsItem(new ServiceClient().id(TestUtils.CLIENT_ID_SS2).serviceClientType(\n                         ServiceClientType.SUBSYSTEM));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");\n+        } catch (ConflictException e) { }\n \n-        servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, clientsToAdd);\n+        // try adding duplicate local group\n+        ServiceClients existingLocalGroup = new ServiceClients()\n+                        .addItemsItem(new ServiceClient().id(TestUtils.DB_LOCAL_GROUP_ID_1).serviceClientType(\n+                        ServiceClientType.LOCALGROUP));\n+        try {\n+            servicesApiController.addServiceServiceClients(TestUtils.SS1_GET_RANDOM_V1, existingLocalGroup);\n+            throw new Exception(\"Should throw Conflict exception in stead of this\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10594d4a5c4a5edb318b5dad58f3ecac452908b2"}, "originalPosition": 32}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3270b78d134f7264fde48b73a114f4cf5401ff0d", "author": {"user": {"login": "TJaakkola", "name": "Tapio Jaakkola"}}, "url": "https://github.com/nordic-institute/X-Road/commit/3270b78d134f7264fde48b73a114f4cf5401ff0d", "committedDate": "2020-05-20T13:27:47Z", "message": "XRDDEV-1027: Fixes to tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3NDg2OTU1", "url": "https://github.com/nordic-institute/X-Road/pull/500#pullrequestreview-417486955", "createdAt": "2020-05-25T06:41:18Z", "commit": {"oid": "3270b78d134f7264fde48b73a114f4cf5401ff0d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4249, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}