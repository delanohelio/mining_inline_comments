{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzM4MDI4", "number": 397, "title": "XRDDEV-857 add client", "bodyText": "https://jira.niis.org/browse/XRDDEV-857\n\nWizard for adding a new client\nAdd key now uses a wizard that also creates a new CSR\nRemoved absolute parameter from app footer. This is a temporary solution.\n\nCreating a client doesn't work without backend changes of this PR:\n#380", "createdAt": "2020-03-02T11:44:59Z", "url": "https://github.com/nordic-institute/X-Road/pull/397", "merged": true, "mergeCommit": {"oid": "1412350efacbe8e982328f98eb7a11616a3f3905"}, "closed": true, "closedAt": "2020-04-09T05:57:46Z", "author": {"login": "Riippi"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcIHtWogH2gAyMzgyMzM4MDI4OjA4NGM5YTc2YTQzMGIwNDY1MjA2NTBiMDI4MWIxZjU1MWM0OTgwZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcV19JdgFqTM5MDUwNjQ0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "084c9a76a430b046520650b0281b1f551c4980e9", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/084c9a76a430b046520650b0281b1f551c4980e9", "committedDate": "2020-02-26T14:36:21Z", "message": "XRDDEV-857 Add localisations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "88a671d6b52036c23e80d4ab7e9e2c54b56853fe", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/88a671d6b52036c23e80d4ab7e9e2c54b56853fe", "committedDate": "2020-02-26T14:39:39Z", "message": "XRDDEV-857 Add new components"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cfcee7d114442af6854613bfbae05c471c9a796", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/5cfcee7d114442af6854613bfbae05c471c9a796", "committedDate": "2020-02-26T14:58:20Z", "message": "XRDDEV-857 Add tokens to store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fce2401705cddb8144e0c8ff00bd8cf529bc286", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/8fce2401705cddb8144e0c8ff00bd8cf529bc286", "committedDate": "2020-02-28T13:06:56Z", "message": "XRDDEV-857 Add localisations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50439a9d3ad715649b8750c4c50e820a17ecdeba", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/50439a9d3ad715649b8750c4c50e820a17ecdeba", "committedDate": "2020-02-28T13:07:40Z", "message": "XRDDEV-857 Update vuex store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1f54656e489204fccf1ec5979cb81f2c16f46364", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/1f54656e489204fccf1ec5979cb81f2c16f46364", "committedDate": "2020-02-28T13:10:35Z", "message": "XRDDEV-857 Add add client wizard pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2968241225a61553de6a38afddfc14000ca9a136", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/2968241225a61553de6a38afddfc14000ca9a136", "committedDate": "2020-02-28T13:50:59Z", "message": "XRDDEV-857 Remove unused and commented code"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ff1520861af4cf8109f0866734a0c8a1c7827f0", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/4ff1520861af4cf8109f0866734a0c8a1c7827f0", "committedDate": "2020-02-28T14:32:20Z", "message": "XRDDEV-857 Add localisations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28a36856cb5d66c9719813c570d947b17ecca133", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/28a36856cb5d66c9719813c570d947b17ecca133", "committedDate": "2020-02-28T14:32:50Z", "message": "XRDDEV-857 Update packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9305eb85c0356f13da1d895bc3bb18374cc7c52", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/d9305eb85c0356f13da1d895bc3bb18374cc7c52", "committedDate": "2020-02-28T14:33:19Z", "message": "Merge commit '0cfc24125cb16a80bf0519ef696c3e391a99334d' into XRDDEV-857-add-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7218075dd1d72505b1c220e6259eff5dbc99efa2", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/7218075dd1d72505b1c220e6259eff5dbc99efa2", "committedDate": "2020-02-28T14:56:03Z", "message": "XRDDEV-857 Update packages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0f6bb78ead9530780794c4ed0036224b1e2f3cb9", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/0f6bb78ead9530780794c4ed0036224b1e2f3cb9", "committedDate": "2020-02-28T14:56:47Z", "message": "XRDDEV-857 Fix linter errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1627765b6f4a97aff3a73201d4f5e4931b2e1600", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/1627765b6f4a97aff3a73201d4f5e4931b2e1600", "committedDate": "2020-03-02T08:31:59Z", "message": "XRDDEV-857 Clean up code from store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "83111b18af97de3d5b437b347cca81c06fb2b961", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/83111b18af97de3d5b437b347cca81c06fb2b961", "committedDate": "2020-03-02T08:33:17Z", "message": "Merge commit 'b9825736f75c0ca5fc49f3843fa24159b6082531' into XRDDEV-857-add-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca86a04578fa36e9801af0da47ea946e2670bd5a", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/ca86a04578fa36e9801af0da47ea946e2670bd5a", "committedDate": "2020-03-02T11:35:04Z", "message": "XRDDEV-857 Add shared styling for wizard pages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd0ebdebe361466bf4492999483efa8049038e00", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/cd0ebdebe361466bf4492999483efa8049038e00", "committedDate": "2020-03-02T11:35:49Z", "message": "XRDDEV-857 Update wizard buttons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bc06a460b39f2816454c5ba177cf8c0616cdbe6", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/6bc06a460b39f2816454c5ba177cf8c0616cdbe6", "committedDate": "2020-03-02T11:36:23Z", "message": "XRDDEV-857 Remove absolute style from app footer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d556b48034584af575883b7283707c579304b0d", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/0d556b48034584af575883b7283707c579304b0d", "committedDate": "2020-03-02T13:05:20Z", "message": "XRDDEV-857 Add missing scss file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3060e9343279f7fdf88c9078bb0e4f98d51b4b59", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/3060e9343279f7fdf88c9078bb0e4f98d51b4b59", "committedDate": "2020-03-02T15:13:22Z", "message": "Merge commit 'b190f27e611936ccd730baf9d83b875a770a7c29' into XRDDEV-857-add-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66a10792629d149ae63266f09e5a4247333c42a1", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/66a10792629d149ae63266f09e5a4247333c42a1", "committedDate": "2020-03-02T15:21:58Z", "message": "XRDDEV-857 Add missing localisation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3OTY3MjE5", "url": "https://github.com/nordic-institute/X-Road/pull/397#pullrequestreview-367967219", "createdAt": "2020-03-03T13:16:21Z", "commit": {"oid": "66a10792629d149ae63266f09e5a4247333c42a1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7a93f579e4280179d2d15f362e0534e3b0004320", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/7a93f579e4280179d2d15f362e0534e3b0004320", "committedDate": "2020-03-03T14:02:58Z", "message": "XRDDEV-857 Add data-test attributes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f8f3989d8f8d5fbf9996282dc3a5c7d0adc69ce", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/2f8f3989d8f8d5fbf9996282dc3a5c7d0adc69ce", "committedDate": "2020-03-13T15:08:43Z", "message": "XRDDEV-857 Add previous buttons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "663c8476e72df9d9c5f8f5db6ff4278c726eab98", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/663c8476e72df9d9c5f8f5db6ff4278c726eab98", "committedDate": "2020-03-13T15:45:04Z", "message": "XRDDEV-857 Update wizard flow"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c581a25de4e1f8ff98e0ab194cecbfb8d47b672", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/3c581a25de4e1f8ff98e0ab194cecbfb8d47b672", "committedDate": "2020-03-18T16:11:11Z", "message": "XRDDEV-857 Add token login"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a61c118815e3ec7f59ce46aa534faa486f0f06ea", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/a61c118815e3ec7f59ce46aa534faa486f0f06ea", "committedDate": "2020-03-19T11:24:41Z", "message": "Merge commit '5ee5ce2a3529df4eb90600a4be6fd07a80d4a9ab' into XRDDEV-857-add-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/frontend/package-lock.json\n#\tsrc/proxy-ui-api/frontend/src/locales/en.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7c11cdba62dfdc9c7eb810c2117a53e74315fc6", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/a7c11cdba62dfdc9c7eb810c2117a53e74315fc6", "committedDate": "2020-03-20T09:29:53Z", "message": "XRDDEV-857 Remove unused scss class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "50271e1c0242327f0a962febafd7d8d4024f9ab2", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/50271e1c0242327f0a962febafd7d8d4024f9ab2", "committedDate": "2020-03-24T12:58:52Z", "message": "Merge commit '8a4d41f03276d52e18b692f7e4ea9eb69a5914b5' into XRDDEV-857-add-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/frontend/src/store/index.ts\n#\tsrc/proxy-ui-api/frontend/src/views/KeysAndCertificates/SignAndAuthKeys/SignAndAuthKeys.vue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04f776509b82bb1f9eabb659d9f32323234705c4", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/04f776509b82bb1f9eabb659d9f32323234705c4", "committedDate": "2020-03-24T13:02:00Z", "message": "XRDDEV-857 Fix error snackbars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "465d4cafb533667af7db0e56a8059f330bffeaee", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/465d4cafb533667af7db0e56a8059f330bffeaee", "committedDate": "2020-03-25T15:46:41Z", "message": "XRDDEV-857 Clean up vuex store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a520ebdc41b56920a7de24c5328d46bc9ff8df8", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/3a520ebdc41b56920a7de24c5328d46bc9ff8df8", "committedDate": "2020-03-25T16:03:24Z", "message": "XRDDEV-857 Fixed a bug on add key dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16bf7e82d9848eda9c771d8054e6140c17c7b84c", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/16bf7e82d9848eda9c771d8054e6140c17c7b84c", "committedDate": "2020-03-30T07:10:01Z", "message": "Merge commit 'be66b217cef43d5954ca801bb41d8d4a5e85e8b6' into XRDDEV-857-add-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/frontend/audit-resolve.json\n#\tsrc/proxy-ui-api/frontend/package-lock.json"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9894b449354d8df1c66640cb388eade303e778f8", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/9894b449354d8df1c66640cb388eade303e778f8", "committedDate": "2020-04-01T13:11:08Z", "message": "XRDDEV-857 Update select client api calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1276be4e04b2d98c6751057f7e3f8112f9463930", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/1276be4e04b2d98c6751057f7e3f8112f9463930", "committedDate": "2020-04-01T13:56:00Z", "message": "XRDDEV-857 Fix build error"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29ffa253ff673fe1a3a532756ed2a803bf9d9785", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/29ffa253ff673fe1a3a532756ed2a803bf9d9785", "committedDate": "2020-04-01T16:12:31Z", "message": "XRDDEV-857 Change the way clients are passed to the dialog"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f3ef2c8af5fb664cdb1f7b451e0bf11002cc79aa", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/f3ef2c8af5fb664cdb1f7b451e0bf11002cc79aa", "committedDate": "2020-04-01T16:18:23Z", "message": "XRDDEV-857 Fix duplicate client check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3467065b2c1c012cc56d47394197ae7afb45265c", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/3467065b2c1c012cc56d47394197ae7afb45265c", "committedDate": "2020-04-02T12:47:22Z", "message": "XRDDEV-857 Add missing data-test fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31539bd3d4629a1c7009c72b17e98b2a651aee30", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/31539bd3d4629a1c7009c72b17e98b2a651aee30", "committedDate": "2020-04-06T08:50:31Z", "message": "Merge branch 'develop' into XRDDEV-857-add-client"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/9a95468cd21b15e8a13d32d346a7febf661a7e6e", "committedDate": "2020-04-06T11:51:05Z", "message": "Merge commit '2a9b88114893f1a22b091e4bc3af77029cf5a988' into XRDDEV-857-add-client\n\n# Conflicts:\n#\tsrc/proxy-ui-api/frontend/src/locales/en.json"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4OTU2MDQ3", "url": "https://github.com/nordic-institute/X-Road/pull/397#pullrequestreview-388956047", "createdAt": "2020-04-07T09:46:25Z", "commit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0NjoyNVrOGB7pVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMDozN1rOGCQX6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3ODk5Nw==", "bodyText": "I've found naming general components a bit problematic. Does the general name really tell its user what it is for and where can you use it (should it be used in some certain context - inside element with row-wrap for example)? Is this the FormLabel we can use in central server ui too?\nTo me it seems this could be used outside a form as it is basicly just div containing text and an icon. So I suggest you at least consider naming component less generally if that's possible but at least add description for the component", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404678997", "createdAt": "2020-04-07T09:46:25Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTAyNQ==", "bodyText": "Is empty methods-block necessary?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404701025", "createdAt": "2020-04-07T10:23:14Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({\n+  components: {\n+    HelpIcon,\n+  },\n+  props: {\n+    labelText: {\n+      type: String,\n+      required: true,\n+    },\n+    helpText: {\n+      type: String,\n+      required: false,\n+    },\n+  },\n+  data() {\n+    return {};\n+  },\n+  methods: {},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NzkyMw==", "bodyText": "Although the filename is rather descriptive we could add a longer description on what kind of data our stores contain. Could add description to other stores as well.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404877923", "createdAt": "2020-04-07T14:59:09Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODgwNA==", "bodyText": "I guess this is the call to findClients api that is not ready yet? You can find the correct query parameter names in the feature branch for addiotional parameters to findClients", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404908804", "createdAt": "2020-04-07T15:38:16Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxMDAyNg==", "bodyText": "Is it necessary to return the promise this api call is creating? Same goes for the previous method", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404910026", "createdAt": "2020-04-07T15:39:52Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')\n+      .then((res) => {\n+        commit('storeMembers', res.data);\n+      })\n+      .catch((error) => {\n+        throw error;\n+      });\n+  },\n+\n+  fetchReservedClients({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=true`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MjM0Nw==", "bodyText": "key?.certificates?.length > 0 // will evaluate as false if the first expression is undefined", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404992347", "createdAt": "2020-04-07T17:38:04Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDY3OA==", "bodyText": "I think this could be written with optional chaining and nullish coalescing operator:\n(cert: TokenCertificate) => cert?.owner_id.toLowerCase().includes(mysearch) ?? false;\nNot necessary to do changes, but just a heads up that you could write this in a shorter way with new ecmascript features.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404994678", "createdAt": "2020-04-07T17:41:51Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NTY3OQ==", "bodyText": "optional chaining", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404995679", "createdAt": "2020-04-07T17:43:28Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {\n+          return true;\n+        }\n+\n+        if (key.name) {\n+          return key.name.toLowerCase().includes(mysearch);\n+        }\n+        return false;\n+      });\n+      token.keys = keys;\n+    });\n+\n+    arr = arr.filter((token: Token) => {\n+      if (token.keys && token.keys.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NjE5Nw==", "bodyText": "if (key.name) block could be refactored using the same style if wanted.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404996197", "createdAt": "2020-04-07T17:44:18Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDY3OA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NzI3OQ==", "bodyText": "response is not used. no need to declare it", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404997279", "createdAt": "2020-04-07T17:46:02Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5ODg5Ng==", "bodyText": "These two consecutive dispatches made me think if we could have a better name for this resetState -keyword. resetAddClientState sounds good and clear but what does resetState do? In this context it sounds like resetting whole store but I guess that's not the case?\nCan we come up with a better name?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404998896", "createdAt": "2020-04-07T17:48:36Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMTk3MA==", "bodyText": "In this PR everywhere I see this 'feetchLocalMembers' it's handled identically: don't handle the successfull promise and catch error and dispatch showError.\nIf successfull promise handling can be omitted, could we do the same for catch block?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405001970", "createdAt": "2020-04-07T17:53:33Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMjIxNg==", "bodyText": "unused 'response'", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405002216", "createdAt": "2020-04-07T17:53:55Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+\n+      this.$store.dispatch('fetchCertificateAuthorities').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+    },\n+\n+    signKeyReady(): void {\n+      this.currentStep = 4;\n+    },\n+    csrDetailsReady(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDU1NQ==", "bodyText": "I think you should extract the contents of this if condition and make a helper function out of it instead. Optionally just extract the lambda function", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405010555", "createdAt": "2020-04-07T18:07:09Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/ClientDetailsPage.vue", "diffHunk": "@@ -0,0 +1,226 @@\n+<template>\n+  <div>\n+    <div class=\"info-block\">\n+      <div>\n+        {{$t('wizard.clientInfo1')}}\n+        <br />\n+        <br />\n+        {{$t('wizard.clientInfo2')}}\n+      </div>\n+      <div class=\"action-block\">\n+        <large-button\n+          @click=\"showSelectClient = true\"\n+          outlined\n+          data-test=\"select-client-button\"\n+        >{{$t('wizard.selectClient')}}</large-button>\n+      </div>\n+    </div>\n+\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+        <div v-if=\"selectedMember\" data-test=\"selected-member-name\">{{selectedMember.member_name}}</div>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberClass\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberClass\"\n+            data-test=\"member-class-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberCode\"\n+            data-test=\"member-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.subsystemCode\" helpText=\"wizard.client.subsystemCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"subsystemCode\"\n+            data-test=\"subsystem-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+      <div class=\"button-footer\">\n+        <div class=\"button-group\">\n+          <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+        </div>\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"invalid || duplicateClient\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </ValidationObserver>\n+\n+    <SelectClientDialog\n+      :dialog=\"showSelectClient\"\n+      :selectableClients=\"selectableClients\"\n+      @cancel=\"showSelectClient = false\"\n+      @save=\"saveSelectedClient\"\n+    />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SelectClientDialog from './SelectClientDialog.vue';\n+import { Client } from '@/types';\n+\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['reservedClients', 'selectableClients']),\n+\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTQ0Nw==", "bodyText": "unused response", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405011447", "createdAt": "2020-04-07T18:08:37Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTU1MA==", "bodyText": "unused response", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405011550", "createdAt": "2020-04-07T18:08:46Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {\n+          this.generateCsr();\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+          this.disableCancel = false;\n+        },\n+      );\n+    },\n+\n+    generateCsr(): void {\n+      const tokenId = this.$store.getters.csrTokenId;\n+\n+      this.$store.dispatch('generateKeyAndCsr', tokenId).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMjk2Mw==", "bodyText": "data-test missing", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405012963", "createdAt": "2020-04-07T18:11:15Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/GenerateCsrPage.vue", "diffHunk": "@@ -0,0 +1,99 @@\n+<template>\n+  <div>\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div v-for=\"item in csrForm\" v-bind:key=\"item.id\" class=\"row-wrap\">\n+        <div class=\"label\">{{$t('certificateProfile.' + item.label_key)}}</div>\n+\n+        <div>\n+          <ValidationProvider\n+            :name=\"item.id\"\n+            :rules=\"(item.required) && 'required' \"\n+            v-slot=\"{ errors }\"\n+          >\n+            <v-text-field", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTA3Ng==", "bodyText": "I think you can use optional chaining here", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405015076", "createdAt": "2020-04-07T18:14:47Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTYzMw==", "bodyText": "optional chaining here and next if condition", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405015633", "createdAt": "2020-04-07T18:15:41Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">\n+              <tr v-for=\"member in filteredMembers()\" v-bind:key=\"member.id\">\n+                <td class=\"checkbox-column\">\n+                  <div class=\"checkbox-wrap\">\n+                    <v-radio :key=\"member.id\" :value=\"member\"></v-radio>\n+                  </div>\n+                </td>\n+\n+                <td>{{member.member_name}}</td>\n+                <td>{{member.id}}</td>\n+              </tr>\n+            </tbody>\n+          </table>\n+        </v-radio-group>\n+\n+        <div v-if=\"filteredMembers().length < 1\" class=\"empty-row\">\n+          <p>{{$t('localGroup.noResults')}}</p>\n+        </div>\n+      </v-card-text>\n+      <v-card-actions class=\"xrd-card-actions\">\n+        <v-spacer></v-spacer>\n+\n+        <large-button\n+          class=\"button-margin\"\n+          outlined\n+          @click=\"cancel()\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+\n+        <large-button\n+          :disabled=\"!selectedMember\"\n+          @click=\"save()\"\n+          data-test=\"save-button\"\n+        >{{$t('localGroup.addSelected')}}</large-button>\n+      </v-card-actions>\n+    </v-card>\n+  </v-dialog>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { Client } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+  },\n+  props: {\n+    dialog: {\n+      type: Boolean,\n+      required: true,\n+    },\n+    selectableClients: {\n+      type: Array,\n+      required: true,\n+    },\n+  },\n+\n+  data() {\n+    return {\n+      search: '',\n+      selectedMember: undefined,\n+    };\n+  },\n+  methods: {\n+    filteredMembers() {\n+      if (!this.search) {\n+        return this.selectableClients;\n+      }\n+\n+      const tempSearch = this.search\n+        .toString()\n+        .toLowerCase()\n+        .trim();\n+      if (tempSearch === '') {\n+        return this.selectableClients;\n+      }\n+\n+      return this.selectableClients.filter((member: any) => {\n+        if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNjQzMg==", "bodyText": "data-test missing", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405016432", "createdAt": "2020-04-07T18:17:08Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNzIyMg==", "bodyText": "maybe just\nreturn this.tokens.lenght === 1; :)", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405017222", "createdAt": "2020-04-07T18:18:24Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxODYwMQ==", "bodyText": "I think this could also be written as oneliner instead:\nreturn this.tokenGroup ? false : true;", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405018601", "createdAt": "2020-04-07T18:20:37Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;\n+    },\n+\n+    disableNext() {\n+      if (this.tokenGroup) {\n+        return false;\n+      }\n+      return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 99}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6cc555df537473d85b3ae7b5ee6786f19939f853", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/6cc555df537473d85b3ae7b5ee6786f19939f853", "committedDate": "2020-04-08T10:18:10Z", "message": "XRDDEV-857 Fixes for PR issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6009df1d5a2fc8ca9eccb19d959a7453893b1f0", "author": {"user": {"login": "Riippi", "name": "Mikko Riippi"}}, "url": "https://github.com/nordic-institute/X-Road/commit/f6009df1d5a2fc8ca9eccb19d959a7453893b1f0", "committedDate": "2020-04-08T16:45:53Z", "message": "XRDDEV-857 Fix missing PR issues"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNDgxNDMx", "url": "https://github.com/nordic-institute/X-Road/pull/397#pullrequestreview-390481431", "createdAt": "2020-04-09T04:21:25Z", "commit": {"oid": "f6009df1d5a2fc8ca9eccb19d959a7453893b1f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkwNTA2NDQ3", "url": "https://github.com/nordic-institute/X-Road/pull/397#pullrequestreview-390506447", "createdAt": "2020-04-09T05:50:15Z", "commit": {"oid": "f6009df1d5a2fc8ca9eccb19d959a7453893b1f0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4347, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}