{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI1MDk5OTMz", "number": 790, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzo0Nzo0MlrOE8johw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzo0OTozMFrOE8jq7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTMzODMxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzo0Nzo0MlrOH4vstw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQxMDo0MTo0N1rOH46KTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2Mzc5OQ==", "bodyText": "Such a small change, yet I spent a long time in a rabbit hole, thinking about it....\nNull vs empty string for \"value does not exist\"\nLooks like this detail has not had enough attention. Current develop is a bit inconsistent in this. For example adding a new key (only key, without CSR) - which UI does not use - with POST /tokens/:id/keys allows both null and \"\" for key label. These go into database accordingly, as either null or empty string.\nServiceDescription.disabled_notice works the same way. Using API you can set it to null or empty string.\nOr UI currently sets empty strings for disabled_notice, and key label (when a different endpoint is used).\nSince there does not seem to be semantic difference between null and empty label, it is a bit bad that we offer API users possibility of setting either value. It would be better if null / empty string handling was consistent, and we picked one of the 2 options.\nThis PR opted for using empty strings, I would actually recommend using nulls instead. I think null more accurately represents the semantics of \"no disabled notice\", \"no key label\", \"no value present for xyz\". But regardless of which one we pick, consistency and predictability is the most important thing.\nBesides key label and service description disabled notice, there may be other properties to go through as well. Based on a quick check, there are nullable varchar fields in tables identifier, service, tsp and locale too. And some may not be about database tables (like key.label)\nOne aspect is that old application used empty strings instead of nulls in DB, for disabled_notice at least. And we probably have both nulls and empty strings stored. But the API does not have to use the same mapping (null vs \"\") and it can (and probably should) also work so that it writes one style, and reads both styles.\nAPI versioning\nIf we change the API regarding this, we may be making breaking changes. This PR made null KeyLabel.label forbidden, it would break some API client that was using nulls for KeyLabel.label. Likewise if we refactor key label and service description disabled_notice and possibly some other properties too so that empty strings are forbidden and you should use nulls instead, we would break some API clients that were using empty strings.\nIn principle we should release a v2 of the API, or do something else to take care of versioning.  Not sure if this detail is so insignificant that we would instead break the principle.\nWrap up\nMaybe could consider removing API change from this PR and creating a separate ticket for making a more system-wide solution to handling of nulls vs empty strings.", "url": "https://github.com/nordic-institute/X-Road/pull/790#discussion_r529263799", "createdAt": "2020-11-24T07:47:42Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -6020,13 +6020,16 @@ components:\n         name: my-key-0\n     KeyLabel: # ok\n       type: object\n+      required:\n+        - label\n       properties:\n         label:\n           type: string\n           format: text\n           description: label for the new key\n-          minLength: 1\n+          minLength: 0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca46c30c852fc43c8e42b87dadb23ca6f9c4f593"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4MzMwMQ==", "bodyText": "Thanks for raising some very good points. I agree that all the endpoints should follow the same approach consistently regardless of which alternative is eventually chosen. I reverted the API design related changes implemented in this task.\nLet's create a separate ticket for making a system-wide solution to handling of nulls vs empty strings.", "url": "https://github.com/nordic-institute/X-Road/pull/790#discussion_r529383301", "createdAt": "2020-11-24T09:59:05Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -6020,13 +6020,16 @@ components:\n         name: my-key-0\n     KeyLabel: # ok\n       type: object\n+      required:\n+        - label\n       properties:\n         label:\n           type: string\n           format: text\n           description: label for the new key\n-          minLength: 1\n+          minLength: 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2Mzc5OQ=="}, "originalCommit": {"oid": "ca46c30c852fc43c8e42b87dadb23ca6f9c4f593"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTQzNTIxNQ==", "bodyText": "I created separate ticket for that: https://jira.niis.org/browse/XRDDEV-1500", "url": "https://github.com/nordic-institute/X-Road/pull/790#discussion_r529435215", "createdAt": "2020-11-24T10:41:47Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -6020,13 +6020,16 @@ components:\n         name: my-key-0\n     KeyLabel: # ok\n       type: object\n+      required:\n+        - label\n       properties:\n         label:\n           type: string\n           format: text\n           description: label for the new key\n-          minLength: 1\n+          minLength: 0", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2Mzc5OQ=="}, "originalCommit": {"oid": "ca46c30c852fc43c8e42b87dadb23ca6f9c4f593"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxOTM0NDQ0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/KeyDetails/KeyDetails.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwNzo0OTozMFrOH4vwbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNFQwOTo1OTozOFrOH43CGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2NDc1MA==", "bodyText": "This does not actually check for nulls but instead undefineds. Still it does work in practice.\nThere is also helpers.ts#isEmpty that could be used for this kind of check.", "url": "https://github.com/nordic-institute/X-Road/pull/790#discussion_r529264750", "createdAt": "2020-11-24T07:49:30Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/src/views/KeyDetails/KeyDetails.vue", "diffHunk": "@@ -295,7 +295,7 @@ export default Vue.extend({\n         .finally(() => (this.deleting = false));\n     },\n     setKeyName(): void {\n-      if (this.key.name === '') {\n+      if (this.key.name === undefined || this.key.name === '') {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ca46c30c852fc43c8e42b87dadb23ca6f9c4f593"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTM4Mzk2Mw==", "bodyText": "Changed this to helpers.ts#isEmpty.", "url": "https://github.com/nordic-institute/X-Road/pull/790#discussion_r529383963", "createdAt": "2020-11-24T09:59:38Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/frontend/src/views/KeyDetails/KeyDetails.vue", "diffHunk": "@@ -295,7 +295,7 @@ export default Vue.extend({\n         .finally(() => (this.deleting = false));\n     },\n     setKeyName(): void {\n-      if (this.key.name === '') {\n+      if (this.key.name === undefined || this.key.name === '') {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyOTI2NDc1MA=="}, "originalCommit": {"oid": "ca46c30c852fc43c8e42b87dadb23ca6f9c4f593"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2653, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}