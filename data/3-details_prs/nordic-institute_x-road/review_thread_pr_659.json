{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwNzQ3MDA3", "number": 659, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTowNDo0OFrOEaa-5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTo1MjowNVrOEbamlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MTQwNTE3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/TokenService.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwOTowNDo0OFrOHD18Aw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQxMDo0MDoxMVrOHEob8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MTQ5MQ==", "bodyText": "This would cause NPE in InitializationService if null, is that intentional?\n    boolean isSoftwareTokenInitialized = tokenService.isSoftwareTokenInitialized();\n\nRather than return Boolean.TRUE, Boolean.FALSE or null, maybe consider returning an enum with 3 values. Or just catch exceptions in upper layer and handle them there. I think it might be more explicit and make it less likely that someone misuses the return value.\nThis seems to come down to the question you asked\n\nshould the getAllTokens method actually throw a checked exception instead of a runtime exception if signer is unresponsive\n\nIf we want to handle the exception properly on upper layers, then the checked exception would help this a lot. I guess the reasoning behind throw new RuntimeException(\"could not list all tokens\") was assumption that no one really wants to do anything else than http 500 when that happens. And now we do.\nSo there's also the possibility of changing signer communication problems into checked exceptions. But not sure if that's in scope of this ticket. Or, just keep those as RuntimeExceptions and fix the NPE by maybe changing the return value to enum?", "url": "https://github.com/nordic-institute/X-Road/pull/659#discussion_r473791491", "createdAt": "2020-08-20T09:04:48Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/TokenService.java", "diffHunk": "@@ -328,12 +328,19 @@ public TokenInfoAndKeyId getTokenAndKeyIdForCertificateHash(String hash) throws\n     }\n \n     /**\n-     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED\n-     * @return\n+     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED.\n+     * If an exception is thrown when querying signer for the tokens, a null status will be returned\n+     * @return true/false/null\n      */\n-    public boolean isSoftwareTokenInitialized() {\n+    public Boolean isSoftwareTokenInitialized() {\n         boolean isSoftwareTokenInitialized = false;\n-        List<TokenInfo> tokens = getAllTokens();\n+        List<TokenInfo> tokens = null;\n+        try {\n+            tokens = getAllTokens();\n+        } catch (Exception e) {\n+            log.error(\"Could not get software token status from signer\", e);\n+            return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0bbada6cd9eb885b76fed530aa56f094c8dae6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA1MTIyNA==", "bodyText": "Created a new method that returns the state of a token as an enum value in the TokenService. The login now works fine and the init status api returns the SoftwareTokenInitStatus as UNKNOWN.\nThere is still one problem when getting clients from the api while signer is down: the user only gets a { status: 500 } response. This happens because the clients api uses request scoped beans and if creating those beans fails the SignerNotReachableException gets nested in Spring's internal exceptions such as BeanCreationException and BeanInstantiationException. I'll try to include a fix for that in this PR", "url": "https://github.com/nordic-institute/X-Road/pull/659#discussion_r474051224", "createdAt": "2020-08-20T15:01:44Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/TokenService.java", "diffHunk": "@@ -328,12 +328,19 @@ public TokenInfoAndKeyId getTokenAndKeyIdForCertificateHash(String hash) throws\n     }\n \n     /**\n-     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED\n-     * @return\n+     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED.\n+     * If an exception is thrown when querying signer for the tokens, a null status will be returned\n+     * @return true/false/null\n      */\n-    public boolean isSoftwareTokenInitialized() {\n+    public Boolean isSoftwareTokenInitialized() {\n         boolean isSoftwareTokenInitialized = false;\n-        List<TokenInfo> tokens = getAllTokens();\n+        List<TokenInfo> tokens = null;\n+        try {\n+            tokens = getAllTokens();\n+        } catch (Exception e) {\n+            log.error(\"Could not get software token status from signer\", e);\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MTQ5MQ=="}, "originalCommit": {"oid": "7b0bbada6cd9eb885b76fed530aa56f094c8dae6"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDYxODg2Ng==", "bodyText": "Added custom exception handling for BeanCreationException here.\nReady for review again.", "url": "https://github.com/nordic-institute/X-Road/pull/659#discussion_r474618866", "createdAt": "2020-08-21T10:40:11Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/TokenService.java", "diffHunk": "@@ -328,12 +328,19 @@ public TokenInfoAndKeyId getTokenAndKeyIdForCertificateHash(String hash) throws\n     }\n \n     /**\n-     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED\n-     * @return\n+     * Whether or not a software token exists AND it's status != TokenStatusInfo.NOT_INITIALIZED.\n+     * If an exception is thrown when querying signer for the tokens, a null status will be returned\n+     * @return true/false/null\n      */\n-    public boolean isSoftwareTokenInitialized() {\n+    public Boolean isSoftwareTokenInitialized() {\n         boolean isSoftwareTokenInitialized = false;\n-        List<TokenInfo> tokens = getAllTokens();\n+        List<TokenInfo> tokens = null;\n+        try {\n+            tokens = getAllTokens();\n+        } catch (Exception e) {\n+            log.error(\"Could not get software token status from signer\", e);\n+            return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc5MTQ5MQ=="}, "originalCommit": {"oid": "7b0bbada6cd9eb885b76fed530aa56f094c8dae6"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk3MTgyODY5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/exceptions/ApplicationExceptionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNTo1MjowNVrOHFVe-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNjoyOTowNlrOHFWNRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1NjkyMg==", "bodyText": "I think it would be good to explain why we do this. What is the special bond between BeanCreationExceptions and SignerNotReachableExceptions? Otherwise some future developer will be confused.", "url": "https://github.com/nordic-institute/X-Road/pull/659#discussion_r475356922", "createdAt": "2020-08-24T05:52:05Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/exceptions/ApplicationExceptionHandler.java", "diffHunk": "@@ -93,4 +99,24 @@\n         log.error(\"exception caught\", e);\n         return exceptionTranslator.toResponseEntity(e, HttpStatus.FORBIDDEN);\n     }\n+\n+    /**\n+     * check for nested SignerNotReachable exception when BeanCreationException is caught", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "38177d5c1ac45fea62373c6d5311f2552821876b"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM2ODc3Mw==", "bodyText": "Added better documentation here", "url": "https://github.com/nordic-institute/X-Road/pull/659#discussion_r475368773", "createdAt": "2020-08-24T06:29:06Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/exceptions/ApplicationExceptionHandler.java", "diffHunk": "@@ -93,4 +99,24 @@\n         log.error(\"exception caught\", e);\n         return exceptionTranslator.toResponseEntity(e, HttpStatus.FORBIDDEN);\n     }\n+\n+    /**\n+     * check for nested SignerNotReachable exception when BeanCreationException is caught", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM1NjkyMg=="}, "originalCommit": {"oid": "38177d5c1ac45fea62373c6d5311f2552821876b"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2681, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}