{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyMzM4MDI4", "number": 397, "reviewThreads": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0NjoyNVrODve7Qw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMDozN1rODvr2Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTE2MzU1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0NjoyNVrOGB7pVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTozMTowMVrOGCm64A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3ODk5Nw==", "bodyText": "I've found naming general components a bit problematic. Does the general name really tell its user what it is for and where can you use it (should it be used in some certain context - inside element with row-wrap for example)? Is this the FormLabel we can use in central server ui too?\nTo me it seems this could be used outside a form as it is basicly just div containing text and an icon. So I suggest you at least consider naming component less generally if that's possible but at least add description for the component", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404678997", "createdAt": "2020-04-07T09:46:25Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM4ODAwMA==", "bodyText": "Added a description. I am also thinking about rename this component, but that will happen a bit later on another task.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405388000", "createdAt": "2020-04-08T09:31:01Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3ODk5Nw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTMwMDc5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMDoyMzoxNFrOGB8_YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NTo1NlrOGCRUAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTAyNQ==", "bodyText": "Is empty methods-block necessary?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404701025", "createdAt": "2020-04-07T10:23:14Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({\n+  components: {\n+    HelpIcon,\n+  },\n+  props: {\n+    labelText: {\n+      type: String,\n+      required: true,\n+    },\n+    helpText: {\n+      type: String,\n+      required: false,\n+    },\n+  },\n+  data() {\n+    return {};\n+  },\n+  methods: {},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMzk4Ng==", "bodyText": "Removed.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405033986", "createdAt": "2020-04-07T18:45:56Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/components/ui/FormLabel.vue", "diffHunk": "@@ -0,0 +1,41 @@\n+<template>\n+  <div class=\"label\">\n+    {{$t(labelText)}}\n+    <helpIcon v-if=\"helpText\" :text=\"$t(helpText)\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+\n+export default Vue.extend({\n+  components: {\n+    HelpIcon,\n+  },\n+  props: {\n+    labelText: {\n+      type: String,\n+      required: true,\n+    },\n+    helpText: {\n+      type: String,\n+      required: false,\n+    },\n+  },\n+  data() {\n+    return {};\n+  },\n+  methods: {},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDcwMTAyNQ=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjQxMTgzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1OTowOVrOGCHyYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDoxOTo0NFrOGCouVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NzkyMw==", "bodyText": "Although the filename is rather descriptive we could add a longer description on what kind of data our stores contain. Could add description to other stores as well.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404877923", "createdAt": "2020-04-07T14:59:09Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNzU1Nw==", "bodyText": "Added description comment.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405417557", "createdAt": "2020-04-08T10:19:44Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NzkyMw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjYwNTI5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTozODoxNlrOGCJrBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDoxOTo0OVrOGCouiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODgwNA==", "bodyText": "I guess this is the call to findClients api that is not ready yet? You can find the correct query parameter names in the feature branch for addiotional parameters to findClients", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404908804", "createdAt": "2020-04-07T15:38:16Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNzYxMQ==", "bodyText": "As discussed this is now left a it is and fixed later if needed.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405417611", "createdAt": "2020-04-08T10:19:49Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkwODgwNA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMjYxMjk3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNTozOTo1MlrOGCJvyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDoxOTo1NVrOGCoutw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxMDAyNg==", "bodyText": "Is it necessary to return the promise this api call is creating? Same goes for the previous method", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404910026", "createdAt": "2020-04-07T15:39:52Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')\n+      .then((res) => {\n+        commit('storeMembers', res.data);\n+      })\n+      .catch((error) => {\n+        throw error;\n+      });\n+  },\n+\n+  fetchReservedClients({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=true`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQxNzY1NQ==", "bodyText": "I have been doing that for all vuex actions that make api calls, to keep it consistent. In many cases the promise is needed in the component to show loading spinners, snackbars etc.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405417655", "createdAt": "2020-04-08T10:19:55Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -0,0 +1,143 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Token, Client } from '@/types';\n+import * as api from '@/util/api';\n+\n+\n+export interface AddClientState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  tokenId: string | undefined;\n+  selectableClients: Client[];\n+  reservedClients: Client[];\n+  selectedMember: Client;\n+  memberClass: string;\n+  memberCode: string;\n+  subsystemCode: string | undefined;\n+\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    expandedTokens: [],\n+    tokens: [],\n+    selectableClients: [],\n+    reservedClients: [],\n+    selectedMember: { member_class: '', member_code: '', subsystem_code: '' },\n+    memberClass: '',\n+    memberCode: '',\n+    subsystemCode: undefined,\n+    tokenId: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const tokensState: AddClientState = getDefaultState();\n+\n+\n+export const getters: GetterTree<AddClientState, RootState> = {\n+\n+  selectableClients(state: AddClientState): Client[] {\n+    return state.selectableClients;\n+  },\n+  memberClass(state: AddClientState): string {\n+    return state.memberClass;\n+  },\n+  memberCode(state: AddClientState): string {\n+    return state.memberCode;\n+  },\n+  subsystemCode(state: AddClientState): string | undefined {\n+    return state.subsystemCode;\n+  },\n+  selectedMember(state: AddClientState): Client | undefined {\n+    return state.selectedMember;\n+  },\n+  reservedClients(state: AddClientState): Client[] {\n+    return state.reservedClients;\n+  },\n+};\n+\n+export const mutations: MutationTree<AddClientState> = {\n+  resetAddClientState(state: AddClientState) {\n+    Object.assign(state, getDefaultState());\n+  },\n+  setMember(state: AddClientState, member: Client) {\n+    state.selectedMember = member;\n+    state.memberClass = member.member_class;\n+    state.memberCode = member.member_code;\n+    state.subsystemCode = member.subsystem_code;\n+  },\n+  setMemberClass(state: AddClientState, val: string) {\n+    state.memberClass = val;\n+  },\n+  setMemberCode(state: AddClientState, val: string) {\n+    state.memberCode = val;\n+  },\n+  setSubsystemCode(state: AddClientState, val: string) {\n+    state.subsystemCode = val;\n+  },\n+  storeMembers(state: AddClientState, clients: Client[]) {\n+    state.selectableClients = clients;\n+  },\n+  storeReservedClients(state: AddClientState, clients: Client[]) {\n+    state.reservedClients = clients;\n+  },\n+};\n+\n+export const actions: ActionTree<AddClientState, RootState> = {\n+  resetAddClientState({ commit }) {\n+    commit('resetAddClientState');\n+  },\n+\n+  fetchSelectableClients({ commit, rootGetters }, id: string) {\n+    // Fetch clients from backend that can be selected\n+    return api.get('/clients?is_not_local_client=true&member_missing_sign_cert=true')\n+      .then((res) => {\n+        commit('storeMembers', res.data);\n+      })\n+      .catch((error) => {\n+        throw error;\n+      });\n+  },\n+\n+  fetchReservedClients({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=true`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDkxMDAyNg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzEyMDAwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzozODowNFrOGCOxWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNToxOVrOGCzk-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MjM0Nw==", "bodyText": "key?.certificates?.length > 0 // will evaluate as false if the first expression is undefined", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404992347", "createdAt": "2020-04-07T17:38:04Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NTM4Ng==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405595386", "createdAt": "2020-04-08T15:05:19Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5MjM0Nw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzEzNDc5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0MTo1MVrOGCO6dg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyNTowNlrOGCxw2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDY3OA==", "bodyText": "I think this could be written with optional chaining and nullish coalescing operator:\n(cert: TokenCertificate) => cert?.owner_id.toLowerCase().includes(mysearch) ?? false;\nNot necessary to do changes, but just a heads up that you could write this in a shorter way with new ecmascript features.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404994678", "createdAt": "2020-04-07T17:41:51Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NjE5Nw==", "bodyText": "if (key.name) block could be refactored using the same style if wanted.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404996197", "createdAt": "2020-04-07T17:44:18Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDY3OA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NTY1OA==", "bodyText": "Roger that", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405565658", "createdAt": "2020-04-08T14:25:06Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NDY3OA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE0MDc5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0MzoyOFrOGCO-Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyMzozMlrOGCxsWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NTY3OQ==", "bodyText": "optional chaining", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404995679", "createdAt": "2020-04-07T17:43:28Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {\n+          return true;\n+        }\n+\n+        if (key.name) {\n+          return key.name.toLowerCase().includes(mysearch);\n+        }\n+        return false;\n+      });\n+      token.keys = keys;\n+    });\n+\n+    arr = arr.filter((token: Token) => {\n+      if (token.keys && token.keys.length > 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NDUwNw==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405564507", "createdAt": "2020-04-08T14:23:32Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/tokens.ts", "diffHunk": "@@ -0,0 +1,203 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import { Key, Token, TokenType, TokenCertificate } from '@/types';\n+import axios from 'axios';\n+import _ from 'lodash';\n+import * as api from '@/util/api';\n+\n+\n+export interface TokensState {\n+  expandedTokens: string[];\n+  tokens: Token[];\n+  selectedToken: Token | undefined;\n+}\n+\n+export const tokensState: TokensState = {\n+  expandedTokens: [],\n+  tokens: [],\n+  selectedToken: undefined,\n+};\n+\n+export const tokensGetters: GetterTree<TokensState, RootState> = {\n+  tokenExpanded: (state) => (id: string) => {\n+    return state.expandedTokens.includes(id);\n+  },\n+  tokens(state): Token[] {\n+    return state.tokens;\n+  },\n+  sortedTokens(state): Token[] {\n+\n+    if (!state.tokens || state.tokens.length === 0) {\n+      return [];\n+    }\n+\n+    // Sort array by id:s so it doesn't jump around. Order of items in the backend reply changes between requests.\n+    const arr = _.cloneDeep(state.tokens).sort((a: Token, b: Token) => {\n+      if (a.id < b.id) {\n+        return -1;\n+      }\n+      if (a.id > b.id) {\n+        return 1;\n+      }\n+\n+      // equal id:s. (should not happen)\n+      return 0;\n+    });\n+\n+    return arr;\n+\n+  },\n+  selectedToken(state): Token | undefined {\n+    return state.selectedToken;\n+  },\n+  filteredTokens: (state, getters) => (search: string) => {\n+    // Filter term is applied to token namem key name and certificate owner id\n+    let arr = _.cloneDeep(getters.sortedTokens);\n+\n+    if (!search) {\n+      return arr;\n+    }\n+\n+    const mysearch = search.toLowerCase();\n+\n+    if (mysearch.length < 1) {\n+      return state.tokens;\n+    }\n+\n+    arr.forEach((token: Token) => {\n+      token.keys.forEach((key: Key) => {\n+        const certs = key.certificates.filter((cert: TokenCertificate) => {\n+          if (cert.owner_id) {\n+            return cert.owner_id.toLowerCase().includes(mysearch);\n+          }\n+          return false;\n+        });\n+        key.certificates = certs;\n+      });\n+    });\n+\n+    arr.forEach((token: Token) => {\n+      const keys = token.keys.filter((key: Key) => {\n+        if (key.certificates && key.certificates.length > 0) {\n+          return true;\n+        }\n+\n+        if (key.name) {\n+          return key.name.toLowerCase().includes(mysearch);\n+        }\n+        return false;\n+      });\n+      token.keys = keys;\n+    });\n+\n+    arr = arr.filter((token: Token) => {\n+      if (token.keys && token.keys.length > 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NTY3OQ=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 94}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE1MDYxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0NjowMlrOGCPEnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyMzoyN1rOGCxsLw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NzI3OQ==", "bodyText": "response is not used. no need to declare it", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404997279", "createdAt": "2020-04-07T17:46:02Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 138}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NDQ2Mw==", "bodyText": "Removed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405564463", "createdAt": "2020-04-08T14:23:27Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5NzI3OQ=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE2MDU3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo0ODozNlrOGCPK8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyMzoyNFrOGCxsBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5ODg5Ng==", "bodyText": "These two consecutive dispatches made me think if we could have a better name for this resetState -keyword. resetAddClientState sounds good and clear but what does resetState do? In this context it sounds like resetting whole store but I guess that's not the case?\nCan we come up with a better name?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r404998896", "createdAt": "2020-04-07T17:48:36Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NDQyMg==", "bodyText": "Yes we can. Fixed.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405564422", "createdAt": "2020-04-08T14:23:24Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDk5ODg5Ng=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 147}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE3ODg0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1MzozM1rOGCPW8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyMzoxN1rOGCxrvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMTk3MA==", "bodyText": "In this PR everywhere I see this 'feetchLocalMembers' it's handled identically: don't handle the successfull promise and catch error and dispatch showError.\nIf successfull promise handling can be omitted, could we do the same for catch block?", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405001970", "createdAt": "2020-04-07T17:53:33Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 159}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NDM0OQ==", "bodyText": "Successful result is handled in the vuex. Error is handled on the \"ui side\" because it does something visible --> launches the snackbar. Trying to separate the store stuff from ui. Though currently it's more philosophical thing because the snackbar is also called via vuex.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405564349", "createdAt": "2020-04-08T14:23:17Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMTk3MA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 159}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzE4MDI0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNzo1Mzo1NVrOGCPX6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNDoyNToyM1rOGCxxog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMjIxNg==", "bodyText": "unused 'response'", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405002216", "createdAt": "2020-04-07T17:53:55Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+\n+      this.$store.dispatch('fetchCertificateAuthorities').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+    },\n+\n+    signKeyReady(): void {\n+      this.currentStep = 4;\n+    },\n+    csrDetailsReady(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU2NTg1OA==", "bodyText": "removed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405565858", "createdAt": "2020-04-08T14:25:23Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/AddClient.vue", "diffHunk": "@@ -1,56 +1,231 @@\n+\n <template>\n-  <v-stepper :alt-labels=\"true\" v-model=\"e1\" class=\"stepper\">\n-    <v-stepper-header>\n-      <v-stepper-step :complete=\"e1 > 1\" step=\"1\">Member details</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step :complete=\"e1 > 2\" step=\"2\">Get Sign Key</v-stepper-step>\n-      <v-divider></v-divider>\n-      <v-stepper-step step=\"3\">Subsystem Name</v-stepper-step>\n-    </v-stepper-header>\n-\n-    <v-stepper-items>\n-      <v-stepper-content step=\"1\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"2\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 3\">Continue</v-btn>\n-      </v-stepper-content>\n-\n-      <v-stepper-content step=\"3\">\n-        <v-card class=\"mb-5\" color=\"grey lighten-2\" height=\"250px\"></v-card>\n-        <v-btn text rounded @click=\"cancel\">Cancel</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 2\">Previous</v-btn>\n-        <v-btn rounded color=\"primary\" @click=\"e1 = 1\">Continue</v-btn>\n-      </v-stepper-content>\n-    </v-stepper-items>\n-  </v-stepper>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('wizard.addClientTitle')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper :alt-labels=\"true\" v-model=\"currentStep\" class=\"stepper noshadow\">\n+      <v-stepper-header class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{$t('wizard.clientDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{$t('wizard.token.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{$t('wizard.signKey.title')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 4\" step=\"4\">{{$t('csr.csrDetails')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 5\" step=\"5\">{{$t('csr.generateCsr')}}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 6\" step=\"6\">{{$t('wizard.finish.title')}}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items class=\"stepper-content\">\n+        <!-- Step 1 -->\n+        <v-stepper-content step=\"1\">\n+          <ClientDetailsPage @cancel=\"cancel\" @done=\"clientDetailsReady\" />\n+        </v-stepper-content>\n+        <!-- Step 2 -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPage @cancel=\"cancel\" @previous=\"tokenPrevious\" @done=\"tokenReady\" />\n+        </v-stepper-content>\n+        <!-- Step 3 -->\n+        <v-stepper-content step=\"3\">\n+          <SignKeyPage @cancel=\"cancel\" @previous=\"signKeyPrevious\" @done=\"signKeyReady\" />\n+        </v-stepper-content>\n+        <!-- Step 4 -->\n+        <v-stepper-content step=\"4\">\n+          <WizardPageCsrDetails\n+            @cancel=\"cancel\"\n+            @previous=\"csrDetailsPrevious\"\n+            @done=\"csrDetailsReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 5 -->\n+        <v-stepper-content step=\"5\">\n+          <GenerateCsrPage\n+            @cancel=\"cancel\"\n+            @previous=\"generateCsrPrevious\"\n+            @done=\"generateCsrReady\"\n+            saveButtonText=\"action.next\"\n+          />\n+        </v-stepper-content>\n+        <!-- Step 6 -->\n+        <v-stepper-content step=\"6\">\n+          <FinishPage @cancel=\"cancel\" @previous=\"finishPrevious\" @done=\"done\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import ClientDetailsPage from './ClientDetailsPage.vue';\n+import TokenPage from './TokenPage.vue';\n+import SignKeyPage from './SignKeyPage.vue';\n+import FinishPage from './FinishPage.vue';\n+import WizardPageCsrDetails from '@/components/wizard/WizardPageCsrDetails.vue';\n+import GenerateCsrPage from './GenerateCsrPage.vue';\n+\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    e1: 0,\n-  }),\n+  components: {\n+    HelpIcon,\n+    LargeButton,\n+    SubViewTitle,\n+    ClientDetailsPage,\n+    TokenPage,\n+    SignKeyPage,\n+    FinishPage,\n+    WizardPageCsrDetails,\n+    GenerateCsrPage,\n+  },\n+  props: {},\n+  data() {\n+    return {\n+      currentStep: 1,\n+    };\n+  },\n   methods: {\n+    save(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {\n+          this.currentStep = 2;\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n     cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+\n+    clientDetailsReady(): void {\n+      this.currentStep = 2;\n+    },\n+\n+    tokenReady(): void {\n+      this.currentStep = 3;\n+\n+      this.$store.dispatch('fetchLocalMembers').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+\n+      this.$store.dispatch('fetchCertificateAuthorities').catch((error) => {\n+        this.$store.dispatch('showError', error);\n+      });\n+    },\n+\n+    signKeyReady(): void {\n+      this.currentStep = 4;\n+    },\n+    csrDetailsReady(): void {\n+      this.$store.dispatch('fetchCsrForm').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAwMjIxNg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIzMDg4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/ClientDetailsPage.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowNzowOVrOGCP4ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNjo0ODozNFrOGC3_PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDU1NQ==", "bodyText": "I think you should extract the contents of this if condition and make a helper function out of it instead. Optionally just extract the lambda function", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405010555", "createdAt": "2020-04-07T18:07:09Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/ClientDetailsPage.vue", "diffHunk": "@@ -0,0 +1,226 @@\n+<template>\n+  <div>\n+    <div class=\"info-block\">\n+      <div>\n+        {{$t('wizard.clientInfo1')}}\n+        <br />\n+        <br />\n+        {{$t('wizard.clientInfo2')}}\n+      </div>\n+      <div class=\"action-block\">\n+        <large-button\n+          @click=\"showSelectClient = true\"\n+          outlined\n+          data-test=\"select-client-button\"\n+        >{{$t('wizard.selectClient')}}</large-button>\n+      </div>\n+    </div>\n+\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+        <div v-if=\"selectedMember\" data-test=\"selected-member-name\">{{selectedMember.member_name}}</div>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberClass\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberClass\"\n+            data-test=\"member-class-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberCode\"\n+            data-test=\"member-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.subsystemCode\" helpText=\"wizard.client.subsystemCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"subsystemCode\"\n+            data-test=\"subsystem-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+      <div class=\"button-footer\">\n+        <div class=\"button-group\">\n+          <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+        </div>\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"invalid || duplicateClient\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </ValidationObserver>\n+\n+    <SelectClientDialog\n+      :dialog=\"showSelectClient\"\n+      :selectableClients=\"selectableClients\"\n+      @cancel=\"showSelectClient = false\"\n+      @save=\"saveSelectedClient\"\n+    />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SelectClientDialog from './SelectClientDialog.vue';\n+import { Client } from '@/types';\n+\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['reservedClients', 'selectableClients']),\n+\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 149}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY2NzY0NQ==", "bodyText": "Moved this to helpers", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405667645", "createdAt": "2020-04-08T16:48:34Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/ClientDetailsPage.vue", "diffHunk": "@@ -0,0 +1,226 @@\n+<template>\n+  <div>\n+    <div class=\"info-block\">\n+      <div>\n+        {{$t('wizard.clientInfo1')}}\n+        <br />\n+        <br />\n+        {{$t('wizard.clientInfo2')}}\n+      </div>\n+      <div class=\"action-block\">\n+        <large-button\n+          @click=\"showSelectClient = true\"\n+          outlined\n+          data-test=\"select-client-button\"\n+        >{{$t('wizard.selectClient')}}</large-button>\n+      </div>\n+    </div>\n+\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+        <div v-if=\"selectedMember\" data-test=\"selected-member-name\">{{selectedMember.member_name}}</div>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberClass\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberClass\"\n+            data-test=\"member-class-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.memberCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"memberCode\"\n+            data-test=\"member-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel labelText=\"wizard.subsystemCode\" helpText=\"wizard.client.subsystemCodeTooltip\" />\n+\n+        <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            v-model=\"subsystemCode\"\n+            data-test=\"subsystem-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+      <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+      <div class=\"button-footer\">\n+        <div class=\"button-group\">\n+          <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+        </div>\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"invalid || duplicateClient\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </ValidationObserver>\n+\n+    <SelectClientDialog\n+      :dialog=\"showSelectClient\"\n+      :selectableClients=\"selectableClients\"\n+      @cancel=\"showSelectClient = false\"\n+      @save=\"saveSelectedClient\"\n+    />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SelectClientDialog from './SelectClientDialog.vue';\n+import { Client } from '@/types';\n+\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['reservedClients', 'selectableClients']),\n+\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMDU1NQ=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 149}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIzNjM5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowODozN1rOGCP79w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowMjo0MlrOGCzdag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTQ0Nw==", "bodyText": "unused response", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405011447", "createdAt": "2020-04-07T18:08:37Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5MzQ1MA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405593450", "createdAt": "2020-04-08T15:02:42Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTQ0Nw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzIzNzAyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODowODo0NlrOGCP8Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowMjo0OFrOGCzdtA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTU1MA==", "bodyText": "unused response", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405011550", "createdAt": "2020-04-07T18:08:46Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {\n+          this.generateCsr();\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+          this.disableCancel = false;\n+        },\n+      );\n+    },\n+\n+    generateCsr(): void {\n+      const tokenId = this.$store.getters.csrTokenId;\n+\n+      this.$store.dispatch('generateKeyAndCsr', tokenId).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5MzUyNA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405593524", "createdAt": "2020-04-08T15:02:48Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/FinishPage.vue", "diffHunk": "@@ -0,0 +1,104 @@\n+<template>\n+  <div data-test=\"finish-content\">\n+    <p>\n+      {{$t('wizard.finish.infoLine1')}}\n+      <br />\n+      {{$t('wizard.finish.infoLine2')}}\n+    </p>\n+    <br />\n+    <p>{{$t('wizard.finish.todo1')}}</p>\n+    <p>{{$t('wizard.finish.todo2')}}</p>\n+    <p>{{$t('wizard.finish.todo3')}}</p>\n+    <br />\n+    <br />\n+    <p>{{$t('wizard.finish.note')}}</p>\n+    <p></p>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"disableCancel\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          :disabled=\"disableCancel\"\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button @click=\"done\" data-test=\"submit-button\">{{$t('action.submit')}}</large-button>\n+      </div>\n+    </div>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+  },\n+  computed: {\n+    ...mapGetters(['csrForm']),\n+  },\n+  data() {\n+    return {\n+      disableCancel: false,\n+    };\n+  },\n+  methods: {\n+    cancel(): void {\n+      this.$emit('cancel');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+    done(): void {\n+      this.disableCancel = true;\n+\n+      this.$store.dispatch('createClient').then(\n+        (response) => {\n+          this.generateCsr();\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+          this.disableCancel = false;\n+        },\n+      );\n+    },\n+\n+    generateCsr(): void {\n+      const tokenId = this.$store.getters.csrTokenId;\n+\n+      this.$store.dispatch('generateKeyAndCsr', tokenId).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMTU1MA=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI0NTgxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/GenerateCsrPage.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoxMToxNVrOGCQB4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNTowNDozMlrOGCzivA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMjk2Mw==", "bodyText": "data-test missing", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405012963", "createdAt": "2020-04-07T18:11:15Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/GenerateCsrPage.vue", "diffHunk": "@@ -0,0 +1,99 @@\n+<template>\n+  <div>\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div v-for=\"item in csrForm\" v-bind:key=\"item.id\" class=\"row-wrap\">\n+        <div class=\"label\">{{$t('certificateProfile.' + item.label_key)}}</div>\n+\n+        <div>\n+          <ValidationProvider\n+            :name=\"item.id\"\n+            :rules=\"(item.required) && 'required' \"\n+            v-slot=\"{ errors }\"\n+          >\n+            <v-text-field", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTU5NDgxMg==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405594812", "createdAt": "2020-04-08T15:04:32Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/GenerateCsrPage.vue", "diffHunk": "@@ -0,0 +1,99 @@\n+<template>\n+  <div>\n+    <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+      <div v-for=\"item in csrForm\" v-bind:key=\"item.id\" class=\"row-wrap\">\n+        <div class=\"label\">{{$t('certificateProfile.' + item.label_key)}}</div>\n+\n+        <div>\n+          <ValidationProvider\n+            :name=\"item.id\"\n+            :rules=\"(item.required) && 'required' \"\n+            v-slot=\"{ errors }\"\n+          >\n+            <v-text-field", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxMjk2Mw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI1OTEwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoxNDo0N1rOGCQKJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQwOTozODowN1rOGCnMiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTA3Ng==", "bodyText": "I think you can use optional chaining here", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405015076", "createdAt": "2020-04-07T18:14:47Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMzA4Ng==", "bodyText": "Optional chaining here breaks the build. Not sure why, but probably because it's in the template.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405033086", "createdAt": "2020-04-07T18:44:20Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTA3Ng=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5MjUyMA==", "bodyText": "Ok, lets leave it then. I guess it is because of Vues template engine", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405392520", "createdAt": "2020-04-08T09:38:07Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTA3Ng=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI2MjM0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoxNTo0MVrOGCQMUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NDo0MlrOGCRRSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTYzMw==", "bodyText": "optional chaining here and next if condition", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405015633", "createdAt": "2020-04-07T18:15:41Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">\n+              <tr v-for=\"member in filteredMembers()\" v-bind:key=\"member.id\">\n+                <td class=\"checkbox-column\">\n+                  <div class=\"checkbox-wrap\">\n+                    <v-radio :key=\"member.id\" :value=\"member\"></v-radio>\n+                  </div>\n+                </td>\n+\n+                <td>{{member.member_name}}</td>\n+                <td>{{member.id}}</td>\n+              </tr>\n+            </tbody>\n+          </table>\n+        </v-radio-group>\n+\n+        <div v-if=\"filteredMembers().length < 1\" class=\"empty-row\">\n+          <p>{{$t('localGroup.noResults')}}</p>\n+        </div>\n+      </v-card-text>\n+      <v-card-actions class=\"xrd-card-actions\">\n+        <v-spacer></v-spacer>\n+\n+        <large-button\n+          class=\"button-margin\"\n+          outlined\n+          @click=\"cancel()\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+\n+        <large-button\n+          :disabled=\"!selectedMember\"\n+          @click=\"save()\"\n+          data-test=\"save-button\"\n+        >{{$t('localGroup.addSelected')}}</large-button>\n+      </v-card-actions>\n+    </v-card>\n+  </v-dialog>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { Client } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+  },\n+  props: {\n+    dialog: {\n+      type: Boolean,\n+      required: true,\n+    },\n+    selectableClients: {\n+      type: Array,\n+      required: true,\n+    },\n+  },\n+\n+  data() {\n+    return {\n+      search: '',\n+      selectedMember: undefined,\n+    };\n+  },\n+  methods: {\n+    filteredMembers() {\n+      if (!this.search) {\n+        return this.selectableClients;\n+      }\n+\n+      const tempSearch = this.search\n+        .toString()\n+        .toLowerCase()\n+        .trim();\n+      if (tempSearch === '') {\n+        return this.selectableClients;\n+      }\n+\n+      return this.selectableClients.filter((member: any) => {\n+        if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 113}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMzI4OQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405033289", "createdAt": "2020-04-07T18:44:42Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/SelectClientDialog.vue", "diffHunk": "@@ -0,0 +1,155 @@\n+<template>\n+  <v-dialog :value=\"dialog\" width=\"750\" scrollable persistent>\n+    <v-card class=\"xrd-card\">\n+      <v-card-title>\n+        <span class=\"headline\">{{$t(\"wizard.client.addClient\")}}</span>\n+        <v-spacer />\n+        <i @click=\"cancel()\" data-test=\"x-close-button\"></i>\n+      </v-card-title>\n+\n+      <v-card-text style=\"height: 500px;\" class=\"elevation-0\">\n+        <v-text-field\n+          v-model=\"search\"\n+          :label=\"$t('wizard.client.member')\"\n+          single-line\n+          hide-details\n+          class=\"search-input\"\n+          data-test=\"client-search-input\"\n+        >\n+          <v-icon slot=\"append\">mdi-magnify</v-icon>\n+        </v-text-field>\n+\n+        <!-- Table -->\n+        <v-radio-group v-model=\"selectedMember\">\n+          <table class=\"xrd-table members-table fixed_header\">\n+            <thead>\n+              <tr>\n+                <th class=\"checkbox-column\"></th>\n+                <th>{{$t('name')}}</th>\n+                <th>{{$t('localGroup.id')}}</th>\n+              </tr>\n+            </thead>\n+            <tbody v-if=\"selectableClients && selectableClients.length > 0\">\n+              <tr v-for=\"member in filteredMembers()\" v-bind:key=\"member.id\">\n+                <td class=\"checkbox-column\">\n+                  <div class=\"checkbox-wrap\">\n+                    <v-radio :key=\"member.id\" :value=\"member\"></v-radio>\n+                  </div>\n+                </td>\n+\n+                <td>{{member.member_name}}</td>\n+                <td>{{member.id}}</td>\n+              </tr>\n+            </tbody>\n+          </table>\n+        </v-radio-group>\n+\n+        <div v-if=\"filteredMembers().length < 1\" class=\"empty-row\">\n+          <p>{{$t('localGroup.noResults')}}</p>\n+        </div>\n+      </v-card-text>\n+      <v-card-actions class=\"xrd-card-actions\">\n+        <v-spacer></v-spacer>\n+\n+        <large-button\n+          class=\"button-margin\"\n+          outlined\n+          @click=\"cancel()\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+\n+        <large-button\n+          :disabled=\"!selectedMember\"\n+          @click=\"save()\"\n+          data-test=\"save-button\"\n+        >{{$t('localGroup.addSelected')}}</large-button>\n+      </v-card-actions>\n+    </v-card>\n+  </v-dialog>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import { Client } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+  },\n+  props: {\n+    dialog: {\n+      type: Boolean,\n+      required: true,\n+    },\n+    selectableClients: {\n+      type: Array,\n+      required: true,\n+    },\n+  },\n+\n+  data() {\n+    return {\n+      search: '',\n+      selectedMember: undefined,\n+    };\n+  },\n+  methods: {\n+    filteredMembers() {\n+      if (!this.search) {\n+        return this.selectableClients;\n+      }\n+\n+      const tempSearch = this.search\n+        .toString()\n+        .toLowerCase()\n+        .trim();\n+      if (tempSearch === '') {\n+        return this.selectableClients;\n+      }\n+\n+      return this.selectableClients.filter((member: any) => {\n+        if (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNTYzMw=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI2NzQ0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoxNzowOFrOGCQPcA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0NDo1MFrOGCRRlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNjQzMg==", "bodyText": "data-test missing", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405016432", "createdAt": "2020-04-07T18:17:08Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMzM2NA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405033364", "createdAt": "2020-04-07T18:44:50Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNjQzMg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI3MjM1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoxODoyNFrOGCQShg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxODozMTowOVrOGC7xIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNzIyMg==", "bodyText": "maybe just\nreturn this.tokens.lenght === 1; :)", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405017222", "createdAt": "2020-04-07T18:18:24Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMjc1NQ==", "bodyText": "I don't know why, but that breaks the build.\nMaybe because it's computed property and vue wizardy doesn't like it.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405032755", "createdAt": "2020-04-07T18:43:47Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNzIyMg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTM5NTU5MQ==", "bodyText": "This sounds weird. From the perspective of the functions user nothing changes.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405395591", "createdAt": "2020-04-08T09:43:05Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNzIyMg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTcyOTU2OQ==", "bodyText": "I tried to google more, but didn't find any reason for this. Might be just wrong search words. Seems that the the whole code part of the component gets somehow messed up and the build sees everything as an error.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405729569", "createdAt": "2020-04-08T18:31:09Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxNzIyMg=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMzI4MTAyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODoyMDozN1rOGCQX6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxODo0Mzo1N1rOGCRPlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxODYwMQ==", "bodyText": "I think this could also be written as oneliner instead:\nreturn this.tokenGroup ? false : true;", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405018601", "createdAt": "2020-04-07T18:20:37Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;\n+    },\n+\n+    disableNext() {\n+      if (this.tokenGroup) {\n+        return false;\n+      }\n+      return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAzMjg1NQ==", "bodyText": "Same thing as in the previous one.", "url": "https://github.com/nordic-institute/X-Road/pull/397#discussion_r405032855", "createdAt": "2020-04-07T18:43:57Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddClient/TokenPage.vue", "diffHunk": "@@ -0,0 +1,176 @@\n+<template>\n+  <div>\n+    {{$t('wizard.token.info')}}\n+    <v-text-field\n+      v-model=\"search\"\n+      :label=\"$t('wizard.token.tokenName')\"\n+      single-line\n+      hide-details\n+      class=\"search-input\"\n+      data-test=\"token-search-input\"\n+    >\n+      <v-icon slot=\"append\">mdi-magnify</v-icon>\n+    </v-text-field>\n+\n+    <v-radio-group v-model=\"tokenGroup\">\n+      <div class=\"radio-row\" v-for=\"token in filteredTokens\" :key=\"token.id\">\n+        <v-radio :label=\"`Token ${token.name}`\" :value=\"token\" :disabled=\"!token.logged_in\"></v-radio>\n+        <div>\n+          <large-button\n+            @click=\"confirmLogin(token)\"\n+            v-if=\"!token.logged_in\"\n+            :disabled=\"!token.available\"\n+            data-test=\"token-login-button\"\n+          >{{$t('keys.logIn')}}</large-button>\n+          <large-button\n+            v-if=\"token.logged_in\"\n+            outlined\n+            disabled\n+            data-test=\"token-logout-button\"\n+          >{{$t('wizard.token.loggedIn')}}</large-button>\n+        </div>\n+      </div>\n+    </v-radio-group>\n+\n+    <div class=\"button-footer\">\n+      <div class=\"button-group\">\n+        <large-button\n+          outlined\n+          @click=\"cancel\"\n+          :disabled=\"!disableDone\"\n+          data-test=\"cancel-button\"\n+        >{{$t('action.cancel')}}</large-button>\n+      </div>\n+\n+      <div>\n+        <large-button\n+          @click=\"previous\"\n+          outlined\n+          class=\"previous-button\"\n+          data-test=\"previous-button\"\n+        >{{$t('action.previous')}}</large-button>\n+\n+        <large-button\n+          @click=\"done\"\n+          :disabled=\"disableNext\"\n+          data-test=\"next-button\"\n+        >{{$t('action.next')}}</large-button>\n+      </div>\n+    </div>\n+    <TokenLoginDialog :dialog=\"loginDialog\" @cancel=\"loginDialog = false\" @save=\"tokenLogin\" />\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import TokenLoginDialog from '@/components/token/TokenLoginDialog.vue';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import { Token } from '@/types';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    TokenLoginDialog,\n+  },\n+  computed: {\n+    ...mapGetters(['tokens']),\n+\n+    filteredTokens: {\n+      get(): Token[] {\n+        return this.$store.getters.tokensFilteredByName(this.search);\n+      },\n+    },\n+\n+    disableSelection() {\n+      if (this.tokens.length === 1) {\n+        return true;\n+      }\n+      return false;\n+    },\n+\n+    disableNext() {\n+      if (this.tokenGroup) {\n+        return false;\n+      }\n+      return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTAxODYwMQ=="}, "originalCommit": {"oid": "9a95468cd21b15e8a13d32d346a7febf661a7e6e"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2967, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}