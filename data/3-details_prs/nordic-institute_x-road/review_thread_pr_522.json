{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI0NDU4NDI4", "number": 522, "reviewThreads": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODowMToxMFrOEDwV9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToyMToxMFrOEDyZYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzczMjM5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/general.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODowMToxMFrOGg9TFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMTo0NFrOGhJE1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxMTkyNg==", "bodyText": "I guess this 'state' parameter and others in this file are of type State? You could add typings if this is correct.", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437211926", "createdAt": "2020-06-09T08:01:10Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/general.ts", "diffHunk": "@@ -19,6 +23,13 @@ export const getters: GetterTree<State, RootState> = {\n   memberClasses: (state) => {\n     return state.memberClasses;\n   },\n+  memberClassesCurrentInstance: (state) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDg4NA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404884", "createdAt": "2020-06-09T13:11:44Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/general.ts", "diffHunk": "@@ -19,6 +23,13 @@ export const getters: GetterTree<State, RootState> = {\n   memberClasses: (state) => {\n     return state.memberClasses;\n   },\n+  memberClassesCurrentInstance: (state) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIxMTkyNg=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgxNTYzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoyNDowOFrOGg-IGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMTozOVrOGhJEkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNTQ5Nw==", "bodyText": "Now that we can use nullish coalescing operator I think using the logical OR as a way to return a default value is a bit bad habit. See those couple of paragraphs in https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator. Whether to make a change or not is up to you.", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437225497", "createdAt": "2020-06-09T08:24:08Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {\n+    return state.memberClass;\n+  },\n+\n+  initServerMemberCode(state): string | undefined {\n+    return state.memberCode;\n+  },\n+\n+  initServerSSCode(state): string | undefined {\n+    return state.securityServerCode;\n+  },\n+\n+  isAnchorImported(state): boolean {\n+    return state.initializationStatus?.is_anchor_imported || false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDgxOA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404818", "createdAt": "2020-06-09T13:11:39Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {\n+    return state.memberClass;\n+  },\n+\n+  initServerMemberCode(state): string | undefined {\n+    return state.memberCode;\n+  },\n+\n+  initServerSSCode(state): string | undefined {\n+    return state.securityServerCode;\n+  },\n+\n+  isAnchorImported(state): boolean {\n+    return state.initializationStatus?.is_anchor_imported || false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNTQ5Nw=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgxNjY1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoyNDoyNFrOGg-IuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMTozM1rOGhJETA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNTY1Ng==", "bodyText": "state: State as above. Several occasions in this file", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437225656", "createdAt": "2020-06-09T08:24:24Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDc0OA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404748", "createdAt": "2020-06-09T13:11:33Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNTY1Ng=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgyMDc5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoyNToyOFrOGg-LXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMToyOVrOGhJEKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNjMzMw==", "bodyText": "returns InitServerState -type", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437226333", "createdAt": "2020-06-09T08:25:28Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDcxNA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404714", "createdAt": "2020-06-09T13:11:29Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNjMzMw=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgyODIyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoyNzoxOFrOGg-P6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMToyNlrOGhJECA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNzQ5OQ==", "bodyText": "This isn't a computed method in a component so I guess you can just return the evaluated from the if-block expression?", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437227499", "createdAt": "2020-06-09T08:27:18Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {\n+    return state.memberClass;\n+  },\n+\n+  initServerMemberCode(state): string | undefined {\n+    return state.memberCode;\n+  },\n+\n+  initServerSSCode(state): string | undefined {\n+    return state.securityServerCode;\n+  },\n+\n+  isAnchorImported(state): boolean {\n+    return state.initializationStatus?.is_anchor_imported || false;\n+  },\n+\n+  isServerOwnerInitialized(state): boolean {\n+    return state.initializationStatus?.is_server_owner_initialized || false;\n+  },\n+\n+  isServerCodeInitialized(state): boolean {\n+    return state.initializationStatus?.is_server_code_initialized || false;\n+  },\n+\n+  isSoftwareTokenInitialized(state): boolean {\n+    return state.initializationStatus?.is_software_token_initialized || false;\n+  },\n+\n+  needsInitialization: (state) => {\n+    if (", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDY4MA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404680", "createdAt": "2020-06-09T13:11:26Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/initializeServer.ts", "diffHunk": "@@ -0,0 +1,114 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+import * as api from '@/util/api';\n+\n+interface InitializationStatus {\n+  is_anchor_imported: boolean;\n+  is_server_code_initialized: boolean;\n+  is_server_owner_initialized: boolean;\n+  is_software_token_initialized: boolean;\n+}\n+\n+export interface InitServerState {\n+  memberClass: string | undefined;\n+  memberCode: string | undefined;\n+  securityServerCode: string | undefined;\n+  initializationStatus: InitializationStatus | undefined;\n+}\n+\n+const getDefaultState = () => {\n+  return {\n+    memberClass: undefined,\n+    memberCode: undefined,\n+    securityServerCode: undefined,\n+    initializationStatus: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const moduleState = getDefaultState();\n+\n+export const getters: GetterTree<InitServerState, RootState> = {\n+  initServerMemberClass(state): string | undefined {\n+    return state.memberClass;\n+  },\n+\n+  initServerMemberCode(state): string | undefined {\n+    return state.memberCode;\n+  },\n+\n+  initServerSSCode(state): string | undefined {\n+    return state.securityServerCode;\n+  },\n+\n+  isAnchorImported(state): boolean {\n+    return state.initializationStatus?.is_anchor_imported || false;\n+  },\n+\n+  isServerOwnerInitialized(state): boolean {\n+    return state.initializationStatus?.is_server_owner_initialized || false;\n+  },\n+\n+  isServerCodeInitialized(state): boolean {\n+    return state.initializationStatus?.is_server_code_initialized || false;\n+  },\n+\n+  isSoftwareTokenInitialized(state): boolean {\n+    return state.initializationStatus?.is_software_token_initialized || false;\n+  },\n+\n+  needsInitialization: (state) => {\n+    if (", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyNzQ5OQ=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzgzNzYxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODoyOTo0NVrOGg-V9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMToyMVrOGhJD0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTA0NA==", "bodyText": "We can use optional chaining here.", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437229044", "createdAt": "2020-06-09T08:29:45Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "diffHunk": "@@ -119,59 +119,82 @@ export default (Vue as VueConstructor<\n       this.$refs.form.reset();\n       this.loading = true;\n \n-      this.$store\n-        .dispatch('login', loginData)\n-        .then(\n-          () => {\n-            // Auth ok. Start phase 2 (fetch user data and current security server info).\n-            this.fetchUserData();\n-            this.fetchCurrentSecurityServer();\n-            this.fetchSecurityServerVersion();\n-          },\n-          (error) => {\n-            // Display invalid username/password error in inputs\n-            if (error.response && error.response.status === 401) {\n-              // Clear inputs\n-              this.username = '';\n-              this.password = '';\n-              this.$refs.form.reset();\n+      this.$store.dispatch('login', loginData).then(\n+        () => {\n+          // Auth ok. Start phase 2 (fetch user data and current security server info).\n+          this.fetchUserData();\n+          this.fetchSecurityServerVersion();\n+        },\n+        (error) => {\n+          // Display invalid username/password error in inputs\n+          if (error.response && error.response.status === 401) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDYyNQ==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404625", "createdAt": "2020-06-09T13:11:21Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "diffHunk": "@@ -119,59 +119,82 @@ export default (Vue as VueConstructor<\n       this.$refs.form.reset();\n       this.loading = true;\n \n-      this.$store\n-        .dispatch('login', loginData)\n-        .then(\n-          () => {\n-            // Auth ok. Start phase 2 (fetch user data and current security server info).\n-            this.fetchUserData();\n-            this.fetchCurrentSecurityServer();\n-            this.fetchSecurityServerVersion();\n-          },\n-          (error) => {\n-            // Display invalid username/password error in inputs\n-            if (error.response && error.response.status === 401) {\n-              // Clear inputs\n-              this.username = '';\n-              this.password = '';\n-              this.$refs.form.reset();\n+      this.$store.dispatch('login', loginData).then(\n+        () => {\n+          // Auth ok. Start phase 2 (fetch user data and current security server info).\n+          this.fetchUserData();\n+          this.fetchSecurityServerVersion();\n+        },\n+        (error) => {\n+          // Display invalid username/password error in inputs\n+          if (error.response && error.response.status === 401) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIyOTA0NA=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzg1MDQ0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwODozMjo1NFrOGg-eJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMToxNlrOGhJDnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTE0Mg==", "bodyText": "Seems async-functionalities aren't used here at all so you could remove the keyword from here and from fetchUserData-function. Neither of these methods return a Promise-object so it shouldn't make a difference.", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437231142", "createdAt": "2020-06-09T08:32:54Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "diffHunk": "@@ -119,59 +119,82 @@ export default (Vue as VueConstructor<\n       this.$refs.form.reset();\n       this.loading = true;\n \n-      this.$store\n-        .dispatch('login', loginData)\n-        .then(\n-          () => {\n-            // Auth ok. Start phase 2 (fetch user data and current security server info).\n-            this.fetchUserData();\n-            this.fetchCurrentSecurityServer();\n-            this.fetchSecurityServerVersion();\n-          },\n-          (error) => {\n-            // Display invalid username/password error in inputs\n-            if (error.response && error.response.status === 401) {\n-              // Clear inputs\n-              this.username = '';\n-              this.password = '';\n-              this.$refs.form.reset();\n+      this.$store.dispatch('login', loginData).then(\n+        () => {\n+          // Auth ok. Start phase 2 (fetch user data and current security server info).\n+          this.fetchUserData();\n+          this.fetchSecurityServerVersion();\n+        },\n+        (error) => {\n+          // Display invalid username/password error in inputs\n+          if (error.response && error.response.status === 401) {\n+            // Clear inputs\n+            this.username = '';\n+            this.password = '';\n+            this.$refs.form.reset();\n \n-              // The whole view needs to be rendered so the \"required\" rule doesn't block\n-              // \"wrong unsername or password\" error in inputs\n-              this.$nextTick(() => {\n-                // Set inputs to error state\n-                this.$refs.form.setErrors({\n-                  username: [''],\n-                  password: [this.$t('login.errorMsg401') as string],\n-                });\n+            // The whole view needs to be rendered so the \"required\" rule doesn't block\n+            // \"wrong unsername or password\" error in inputs\n+            this.$nextTick(() => {\n+              // Set inputs to error state\n+              this.$refs.form.setErrors({\n+                username: [''],\n+                password: [this.$t('login.errorMsg401') as string],\n               });\n-            }\n-            this.$store.dispatch('showErrorMessageRaw', error.message);\n-          },\n-        )\n-        .finally(() => {\n+            });\n+          }\n+          this.$store.dispatch('showErrorMessageRaw', error.message);\n           // Clear loading state\n           this.loading = false;\n-        });\n+        },\n+      );\n     },\n     async fetchUserData() {\n       this.loading = true;\n+      this.$store.dispatch('fetchUserData').then(\n+        () => {\n+          // Check if initialization is needed\n+          this.fetchInitializationData();\n+        },\n+        (error) => {\n+          // Display error\n+          this.$store.dispatch('showErrorMessageRaw', error.message);\n+          this.loading = false;\n+        },\n+      );\n+    },\n+\n+    async fetchInitializationData() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDU3Mw==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404573", "createdAt": "2020-06-09T13:11:16Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AppLogin.vue", "diffHunk": "@@ -119,59 +119,82 @@ export default (Vue as VueConstructor<\n       this.$refs.form.reset();\n       this.loading = true;\n \n-      this.$store\n-        .dispatch('login', loginData)\n-        .then(\n-          () => {\n-            // Auth ok. Start phase 2 (fetch user data and current security server info).\n-            this.fetchUserData();\n-            this.fetchCurrentSecurityServer();\n-            this.fetchSecurityServerVersion();\n-          },\n-          (error) => {\n-            // Display invalid username/password error in inputs\n-            if (error.response && error.response.status === 401) {\n-              // Clear inputs\n-              this.username = '';\n-              this.password = '';\n-              this.$refs.form.reset();\n+      this.$store.dispatch('login', loginData).then(\n+        () => {\n+          // Auth ok. Start phase 2 (fetch user data and current security server info).\n+          this.fetchUserData();\n+          this.fetchSecurityServerVersion();\n+        },\n+        (error) => {\n+          // Display invalid username/password error in inputs\n+          if (error.response && error.response.status === 401) {\n+            // Clear inputs\n+            this.username = '';\n+            this.password = '';\n+            this.$refs.form.reset();\n \n-              // The whole view needs to be rendered so the \"required\" rule doesn't block\n-              // \"wrong unsername or password\" error in inputs\n-              this.$nextTick(() => {\n-                // Set inputs to error state\n-                this.$refs.form.setErrors({\n-                  username: [''],\n-                  password: [this.$t('login.errorMsg401') as string],\n-                });\n+            // The whole view needs to be rendered so the \"required\" rule doesn't block\n+            // \"wrong unsername or password\" error in inputs\n+            this.$nextTick(() => {\n+              // Set inputs to error state\n+              this.$refs.form.setErrors({\n+                username: [''],\n+                password: [this.$t('login.errorMsg401') as string],\n               });\n-            }\n-            this.$store.dispatch('showErrorMessageRaw', error.message);\n-          },\n-        )\n-        .finally(() => {\n+            });\n+          }\n+          this.$store.dispatch('showErrorMessageRaw', error.message);\n           // Clear loading state\n           this.loading = false;\n-        });\n+        },\n+      );\n     },\n     async fetchUserData() {\n       this.loading = true;\n+      this.$store.dispatch('fetchUserData').then(\n+        () => {\n+          // Check if initialization is needed\n+          this.fetchInitializationData();\n+        },\n+        (error) => {\n+          // Display error\n+          this.$store.dispatch('showErrorMessageRaw', error.message);\n+          this.loading = false;\n+        },\n+      );\n+    },\n+\n+    async fetchInitializationData() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzIzMTE0Mg=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk2NDUxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/ConfigurationAnchorStep.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowMDoyNlrOGg_l2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzoxMToxMFrOGhJDTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0OTQ5Ng==", "bodyText": "What does this do? Couldn't this be done as an optional html-class & margin?", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437249496", "createdAt": "2020-06-09T09:00:26Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/ConfigurationAnchorStep.vue", "diffHunk": "@@ -0,0 +1,121 @@\n+<template>\n+  <div>\n+    <div class=\"action-row\">\n+      <div>{{ $t('initialConfiguration.anchor.info') }}</div>\n+      <upload-configuration-anchor-dialog\n+        @uploaded=\"fetchConfigurationAnchor\"\n+        initMode\n+      />\n+    </div>\n+\n+    <template v-if=\"configuratonAnchor\">\n+      <div class=\"row-wrap\">\n+        <div class=\"label\">{{ $t('initialConfiguration.anchor.hash') }}</div>\n+        <template v-if=\"configuratonAnchor\">{{\n+          configuratonAnchor.hash | colonize\n+        }}</template>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <div class=\"label\">\n+          {{ $t('initialConfiguration.anchor.generated') }}\n+        </div>\n+        <template v-if=\"configuratonAnchor\">{{\n+          configuratonAnchor.created_at | formatDateTime\n+        }}</template>\n+      </div>\n+    </template>\n+    <div v-else style=\"height: 120px;\"></div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwNDQ5NQ==", "bodyText": "Idea was to keep the height same with or without anchor data, but it's not a good implementation. Fixed now.", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437404495", "createdAt": "2020-06-09T13:11:10Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/ConfigurationAnchorStep.vue", "diffHunk": "@@ -0,0 +1,121 @@\n+<template>\n+  <div>\n+    <div class=\"action-row\">\n+      <div>{{ $t('initialConfiguration.anchor.info') }}</div>\n+      <upload-configuration-anchor-dialog\n+        @uploaded=\"fetchConfigurationAnchor\"\n+        initMode\n+      />\n+    </div>\n+\n+    <template v-if=\"configuratonAnchor\">\n+      <div class=\"row-wrap\">\n+        <div class=\"label\">{{ $t('initialConfiguration.anchor.hash') }}</div>\n+        <template v-if=\"configuratonAnchor\">{{\n+          configuratonAnchor.hash | colonize\n+        }}</template>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <div class=\"label\">\n+          {{ $t('initialConfiguration.anchor.generated') }}\n+        </div>\n+        <template v-if=\"configuratonAnchor\">{{\n+          configuratonAnchor.created_at | formatDateTime\n+        }}</template>\n+      </div>\n+    </template>\n+    <div v-else style=\"height: 120px;\"></div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI0OTQ5Ng=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk4Nzg0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNDozMVrOGg_zxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NjowOVrOGhHy1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1MzA2Mg==", "bodyText": "I think this can be removed?", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437253062", "createdAt": "2020-06-09T09:04:31Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 107}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4Mzg5NQ==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383895", "createdAt": "2020-06-09T12:46:09Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1MzA2Mg=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 107}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMzk4ODc4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNDo0MFrOGg_0Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NTo1OVrOGhHybw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1MzIxNA==", "bodyText": "typings", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437253214", "createdAt": "2020-06-09T09:04:40Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 121}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4Mzc5MQ==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383791", "createdAt": "2020-06-09T12:45:59Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1MzIxNA=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 121}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAwMDkzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowNzowM1rOGg_7lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NTo1NVrOGhHyLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NTA2Mg==", "bodyText": "How about just merging these to more generic:\nnextStep(): void { this.currentStep++; }", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437255062", "createdAt": "2020-06-09T09:07:03Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,\n+    };\n+  },\n+  methods: {\n+    configAnchorReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    ownerMemberReady(): void {\n+      this.currentStep++;\n+    },", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 131}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4MzcyNA==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383724", "createdAt": "2020-06-09T12:45:55Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,\n+    };\n+  },\n+  methods: {\n+    configAnchorReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    ownerMemberReady(): void {\n+      this.currentStep++;\n+    },", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NTA2Mg=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 131}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAxMDYzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTowOToyM1rOGhABhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NTo0OVrOGhHx8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NjU4MA==", "bodyText": "Perhaps add optional chaining here as it might possible that error response doesn't include 'data'", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437256580", "createdAt": "2020-06-09T09:09:23Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,\n+    };\n+  },\n+  methods: {\n+    configAnchorReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    ownerMemberReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    tokenPinReady(pin: string): void {\n+      this.pinSaveBusy = true;\n+\n+      this.requestPayload = {\n+        software_token_pin: pin,\n+        ignore_warnings: false,\n+      };\n+\n+      // If owner member is not already set up add it\n+      if (!this.isServerOwnerInitialized) {\n+        this.requestPayload.owner_member_class = this.$store.getters.initServerMemberClass;\n+        this.requestPayload.owner_member_code = this.$store.getters.initServerMemberCode;\n+      }\n+\n+      // Add security code if it's not already set up\n+      if (!this.isServerCodeInitialized) {\n+        this.requestPayload.security_server_code = this.$store.getters.initServerSSCode;\n+      }\n+\n+      this.initServer(this.requestPayload);\n+    },\n+\n+    acceptInitWarning(): void {\n+      this.requestPayload.ignore_warnings = true;\n+      this.confirmInitWarning = false;\n+      this.initServer(this.requestPayload);\n+    },\n+\n+    initServer(payload: any): void {\n+      api\n+        .post('/initialization', payload)\n+        .then((res) => {\n+          this.$store.dispatch('showSuccess', 'initialConfiguration.success');\n+          this.pinSaveBusy = false;\n+          this.fetchCurrentSecurityServer();\n+          this.$router.replace({ name: RouteName.Clients });\n+        })\n+        .catch((error) => {\n+          if (error.response.data.warnings) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 171}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4MzY2Ng==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383666", "createdAt": "2020-06-09T12:45:49Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/InitialConfiguration.vue", "diffHunk": "@@ -0,0 +1,231 @@\n+<template>\n+  <div class=\"view-wrap\">\n+    <subViewTitle\n+      class=\"view-title\"\n+      :title=\"$t('initialConfiguration.title')\"\n+      :showClose=\"false\"\n+      data-test=\"wizard-title\"\n+    />\n+    <v-stepper\n+      :alt-labels=\"true\"\n+      v-model=\"currentStep\"\n+      class=\"stepper noshadow\"\n+    >\n+      <!-- Headers without anchor page -->\n+      <v-stepper-header v-if=\"isAnchorImported\" class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+      <!-- Headers with anchor page -->\n+      <v-stepper-header v-else class=\"noshadow\">\n+        <v-stepper-step :complete=\"currentStep > 1\" step=\"1\">{{\n+          $t('initialConfiguration.anchor.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 2\" step=\"2\">{{\n+          $t('initialConfiguration.member.title')\n+        }}</v-stepper-step>\n+        <v-divider></v-divider>\n+        <v-stepper-step :complete=\"currentStep > 3\" step=\"3\">{{\n+          $t('initialConfiguration.pin.title')\n+        }}</v-stepper-step>\n+      </v-stepper-header>\n+\n+      <v-stepper-items v-if=\"isAnchorImported\" class=\"stepper-content\">\n+        <!-- Member step -->\n+        <v-stepper-content step=\"1\">\n+          <OwnerMemberStep\n+            @done=\"ownerMemberReady\"\n+            :showPreviousButton=\"false\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"2\">\n+          <TokenPinStep @previous=\"currentStep = 1\" @done=\"tokenPinReady\" />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+\n+      <v-stepper-items v-else class=\"stepper-content\">\n+        <!-- Anchor step -->\n+        <v-stepper-content step=\"1\">\n+          <ConfigurationAnchorStep @done=\"configAnchorReady\" />\n+        </v-stepper-content>\n+        <!-- Member step -->\n+        <v-stepper-content step=\"2\">\n+          <OwnerMemberStep\n+            @previous=\"currentStep = 1\"\n+            @done=\"ownerMemberReady\"\n+          />\n+        </v-stepper-content>\n+        <!-- PIN step -->\n+        <v-stepper-content step=\"3\">\n+          <TokenPinStep\n+            @previous=\"currentStep = 2\"\n+            @done=\"tokenPinReady\"\n+            :saveBusy=\"pinSaveBusy\"\n+          />\n+        </v-stepper-content>\n+      </v-stepper-items>\n+    </v-stepper>\n+\n+    <!-- Confirm dialog for warnings when initializing server -->\n+    <warningDialog\n+      :dialog=\"confirmInitWarning\"\n+      :warnings=\"warningInfo\"\n+      localizationParent=\"initialConfiguration.warning\"\n+      @cancel=\"confirmInitWarning = false\"\n+      @accept=\"acceptInitWarning()\"\n+    ></warningDialog>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import TokenPinStep from './TokenPinStep.vue';\n+import ConfigurationAnchorStep from './ConfigurationAnchorStep.vue';\n+import WarningDialog from './WarningDialog.vue';\n+import OwnerMemberStep from './OwnerMemberStep.vue';\n+import { Key, Token } from '@/openapi-types';\n+import { RouteName, UsageTypes } from '@/global';\n+import * as api from '@/util/api';\n+\n+export default Vue.extend({\n+  components: {\n+    SubViewTitle,\n+    TokenPinStep,\n+    ConfigurationAnchorStep,\n+    OwnerMemberStep,\n+    WarningDialog,\n+  },\n+  props: {},\n+  computed: {\n+    ...mapGetters([\n+      'isAnchorImported',\n+      'isServerOwnerInitialized',\n+      'isServerCodeInitialized',\n+    ]),\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+      pinSaveBusy: false,\n+      warningInfo: [],\n+      confirmInitWarning: false,\n+      requestPayload: undefined as any,\n+    };\n+  },\n+  methods: {\n+    configAnchorReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    ownerMemberReady(): void {\n+      this.currentStep++;\n+    },\n+\n+    tokenPinReady(pin: string): void {\n+      this.pinSaveBusy = true;\n+\n+      this.requestPayload = {\n+        software_token_pin: pin,\n+        ignore_warnings: false,\n+      };\n+\n+      // If owner member is not already set up add it\n+      if (!this.isServerOwnerInitialized) {\n+        this.requestPayload.owner_member_class = this.$store.getters.initServerMemberClass;\n+        this.requestPayload.owner_member_code = this.$store.getters.initServerMemberCode;\n+      }\n+\n+      // Add security code if it's not already set up\n+      if (!this.isServerCodeInitialized) {\n+        this.requestPayload.security_server_code = this.$store.getters.initServerSSCode;\n+      }\n+\n+      this.initServer(this.requestPayload);\n+    },\n+\n+    acceptInitWarning(): void {\n+      this.requestPayload.ignore_warnings = true;\n+      this.confirmInitWarning = false;\n+      this.initServer(this.requestPayload);\n+    },\n+\n+    initServer(payload: any): void {\n+      api\n+        .post('/initialization', payload)\n+        .then((res) => {\n+          this.$store.dispatch('showSuccess', 'initialConfiguration.success');\n+          this.pinSaveBusy = false;\n+          this.fetchCurrentSecurityServer();\n+          this.$router.replace({ name: RouteName.Clients });\n+        })\n+        .catch((error) => {\n+          if (error.response.data.warnings) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1NjU4MA=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 171}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAyNDc2OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/OwnerMemberStep.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxMzoxOVrOGhAKvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NTozOFrOGhHxeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1ODk0Mw==", "bodyText": "Do we know the type for this parameter?", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437258943", "createdAt": "2020-06-09T09:13:19Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/OwnerMemberStep.vue", "diffHunk": "@@ -0,0 +1,235 @@\n+<template>\n+  <div>\n+    <ValidationObserver ref=\"form1\" v-slot=\"{ validate, invalid }\">\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberName\"\n+          helpText=\"wizard.client.memberNameTooltip\"\n+        />\n+        <div v-if=\"memberName\" data-test=\"selected-member-name\">\n+          {{ memberName }}\n+        </div>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberClass\"\n+          helpText=\"wizard.client.memberClassTooltip\"\n+        />\n+\n+        <ValidationProvider name=\"addClient.memberClass\" rules=\"required\">\n+          <v-select\n+            v-model=\"memberClass\"\n+            :items=\"memberClassesCurrentInstance\"\n+            :disabled=\"isServerOwnerInitialized\"\n+            data-test=\"member-class-input\"\n+            class=\"form-input\"\n+          ></v-select>\n+        </ValidationProvider>\n+      </div>\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberCode\"\n+          helpText=\"wizard.client.memberCodeTooltip\"\n+        />\n+\n+        <ValidationProvider\n+          name=\"addClient.memberCode\"\n+          rules=\"required\"\n+          v-slot=\"{ errors }\"\n+        >\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            :disabled=\"isServerOwnerInitialized\"\n+            v-model=\"memberCode\"\n+            data-test=\"member-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"fields.securityServerCode\"\n+          helpText=\"initialConfiguration.member.serverCodeHelp\"\n+        />\n+\n+        <ValidationProvider\n+          name=\"securityServerCode\"\n+          rules=\"required\"\n+          v-slot=\"{ errors }\"\n+        >\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            :disabled=\"isServerCodeInitialized\"\n+            v-model=\"securityServerCode\"\n+            data-test=\"security-server-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"button-footer\">\n+        <v-spacer></v-spacer>\n+        <div>\n+          <large-button\n+            v-if=\"showPreviousButton\"\n+            @click=\"previous\"\n+            outlined\n+            class=\"previous-button\"\n+            data-test=\"previous-button\"\n+            >{{ $t('action.previous') }}</large-button\n+          >\n+          <large-button\n+            :disabled=\"invalid\"\n+            @click=\"done\"\n+            data-test=\"save-button\"\n+            >{{ $t(saveButtonText) }}</large-button\n+          >\n+        </div>\n+      </div>\n+    </ValidationObserver>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    FormLabel,\n+  },\n+  props: {\n+    saveButtonText: {\n+      type: String,\n+      default: 'action.continue',\n+    },\n+    showPreviousButton: {\n+      type: Boolean,\n+      default: true,\n+    },\n+  },\n+  computed: {\n+    ...mapGetters([\n+      'memberClassesCurrentInstance',\n+      'initExistingMembers',\n+      'currentSecurityServer',\n+      'isServerCodeInitialized',\n+      'isServerOwnerInitialized',\n+      'memberName',\n+    ]),\n+\n+    memberClass: {\n+      get(): string {\n+        if (this.currentSecurityServer?.member_class) {\n+          return this.currentSecurityServer.member_class;\n+        }\n+        return this.$store.getters.initServerMemberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerMemberClass', value);\n+      },\n+    },\n+    memberCode: {\n+      get(): string {\n+        if (this.currentSecurityServer?.member_code) {\n+          return this.currentSecurityServer.member_code;\n+        }\n+        return this.$store.getters.initServerMemberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerMemberCode', value);\n+      },\n+    },\n+    securityServerCode: {\n+      get(): string {\n+        if (this.currentSecurityServer?.server_code) {\n+          return this.currentSecurityServer.server_code;\n+        }\n+        return this.$store.getters.initServerSSCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerSSCode', value);\n+      },\n+    },\n+  },\n+  methods: {\n+    done(): void {\n+      this.$emit('done');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+\n+    checkMember(): void {\n+      if (this.memberClass?.length > 0 && this.memberCode?.length > 0) {\n+        this.$store\n+          .dispatch('fetchMemberName', {\n+            memberClass: this.memberClass,\n+            memberCode: this.memberCode,\n+          })\n+          .catch((error) => {\n+            if (error.response.status === 404) {\n+              // no match found\n+              return;\n+            }\n+            this.$store.dispatch('showError', error);\n+          });\n+      }\n+    },\n+  },\n+\n+  watch: {\n+    memberClassesCurrentInstance(val) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 192}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4MzU0Ng==", "bodyText": "yes, added the type", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383546", "createdAt": "2020-06-09T12:45:38Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/OwnerMemberStep.vue", "diffHunk": "@@ -0,0 +1,235 @@\n+<template>\n+  <div>\n+    <ValidationObserver ref=\"form1\" v-slot=\"{ validate, invalid }\">\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberName\"\n+          helpText=\"wizard.client.memberNameTooltip\"\n+        />\n+        <div v-if=\"memberName\" data-test=\"selected-member-name\">\n+          {{ memberName }}\n+        </div>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberClass\"\n+          helpText=\"wizard.client.memberClassTooltip\"\n+        />\n+\n+        <ValidationProvider name=\"addClient.memberClass\" rules=\"required\">\n+          <v-select\n+            v-model=\"memberClass\"\n+            :items=\"memberClassesCurrentInstance\"\n+            :disabled=\"isServerOwnerInitialized\"\n+            data-test=\"member-class-input\"\n+            class=\"form-input\"\n+          ></v-select>\n+        </ValidationProvider>\n+      </div>\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"wizard.memberCode\"\n+          helpText=\"wizard.client.memberCodeTooltip\"\n+        />\n+\n+        <ValidationProvider\n+          name=\"addClient.memberCode\"\n+          rules=\"required\"\n+          v-slot=\"{ errors }\"\n+        >\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            :disabled=\"isServerOwnerInitialized\"\n+            v-model=\"memberCode\"\n+            data-test=\"member-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"row-wrap\">\n+        <FormLabel\n+          labelText=\"fields.securityServerCode\"\n+          helpText=\"initialConfiguration.member.serverCodeHelp\"\n+        />\n+\n+        <ValidationProvider\n+          name=\"securityServerCode\"\n+          rules=\"required\"\n+          v-slot=\"{ errors }\"\n+        >\n+          <v-text-field\n+            class=\"form-input\"\n+            type=\"text\"\n+            :error-messages=\"errors\"\n+            :disabled=\"isServerCodeInitialized\"\n+            v-model=\"securityServerCode\"\n+            data-test=\"security-server-code-input\"\n+          ></v-text-field>\n+        </ValidationProvider>\n+      </div>\n+\n+      <div class=\"button-footer\">\n+        <v-spacer></v-spacer>\n+        <div>\n+          <large-button\n+            v-if=\"showPreviousButton\"\n+            @click=\"previous\"\n+            outlined\n+            class=\"previous-button\"\n+            data-test=\"previous-button\"\n+            >{{ $t('action.previous') }}</large-button\n+          >\n+          <large-button\n+            :disabled=\"invalid\"\n+            @click=\"done\"\n+            data-test=\"save-button\"\n+            >{{ $t(saveButtonText) }}</large-button\n+          >\n+        </div>\n+      </div>\n+    </ValidationObserver>\n+  </div>\n+</template>\n+\n+<script lang=\"ts\">\n+import Vue from 'vue';\n+import { mapGetters } from 'vuex';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+\n+export default Vue.extend({\n+  components: {\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    FormLabel,\n+  },\n+  props: {\n+    saveButtonText: {\n+      type: String,\n+      default: 'action.continue',\n+    },\n+    showPreviousButton: {\n+      type: Boolean,\n+      default: true,\n+    },\n+  },\n+  computed: {\n+    ...mapGetters([\n+      'memberClassesCurrentInstance',\n+      'initExistingMembers',\n+      'currentSecurityServer',\n+      'isServerCodeInitialized',\n+      'isServerOwnerInitialized',\n+      'memberName',\n+    ]),\n+\n+    memberClass: {\n+      get(): string {\n+        if (this.currentSecurityServer?.member_class) {\n+          return this.currentSecurityServer.member_class;\n+        }\n+        return this.$store.getters.initServerMemberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerMemberClass', value);\n+      },\n+    },\n+    memberCode: {\n+      get(): string {\n+        if (this.currentSecurityServer?.member_code) {\n+          return this.currentSecurityServer.member_code;\n+        }\n+        return this.$store.getters.initServerMemberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerMemberCode', value);\n+      },\n+    },\n+    securityServerCode: {\n+      get(): string {\n+        if (this.currentSecurityServer?.server_code) {\n+          return this.currentSecurityServer.server_code;\n+        }\n+        return this.$store.getters.initServerSSCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('storeInitServerSSCode', value);\n+      },\n+    },\n+  },\n+  methods: {\n+    done(): void {\n+      this.$emit('done');\n+    },\n+    previous(): void {\n+      this.$emit('previous');\n+    },\n+\n+    checkMember(): void {\n+      if (this.memberClass?.length > 0 && this.memberCode?.length > 0) {\n+        this.$store\n+          .dispatch('fetchMemberName', {\n+            memberClass: this.memberClass,\n+            memberCode: this.memberCode,\n+          })\n+          .catch((error) => {\n+            if (error.response.status === 404) {\n+              // no match found\n+              return;\n+            }\n+            this.$store.dispatch('showError', error);\n+          });\n+      }\n+    },\n+  },\n+\n+  watch: {\n+    memberClassesCurrentInstance(val) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI1ODk0Mw=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDAzNjgyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/WarningDialog.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxNjowOFrOGhARyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NToyN1rOGhHxEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2MDc0Nw==", "bodyText": "data-test for buttons", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437260747", "createdAt": "2020-06-09T09:16:08Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/WarningDialog.vue", "diffHunk": "@@ -0,0 +1,73 @@\n+<template>\n+  <v-dialog :value=\"dialog\" persistent :max-width=\"maxWidth\">\n+    <v-card>\n+      <v-card-title class=\"headline\">{{ $t('warning') }}</v-card-title>\n+      <v-card-text>\n+        <div v-for=\"warning in warnings\" :key=\"warning.code\">\n+          <!-- create the localisation key from warning code -->\n+          <div class=\"dlg-warning-header\">\n+            {{ $t(localizationParent + '.' + warning.code) }}\n+          </div>\n+          <div v-for=\"meta in warning.metadata\" :key=\"meta\">{{ meta }}</div>\n+        </div>\n+      </v-card-text>\n+      <v-card-actions>\n+        <v-spacer></v-spacer>\n+        <v-btn color=\"primary\" text outlined @click=\"cancel()\">{{\n+          $t(cancelButtonText)\n+        }}</v-btn>\n+        <v-btn color=\"primary\" text outlined @click=\"accept()\">{{", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4MzQ0Mw==", "bodyText": "added", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383443", "createdAt": "2020-06-09T12:45:27Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/InitialConfiguration/WarningDialog.vue", "diffHunk": "@@ -0,0 +1,73 @@\n+<template>\n+  <v-dialog :value=\"dialog\" persistent :max-width=\"maxWidth\">\n+    <v-card>\n+      <v-card-title class=\"headline\">{{ $t('warning') }}</v-card-title>\n+      <v-card-text>\n+        <div v-for=\"warning in warnings\" :key=\"warning.code\">\n+          <!-- create the localisation key from warning code -->\n+          <div class=\"dlg-warning-header\">\n+            {{ $t(localizationParent + '.' + warning.code) }}\n+          </div>\n+          <div v-for=\"meta in warning.metadata\" :key=\"meta\">{{ meta }}</div>\n+        </div>\n+      </v-card-text>\n+      <v-card-actions>\n+        <v-spacer></v-spacer>\n+        <v-btn color=\"primary\" text outlined @click=\"cancel()\">{{\n+          $t(cancelButtonText)\n+        }}</v-btn>\n+        <v-btn color=\"primary\" text outlined @click=\"accept()\">{{", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2MDc0Nw=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDA1MDIwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToxODowOVrOGhAZYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMjo0NToxOVrOGhHwyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2MjY4OQ==", "bodyText": "While you're at it you could add data-test to the input-element before this large-button. It's not a part of this PR, but for the common good :)", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437262689", "createdAt": "2020-06-09T09:18:09Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "diffHunk": "@@ -12,17 +12,23 @@\n         data-test=\"system-parameters-configuration-anchor-upload-button\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzM4MzM3MQ==", "bodyText": "That input element is not visible in the UI so it can't be clicked in the e2e tests. It's part of the file upload \"magic\".", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437383371", "createdAt": "2020-06-09T12:45:19Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "diffHunk": "@@ -12,17 +12,23 @@\n         data-test=\"system-parameters-configuration-anchor-upload-button\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2MjY4OQ=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDA2ODgxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOToyMToxMFrOGhAkTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxMzowODo0M1rOGhI6ow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2NTQ4NA==", "bodyText": "Missing typings in this data-block", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437265484", "createdAt": "2020-06-09T09:21:10Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "diffHunk": "@@ -106,8 +110,15 @@ export default Vue.extend({\n   components: {\n     LargeButton,\n   },\n+  props: {\n+    initMode: {\n+      type: Boolean,\n+      default: false,\n+    },\n+  },\n   data() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 72}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQwMjI3NQ==", "bodyText": "fixed", "url": "https://github.com/nordic-institute/X-Road/pull/522#discussion_r437402275", "createdAt": "2020-06-09T13:08:43Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Settings/SystemParameters/UploadConfigurationAnchorDialog.vue", "diffHunk": "@@ -106,8 +110,15 @@ export default Vue.extend({\n   components: {\n     LargeButton,\n   },\n+  props: {\n+    initMode: {\n+      type: Boolean,\n+      default: false,\n+    },\n+  },\n   data() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI2NTQ4NA=="}, "originalCommit": {"oid": "5ad07518acfd285a62aa646cc920c5c8943bbd32"}, "originalPosition": 72}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2717, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}