{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4NzEzMTE1", "number": 594, "title": "XRDDEV-1190", "bodyText": "Fix error code 500 when REST endpoint is updated:\n\nReturn error code 409 with metadata when updating endpoint fails because of another endpoint with the same signature already exists.\nDataIntegrityViolationException is  thrown when another endpoint with the same code, method and path already exists.\nDataIntegrityViolationException is catched on the controller layer because the exception is thrown when the transaction commits and therefore, it must be catched outside of the transaction's scope. It cannot be catched on the service layer that would be more logical place.\nRemove a duplicate, unsused file (/views/Service/Endpoints/EndpointDetails.vue)\n\nThe correct file is: /views/Service/Endpoints/Endpoint/EndpointDetails.vue\n\n\n\nJIRA issue: https://jira.niis.org/browse/XRDDEV-1190", "createdAt": "2020-07-14T07:55:35Z", "url": "https://github.com/nordic-institute/X-Road/pull/594", "merged": true, "mergeCommit": {"oid": "8b60c1bffdc2c7b2eefc5626d013ce4b3f017b50"}, "closed": true, "closedAt": "2020-07-15T13:18:49Z", "author": {"login": "petkivim"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc0xHSRgH2gAyNDQ4NzEzMTE1OmFlZDkxOTM1YTkyOTRlMTk1N2JmMzQ1NTg2M2UzN2VmZDJlYzFjMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1Kgh5gFqTQ0ODk0MzQ1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "aed91935a9294e1957bf3455863e37efd2ec1c11", "author": {"user": {"login": "petkivim", "name": "Petteri Kivim\u00e4ki"}}, "url": "https://github.com/nordic-institute/X-Road/commit/aed91935a9294e1957bf3455863e37efd2ec1c11", "committedDate": "2020-07-14T07:43:27Z", "message": "XRDDEV-1190 Fix error code 500 when REST endpoint is updated\n\n- Return error code 409 with metadata when updating endpoint fails because of another endpoint with the same signature already exists.\n- Catch DataIntegrityViolationException on controller layer because the exception is thrown when the transaction commits and therefore, it must be catched outside of the transaction's scope."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de04bd54e5eda9e12c8380bf78d085eae257f8dc", "author": {"user": {"login": "petkivim", "name": "Petteri Kivim\u00e4ki"}}, "url": "https://github.com/nordic-institute/X-Road/commit/de04bd54e5eda9e12c8380bf78d085eae257f8dc", "committedDate": "2020-07-14T07:50:57Z", "message": "XRDDEV-1190 Remove a duplicate, unsused file"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "327b78b1c181e275488d7af6291339d487df9d41", "author": {"user": {"login": "petkivim", "name": "Petteri Kivim\u00e4ki"}}, "url": "https://github.com/nordic-institute/X-Road/commit/327b78b1c181e275488d7af6291339d487df9d41", "committedDate": "2020-07-14T09:03:36Z", "message": "XRDDEV-1190 Return status code 400 instead of 409"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4Njc5MTc2", "url": "https://github.com/nordic-institute/X-Road/pull/594#pullrequestreview-448679176", "createdAt": "2020-07-15T07:00:01Z", "commit": {"oid": "327b78b1c181e275488d7af6291339d487df9d41"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzowMDowMVrOGxw4Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwNzowMDowMVrOGxw4Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDgzNDIwNw==", "bodyText": "Should this maybe be a ConflictException instead of bad request?\nIn any case I think controller should not catch DataIntegrityViolationException here\n\nDataIntegrityViolationException is a low level data access layer concept and ideally controller layer should not be aware of such things https://confluence.niis.org/display/XRDDEV/API+backend+implementation#APIbackendimplementation-Layering\nDataIntegrityViolationException is generic in principle, so we do not know for sure that it was caused by this specific problem \"Endpoint with equivalent service code, ...\". OK, now it is probably 99% sure, but this is a relevant issue when you factor in future changes and nontrivial DB constraints\nit deviates from the conventions used in other controllers - they mostly catch service layer exceptions and map those to controller layer / openapi exceptions. ServicesApiController.addEndpoint handles this by\n\n        } catch (EndpointAlreadyExistsException e) {\n            throw new ConflictException(e);\n\nBut, handling this on service layer is probably not as easy as catch DataIntegrityViolationException -> throw EndpointAlreadyExistsException. I believe constraints only kick in when transaction commits, and this only happens when service call ends, so we can't catch DataIntegrityViolationException in the service method? I believe the constraint needs to be validated in a similar way as in addEndpoint \n  \n    \n      X-Road/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ServiceService.java\n    \n    \n        Lines 227 to 230\n      in\n      df9eef1\n    \n    \n    \n    \n\n        \n          \n           if (client.getEndpoint().stream().anyMatch(existingEp -> existingEp.isEquivalent(endpointType))) { \n        \n\n        \n          \n               throw new EndpointAlreadyExistsException(\"Endpoint with equivalent service code, method and path already \" \n        \n\n        \n          \n                       + \"exists for this client\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nIt has to take into account endpoint ID probably, to distinguish between updated endpoint from the rest of them.\nThis adds some extra work to implement the constraints, which is unfortunate. If the service layer checks were too difficult to implement then some compromises or some generic handlers could be made. But I think in this case it should not be too costly to implement the check and be more consistent with the rest of the app.", "url": "https://github.com/nordic-institute/X-Road/pull/594#discussion_r454834207", "createdAt": "2020-07-15T07:00:01Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/EndpointsApiController.java", "diffHunk": "@@ -137,6 +139,10 @@ public EndpointsApiController(\n             throw new ResourceNotFoundException(NOT_FOUND_ERROR_MSG + \" \" + id);\n         } catch (EndpointService.IllegalGeneratedEndpointUpdateException e) {\n             throw new BadRequestException(\"Updating is not allowed for generated endpoint \" + id);\n+        } catch (DataIntegrityViolationException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "327b78b1c181e275488d7af6291339d487df9d41"}, "originalPosition": 18}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb95e94beb26db2d48641de628ca9f889442c0cc", "author": {"user": {"login": "petkivim", "name": "Petteri Kivim\u00e4ki"}}, "url": "https://github.com/nordic-institute/X-Road/commit/cb95e94beb26db2d48641de628ca9f889442c0cc", "committedDate": "2020-07-15T10:23:22Z", "message": "XRDDEV-1190 Refactor based on review comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ4OTQzNDU1", "url": "https://github.com/nordic-institute/X-Road/pull/594#pullrequestreview-448943455", "createdAt": "2020-07-15T13:18:39Z", "commit": {"oid": "cb95e94beb26db2d48641de628ca9f889442c0cc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4134, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}