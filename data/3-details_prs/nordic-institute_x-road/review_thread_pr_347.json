{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5NTcxNDM4", "number": 347, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjowMjo1M1rODdTrjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjowMjo1M1rODdTrjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyMDU3NzQwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/config/RollbackCheckedTransactionManagementConfiguration.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxMjowMjo1M1rOFl1X6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNVQxNDoxMzoyMlrOFl5IBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIxNjEwNw==", "bodyText": "Would be good to use @Override annotation here", "url": "https://github.com/nordic-institute/X-Road/pull/347#discussion_r375216107", "createdAt": "2020-02-05T12:02:53Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/config/RollbackCheckedTransactionManagementConfiguration.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * The MIT License\n+ * Copyright (c) 2018 Estonian Information System Authority (RIA),\n+ * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)\n+ * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.niis.xroad.restapi.config;\n+\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Role;\n+import org.springframework.lang.Nullable;\n+import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;\n+import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration;\n+import org.springframework.transaction.interceptor.DelegatingTransactionAttribute;\n+import org.springframework.transaction.interceptor.TransactionAttribute;\n+import org.springframework.transaction.interceptor.TransactionAttributeSource;\n+\n+import java.lang.reflect.AnnotatedElement;\n+\n+/**\n+ * Changes default Spring @Transactional handling so that it also rolls back when checked exceptions occur\n+ */\n+@Configuration\n+public class RollbackCheckedTransactionManagementConfiguration extends ProxyTransactionManagementConfiguration {\n+\n+    @Bean\n+    @Role(BeanDefinition.ROLE_INFRASTRUCTURE)\n+    public TransactionAttributeSource transactionAttributeSource() {\n+        return new AnnotationTransactionAttributeSource() {\n+\n+            @Nullable\n+            protected TransactionAttribute determineTransactionAttribute(AnnotatedElement element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd4be34cf4a230ce44925b339758ae6036835601"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTI3NzU3Mg==", "bodyText": "Fixed in 22b03fb", "url": "https://github.com/nordic-institute/X-Road/pull/347#discussion_r375277572", "createdAt": "2020-02-05T14:13:22Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/config/RollbackCheckedTransactionManagementConfiguration.java", "diffHunk": "@@ -0,0 +1,67 @@\n+/**\n+ * The MIT License\n+ * Copyright (c) 2018 Estonian Information System Authority (RIA),\n+ * Nordic Institute for Interoperability Solutions (NIIS), Population Register Centre (VRK)\n+ * Copyright (c) 2015-2017 Estonian Information System Authority (RIA), Population Register Centre (VRK)\n+ *\n+ * Permission is hereby granted, free of charge, to any person obtaining a copy\n+ * of this software and associated documentation files (the \"Software\"), to deal\n+ * in the Software without restriction, including without limitation the rights\n+ * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n+ * copies of the Software, and to permit persons to whom the Software is\n+ * furnished to do so, subject to the following conditions:\n+ *\n+ * The above copyright notice and this permission notice shall be included in\n+ * all copies or substantial portions of the Software.\n+ *\n+ * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+ * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+ * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+ * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+ * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+ * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+ * THE SOFTWARE.\n+ */\n+package org.niis.xroad.restapi.config;\n+\n+import org.springframework.beans.factory.config.BeanDefinition;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.context.annotation.Role;\n+import org.springframework.lang.Nullable;\n+import org.springframework.transaction.annotation.AnnotationTransactionAttributeSource;\n+import org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration;\n+import org.springframework.transaction.interceptor.DelegatingTransactionAttribute;\n+import org.springframework.transaction.interceptor.TransactionAttribute;\n+import org.springframework.transaction.interceptor.TransactionAttributeSource;\n+\n+import java.lang.reflect.AnnotatedElement;\n+\n+/**\n+ * Changes default Spring @Transactional handling so that it also rolls back when checked exceptions occur\n+ */\n+@Configuration\n+public class RollbackCheckedTransactionManagementConfiguration extends ProxyTransactionManagementConfiguration {\n+\n+    @Bean\n+    @Role(BeanDefinition.ROLE_INFRASTRUCTURE)\n+    public TransactionAttributeSource transactionAttributeSource() {\n+        return new AnnotationTransactionAttributeSource() {\n+\n+            @Nullable\n+            protected TransactionAttribute determineTransactionAttribute(AnnotatedElement element) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NTIxNjEwNw=="}, "originalCommit": {"oid": "bd4be34cf4a230ce44925b339758ae6036835601"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2904, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}