{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNDM4Mzk1", "number": 721, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyMTo1NFrOEmZ3FQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyMTo1NFrOEmZ3FQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4NzA1MDQ1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwNzoyMTo1NFrOHWZxOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjo1NDozM1rOHY8RGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjkyMA==", "bodyText": "I think you could use the custom isEmpty -utility method from util/helpers.ts here.\nSo the clause could be written like this (double check!):\nif (isEmpty(notification) || isEmpty(errorNotifications)) {", "url": "https://github.com/nordic-institute/X-Road/pull/721#discussion_r493252920", "createdAt": "2020-09-23T07:21:54Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "diffHunk": "@@ -28,41 +28,104 @@ import { RootState } from '../types';\n import { Notification } from '@/ui-types';\n \n export interface NotificationsState {\n-  successMessageCode: string;\n-  successMessageRaw: string;\n-  showSuccessCode: boolean;\n-  showSuccessRaw: boolean;\n-  notifications: Notification[];\n+  errorNotifications: Notification[];\n+  successNotifications: Notification[];\n }\n \n const getDefaultState = () => {\n   return {\n-    successMessageCode: '',\n-    successMessageRaw: '',\n-    showSuccessCode: false,\n-    showSuccessRaw: false,\n-    notifications: [],\n+    errorNotifications: [],\n+    successNotifications: [],\n   };\n };\n \n+// Finds if an array of notifications contains a similar notification.\n+function containsNotification(\n+  errorNotifications: Notification[],\n+  notification: Notification,\n+): number {\n+  if (!notification || !errorNotifications || errorNotifications.length === 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffcf496e4fb9b76f0cd11f0342f5da3dbd454f54"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzYwMTc4Ng==", "bodyText": "isEmpty accepts strings or arrays. And seems that it's currently used only for strings. I'm not sure if it would be good to expand it for Notifications or some more general things.", "url": "https://github.com/nordic-institute/X-Road/pull/721#discussion_r493601786", "createdAt": "2020-09-23T13:41:50Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "diffHunk": "@@ -28,41 +28,104 @@ import { RootState } from '../types';\n import { Notification } from '@/ui-types';\n \n export interface NotificationsState {\n-  successMessageCode: string;\n-  successMessageRaw: string;\n-  showSuccessCode: boolean;\n-  showSuccessRaw: boolean;\n-  notifications: Notification[];\n+  errorNotifications: Notification[];\n+  successNotifications: Notification[];\n }\n \n const getDefaultState = () => {\n   return {\n-    successMessageCode: '',\n-    successMessageRaw: '',\n-    showSuccessCode: false,\n-    showSuccessRaw: false,\n-    notifications: [],\n+    errorNotifications: [],\n+    successNotifications: [],\n   };\n };\n \n+// Finds if an array of notifications contains a similar notification.\n+function containsNotification(\n+  errorNotifications: Notification[],\n+  notification: Notification,\n+): number {\n+  if (!notification || !errorNotifications || errorNotifications.length === 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjkyMA=="}, "originalCommit": {"oid": "ffcf496e4fb9b76f0cd11f0342f5da3dbd454f54"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDA2OTE5Mg==", "bodyText": "Ah yes, I've that notification is an object. But I guess it could be used for errorNotifications", "url": "https://github.com/nordic-institute/X-Road/pull/721#discussion_r494069192", "createdAt": "2020-09-24T06:33:22Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "diffHunk": "@@ -28,41 +28,104 @@ import { RootState } from '../types';\n import { Notification } from '@/ui-types';\n \n export interface NotificationsState {\n-  successMessageCode: string;\n-  successMessageRaw: string;\n-  showSuccessCode: boolean;\n-  showSuccessRaw: boolean;\n-  notifications: Notification[];\n+  errorNotifications: Notification[];\n+  successNotifications: Notification[];\n }\n \n const getDefaultState = () => {\n   return {\n-    successMessageCode: '',\n-    successMessageRaw: '',\n-    showSuccessCode: false,\n-    showSuccessRaw: false,\n-    notifications: [],\n+    errorNotifications: [],\n+    successNotifications: [],\n   };\n };\n \n+// Finds if an array of notifications contains a similar notification.\n+function containsNotification(\n+  errorNotifications: Notification[],\n+  notification: Notification,\n+): number {\n+  if (!notification || !errorNotifications || errorNotifications.length === 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjkyMA=="}, "originalCommit": {"oid": "ffcf496e4fb9b76f0cd11f0342f5da3dbd454f54"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkxNTI4OA==", "bodyText": "I suppose the line would look like this  if (!notification || isEmpty(errorNotifications as [])) {\nand import of the isEmpty would add one line. So it seems a bit boilerplated and I would rather keep it like it is now.\nRelated to the isEmpty method, I think there is a case to make it to accept string only, or somehow define the array type smarter.", "url": "https://github.com/nordic-institute/X-Road/pull/721#discussion_r495915288", "createdAt": "2020-09-28T12:54:33Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "diffHunk": "@@ -28,41 +28,104 @@ import { RootState } from '../types';\n import { Notification } from '@/ui-types';\n \n export interface NotificationsState {\n-  successMessageCode: string;\n-  successMessageRaw: string;\n-  showSuccessCode: boolean;\n-  showSuccessRaw: boolean;\n-  notifications: Notification[];\n+  errorNotifications: Notification[];\n+  successNotifications: Notification[];\n }\n \n const getDefaultState = () => {\n   return {\n-    successMessageCode: '',\n-    successMessageRaw: '',\n-    showSuccessCode: false,\n-    showSuccessRaw: false,\n-    notifications: [],\n+    errorNotifications: [],\n+    successNotifications: [],\n   };\n };\n \n+// Finds if an array of notifications contains a similar notification.\n+function containsNotification(\n+  errorNotifications: Notification[],\n+  notification: Notification,\n+): number {\n+  if (!notification || !errorNotifications || errorNotifications.length === 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzI1MjkyMA=="}, "originalCommit": {"oid": "ffcf496e4fb9b76f0cd11f0342f5da3dbd454f54"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2701, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}