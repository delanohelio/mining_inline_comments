{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzNTEzODQy", "number": 577, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo1MjoyN1rOEMCtfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjowMTo1MVrOEMC5qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDYyNzgxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo1MjoyN1rOGt7EKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzoyOToxOFrOGubg-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNjgyNA==", "bodyText": "It would be a bit more efficient to avoid creating the potentially large String if logging is not set at trace level. Suggestion: surround with if ( log.isTraceEnabled() ) ....", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450806824", "createdAt": "2020-07-07T11:52:27Z", "author": {"login": "jhyoty"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzODQ4OQ==", "bodyText": "Added the suggested if clause", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451338489", "createdAt": "2020-07-08T07:29:18Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNjgyNA=="}, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDYzMzkyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMTo1NDoyN1rOGt7IGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzozMToxMlrOGublPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNzgzMw==", "bodyText": "Instead of WsdlParseException, one could use e.g. UncheckedIOException (and avoid using SneakyThrows).  It seems that most exceptions are anyway converted to WsdlParseExceptions on a higher level.", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450807833", "createdAt": "2020-07-07T11:54:27Z", "author": {"login": "jhyoty"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzOTU4MQ==", "bodyText": "Changed to UncheckedIOException", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451339581", "createdAt": "2020-07-08T07:31:12Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgwNzgzMw=="}, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMDY1ODk5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjowMTo1MVrOGt7XMw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOFQwNzozMTo0NlrOGubmbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxMTY5OQ==", "bodyText": "This catches also java.lang.Errors, which should not be normally done. Should be narrowed to the actual possible checked exception types or at least \"Exception\".", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r450811699", "createdAt": "2020-07-07T12:01:51Z", "author": {"login": "jhyoty"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));\n \n                 return new InputSource(new ByteArrayInputStream(response));\n+            } catch (WsdlParseException e) {\n+                throw e;\n             } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MTMzOTg4NQ==", "bodyText": "Updated to catch Exceptions", "url": "https://github.com/nordic-institute/X-Road/pull/577#discussion_r451339885", "createdAt": "2020-07-08T07:31:46Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/wsdl/WsdlParser.java", "diffHunk": "@@ -282,22 +288,35 @@ public ServiceInfo(String name, String title, String url,\n             this.wsdlUrl = wsdlUrl;\n         }\n \n+        // cannot change the method signature when overriding so we need to sneakily throw the WsdlParseException\n+        @SneakyThrows(WsdlParseException.class)\n         @Override\n         public InputSource getBaseInputSource() {\n-            try {\n+            try (ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream()) {\n                 URLConnection conn = new URL(wsdlUrl).openConnection();\n                 if (conn instanceof HttpsURLConnection) {\n                     configureHttps((HttpsURLConnection) conn);\n                 }\n \n-                // cache the response\n-                byte[] response;\n                 try (InputStream in = conn.getInputStream()) {\n-                    response = IOUtils.toByteArray(in);\n+                    long count = 0;\n+                    int n;\n+                    byte[] buf = new byte[BUF_SIZE];\n+                    while ((n = in.read(buf)) != -1) {\n+                        count += n;\n+                        if (count > MAX_DESCRIPTION_SIZE) {\n+                            throw new WsdlParseException(\n+                                    \"Error reading WSDL: Size exceeds \" + MAX_DESCRIPTION_SIZE + \" bytes.\");\n+                        }\n+                        byteArrayOutputStream.write(buf, 0, n);\n+                    }\n                 }\n+                byte[] response = byteArrayOutputStream.toByteArray();\n                 log.trace(\"Received WSDL response: {}\", new String(response));\n \n                 return new InputSource(new ByteArrayInputStream(response));\n+            } catch (WsdlParseException e) {\n+                throw e;\n             } catch (Throwable t) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDgxMTY5OQ=="}, "originalCommit": {"oid": "40ece9e3adbafe6317e488c5dac0e9f17e1719b1"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2736, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}