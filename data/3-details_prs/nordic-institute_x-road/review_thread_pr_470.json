{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MTk5NTMz", "number": 470, "reviewThreads": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNDo1NDo1MVrOD2e-ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjowMjozMlrOD3CJDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDU3MjExOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNDo1NDo1MVrOGMQrlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxMzo0N1rOGMrp1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUwOTM5Nw==", "bodyText": "There are a couple of changes to queryparameters in develop so I guess this change should be made:\nis_not_local_client -> exclude_local\nAlso internal_search -queryparameter can be removed. Actually only true value would do filtering, false does nothing.", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415509397", "createdAt": "2020-04-27T04:54:51Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -112,12 +112,33 @@ export const actions: ActionTree<AddClientState, RootState> = {\n       });\n   },\n \n+  fetchSelectableForSubsystem({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=false&show_members=false&is_not_local_client=true`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MTMxOA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415951318", "createdAt": "2020-04-27T16:13:47Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -112,12 +112,33 @@ export const actions: ActionTree<AddClientState, RootState> = {\n       });\n   },\n \n+  fetchSelectableForSubsystem({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=false&show_members=false&is_not_local_client=true`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUwOTM5Nw=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDU4MDA4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNDo1ODowM1rOGMQvpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNTozMlrOGMru8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxMDQzOQ==", "bodyText": "Same as above", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415510439", "createdAt": "2020-04-27T04:58:03Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -112,12 +112,33 @@ export const actions: ActionTree<AddClientState, RootState> = {\n       });\n   },\n \n+  fetchSelectableForSubsystem({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=false&show_members=false&is_not_local_client=true`)\n+      .then((res) => {\n+        commit('storeReservedClients', res.data);\n+      })\n+      .catch((error) => {\n+        throw error;\n+      });\n+  },\n+\n+  fetchReservedSubsystems({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=true`)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjYyNg==", "bodyText": "Here the internal_search is using true which I suppose is the right thing here. Now I moved the whole method out of vuex, but the call is still same.", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415952626", "createdAt": "2020-04-27T16:15:32Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/addClient.ts", "diffHunk": "@@ -112,12 +112,33 @@ export const actions: ActionTree<AddClientState, RootState> = {\n       });\n   },\n \n+  fetchSelectableForSubsystem({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=false&show_members=false&is_not_local_client=true`)\n+      .then((res) => {\n+        commit('storeReservedClients', res.data);\n+      })\n+      .catch((error) => {\n+        throw error;\n+      });\n+  },\n+\n+  fetchReservedSubsystems({ commit, rootGetters }, client: Client) {\n+    // Fetch clients from backend that match the selected client without subsystem code\n+    return api.get(`/clients?instance=${client.instance_id}&member_class=${client.member_class}&member_code=${client.member_code}&internal_search=true`)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUxMDQzOQ=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDY1NzczOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/client.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNToyODoyNFrOGMRXLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNTo0MFrOGMrvXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyMDU1Ng==", "bodyText": "It feels a bit inconsistent that we have here 3 methods returning a promise and one of them having error handling but the two others do not. I wonder if we could come up a more consistent way?", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415520556", "createdAt": "2020-04-27T05:28:24Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/client.ts", "diffHunk": "@@ -210,6 +202,33 @@ export const actions: ActionTree<ClientState, RootState> = {\n \n   },\n \n+  registerClient({ commit, state }, { instanceId, memberClass, memberCode, subsystemCode }) {\n+    const clientId = instanceId + ':' + memberClass + ':' + memberCode + ':' + subsystemCode;\n+    return axios.put(`/clients/${clientId}/register`, {});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjczNA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415952734", "createdAt": "2020-04-27T16:15:40Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/store/modules/client.ts", "diffHunk": "@@ -210,6 +202,33 @@ export const actions: ActionTree<ClientState, RootState> = {\n \n   },\n \n+  registerClient({ commit, state }, { instanceId, memberClass, memberCode, subsystemCode }) {\n+    const clientId = instanceId + ':' + memberClass + ':' + memberCode + ':' + subsystemCode;\n+    return axios.put(`/clients/${clientId}/register`, {});", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyMDU1Ng=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDcwMDYxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo0NTo0OVrOGMRuLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNTo0N1rOGMrvsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyNjQ0NQ==", "bodyText": "at least 3 data-test -attributes with the 'selected-member-name' -value", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415526445", "createdAt": "2020-04-27T05:45:49Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MjgxOQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415952819", "createdAt": "2020-04-27T16:15:47Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyNjQ0NQ=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDcxMTE1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo0OTo1M1rOGMR0AQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNTo1N1rOGMrwRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyNzkzNw==", "bodyText": "add typings to all values in data-block", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415527937", "createdAt": "2020-04-27T05:49:53Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 173}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1Mjk2NQ==", "bodyText": "Added typings", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415952965", "createdAt": "2020-04-27T16:15:57Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyNzkzNw=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 173}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDcxODk1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo1MjozOFrOGMR4HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjoxOFrOGMrxkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyODk4OQ==", "bodyText": "Wrap if-clause condition in to a separate function for better readability", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415528989", "createdAt": "2020-04-27T05:52:38Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 233}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzI5OQ==", "bodyText": "Fixed. It's using a shared function now.", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953299", "createdAt": "2020-04-27T16:16:18Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUyODk4OQ=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 233}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDcyODEzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo1NTo1MlrOGMR8zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjoyOVrOGMryQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDE4OA==", "bodyText": "response is not used. I think it could be removed.", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415530188", "createdAt": "2020-04-27T05:55:52Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 259}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzQ3Mw==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953473", "createdAt": "2020-04-27T16:16:29Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDE4OA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 259}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDcyODUyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo1NjowMFrOGMR9Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjozNFrOGMryhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDI0Mg==", "bodyText": "response is not used", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415530242", "createdAt": "2020-04-27T05:56:00Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 283}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzU0MQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953541", "createdAt": "2020-04-27T16:16:34Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDI0Mg=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 283}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDczMDMwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo1NjoyNFrOGMR93w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjozOVrOGMryxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDQ2Mw==", "bodyText": "response is not used", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415530463", "createdAt": "2020-04-27T05:56:24Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 305}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzYwNg==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953606", "createdAt": "2020-04-27T16:16:39Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDQ2Mw=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 305}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDczMTY4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNTo1Njo1M1rOGMR-pA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjo0NFrOGMrzCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDY2MA==", "bodyText": "response is not used", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415530660", "createdAt": "2020-04-27T05:56:53Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {\n+          this.$store.dispatch('fetchReservedSubsystems', selectedMember);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch \"parent\" client from backend\n+      this.$store.dispatch('fetchClient', this.clientId).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 317}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzY3Mw==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953673", "createdAt": "2020-04-27T16:16:44Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {\n+          this.$store.dispatch('fetchReservedSubsystems', selectedMember);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch \"parent\" client from backend\n+      this.$store.dispatch('fetchClient', this.clientId).then(\n+        (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMDY2MA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 317}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc0NTQxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowMTozNFrOGMSF5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjo0OFrOGMrzSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMjUxNw==", "bodyText": "Perhaps refactor styles here so that they're consistent in using hierarchial style definitions. .view-wrap contains all the other class style definitions in this comment rows. Currently only info-block and action-block hierarchy is defined.", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415532517", "createdAt": "2020-04-27T06:01:34Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {\n+          this.$store.dispatch('fetchReservedSubsystems', selectedMember);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch \"parent\" client from backend\n+      this.$store.dispatch('fetchClient', this.clientId).then(\n+        (response) => {\n+          this.$store.dispatch('fetchSelectableForSubsystem', this.client);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n+  },\n+\n+  created() {\n+    this.fetchData();\n   },\n });\n </script>\n \n <style lang=\"scss\" scoped>\n-.input-title {\n-  max-width: 160px;\n-  text-align: left;\n+@import '../../assets/colors';\n+@import '../../assets/shared';\n+@import '../../assets/wizards';\n+\n+.view-wrap {\n+  width: 100%;\n+  max-width: 1000px;\n+  margin: 10px;\n }\n \n-.subs-input {\n-  text-align: left;\n+.view-title {\n+  width: 100%;\n+  max-width: 100%;\n+  margin-bottom: 30px;\n }\n \n-.input-name {\n-  padding-top: 0;\n-  margin-top: 0;\n+.info-block {\n+  display: flex;\n+  flex-direction: row;\n+  margin-bottom: 40px;\n+\n+  .action-block {\n+    margin-top: 30px;\n+    margin-left: auto;\n+    margin-right: 0px;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 367}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzczOA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953738", "createdAt": "2020-04-27T16:16:48Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,317 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_name}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_class}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div v-if=\"client\" data-test=\"selected-member-name\">{{client.member_code}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button outlined @click=\"cancel\" data-test=\"cancel-button\">{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableClients\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    clientId: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      currentStep: 1,\n+\n+      disableDone: false,\n+      certificationService: undefined,\n+      filteredServiceList: [],\n+      showSelectClient: false as boolean,\n+      registerChecked: true,\n+    };\n+  },\n+  computed: {\n+    ...mapGetters(['client', 'selectableClients', 'reservedClients']),\n+    memberClass: {\n+      get(): string {\n+        return this.$store.getters.memberClass;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberClass', value);\n+      },\n+    },\n+\n+    memberCode: {\n+      get(): string {\n+        return this.$store.getters.memberCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setMemberCode', value);\n+      },\n+    },\n+\n+    subsystemCode: {\n+      get(): string {\n+        return this.$store.getters.subsystemCode;\n+      },\n+      set(value: string) {\n+        this.$store.commit('setSubsystemCode', value);\n+      },\n+    },\n+\n+    selectedMember: {\n+      get(): Client {\n+        return this.$store.getters.selectedMember;\n+      },\n+      set(value: Client) {\n+        this.$store.commit('setMember', value);\n+      },\n+    },\n+\n+    duplicateClient(): boolean {\n+      if (!this.memberClass || !this.memberCode || !this.subsystemCode) {\n+        return false;\n+      }\n+\n+      if (\n+        this.reservedClients.some((e: Client) => {\n+          if (e.member_class.toLowerCase() !== this.memberClass.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.member_code.toLowerCase() !== this.memberCode.toLowerCase()) {\n+            return false;\n+          }\n+\n+          if (e.subsystem_code !== this.subsystemCode) {\n+            return false;\n+          }\n+          return true;\n+        })\n+      ) {\n+        return true;\n+      }\n+\n+      return false;\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    cancel(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n+      this.$router.replace({ name: RouteName.Clients });\n+    },\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.client.member_name,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.client.instance_id,\n+          memberClass: this.client.member_class,\n+          memberCode: this.client.member_code,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          (response) => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    clientDetailsReady(): void {\n+      this.$store.dispatch('showSuccess', 'subsystem_code');\n+    },\n+\n+    exitView(): void {\n+      this.$store.dispatch('resetState');\n+      this.$store.dispatch('resetAddClientState');\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.$store.dispatch('setSelectedMember', selectedMember).then(\n+        (response) => {\n+          this.$store.dispatch('fetchReservedSubsystems', selectedMember);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch \"parent\" client from backend\n+      this.$store.dispatch('fetchClient', this.clientId).then(\n+        (response) => {\n+          this.$store.dispatch('fetchSelectableForSubsystem', this.client);\n+        },\n+        (error) => {\n+          this.$store.dispatch('showError', error);\n+        },\n+      );\n+    },\n+  },\n+\n+  created() {\n+    this.fetchData();\n   },\n });\n </script>\n \n <style lang=\"scss\" scoped>\n-.input-title {\n-  max-width: 160px;\n-  text-align: left;\n+@import '../../assets/colors';\n+@import '../../assets/shared';\n+@import '../../assets/wizards';\n+\n+.view-wrap {\n+  width: 100%;\n+  max-width: 1000px;\n+  margin: 10px;\n }\n \n-.subs-input {\n-  text-align: left;\n+.view-title {\n+  width: 100%;\n+  max-width: 100%;\n+  margin-bottom: 30px;\n }\n \n-.input-name {\n-  padding-top: 0;\n-  margin-top: 0;\n+.info-block {\n+  display: flex;\n+  flex-direction: row;\n+  margin-bottom: 40px;\n+\n+  .action-block {\n+    margin-top: 30px;\n+    margin-left: auto;\n+    margin-right: 0px;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMjUxNw=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 367}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc1MTk3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowMzo1NVrOGMSJZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjo1M1rOGMrzkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMzQxNA==", "bodyText": "return this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ;", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415533414", "createdAt": "2020-04-27T06:03:55Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "diffHunk": "@@ -27,10 +50,19 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,\n+      unregisterLoading: false,\n     };\n   },\n   computed: {\n     ...mapGetters(['client']),\n+    showUnregister(): boolean {\n+      if (this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1MzgwOQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953809", "createdAt": "2020-04-27T16:16:53Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "diffHunk": "@@ -27,10 +50,19 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,\n+      unregisterLoading: false,\n     };\n   },\n   computed: {\n     ...mapGetters(['client']),\n+    showUnregister(): boolean {\n+      if (this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMzQxNA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc1MzQzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowNDoyMFrOGMSKJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNjo1OVrOGMrz6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMzYwNQ==", "bodyText": "unused response", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415533605", "createdAt": "2020-04-27T06:04:20Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "diffHunk": "@@ -70,6 +102,36 @@ export default Vue.extend({\n         this.$store.dispatch('showError', error);\n       });\n     },\n+\n+    unregisterClient(): void {\n+      this.unregisterLoading = true;\n+      this.$store\n+        .dispatch('unregisterClient', this.client)\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1Mzg5Nw==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953897", "createdAt": "2020-04-27T16:16:59Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Client.vue", "diffHunk": "@@ -70,6 +102,36 @@ export default Vue.extend({\n         this.$store.dispatch('showError', error);\n       });\n     },\n+\n+    unregisterClient(): void {\n+      this.unregisterLoading = true;\n+      this.$store\n+        .dispatch('unregisterClient', this.client)\n+        .then(\n+          (response) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzMzYwNQ=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 78}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc1NzE3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowNTo0NVrOGMSMKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNzowNFrOGMr0OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNDEyMA==", "bodyText": "'==' => '==='\n'!=' => '!=='", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415534120", "createdAt": "2020-04-27T06:05:45Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -82,15 +82,15 @@\n \n       <template v-slot:item.button=\"{ item }\">\n         <div class=\"button-wrap\">\n-          <v-btn\n-            v-if=\"(item.type == 'client' ||item.type == 'owner') && showAddClient()\"\n-            small\n-            outlined\n-            rounded\n-            color=\"primary\"\n-            class=\"xrd-small-button xrd-table-button\"\n+          <SmallButton\n+            v-if=\"(item.type == 'client' ||item.type == 'owner') && showAddClient\"\n             @click=\"addSubsystem(item)\"\n-          >{{$t('action.addSubsystem')}}</v-btn>\n+          >{{$t('action.addSubsystem')}}</SmallButton>\n+\n+          <SmallButton\n+            v-if=\"(item.type == 'client'||item.type != 'owner' && item.status === 'SAVED') && showRegister\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1Mzk3Ng==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415953976", "createdAt": "2020-04-27T16:17:04Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -82,15 +82,15 @@\n \n       <template v-slot:item.button=\"{ item }\">\n         <div class=\"button-wrap\">\n-          <v-btn\n-            v-if=\"(item.type == 'client' ||item.type == 'owner') && showAddClient()\"\n-            small\n-            outlined\n-            rounded\n-            color=\"primary\"\n-            class=\"xrd-small-button xrd-table-button\"\n+          <SmallButton\n+            v-if=\"(item.type == 'client' ||item.type == 'owner') && showAddClient\"\n             @click=\"addSubsystem(item)\"\n-          >{{$t('action.addSubsystem')}}</v-btn>\n+          >{{$t('action.addSubsystem')}}</SmallButton>\n+\n+          <SmallButton\n+            v-if=\"(item.type == 'client'||item.type != 'owner' && item.status === 'SAVED') && showRegister\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNDEyMA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc2MTQwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowNzowMlrOGMSOTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNzoxMVrOGMr0gA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNDY3MQ==", "bodyText": "add typings. And while you're on to it add typings to all variables in the data-block :)", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415534671", "createdAt": "2020-04-27T06:07:02Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -113,17 +122,25 @@ import Vue from 'vue';\n import ClientStatus from './ClientStatus.vue';\n import { mapGetters } from 'vuex';\n import { Permissions, RouteName } from '@/global';\n+import { Client } from '@/types';\n+import SmallButton from '@/components/ui/SmallButton.vue';\n+import ConfirmDialog from '@/components/ui/ConfirmDialog.vue';\n \n export default Vue.extend({\n   components: {\n     ClientStatus,\n+    SmallButton,\n+    ConfirmDialog,\n   },\n \n   data: () => ({\n     search: '',\n     pagination: {\n       sortBy: 'sortNameAsc',\n     },\n+    confirmRegisterClient: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 87}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1NDA0OA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415954048", "createdAt": "2020-04-27T16:17:11Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -113,17 +122,25 @@ import Vue from 'vue';\n import ClientStatus from './ClientStatus.vue';\n import { mapGetters } from 'vuex';\n import { Permissions, RouteName } from '@/global';\n+import { Client } from '@/types';\n+import SmallButton from '@/components/ui/SmallButton.vue';\n+import ConfirmDialog from '@/components/ui/ConfirmDialog.vue';\n \n export default Vue.extend({\n   components: {\n     ClientStatus,\n+    SmallButton,\n+    ConfirmDialog,\n   },\n \n   data: () => ({\n     search: '',\n     pagination: {\n       sortBy: 'sortNameAsc',\n     },\n+    confirmRegisterClient: false,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNDY3MQ=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 87}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc2NTE4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowODoxOFrOGMSQUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNzoxOFrOGMr03g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTE4NA==", "bodyText": "typings", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415535184", "createdAt": "2020-04-27T06:08:18Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "diffHunk": "@@ -27,10 +49,26 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1NDE0Mg==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415954142", "createdAt": "2020-04-27T16:17:18Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "diffHunk": "@@ -27,10 +49,26 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTE4NA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NDc2Njg4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QwNjowODo1NlrOGMSRQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxNjoxNzoyNFrOGMr1IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTQyNA==", "bodyText": "return this.client &&\n        this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ) &&\n        (this.client.status === 'REGISTERED' ||\n          this.client.status === 'REGISTRATION_IN_PROGRESS')", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415535424", "createdAt": "2020-04-27T06:08:56Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "diffHunk": "@@ -27,10 +49,26 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,\n+      unregisterLoading: false,\n     };\n   },\n   computed: {\n     ...mapGetters(['client']),\n+\n+    showUnregister(): boolean {\n+      if (\n+        this.client &&\n+        this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ) &&\n+        (this.client.status === 'REGISTERED' ||\n+          this.client.status === 'REGISTRATION_IN_PROGRESS')\n+      ) {\n+        return true;\n+      } else {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTk1NDIwOQ==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r415954209", "createdAt": "2020-04-27T16:17:24Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/Subsystem.vue", "diffHunk": "@@ -27,10 +49,26 @@ export default Vue.extend({\n   data() {\n     return {\n       tab: null,\n+      confirmUnregisterClient: false,\n+      unregisterLoading: false,\n     };\n   },\n   computed: {\n     ...mapGetters(['client']),\n+\n+    showUnregister(): boolean {\n+      if (\n+        this.client &&\n+        this.$store.getters.hasPermission(Permissions.SEND_CLIENT_DEL_REQ) &&\n+        (this.client.status === 'REGISTERED' ||\n+          this.client.status === 'REGISTRATION_IN_PROGRESS')\n+      ) {\n+        return true;\n+      } else {\n+        return false;\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTUzNTQyNA=="}, "originalCommit": {"oid": "4525895a567d206a563348c8543c7e8a041c2b30"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MDMyOTE4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjowMTowM1rOGND6og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjo1MDoxM1rOGNFOXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM0ODgzNA==", "bodyText": "should be removed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r416348834", "createdAt": "2020-04-28T06:01:03Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,279 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div data-test=\"selected-member-name\">{{memberName}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div data-test=\"selected-member-class\">{{memberClass}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div data-test=\"selected-member-code\">{{memberCode}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button\n+              outlined\n+              @click=\"exitView\"\n+              data-test=\"cancel-button\"\n+            >{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid || duplicateClient\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableSubsystems\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { containsClient } from '@/util/helpers';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    instanceId: {\n+      type: String,\n+      required: true,\n+    },\n+    memberClass: {\n+      type: String,\n+      required: true,\n+    },\n+    memberCode: {\n+      type: String,\n+      required: true,\n+    },\n+    memberName: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      disableDone: false as boolean,\n+      showSelectClient: false as boolean,\n+      registerChecked: true as boolean,\n+      existingSubsystems: [] as Client[],\n+      selectableSubsystems: [] as Client[],\n+      subsystemCode: undefined as undefined | string,\n+    };\n+  },\n+  computed: {\n+    duplicateClient(): boolean {\n+      if (!this.subsystemCode) {\n+        return false;\n+      }\n+\n+      return containsClient(\n+        this.existingSubsystems,\n+        this.memberClass,\n+        this.memberCode,\n+        this.subsystemCode,\n+      );\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.memberName,\n+          memberClass: this.memberClass,\n+          memberCode: this.memberCode,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          () => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.instanceId,\n+          memberClass: this.memberClass,\n+          memberCode: this.memberCode,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          () => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+            this.exitView();\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    exitView(): void {\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.subsystemCode = selectedMember.subsystem_code;\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch selectable subsystems\n+      api\n+        .get(\n+          `/clients?instance=${this.instanceId}&member_class=${this.memberClass}&member_code=${this.memberCode}&show_members=false&exclude_local=true`,\n+        )\n+        .then((res) => {\n+          this.selectableSubsystems = res.data;\n+        })\n+        .catch((error) => {\n+          this.$store.dispatch('showError', error);\n+        });\n+\n+      // Fetch existing subsystems\n+      api\n+        .get(\n+          `/clients?instance=${this.instanceId}&member_class=${this.memberClass}&member_code=${this.memberCode}&internal_search=true`,\n+        )\n+        .then((res) => {\n+          console.log(res.data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "769b530a0b906e232aaef07a7103ba13d54dfc46"}, "originalPosition": 280}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3MDI2OA==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r416370268", "createdAt": "2020-04-28T06:50:13Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/AddSubsystem/AddSubsystem.vue", "diffHunk": "@@ -1,83 +1,279 @@\n+\n <template>\n-  <v-container class=\"xrd-tab-max-width\">\n-    <v-layout text-xs-center wrap column>\n-      <v-flex mb-4>\n-        <h1 class=\"display-1 font-weight-bold mb-3\">Add a Subsystem</h1>\n-        <p\n-          class=\"subheading font-weight-regular\"\n-        >Specify the name of the Subsystem and add it to the selected Member.</p>\n-      </v-flex>\n-      <v-layout pa-4 column>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Name</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.name}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Class</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.class}}</v-flex>\n-        </v-layout>\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Member Code</v-flex>\n-          <v-flex mb-4 class=\"subs-input\">{{member.code}}</v-flex>\n-        </v-layout>\n-\n-        <v-layout mb-4 row justify-start>\n-          <v-flex mb-4 class=\"input-title\">Subsystem Name</v-flex>\n-          <v-text-field label=\"Regular\" class=\"input-name\"></v-text-field>\n-        </v-layout>\n-      </v-layout>\n-\n-      <v-layout mb-4 justify-space-between>\n-        <v-btn color=\"primary\" @click=\"cancel\" rounded outlined class=\"mb-2 rounded-button\">Cancel</v-btn>\n-\n-        <v-btn\n-          color=\"primary\"\n-          @click=\"addSubsystem\"\n-          rounded\n-          dark\n-          class=\"mb-2 rounded-button\"\n-        >Add subsystem</v-btn>\n-      </v-layout>\n-    </v-layout>\n-  </v-container>\n+  <div class=\"view-wrap\">\n+    <subViewTitle class=\"view-title\" :title=\"$t('wizard.subsystem.title')\" :showClose=\"false\" />\n+\n+    <div class=\"content\">\n+      <div class=\"info-block\">\n+        <div>\n+          {{$t('wizard.subsystem.info1')}}\n+          <br />\n+          <br />\n+          {{$t('wizard.subsystem.info2')}}\n+        </div>\n+        <div class=\"action-block\">\n+          <large-button\n+            @click=\"showSelectClient = true\"\n+            outlined\n+            data-test=\"select-subsystem-button\"\n+          >{{$t('wizard.subsystem.selectSubsystem')}}</large-button>\n+        </div>\n+      </div>\n+\n+      <ValidationObserver ref=\"form2\" v-slot=\"{ validate, invalid }\">\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberName\" helpText=\"wizard.client.memberNameTooltip\" />\n+          <div data-test=\"selected-member-name\">{{memberName}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberClass\" helpText=\"wizard.client.memberClassTooltip\" />\n+          <div data-test=\"selected-member-class\">{{memberClass}}</div>\n+        </div>\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.memberCode\" helpText=\"wizard.client.memberCodeTooltip\" />\n+          <div data-test=\"selected-member-code\">{{memberCode}}</div>\n+        </div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel\n+            labelText=\"wizard.subsystemCode\"\n+            helpText=\"wizard.client.subsystemCodeTooltip\"\n+          />\n+\n+          <ValidationProvider name=\"addClient.subsystemCode\" rules=\"required\" v-slot=\"{ errors }\">\n+            <v-text-field\n+              class=\"form-input\"\n+              type=\"text\"\n+              :error-messages=\"errors\"\n+              v-model=\"subsystemCode\"\n+              data-test=\"subsystem-code-input\"\n+            ></v-text-field>\n+          </ValidationProvider>\n+        </div>\n+        <div v-if=\"duplicateClient\" class=\"duplicate-warning\">{{$t('wizard.client.memberExists')}}</div>\n+\n+        <div class=\"row-wrap\">\n+          <FormLabel labelText=\"wizard.subsystem.registerSubsystem\" />\n+          <v-checkbox\n+            v-model=\"registerChecked\"\n+            color=\"primary\"\n+            class=\"register-checkbox\"\n+            data-test=\"register-subsystem-checkbox\"\n+          ></v-checkbox>\n+        </div>\n+        <div class=\"button-footer\">\n+          <div class=\"button-group\">\n+            <large-button\n+              outlined\n+              @click=\"exitView\"\n+              data-test=\"cancel-button\"\n+            >{{$t('action.cancel')}}</large-button>\n+          </div>\n+          <large-button\n+            @click=\"done\"\n+            :disabled=\"invalid || duplicateClient\"\n+            data-test=\"submit-add-subsystem-button\"\n+          >{{$t('action.addSubsystem')}}</large-button>\n+        </div>\n+      </ValidationObserver>\n+\n+      <SelectClientDialog\n+        :dialog=\"showSelectClient\"\n+        :selectableClients=\"selectableSubsystems\"\n+        @cancel=\"showSelectClient = false\"\n+        @save=\"saveSelectedClient\"\n+      />\n+    </div>\n+  </div>\n </template>\n \n <script lang=\"ts\">\n import Vue from 'vue';\n-import { RouteName } from '@/global';\n+import { mapGetters } from 'vuex';\n+import HelpIcon from '@/components/ui/HelpIcon.vue';\n+import LargeButton from '@/components/ui/LargeButton.vue';\n+import SubViewTitle from '@/components/ui/SubViewTitle.vue';\n+import SubsystemDetailsPage from './SubsystemDetailsPage.vue';\n+import SelectClientDialog from '@/views/AddClient/SelectClientDialog.vue';\n+import FormLabel from '@/components/ui/FormLabel.vue';\n+import { Key, Token } from '@/types';\n+import { RouteName, UsageTypes } from '@/global';\n+import { containsClient } from '@/util/helpers';\n+import { Client } from '@/types';\n+import { ValidationProvider, ValidationObserver } from 'vee-validate';\n+import * as api from '@/util/api';\n \n export default Vue.extend({\n-  data: () => ({\n-    member: {\n-      name: 'Kuikka',\n-      class: 'Org',\n-      code: '111',\n+  components: {\n+    FormLabel,\n+    LargeButton,\n+    ValidationObserver,\n+    ValidationProvider,\n+    SelectClientDialog,\n+    SubViewTitle,\n+  },\n+  props: {\n+    instanceId: {\n+      type: String,\n+      required: true,\n+    },\n+    memberClass: {\n+      type: String,\n+      required: true,\n+    },\n+    memberCode: {\n+      type: String,\n+      required: true,\n+    },\n+    memberName: {\n+      type: String,\n+      required: true,\n+    },\n+  },\n+  data() {\n+    return {\n+      disableDone: false as boolean,\n+      showSelectClient: false as boolean,\n+      registerChecked: true as boolean,\n+      existingSubsystems: [] as Client[],\n+      selectableSubsystems: [] as Client[],\n+      subsystemCode: undefined as undefined | string,\n+    };\n+  },\n+  computed: {\n+    duplicateClient(): boolean {\n+      if (!this.subsystemCode) {\n+        return false;\n+      }\n+\n+      return containsClient(\n+        this.existingSubsystems,\n+        this.memberClass,\n+        this.memberCode,\n+        this.subsystemCode,\n+      );\n     },\n-  }),\n+  },\n   methods: {\n-    addSubsystem() {\n-      console.log('add subsystem');\n+    done(): void {\n+      this.$store\n+        .dispatch('addSubsystem', {\n+          memberName: this.memberName,\n+          memberClass: this.memberClass,\n+          memberCode: this.memberCode,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          () => {\n+            this.disableDone = false;\n+\n+            if (this.registerChecked) {\n+              this.registerSubsystem();\n+            } else {\n+              this.exitView();\n+            }\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+          },\n+        );\n+    },\n+\n+    registerSubsystem(): void {\n+      this.$store\n+        .dispatch('registerClient', {\n+          instanceId: this.instanceId,\n+          memberClass: this.memberClass,\n+          memberCode: this.memberCode,\n+          subsystemCode: this.subsystemCode,\n+        })\n+        .then(\n+          () => {\n+            this.disableDone = false;\n+            this.exitView();\n+          },\n+          (error) => {\n+            this.$store.dispatch('showError', error);\n+            this.exitView();\n+          },\n+        );\n     },\n-    cancel() {\n+\n+    exitView(): void {\n       this.$router.replace({ name: RouteName.Clients });\n     },\n+    saveSelectedClient(selectedMember: Client): void {\n+      this.subsystemCode = selectedMember.subsystem_code;\n+      this.showSelectClient = false;\n+    },\n+    fetchData(): void {\n+      // Fetch selectable subsystems\n+      api\n+        .get(\n+          `/clients?instance=${this.instanceId}&member_class=${this.memberClass}&member_code=${this.memberCode}&show_members=false&exclude_local=true`,\n+        )\n+        .then((res) => {\n+          this.selectableSubsystems = res.data;\n+        })\n+        .catch((error) => {\n+          this.$store.dispatch('showError', error);\n+        });\n+\n+      // Fetch existing subsystems\n+      api\n+        .get(\n+          `/clients?instance=${this.instanceId}&member_class=${this.memberClass}&member_code=${this.memberCode}&internal_search=true`,\n+        )\n+        .then((res) => {\n+          console.log(res.data);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM0ODgzNA=="}, "originalCommit": {"oid": "769b530a0b906e232aaef07a7103ba13d54dfc46"}, "originalPosition": 280}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5MDMzMzU4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjowMjozMlrOGND9GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOFQwNjo1MDoxN1rOGNFOeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM0OTQ2NA==", "bodyText": "should be removed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r416349464", "createdAt": "2020-04-28T06:02:32Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -195,12 +214,56 @@ export default Vue.extend({\n       });\n     },\n \n-    addSubsystem(item: any): void {\n+    addSubsystem(item: Client): void {\n+      if (!item.instance_id || !item.member_name) {\n+        // Should not happen\n+        throw new Error('Invalid client');\n+      }\n+\n+      console.log(item);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "769b530a0b906e232aaef07a7103ba13d54dfc46"}, "originalPosition": 128}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM3MDI5Ng==", "bodyText": "Fixed", "url": "https://github.com/nordic-institute/X-Road/pull/470#discussion_r416370296", "createdAt": "2020-04-28T06:50:17Z", "author": {"login": "Riippi"}, "path": "src/proxy-ui-api/frontend/src/views/Clients/ClientsDataTable.vue", "diffHunk": "@@ -195,12 +214,56 @@ export default Vue.extend({\n       });\n     },\n \n-    addSubsystem(item: any): void {\n+    addSubsystem(item: Client): void {\n+      if (!item.instance_id || !item.member_name) {\n+        // Should not happen\n+        throw new Error('Invalid client');\n+      }\n+\n+      console.log(item);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjM0OTQ2NA=="}, "originalCommit": {"oid": "769b530a0b906e232aaef07a7103ba13d54dfc46"}, "originalPosition": 128}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2837, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}