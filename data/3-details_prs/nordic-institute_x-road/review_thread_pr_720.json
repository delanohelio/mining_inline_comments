{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwMzIxODMw", "number": 720, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo1NjoyMFrOEoBuAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDoyNDozNlrOEuBWxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDA2NjU3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMDo1NjoyMFrOHY4iqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxNTozNlrOHgr8dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1NDI1MQ==", "bodyText": "I think instead of a generic WarningsExample, we should have context-specific examples. Such as\n    AddUnregisterClientWarningExample:\n      summary: response from calling addClient with unregistered client and ignore_warnings = false\n\n{\n    \"status\": 400,\n    \"error\": {\n        \"code\": \"warnings_detected\"\n    },\n    \"warnings\": [\n        {\n            \"code\": \"unregistered_member\",\n            \"metadata\": [\n                \"LXD/ipsu/dese\"\n            ]\n        }\n    ]\n}\n\nEndpoint description \"Adds new client to the system....Attempt to add unregistered member with ignore_warnings....\" explains this but is pretty complicated and average API user will benefit from an example that shows this is practise.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495854251", "createdAt": "2020-09-28T10:56:20Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -738,10 +835,14 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 278}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjQ2OA==", "bodyText": "Added context specific warning examples", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504036468", "createdAt": "2020-10-13T15:15:36Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -738,10 +835,14 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1NDI1MQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 278}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDA5NzEyOnYy", "diffSide": "RIGHT", "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTowNjoxMlrOHY41Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxNjoxM1rOHgr-RA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1ODk4Ng==", "bodyText": "I think general explanation about the warnings-mechanism should probably be described here, in the SS user guide?\nOpenAPI definition explains how warnings work on the specific endpoints, but the general concept and the rationale behind it would probably be better explained here.\nWithout it, end user might not fully understand why ignore_warnings handling exists, and what it tries to accomplish (offer a possibility to first attempt an update without ignore, then make a decision about possibly ignoring the warning, and proceeding). Without an explanation of the mechanism, end user may just view ignore_warnings as some random frustrating weirdness in the API. And e.g. just always by default set ignore_warnings = true since it seems to make life easier and errors go away.\nThere is some text in https://confluence.niis.org/pages/viewpage.action?pageId=8520435#APIGuidelines&Examples-Warnings that might be usable.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495858986", "createdAt": "2020-09-28T11:06:12Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNjkzMg==", "bodyText": "Added a sub chapter about the warnings", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504036932", "createdAt": "2020-10-13T15:16:13Z", "author": {"login": "carohauta"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg1ODk4Ng=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDIzODQzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo1MDo1NlrOHY6JmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToxNjoyMlrOHgr-oQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MDYwMA==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495880600", "createdAt": "2020-09-28T11:50:56Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -150,6 +164,15 @@ paths:\n           description: item accepted\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 69}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNzAyNQ==", "bodyText": "Added context specific warning examples", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504037025", "createdAt": "2020-10-13T15:16:22Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -150,6 +164,15 @@ paths:\n           description: item accepted\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MDYwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 69}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDI0NzYwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMTo1Mzo0NVrOHY6PEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDo0Mjo0MVrOHiLX8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MjAwMg==", "bodyText": "Add period to improve readability, especially in swaggerhub?\nI wonder if there's any formatting options, like newlines, to make the description more readable, in swaggerhub it is all joined together and not so easy to read when there is a long explanation about how warnings work.\nActually I see now that addClientServiceDescription seems to highlight ignore_warnings as code, that might be good for readability elsewhere too?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495882002", "createdAt": "2020-09-28T11:53:45Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -123,7 +133,11 @@ paths:\n         - backups\n       summary: upload new backup for the security server\n       operationId: uploadBackup\n-      description: Uploads new security server backup to the system\n+      description: >\n+        Uploads new security server backup to the system", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNzY3Mw==", "bodyText": "Updated all endpoint description with proper html formatting", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504037673", "createdAt": "2020-10-13T15:17:13Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -123,7 +133,11 @@ paths:\n         - backups\n       summary: upload new backup for the security server\n       operationId: uploadBackup\n-      description: Uploads new security server backup to the system\n+      description: >\n+        Uploads new security server backup to the system", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MjAwMg=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU5OTk4Ng==", "bodyText": "Looks great at least on swaggerhub, nice!", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505599986", "createdAt": "2020-10-15T14:42:41Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -123,7 +133,11 @@ paths:\n         - backups\n       summary: upload new backup for the security server\n       operationId: uploadBackup\n-      description: Uploads new security server backup to the system\n+      description: >\n+        Uploads new security server backup to the system", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4MjAwMg=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDI5ODU5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjowOTo0MlrOHY6t9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNjowNzo0OFrOHkr-Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4OTkxMA==", "bodyText": "This does not include all warning types. Adding or removing services causes warnings too, at least for WSDL service descriptions.\nI guess same wording could be used for both service description types: (WSDL/OpenAPI3 document) has non-fatal errors that are returned as warnings (or maybe \"has non-fatal errors that may be ignored\"?) Now the different wording for WSDL and OpenAPI3 makes you think there's some conceptual difference, I guess there is not?\nA really good client facing documentation would also explain the difference between a fatal validation error and a non-fatal validation warning. Now it's kind of a mystery. Maybe this file is not the best place for that though. It should be somewhere...not sure...maybe it does not exist at the moment?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495889910", "createdAt": "2020-09-28T12:09:42Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.\n+        This endpoint can return a warnings response which can be ignored by setting `ServiceDescriptionAdd.ignore_warnings` = true.\n+        If ServiceDescriptionAdd.ignore_warnings = false, a warnings response will be returned if any one of the following conditions is true:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 430}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzNzg3OA==", "bodyText": "Simplified the description a bit", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504037878", "createdAt": "2020-10-13T15:17:30Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.\n+        This endpoint can return a warnings response which can be ignored by setting `ServiceDescriptionAdd.ignore_warnings` = true.\n+        If ServiceDescriptionAdd.ignore_warnings = false, a warnings response will be returned if any one of the following conditions is true:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4OTkxMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 430}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYwNjE3Ng==", "bodyText": "I think adding / removing services -warning should be documented somehow, now it is not, for this endpoint?\nMaybe link to UpdateServiceDescriptionWarningExample, that should be enough?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505606176", "createdAt": "2020-10-15T14:50:32Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.\n+        This endpoint can return a warnings response which can be ignored by setting `ServiceDescriptionAdd.ignore_warnings` = true.\n+        If ServiceDescriptionAdd.ignore_warnings = false, a warnings response will be returned if any one of the following conditions is true:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4OTkxMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 430}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY3ODY4Mw==", "bodyText": "Adding a service description responds with 409 and metadata in the case of duplicate services. The warning in adding / removing services only occurs when updating an existing service description", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507678683", "createdAt": "2020-10-19T11:40:58Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.\n+        This endpoint can return a warnings response which can be ignored by setting `ServiceDescriptionAdd.ignore_warnings` = true.\n+        If ServiceDescriptionAdd.ignore_warnings = false, a warnings response will be returned if any one of the following conditions is true:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4OTkxMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 430}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzMTIwNw==", "bodyText": "Yes, you are correct. Oops.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r508231207", "createdAt": "2020-10-20T06:07:48Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.\n+        This endpoint can return a warnings response which can be ignored by setting `ServiceDescriptionAdd.ignore_warnings` = true.\n+        If ServiceDescriptionAdd.ignore_warnings = false, a warnings response will be returned if any one of the following conditions is true:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg4OTkxMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 430}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMwNjQwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxMTo1MlrOHY6yaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMTo0Njo1NVrOHkKcTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTA0OQ==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.\nThere could even be multiple examples: one for adding / removing services (which the WarningsExample really is) and one for non-fatal validation warnings.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495891049", "createdAt": "2020-09-28T12:11:52Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1590,10 +1758,17 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 451}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzOTAwMQ==", "bodyText": "Added context specific warning example that has both, adding and removing of services", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504039001", "createdAt": "2020-10-13T15:19:01Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1590,10 +1758,17 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTA0OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 451}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYxMzQzNA==", "bodyText": "Maybe link to UpdateServiceDescriptionWarningExample, too?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505613434", "createdAt": "2020-10-15T14:59:05Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1590,10 +1758,17 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTA0OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 451}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzY4MTg3MA==", "bodyText": "Maybe not", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507681870", "createdAt": "2020-10-19T11:46:55Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1590,10 +1758,17 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTA0OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 451}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMxMDAzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxMjo1NFrOHY60hQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNTowMDowN1rOHiMPwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTU4OQ==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.\nThere could even be multiple examples.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495891589", "createdAt": "2020-09-28T12:12:54Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1838,6 +2039,19 @@ paths:\n           description: security server initialized\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 530}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAzOTk0Mg==", "bodyText": "Added context specific warning example", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504039942", "createdAt": "2020-10-13T15:20:10Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1838,6 +2039,19 @@ paths:\n           description: security server initialized\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTU4OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 530}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYxNDI3NA==", "bodyText": "Nice and extensive!", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505614274", "createdAt": "2020-10-15T15:00:07Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1838,6 +2039,19 @@ paths:\n           description: security server initialized\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MTU4OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 530}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMxNTkwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxNDo0MFrOHY64Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMDo1MVrOHgsMJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MjUwMg==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495892502", "createdAt": "2020-09-28T12:14:40Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2166,6 +2381,17 @@ paths:\n           description: key deletion was successful\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 560}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MDQ4Nw==", "bodyText": "Added context specific warning example", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504040487", "createdAt": "2020-10-13T15:20:51Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2166,6 +2381,17 @@ paths:\n           description: key deletion was successful\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MjUwMg=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 560}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMyMzAwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxNjoyOVrOHY68EA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMToyNFrOHgsN1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MzUyMA==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495893520", "createdAt": "2020-09-28T12:16:29Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2723,6 +2966,15 @@ paths:\n                 $ref: '#/components/schemas/Service'\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 616}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MDkxOQ==", "bodyText": "Added context specific warning example", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504040919", "createdAt": "2020-10-13T15:21:24Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -2723,6 +2966,15 @@ paths:\n                 $ref: '#/components/schemas/Service'\n         '400':\n           description: request was invalid\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5MzUyMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 616}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMyNzI0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoxNzo0NFrOHY6-hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMTo1NFrOHgsPRQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5NDE1MQ==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495894151", "createdAt": "2020-09-28T12:17:44Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -3339,10 +3747,14 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 1012}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MTI4NQ==", "bodyText": "Added context specific warning example", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504041285", "createdAt": "2020-10-13T15:21:54Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -3339,10 +3747,14 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5NDE1MQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 1012}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDMzODA1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMjoyMDo0NVrOHY7Ezw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNToyMjowMVrOHgsPog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5NTc1OQ==", "bodyText": "A context-specific warnings example would be helpful. See AddClient for elaboration.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495895759", "createdAt": "2020-09-28T12:20:45Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -3196,10 +3583,16 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 960}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MTM3OA==", "bodyText": "Added context specific warning example", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504041378", "createdAt": "2020-10-13T15:22:01Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -3196,10 +3583,16 @@ paths:\n           content:\n             application/json:\n               schema:\n-                type: array\n-                uniqueItems: true\n-                items:\n-                  $ref: '#/components/schemas/ErrorInfo'\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_response:\n+                  $ref: '#/components/examples/ErrorExample'\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n+                warnings_response:\n+                  $ref: '#/components/examples/WarningsExample'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTg5NTc1OQ=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 960}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNDUzODU3OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxMzoxMDo0MFrOHY88gA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNzo1M1rOHlJjOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA==", "bodyText": "Should specify metadata on the detail level that enables API client to utilize the metadata, example from   https://jira.niis.org/browse/XRDDEV-665\n{\n   \"status\": 409,\n   \"error\": {\n     \"code\": \"service_already_exists\",\n     \"metadata\": [\n       \"duplicateService.v1\",\n       \"http://xroad-lxd-cs.lxd/duplicate1.wsdl\"\n     ]\n   }\n }\n\n\nwhen conflict 409 about duplicate service happens, error code service_already_exists is used and\nmetadata has a list of strings C1,U1,C2,U2....Cn,Un where\nC1 = duplicate service full code\nU1 = URL of the existing WSDL that has the duplicate\n\nSimilar documentation should be added to all error and warning metadata. It might be good to use context-specific error metadata examples (at least in more complex cases)?\nThere are some cases where metadata is used even if it is not really called for, for example metadata contains human-readable error messages. I think these should be fixed, and there is probably no point in documenting them in API definition.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r495926400", "createdAt": "2020-09-28T13:10:40Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MjY3Mg==", "bodyText": "The metadata for this and the Security Server initialization are now explained in the api doc.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504042672", "createdAt": "2020-10-13T15:23:35Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyNTU4Nw==", "bodyText": "Metadata structure for service_already_exists and initialization errors is well explained in the openapi definition, nice!\nHowever there are some other endpoints where warning metadata structure is not explained. I think those should also be documented according to our decisions on public/private API documentation\n\nwe need to document warning and error metadata for external clients. Primary try to do this in openapi definition if feasible, if not, some other way\n\nWarning metadata structure does not seem to be explained for\n\nupload backup\nadd (unregistered) client\nadd service description warnings (validation and add/remove services)\ninitialization warnings that have metadata\ndelete key\nupdate, refresh service description (copypaste from add, probably)\n\nSome of these are pretty simple. Like delete key, additional sentence \"...returns metadata that contains key id\" should be enough probably.\nNot sure what the status is for error metadata structures? Are all relevant ones documented?\nDid we already have a blanket statement about metadata being \"subject to change\"?\n\n...but with the disclaimer that these details are subject to change at any time", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505625587", "createdAt": "2020-10-15T15:13:37Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2NDU0MQ==", "bodyText": "IIRC the error codes were not originally intended to be published in the API definition but rather in a separate document?\nI think it might make sense to explain the metadata of e.g. the service description endpoints which might be a bit complex. At the moment the metadata is simply declared like this\n<p>This endpoint can also return metadata in the error response. The metadata array can contain error messages about why adding the service description did not succeed (for example invalid URL's or existing duplicate service codes).</p>\n\nThe error code itself was omitted on purpose and a more generic example was included.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507764541", "createdAt": "2020-10-19T13:53:41Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc2NzI2Nw==", "bodyText": "Did we already have a blanket statement about metadata being \"subject to change\"?\n\nWe did not. Wasn't it supposed to be in a separate document with all possible error codes?\nSure we can add it e.g. to the info section of the API definition or perhaps to all endpoints separately?\nThe externalDocs field in OpenAPI feels pretty natural way to provide the error codes", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507767267", "createdAt": "2020-10-19T13:56:54Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgzNTc2NA==", "bodyText": "Updated the descriptions in the suggested places. Review with care since it's becoming harder to keep track of all the changes.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507835764", "createdAt": "2020-10-19T15:15:43Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzgzNzk2OQ==", "bodyText": "Should the disclaimer be added to the API document somewhere?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507837969", "createdAt": "2020-10-19T15:18:39Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzNzgwNQ==", "bodyText": "I think there may be a bit of misunderstanding about error / warning metadata. Metadata shouldn't really be \"error messages\" as such, it should be raw data that adds more detail to the error, when that is needed. It may be used for generating error messages, but maybe also for other purposes.\nE.g. in the case of duplicate service\n{\n   \"status\": 409,\n   \"error\": {\n     \"code\": \"service_already_exists\",\n     \"metadata\": [\n       \"duplicateService.v1\",\n       \"http://xroad-lxd-cs.lxd/duplicate1.wsdl\"\n     ]\n   }\n }\n\nmetadata contains service codes and service wsdls. Those can be used to display nice UI error messages, but they could also be used programmatically by some API client when he creates some maintenance scripts. Maybe something like\nIF (service_already_exists && !    \n  wsdls_reported.contains(extract_wsdls_from_metadata())\n    send_email_to_wsdl_admin(extract_wsdls_from_metadata()) \n\nTo be able to use the metadata properly, it's structure needs to be documented. e.g. API client script programmer needs to know if metadata contains\n     \"metadata\": [\n       \"fooService.v1\",\n       \"http://xroad-lxd-cs.lxd/foo.wsdl\",\n       \"barService.v1\",\n       \"http://xroad-lxd-cs.lxd/bar.wsdl\"\n     ]\n\nor\n     \"metadata\": [\n       \"fooService.v1\",\n       \"barService.v1\",\n       \"http://xroad-lxd-cs.lxd/foo.wsdl\",\n       \"http://xroad-lxd-cs.lxd/bar.wsdl\"\n     ]\n\nSince it is so complex, and documenting is somewhat clumsy, metadata should be used sparingly. Metadata should only be used when there is a clear need, and same information is not available to client in other ways (e.g. request parameters that client has sent)\nSo I think we have decisions https://confluence.niis.org/display/XRDDEV/Public+and+private+API+contracts%2C+API+versioning%2C+error+codes%2C+warnings+and+metadata#PublicandprivateAPIcontracts,APIversioning,errorcodes,warningsandmetadata-Conclusion/decisions\n\nerror codes - ErrorCodes.java\nerror metadata - openapi-definition.yaml\nwarning codes - no clear decision I guess, openapi-definition.yaml, openapi-definition.yaml examples, ErrorCodes.java, WarningCodes.java....?\nwarning metadata - openapi-definition.yaml", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r508237805", "createdAt": "2020-10-20T06:25:18Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIzODQzMw==", "bodyText": "Should the disclaimer be added to the API document somewhere?\n\nI think it would be good to have. You had good ideas about how to do it in an earlier comment.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r508238433", "createdAt": "2020-10-20T06:26:50Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODI0MTAyOQ==", "bodyText": "I looked at the warning metadata listed earlier (upload backup...update, refresh service description) - documentation looks spot on \ud83d\udc4d  so I think these are taken care of:\n\nwarning codes - openapi-definition.yaml\nwarning metadata - openapi-definition.yaml", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r508241029", "createdAt": "2020-10-20T06:32:44Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxNTgzMw==", "bodyText": "Updated error metadatas and added a note to the info stating that the metadatas might be changed", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r508715833", "createdAt": "2020-10-20T17:37:53Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -1555,14 +1708,29 @@ paths:\n           description: resource requested does not exists\n         '406':\n           description: request specified an invalid format\n+        '409':\n+          description: an existing item already exists\n+          content:\n+            application/json:\n+              schema:\n+                $ref: '#/components/schemas/ErrorInfo'\n+              examples:\n+                error_metadata_response:\n+                  $ref: '#/components/examples/ErrorWithMetadataExample'\n         '500':\n           description: internal server error\n     post: # ok\n       tags:\n         - clients\n       summary: add new service description for the security server client\n       operationId: addClientServiceDescription\n-      description: Administrator adds a new service description for the client.\n+      description: >\n+        Administrator adds a new service description for the client. This endpoint can also return metadata in the error response.\n+        The metadata array can contain error messages about why adding the service description did not succeed.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTkyNjQwMA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 428}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTM0OTI1OnYy", "diffSide": "RIGHT", "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo0NTowMlrOHZEnxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjoyNjo0MlrOHkL0xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1MjE2NA==", "bodyText": "The following lines are not part of this PR, but are related to acceptance criteria, and anyway since we're already at the topic....\n\nIn addition to the validation messages declared in Java Validation API, the following validation errors are possible\n\nHow about a table with simple one sentence explanations (maybe just the defaultMessage) about each custom validation error type? Granted most are pretty self-explanatory, but Normalized is probably not.\nAlso, is the list up to date? IdentifierValidationErrorInfo seems to think there is NoControlChars instead of Normalized?", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r496052164", "createdAt": "2020-09-28T15:45:02Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n+\n+Example request and response of adding a new subsystem with illegal characters:\n+```\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1NjIxMA==", "bodyText": "It would also be good to make \"Java Validation API\" a proper external reference", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r496056210", "createdAt": "2020-09-28T15:50:54Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n+\n+Example request and response of adding a new subsystem with illegal characters:\n+```\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1MjE2NA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDA0MzE4NQ==", "bodyText": "Added a link to the constraints.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r504043185", "createdAt": "2020-10-13T15:24:15Z", "author": {"login": "carohauta"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n+\n+Example request and response of adding a new subsystem with illegal characters:\n+```\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1MjE2NA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTYyMjUyMg==", "bodyText": "What do you think about adding that table, or at least explanation for what \"NoControlChars\" means specifically?\n    /**\n     * checks if the string contains ISO control characters or zero-width spaces\n     */\n    public static boolean containsControlChars(String s) {\n        return CharMatcher.javaIsoControl().matchesAnyOf(s) || s.indexOf(FORBIDDEN_BOM) >= 0\n                || s.indexOf(FORBIDDEN_ZWSP) >= 0;\n    }", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505622522", "createdAt": "2020-10-15T15:09:47Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n+\n+Example request and response of adding a new subsystem with illegal characters:\n+```\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1MjE2NA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcwNDUxNw==", "bodyText": "Good idea. Added a table where the errors are explained. Ended up explaining the obvious ones too but it's better now", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507704517", "createdAt": "2020-10-19T12:26:42Z", "author": {"login": "carohauta"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,7 +2144,39 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n+\n+Example request and response of adding a new subsystem with illegal characters:\n+```\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA1MjE2NA=="}, "originalCommit": {"oid": "067685e5f67ae1cbd60c6095601895431ed63b64"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NjkyMTY2OnYy", "diffSide": "RIGHT", "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQxNDoyNDozNlrOHiKfow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxMjo1NjowNlrOHkM92Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU4NTU3MQ==", "bodyText": "Suggestion, would slight rewording make this easier to understand?\n\n\nIf the warnings can be ignored, client resends the REST request, but with ignore_warnings parameter set to true. If the request was sent via the admin UI and a warning popup with the CONTINUE button is shown, clicking the button will ignore warnings and proceed to executing the operation\n\n\n->\n\n\nIf the warnings can be ignored, client resends the REST request, but with ignore_warnings parameter set to true. If the original request was sent via the admin UI and a warning popup with the CONTINUE button was shown, clicking the button will cause this resending to happen.\n\n\nOr, alternatively, maybe remove mentions of admin UI from steps 1-5 and explain how admin UI handles this via popup, after 1-5. At current form step 4 is maybe a bit confusing as it combines explaining \"general client\" and \"concrete admin UI\" cases, I feel.", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r505585571", "createdAt": "2020-10-15T14:24:36Z", "author": {"login": "jansu76"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,18 +2146,83 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n \n-In addition to the validation messages declared in Java Validation API, the following validation errors are possible:\n+Example request and response of adding a new subsystem with illegal characters:\n ```\n-Normalized\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```\n+\n+In addition to the validation messages declared in [Java Validation API](https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/package-summary.html), the following validation errors are possible:\n+```\n+NoControlChars\n NoColons\n NoSemicolons\n NoForwardslashes\n NoBackslashes\n NoPercents\n ```\n \n+### 19.5 Warning responses\n+\n+Error response from the Management API can include additional warnings that you can ignore if seen necessary. The warnings can be ignored by your decision, by executing the same operation with `ignore_warnings` boolean parameter set to `true`. *Always consider the warning before making the decision to ignore it.* \n+\n+An example case:\n+1. Client executes a REST request, without `ignore_warnings` parameter, to backend\n+2. Backend notices warnings and responds with error message that contains the warnings. Nothing is updated at this point\n+3. Client determines if warnings can be ignored. If the request was sent via the admin UI, a popup with `CONTINUE` button is shown\n+4. If the warnings can be ignored, client resends the REST request, but with `ignore_warnings` parameter set to `true`. If the request was sent via the admin UI and a warning popup with the `CONTINUE` button is shown, clicking the button will ignore warnings and proceed to executing the operation", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a986bcf66d48a49518a7edb4b0ad2827c17ff39d"}, "originalPosition": 85}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzcyMzIyNQ==", "bodyText": "Separated the UI usage from the steps and moved it to the end of the chapter", "url": "https://github.com/nordic-institute/X-Road/pull/720#discussion_r507723225", "createdAt": "2020-10-19T12:56:06Z", "author": {"login": "carohauta"}, "path": "doc/Manuals/ug-ss_x-road_6_security_server_user_guide.md", "diffHunk": "@@ -2143,18 +2146,83 @@ For example, these log messages are related to an API call with correlation ID `\n \n ### 19.4 Validation errors\n \n-An error response from the REST API can include validation errors if an unsupported parameter was provided with the request. \n+An error response from the REST API can include validation errors if an unsupported parameter was provided with the request.\n+When \n \n-In addition to the validation messages declared in Java Validation API, the following validation errors are possible:\n+Example request and response of adding a new subsystem with illegal characters:\n ```\n-Normalized\n+POST https://ss1:4100/api/v1/clients\n+\n+Request body:\n+{\n+  \"client\": {\n+    \"member_class\": \"ORG\",\n+    \"member_code\": \"0/1234\",\n+    \"subsystem_code\": \"Subsystem%Code\"\n+  },\n+  \"ignore_warnings\": false\n+}\n+\n+Response body:\n+{\n+  \"error\": {\n+    \"code\": \"validation_failure\",\n+    \"validation_errors\": {\n+      \"clientAdd.client.memberCode\": [\n+        \"NoForwardslashes\"\n+      ],\n+      \"clientAdd.client.subsystemCode\": [\n+        \"NoPercents\"\n+      ]\n+    }\n+  },\n+  \"status\": 400\n+}\n+```\n+\n+In addition to the validation messages declared in [Java Validation API](https://javaee.github.io/javaee-spec/javadocs/javax/validation/constraints/package-summary.html), the following validation errors are possible:\n+```\n+NoControlChars\n NoColons\n NoSemicolons\n NoForwardslashes\n NoBackslashes\n NoPercents\n ```\n \n+### 19.5 Warning responses\n+\n+Error response from the Management API can include additional warnings that you can ignore if seen necessary. The warnings can be ignored by your decision, by executing the same operation with `ignore_warnings` boolean parameter set to `true`. *Always consider the warning before making the decision to ignore it.* \n+\n+An example case:\n+1. Client executes a REST request, without `ignore_warnings` parameter, to backend\n+2. Backend notices warnings and responds with error message that contains the warnings. Nothing is updated at this point\n+3. Client determines if warnings can be ignored. If the request was sent via the admin UI, a popup with `CONTINUE` button is shown\n+4. If the warnings can be ignored, client resends the REST request, but with `ignore_warnings` parameter set to `true`. If the request was sent via the admin UI and a warning popup with the `CONTINUE` button is shown, clicking the button will ignore warnings and proceed to executing the operation", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTU4NTU3MQ=="}, "originalCommit": {"oid": "a986bcf66d48a49518a7edb4b0ad2827c17ff39d"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2698, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}