{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ4MTEzOTM0", "number": 591, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMTozMTo0NlrOEOpL1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMTozMTo0NlrOEOpL1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNzkwMjk1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxMTozMTo0NlrOGx5-aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjoyMjoxNVrOGybrlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MzI3Mg==", "bodyText": "Could also consider using servers-object to hold the api/v1 prefix? https://swagger.io/docs/specification/api-host-and-base-path/\nIn that case some small test would be good to verify, that we have some means of having both api/v1 and api/v2 endpoints coexist in the same definition.", "url": "https://github.com/nordic-institute/X-Road/pull/591#discussion_r454983272", "createdAt": "2020-07-15T11:31:46Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -12,13 +12,51 @@ info:\n     name: MIT\n     url: https://opensource.org/licenses/MIT\n tags:\n-  - name: security server\n-    description: <br>Security Server admin API design\n+  - name: backups\n+    description: backup endpoints\n+  - name: certificate-authorities\n+    description: CA endpoints\n+  - name: clients\n+    description: clients endpoints\n+  - name: diagnostics\n+    description: diagnostics endpoints\n+  - name: endpoints\n+    description: services' endpoints related endpoints\n+  - name: initialization\n+    description: initialization endpoints\n+  - name: keys\n+    description: keys endpoints\n+  - name: language\n+    description: language endpoints\n+  - name: local-groups\n+    description: local groups endpoints\n+  - name: member-classes\n+    description: member classes endpoints\n+  - name: member-names\n+    description: member names endpoints\n+  - name: security-servers\n+    description: security servers endpoints\n+  - name: services\n+    description: services endpoints\n+  - name: service-descriptions\n+    description: service descriptions endpoints\n+  - name: system\n+    description: system endpoints\n+  - name: timestamping\n+    description: timestamping endpoints\n+  - name: token-certificate\n+    description: token certificates endpoints\n+  - name: tokens\n+    description: tokens endpoints\n+  - name: user\n+    description: user endpoints\n+  - name: xroad-instances\n+    description: xroad-instances endpoints\n paths:\n-  /backups:\n+  /api/v1/backups:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ccfc98edb2a5799d8b06d522c8799de26a14590c"}, "originalPosition": 48}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTUzNTUxMQ==", "bodyText": "Removed the /api/v1 prefix from the individual endpoints and added it into the servers object. The current OpenAPI Code Generator that we are using only checks that the servers object exists but it does not do anything with it. The API base path is now maintained in the code instead of the API specification, so the prefix was moved into each controller class as a @RequestMapping(\"/api/v1\") annotation.\nMaintaining multiple versions of an endpoint is possible by adding a new controller with @RequestMapping(\"/api/v2\") annotation. In such cases one should also remember to add an overriding servers object into the endpoint in question in order to follow best practices.", "url": "https://github.com/nordic-institute/X-Road/pull/591#discussion_r455535511", "createdAt": "2020-07-16T06:22:15Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/resources/openapi-definition.yaml", "diffHunk": "@@ -12,13 +12,51 @@ info:\n     name: MIT\n     url: https://opensource.org/licenses/MIT\n tags:\n-  - name: security server\n-    description: <br>Security Server admin API design\n+  - name: backups\n+    description: backup endpoints\n+  - name: certificate-authorities\n+    description: CA endpoints\n+  - name: clients\n+    description: clients endpoints\n+  - name: diagnostics\n+    description: diagnostics endpoints\n+  - name: endpoints\n+    description: services' endpoints related endpoints\n+  - name: initialization\n+    description: initialization endpoints\n+  - name: keys\n+    description: keys endpoints\n+  - name: language\n+    description: language endpoints\n+  - name: local-groups\n+    description: local groups endpoints\n+  - name: member-classes\n+    description: member classes endpoints\n+  - name: member-names\n+    description: member names endpoints\n+  - name: security-servers\n+    description: security servers endpoints\n+  - name: services\n+    description: services endpoints\n+  - name: service-descriptions\n+    description: service descriptions endpoints\n+  - name: system\n+    description: system endpoints\n+  - name: timestamping\n+    description: timestamping endpoints\n+  - name: token-certificate\n+    description: token certificates endpoints\n+  - name: tokens\n+    description: tokens endpoints\n+  - name: user\n+    description: user endpoints\n+  - name: xroad-instances\n+    description: xroad-instances endpoints\n paths:\n-  /backups:\n+  /api/v1/backups:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDk4MzI3Mg=="}, "originalCommit": {"oid": "ccfc98edb2a5799d8b06d522c8799de26a14590c"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2748, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}