{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgwMzMyMjE2", "number": 391, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowMjowNVrODkkFqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOToxMzoyMFrODkkUqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjY2NjAwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowMjowNVrOFw9Leg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMToxNlrOF378bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODMzMA==", "bodyText": "This kind of bootstrapping repeats a lot, could this be implemented as e.g. a helper method?", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386878330", "createdAt": "2020-03-03T09:02:05Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 214}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODEyNQ==", "bodyText": "Implemented", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198125", "createdAt": "2020-03-18T09:11:16Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg3ODMzMA=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 214}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjY4MjQ1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowNjo1NlrOFw9Vog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMTozNVrOF379LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MDkzMA==", "bodyText": "Would maybe be beneficial to test corner case: 255 characters long description can be saved. Even though acceptance criteria does not require it.", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386880930", "createdAt": "2020-03-03T09:06:56Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 299}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODMxNg==", "bodyText": "Implemented", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198316", "createdAt": "2020-03-18T09:11:35Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MDkzMA=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 299}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjY4NTk5OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOTowODowNlrOFw9X3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMzo1NlrOF38C1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTUwMA==", "bodyText": "Maybe even this part, also?", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386881500", "createdAt": "2020-03-03T09:08:06Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 223}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5OTc2NQ==", "bodyText": "The way how tests navigate to the actual target area of the SUT is going to be changed when the page model is refactored, so I'm not changing it at this time.", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394199765", "createdAt": "2020-03-18T09:13:56Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MTUwMA=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 223}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjY5NjkyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOToxMToxM1rOFw9ebQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMTo1MFrOF379xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzE4MQ==", "bodyText": "This cancels local group removal, not local group member removal, right? Should the name be different?", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386883181", "createdAt": "2020-03-03T09:11:13Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 346}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODQ2OQ==", "bodyText": "Implemented", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198469", "createdAt": "2020-03-18T09:11:50Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzE4MQ=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 346}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjY5OTUzOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOToxMTo1NlrOFw9gFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMjowMFrOF37-Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzYwNw==", "bodyText": "This confirms local group removal, not local group member removal, right? Should the name be different?", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386883607", "createdAt": "2020-03-03T09:11:56Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 357}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODU2Nw==", "bodyText": "Implemented", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198567", "createdAt": "2020-03-18T09:12:00Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4MzYwNw=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 357}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NjcwNDQwOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwOToxMzoyMFrOFw9jHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwOToxMjoxMFrOF37-iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NDM4MQ==", "bodyText": "Should this test that the removed local group was successfully removed, ie. does not exist in the list anymore?", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r386884381", "createdAt": "2020-03-03T09:13:20Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  \n+    browser.waitForElementVisible(clientLocalGroups); ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 358}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDE5ODY2Nw==", "bodyText": "Implemented", "url": "https://github.com/nordic-institute/X-Road/pull/391#discussion_r394198667", "createdAt": "2020-03-18T09:12:10Z", "author": {"login": "olliru"}, "path": "src/proxy-ui-api/frontend/tests/e2e/specs/ss-clients-localgroups.js", "diffHunk": "@@ -0,0 +1,362 @@\n+\n+module.exports = {\n+  tags: ['ss', 'clients', 'localgroups'],\n+  'Security server client local groups filtering': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    // Verify default sorting\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('bb');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"cbb\")]')\n+\n+    // Change filtering and verify\n+    clientLocalGroups.filterBy('Desc');\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"bac\")]');\n+\n+    browser.end();\n+  },\n+  'Security server client add local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+\n+    // Cancel add local group dialog, verify that nothing happens\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]');\n+\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterCode('abc');\n+    browser.assert.valueContains('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"abc\");\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[8]');;\n+\n+    // Verify that local group dialog fields are empty after re-opening\n+    clientLocalGroups.openAddDialog();\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Code\")]]//input', \"\");\n+    browser.assert.value('//div[contains(@class, \"dlg-edit-row\") and .//*[contains(text(), \"Description\")]]//input', \"\");\n+\n+    // Verify that add is disabled if only Code is entered\n+    clientLocalGroups.enterCode('abc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+    clientLocalGroups.cancelAddDialog();\n+\n+    // Verify that add is disabled if only description is entered\n+    clientLocalGroups.openAddDialog();\n+    clientLocalGroups.enterDescription('addDesc');\n+    browser.waitForElementVisible('//button[contains(@data-test, \"dialog-save-button\") and @disabled=\"disabled\"]');\n+\n+    // Verify that trying to add a group with existing code results in an error message\n+    clientLocalGroups.enterCode('abb');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"409\")]]');\n+ \n+    // Add a new group and verify\n+    clientLocalGroups.enterCode('abc');\n+    clientLocalGroups.enterDescription('addDesc');\n+    clientLocalGroups.confirmAddDialog();\n+    browser.waitForElementVisible('//*[contains(@class, \"v-snack\") and .//*[contains(text(), \"Local group added\")]]');\n+\n+    browser\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[2]//span[contains(text(),\"1122\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[3]//span[contains(text(),\"1212\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[4]//span[contains(text(),\"2233\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[5]//span[contains(text(),\"abb\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[6]//span[contains(text(),\"abc\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[7]//span[contains(text(),\"bac\")]')\n+      .waitForElementVisible('(//table[contains(@class, \"details-certificates\")]/tr)[8]//span[contains(text(),\"cbb\")]')\n+      .waitForElementNotPresent('(//table[contains(@class, \"details-certificates\")]/tr)[9]');;\n+\n+    browser.end();\n+\n+  },\n+  'Security server add local group member': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openAbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Add new member to local group\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.cancelAddMembersDialog();\n+\n+    //localGroupPopup.addSelectedMembers();\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    localGroupPopup.openAddMembers();\n+    localGroupPopup.searchMembers();\n+    localGroupPopup.selectNewTestComMember();\n+    localGroupPopup.addSelectedMembers();\n+\n+    browser.waitForElementNotVisible('//span[contains(@class, \"headline\") and contains(text(), \"Add Members\")]');\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]')\n+\n+    browser.end();\n+\n+  },\n+  'Security server delete local group members': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+\n+    // Remove single \n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestCom\")]');\n+\n+    localGroupPopup.clickRemoveTestComMember();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove member?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestCom\")]');\n+    localGroupPopup.close();\n+\n+    // Remove All\n+\n+    clientLocalGroups.openBacDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+\n+    localGroupPopup.clickRemoveAll();\n+    localGroupPopup.confirmMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Remove all members?\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestGov\")]');\n+    browser.assert.not.elementPresent('//*[contains(text(),\"TestOrg\")]');\n+\n+    browser.end();\n+\n+  },\n+  'Security server edit local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Change description\n+    localGroupPopup.changeDescription('');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');\n+    mainPage.closeSnackbar();\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription(browser.globals.test_string_300.slice(0,256));\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Request failed with status code 500');;\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"Group4\")]]')\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+    localGroupPopup.changeDescription('GroupChanged');\n+    localGroupPopup.clickHeader();\n+    browser.assert.containsText('//div[contains(@class, \"v-snack__content\")]', 'Description saved');\n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")] and .//*[contains(text(), \"GroupChanged\")]]')\n+    browser.end();\n+\n+  },\n+  'Security server delete local group': browser => {\n+    const frontPage = browser.page.ssFrontPage();\n+    const mainPage = browser.page.ssMainPage();\n+    const clientsTab = mainPage.section.clientsTab;\n+    const clientInfo = mainPage.section.clientInfo;\n+    const clientLocalGroups = clientInfo.section.localGroups;\n+    const localGroupPopup = mainPage.section.localGroupPopup;\n+    // Open SUT and check that page is loaded\n+    frontPage.navigate();\n+    browser.waitForElementVisible('//*[@id=\"app\"]');\n+\n+    // Enter valid credentials\n+    frontPage\n+      .clearUsername()\n+      .clearPassword()\n+      .enterUsername(browser.globals.login_usr)\n+      .enterPassword(browser.globals.login_pwd)\n+      .signin();\n+\n+    // Open TestGov Internal Servers and local group details view\n+    mainPage.openClientsTab();\n+    browser.waitForElementVisible(clientsTab);\n+    clientsTab.openTestService();\n+    browser.waitForElementVisible(clientInfo);\n+    clientInfo.openLocalGroupsTab();\n+    browser.waitForElementVisible(clientLocalGroups);\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    // Delete and cancel\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.cancelMemberRemove();\n+    browser.waitForElementNotVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');   \n+    localGroupPopup.close();\n+    browser.waitForElementVisible('//table[contains(@class, \"details-certificates\")]//tr[.//*[contains(text(),\"cbb\")]]')\n+\n+    // Delete and confirm\n+    clientLocalGroups.openCbbDetails();\n+    browser.waitForElementVisible(localGroupPopup);\n+\n+    localGroupPopup.deleteThisGroup();\n+    browser.waitForElementVisible('//*[contains(@data-test, \"dialog-title\") and contains(text(), \"Delete group?\")]');\n+    localGroupPopup.confirmMemberRemove();  \n+    browser.waitForElementVisible(clientLocalGroups); ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg4NDM4MQ=="}, "originalCommit": {"oid": "f91f05d192eac0588d6b5b8ad8bb29dc48ae6b23"}, "originalPosition": 358}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2959, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}