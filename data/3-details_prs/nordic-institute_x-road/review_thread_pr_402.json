{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzNTU2MTU4", "number": 402, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxOToxN1rODmno0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDo0MDo1MVrODmoFMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODIxOTA0OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxOToxN1rOF0I0yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzo1NTowOVrOF0sNAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDg1Ng==", "bodyText": "nitpick: \"is already unregistered\" may be slightly misleading, since ActionNotPossibleException is thrown also when client has status STATUS_SAVED, STATUS_DELINPROG or STATUS_GLOBALERR. At least STATUS_SAVED can happen even if client has not been already unregistered.", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390214856", "createdAt": "2020-03-10T10:19:17Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NDQ5OQ==", "bodyText": "Updated the javadoc", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390794499", "createdAt": "2020-03-11T07:55:09Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDg1Ng=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODI0OTU1OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoyODozMVrOF0JIYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwODo1MDoxMFrOF0tvjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg==", "bodyText": "Are you sure about ActionNotPossibleException being bad request? For example similar operation token certificate register / unregister seem to map into http 409 conflict: \n  \n    \n      X-Road/src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/TokenCertificatesApiController.java\n    \n    \n        Lines 213 to 214\n      in\n      05e6443\n    \n    \n    \n    \n\n        \n          \n           } catch (ActionNotPossibleException | KeyNotFoundException e) { \n        \n\n        \n          \n               throw new ConflictException(e); \n        \n    \n  \n\n\nAlso other controllers seem to map ActionNotPossibleExceptions into conflicts, currently.\nI am not sure if this means CannotUnregisterOwnerException should follow suit, if ActionNotPossible is changed into 409. It is a little bit different, since owner is mostly static, and it is not very likely that a conflict could happen due to some other API call changing the owner. It is more common / likely that client status is changed due to another API call.", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390219872", "createdAt": "2020-03-10T10:28:31Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -406,6 +404,35 @@ private ClientType getClientType(String encodedId) {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n+    public ResponseEntity<Void> registerClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.registerClient(clientId);\n+        } catch (GlobalConfOutdatedException e) {\n+            throw new BadRequestException(e);\n+        } catch (ClientNotFoundException e) {\n+            throw new ResourceNotFoundException(e);\n+        }\n+        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n+    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.unregisterClient(clientId);\n+        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n+                | ActionNotPossibleException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NjAyNg==", "bodyText": "ActionNotPossibleException and CannotUnregisterOwnerException are now considered a conflict since the request itself is not 'bad'. This would also apply to the GlobalConfOutdatedException but let's still follow the current approach that we have and treat it as a bad request (the GlobalConfOutdatedException case has been discussed sometime before IIRC (?))", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390796026", "createdAt": "2020-03-11T07:58:45Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -406,6 +404,35 @@ private ClientType getClientType(String encodedId) {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n+    public ResponseEntity<Void> registerClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.registerClient(clientId);\n+        } catch (GlobalConfOutdatedException e) {\n+            throw new BadRequestException(e);\n+        } catch (ClientNotFoundException e) {\n+            throw new ResourceNotFoundException(e);\n+        }\n+        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n+    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.unregisterClient(clientId);\n+        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n+                | ActionNotPossibleException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxOTQxMA==", "bodyText": "Yeah, GlobalConfOutdatedException is a bit suspect too, but since it is widely used convention let's not touch it in this ticket.", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390819410", "createdAt": "2020-03-11T08:49:33Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -406,6 +404,35 @@ private ClientType getClientType(String encodedId) {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n+    public ResponseEntity<Void> registerClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.registerClient(clientId);\n+        } catch (GlobalConfOutdatedException e) {\n+            throw new BadRequestException(e);\n+        } catch (ClientNotFoundException e) {\n+            throw new ResourceNotFoundException(e);\n+        }\n+        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n+    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.unregisterClient(clientId);\n+        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n+                | ActionNotPossibleException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDgxOTcyNQ==", "bodyText": "There was some discussion about it in some ticket, unfortunately can't remember where...", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390819725", "createdAt": "2020-03-11T08:50:10Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/openapi/ClientsApiController.java", "diffHunk": "@@ -406,6 +404,35 @@ private ClientType getClientType(String encodedId) {\n         return new ResponseEntity<>(subjects, HttpStatus.OK);\n     }\n \n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_REG_REQ')\")\n+    public ResponseEntity<Void> registerClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.registerClient(clientId);\n+        } catch (GlobalConfOutdatedException e) {\n+            throw new BadRequestException(e);\n+        } catch (ClientNotFoundException e) {\n+            throw new ResourceNotFoundException(e);\n+        }\n+        return new ResponseEntity<>(HttpStatus.NO_CONTENT);\n+    }\n+\n+    @Override\n+    @PreAuthorize(\"hasAuthority('SEND_CLIENT_DEL_REQ')\")\n+    public ResponseEntity<Void> unregisterClient(String encodedClientId) {\n+        ClientId clientId = clientConverter.convertId(encodedClientId);\n+        try {\n+            clientService.unregisterClient(clientId);\n+        } catch (GlobalConfOutdatedException | ClientService.CannotUnregisterOwnerException\n+                | ActionNotPossibleException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxOTg3Mg=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 70}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODI4Nzc4OnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDozOTo0MFrOF0Jf1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQxMTowMzowM1rOF0ySZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ==", "bodyText": "saveOrUpdate does not hurt, but out of curiosity, is it needed? Or would JPA implementation automatically persist the modified managed entity when transaction ends?\n(@Transactional tests might have something to do with this....if so, it would in principle be better to make adjustments to tests instead of production code - em.flush?)\nIf saveOrUpdate is not needed, we could consider removing it, just to make things simpler and not fooling maintainers into thinking there is something important that requires calling saveOrUpdate, when there is not?", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390225879", "createdAt": "2020-03-10T10:39:40Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n+     */\n+    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotUnregisterOwnerException, ActionNotPossibleException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n+        if (!allowedStatuses.contains(client.getClientStatus())) {\n+            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n+        }\n+        ClientId ownerId = securityServerOwner.getId();\n+        if (clientId.equals(ownerId)) {\n+            throw new CannotUnregisterOwnerException();\n+        }\n+        try {\n+            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n+            client.setClientStatus(STATUS_DELINPROG);\n+            clientRepository.saveOrUpdate(client);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5MzYxOQ==", "bodyText": "It is not needed. I added it merely to be consistent with the rest of our codebase. IMO it should be removed from elsewhere also.", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390793619", "createdAt": "2020-03-11T07:52:55Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n+     */\n+    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotUnregisterOwnerException, ActionNotPossibleException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n+        if (!allowedStatuses.contains(client.getClientStatus())) {\n+            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n+        }\n+        ClientId ownerId = securityServerOwner.getId();\n+        if (clientId.equals(ownerId)) {\n+            throw new CannotUnregisterOwnerException();\n+        }\n+        try {\n+            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n+            client.setClientStatus(STATUS_DELINPROG);\n+            clientRepository.saveOrUpdate(client);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NTEzNQ==", "bodyText": "Agreed!", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390795135", "createdAt": "2020-03-11T07:56:39Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n+     */\n+    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotUnregisterOwnerException, ActionNotPossibleException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n+        if (!allowedStatuses.contains(client.getClientStatus())) {\n+            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n+        }\n+        ClientId ownerId = securityServerOwner.getId();\n+        if (clientId.equals(ownerId)) {\n+            throw new CannotUnregisterOwnerException();\n+        }\n+        try {\n+            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n+            client.setClientStatus(STATUS_DELINPROG);\n+            clientRepository.saveOrUpdate(client);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDg5NDE4MA==", "bodyText": "Created a task about codebase cleanup. Cleanup suggestions to the task are appreciated:\nhttps://jira.niis.org/browse/XRDDEV-976", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390894180", "createdAt": "2020-03-11T11:03:03Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -418,6 +425,51 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n         return mergeClientListsDistinctively(globalClients, localClients);\n     }\n \n+    /**\n+     * Registers a client\n+     * @param clientId client to register\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     */\n+    public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        try {\n+            managementRequestSenderService.sendClientRegisterRequest(clientId);\n+            client.setClientStatus(ClientType.STATUS_REGINPROG);\n+            clientRepository.saveOrUpdate(client);\n+        } catch (ManagementRequestSendingFailedException e) {\n+            throw new DeviationAwareRuntimeException(e, e.getErrorDeviation());\n+        }\n+    }\n+\n+    /**\n+     * Unregister a client\n+     * @param clientId client to unregister\n+     * @throws GlobalConfOutdatedException\n+     * @throws ClientNotFoundException\n+     * @throws CannotUnregisterOwnerException when trying to unregister the security server owner\n+     * @throws ActionNotPossibleException when trying do unregister a client that is already unregistered\n+     */\n+    public void unregisterClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n+            CannotUnregisterOwnerException, ActionNotPossibleException {\n+        ClientType client = getLocalClientOrThrowNotFound(clientId);\n+        List<String> allowedStatuses = Arrays.asList(STATUS_REGISTERED, STATUS_REGINPROG);\n+        if (!allowedStatuses.contains(client.getClientStatus())) {\n+            throw new ActionNotPossibleException(\"cannot unregister client with status \" + client.getClientStatus());\n+        }\n+        ClientId ownerId = securityServerOwner.getId();\n+        if (clientId.equals(ownerId)) {\n+            throw new CannotUnregisterOwnerException();\n+        }\n+        try {\n+            managementRequestSenderService.sendClientUnregisterRequest(clientId);\n+            client.setClientStatus(STATUS_DELINPROG);\n+            clientRepository.saveOrUpdate(client);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNTg3OQ=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 139}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODI5MTcxOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDo0MDo1MVrOF0JiPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQwNzo1OTowOVrOF0sTtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNjQ5NQ==", "bodyText": "Javadoc does not seem to be in sync with the implementation.", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390226495", "createdAt": "2020-03-10T10:40:51Z", "author": {"login": "jansu76"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java", "diffHunk": "@@ -99,27 +103,51 @@ public Integer sendAuthCertDeletionRequest(byte[] authCert) throws\n         }\n     }\n \n-    private ManagementRequestSender createManagementRequestSender()\n-            throws GlobalConfService.GlobalConfOutdatedException {\n-        globalConfService.verifyGlobalConfValidity();\n-        ServerConfType serverConf = serverConfService.getServerConf();\n-        ClientId sender = serverConf.getOwner().getIdentifier();\n-        ClientId receiver = globalConfFacade.getManagementRequestService();\n-        return new ManagementRequestSender(sender, receiver);\n+    /**\n+     * Sends a client register request as a normal X-Road message\n+     * @param securityServer the security server id\n+     * @param clientId the client id that will be registered\n+     * @return request ID in the central server database\n+     * @throws GlobalConfOutdatedException\n+     * @throws ManagementRequestSendingFailedException if there is a problem sending the message\n+     */\n+    Integer sendClientRegisterRequest(ClientId clientId)\n+            throws GlobalConfOutdatedException, ManagementRequestSendingFailedException {\n+        ManagementRequestSender sender = createManagementRequestSender();\n+        try {\n+            return sender.sendClientRegRequest(serverConfService.getSecurityServerId(), clientId);\n+        } catch (CodedException ce) {\n+            throw ce;\n+        } catch (Exception e) {\n+            throw new ManagementRequestSendingFailedException(e);\n+        }\n     }\n \n     /**\n-     * Missing a valid auth cert\n+     * Sends a client unregister request as a normal X-Road message\n+     * @param securityServer the security server id", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDc5NjIxMw==", "bodyText": "Updated", "url": "https://github.com/nordic-institute/X-Road/pull/402#discussion_r390796213", "createdAt": "2020-03-11T07:59:09Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ManagementRequestSenderService.java", "diffHunk": "@@ -99,27 +103,51 @@ public Integer sendAuthCertDeletionRequest(byte[] authCert) throws\n         }\n     }\n \n-    private ManagementRequestSender createManagementRequestSender()\n-            throws GlobalConfService.GlobalConfOutdatedException {\n-        globalConfService.verifyGlobalConfValidity();\n-        ServerConfType serverConf = serverConfService.getServerConf();\n-        ClientId sender = serverConf.getOwner().getIdentifier();\n-        ClientId receiver = globalConfFacade.getManagementRequestService();\n-        return new ManagementRequestSender(sender, receiver);\n+    /**\n+     * Sends a client register request as a normal X-Road message\n+     * @param securityServer the security server id\n+     * @param clientId the client id that will be registered\n+     * @return request ID in the central server database\n+     * @throws GlobalConfOutdatedException\n+     * @throws ManagementRequestSendingFailedException if there is a problem sending the message\n+     */\n+    Integer sendClientRegisterRequest(ClientId clientId)\n+            throws GlobalConfOutdatedException, ManagementRequestSendingFailedException {\n+        ManagementRequestSender sender = createManagementRequestSender();\n+        try {\n+            return sender.sendClientRegRequest(serverConfService.getSecurityServerId(), clientId);\n+        } catch (CodedException ce) {\n+            throw ce;\n+        } catch (Exception e) {\n+            throw new ManagementRequestSendingFailedException(e);\n+        }\n     }\n \n     /**\n-     * Missing a valid auth cert\n+     * Sends a client unregister request as a normal X-Road message\n+     * @param securityServer the security server id", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIyNjQ5NQ=="}, "originalCommit": {"oid": "8864a6125a5c86f52af1b3a522eb8f2582990db1"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2978, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}