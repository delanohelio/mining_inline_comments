{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMTE2NzUx", "number": 743, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTowNTozOVrOEzvlCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTowNTozOVrOEzvlCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyNjkyMzYyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTowNTozOVrOHrKTQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxMTo1MDowNVrOHrLu-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAxOTU4NA==", "bodyText": "There are three methods in ManagementRequestSenderService that take in a ClientId parameter\n\nsendClientRegisterRequest\nsendClientUnregisterRequest\nsendOwnerChangeRequest\n\nWould it make sense to check the validity of the memberClass in all of these cases? Maybe moving the whole checking logic into ManagementRequestSenderService methods listed above.\nOr another way would be to just add the check to unregisterClient and changeOwner methods within ClientService.", "url": "https://github.com/nordic-institute/X-Road/pull/743#discussion_r515019584", "createdAt": "2020-10-30T11:05:39Z", "author": {"login": "carohauta"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -493,13 +495,27 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n      * @throws ClientNotFoundException\n      * @throws CannotRegisterOwnerException\n      * @throws ActionNotPossibleException\n+     * @throws InvalidMemberClassException\n+     * @throws InvalidInstanceIdentifierException\n      */\n     public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n-            CannotRegisterOwnerException, ActionNotPossibleException {\n+            CannotRegisterOwnerException, ActionNotPossibleException, InvalidMemberClassException,\n+            InvalidInstanceIdentifierException {\n \n         auditDataHelper.put(clientId);\n \n         ClientType client = getLocalClientOrThrowNotFound(clientId);\n+\n+        String instanceIdentifier = client.getIdentifier().getXRoadInstance();\n+        if (!instanceIdentifier.equals(globalConfFacade.getInstanceIdentifier())) {\n+            throw new InvalidInstanceIdentifierException(INVALID_INSTANCE_IDENTIFIER + instanceIdentifier);\n+        }\n+\n+        String memberClass = client.getIdentifier().getMemberClass();\n+        if (!isValidMemberClass(memberClass)) {\n+            throw new InvalidMemberClassException(INVALID_MEMBER_CLASS + memberClass);\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b93eee7fec4a34221c6095b8395c45b60a755bcc"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTA0MzA2Ng==", "bodyText": "Originally I didn't include the member class check in sendClientUnregisterRequest and sendOwnerChangeRequest, because both requests require that the client has already been registered on the Security Server. And since the sendClientRegisterRequest has the check, registering a client with invalid member class should not be possible. So instead of including the check in all the three management requests, it's only included in the request that is a precondition for the two other requests.", "url": "https://github.com/nordic-institute/X-Road/pull/743#discussion_r515043066", "createdAt": "2020-10-30T11:50:05Z", "author": {"login": "petkivim"}, "path": "src/proxy-ui-api/src/main/java/org/niis/xroad/restapi/service/ClientService.java", "diffHunk": "@@ -493,13 +495,27 @@ public ClientType deleteTlsCertificate(ClientId id, String certificateHash)\n      * @throws ClientNotFoundException\n      * @throws CannotRegisterOwnerException\n      * @throws ActionNotPossibleException\n+     * @throws InvalidMemberClassException\n+     * @throws InvalidInstanceIdentifierException\n      */\n     public void registerClient(ClientId clientId) throws GlobalConfOutdatedException, ClientNotFoundException,\n-            CannotRegisterOwnerException, ActionNotPossibleException {\n+            CannotRegisterOwnerException, ActionNotPossibleException, InvalidMemberClassException,\n+            InvalidInstanceIdentifierException {\n \n         auditDataHelper.put(clientId);\n \n         ClientType client = getLocalClientOrThrowNotFound(clientId);\n+\n+        String instanceIdentifier = client.getIdentifier().getXRoadInstance();\n+        if (!instanceIdentifier.equals(globalConfFacade.getInstanceIdentifier())) {\n+            throw new InvalidInstanceIdentifierException(INVALID_INSTANCE_IDENTIFIER + instanceIdentifier);\n+        }\n+\n+        String memberClass = client.getIdentifier().getMemberClass();\n+        if (!isValidMemberClass(memberClass)) {\n+            throw new InvalidMemberClassException(INVALID_MEMBER_CLASS + memberClass);\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTAxOTU4NA=="}, "originalCommit": {"oid": "b93eee7fec4a34221c6095b8395c45b60a755bcc"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2634, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}