{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg3MTcxMTEy", "number": 410, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoyOTozMVrODqUUbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoyOTozMVrODqUUbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ1Njk5NjkyOnYy", "diffSide": "RIGHT", "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoyOTozMVrOF5_PRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QxMDoyOTozMVrOF5_PRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NjM0OTI1Mg==", "bodyText": "Isn't this state of type NotificationsState from above? I think types should be used always when possible - it's a lot easier for other developers to get into the implementation.", "url": "https://github.com/nordic-institute/X-Road/pull/410#discussion_r396349252", "createdAt": "2020-03-23T10:29:31Z", "author": {"login": "TJaakkola"}, "path": "src/proxy-ui-api/frontend/src/store/modules/notifications.ts", "diffHunk": "@@ -0,0 +1,142 @@\n+import { ActionTree, GetterTree, Module, MutationTree } from 'vuex';\n+import { RootState } from '../types';\n+\n+\n+export interface NotificationsState {\n+  successMessageCode: string;\n+  successMessageRaw: string;\n+  showSuccessCode: boolean;\n+  showSuccessRaw: boolean;\n+  errorMessageCode: string;\n+  errorMessageRaw: string;\n+  errorObject: any;\n+  showErrorObject: boolean;\n+  showErrorRaw: boolean;\n+  showErrorCode: boolean;\n+}\n+const getDefaultState = () => {\n+  return {\n+    successMessageCode: '',\n+    successMessageRaw: '',\n+    showSuccessCode: false,\n+    showSuccessRaw: false,\n+    errorMessageCode: '',\n+    errorMessageRaw: '',\n+    showErrorObject: false,\n+    showErrorCode: false,\n+    showErrorRaw: false,\n+    errorObject: undefined,\n+  };\n+};\n+\n+// Initial state. The state can be reseted with this.\n+const notificationsState: NotificationsState = getDefaultState();\n+\n+export const getters: GetterTree<NotificationsState, RootState> = {\n+  showSuccessCode(state): boolean {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9e76575724d98b00bf1a6a11ec5d5e9194101870"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2988, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}