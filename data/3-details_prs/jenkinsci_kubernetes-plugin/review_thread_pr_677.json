{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwNTAxMjA1", "number": 677, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0NzozM1rODW2zvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0OTozMFrODW22kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjkzMjQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0NzozM1rOFb2Vfg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo1NjozNVrOFb2nKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjExMA==", "bodyText": "IIRC there was a similar utility method elsewhere in this plugin.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364746110", "createdAt": "2020-01-09T13:47:33Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -379,7 +379,17 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : label);\n+        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n+    }\n+\n+    private String sanitizeLabel(String input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc1MDYzNQ==", "bodyText": "Similar but not the same - \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepExecution.java\n    \n    \n        Lines 166 to 175\n      in\n      3f91dcd\n    \n    \n    \n    \n\n        \n          \n           static String labelify(String input) { \n        \n\n        \n          \n               int max = /* Kubernetes limit */ 63 - /* hyphen */ 1 - /* suffix */ 5; \n        \n\n        \n          \n               if (input.length() > max) { \n        \n\n        \n          \n                   input = input.substring(input.length() - max); \n        \n\n        \n          \n               } \n        \n\n        \n          \n               input = input.replaceAll(\"[^_.a-zA-Z0-9-]\", \"_\").replaceFirst(\"^[^a-zA-Z0-9]\", \"x\"); \n        \n\n        \n          \n               String label = input + \"-\" + RandomStringUtils.random(5, \"bcdfghjklmnpqrstvwxz0123456789\"); \n        \n\n        \n          \n               assert PodTemplateUtils.validateLabel(label) : label; \n        \n\n        \n          \n               return label; \n        \n\n        \n          \n           }", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364750635", "createdAt": "2020-01-09T13:56:35Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -379,7 +379,17 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : label);\n+        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n+    }\n+\n+    private String sanitizeLabel(String input) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjExMA=="}, "originalCommit": {"oid": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjkzNTY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0ODoyOFrOFb2XQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0ODoyOFrOFb2XQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NjU2MQ==", "bodyText": "A unit test would be in order for this sort of thing I guess.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364746561", "createdAt": "2020-01-09T13:48:28Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -379,7 +379,17 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : label);\n+        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_ID : sanitizeLabel(label));\n+    }\n+\n+    private String sanitizeLabel(String input) {\n+        String label = input;\n+        int max = 63; // Kubernetes limit\n+        if (label.length() > max) {\n+            label = label.substring(label.length() - max);\n+        }\n+        label = label.replaceAll(\"[^_.a-zA-Z0-9-]\", \"_\").replaceFirst(\"^[^a-zA-Z0-9]\", \"x\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1MjkzOTcwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0OTozMFrOFb2Zdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wOVQxMzo0OTozMFrOFb2Zdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NDc0NzEyNw==", "bodyText": "Do we also expect that the Computer has the original labels label1 & label2? I guess \n  \n    \n      kubernetes-plugin/src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/podTemplateWithMultipleLabels.groovy\n    \n    \n         Line 1\n      in\n      be4b55f\n    \n    \n    \n    \n\n        \n          \n           node('label1') { \n        \n    \n  \n\n tests this implicitly but for the benefit of readers it might be good to assert this explicitly.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/677#discussion_r364747127", "createdAt": "2020-01-09T13:49:30Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/KubernetesPipelineTest.java", "diffHunk": "@@ -382,6 +384,26 @@ public void runInPodWithLivenessProbe() throws Exception {\n         r.assertLogContains(\"Still alive\", b);\n     }\n \n+    @Test\n+    public void podTemplateWithMultipleLabels() throws Exception {\n+        PodTemplate pt = new PodTemplate();\n+        pt.setName(\"podTemplate\");\n+        pt.setLabel(\"label1 label2\");\n+        ContainerTemplate jnlp = new ContainerTemplate(\"jnlp\", \"jenkins/jnlp-slave:3.35-5-alpine\");\n+        pt.setContainers(Collections.singletonList(jnlp));\n+        cloud.addTemplate(pt);\n+        SemaphoreStep.waitForStart(\"pod/1\", b);\n+        Map<String, String> labels = getLabels(cloud, this, name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be4b55ffc3f85eca842fbb42cdaa7f8937a8747d"}, "originalPosition": 29}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4982, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}