{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODMwMDc5", "number": 866, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzozMjowM1rOEsoj0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDoxMTozNVrOE7slZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjM3MzMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzozMjowM1rOHf-40w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNTozOToxNVrOHgD0GQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ==", "bodyText": "kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n    \n    \n        Lines 383 to 384\n      in\n      23e40ca\n    \n    \n    \n    \n\n        \n          \n           public int getContainerCap() { \n        \n\n        \n          \n               return containerCap != null ? containerCap : Integer.MAX_VALUE;", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503298259", "createdAt": "2020-10-12T13:32:03Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwODcyMA==", "bodyText": "Or rather than calling the getter you could just check containerCap == null.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503308720", "createdAt": "2020-10-12T13:48:31Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMzNjQ1MQ==", "bodyText": "In either case, KubernetesCloudTest#testInstanceCap fails because concurrency limit checking is skipped when the pod template has a limit but the overall cloud is unlimited.\nFTR Pod templates are using Integer.MAX_VALUE to mean unlimited:\n\n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n    \n    \n        Lines 306 to 312\n      in\n      dedad44\n    \n    \n    \n    \n\n        \n          \n           public void setInstanceCap(int instanceCap) { \n        \n\n        \n          \n               if (instanceCap < 0) { \n        \n\n        \n          \n                   this.instanceCap = Integer.MAX_VALUE; \n        \n\n        \n          \n               } else { \n        \n\n        \n          \n                   this.instanceCap = instanceCap; \n        \n\n        \n          \n               } \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nI'll toy around with it some more until tests pass.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503336451", "createdAt": "2020-10-12T14:31:08Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM1MDE2Mg==", "bodyText": "In version 1.27.0, before all the changes to concurrency limits, setting the overall cloud to 0 skipped all concurrency limit checking, even if the pod template had one set. Is that the expected behavior?\nI was thinking that the pod template level limit should be obeyed when the overall cloud is unlimited.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503350162", "createdAt": "2020-10-12T14:52:18Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM3ODk2OQ==", "bodyText": "Removed the if statement entirely in 464b642 and tests are passing cc @Vlatombe\nThe behavior is also better than it was before: if the global limit is \"unlimited\" then the pod template limit is still respected.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503378969", "createdAt": "2020-10-12T15:39:15Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,8 +575,8 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n+        if (containerCap == Integer.MAX_VALUE) { // don't check concurrency limits when set to \"unlimited.\"\n+            return true;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzI5ODI1OQ=="}, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MjQ0NDcyOnYy", "diffSide": "RIGHT", "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo0OTo0MlrOHf_klA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMzo1MjowM1rOHf_qyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwOTQ2MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                If set to empty or 0 it means no limit.\n          \n          \n            \n                If set to empty it means no limit.\n          \n      \n    \n    \n  \n\nNo reason to confuse people by offering something to type in which would just be changed to blank on save.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503309460", "createdAt": "2020-10-12T13:49:42Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html", "diffHunk": "@@ -1,4 +1,4 @@\n <div>\n     The maximum number of concurrently running agent pods that are permitted in this Kubernetes Cloud.\n-    If set to empty it means no limit. Set to 0 means no pod will ever be started.\n-</div>\n+    If set to empty or 0 it means no limit.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMxMTA1MA==", "bodyText": "Agreed, thanks.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503311050", "createdAt": "2020-10-12T13:52:03Z", "author": {"login": "schottsfired"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html", "diffHunk": "@@ -1,4 +1,4 @@\n <div>\n     The maximum number of concurrently running agent pods that are permitted in this Kubernetes Cloud.\n-    If set to empty it means no limit. Set to 0 means no pod will ever be started.\n-</div>\n+    If set to empty or 0 it means no limit.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMwOTQ2MA=="}, "originalCommit": {"oid": "96e48d2155d6965fdcd671f544749bf86c8e059d"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mjk5MzgxOnYy", "diffSide": "LEFT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjowNTo0MFrOHgEwmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNjozMjowMlrOHgFnOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng==", "bodyText": "So this is going beyond reverting #828; now you are making API server calls even when no caps are in place, which would be a performance regression.\nI think this method instead needs to be altered in structure. First, if containerCap is not infinite, compute allPods and check its size. Then, if template.instanceCap is not infinite, compute labelPods and check its size. If neither of those returns false then you return true by default.\nAnd the method should be renamed to clarify that it is not actually adding a provisioned agent, but checking whether we may add a provisioned agent.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503394456", "createdAt": "2020-10-12T16:05:40Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,9 +575,6 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NzE5Ng==", "bodyText": "Thank you sir for the check, I don't disagree. Looking into it.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503397196", "createdAt": "2020-10-12T16:10:51Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,9 +575,6 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng=="}, "originalCommit": {"oid": "1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQwODQ0Mw==", "bodyText": "0375b35 should do it.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r503408443", "createdAt": "2020-10-12T16:32:02Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -575,9 +575,6 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n      */\n     private boolean addProvisionedSlave(@Nonnull PodTemplate template, @CheckForNull Label label, int scheduledCount) throws Exception {\n         int containerCap = getContainerCap();\n-        if (containerCap == 0) {\n-            return false;\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzM5NDQ1Ng=="}, "originalCommit": {"oid": "1b8cfb78b3d0abbdf54cf34f60fc3de5926e82fa"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDMxOTA4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDoxMTozNVrOH3fQHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDoxMTozNVrOH3fQHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NTc1OQ==", "bodyText": "Ineffective because mayAddProvisionedSlave is calling getContainerCap, not this method, so it sees 0 and refuses to provision pods.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/866#discussion_r527945759", "createdAt": "2020-11-20T20:11:35Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -390,12 +390,12 @@ public void setContainerCapStr(String containerCapStr) {\n     }\n \n     public void setContainerCap(Integer containerCap) {\n-        this.containerCap = (containerCap != null && containerCap >= 0) ? containerCap : null;\n+        this.containerCap = (containerCap != null && containerCap > 0) ? containerCap : null;\n     }\n \n     public String getContainerCapStr() {\n-        // serialized Integer.MAX_VALUE means no limit\n-        return (containerCap == null || containerCap == Integer.MAX_VALUE) ? \"\" : String.valueOf(containerCap);\n+        // null, serialized Integer.MAX_VALUE, or 0 means no limit\n+        return (containerCap == null || containerCap == Integer.MAX_VALUE || containerCap == 0) ? \"\" : String.valueOf(containerCap);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0375b352a1987873b933712bb851331f4459e181"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4846, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}