{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTM3MTc5", "number": 742, "title": "Log events in build log during pod provisioning", "bodyText": "This listens to pod events during the agent launch and stream them in the build logs. Streaming stops once the agent is up and running.\nHappy case\n\u2018Jenkins\u2019 doesn\u2019t have label \u2018pp_20-pm7l0\u2019\n\nCreated Pod: kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww\n[Normal][kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww][Scheduled] Successfully assigned kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww to docker-desktop\n[Normal][kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww][Pulled] Container image \"jenkins/jnlp-slave:4.0.1-1\" already present on machine\n[Normal][kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww][Created] Created container jnlp\n[Normal][kubernetes-plugin-test/pp-20-pm7l0-chmxk-m4pww][Started] Started container jnlp\n\nAgent pp-20-pm7l0-chmxk-m4pww is provisioned from template pp_20-pm7l0-chmxk\n\nUnhappy case\nCreated Pod: kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Scheduled] Successfully assigned kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8 to docker-desktop\n\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Pulling] Pulling image \"invalid:image\"\n\n[Warning][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Failed] Failed to pull image \"invalid:image\": rpc error: code = Unknown desc = Error response from daemon: pull access denied for invalid, repository does not exist or may require 'docker login': denied: requested access to the resource is denied\n[Warning][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Failed] Error: ErrImagePull\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Pulled] Container image \"jenkins/jnlp-slave:4.0.1-1\" already present on machine\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Created] Created container jnlp\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Started] Started container jnlp\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Pulled] Container image \"maven:3.3.9-jdk-8-alpine\" already present on machine\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Created] Created container maven\n\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Started] Started container maven\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][BackOff] Back-off pulling image \"invalid:image\"\n[Warning][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Failed] Error: ImagePullBackOff\n\n[Warning][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][Failed] Error: ImagePullBackOff\nERROR: Unable to pull Docker image \"invalid:image\". Check if image tag name is spelled correctly.\n[Normal][kubernetes-plugin-test/wrong-image-10-0x2gp-cqgzf-pdrq8][BackOff] Back-off pulling image \"invalid:image\"\n\nERROR: Unable to pull Docker image \"invalid:image\". Check if image tag name is spelled correctly.", "createdAt": "2020-03-16T10:31:17Z", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742", "merged": true, "mergeCommit": {"oid": "74f261b8d284f256d8a8c8934a2391e8db3fa6ea"}, "closed": true, "closedAt": "2020-03-18T09:24:42Z", "author": {"login": "Vlatombe"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcOLlnkAH2gAyMzg5MTM3MTc5OmUzMjAyMmIwMjFjYjdlOWMzZjM2YTcwNGY4ODMxZTMyYzBjYzBiMDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcOj798AH2gAyMzg5MTM3MTc5OmZkZTY3NmNlYzIzZmE5MzY3N2IzYTFjNGJhMjZmNTNhMDAwZTNiYjg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e32022b021cb7e9c3f36a704f8831e32c0cc0b09", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/e32022b021cb7e9c3f36a704f8831e32c0cc0b09", "committedDate": "2020-03-16T10:31:04Z", "message": "Log events in build log during pod provisioning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2007d04566666ef4452c2afeca11c54238209833", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/2007d04566666ef4452c2afeca11c54238209833", "committedDate": "2020-03-16T13:23:04Z", "message": "Grant watch events"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Mzc1MTI0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-375375124", "createdAt": "2020-03-16T16:21:56Z", "commit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyMTo1NlrOF27zzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNjoyMTo1NlrOF27zzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NzM0MQ==", "bodyText": "I don't see any difference in the cases for this switch.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393147341", "createdAt": "2020-03-16T16:21:56Z", "author": {"login": "kerogers-cloudbees"}, "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(TaskListenerEventWatcher.class.getName());\n+\n+    private final String name;\n+    private final TaskListener listener;\n+\n+    public TaskListenerEventWatcher(String name, TaskListener listener) {\n+        this.name = name;\n+        this.listener = listener;\n+    }\n+\n+    private void listenerLog(Event event) {\n+        PrintStream logger = listener.getLogger();\n+        // Messages can have multiple lines\n+        String[] lines = event.getMessage().split(\"\\n\");\n+        for (String line : lines) {\n+            logger.printf(\"[%s][%s/%s][%s] %s%n\", event.getType(), event.getInvolvedObject().getNamespace(), event.getInvolvedObject().getName(), event.getReason(), line);\n+        }\n+    }\n+\n+    @Override\n+    public void eventReceived(Action action, Event event) {\n+        switch (event.getType()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 40}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1Mzg1NTY0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-375385564", "createdAt": "2020-03-16T16:34:19Z", "commit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDQyNjgw", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-375442680", "createdAt": "2020-03-16T17:39:46Z", "commit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzozOTo0NlrOF2_CLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1MDoyNVrOF2_a9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMDE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class TaskListenerEventWatcher implements Watcher<Event> {\n          \n          \n            \n            class TaskListenerEventWatcher implements Watcher<Event> {", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393200172", "createdAt": "2020-03-16T17:39:46Z", "author": {"login": "jglick"}, "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMTM0MA==", "bodyText": "Right, was something forgotten here?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393201340", "createdAt": "2020-03-16T17:41:41Z", "author": {"login": "jglick"}, "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(TaskListenerEventWatcher.class.getName());\n+\n+    private final String name;\n+    private final TaskListener listener;\n+\n+    public TaskListenerEventWatcher(String name, TaskListener listener) {\n+        this.name = name;\n+        this.listener = listener;\n+    }\n+\n+    private void listenerLog(Event event) {\n+        PrintStream logger = listener.getLogger();\n+        // Messages can have multiple lines\n+        String[] lines = event.getMessage().split(\"\\n\");\n+        for (String line : lines) {\n+            logger.printf(\"[%s][%s/%s][%s] %s%n\", event.getType(), event.getInvolvedObject().getNamespace(), event.getInvolvedObject().getName(), event.getReason(), line);\n+        }\n+    }\n+\n+    @Override\n+    public void eventReceived(Action action, Event event) {\n+        switch (event.getType()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzE0NzM0MQ=="}, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMTg1Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        cause.printStackTrace(listener.getLogger());\n          \n          \n            \n                        hudson.Functions.printStackTrace(cause, listener.getLogger());", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393201856", "createdAt": "2020-03-16T17:42:33Z", "author": {"login": "jglick"}, "path": "src/main/java/io/jenkins/plugins/kubernetes/TaskListenerEventWatcher.java", "diffHunk": "@@ -0,0 +1,69 @@\n+package io.jenkins.plugins.kubernetes;\n+\n+import hudson.model.TaskListener;\n+import io.fabric8.kubernetes.api.model.Event;\n+import io.fabric8.kubernetes.client.KubernetesClientException;\n+import io.fabric8.kubernetes.client.Watcher;\n+\n+import java.io.PrintStream;\n+import java.util.Date;\n+import java.util.logging.Level;\n+import java.util.logging.Logger;\n+\n+import static java.util.logging.Level.FINE;\n+import static java.util.logging.Level.INFO;\n+import static java.util.logging.Level.WARNING;\n+\n+public class TaskListenerEventWatcher implements Watcher<Event> {\n+\n+    private static final Logger LOGGER = Logger.getLogger(TaskListenerEventWatcher.class.getName());\n+\n+    private final String name;\n+    private final TaskListener listener;\n+\n+    public TaskListenerEventWatcher(String name, TaskListener listener) {\n+        this.name = name;\n+        this.listener = listener;\n+    }\n+\n+    private void listenerLog(Event event) {\n+        PrintStream logger = listener.getLogger();\n+        // Messages can have multiple lines\n+        String[] lines = event.getMessage().split(\"\\n\");\n+        for (String line : lines) {\n+            logger.printf(\"[%s][%s/%s][%s] %s%n\", event.getType(), event.getInvolvedObject().getNamespace(), event.getInvolvedObject().getName(), event.getReason(), line);\n+        }\n+    }\n+\n+    @Override\n+    public void eventReceived(Action action, Event event) {\n+        switch (event.getType()) {\n+            case \"Normal\":\n+                listenerLog(event);\n+                break;\n+            case \"Warning\":\n+                listenerLog(event);\n+                break;\n+            default:\n+                listenerLog(event);\n+                break;\n+        }\n+    }\n+\n+    @Override\n+    public void onClose(KubernetesClientException cause) {\n+        String msg = String.format(\"%s onClose: %s\", getClass().getSimpleName(), name);\n+        if (cause != null) {\n+            LOGGER.log(WARNING, msg, cause);\n+            cause.printStackTrace(listener.getLogger());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwMzkxNA==", "bodyText": "Unused?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private WatchList setupWatches(KubernetesClient client, String namespace, String name, TaskListener taskListener) {\n          \n          \n            \n                    List<Watch> watches = new ArrayList<>();\n          \n          \n            \n                    watches.add(client.pods().inNamespace(namespace).withName(name).watch(watcher));\n          \n          \n            \n                    watches.add(client.events().inNamespace(namespace).withField(\"involvedObject.name\", name).watch(new TaskListenerEventWatcher(name, taskListener)));\n          \n          \n            \n                    return new WatchList(watches);\n          \n          \n            \n                }", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393203914", "createdAt": "2020-03-16T17:45:48Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +229,13 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private WatchList setupWatches(KubernetesClient client, String namespace, String name, TaskListener taskListener) {\n+        List<Watch> watches = new ArrayList<>();\n+        watches.add(client.pods().inNamespace(namespace).withName(name).watch(watcher));\n+        watches.add(client.events().inNamespace(namespace).withField(\"involvedObject.name\", name).watch(new TaskListenerEventWatcher(name, taskListener)));\n+        return new WatchList(watches);\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 114}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNDQ3OA==", "bodyText": "Unused if setupWatches is?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private static class WatchList implements Closeable {\n          \n          \n            \n                    private List<Watch> watches;\n          \n          \n            \n            \n          \n          \n            \n                    public WatchList(List<Watch> watches) {\n          \n          \n            \n                        this.watches = watches;\n          \n          \n            \n                    }\n          \n          \n            \n            \n          \n          \n            \n                    @Override\n          \n          \n            \n                    public void close() throws IOException {\n          \n          \n            \n                        RuntimeException r = null;\n          \n          \n            \n                        for (Watch watch: watches) {\n          \n          \n            \n                            try {\n          \n          \n            \n                                watch.close();\n          \n          \n            \n                            } catch(RuntimeException e) {\n          \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = new RuntimeException();\n          \n          \n            \n                                }\n          \n          \n            \n                                r.addSuppressed(e);\n          \n          \n            \n                            }\n          \n          \n            \n                        }\n          \n          \n            \n                        if (r != null) {\n          \n          \n            \n                            throw r;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                }", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393204478", "createdAt": "2020-03-16T17:46:48Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -259,6 +266,32 @@ private void logLastLines(List<ContainerStatus> containers, String podId, String\n         }\n     }\n \n+    private static class WatchList implements Closeable {\n+        private List<Watch> watches;\n+\n+        public WatchList(List<Watch> watches) {\n+            this.watches = watches;\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            RuntimeException r = null;\n+            for (Watch watch: watches) {\n+                try {\n+                    watch.close();\n+                } catch(RuntimeException e) {\n+                    if (r == null) {\n+                        r = new RuntimeException();\n+                    }\n+                    r.addSuppressed(e);\n+                }\n+            }\n+            if (r != null) {\n+                throw r;\n+            }\n+        }\n+    }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 147}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNDk2OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = new RuntimeException();\n          \n          \n            \n                                }\n          \n          \n            \n                                r.addSuppressed(e);\n          \n          \n            \n                                if (r == null) {\n          \n          \n            \n                                    r = e;\n          \n          \n            \n                                } else {\n          \n          \n            \n                                    r.addSuppressed(e);\n          \n          \n            \n                                }", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393204969", "createdAt": "2020-03-16T17:47:44Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -259,6 +266,32 @@ private void logLastLines(List<ContainerStatus> containers, String podId, String\n         }\n     }\n \n+    private static class WatchList implements Closeable {\n+        private List<Watch> watches;\n+\n+        public WatchList(List<Watch> watches) {\n+            this.watches = watches;\n+        }\n+\n+        @Override\n+        public void close() throws IOException {\n+            RuntimeException r = null;\n+            for (Watch watch: watches) {\n+                try {\n+                    watch.close();\n+                } catch(RuntimeException e) {\n+                    if (r == null) {\n+                        r = new RuntimeException();\n+                    }\n+                    r.addSuppressed(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 139}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwNjUxNw==", "bodyText": "What happens if this permission is not granted? Does the plugin gracefully ignore the failure? Otherwise we are creating a minor backward compatibility issue. For example, CloudBees Core does not currently seem to grant this.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393206517", "createdAt": "2020-03-16T17:50:25Z", "author": {"login": "jglick"}, "path": "test-in-k8s.yaml", "diffHunk": "@@ -76,6 +76,9 @@ rules:\n - apiGroups: [\"\"]\n   resources: [\"pods/log\"]\n   verbs: [\"get\",\"list\",\"watch\"]\n+- apiGroups: [\"\"]\n+  resources: [\"events\"]\n+  verbs: [\"watch\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1NDU0NTk0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-375454594", "createdAt": "2020-03-16T17:55:53Z", "commit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1NTo1M1rOF2_njg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xNlQxNzo1NTo1M1rOF2_njg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg==", "bodyText": "Is this special case still needed? I am not really sure what it was doing to begin with; looks suspicious.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393209742", "createdAt": "2020-03-16T17:55:53Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -112,28 +114,26 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n             Pod pod = template.build(slave);\n             slave.assignPod(pod);\n \n-            String podId = pod.getMetadata().getName();\n+            String podName = pod.getMetadata().getName();\n \n             String namespace = Arrays.asList( //\n                     pod.getMetadata().getNamespace(),\n                     template.getNamespace(), client.getNamespace()) //\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podId });\n+            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             pod = client.pods().inNamespace(namespace).create(pod);\n-            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podId });\n-            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podId);\n+            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n             TaskListener runListener = template.getListener();\n-            runListener.getLogger().printf(\"Created Pod: %s in namespace %s%n\", podId, namespace);\n-\n+            runListener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n-            String podName = pod.getMetadata().getName();\n-            String namespace1 = pod.getMetadata().getNamespace();\n             template.getWorkspaceVolume().createVolume(client, pod.getMetadata());\n             watcher = new AllContainersRunningPodWatcher(client, pod, runListener);\n-            try (Watch _w = client.pods().inNamespace(namespace1).withName(podName).watch(watcher)) {\n+            try (Watch w1 = client.pods().inNamespace(namespace).withName(podName).watch(watcher);\n+                 Watch w2 = client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener))) {\n                 watcher.await(template.getSlaveConnectTimeout(), TimeUnit.SECONDS);\n             } catch (InvalidDockerImageException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "committedDate": "2020-03-17T08:42:21Z", "message": "Fix reviews"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "226b97bfe35712ce240ab3e5016e318060b70616", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/226b97bfe35712ce240ab3e5016e318060b70616", "committedDate": "2020-03-17T08:41:34Z", "message": "Fix reviews"}, "afterCommit": {"oid": "a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/a60d030c4f5d5f5aed5a3c2aeada6fecb28d1f1c", "committedDate": "2020-03-17T08:42:21Z", "message": "Fix reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7e1ca05a104b6edd7d5d83df7f3d7162f4db0116", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7e1ca05a104b6edd7d5d83df7f3d7162f4db0116", "committedDate": "2020-03-17T09:00:54Z", "message": "Degrade gracefully if can't watch events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "390bfc0a7fb95ca444fcf9840618141aca462268", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/390bfc0a7fb95ca444fcf9840618141aca462268", "committedDate": "2020-03-17T09:01:15Z", "message": "Remove watch events - should mostly pass"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc1ODQ4MTk2", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-375848196", "createdAt": "2020-03-17T09:05:16Z", "commit": {"oid": "390bfc0a7fb95ca444fcf9840618141aca462268"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTowNToxNlrOF3TP8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QwOTowNToxNlrOF3TP8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzUzMTM3Nw==", "bodyText": "Will need to revert that. Only the 2 tests changed by this PR should fail in this case.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393531377", "createdAt": "2020-03-17T09:05:16Z", "author": {"login": "Vlatombe"}, "path": "test-in-k8s.yaml", "diffHunk": "@@ -76,6 +76,9 @@ rules:\n - apiGroups: [\"\"]\n   resources: [\"pods/log\"]\n   verbs: [\"get\",\"list\",\"watch\"]\n+#- apiGroups: [\"\"]\n+#  resources: [\"events\"]\n+#  verbs: [\"watch\"]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "390bfc0a7fb95ca444fcf9840618141aca462268"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f466c317d66fc2324a5616c8402da9904a5464bb", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/f466c317d66fc2324a5616c8402da9904a5464bb", "committedDate": "2020-03-17T09:05:55Z", "message": "Fix changed line"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41786483f1c7ada8ee20fb6cef9d4b78ace66f8e", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/41786483f1c7ada8ee20fb6cef9d4b78ace66f8e", "committedDate": "2020-03-17T10:13:47Z", "message": "Fix spotbugs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2349709bf074cdfb0098540a95cf03908510dad", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/e2349709bf074cdfb0098540a95cf03908510dad", "committedDate": "2020-03-17T12:45:04Z", "message": "Un-comment role to pass"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/d67bd92aa1ef950367a852fc3b782be4c87560cb", "committedDate": "2020-03-17T13:35:43Z", "message": "Move class and make package-private"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDc3NjQ3", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-376077647", "createdAt": "2020-03-17T14:18:36Z", "commit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDoxODozNlrOF3eU-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDoxODozNlrOF3eU-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ==", "bodyText": "Is is reasonable to ask that this log line be written more readily (less restricted than FINE) and include a note/link to instructions for the required level of access needed to watch pod events?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393712889", "createdAt": "2020-03-17T14:18:36Z", "author": {"login": "lelandsindttouchnet"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +230,15 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private Watch eventWatch(KubernetesClient client, String podName, String namespace, TaskListener runListener) {\n+        try {\n+            return client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener));\n+        } catch (KubernetesClientException e) {\n+            LOGGER.log(Level.FINE, e, () -> \"Cannot watch events on \" + namespace + \"/\" +podName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "originalPosition": 108}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MDk1NDc0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-376095474", "createdAt": "2020-03-17T14:37:10Z", "commit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDozNzoxMFrOF3fLeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo0MDoxNlrOF3fUBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyNjg0MA==", "bodyText": "Yes, this seems like it could be at INFO.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393726840", "createdAt": "2020-03-17T14:37:10Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +230,15 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private Watch eventWatch(KubernetesClient client, String podName, String namespace, TaskListener runListener) {\n+        try {\n+            return client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener));\n+        } catch (KubernetesClientException e) {\n+            LOGGER.log(Level.FINE, e, () -> \"Cannot watch events on \" + namespace + \"/\" +podName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ=="}, "originalCommit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "originalPosition": 108}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcyOTAyOA==", "bodyText": "But the build would fail anyway, without this clause; the exception would be thrown up out of launch. Right? And with this PR, you would see the appropriate diagnostics right in the log. But the current code here does more, by canceling some queue items (which seem to be any node blocks associated with this build, which is wrong by the way\u2014should only be canceling the node block associated with this pod). If that is needed in order to prevent the build from hanging, then it is needed in many other error cases too. So this does not add up for me.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393729028", "createdAt": "2020-03-17T14:40:16Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -112,28 +114,26 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n             Pod pod = template.build(slave);\n             slave.assignPod(pod);\n \n-            String podId = pod.getMetadata().getName();\n+            String podName = pod.getMetadata().getName();\n \n             String namespace = Arrays.asList( //\n                     pod.getMetadata().getNamespace(),\n                     template.getNamespace(), client.getNamespace()) //\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podId });\n+            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             pod = client.pods().inNamespace(namespace).create(pod);\n-            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podId });\n-            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podId);\n+            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n             TaskListener runListener = template.getListener();\n-            runListener.getLogger().printf(\"Created Pod: %s in namespace %s%n\", podId, namespace);\n-\n+            runListener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n-            String podName = pod.getMetadata().getName();\n-            String namespace1 = pod.getMetadata().getNamespace();\n             template.getWorkspaceVolume().createVolume(client, pod.getMetadata());\n             watcher = new AllContainersRunningPodWatcher(client, pod, runListener);\n-            try (Watch _w = client.pods().inNamespace(namespace1).withName(podName).watch(watcher)) {\n+            try (Watch w1 = client.pods().inNamespace(namespace).withName(podName).watch(watcher);\n+                 Watch w2 = client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener))) {\n                 watcher.await(template.getSlaveConnectTimeout(), TimeUnit.SECONDS);\n             } catch (InvalidDockerImageException e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzIwOTc0Mg=="}, "originalCommit": {"oid": "2007d04566666ef4452c2afeca11c54238209833"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTAxOTk2", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#pullrequestreview-376101996", "createdAt": "2020-03-17T14:44:05Z", "commit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo0NDowNVrOF3fewQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo0NTo0MFrOF3fi8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMTc3Nw==", "bodyText": "How could it be null? You just assigned it via a constructor. Does SpotBugs not reject this?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393731777", "createdAt": "2020-03-17T14:44:05Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -112,29 +113,29 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n             Pod pod = template.build(slave);\n             slave.assignPod(pod);\n \n-            String podId = pod.getMetadata().getName();\n+            String podName = pod.getMetadata().getName();\n \n             String namespace = Arrays.asList( //\n                     pod.getMetadata().getNamespace(),\n                     template.getNamespace(), client.getNamespace()) //\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podId });\n+            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             pod = client.pods().inNamespace(namespace).create(pod);\n-            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podId });\n-            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podId);\n+            LOGGER.log(INFO, \"Created Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            listener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n             TaskListener runListener = template.getListener();\n-            runListener.getLogger().printf(\"Created Pod: %s in namespace %s%n\", podId, namespace);\n-\n+            runListener.getLogger().printf(\"Created Pod: %s/%s%n\", namespace, podName);\n \n-            String podName = pod.getMetadata().getName();\n-            String namespace1 = pod.getMetadata().getNamespace();\n             template.getWorkspaceVolume().createVolume(client, pod.getMetadata());\n             watcher = new AllContainersRunningPodWatcher(client, pod, runListener);\n-            try (Watch _w = client.pods().inNamespace(namespace1).withName(podName).watch(watcher)) {\n-                watcher.await(template.getSlaveConnectTimeout(), TimeUnit.SECONDS);\n+            try (Watch w1 = client.pods().inNamespace(namespace).withName(podName).watch(watcher);\n+                 Watch w2 = eventWatch(client, podName, namespace, runListener)) {\n+                if (watcher != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczMjg1MA==", "bodyText": "Or printed to the runListener.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/742#discussion_r393732850", "createdAt": "2020-03-17T14:45:40Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -229,6 +230,15 @@ public void launch(SlaveComputer computer, TaskListener listener) {\n         }\n     }\n \n+    private Watch eventWatch(KubernetesClient client, String podName, String namespace, TaskListener runListener) {\n+        try {\n+            return client.events().inNamespace(namespace).withField(\"involvedObject.name\", podName).watch(new TaskListenerEventWatcher(podName, runListener));\n+        } catch (KubernetesClientException e) {\n+            LOGGER.log(Level.FINE, e, () -> \"Cannot watch events on \" + namespace + \"/\" +podName);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzcxMjg4OQ=="}, "originalCommit": {"oid": "d67bd92aa1ef950367a852fc3b782be4c87560cb"}, "originalPosition": 108}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7cf310bcfde56c4af681330b006982ba675b363a", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7cf310bcfde56c4af681330b006982ba675b363a", "committedDate": "2020-03-17T14:49:51Z", "message": "Log unability to watch events with INFO level"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fde676cec23fa93677b3a1c4ba26f53a000e3bb8", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/fde676cec23fa93677b3a1c4ba26f53a000e3bb8", "committedDate": "2020-03-17T14:53:12Z", "message": "Assert watcher is non-null"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 90, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}