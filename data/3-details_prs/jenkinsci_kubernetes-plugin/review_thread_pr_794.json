{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MjYxNzM0", "number": 794, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToyNDowMlrOECNBNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzoxOTo0NlrOECP-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzQ1OTA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNToyNDowMlrOGehDeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNTozMDowNlrOGehVsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MjAyNA==", "bodyText": "I do not think settings limits is wise. In the case of CPU, this will prevent anything running in the agent container from using more than 10% CPU, arbitrarily slowing down legitimate operations. In the case of memory, this will cause the agent to crash if the JVM happens to use more than 256Mi.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434652024", "createdAt": "2020-06-03T15:24:02Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java", "diffHunk": "@@ -253,7 +262,12 @@ public Pod build() {\n         envVars.putAll(jnlp.getEnv().stream().collect(Collectors.toMap(EnvVar::getName, Function.identity())));\n         jnlp.setEnv(new ArrayList<>(envVars.values()));\n         if (jnlp.getResources() == null) {\n-            jnlp.setResources(new ContainerBuilder().editOrNewResources().addToRequests(\"cpu\", new Quantity(\"100m\")).addToRequests(\"memory\", new Quantity(\"256Mi\")).endResources().build().getResources());\n+            jnlp.setResources(new ContainerBuilder().editOrNewResources()\n+                .addToRequests(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_REQUEST))\n+                .addToLimits(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_LIMIT))\n+                .addToRequests(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST))\n+                .addToLimits(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_LIMIT))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "19991c46fbb5ec2d0a11d632dd5434ba703dab59"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1NjY5MA==", "bodyText": "Fair enough. I'll remove the limits.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434656690", "createdAt": "2020-06-03T15:30:06Z", "author": {"login": "mbarbero"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilder.java", "diffHunk": "@@ -253,7 +262,12 @@ public Pod build() {\n         envVars.putAll(jnlp.getEnv().stream().collect(Collectors.toMap(EnvVar::getName, Function.identity())));\n         jnlp.setEnv(new ArrayList<>(envVars.values()));\n         if (jnlp.getResources() == null) {\n-            jnlp.setResources(new ContainerBuilder().editOrNewResources().addToRequests(\"cpu\", new Quantity(\"100m\")).addToRequests(\"memory\", new Quantity(\"256Mi\")).endResources().build().getResources());\n+            jnlp.setResources(new ContainerBuilder().editOrNewResources()\n+                .addToRequests(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_REQUEST))\n+                .addToLimits(\"cpu\", new Quantity(DEFAULT_JNLP_CONTAINER_CPU_LIMIT))\n+                .addToRequests(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST))\n+                .addToLimits(\"memory\", new Quantity(DEFAULT_JNLP_CONTAINER_MEMORY_LIMIT))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDY1MjAyNA=="}, "originalCommit": {"oid": "19991c46fbb5ec2d0a11d632dd5434ba703dab59"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwNzk0NDEyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzoxOTo0NlrOGel2kA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QxNzoxOTo0NlrOGel2kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDczMDY0MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n          \n          \n            \n                    assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));\n          \n          \n            \n                    PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n          \n          \n            \n                    PodTemplateUtilsTest.assertQuantity(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/794#discussion_r434730640", "createdAt": "2020-06-03T17:19:46Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateBuilderTest.java", "diffHunk": "@@ -344,8 +344,8 @@ public void defaultRequests() throws Exception {\n         assertNotNull(resources);\n         Map<String, Quantity> requests = resources.getRequests();\n         assertNotNull(requests);\n-        assertTrue(requests.containsKey(\"cpu\"));\n-        assertTrue(requests.containsKey(\"memory\"));\n+        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_CPU_REQUEST, requests.get(\"cpu\"));\n+        assertEquals(PodTemplateBuilder.DEFAULT_JNLP_CONTAINER_MEMORY_REQUEST, requests.get(\"memory\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35af4ff30b5072a5a0f883b42f99d0f60e71e665"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4946, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}