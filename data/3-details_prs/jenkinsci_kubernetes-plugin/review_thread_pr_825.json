{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MDU1OTM5", "number": 825, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyMzoxMFrOEdlbnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzozNDo1MFrOEehWng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDU3NDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyMzoxMFrOHI0lTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzozMToxMlrOHKNszQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ==", "bodyText": "OPA is just one reason for potential pod rejection. The code should be refactored to handle any failure to create pod.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479012175", "createdAt": "2020-08-28T09:23:10Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ0Nzg2OA==", "bodyText": "I'm not aware of the full list of reasons for pod rejection, not even sure if such an extensive list can be compiled. Therefore, would a simple retry be the solution for some of these pod rejection reasons? Therefore, we wouldn't want them all to be lumped into the same block which cancels the caller build item?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479447868", "createdAt": "2020-08-28T17:41:56Z", "author": {"login": "pyieh"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ1MDg0MQ==", "bodyText": "Does API server return a unique return code indicating admission controller rejections? In that case this code snippet can be refactored to look for that code and cancel the job as the job will never progress.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479450841", "createdAt": "2020-08-28T17:48:23Z", "author": {"login": "narayanan"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2Njc3OA==", "bodyText": "Based on couple of examples of bad pod yaml's I tried, I see kube-apiserver returning code in the range of 400 - 499 for bad requests.. can we look for this and mark the build as failed?\n{\n    \"kind\": \"Status\",\n    \"apiVersion\": \"v1\",\n    \"metadata\": {},\n    \"status\": \"Failure\",\n    \"message\": \"admission webhook \\\"mutating-webhook.openpolicyagent.org\\\" denied the request: pod rejected due to unauthorized usage of spec.volumes[_].hostPath for paths [\\\"/var/run/docker.sock\\\"]\",\n    \"reason\": \"pod rejected due to unauthorized usage of spec.volumes[_].hostPath for paths [\\\"/var/run/docker.sock\\\"]\",\n    \"code\": 400\n}\n{\n    \"kind\": \"Status\",\n    \"apiVersion\": \"v1\",\n    \"metadata\": {},\n    \"status\": \"Failure\",\n    \"message\": \"Pod \\\"foo\\\" is invalid: spec.containers[0].image: Required value\",\n    \"reason\": \"Invalid\",\n    \"details\": {\n        \"name\": \"foo\",\n        \"kind\": \"Pod\",\n        \"causes\": [\n            {\n                \"reason\": \"FieldValueRequired\",\n                \"message\": \"Required value\",\n                \"field\": \"spec.containers[0].image\"\n            }\n        ]\n    },\n    \"code\": 422\n}", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479466778", "createdAt": "2020-08-28T18:22:48Z", "author": {"login": "narayanan"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyODAwMg==", "bodyText": "@narayanan My implementation already accounts for OPA violations with the search for pod rejected due to and openpolicyagent Strings, anything else I think would be too specific to our use case.\nWhat @Vlatombe is talking about is expanding the search for non-OPA violation reason pod rejections. But I don't know if they would all require canceling the originating build, or if pod failure and shortly a retry by the kubernetes plugin to create the pod again would be suffice.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479528002", "createdAt": "2020-08-28T20:49:32Z", "author": {"login": "pyieh"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTUyOTgxMw==", "bodyText": "I think catching the 4xx errors should be enough. I'm thinking about any other implementation of validating webhook that could lead the api server to reject a pod spec", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479529813", "createdAt": "2020-08-28T20:54:13Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTk0Mzc2OQ==", "bodyText": "4xx should fail the build, while 5xx should be retried.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479943769", "createdAt": "2020-08-31T07:22:21Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MjI2OQ==", "bodyText": "Updated the catch block to check the exception code instead of the message. Please take a look.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r480472269", "createdAt": "2020-08-31T23:31:12Z", "author": {"login": "pyieh"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -124,12 +124,22 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n                     .stream().filter(s -> StringUtils.isNotBlank(s)).findFirst().orElse(null);\n             slave.setNamespace(namespace);\n \n+\n+            TaskListener runListener = template.getListener();\n+\n             LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n-            pod = client.pods().inNamespace(namespace).create(pod);\n+            try {\n+                pod = client.pods().inNamespace(namespace).create(pod);\n+            } catch (KubernetesClientException e) {\n+                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                    runListener.getLogger().printf(\"ERROR: Unable to create pod. \" + e.getMessage());\n+                    PodUtils.cancelInvalidPodTemplateJob(pod, \"OPA Violation\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxMjE3NQ=="}, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDU5MDUyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNDozM1rOHI0wVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNDozM1rOHI0wVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxNDk5Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void cancelInvalidPodTemplateJob(Pod pod, String reason) {\n          \n          \n            \n                public static void cancelQueueItemsFor(Pod pod, String reason) {", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479014996", "createdAt": "2020-08-28T09:24:33Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "diffHunk": "@@ -51,4 +56,21 @@\n     public static List<ContainerStatus> getContainers(Pod pod, Predicate<ContainerStatus> predicate) {\n         return getContainerStatus(pod).stream().filter(predicate).collect(Collectors.toList());\n     }\n+\n+    public static void cancelInvalidPodTemplateJob(Pod pod, String reason) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDU5NzA5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNToyM1rOHI00dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNToyM1rOHI00dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxNjA1Mg==", "bodyText": "Too verbose\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            LOGGER.info(cancelMsg);\n          \n          \n            \n                            LOGGER.fine(cancelMsg);", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479016052", "createdAt": "2020-08-28T09:25:23Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "diffHunk": "@@ -51,4 +56,21 @@\n     public static List<ContainerStatus> getContainers(Pod pod, Predicate<ContainerStatus> predicate) {\n         return getContainerStatus(pod).stream().filter(predicate).collect(Collectors.toList());\n     }\n+\n+    public static void cancelInvalidPodTemplateJob(Pod pod, String reason) {\n+        Queue q = Jenkins.get().getQueue();\n+        String runUrl = pod.getMetadata().getAnnotations().get(\"runUrl\");\n+        for (Queue.Item item: q.getItems()) {\n+            if (item.task.getUrl().equals(runUrl)) {\n+                String cancelMsg = \"Canceling queue item: \" + item;\n+                if (reason != null && !StringUtils.isBlank(reason)) {\n+                    cancelMsg += \" due to \" + reason;\n+                }\n+                LOGGER.info(cancelMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NDYwMTUxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNjowMVrOHI03Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQwOToyNjowMVrOHI03Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTAxNjgwMw==", "bodyText": "Too verbose\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    LOGGER.info(\"Failed to find corresponding queue item to cancel for pod: \" + pod);\n          \n          \n            \n                    LOGGER.fine(\"Failed to find corresponding queue item to cancel for pod: \" + pod);", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r479016803", "createdAt": "2020-08-28T09:26:01Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodUtils.java", "diffHunk": "@@ -51,4 +56,21 @@\n     public static List<ContainerStatus> getContainers(Pod pod, Predicate<ContainerStatus> predicate) {\n         return getContainerStatus(pod).stream().filter(predicate).collect(Collectors.toList());\n     }\n+\n+    public static void cancelInvalidPodTemplateJob(Pod pod, String reason) {\n+        Queue q = Jenkins.get().getQueue();\n+        String runUrl = pod.getMetadata().getAnnotations().get(\"runUrl\");\n+        for (Queue.Item item: q.getItems()) {\n+            if (item.task.getUrl().equals(runUrl)) {\n+                String cancelMsg = \"Canceling queue item: \" + item;\n+                if (reason != null && !StringUtils.isBlank(reason)) {\n+                    cancelMsg += \" due to \" + reason;\n+                }\n+                LOGGER.info(cancelMsg);\n+                q.cancel(item);\n+                break;\n+            }\n+        }\n+        LOGGER.info(\"Failed to find corresponding queue item to cancel for pod: \" + pod);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b12ae5aed00734b6fe0c426ffe01446ed65ecbb4"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAwNDM5MTk4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQyMzozNDo1MFrOHKNxLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMVQwMToxODowOVrOHKR6mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MzM4OQ==", "bodyText": "String conversion needed? comparing just against the integer like the following snippet does not work?\nint code = e.getCode();\nif (code >= 400 && code < 500) {\n   // cancel the job\nelse if (code >= 500 && code < 600) {\n   // retry\n} else {\n   // retry\n}", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r480473389", "createdAt": "2020-08-31T23:34:50Z", "author": {"login": "narayanan"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -127,13 +130,18 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n \n             TaskListener runListener = template.getListener();\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            LOGGER.log(FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             try {\n                 pod = client.pods().inNamespace(namespace).create(pod);\n             } catch (KubernetesClientException e) {\n-                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                String k8sCode = Integer.toString(e.getCode());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e7c0c374ac53244aabc1a9008aed250c5937ac0"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDU0MTMzOA==", "bodyText": "Updated.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/825#discussion_r480541338", "createdAt": "2020-09-01T01:18:09Z", "author": {"login": "pyieh"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -127,13 +130,18 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n \n             TaskListener runListener = template.getListener();\n \n-            LOGGER.log(Level.FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n+            LOGGER.log(FINE, \"Creating Pod: {0}/{1}\", new Object[] { namespace, podName });\n             try {\n                 pod = client.pods().inNamespace(namespace).create(pod);\n             } catch (KubernetesClientException e) {\n-                if (e.getMessage() != null && e.getMessage().contains(\"pod rejected due to\") && e.getMessage().contains(\"openpolicyagent\")) {\n+                String k8sCode = Integer.toString(e.getCode());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDQ3MzM4OQ=="}, "originalCommit": {"oid": "6e7c0c374ac53244aabc1a9008aed250c5937ac0"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4970, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}