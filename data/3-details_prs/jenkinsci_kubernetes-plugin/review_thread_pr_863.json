{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODQ0ODcz", "number": 863, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzowNzoxMlrOErtSwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxOTo0MDoyMFrOEsLQ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MjY2MzA2OnYy", "diffSide": "LEFT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNzowNzoxMlrOHeoLLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMzoxMzo1M1rOHezz8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ==", "bodyText": "Was this not setting the default value properly? AFAICT it hasn't defaulted to 0 since 5 years ago.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501877549", "createdAt": "2020-10-08T17:07:12Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MTgwNQ==", "bodyText": "Instance initializers are not run during deserialization, so the field would have been left at its Java primitive default of 0.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501981805", "createdAt": "2020-10-08T20:05:40Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}, "originalCommit": {"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA0MTk4MA==", "bodyText": "I understand that the deserialized value won't be (re)set to Integer.MAX_VALUE, but wasn't it serialized as Integer.MAX_VALUE in the first place? At least for the last several years. If it was serialized with a non-zero value then IIUC it should deserialize with the same value.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502041980", "createdAt": "2020-10-08T22:14:25Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}, "originalCommit": {"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA2ODIxMQ==", "bodyText": "Sure. I have no idea what issue is being addressed by this PR, just reviewing.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502068211", "createdAt": "2020-10-08T23:13:53Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTg3NzU0OQ=="}, "originalCommit": {"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MzM0MDQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMDowNzozM1rOHeumCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMDowNzozM1rOHeumCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MjczMQ==", "bodyText": "Prefer\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                private Integer containerCap = Integer.MAX_VALUE;\n          \n          \n            \n                private Integer containerCap;\n          \n      \n    \n    \n  \n\nrevert the patch to readResolve and change the getter to return\ncontainerCap != null ? containerCap ? Integer.MAX_VALUE\nto avoid gratuitously serializing an ugly value from an unconfigured field. (You will anyway once someone saves the cloud, unless you also null out the default from the getter.)", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r501982731", "createdAt": "2020-10-08T20:07:33Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -121,7 +121,7 @@\n     private String jenkinsTunnel;\n     @CheckForNull\n     private String credentialsId;\n-    private int containerCap = Integer.MAX_VALUE;\n+    private Integer containerCap = Integer.MAX_VALUE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "36a6cf8cad00d8f18377ff71c358f2257509e93f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA0ODU5OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0MDowMFrOHfH9mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0MTozM1rOHfIBaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODM2Mg==", "bodyText": "Is 0 a valid value?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502398362", "createdAt": "2020-10-09T12:40:00Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -381,33 +381,21 @@ public void setCredentialsId(String credentialsId) {\n     }\n \n     public int getContainerCap() {\n-        return containerCap;\n+        return containerCap != null ? containerCap : Integer.MAX_VALUE;\n     }\n \n     @DataBoundSetter\n     public void setContainerCapStr(String containerCapStr) {\n-        if (containerCapStr.equals(\"\")) {\n-            setContainerCap(Integer.MAX_VALUE);\n-        } else {\n-            setContainerCap(Integer.parseInt(containerCapStr));\n-        }\n+        setContainerCap(containerCapStr.equals(\"\") ? null : Integer.parseInt(containerCapStr));\n     }\n \n-    @DataBoundSetter\n-    public void setContainerCap(int containerCap) {\n-        if (containerCap < 0) {\n-            this.containerCap = Integer.MAX_VALUE;\n-        } else {\n-            this.containerCap = containerCap;\n-        }\n+    public void setContainerCap(Integer containerCap) {\n+        this.containerCap = (containerCap != null && containerCap >= 0) ? containerCap : null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5OTMzNg==", "bodyText": "Yes, means that the cloud is effectively disabled, cf. \n  \n    \n      kubernetes-plugin/src/main/resources/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud/help-containerCapStr.html\n    \n    \n         Line 3\n      in\n      298512d\n    \n    \n    \n    \n\n        \n          \n           If set to empty it means no limit. Set to 0 means no pod will ever be started.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502399336", "createdAt": "2020-10-09T12:41:33Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -381,33 +381,21 @@ public void setCredentialsId(String credentialsId) {\n     }\n \n     public int getContainerCap() {\n-        return containerCap;\n+        return containerCap != null ? containerCap : Integer.MAX_VALUE;\n     }\n \n     @DataBoundSetter\n     public void setContainerCapStr(String containerCapStr) {\n-        if (containerCapStr.equals(\"\")) {\n-            setContainerCap(Integer.MAX_VALUE);\n-        } else {\n-            setContainerCap(Integer.parseInt(containerCapStr));\n-        }\n+        setContainerCap(containerCapStr.equals(\"\") ? null : Integer.parseInt(containerCapStr));\n     }\n \n-    @DataBoundSetter\n-    public void setContainerCap(int containerCap) {\n-        if (containerCap < 0) {\n-            this.containerCap = Integer.MAX_VALUE;\n-        } else {\n-            this.containerCap = containerCap;\n-        }\n+    public void setContainerCap(Integer containerCap) {\n+        this.containerCap = (containerCap != null && containerCap >= 0) ? containerCap : null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODM2Mg=="}, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NjA1MTk4OnYy", "diffSide": "LEFT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0MDo0M1rOHfH_mg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxMjo0MDo0M1rOHfH_mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjM5ODg3NA==", "bodyText": "Could revert.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502398874", "createdAt": "2020-10-09T12:40:43Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,7 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 79}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzU3MzM4OnYy", "diffSide": "LEFT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxOTo0MDoyMFrOHfWgyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMTozNTozNlrOHfZQEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA==", "bodyText": "IIUC we need a readResolve which sets 0 (old \"unlimited\") to null (new \"unlimited\").\nOnce null, the getter will convert null to Integer.MAX_VALUE.\nCorrect?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502636744", "createdAt": "2020-10-09T19:40:20Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,10 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-        // if unset, should default to no limit\n-        if (containerCap == null) {\n-            containerCap = Integer.MAX_VALUE;\n-        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY1NDkxMQ==", "bodyText": "#865", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502654911", "createdAt": "2020-10-09T20:24:33Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,10 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-        // if unset, should default to no limit\n-        if (containerCap == null) {\n-            containerCap = Integer.MAX_VALUE;\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA=="}, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 82}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY4MTYxOQ==", "bodyText": "Disregard. #866 is the only way.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/863#discussion_r502681619", "createdAt": "2020-10-09T21:35:36Z", "author": {"login": "schottsfired"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -994,10 +983,6 @@ private Object readResolve() {\n         if (podLabels == null && labels != null) {\n             setPodLabels(PodLabel.fromMap(labels));\n         }\n-        // if unset, should default to no limit\n-        if (containerCap == null) {\n-            containerCap = Integer.MAX_VALUE;\n-        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjYzNjc0NA=="}, "originalCommit": {"oid": "bd5d865fc82bcabe6984b6af81a42b02ab8434a4"}, "originalPosition": 82}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4841, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}