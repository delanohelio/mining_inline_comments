{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTcwMDg2", "number": 703, "title": "[JENKINS-57828] Cleaning up the Snippet Generator output for PodTemplateStep", "bodyText": "JENKINS-57828\nFollowed the instructions https://jenkins.io/doc/developer/plugin-development/pipeline-integration/ in the Handling default values section, except had to use Util.fixEmpty(String s) instead of Util.fixNull()\nAdded defaults for podRetention and workspaceVolume in PodTemplateStep.\nChanged DynamicPVCWorkspaceVolume to be compliant with snippet generation, changed DataBoundConstructor to have no parameters, added DataBoundSetters for all properties.\nAdded tests classifier to workflow-cps test dependency to get the SnippitizerTest class.\nAdded unit test for PodTemplateStep.", "createdAt": "2020-02-07T19:43:00Z", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703", "merged": true, "mergeCommit": {"oid": "55233bc9b0a1ebea89d3cbc366388bab699fb38d"}, "closed": true, "closedAt": "2020-03-13T15:14:14Z", "author": {"login": "kerogers-cloudbees"}, "timelineItems": {"totalCount": 44, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcBxGLPAH2gAyMzcyNTcwMDg2OjZjNGYxYzU5MzQ5YzMwZGViZGExYTE3ZTEzZWZjYWFhYjFhMmZiMjg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcNNyxNgFqTM3NDE5NDc5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6c4f1c59349c30debda1a17e13efcaaab1a2fb28", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/6c4f1c59349c30debda1a17e13efcaaab1a2fb28", "committedDate": "2020-02-06T20:52:06Z", "message": "[CPLT2-6206][JENKINS-57828] Cleaning up the Snippet Generator output for PodTemplateStep.\nFollowed the instructions https://jenkins.io/doc/developer/plugin-development/pipeline-integration/ in the Handling default values section, except had to use `Util.fixEmpty(String s)` instead of `Util.fixNull()`\nChanged the default value of `instanceCap` to 0 from MAX_INT. Otherwise requires a lot of logic to make it not be generated if set to the default of 0 from the config.jelly.\nAdded defaults for podRetention and workspaceVolume in PodTemplateStep.\nChanged DynamicPVCWorkspaceVolume to be compliant with snippet generation, changed DataBoundConstructor to have no parameters, added DataBoundSetters for all properties.\nAdded tests classifier to workflow-cps test dependency to get the SnippitizerTest class.\nAdded unit test for PodTemplateStep."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79e706252346c40d97d66aba89440b821270db54", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/79e706252346c40d97d66aba89440b821270db54", "committedDate": "2020-02-07T19:06:51Z", "message": "[CPLT2-6206][JENKINS-57828] Accidentally left commented out code in a file."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/62e605681752ea7c4b377a281049ee909838a9de", "committedDate": "2020-02-07T19:07:35Z", "message": "Missed a brace that was in the comment."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDA2MjU4", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-355406258", "createdAt": "2020-02-07T20:05:35Z", "commit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNTozNVrOFnIzFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDoxNjoxOVrOFnJDng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MjkzMg==", "bodyText": "This replaces the test dep on workflow-cps.jar. I think you wanted to add a dependency with this classifier.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376582932", "createdAt": "2020-02-07T20:05:35Z", "author": {"login": "jglick"}, "path": "pom.xml", "diffHunk": "@@ -147,6 +147,7 @@\n     <dependency>\n       <groupId>org.jenkins-ci.plugins.workflow</groupId>\n       <artifactId>workflow-cps</artifactId>\n+      <classifier>tests</classifier>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzE1Mg==", "bodyText": "If you are not going to make a change, better to revert.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376583152", "createdAt": "2020-02-07T20:06:03Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull\n     public List<PodVolume> getVolumes() {\n         return volumes;\n     }\n \n     @DataBoundSetter\n-    public void setVolumes(List<PodVolume> volumes) {\n-        this.volumes = volumes;\n+    public void setVolumes(@CheckForNull List<PodVolume> volumes) {\n+        this.volumes = Util.fixNull(volumes);\n     }\n \n+    @CheckForNull\n     public WorkspaceVolume getWorkspaceVolume() {\n-        return workspaceVolume;\n+        return workspaceVolume == null ? DescriptorImpl.defaultWorkspaceVolume : this.workspaceVolume;\n     }\n \n     @DataBoundSetter\n-    public void setWorkspaceVolume(WorkspaceVolume workspaceVolume) {\n-        this.workspaceVolume = workspaceVolume;\n+    public void setWorkspaceVolume(@CheckForNull WorkspaceVolume workspaceVolume) {\n+        this.workspaceVolume = (workspaceVolume == null || workspaceVolume.equals(DescriptorImpl.defaultWorkspaceVolume)) ? null : workspaceVolume;\n     }\n \n     public int getInstanceCap() {\n-        return instanceCap;\n+        return instanceCap;// == null ? DescriptorImpl.defaultInstanceCap : instanceCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzY2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Issue({\"JENKINS-57828\", \"CPLT2-6206\"})\n          \n          \n            \n                @Issue(\"JENKINS-57828\")", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376583665", "createdAt": "2020-02-07T20:07:21Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue({\"JENKINS-57828\", \"CPLT2-6206\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA==", "bodyText": "Since you did not patch PodTemplateStep/config.jelly, these constants are useless.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376584700", "createdAt": "2020-02-07T20:09:48Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE2Ng==", "bodyText": "Also the defaults look wrong. PodRetention.getPodTemplateDefault() is used for podRetention, and it might be significant that the default is left as null. Same for workspaceVolume and WorkspaceVolume getDefault(). I suspect that the config.jelly defaults were broken here, but this is just making it worse by extending the problem to the runtime.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376587166", "createdAt": "2020-02-07T20:16:19Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/f83ee334377876adfd3a8cca9513eb6b8917f4d8", "committedDate": "2020-02-07T20:41:29Z", "message": "Update src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java\r\n\r\nChange @Issue argument.\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDMzMDIx", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-355433021", "createdAt": "2020-02-07T20:59:03Z", "commit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTowNFrOFnKHtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTozMlrOFnKIdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDU5Nw==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604597", "createdAt": "2020-02-07T20:59:04Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDYzMQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604631", "createdAt": "2020-02-07T20:59:08Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 157}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDcyNg==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604726", "createdAt": "2020-02-07T20:59:22Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +38,77 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDc5MQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604791", "createdAt": "2020-02-07T20:59:32Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 148}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU1NDM0MDA3", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-355434007", "createdAt": "2020-02-07T21:00:55Z", "commit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "state": "DISMISSED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMDo1NVrOFnKKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMToxMFrOFnKK8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTMyMQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605321", "createdAt": "2020-02-07T21:00:55Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +38,77 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n+    @CheckForNull\n     private List<ContainerTemplate> containers = new ArrayList<>();\n+\n+    @CheckForNull\n     private List<TemplateEnvVar> envVars = new ArrayList<>();\n+\n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTM3MQ==", "bodyText": "delete", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605371", "createdAt": "2020-02-07T21:01:02Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 185}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTQyNw==", "bodyText": "revert both", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605427", "createdAt": "2020-02-07T21:01:10Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull\n     public List<PodVolume> getVolumes() {\n         return volumes;\n     }\n \n     @DataBoundSetter\n-    public void setVolumes(List<PodVolume> volumes) {\n-        this.volumes = volumes;\n+    public void setVolumes(@CheckForNull List<PodVolume> volumes) {\n+        this.volumes = Util.fixNull(volumes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 194}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13820a70d2129bbf75402edfcb7840738fae650c", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/13820a70d2129bbf75402edfcb7840738fae650c", "committedDate": "2020-02-07T21:41:36Z", "message": "[CPLT2-6206][JENKINS-57828] Updates from code review\nRevert changes to list properties, they are all initialized and should never be null.\nChange defaults to be the same as the PodTemplate defaults.\nChange config.jelly to use these defaults also."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "67884c3dac1b2efe0574c06eefec0f8afc5be251", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/67884c3dac1b2efe0574c06eefec0f8afc5be251", "committedDate": "2020-02-07T21:42:11Z", "message": "Merge branch 'podTemplate-snippet-jenkins-57828-cplt2-6206' of github.com:kerogers-cloudbees/kubernetes-plugin into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "511a7c1ab226330171697d6f49550a9b61c74827", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/511a7c1ab226330171697d6f49550a9b61c74827", "committedDate": "2020-02-07T21:50:03Z", "message": "Fix unit test to use corrected defaults."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "984d409844810eeaca84fd3147e8df591244c784", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/984d409844810eeaca84fd3147e8df591244c784", "committedDate": "2020-02-07T22:43:35Z", "message": "add dependency with classifier for tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f57e22ccc4d2439ffc7b1edf54e63c30bdb3db6", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/4f57e22ccc4d2439ffc7b1edf54e63c30bdb3db6", "committedDate": "2020-02-12T13:08:30Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14886ef514a2b1f6ac36f9f7c0940c3ae56e0a27", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/14886ef514a2b1f6ac36f9f7c0940c3ae56e0a27", "committedDate": "2020-02-13T13:09:25Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "924d0a059e8a3f485b27cc07a31c89536a14d9c0", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/924d0a059e8a3f485b27cc07a31c89536a14d9c0", "committedDate": "2020-02-13T13:31:51Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1", "committedDate": "2020-02-17T08:53:44Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NzU3OTY1", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-359757965", "createdAt": "2020-02-17T14:06:03Z", "commit": {"oid": "0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDowNjowM1rOFqlm2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDowNjowM1rOFqlm2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwMDY2Ng==", "bodyText": "I think this is causing\no.c.j.p.k.KubernetesCloud#addProvisionedSlave: Maximum number of concurrently running agent pods (0) reached for template docker_1-b72k5-81dhh in Kubernetes Cloud kubernetes, not provisioning: 0 running or pending in namespace kubernetes-plugin-test with label \"docker_1-b72k5\" and Kubernetes labels {jenkins=slave, BUILD_NUMBER=undefined, jenkins/label=docker_1-b72k5, test=docker, BRANCH_NAME=undefined, class=ContainerExecDecoratorPipelineTest}", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r380200666", "createdAt": "2020-02-17T14:06:03Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +37,65 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n     private List<ContainerTemplate> containers = new ArrayList<>();\n     private List<TemplateEnvVar> envVars = new ArrayList<>();\n     private List<PodVolume> volumes = new ArrayList<PodVolume>();\n+\n+    @CheckForNull\n     private WorkspaceVolume workspaceVolume;\n+\n     private List<PodAnnotation> annotations = new ArrayList<>();\n     private List<String> imagePullSecrets = new ArrayList<>();\n \n-    private int instanceCap = Integer.MAX_VALUE;\n+    private int instanceCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1"}, "originalPosition": 38}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "934a27cc083a069cca4f4265ed0c424287f42959", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/934a27cc083a069cca4f4265ed0c424287f42959", "committedDate": "2020-02-17T18:59:43Z", "message": "[CPLT2-6206] Changing PodTemplateStep to have a default value for instanceCap of Integer.MAX_VALUE. Adding logic to the setter that sets instanceCap to Integer.MAX_VALUE if the Integer passed to it is null  or less than equal to 0."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a17439adbe211248e0b3c18625f3c605187f1eb1", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/a17439adbe211248e0b3c18625f3c605187f1eb1", "committedDate": "2020-02-18T15:47:15Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4b0100275b142b1a825fd0b799678a422ff32d73", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/4b0100275b142b1a825fd0b799678a422ff32d73", "committedDate": "2020-02-18T16:26:44Z", "message": "Fix merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNzMyNjQz", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-360732643", "createdAt": "2020-02-18T22:52:17Z", "commit": {"oid": "4b0100275b142b1a825fd0b799678a422ff32d73"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9082ddd8c52919e1069f745913c8d4840f42426c", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/9082ddd8c52919e1069f745913c8d4840f42426c", "committedDate": "2020-02-25T00:27:14Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/4504773f4337a64680d41c80aacaa9849d2e6758", "committedDate": "2020-02-28T13:41:51Z", "message": "[CPLT2-6206] special case for inheritFrom to allow KubernetesPipelineTest.runInPodNestedExplicitInherit to pass. Having inheritFrom be null instead of an empty string was breaking something in the podTemplate construction."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY2NDMxOTE3", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-366431917", "createdAt": "2020-02-28T14:23:37Z", "commit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNDoyMzozN1rOFv2mPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNDoyMzozN1rOFv2mPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcyMTkxNw==", "bodyText": "While this would have been a better syntax to mean \u201cdo not inherit\u201d, it it too late to do that now\u2014this change is not backward compatible. As mentioned, you need to restore the meaning of '', and introduce a different notation for \u201cuse default inheritance\u201d which would normally not be present in Groovy but would be used just as a form default for Pipeline Syntax.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r385721917", "createdAt": "2020-02-28T14:23:37Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/1662c1e692d0de8ad1b91f3201f2e7c6076991ef", "committedDate": "2020-03-03T20:27:07Z", "message": "[CPLT2-6206] Change the special string to \",default,\" as it doesn't require escaping in either xml or java and seems very unlikely to ever be the name of an actual template."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzE4MTQz", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-368318143", "createdAt": "2020-03-03T20:57:11Z", "commit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1NzoxMlrOFxWO6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1ODo0M1rOFxWSEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4ODgwOQ==", "bodyText": "Why this strange string? The commit comment says something about escaping in XML and Java but I do not see how that would be relevant. The value will only ever be used inside the snippet generator.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387288809", "createdAt": "2020-03-03T20:57:12Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -147,7 +147,7 @@ public String getInheritFrom() {\n \n     @DataBoundSetter\n     public void setInheritFrom(@CheckForNull String inheritFrom) {\n-        if (inheritFrom != null && inheritFrom.equals(\"-\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4OTYxNg==", "bodyText": "Best to share this constant with the Java code by referring to some (possibly static) field of the descriptor, e.g.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <f:textbox default=\",default,\"/>\n          \n          \n            \n                <f:textbox default=\"${descriptor.defaultInheritFrom}\"/>\n          \n      \n    \n    \n  \n\nGuide", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387289616", "createdAt": "2020-03-03T20:58:43Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -24,7 +24,7 @@\n \n   <f:entry field=\"inheritFrom\" title=\"${%Pod template to inherit from}\"\n     help=\"/plugin/kubernetes/help/inheritFrom.html\">\n-    <f:textbox/>\n+    <f:textbox default=\",default,\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzIwNTI0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-368320524", "createdAt": "2020-03-03T21:00:57Z", "commit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMDo1OFrOFxWWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMjowMVrOFxWYmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDc2Mw==", "bodyText": "Simpler:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n          \n          \n            \n                    if (\",default,\".equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387290763", "createdAt": "2020-03-03T21:00:58Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTA4NA==", "bodyText": "No, this looks all backwards. \"\" means do not inherit. Null means inherit in the default way.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.inheritFrom = \"\";\n          \n          \n            \n                        this.inheritFrom = null;", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387291084", "createdAt": "2020-03-03T21:01:36Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+            this.inheritFrom = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 130}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTI4OQ==", "bodyText": "As above, this looks backwards:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.inheritFrom = Util.fixEmpty(inheritFrom);\n          \n          \n            \n                        this.inheritFrom = inheritFrom;", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387291289", "createdAt": "2020-03-03T21:02:01Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+            this.inheritFrom = \"\";\n+        } else {\n+            this.inheritFrom = Util.fixEmpty(inheritFrom);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 132}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzIyMjk3", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-368322297", "createdAt": "2020-03-03T21:03:44Z", "commit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMzo0NVrOFxWb0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNToxOFrOFxWe2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MjExMw==", "bodyText": "So revert this\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpodTemplate(inheritFrom: '-',  containers: [\n          \n          \n            \n            \tpodTemplate(inheritFrom: '',  containers: [", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292113", "createdAt": "2020-03-03T21:03:45Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MjY3Nw==", "bodyText": "But it does, or am I missing something?\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());\n          \n          \n            \n                    assertNull(\"inheritFrom changed from default marker to null by setter\", \"\", step.getInheritFrom());", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292677", "createdAt": "2020-03-03T21:04:56Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");\n+        assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5Mjg5MA==", "bodyText": "Probably best to share constant with this test code as well.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292890", "createdAt": "2020-03-03T21:05:18Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY4MzI0MTAz", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-368324103", "createdAt": "2020-03-03T21:06:40Z", "commit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNjo0MFrOFxWhgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNjo0MFrOFxWhgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MzU3MA==", "bodyText": "And then you also need something like\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n          \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n          \n          \n            \n                    step.setInheritFrom(\"\");\n          \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate(inheritFrom: '') {\\n    // some block\\n}\");", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387293570", "createdAt": "2020-03-03T21:06:40Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");\n+        assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());\n+        step.setInheritFrom(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 68}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "febb56fd49f8027c68f68bcc9330b4545189e1db", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/febb56fd49f8027c68f68bcc9330b4545189e1db", "committedDate": "2020-03-04T17:33:19Z", "message": "[CPLT2-6206]  Explain behavior of inheritFrom in the help text."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6d2fd3010225a3ef36ccaae5ff82c73e4d78d3f3", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/6d2fd3010225a3ef36ccaae5ff82c73e4d78d3f3", "committedDate": "2020-03-06T17:19:20Z", "message": "[CPLT2-6206] Changed the string to <noInherit> to reduce the confusion. The behavior I intended for this string to trigger is actually the opposite of the default behavior, it is to create a pod template step that has inheritance set to an empty string so that `PodTemplateStepExecution` will not add the templates to the inheritance."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcwNTI4NzY3", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-370528767", "createdAt": "2020-03-06T18:18:32Z", "commit": {"oid": "6d2fd3010225a3ef36ccaae5ff82c73e4d78d3f3"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODoxODozMlrOFzCm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODoxODozMlrOFzCm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NDQyMA==", "bodyText": "No, this is still incompatible. Again, for compatibility, we must retain the meaning of no inheritance for '', and may only introduce a special value (not used at runtime) to mean do inherit in the default manner.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpodTemplate(inheritFrom: '<noInherit>',  containers: [\n          \n          \n            \n            \tpodTemplate(inheritFrom: '',  containers: [", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r389064420", "createdAt": "2020-03-06T18:18:32Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '-',  containers: [\n+\tpodTemplate(inheritFrom: '<noInherit>',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2fd3010225a3ef36ccaae5ff82c73e4d78d3f3"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7309343a0a41fed55a0e9926a977ca58b4b6289c", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/7309343a0a41fed55a0e9926a977ca58b4b6289c", "committedDate": "2020-03-09T13:53:04Z", "message": "[CPLT2-6206] restored empty string to be no inheritance and null to be default inheritance. Use the string \"<default>\" in the snippet generator to mean null in the generated script."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b", "author": {"user": {"login": "Vlatombe", "name": "Vincent Latombe"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/b36413b56896504cc7797adb913a43607fa2851b", "committedDate": "2020-03-09T15:27:32Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxODI1ODcw", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-371825870", "createdAt": "2020-03-10T10:17:44Z", "commit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxNzo0NVrOF0IxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxNzo0NVrOF0IxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDAwOQ==", "bodyText": "This needs to be reworded to indicate the following:\n\nnested podTemplate blocks inherits each other by default\n<default> means default inheritance is used\n'' means no inheritance\n\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Leaving this value empty will cause the podTemplate to inherit from a default build agent template.\n          \n          \n            \n            By default, pod template inherits outer pod template definitions. \n          \n          \n            \n            Inheritance can be stopped by using the empty string.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390214009", "createdAt": "2020-03-10T10:17:45Z", "author": {"login": "Vlatombe"}, "path": "src/main/webapp/help/inheritFrom.html", "diffHunk": "@@ -7,4 +7,6 @@\n \n Volume inheritance works exactly as Container templates.\n \n-Image Pull Secrets** are combined (all secrets defined both on 'parent' and 'current' template are used).\n\\ No newline at end of file\n+Image Pull Secrets** are combined (all secrets defined both on 'parent' and 'current' template are used).\n+\n+Leaving this value empty will cause the podTemplate to inherit from a default build agent template.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcyMzUwMjI2", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-372350226", "createdAt": "2020-03-10T21:57:13Z", "commit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTo1NzoxM1rOF0ieJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowNjoxMVrOF0irqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTA0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n          \n          \n            \n                    if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) {", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390635045", "createdAt": "2020-03-10T21:57:13Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 129}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTYzNQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String defaultInheritFrom = \"<default>\";\n          \n          \n            \n                    /** Only used for snippet generation. */\n          \n          \n            \n                    public static final String defaultInheritFrom = \"<default>\";", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390635635", "createdAt": "2020-03-10T21:58:43Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +409,10 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final Integer defaultInstanceCap = Integer.MAX_VALUE;\n+        public static final PodRetention defaultPodRetention = PodRetention.getPodTemplateDefault();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);\n+        public static final String defaultInheritFrom = \"<default>\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 293}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNzY1OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);\n          \n          \n            \n                    public static final WorkspaceVolume defaultWorkspaceVolume = WorkspaceVolume getDefault();", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390637659", "createdAt": "2020-03-10T22:03:59Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +409,10 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final Integer defaultInstanceCap = Integer.MAX_VALUE;\n+        public static final PodRetention defaultPodRetention = PodRetention.getPodTemplateDefault();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 292}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzODUwNw==", "bodyText": "Probably still incorrect as per #703 (comment).", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390638507", "createdAt": "2020-03-10T22:06:11Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -87,7 +87,7 @@\n             <f:optionalBlock title=\"${%Use custom workspace volume}\" checked=\"${instance.workspaceVolume != null}\" inline=\"true\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60442ae4aefc156f9fbab109869097560836c4c6", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/60442ae4aefc156f9fbab109869097560836c4c6", "committedDate": "2020-03-11T09:16:51Z", "message": "Merge branch 'master' into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cceb7ee605cd0ff773647b2eb4a372ef34fb1ae0", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/cceb7ee605cd0ff773647b2eb4a372ef34fb1ae0", "committedDate": "2020-03-11T09:17:04Z", "message": "Merge branch 'podTemplate-snippet-jenkins-57828-cplt2-6206' of github.com:kerogers-cloudbees/kubernetes-plugin into podTemplate-snippet-jenkins-57828-cplt2-6206"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4254f2c3f380228b031788678a01532b7a6c62ef", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/4254f2c3f380228b031788678a01532b7a6c62ef", "committedDate": "2020-03-11T19:22:04Z", "message": "Update src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e346b9f854bf11c6df7406291016651a135de450", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/e346b9f854bf11c6df7406291016651a135de450", "committedDate": "2020-03-11T19:22:15Z", "message": "Update src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4774681e337b4d6047eaa96114c3a960417697d1", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/4774681e337b4d6047eaa96114c3a960417697d1", "committedDate": "2020-03-11T19:30:24Z", "message": "Update src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java\r\n\r\nrecommended change from review\n\nCo-Authored-By: Jesse Glick <jglick@cloudbees.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "03debcc97515c409094eb21688e80bca6cf40dc0", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/03debcc97515c409094eb21688e80bca6cf40dc0", "committedDate": "2020-03-11T19:31:06Z", "message": "Update src/main/webapp/help/inheritFrom.html\r\n\r\nrecommended change from review\n\nCo-Authored-By: Vincent Latombe <vincent@latombe.net>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "529e89b07afb05375d1589d0383145738ea3948a", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/529e89b07afb05375d1589d0383145738ea3948a", "committedDate": "2020-03-12T13:44:51Z", "message": "[CPLT2-6206] Clean up imports, fix a missing dot."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "877a1459db8250bd301daee68659b984100866b1", "author": {"user": {"login": "kerogers-cloudbees", "name": "Kenneth Rogers"}}, "url": "https://github.com/jenkinsci/kubernetes-plugin/commit/877a1459db8250bd301daee68659b984100866b1", "committedDate": "2020-03-12T16:23:13Z", "message": "[CPLT2-6206] Remove the checkbox that was hiding the WorkspaceVolume form. Removed attributes `oneEach`, `hasHeader`, `addCaption`, and `deleteCaption` as they don't seem to work with a `dropdownDescriptorSelector`"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc0MTk0Nzkw", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#pullrequestreview-374194790", "createdAt": "2020-03-13T10:31:19Z", "commit": {"oid": "877a1459db8250bd301daee68659b984100866b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 191, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}