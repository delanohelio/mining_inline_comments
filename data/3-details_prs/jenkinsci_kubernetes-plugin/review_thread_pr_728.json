{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMjg3NTkz", "number": 728, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyNzoyOVrODk4cew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyNzoyOVrODk4cew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDAwMTIzOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateUtilsTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyNzoyOVrOFxdBeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMToyNzoyOVrOFxdBeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwMDA1Nw==", "bodyText": "Without this workaround for fabric8io/kubernetes-client#2034, testOverridesFromYaml improperly fails when the if (jnlp.getResources() == null) gate is disabled in main sources: the actual CPU is 100m but this compares as equal to 200m!", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/728#discussion_r387400057", "createdAt": "2020-03-04T01:27:29Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplateUtilsTest.java", "diffHunk": "@@ -553,10 +553,20 @@ public void shouldCombineAllResources() {\n \n         Container result = combine(container1, container2);\n \n-        assertEquals(new Quantity(\"2\"), result.getResources().getLimits().get(\"cpu\"));\n-        assertEquals(new Quantity(\"2Gi\"), result.getResources().getLimits().get(\"memory\"));\n-        assertEquals(new Quantity(\"200m\"), result.getResources().getRequests().get(\"cpu\"));\n-        assertEquals(new Quantity(\"256Mi\"), result.getResources().getRequests().get(\"memory\"));\n+        assertQuantity(\"2\", result.getResources().getLimits().get(\"cpu\"));\n+        assertQuantity(\"2Gi\", result.getResources().getLimits().get(\"memory\"));\n+        assertQuantity(\"200m\", result.getResources().getRequests().get(\"cpu\"));\n+        assertQuantity(\"256Mi\", result.getResources().getRequests().get(\"memory\"));\n+    }\n+\n+    /**\n+     * Use instead of {@link org.junit.Assert#assertEquals(Object, Object)} on {@link Quantity}.\n+     * @see <a href=\"https://github.com/fabric8io/kubernetes-client/issues/2034\">kubernetes-client #2034</a>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fd2f2eef7100e49e802adbdcdb8d1cc740b1995"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 23, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}