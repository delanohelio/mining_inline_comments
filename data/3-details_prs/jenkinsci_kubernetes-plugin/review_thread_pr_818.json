{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3ODQzNDg2", "number": 818, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo0NToyNFrOEY9Dgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo0NToyNFrOEY9Dgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NjAxNjAzOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QwODo0NToyNFrOHBfzTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxMjoyNDoxMlrOHBmiug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw==", "bodyText": "Would effectively revert JENKINS-60088\nExposed labels in Kubernetes have no effect on the Jenkins labels. I would recommend reverting this hunk.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/818#discussion_r471331663", "createdAt": "2020-08-17T08:45:24Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -395,7 +396,16 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_LABEL : sanitizeLabel(label));\n+        if(label == null) {\n+            return ImmutableMap.of(\"jenkins/\" + DEFAULT_LABEL, \"true\");\n+        }\n+\n+        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n+        getLabelSet().stream().map(Objects::toString).sorted().forEach((atom) -> {\n+            builder.put(\"jenkins/\" + sanitizeLabel(atom), \"true\");\n+        });\n+\n+        return builder.build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0702a45eb6a113f3927fa44cea3306acb1dbb94"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQzMjMyOA==", "bodyText": "It depends on the length of the labels. As sanitize reduces the size to the right most 63 characters, it is easier to create duplicate values. When the plugin queries for already running or pending pods during provisioning of new ones, this leads to pods not being created even if caps are not hit.\nE.g. we create our labels based on capabilities which are installed in the docker image the label specified in the pod template might be linux-amd64-some_name_of_some_cap1-some_name_of_some_cap2-some_name_of_some_cap3, when we now have linux-ppc64le-some_name_of_some_cap1-..., this will yield a label of \"ame_of_some_cap1-some_name_of_some_cap2-some_name_of_some_cap3\".", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/818#discussion_r471432328", "createdAt": "2020-08-17T12:03:58Z", "author": {"login": "scddev"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -395,7 +396,16 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_LABEL : sanitizeLabel(label));\n+        if(label == null) {\n+            return ImmutableMap.of(\"jenkins/\" + DEFAULT_LABEL, \"true\");\n+        }\n+\n+        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n+        getLabelSet().stream().map(Objects::toString).sorted().forEach((atom) -> {\n+            builder.put(\"jenkins/\" + sanitizeLabel(atom), \"true\");\n+        });\n+\n+        return builder.build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw=="}, "originalCommit": {"oid": "c0702a45eb6a113f3927fa44cea3306acb1dbb94"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0MDA1OA==", "bodyText": "As a possible prevention of key explosion for JENKINS-60088 maybe using \"jenkins/label-1=sanitizedLabel1, jenkins/label-2=sanitizedLabel2, ...\"", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/818#discussion_r471440058", "createdAt": "2020-08-17T12:20:05Z", "author": {"login": "scddev"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -395,7 +396,16 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_LABEL : sanitizeLabel(label));\n+        if(label == null) {\n+            return ImmutableMap.of(\"jenkins/\" + DEFAULT_LABEL, \"true\");\n+        }\n+\n+        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n+        getLabelSet().stream().map(Objects::toString).sorted().forEach((atom) -> {\n+            builder.put(\"jenkins/\" + sanitizeLabel(atom), \"true\");\n+        });\n+\n+        return builder.build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw=="}, "originalCommit": {"oid": "c0702a45eb6a113f3927fa44cea3306acb1dbb94"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0MDA4MA==", "bodyText": "I'd rather avoid \"dynamic\" labels due to the ticket above. To prevent collisions, we could instead add a label whose value would be a digest of the complete label?", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/818#discussion_r471440080", "createdAt": "2020-08-17T12:20:08Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -395,7 +396,16 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_LABEL : sanitizeLabel(label));\n+        if(label == null) {\n+            return ImmutableMap.of(\"jenkins/\" + DEFAULT_LABEL, \"true\");\n+        }\n+\n+        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n+        getLabelSet().stream().map(Objects::toString).sorted().forEach((atom) -> {\n+            builder.put(\"jenkins/\" + sanitizeLabel(atom), \"true\");\n+        });\n+\n+        return builder.build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw=="}, "originalCommit": {"oid": "c0702a45eb6a113f3927fa44cea3306acb1dbb94"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTQ0MjEwNg==", "bodyText": "Some digest sounds good to me. Will have a look.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/818#discussion_r471442106", "createdAt": "2020-08-17T12:24:12Z", "author": {"login": "scddev"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java", "diffHunk": "@@ -395,7 +396,16 @@ public String getActiveDeadlineSecondsStr() {\n     }\n \n     public Map<String, String> getLabelsMap() {\n-        return ImmutableMap.of(\"jenkins/label\", label == null ? DEFAULT_LABEL : sanitizeLabel(label));\n+        if(label == null) {\n+            return ImmutableMap.of(\"jenkins/\" + DEFAULT_LABEL, \"true\");\n+        }\n+\n+        ImmutableMap.Builder<String, String> builder = ImmutableMap.builder();\n+        getLabelSet().stream().map(Objects::toString).sorted().forEach((atom) -> {\n+            builder.put(\"jenkins/\" + sanitizeLabel(atom), \"true\");\n+        });\n+\n+        return builder.build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTMzMTY2Mw=="}, "originalCommit": {"oid": "c0702a45eb6a113f3927fa44cea3306acb1dbb94"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4958, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}