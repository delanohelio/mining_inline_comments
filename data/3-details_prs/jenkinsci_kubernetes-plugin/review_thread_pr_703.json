{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzcyNTcwMDg2", "number": 703, "reviewThreads": {"totalCount": 28, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNTozNVrODeItlQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowNjoxMVrODm31dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI2NjEzOnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNTozNVrOFnIzFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxOToxMjoxNVrOFqt0kQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MjkzMg==", "bodyText": "This replaces the test dep on workflow-cps.jar. I think you wanted to add a dependency with this classifier.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376582932", "createdAt": "2020-02-07T20:05:35Z", "author": {"login": "jglick"}, "path": "pom.xml", "diffHunk": "@@ -147,6 +147,7 @@\n     <dependency>\n       <groupId>org.jenkins-ci.plugins.workflow</groupId>\n       <artifactId>workflow-cps</artifactId>\n+      <classifier>tests</classifier>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDMzNTI0OQ==", "bodyText": "Added the classified dependency.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r380335249", "createdAt": "2020-02-17T19:12:15Z", "author": {"login": "kerogers-cloudbees"}, "path": "pom.xml", "diffHunk": "@@ -147,6 +147,7 @@\n     <dependency>\n       <groupId>org.jenkins-ci.plugins.workflow</groupId>\n       <artifactId>workflow-cps</artifactId>\n+      <classifier>tests</classifier>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MjkzMg=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI2NzcwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNjowM1rOFnIz8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMToxNTozNlrOFnKgew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzE1Mg==", "bodyText": "If you are not going to make a change, better to revert.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376583152", "createdAt": "2020-02-07T20:06:03Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull\n     public List<PodVolume> getVolumes() {\n         return volumes;\n     }\n \n     @DataBoundSetter\n-    public void setVolumes(List<PodVolume> volumes) {\n-        this.volumes = volumes;\n+    public void setVolumes(@CheckForNull List<PodVolume> volumes) {\n+        this.volumes = Util.fixNull(volumes);\n     }\n \n+    @CheckForNull\n     public WorkspaceVolume getWorkspaceVolume() {\n-        return workspaceVolume;\n+        return workspaceVolume == null ? DescriptorImpl.defaultWorkspaceVolume : this.workspaceVolume;\n     }\n \n     @DataBoundSetter\n-    public void setWorkspaceVolume(WorkspaceVolume workspaceVolume) {\n-        this.workspaceVolume = workspaceVolume;\n+    public void setWorkspaceVolume(@CheckForNull WorkspaceVolume workspaceVolume) {\n+        this.workspaceVolume = (workspaceVolume == null || workspaceVolume.equals(DescriptorImpl.defaultWorkspaceVolume)) ? null : workspaceVolume;\n     }\n \n     public int getInstanceCap() {\n-        return instanceCap;\n+        return instanceCap;// == null ? DescriptorImpl.defaultInstanceCap : instanceCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 212}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYxMDkzOQ==", "bodyText": "Did not mean to commit that commented code. I will remove it.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376610939", "createdAt": "2020-02-07T21:15:36Z", "author": {"login": "kerogers-cloudbees"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull\n     public List<PodVolume> getVolumes() {\n         return volumes;\n     }\n \n     @DataBoundSetter\n-    public void setVolumes(List<PodVolume> volumes) {\n-        this.volumes = volumes;\n+    public void setVolumes(@CheckForNull List<PodVolume> volumes) {\n+        this.volumes = Util.fixNull(volumes);\n     }\n \n+    @CheckForNull\n     public WorkspaceVolume getWorkspaceVolume() {\n-        return workspaceVolume;\n+        return workspaceVolume == null ? DescriptorImpl.defaultWorkspaceVolume : this.workspaceVolume;\n     }\n \n     @DataBoundSetter\n-    public void setWorkspaceVolume(WorkspaceVolume workspaceVolume) {\n-        this.workspaceVolume = workspaceVolume;\n+    public void setWorkspaceVolume(@CheckForNull WorkspaceVolume workspaceVolume) {\n+        this.workspaceVolume = (workspaceVolume == null || workspaceVolume.equals(DescriptorImpl.defaultWorkspaceVolume)) ? null : workspaceVolume;\n     }\n \n     public int getInstanceCap() {\n-        return instanceCap;\n+        return instanceCap;// == null ? DescriptorImpl.defaultInstanceCap : instanceCap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzE1Mg=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 212}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI3MDgyOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNzoyMVrOFnI18Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowNzoyMVrOFnI18Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4MzY2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Issue({\"JENKINS-57828\", \"CPLT2-6206\"})\n          \n          \n            \n                @Issue(\"JENKINS-57828\")", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376583665", "createdAt": "2020-02-07T20:07:21Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,56 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue({\"JENKINS-57828\", \"CPLT2-6206\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTI3NzUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDowOTo0OFrOFnI5_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo0MDozNVrOFnJqJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA==", "bodyText": "Since you did not patch PodTemplateStep/config.jelly, these constants are useless.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376584700", "createdAt": "2020-02-07T20:09:48Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NzE2Ng==", "bodyText": "Also the defaults look wrong. PodRetention.getPodTemplateDefault() is used for podRetention, and it might be significant that the default is left as null. Same for workspaceVolume and WorkspaceVolume getDefault(). I suspect that the config.jelly defaults were broken here, but this is just making it worse by extending the problem to the runtime.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376587166", "createdAt": "2020-02-07T20:16:19Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5MjQ3MA==", "bodyText": "Confirmed, the default selections in /pipeline-syntax/ are incorrect: they do not match the actual default behavior. The generator suggests\n\u2026, podRetention: always(), \u2026, workspaceVolume: dynamicPVC(\u2026), \u2026\nwhereas the actual defaults (according to code inspection) are\n\u2026, podRetention: default(), \u2026, workspaceVolume: emptyDirWorkspaceVolume(false), \u2026\n(Note that you cannot actually use the symbol default as in \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/pod/retention/Default.java\n    \n    \n         Line 65\n      in\n      a54923a\n    \n    \n    \n    \n\n        \n          \n           @Symbol(\"default\") \n        \n    \n  \n\n as this is a keyword. Something else should have been chosen.)\nSo how does this happen?\n\nThe dropdown under Pod Retention defaults to Always just because that is first in the list and no default is specified. That is simply wrong.\nThe Workspace Volume configuration from #114 is not done in regular fashion. There should be no Use custom workspace volume checkbox.\n\nIt looks like #363 & #622 cleaned these things up in global pod template configuration but not in step configuration. Understandably: no one bothered to check the snippet generator, because it was so broken anyway.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376592470", "createdAt": "2020-02-07T20:29:40Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5NDUzMw==", "bodyText": "AFAICT \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n    \n    \n        Lines 899 to 900\n      in\n      a54923a\n    \n    \n    \n    \n\n        \n          \n           public WorkspaceVolume getDefaultWorkspaceVolume() { \n        \n\n        \n          \n               return WorkspaceVolume.getDefault(); \n        \n    \n  \n\n is doing the right thing for global config. \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/PodTemplate.java\n    \n    \n        Lines 905 to 906\n      in\n      a54923a\n    \n    \n    \n    \n\n        \n          \n           public Descriptor getDefaultPodRetention() { \n        \n\n        \n          \n               return Jenkins.get().getDescriptor(PodRetention.getPodTemplateDefault().getClass()); \n        \n    \n  \n\n works in that Default has no fields, but is poor style; better would be\npublic PodRetention getDefaultPodRetention() {\n    return PodRetention.getPodTemplateDefault();\n}\nsince dropdownDescriptorSelector.jelly documentation says that instances are supported for default:\n\nThe default can be a specific instance or a descriptor e.g. ${descriptor.defaultSettingsProvider} or ${descriptor.defaultSettingsProvider.descriptor}. In the later case, the from input fields will be empty.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376594533", "createdAt": "2020-02-07T20:35:03Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU5NzAyOQ==", "bodyText": "So, as to a fix:\n\nI think you should revert any changes to the behavior of getters (nullability annotations are fine). The configuration here is complicated due to the layering of per-step settings over (or under?) global settings, so nulls are significant in some cases. See null checks like: \n  \n    \n      kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepExecution.java\n    \n    \n         Line 109\n      in\n      a54923a\n    \n    \n    \n    \n\n        \n          \n           if (step.getWorkspaceVolume() != null) { \n        \n    \n  \n\n\nThe setter changes may be OK, though I am not sure. @Vlatombe would know if explicitly setting something to what ought to be its default value is actually required in order to override global settings.\nThe new defaultXXX fields need to use the actual defaults mentioned above.\nThe config.jelly needs to read those defaults, like PodTemplate/config.jelly already does.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376597029", "createdAt": "2020-02-07T20:40:35Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +417,8 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final PodRetention defaultPodRetention = new Always();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteOnce\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjU4NDcwMA=="}, "originalCommit": {"oid": "62e605681752ea7c4b377a281049ee909838a9de"}, "originalPosition": 328}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwNTE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTowNFrOFnKHtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTowNFrOFnKHtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDU5Nw==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604597", "createdAt": "2020-02-07T20:59:04Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 156}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwNTM0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTowOFrOFnKH1w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTowOFrOFnKH1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDYzMQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604631", "createdAt": "2020-02-07T20:59:08Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 157}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwNTkyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OToyMlrOFnKINg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OToyMlrOFnKINg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDcyNg==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604726", "createdAt": "2020-02-07T20:59:22Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +38,77 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwNjMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTozMlrOFnKIdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMDo1OTozMlrOFnKIdw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNDc5MQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376604791", "createdAt": "2020-02-07T20:59:32Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 148}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwOTM4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMDo1NVrOFnKKiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMDo1NVrOFnKKiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTMyMQ==", "bodyText": "revert", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605321", "createdAt": "2020-02-07T21:00:55Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +38,77 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n+    @CheckForNull\n     private List<ContainerTemplate> containers = new ArrayList<>();\n+\n+    @CheckForNull\n     private List<TemplateEnvVar> envVars = new ArrayList<>();\n+\n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQwOTcxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMTowMlrOFnKKuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMTowMlrOFnKKuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTM3MQ==", "bodyText": "delete", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605371", "createdAt": "2020-02-07T21:01:02Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 185}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMyOTQxMDExOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMToxMFrOFnKK8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wN1QyMTowMToxMFrOFnKK8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NjYwNTQyNw==", "bodyText": "revert both", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r376605427", "createdAt": "2020-02-07T21:01:10Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,96 +119,105 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        this.inheritFrom = Util.fixEmpty(inheritFrom);\n     }\n \n+    @CheckForNull\n     public List<ContainerTemplate> getContainers() {\n         return containers;\n     }\n \n     @DataBoundSetter\n-    public void setContainers(List<ContainerTemplate> containers) {\n-        this.containers = containers;\n+    public void setContainers(@CheckForNull List<ContainerTemplate> containers) {\n+        this.containers = Util.fixNull(containers);\n     }\n \n+    @CheckForNull\n     public List<TemplateEnvVar> getEnvVars() {\n         return envVars == null ? Collections.emptyList() : envVars;\n     }\n \n     @DataBoundSetter\n-    public void setEnvVars(List<TemplateEnvVar> envVars) {\n+    public void setEnvVars(@CheckForNull List<TemplateEnvVar> envVars) {\n         if (envVars != null) {\n             this.envVars.clear();\n             this.envVars.addAll(envVars);\n         }\n     }\n \n+    @CheckForNull\n     public YamlMergeStrategy getYamlMergeStrategy() {\n         return yamlMergeStrategy;\n     }\n \n     @DataBoundSetter\n-    public void setYamlMergeStrategy(YamlMergeStrategy yamlMergeStrategy) {\n+    public void setYamlMergeStrategy(@CheckForNull YamlMergeStrategy yamlMergeStrategy) {\n         this.yamlMergeStrategy = yamlMergeStrategy;\n     }\n \n+    @CheckForNull\n     public List<PodVolume> getVolumes() {\n         return volumes;\n     }\n \n     @DataBoundSetter\n-    public void setVolumes(List<PodVolume> volumes) {\n-        this.volumes = volumes;\n+    public void setVolumes(@CheckForNull List<PodVolume> volumes) {\n+        this.volumes = Util.fixNull(volumes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f83ee334377876adfd3a8cca9513eb6b8917f4d8"}, "originalPosition": 194}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM1MzAyMjk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDowNjowM1rOFqlm2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QxNDowODozNVrOFqlrxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwMDY2Ng==", "bodyText": "I think this is causing\no.c.j.p.k.KubernetesCloud#addProvisionedSlave: Maximum number of concurrently running agent pods (0) reached for template docker_1-b72k5-81dhh in Kubernetes Cloud kubernetes, not provisioning: 0 running or pending in namespace kubernetes-plugin-test with label \"docker_1-b72k5\" and Kubernetes labels {jenkins=slave, BUILD_NUMBER=undefined, jenkins/label=docker_1-b72k5, test=docker, BRANCH_NAME=undefined, class=ContainerExecDecoratorPipelineTest}", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r380200666", "createdAt": "2020-02-17T14:06:03Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +37,65 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n     private List<ContainerTemplate> containers = new ArrayList<>();\n     private List<TemplateEnvVar> envVars = new ArrayList<>();\n     private List<PodVolume> volumes = new ArrayList<PodVolume>();\n+\n+    @CheckForNull\n     private WorkspaceVolume workspaceVolume;\n+\n     private List<PodAnnotation> annotations = new ArrayList<>();\n     private List<String> imagePullSecrets = new ArrayList<>();\n \n-    private int instanceCap = Integer.MAX_VALUE;\n+    private int instanceCap;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwMTkyNw==", "bodyText": "kubernetes-plugin/src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java\n    \n    \n        Lines 586 to 592\n      in\n      f7e84d5\n    \n    \n    \n    \n\n        \n          \n           if (activeTemplateSlavePods != null && allActiveSlavePods != null && template.getInstanceCap() <= activeTemplateSlavePods.size() + scheduledCount) { \n        \n\n        \n          \n               LOGGER.log(Level.INFO, \n        \n\n        \n          \n                       \"Maximum number of concurrently running agent pods ({0}) reached for template {1} in Kubernetes Cloud {6}, not provisioning: {2} running or pending in namespace {3} with label \\\"{4}\\\" and Kubernetes labels {5}\", \n        \n\n        \n          \n                       new Object[] { template.getInstanceCap(), template.getName(), activeTemplateSlavePods.size() + scheduledCount, \n        \n\n        \n          \n                               templateNamespace, label == null ? \"\" : label.toString(), labelsMap, name }); \n        \n\n        \n          \n               return false; \n        \n\n        \n          \n           } \n        \n    \n  \n\n should have a quick exit when instanceCap == 0", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r380201927", "createdAt": "2020-02-17T14:08:35Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -36,40 +37,65 @@\n \n     private static final String DEFAULT_CLOUD = \"kubernetes\";\n \n+    @CheckForNull\n     private String cloud = DEFAULT_CLOUD;\n+\n+    @CheckForNull\n     private String inheritFrom;\n \n+    @CheckForNull\n     private String label;\n+\n+    @CheckForNull\n     private String name;\n \n+    @CheckForNull\n     private String namespace;\n+\n     private List<ContainerTemplate> containers = new ArrayList<>();\n     private List<TemplateEnvVar> envVars = new ArrayList<>();\n     private List<PodVolume> volumes = new ArrayList<PodVolume>();\n+\n+    @CheckForNull\n     private WorkspaceVolume workspaceVolume;\n+\n     private List<PodAnnotation> annotations = new ArrayList<>();\n     private List<String> imagePullSecrets = new ArrayList<>();\n \n-    private int instanceCap = Integer.MAX_VALUE;\n+    private int instanceCap;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDIwMDY2Ng=="}, "originalCommit": {"oid": "0e8ea09f11a9cda2e7f3da08027113fe5d3c0ba1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM4ODk2NjYxOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxNDoyMzozN1rOFv2mPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQyMDo0Nzo1MVrOFwCX7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcyMTkxNw==", "bodyText": "While this would have been a better syntax to mean \u201cdo not inherit\u201d, it it too late to do that now\u2014this change is not backward compatible. As mentioned, you need to restore the meaning of '', and introduce a different notation for \u201cuse default inheritance\u201d which would normally not be present in Groovy but would be used just as a form default for Pipeline Syntax.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r385721917", "createdAt": "2020-02-28T14:23:37Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTc5NjMzMQ==", "bodyText": "Based on where the inheritFrom is used, null is the way to tell it to \"use default inheritance\", the change I made for the snippet generator caused the empty string to be converted to null, causing the test to fail.\nI could change the default for inheritFrom to be an empty string but I think that would break runInPodNested test.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r385796331", "createdAt": "2020-02-28T16:34:06Z", "author": {"login": "kerogers-cloudbees"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcyMTkxNw=="}, "originalCommit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTkxNDg2MA==", "bodyText": "null is the way to tell it to \"use default inheritance\", the change I made for the snippet generator caused the empty string to be converted to null, causing the test to fail.\n\nCorrect AFAIK.\n\nI could change the default for inheritFrom to be an empty string\n\nNo, that is not safe, as it would disable inheritance by default\u2014even worse than the current state.\nThe most straightforward solution is to introduce some constant string which is neither blank nor a possible template name and which could reasonably convey the notion of \u201cdo the default thing\u201d\u2014say, <default>\u2014which would be the default value for the textbox in the form, with setInheritFrom translating it to a null field value. This text would never be expected in a real Pipeline script; the snippet generator would simply omit the inheritFrom attribute if you did not edit the field, which is what we want. If it does not already, the inline help-inheritFrom.html needs to explain the situation, specifically that you may blank out the field to suppress inheritance.\n(SnippetizerTester is not particularly useful for testing this situation since it makes no reference to the config.jelly. StepConfigTester, from workflow-step-api, actually exercises the config form, though in an artificial way which would also get confused by this trick: configRoundTrip would call getInheritFrom, see null, and translate that to a blank textfield (the implied value=\"${instance.inheritFrom}\" makes no distinct between null and \"\"), which upon form submission would call the setter on \"\" and produce a distinct object. In other words configRoundTrip always operates with instance != null, whereas the actual Pipeline Syntax screen always operates with a null instance (only a non-null descriptor) since you are not reconfiguring something that is already serialized. Having getInheritFrom convert null back to the new magic string would solve that issue, but is not very intuitive, and would require another helper method like getActualInheritFrom to be called from Java code, as opposed to the config form. tl;dr: probably best to test behavior of this field interactively.)", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r385914860", "createdAt": "2020-02-28T20:47:51Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTcyMTkxNw=="}, "originalCommit": {"oid": "4504773f4337a64680d41c80aacaa9849d2e6758"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI3ODYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1NzoxMlrOFxWO6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1NzoxMlrOFxWO6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4ODgwOQ==", "bodyText": "Why this strange string? The commit comment says something about escaping in XML and Java but I do not see how that would be relevant. The value will only ever be used inside the snippet generator.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387288809", "createdAt": "2020-03-03T20:57:12Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -147,7 +147,7 @@ public String getInheritFrom() {\n \n     @DataBoundSetter\n     public void setInheritFrom(@CheckForNull String inheritFrom) {\n-        if (inheritFrom != null && inheritFrom.equals(\"-\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI4Mzk4OnYy", "diffSide": "RIGHT", "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMDo1ODo0M1rOFxWSEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMjo1OVrOFxWaPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4OTYxNg==", "bodyText": "Best to share this constant with the Java code by referring to some (possibly static) field of the descriptor, e.g.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                <f:textbox default=\",default,\"/>\n          \n          \n            \n                <f:textbox default=\"${descriptor.defaultInheritFrom}\"/>\n          \n      \n    \n    \n  \n\nGuide", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387289616", "createdAt": "2020-03-03T20:58:43Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -24,7 +24,7 @@\n \n   <f:entry field=\"inheritFrom\" title=\"${%Pod template to inherit from}\"\n     help=\"/plugin/kubernetes/help/inheritFrom.html\">\n-    <f:textbox/>\n+    <f:textbox default=\",default,\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTcwOQ==", "bodyText": "(plus use of the same constant in setInheritFrom of course)", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387291709", "createdAt": "2020-03-03T21:02:59Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -24,7 +24,7 @@\n \n   <f:entry field=\"inheritFrom\" title=\"${%Pod template to inherit from}\"\n     help=\"/plugin/kubernetes/help/inheritFrom.html\">\n-    <f:textbox/>\n+    <f:textbox default=\",default,\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI4OTYxNg=="}, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI5MTEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMDo1OFrOFxWWiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMDo1OFrOFxWWiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MDc2Mw==", "bodyText": "Simpler:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n          \n          \n            \n                    if (\",default,\".equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387290763", "createdAt": "2020-03-03T21:00:58Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI5MzEyOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMTozNlrOFxWXzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMTozNlrOFxWXzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTA4NA==", "bodyText": "No, this looks all backwards. \"\" means do not inherit. Null means inherit in the default way.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.inheritFrom = \"\";\n          \n          \n            \n                        this.inheritFrom = null;", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387291084", "createdAt": "2020-03-03T21:01:36Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+            this.inheritFrom = \"\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 130}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI5NDM1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMjowMVrOFxWYmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMjowMVrOFxWYmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MTI4OQ==", "bodyText": "As above, this looks backwards:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.inheritFrom = Util.fixEmpty(inheritFrom);\n          \n          \n            \n                        this.inheritFrom = inheritFrom;", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387291289", "createdAt": "2020-03-03T21:02:01Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (inheritFrom != null && inheritFrom.equals(\",default,\")) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n+            this.inheritFrom = \"\";\n+        } else {\n+            this.inheritFrom = Util.fixEmpty(inheritFrom);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 132}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTI5OTQzOnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMzo0NVrOFxWb0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowMzo0NVrOFxWb0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MjExMw==", "bodyText": "So revert this\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpodTemplate(inheritFrom: '-',  containers: [\n          \n          \n            \n            \tpodTemplate(inheritFrom: '',  containers: [", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292113", "createdAt": "2020-03-03T21:03:45Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '',  containers: [\n+\tpodTemplate(inheritFrom: '-',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTMwMzA1OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNDo1NlrOFxWeBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNDo1NlrOFxWeBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MjY3Nw==", "bodyText": "But it does, or am I missing something?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());\n          \n          \n            \n                    assertNull(\"inheritFrom changed from default marker to null by setter\", \"\", step.getInheritFrom());", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292677", "createdAt": "2020-03-03T21:04:56Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");\n+        assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTMwNDMwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNToxOFrOFxWe2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNToxOFrOFxWe2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5Mjg5MA==", "bodyText": "Probably best to share constant with this test code as well.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387292890", "createdAt": "2020-03-03T21:05:18Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5OTMwODU5OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QyMTowNjo0MFrOFxWhgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNDowOToxOFrOFzqBBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MzU3MA==", "bodyText": "And then you also need something like\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n          \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n          \n          \n            \n                    step.setInheritFrom(\"\");\n          \n          \n            \n                    st.assertRoundTrip(step, \"podTemplate(inheritFrom: '') {\\n    // some block\\n}\");", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r387293570", "createdAt": "2020-03-03T21:06:40Z", "author": {"login": "jglick"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");\n+        assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());\n+        step.setInheritFrom(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTcxMDA4NA==", "bodyText": "Covered through 7309343#diff-502362a2cf01135e38702358449886d5R65-R66", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r389710084", "createdAt": "2020-03-09T14:09:18Z", "author": {"login": "Vlatombe"}, "path": "src/test/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStepTest.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package org.csanchez.jenkins.plugins.kubernetes.pipeline;\n+\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.Always;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.OnFailure;\n+import org.csanchez.jenkins.plugins.kubernetes.pod.retention.PodRetention;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.DynamicPVCWorkspaceVolume;\n+import org.csanchez.jenkins.plugins.kubernetes.volumes.workspace.EmptyDirWorkspaceVolume;\n+import org.jenkinsci.plugins.workflow.cps.SnippetizerTester;\n+import org.junit.Rule;\n+import org.junit.Test;\n+import org.jvnet.hudson.test.Issue;\n+import org.jvnet.hudson.test.JenkinsRule;\n+\n+import static org.junit.Assert.*;\n+\n+public class PodTemplateStepTest {\n+    @Rule\n+    public JenkinsRule rule = new JenkinsRule();\n+\n+    @Issue(\"JENKINS-57828\")\n+    @Test\n+    public void configRoundTrip() throws Exception {\n+        SnippetizerTester st = new SnippetizerTester(rule);\n+        PodTemplateStep step = new PodTemplateStep();\n+\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setName(\"podTest\");\n+        st.assertRoundTrip(step, \"podTemplate(name: 'podTest') {\\n    // some block\\n}\");\n+        step.setName(\"\");\n+        step.setInstanceCap(5);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 5) {\\n    // some block\\n}\");\n+        step.setInstanceCap(0);\n+        step.setInstanceCap(6);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 6) {\\n    // some block\\n}\");\n+        step.setInstanceCap(null); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInstanceCap(7);\n+        st.assertRoundTrip(step, \"podTemplate(instanceCap: 7) {\\n    // some block\\n}\");\n+        step.setInstanceCap(Integer.MAX_VALUE); // make sure this resets instanceCap\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setLabel(\"podLabel\");\n+        st.assertRoundTrip(step, \"podTemplate(label: 'podLabel') {\\n    // some block\\n}\");\n+        step.setLabel(\"\");\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(PodRetention.getPodTemplateDefault()); // this is the default, it should not appear in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setPodRetention(new OnFailure());\n+        st.assertRoundTrip(step, \"podTemplate(podRetention: onFailure()) {\\n    // some block\\n}\");\n+        step.setPodRetention(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume());\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC()) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new EmptyDirWorkspaceVolume(false)); // this is the default, it should not be in the snippet.\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(new DynamicPVCWorkspaceVolume(null, null, \"ReadWriteMany\"));\n+        st.assertRoundTrip(step, \"podTemplate(workspaceVolume: dynamicPVC(accessModes: 'ReadWriteMany')) {\\n    // some block\\n}\");\n+        step.setWorkspaceVolume(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(60);\n+        st.assertRoundTrip(step, \"podTemplate(activeDeadlineSeconds: 60) {\\n    // some block\\n}\");\n+        step.setActiveDeadlineSeconds(0);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");\n+        step.setInheritFrom(\"fooBar\");\n+        st.assertRoundTrip(step, \"podTemplate(inheritFrom: 'fooBar') {\\n    // some block\\n}\");\n+        step.setInheritFrom(\",default,\");\n+        assertEquals(\"inheritFrom not changed from \\\",default,\\\" to \\\"\\\" by setter\", \"\", step.getInheritFrom());\n+        step.setInheritFrom(null);\n+        st.assertRoundTrip(step, \"podTemplate {\\n    // some block\\n}\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzI5MzU3MA=="}, "originalCommit": {"oid": "1662c1e692d0de8ad1b91f3201f2e7c6076991ef"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxMDYxNjA1OnYy", "diffSide": "RIGHT", "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODoxODozMlrOFzCm5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNlQxODoxODozMlrOFzCm5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTA2NDQyMA==", "bodyText": "No, this is still incompatible. Again, for compatibility, we must retain the meaning of no inheritance for '', and may only introduce a special value (not used at runtime) to mean do inherit in the default manner.\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \tpodTemplate(inheritFrom: '<noInherit>',  containers: [\n          \n          \n            \n            \tpodTemplate(inheritFrom: '',  containers: [", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r389064420", "createdAt": "2020-03-06T18:18:32Z", "author": {"login": "jglick"}, "path": "src/test/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/runInPodNestedExplicitInherit.groovy", "diffHunk": "@@ -2,7 +2,7 @@ podTemplate(label: '$NAME-parent', containers: [\n \t\tcontainerTemplate(name: 'golang', image: 'golang:1.6.3-alpine', ttyEnabled: true, command: '/bin/cat'),\n \t]) {\n \n-\tpodTemplate(inheritFrom: '-',  containers: [\n+\tpodTemplate(inheritFrom: '<noInherit>',  containers: [", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6d2fd3010225a3ef36ccaae5ff82c73e4d78d3f3"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQxODIxNDA0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/help/inheritFrom.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxNzo0NVrOF0IxeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQxMDoxNzo0NVrOF0IxeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDIxNDAwOQ==", "bodyText": "This needs to be reworded to indicate the following:\n\nnested podTemplate blocks inherits each other by default\n<default> means default inheritance is used\n'' means no inheritance\n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Leaving this value empty will cause the podTemplate to inherit from a default build agent template.\n          \n          \n            \n            By default, pod template inherits outer pod template definitions. \n          \n          \n            \n            Inheritance can be stopped by using the empty string.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390214009", "createdAt": "2020-03-10T10:17:45Z", "author": {"login": "Vlatombe"}, "path": "src/main/webapp/help/inheritFrom.html", "diffHunk": "@@ -7,4 +7,6 @@\n \n Volume inheritance works exactly as Container templates.\n \n-Image Pull Secrets** are combined (all secrets defined both on 'parent' and 'current' template are used).\n\\ No newline at end of file\n+Image Pull Secrets** are combined (all secrets defined both on 'parent' and 'current' template are used).\n+\n+Leaving this value empty will cause the podTemplate to inherit from a default build agent template.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDg1MDk3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTo1NzoxM1rOF0ieJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTo1NzoxM1rOF0ieJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTA0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass\n          \n          \n            \n                    if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) {", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390635045", "createdAt": "2020-03-10T21:57:13Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -80,44 +106,52 @@ public String getLabel() {\n     }\n \n     @DataBoundSetter\n-    public void setLabel(String label) {\n+    public void setLabel(@CheckForNull String label) {\n         this.label = Util.fixEmpty(label);\n     }\n \n-    public @CheckForNull String getName() {\n+    @CheckForNull\n+    public String getName() {\n         return name;\n     }\n \n     @DataBoundSetter\n-    public void setName(String name) {\n+    public void setName(@CheckForNull String name) {\n         this.name = Util.fixEmpty(name);\n     }\n \n+    @CheckForNull\n     public String getNamespace() {\n         return namespace;\n     }\n \n     @DataBoundSetter\n-    public void setNamespace(String namespace) {\n-        this.namespace = namespace;\n+    public void setNamespace(@CheckForNull String namespace) {\n+        this.namespace = Util.fixEmpty(namespace);\n     }\n \n+    @CheckForNull\n     public String getCloud() {\n         return cloud;\n     }\n \n     @DataBoundSetter\n-    public void setCloud(String cloud) {\n-        this.cloud = cloud;\n+    public void setCloud(@CheckForNull String cloud) {\n+        this.cloud = Util.fixEmpty(cloud);\n     }\n \n+    @CheckForNull\n     public String getInheritFrom() {\n         return inheritFrom;\n     }\n \n     @DataBoundSetter\n-    public void setInheritFrom(String inheritFrom) {\n-        this.inheritFrom = inheritFrom;\n+    public void setInheritFrom(@CheckForNull String inheritFrom) {\n+        if (DescriptorImpl.defaultInheritFrom.equals(inheritFrom)) { // Added to make KubernetesPipelineTest.runInPodNestedExplicitInherit() pass", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDg1NDY4OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTo1ODo0M1rOF0igcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMTo1ODo0M1rOF0igcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNTYzNQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final String defaultInheritFrom = \"<default>\";\n          \n          \n            \n                    /** Only used for snippet generation. */\n          \n          \n            \n                    public static final String defaultInheritFrom = \"<default>\";", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390635635", "createdAt": "2020-03-10T21:58:43Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +409,10 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final Integer defaultInstanceCap = Integer.MAX_VALUE;\n+        public static final PodRetention defaultPodRetention = PodRetention.getPodTemplateDefault();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);\n+        public static final String defaultInheritFrom = \"<default>\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 293}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDg2NzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowMzo1OVrOF0ioWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowMzo1OVrOF0ioWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzNzY1OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);\n          \n          \n            \n                    public static final WorkspaceVolume defaultWorkspaceVolume = WorkspaceVolume getDefault();", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390637659", "createdAt": "2020-03-10T22:03:59Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep.java", "diffHunk": "@@ -363,5 +409,10 @@ public boolean takesImplicitBlockArgument() {\n         public String getWorkingDir() {\n             return ContainerTemplate.DEFAULT_WORKING_DIR;\n         }\n+\n+        public static final Integer defaultInstanceCap = Integer.MAX_VALUE;\n+        public static final PodRetention defaultPodRetention = PodRetention.getPodTemplateDefault();\n+        public static final WorkspaceVolume defaultWorkspaceVolume = new EmptyDirWorkspaceVolume(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 292}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQyMDg3Mjg0OnYy", "diffSide": "RIGHT", "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMFQyMjowNjoxMVrOF0irqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMlQxNDowNTo1NVrOF1gCiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzODUwNw==", "bodyText": "Probably still incorrect as per #703 (comment).", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r390638507", "createdAt": "2020-03-10T22:06:11Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -87,7 +87,7 @@\n             <f:optionalBlock title=\"${%Use custom workspace volume}\" checked=\"${instance.workspaceVolume != null}\" inline=\"true\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTI1MDM3OQ==", "bodyText": "With the Descriptor default changed, that should make the config.jelly correct now.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r391250379", "createdAt": "2020-03-11T20:30:12Z", "author": {"login": "kerogers-cloudbees"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -87,7 +87,7 @@\n             <f:optionalBlock title=\"${%Use custom workspace volume}\" checked=\"${instance.workspaceVolume != null}\" inline=\"true\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzODUwNw=="}, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTYyODk2NQ==", "bodyText": "Now that getWorkspaceVolume() no longer returns null, I'm not sure if this check is even necessary.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r391628965", "createdAt": "2020-03-12T13:43:49Z", "author": {"login": "kerogers-cloudbees"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -87,7 +87,7 @@\n             <f:optionalBlock title=\"${%Use custom workspace volume}\" checked=\"${instance.workspaceVolume != null}\" inline=\"true\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzODUwNw=="}, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTY0Mzc4NA==", "bodyText": "I think what ought to happen is that the form should be simplified to not use f:optionalBlock. The f:dropdownDescriptorSelector on its own, with a default, should suffice.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/703#discussion_r391643784", "createdAt": "2020-03-12T14:05:55Z", "author": {"login": "jglick"}, "path": "src/main/resources/org/csanchez/jenkins/plugins/kubernetes/pipeline/PodTemplateStep/config.jelly", "diffHunk": "@@ -87,7 +87,7 @@\n             <f:optionalBlock title=\"${%Use custom workspace volume}\" checked=\"${instance.workspaceVolume != null}\" inline=\"true\">", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MDYzODUwNw=="}, "originalCommit": {"oid": "b36413b56896504cc7797adb913a43607fa2851b"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 0, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}