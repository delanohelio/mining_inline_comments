{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3ODUwMzMw", "number": 835, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDoxMDoxOFrOExjx9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjowOTo1OVrOE04IcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNDAxOTA4OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDoxMDoxOFrOHnxdoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNFQxNDoxMDoxOFrOHnxdoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTQ2NjkxMg==", "bodyText": "New BOM is ready; also see #875.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/835#discussion_r511466912", "createdAt": "2020-10-24T14:10:18Z", "author": {"login": "jglick"}, "path": "pom.xml", "diffHunk": "@@ -252,7 +252,7 @@\n     <dependencies>\n       <dependency>\n         <groupId>io.jenkins.tools.bom</groupId>\n-        <artifactId>bom-2.222.x</artifactId>\n+        <artifactId>bom-2.222.x</artifactId> <!-- TODO https://github.com/jenkinsci/bom/pull/339 -->\n         <version>12</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a32ced8462799b22a75a71f51b21b7c11d54b772"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODgxMDczOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjowOTo1OVrOHs1-7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjowOTo1OVrOHs1-7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc4Mzg1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                LOGGER.log(Level.FINE, \"Global slots left for \\\"{0}\\\": {1}\", new Object[]{name, remainingGlobalSlots});\n          \n          \n            \n                                LOGGER.fine(() -> \"Global slots left for \" + name + \": \" + remainingGlobalSlots);\n          \n      \n    \n    \n  \n\nif you like", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/835#discussion_r516783854", "createdAt": "2020-11-03T16:09:59Z", "author": {"login": "jglick"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -527,31 +527,49 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n     }\n \n     @Override\n-    public synchronized Collection<NodeProvisioner.PlannedNode> provision(@CheckForNull final Label label, final int excessWorkload) {\n+    public synchronized Collection<NodeProvisioner.PlannedNode> provision(@NonNull final Cloud.CloudState state, final int excessWorkload) {\n         try {\n-            Set<String> allInProvisioning = InProvisioning.getAllInProvisioning(label);\n+            Label label = state.getLabel();\n+            int plannedCapacity = state.getAdditionalPlannedCapacity(); // Planned nodes, will be launched on the next round of NodeProvisioner\n+            Set<String> allInProvisioning = InProvisioning.getAllInProvisioning(label); // Nodes being launched\n             LOGGER.log(Level.FINE, () -> \"In provisioning : \" + allInProvisioning);\n             int toBeProvisioned = Math.max(0, excessWorkload - allInProvisioning.size());\n-            LOGGER.log(Level.INFO, \"Excess workload after pending Kubernetes agents: {0}\", toBeProvisioned);\n-\n-            List<NodeProvisioner.PlannedNode> r = new ArrayList<NodeProvisioner.PlannedNode>();\n-\n-            for (PodTemplate t: getTemplatesFor(label)) {\n-                LOGGER.log(Level.INFO, \"Template for label {0}: {1}\", new Object[] { label, t.getName() });\n-                for (int i = 0; i < toBeProvisioned; i++) {\n-                    if (!mayAddProvisionedSlave(t, label, i)) {\n-                        break;\n+            Set<Node> nodes = getNodes(label);\n+            int currentExecutorsCount = (int) nodes.stream().filter(KubernetesSlave.class::isInstance).map(Node::getNumExecutors).count();\n+            int launchingExecutorsCount = (int) nodes.stream().filter(KubernetesSlave.class::isInstance).filter(n -> n.toComputer() != null && ((KubernetesComputer)n.toComputer()).isLaunching()).map(Node::getNumExecutors).count();\n+            LOGGER.log(Level.INFO, \"Label \\\"{0}\\\" excess workload: {1},\" +\n+                    \" executors: {2},\" +\n+                    \" plannedCapacity: {3},\" +\n+                            \" launching: {4}\",\n+                    new Object[] {label, toBeProvisioned, currentExecutorsCount, plannedCapacity, launchingExecutorsCount});\n+            List<NodeProvisioner.PlannedNode> plannedNodes = new ArrayList<>();\n+            List<Pod> pods = getPodsWithLabels(namespace, getPodLabelsMap());\n+            if (pods != null) {\n+                // Count planned and executors not yet launching (e.g. everything that is not in kubernetes yet)\n+                int plannedCount = plannedCapacity + currentExecutorsCount - launchingExecutorsCount;\n+                int remainingGlobalSlots = getRemainingGlobalSlots(pods, plannedCount);\n+                if (remainingGlobalSlots > 0) {\n+                    LOGGER.log(Level.FINE, \"Global slots left for \\\"{0}\\\": {1}\", new Object[]{name, remainingGlobalSlots});", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "944284a1b5d80168bafcef2ba90c2061811bbb43"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4977, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}