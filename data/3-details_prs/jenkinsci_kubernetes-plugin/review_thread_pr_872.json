{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0NDc4NjI5", "number": 872, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxNzo1OFrOEzWP3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxMzo0NFrOE2sX6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjc3MzQxOnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxNzo1OFrOHqg68Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxNzo1OFrOHqg68Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MTYxNw==", "bodyText": "Should be using requestMetricNameFor method on every call.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r514341617", "createdAt": "2020-10-29T15:17:58Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -547,12 +550,14 @@ public KubernetesClient connect() throws KubernetesAuthException, IOException {\n                 LOGGER.log(Level.FINEST, \"Planned Kubernetes agents for template \\\"{0}\\\": {1}\",\n                         new Object[] { t.getName(), r.size() });\n                 if (r.size() > 0) {\n+                    Metrics.metricRegistry().counter(\"k8s.cloud.provision.nodes\").inc(r.size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "924b03177075ad4b332d05a0fb8a57366526d01d"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjc3NDE2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToxODoxMFrOHqg7eQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMzozMzoxMlrOHvbX5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MTc1Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return String.format(\"k8s.cloud.%s.provision.request\", labelText);\n          \n          \n            \n                    return String.format(\"kubernetes.cloud.%s.provision.request\", labelText);", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r514341753", "createdAt": "2020-10-29T15:18:10Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -1009,4 +1016,9 @@ public static void hpiRunInit() {\n             }\n         }\n     }\n+\n+    private static String requestMetricNameFor(Label label) {\n+        String labelText = (label == null) ? \"nolabel\" : label.getDisplayName();\n+        return String.format(\"k8s.cloud.%s.provision.request\", labelText);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "924b03177075ad4b332d05a0fb8a57366526d01d"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ5MzYwNQ==", "bodyText": "done", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r519493605", "createdAt": "2020-11-08T23:33:12Z", "author": {"login": "angry-cellophane"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -1009,4 +1016,9 @@ public static void hpiRunInit() {\n             }\n         }\n     }\n+\n+    private static String requestMetricNameFor(Label label) {\n+        String labelText = (label == null) ? \"nolabel\" : label.getDisplayName();\n+        return String.format(\"k8s.cloud.%s.provision.request\", labelText);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MTc1Mw=="}, "originalCommit": {"oid": "924b03177075ad4b332d05a0fb8a57366526d01d"}, "originalPosition": 55}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIyMjc4MzY1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxNToyMDowOVrOHqhBsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOFQyMzozNTo1NFrOHvbZOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MzM0Nw==", "bodyText": "Should be abstracting the key creation to a method such as requestMetricNameFor. No label here, but needs to be abstracted anyway.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r514343347", "createdAt": "2020-10-29T15:20:09Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -132,6 +133,7 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n             try {\n                 pod = client.pods().inNamespace(namespace).create(pod);\n             } catch (KubernetesClientException e) {\n+                Metrics.metricRegistry().counter(\"k8s.cloud.pods.creation.failed\").inc();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "924b03177075ad4b332d05a0fb8a57366526d01d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTQ5Mzk0NQ==", "bodyText": "Thanks for looking into this PR and your suggestions.\nMany metric names are static, so I moved then to a separate class and made most of them constants. There are a few that depend on some params, I put them in methods as you suggested.\nLet me know if it looks better now and if you have any concern.", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r519493945", "createdAt": "2020-11-08T23:35:54Z", "author": {"login": "angry-cellophane"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesLauncher.java", "diffHunk": "@@ -132,6 +133,7 @@ public synchronized void launch(SlaveComputer computer, TaskListener listener) {\n             try {\n                 pod = client.pods().inNamespace(namespace).create(pod);\n             } catch (KubernetesClientException e) {\n+                Metrics.metricRegistry().counter(\"k8s.cloud.pods.creation.failed\").inc();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDM0MzM0Nw=="}, "originalCommit": {"oid": "924b03177075ad4b332d05a0fb8a57366526d01d"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1Nzg1NTc5OnYy", "diffSide": "LEFT", "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxMzo0NFrOHvnlUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMDoxMzo0NFrOHvnlUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTY5MzY0OQ==", "bodyText": "Revert this hunk", "url": "https://github.com/jenkinsci/kubernetes-plugin/pull/872#discussion_r519693649", "createdAt": "2020-11-09T10:13:44Z", "author": {"login": "Vlatombe"}, "path": "src/main/java/org/csanchez/jenkins/plugins/kubernetes/KubernetesCloud.java", "diffHunk": "@@ -679,7 +691,6 @@ public PodTemplate getUnwrappedTemplate(PodTemplate podTemplate) {\n     }\n \n     /**\n-     * Add a new template to the cloud", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6467d2acee5f2690757cad98c10e7063ec160fd4"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4857, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}