{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE2NzY5MzIz", "number": 7062, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMTowMlrOD7_x-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MjowNFrOD8YVZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM3NTYyOnYy", "diffSide": "RIGHT", "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/EntityManagerFactoryProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMTowMlrOGUqdrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0MTo0N1rOGUvo1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMDQzMA==", "bodyText": "Introducing yet another \"connection provider\" is not the correct approach here. Looking at this PR a lot of changes/refactoring are done to the WF distribution, while if this wasn't introduced and the \"copy\" of DefaultJpaConnectionProviderFactory kept the WF distribution would have been more or less untouched by these changes and it would have been a lot easier and safer to review/merge this PR", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424320430", "createdAt": "2020-05-13T10:01:02Z", "author": {"login": "stianst"}, "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/EntityManagerFactoryProvider.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package org.keycloak.connections.jpa;\n+\n+import javax.persistence.EntityManagerFactory;\n+\n+public interface EntityManagerFactoryProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNTIwNg==", "bodyText": "The changes do improve WF dist too. Test runs seem to be OK.\nReplicating them is not ideal, but I understand your point about first trying this change in Quarkus, isolated. I'll close this PR and have both JPA and Liquibase providers duplicated.\nIt is kind of easy to check the impact of these changes in WF dist if you want too, just run the server using these changes.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424405206", "createdAt": "2020-05-13T12:41:47Z", "author": {"login": "pedroigor"}, "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/EntityManagerFactoryProvider.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package org.keycloak.connections.jpa;\n+\n+import javax.persistence.EntityManagerFactory;\n+\n+public interface EntityManagerFactoryProvider {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMDQzMA=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM3Njg1OnYy", "diffSide": "RIGHT", "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/updater/JpaUpdaterProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMToyNVrOGUqemQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0NDo0OFrOGUvwMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMDY2NQ==", "bodyText": "Why the need to introduce verifyAndRunMasterChangelog? What does it do?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424320665", "createdAt": "2020-05-13T10:01:25Z", "author": {"login": "stianst"}, "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/updater/JpaUpdaterProvider.java", "diffHunk": "@@ -49,23 +49,26 @@\n      * Updates the Keycloak database\n      * @param connection DB connection\n      * @param defaultSchema DB connection\n+     * @param verifyAndRunMasterChangelog if master changelog should be verified and run \n      */\n-    void update(Connection connection, String defaultSchema);\n+    void update(Connection connection, String defaultSchema, boolean verifyAndRunMasterChangelog);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwNzA5MA==", "bodyText": "We tell the updater whether or not we should validate/execute the master changelog.\nRunning validation and checking the \"unrun\" changesets during startup is one of the main parts that affect startup, as well as footprint. This is especially true if the database is already initialized.\nNote that this does not affect custom providers, as their changelogs are still validated/executed regardless. This is only for the master changelog.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424407090", "createdAt": "2020-05-13T12:44:48Z", "author": {"login": "pedroigor"}, "path": "model/jpa/src/main/java/org/keycloak/connections/jpa/updater/JpaUpdaterProvider.java", "diffHunk": "@@ -49,23 +49,26 @@\n      * Updates the Keycloak database\n      * @param connection DB connection\n      * @param defaultSchema DB connection\n+     * @param verifyAndRunMasterChangelog if master changelog should be verified and run \n      */\n-    void update(Connection connection, String defaultSchema);\n+    void update(Connection connection, String defaultSchema, boolean verifyAndRunMasterChangelog);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMDY2NQ=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM4MjI2OnYy", "diffSide": "RIGHT", "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMzowMVrOGUqiGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0ODowMlrOGUv4Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMTU2Mw==", "bodyText": "?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424321563", "createdAt": "2020-05-13T10:03:01Z", "author": {"login": "stianst"}, "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -85,8 +85,11 @@\n         \n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n \n+        <!-- These properties are overridden when Keycloak is managing the persistence unit by itself -->\n         <properties>\n             <property name=\"jboss.as.jpa.managed\" value=\"false\"/>\n+            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.H2Dialect\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQwOTExNA==", "bodyText": "This is temporary and does not really matter of WF dist. As you know, we manually create the EMF.\nThe reason for this is that when using a persistence.xml, Quarkus does not allow you to define hibernate configuration via properties file. One or another. See their docs for more details.\nThe idea is to also review that once we have a final solution for supporting multiple databases when using Quarkus.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424409114", "createdAt": "2020-05-13T12:48:02Z", "author": {"login": "pedroigor"}, "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -85,8 +85,11 @@\n         \n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n \n+        <!-- These properties are overridden when Keycloak is managing the persistence unit by itself -->\n         <properties>\n             <property name=\"jboss.as.jpa.managed\" value=\"false\"/>\n+            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.H2Dialect\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMTU2Mw=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM4Mjc0OnYy", "diffSide": "RIGHT", "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMzowOFrOGUqiZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo0OTo1MVrOGUv8fA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMTYzNw==", "bodyText": "?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424321637", "createdAt": "2020-05-13T10:03:08Z", "author": {"login": "stianst"}, "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -85,8 +85,11 @@\n         \n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n \n+        <!-- These properties are overridden when Keycloak is managing the persistence unit by itself -->\n         <properties>\n             <property name=\"jboss.as.jpa.managed\" value=\"false\"/>\n+            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.H2Dialect\"/>\n+            <property name=\"hibernate.query.startup_check\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxMDIzNg==", "bodyText": "I can make the hibernate.query.startup_check configurable. This also saves some time during startup given that validating named queries is expensive for us.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424410236", "createdAt": "2020-05-13T12:49:51Z", "author": {"login": "pedroigor"}, "path": "model/jpa/src/main/resources/META-INF/persistence.xml", "diffHunk": "@@ -85,8 +85,11 @@\n         \n         <exclude-unlisted-classes>true</exclude-unlisted-classes>\n \n+        <!-- These properties are overridden when Keycloak is managing the persistence unit by itself -->\n         <properties>\n             <property name=\"jboss.as.jpa.managed\" value=\"false\"/>\n+            <property name=\"hibernate.dialect\" value=\"org.hibernate.dialect.H2Dialect\"/>\n+            <property name=\"hibernate.query.startup_check\" value=\"false\"/>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMTYzNw=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM4NTMwOnYy", "diffSide": "LEFT", "path": "quarkus/extensions/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowMzo1N1rOGUqkFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo1MDo0MFrOGUv-rg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjA3MA==", "bodyText": "This is used by the config test that Dmitry added, not sure why it doesn't fail without it. Kinda not related to this PR though?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424322070", "createdAt": "2020-05-13T10:03:57Z", "author": {"login": "stianst"}, "path": "quarkus/extensions/pom.xml", "diffHunk": "@@ -89,15 +112,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-surefire-plugin</artifactId>\n-                <configuration>\n-                    <environmentVariables>\n-                        <KEYCLOAK_CAMEL_CASE_SCOPE_CAMEL_CASE_PROP>foobar</KEYCLOAK_CAMEL_CASE_SCOPE_CAMEL_CASE_PROP>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxMDc5OA==", "bodyText": "It is not, but I did see any difference after removing it. So I just removed it.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424410798", "createdAt": "2020-05-13T12:50:40Z", "author": {"login": "pedroigor"}, "path": "quarkus/extensions/pom.xml", "diffHunk": "@@ -89,15 +112,6 @@\n                     </execution>\n                 </executions>\n             </plugin>\n-            <plugin>\n-                <groupId>org.apache.maven.plugins</groupId>\n-                <artifactId>maven-surefire-plugin</artifactId>\n-                <configuration>\n-                    <environmentVariables>\n-                        <KEYCLOAK_CAMEL_CASE_SCOPE_CAMEL_CASE_PROP>foobar</KEYCLOAK_CAMEL_CASE_SCOPE_CAMEL_CASE_PROP>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjA3MA=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM4NjY1OnYy", "diffSide": "RIGHT", "path": "quarkus/extensions/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNDoyMVrOGUqk4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo1MjoyOVrOGUwDNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjI3Mw==", "bodyText": "I noticed beans.xml earlier, I think we should use a consistent approach shouldn't we? Either use beans.xml or use jandex plugin?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424322273", "createdAt": "2020-05-13T10:04:21Z", "author": {"login": "stianst"}, "path": "quarkus/extensions/pom.xml", "diffHunk": "@@ -79,7 +103,6 @@\n             <plugin>\n                 <groupId>org.jboss.jandex</groupId>\n                 <artifactId>jandex-maven-plugin</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxMTk1Ng==", "bodyText": "I'm not sure if this declaration is making any difference. But yeah, we should have a consistent approach and we basically need beans.xml to make Hibernate work.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424411956", "createdAt": "2020-05-13T12:52:29Z", "author": {"login": "pedroigor"}, "path": "quarkus/extensions/pom.xml", "diffHunk": "@@ -79,7 +103,6 @@\n             <plugin>\n                 <groupId>org.jboss.jandex</groupId>\n                 <artifactId>jandex-maven-plugin</artifactId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjI3Mw=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM4ODQyOnYy", "diffSide": "RIGHT", "path": "quarkus/extensions/src/main/java/org/keycloak/provider/quarkus/QuarkusCacheManagerProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNDo1MVrOGUqmBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo1Mzo0MlrOGUwGXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjU2NQ==", "bodyText": "Does this have anything to do with JPA or Liquibase?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424322565", "createdAt": "2020-05-13T10:04:51Z", "author": {"login": "stianst"}, "path": "quarkus/extensions/src/main/java/org/keycloak/provider/quarkus/QuarkusCacheManagerProvider.java", "diffHunk": "@@ -44,12 +44,13 @@\n         try {\n             InputStream configurationStream = loadConfiguration(config);\n             ConfigurationBuilderHolder builder = new ParserRegistry().parse(configurationStream);\n+            boolean isClustered = builder.getNamedConfigurationBuilders().get(\"sessions\").clustering().cacheMode().isClustered();\n \n-            if (builder.getNamedConfigurationBuilders().get(\"sessions\").clustering().cacheMode().isClustered()) {\n+            if (isClustered) {\n                 configureTransportStack(config, builder);\n             }\n \n-            return (C) new DefaultCacheManager(builder, true);\n+            return (C) new DefaultCacheManager(builder, isClustered);\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxMjc2Ng==", "bodyText": "No. But I also changed that to avoid starting the cache beforehand if running a local cache. Sorry for including it.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424412766", "createdAt": "2020-05-13T12:53:42Z", "author": {"login": "pedroigor"}, "path": "quarkus/extensions/src/main/java/org/keycloak/provider/quarkus/QuarkusCacheManagerProvider.java", "diffHunk": "@@ -44,12 +44,13 @@\n         try {\n             InputStream configurationStream = loadConfiguration(config);\n             ConfigurationBuilderHolder builder = new ParserRegistry().parse(configurationStream);\n+            boolean isClustered = builder.getNamedConfigurationBuilders().get(\"sessions\").clustering().cacheMode().isClustered();\n \n-            if (builder.getNamedConfigurationBuilders().get(\"sessions\").clustering().cacheMode().isClustered()) {\n+            if (isClustered) {\n                 configureTransportStack(config, builder);\n             }\n \n-            return (C) new DefaultCacheManager(builder, true);\n+            return (C) new DefaultCacheManager(builder, isClustered);\n         } catch (Exception e) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMjU2NQ=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM5MTI0OnYy", "diffSide": "RIGHT", "path": "quarkus/extensions/src/main/java/org/keycloak/transaction/QuarkusJtaTransactionManagerLookup.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNTo0MVrOGUqn0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo1ODo0OFrOGUwTag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzAyNg==", "bodyText": "I'm confused here. Don't we need at least a transaction manager dummy or something? Otherwise session.getTransactionManager won't work", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424323026", "createdAt": "2020-05-13T10:05:41Z", "author": {"login": "stianst"}, "path": "quarkus/extensions/src/main/java/org/keycloak/transaction/QuarkusJtaTransactionManagerLookup.java", "diffHunk": "@@ -32,16 +32,20 @@\n \n     @Override\n     public TransactionManager getTransactionManager() {\n-        return tm;\n+        if (tm == null) {\n+//            tm = CDI.current().select(TransactionManager.class).get();\n+//            logger.tracev(\"TransactionManager = {0}\", tm);\n+//            if (tm == null) {\n+//                logger.debug(\"could not locate transactionmanager\");\n+//            }\n+        }\n+        // we need to check whether or not the datasource supports XA as well as if configuration tells that\n+        return null;\n     }\n \n     @Override\n     public void init(Config.Scope config) {\n-        tm = CDI.current().select(TransactionManager.class).get();\n-        logger.tracev(\"TransactionManager = {0}\", tm);\n-        if (tm == null) {\n-            logger.debug(\"Could not locate TransactionManager\");\n-        }\n+        ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNjEwNg==", "bodyText": "This is something I was expecting to investigate more once I have these changes in. It is not clear to me if we always need to run using JTA. Looks like it is not.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424416106", "createdAt": "2020-05-13T12:58:48Z", "author": {"login": "pedroigor"}, "path": "quarkus/extensions/src/main/java/org/keycloak/transaction/QuarkusJtaTransactionManagerLookup.java", "diffHunk": "@@ -32,16 +32,20 @@\n \n     @Override\n     public TransactionManager getTransactionManager() {\n-        return tm;\n+        if (tm == null) {\n+//            tm = CDI.current().select(TransactionManager.class).get();\n+//            logger.tracev(\"TransactionManager = {0}\", tm);\n+//            if (tm == null) {\n+//                logger.debug(\"could not locate transactionmanager\");\n+//            }\n+        }\n+        // we need to check whether or not the datasource supports XA as well as if configuration tells that\n+        return null;\n     }\n \n     @Override\n     public void init(Config.Scope config) {\n-        tm = CDI.current().select(TransactionManager.class).get();\n-        logger.tracev(\"TransactionManager = {0}\", tm);\n-        if (tm == null) {\n-            logger.debug(\"Could not locate TransactionManager\");\n-        }\n+        ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzAyNg=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM5MzI5OnYy", "diffSide": "RIGHT", "path": "quarkus/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNjoxMlrOGUqpFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNjoxMlrOGUqpFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzM0OQ==", "bodyText": "Don't think we should require folks to build their own Quarkus to use Keycloak should we?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424323349", "createdAt": "2020-05-13T10:06:12Z", "author": {"login": "stianst"}, "path": "quarkus/pom.xml", "diffHunk": "@@ -31,10 +31,11 @@\n     <packaging>pom</packaging>\n \n     <properties>\n-        <quarkus.version>1.2.1.Final</quarkus.version>\n+        <quarkus.version>999-SNAPSHOT</quarkus.version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM5NDY3OnYy", "diffSide": "RIGHT", "path": "quarkus/server/src/main/java/org/keycloak/services/resources/NoopResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNjozOFrOGUqp9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMjo1OTo1MVrOGUwWCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzU3NA==", "bodyText": "??", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424323574", "createdAt": "2020-05-13T10:06:38Z", "author": {"login": "stianst"}, "path": "quarkus/server/src/main/java/org/keycloak/services/resources/NoopResource.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.keycloak.services.resources;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManagerFactory;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriBuilder;\n+\n+/**\n+ * Quarkus doesn't pick up the Application if there's no JAX-RS endpoints\n+ */\n+@Singleton\n+@Path(\"/noop\")\n+public class NoopResource {\n+\n+    @Inject\n+    EntityManagerFactory entityManagerFactory;\n+\n+    @GET\n+    public Response redirect() {\n+        return Response.seeOther(UriBuilder.fromResource(WelcomeResource.class).build()).build();\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNjc3OQ==", "bodyText": "Not related. But better than have a Hello World :) Although this endpoint is not really exposed.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424416779", "createdAt": "2020-05-13T12:59:51Z", "author": {"login": "pedroigor"}, "path": "quarkus/server/src/main/java/org/keycloak/services/resources/NoopResource.java", "diffHunk": "@@ -0,0 +1,26 @@\n+package org.keycloak.services.resources;\n+\n+import javax.inject.Inject;\n+import javax.inject.Singleton;\n+import javax.persistence.EntityManagerFactory;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriBuilder;\n+\n+/**\n+ * Quarkus doesn't pick up the Application if there's no JAX-RS endpoints\n+ */\n+@Singleton\n+@Path(\"/noop\")\n+public class NoopResource {\n+\n+    @Inject\n+    EntityManagerFactory entityManagerFactory;\n+\n+    @GET\n+    public Response redirect() {\n+        return Response.seeOther(UriBuilder.fromResource(WelcomeResource.class).build()).build();\n+    }\n+\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzU3NA=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0MjM5NjAyOnYy", "diffSide": "LEFT", "path": "services/src/main/java/org/keycloak/services/resources/KeycloakApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMDowNzowM1rOGUqq3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xM1QxMzowMTowNlrOGUwZIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzgwNw==", "bodyText": "Why move this?", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424323807", "createdAt": "2020-05-13T10:07:03Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/services/resources/KeycloakApplication.java", "diffHunk": "@@ -182,7 +182,6 @@ protected void shutdown() {\n     protected ExportImportManager migrateAndBootstrap() {\n         ExportImportManager exportImportManager;\n         logger.debug(\"Calling migrateModel\");\n-        migrateModel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDQxNzU2OQ==", "bodyText": "And I can ask, why not have model migration together with persistence bootstrap? Why have part in JPA layer and other bits outside. It just better, IMO, to have them where persistence is initialized.", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424417569", "createdAt": "2020-05-13T13:01:06Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/services/resources/KeycloakApplication.java", "diffHunk": "@@ -182,7 +182,6 @@ protected void shutdown() {\n     protected ExportImportManager migrateAndBootstrap() {\n         ExportImportManager exportImportManager;\n         logger.debug(\"Calling migrateModel\");\n-        migrateModel();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDMyMzgwNw=="}, "originalCommit": {"oid": "2078b46a7dafe3a503e6b1f86949ede31cddff93"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY0NjM5ODQ2OnYy", "diffSide": "RIGHT", "path": "quarkus/server/src/main/java/org/keycloak/services/resources/Dummy.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MjowNFrOGVSA6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNFQwODo0MjowNFrOGVSA6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNDk2ODQyNw==", "bodyText": "??", "url": "https://github.com/keycloak/keycloak/pull/7062#discussion_r424968427", "createdAt": "2020-05-14T08:42:04Z", "author": {"login": "stianst"}, "path": "quarkus/server/src/main/java/org/keycloak/services/resources/Dummy.java", "diffHunk": "@@ -9,6 +11,9 @@\n @Path(\"/dummy\")\n public class Dummy {\n \n+    @Inject", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fdef7a9291d993952af6d2c665422ff94a70e43"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3623, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}