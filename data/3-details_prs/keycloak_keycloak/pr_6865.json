{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTA3NDU3", "number": 6865, "title": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup AIA", "bodyText": "JIRA: KEYCLOAK-12799", "createdAt": "2020-03-03T18:30:15Z", "url": "https://github.com/keycloak/keycloak/pull/6865", "merged": true, "mergeCommit": {"oid": "a1bbab9eb20e93d1963f4b0e7e7b7b372d4c055e"}, "closed": true, "closedAt": "2020-03-05T14:04:39Z", "author": {"login": "mabartos"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcKIV5cgBqjMwOTM3NTY4Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcKsDBfgFqTM2OTU5MjgyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f0ea4ff2ac522914f66986cde4d76a42e777b357", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/f0ea4ff2ac522914f66986cde4d76a42e777b357", "committedDate": "2020-03-03T18:28:19Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}, "afterCommit": {"oid": "6b7adaaaf37b7c300e0c7e0225c23fe48373bd3a", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/6b7adaaaf37b7c300e0c7e0225c23fe48373bd3a", "committedDate": "2020-03-03T20:27:42Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6b7adaaaf37b7c300e0c7e0225c23fe48373bd3a", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/6b7adaaaf37b7c300e0c7e0225c23fe48373bd3a", "committedDate": "2020-03-03T20:27:42Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}, "afterCommit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/9ce972d48a9724aabecae96940f5087505b88b5c", "committedDate": "2020-03-04T10:33:19Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5MzY0OTgy", "url": "https://github.com/keycloak/keycloak/pull/6865#pullrequestreview-369364982", "createdAt": "2020-03-05T08:15:35Z", "commit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODoxNTozNVrOFyJ3lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQwODo1Mjo0OFrOFyK5TA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODEzNDgwNw==", "bodyText": "Will it makes sense to move this to method \"createCommonAttributes\" and remove the very same block from \"createResponse\" so that it is not same code duplicated on 2 places?", "url": "https://github.com/keycloak/keycloak/pull/6865#discussion_r388134807", "createdAt": "2020-03-05T08:15:35Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/forms/login/freemarker/FreeMarkerLoginFormsProvider.java", "diffHunk": "@@ -254,6 +254,10 @@ public Response createForm(String form) {\n         Locale locale = session.getContext().resolveLocale(user);\n         Properties messagesBundle = handleThemeResources(theme, locale);\n \n+        if (authenticationSession != null && authenticationSession.getClientNote(Constants.KC_ACTION_EXECUTING) != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE0OTg4OA==", "bodyText": "I think there is a need to use AuthServerRemoteExclude annotation here as well, due the test uses some runOnServer stuff...", "url": "https://github.com/keycloak/keycloak/pull/6865#discussion_r388149888", "createdAt": "2020-03-05T08:49:16Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/actions/AppInitiatedActionWebAuthnTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.testsuite.actions;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.authentication.authenticators.browser.PasswordFormFactory;\n+import org.keycloak.authentication.authenticators.browser.UsernameFormFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.events.Details;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.RequiredActionProviderRepresentation;\n+import org.keycloak.testsuite.WebAuthnAssume;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.pages.LoginUsernameOnlyPage;\n+import org.keycloak.testsuite.pages.PasswordPage;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.util.FlowUtil;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.keycloak.common.Profile.Feature.WEB_AUTHN;\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.ALTERNATIVE;\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+\n+/**\n+ * @author <a href=\"mailto:mabartos@redhat.com\">Martin Bartos</a>\n+ */\n+@EnableFeature(value = WEB_AUTHN, skipRestart = true, onlyForProduct = true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODE1MTYyOA==", "bodyText": "AFAIK with this assume, the test will be never executed anywhere. I guess we have 2 options:\n\nIf test currently doesn't require active WebAuthn support and will work by default with HtmlUnit and all the other browsers without WebAuthn support (which seems so), then we can remove the assume for now, so the test is executed in travis, pipeline and all the other places\nOtherwise we can add it to different package etc, so that it is executed in the pipeline during running of WebAuthn tests.", "url": "https://github.com/keycloak/keycloak/pull/6865#discussion_r388151628", "createdAt": "2020-03-05T08:52:48Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/actions/AppInitiatedActionWebAuthnTest.java", "diffHunk": "@@ -0,0 +1,127 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.testsuite.actions;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.authentication.authenticators.browser.PasswordFormFactory;\n+import org.keycloak.authentication.authenticators.browser.UsernameFormFactory;\n+import org.keycloak.authentication.authenticators.browser.WebAuthnAuthenticatorFactory;\n+import org.keycloak.authentication.requiredactions.WebAuthnRegisterFactory;\n+import org.keycloak.events.Details;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.RequiredActionProviderRepresentation;\n+import org.keycloak.testsuite.WebAuthnAssume;\n+import org.keycloak.testsuite.arquillian.annotation.EnableFeature;\n+import org.keycloak.testsuite.pages.LoginUsernameOnlyPage;\n+import org.keycloak.testsuite.pages.PasswordPage;\n+import org.keycloak.testsuite.pages.webauthn.WebAuthnRegisterPage;\n+import org.keycloak.testsuite.util.FlowUtil;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+import static org.keycloak.common.Profile.Feature.WEB_AUTHN;\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.ALTERNATIVE;\n+import static org.keycloak.models.AuthenticationExecutionModel.Requirement.REQUIRED;\n+\n+/**\n+ * @author <a href=\"mailto:mabartos@redhat.com\">Martin Bartos</a>\n+ */\n+@EnableFeature(value = WEB_AUTHN, skipRestart = true, onlyForProduct = true)\n+public class AppInitiatedActionWebAuthnTest extends AbstractAppInitiatedActionTest {\n+\n+    @Page\n+    LoginUsernameOnlyPage usernamePage;\n+\n+    @Page\n+    PasswordPage passwordPage;\n+\n+    @Page\n+    WebAuthnRegisterPage registerPage;\n+\n+    public AppInitiatedActionWebAuthnTest() {\n+        super(WebAuthnRegisterFactory.PROVIDER_ID);\n+    }\n+\n+    @Override\n+    protected boolean isImportAfterEachMethod() {\n+        return true;\n+    }\n+\n+    @Override\n+    public void configureTestRealm(RealmRepresentation testRealm) {\n+        RequiredActionProviderRepresentation action = new RequiredActionProviderRepresentation();\n+        action.setAlias(WebAuthnRegisterFactory.PROVIDER_ID);\n+        action.setProviderId(WebAuthnRegisterFactory.PROVIDER_ID);\n+        action.setEnabled(true);\n+        action.setDefaultAction(true);\n+        action.setPriority(10);\n+\n+        List<RequiredActionProviderRepresentation> actions = new ArrayList<>();\n+        actions.add(action);\n+        testRealm.setRequiredActions(actions);\n+    }\n+\n+    @Before\n+    public void setUpWebAuthnFlow() {\n+        final String newFlowAlias = \"browserWebAuthnAIA\";\n+        testingClient.server(\"test\").run(session -> FlowUtil.inCurrentRealm(session).copyBrowserFlow(newFlowAlias));\n+        testingClient.server(\"test\").run(session -> {\n+            FlowUtil.inCurrentRealm(session)\n+                    .selectFlow(newFlowAlias)\n+                    .inForms(forms -> forms\n+                            .clear()\n+                            .addAuthenticatorExecution(REQUIRED, UsernameFormFactory.PROVIDER_ID)\n+                            .addSubFlowExecution(REQUIRED, subFlow -> subFlow\n+                                    .addAuthenticatorExecution(ALTERNATIVE, PasswordFormFactory.PROVIDER_ID)\n+                                    .addAuthenticatorExecution(ALTERNATIVE, WebAuthnAuthenticatorFactory.PROVIDER_ID)))\n+                    .defineAsBrowserFlow();\n+        });\n+    }\n+\n+    @Before\n+    public void verifyEnvironment() {\n+        WebAuthnAssume.assumeChrome();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c"}, "originalPosition": 100}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0b6667e0f6f9c4e7bfac3ba3e26f02a0f06852f3", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/0b6667e0f6f9c4e7bfac3ba3e26f02a0f06852f3", "committedDate": "2020-03-05T09:36:35Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ce972d48a9724aabecae96940f5087505b88b5c", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/9ce972d48a9724aabecae96940f5087505b88b5c", "committedDate": "2020-03-04T10:33:19Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}, "afterCommit": {"oid": "0b6667e0f6f9c4e7bfac3ba3e26f02a0f06852f3", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/0b6667e0f6f9c4e7bfac3ba3e26f02a0f06852f3", "committedDate": "2020-03-05T09:36:35Z", "message": "KEYCLOAK-12799 Missing Cancel button on The WebAuthn setup screen when using AIA"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NTkyODI5", "url": "https://github.com/keycloak/keycloak/pull/6865#pullrequestreview-369592829", "createdAt": "2020-03-05T14:04:27Z", "commit": {"oid": "0b6667e0f6f9c4e7bfac3ba3e26f02a0f06852f3"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2565, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}