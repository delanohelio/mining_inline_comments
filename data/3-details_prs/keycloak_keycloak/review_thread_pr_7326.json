{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MTc3MDYw", "number": 7326, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo0ODozMlrOEYCYXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxMjo1MlrOEZeXCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjQwMjg1OnYy", "diffSide": "RIGHT", "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjo0ODozMlrOHAJ-Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QyMjoyMTo0M1rOHAfr1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNTQwNw==", "bodyText": "Isn't better computIfAbsent? I mean, the way you did you still have the call to newRealm.getClientById.", "url": "https://github.com/keycloak/keycloak/pull/7326#discussion_r469925407", "createdAt": "2020-08-13T12:48:32Z", "author": {"login": "pedroigor"}, "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "diffHunk": "@@ -342,20 +343,19 @@ public static void importRealm(KeycloakSession session, RealmRepresentation rep,\n         if (rep.getClients() != null) {\n             for (ClientRepresentation resourceRep : rep.getClients()) {\n                 if (resourceRep.getDefaultRoles() != null) {\n-                    ClientModel clientModel = newRealm.getClientByClientId(resourceRep.getClientId());\n+                    ClientModel clientModel = createdClients.getOrDefault(resourceRep.getClientId(), newRealm.getClientByClientId(resourceRep.getClientId()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03352bea50b97b48bcd1e26271206f9a3dfa40e1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDI4MTE3NQ==", "bodyText": "Thanks for the review. You are right. changed it to computeIfAbsent", "url": "https://github.com/keycloak/keycloak/pull/7326#discussion_r470281175", "createdAt": "2020-08-13T22:21:43Z", "author": {"login": "pratiksomangoudar"}, "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "diffHunk": "@@ -342,20 +343,19 @@ public static void importRealm(KeycloakSession session, RealmRepresentation rep,\n         if (rep.getClients() != null) {\n             for (ClientRepresentation resourceRep : rep.getClients()) {\n                 if (resourceRep.getDefaultRoles() != null) {\n-                    ClientModel clientModel = newRealm.getClientByClientId(resourceRep.getClientId());\n+                    ClientModel clientModel = createdClients.getOrDefault(resourceRep.getClientId(), newRealm.getClientByClientId(resourceRep.getClientId()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkyNTQwNw=="}, "originalCommit": {"oid": "03352bea50b97b48bcd1e26271206f9a3dfa40e1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1MTQ3Mjc0OnYy", "diffSide": "RIGHT", "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQxMzoxMjo1MlrOHCTmXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMDowNTowNFrOHCqvxQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4MDMxNg==", "bodyText": "I think you can use here Function.identity() to avoid the roleModel -> roleModel.", "url": "https://github.com/keycloak/keycloak/pull/7326#discussion_r472180316", "createdAt": "2020-08-18T13:12:52Z", "author": {"login": "pedroigor"}, "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "diffHunk": "@@ -364,17 +363,19 @@ public static void importRealm(KeycloakSession session, RealmRepresentation rep,\n         }\n \n         if (rep.getScopeMappings() != null) {\n+            Map<String, RoleModel> roleModelMap = newRealm.getRolesStream().collect(Collectors.toMap(RoleModel::getId, roleModel -> roleModel));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c1e22c6833af0aad559fd324ccc988683014a22e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1NDI3OA==", "bodyText": "Thanks. I will update and rebase", "url": "https://github.com/keycloak/keycloak/pull/7326#discussion_r472554278", "createdAt": "2020-08-18T23:46:52Z", "author": {"login": "pratiksomangoudar"}, "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "diffHunk": "@@ -364,17 +363,19 @@ public static void importRealm(KeycloakSession session, RealmRepresentation rep,\n         }\n \n         if (rep.getScopeMappings() != null) {\n+            Map<String, RoleModel> roleModelMap = newRealm.getRolesStream().collect(Collectors.toMap(RoleModel::getId, roleModel -> roleModel));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4MDMxNg=="}, "originalCommit": {"oid": "c1e22c6833af0aad559fd324ccc988683014a22e"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU1OTU1Nw==", "bodyText": "Done", "url": "https://github.com/keycloak/keycloak/pull/7326#discussion_r472559557", "createdAt": "2020-08-19T00:05:04Z", "author": {"login": "pratiksomangoudar"}, "path": "server-spi-private/src/main/java/org/keycloak/models/utils/RepresentationToModel.java", "diffHunk": "@@ -364,17 +363,19 @@ public static void importRealm(KeycloakSession session, RealmRepresentation rep,\n         }\n \n         if (rep.getScopeMappings() != null) {\n+            Map<String, RoleModel> roleModelMap = newRealm.getRolesStream().collect(Collectors.toMap(RoleModel::getId, roleModel -> roleModel));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjE4MDMxNg=="}, "originalCommit": {"oid": "c1e22c6833af0aad559fd324ccc988683014a22e"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3518, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}