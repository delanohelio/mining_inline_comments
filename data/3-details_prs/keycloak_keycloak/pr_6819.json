{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc4Mjg4OTk3", "number": 6819, "title": "[KEYCLOAK-13066] Support Resource Type in scope-based permissions", "bodyText": "This PR implements https://issues.redhat.com/browse/KEYCLOAK-13066. We have added the  resourceType field in the ScopePermissionRepresentation. We didn't know if it should be in the AbstractPermissionRepresentation so we decided to duplicate the behavior in both ResourcePolicyProviderFactory and ScopePolicyProviderFactory.\nWe have successfully created an Scope Permission referencing a resourceType instead of an specific resource and it worked as expected.\nPlease let me know if there is anything we should change :)", "createdAt": "2020-02-21T13:43:44Z", "url": "https://github.com/keycloak/keycloak/pull/6819", "merged": true, "mergeCommit": {"oid": "666832d1be5c37cadeba4ca6bafd9c955ce25661"}, "closed": true, "closedAt": "2020-05-12T20:11:37Z", "author": {"login": "alvarogimenez"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcGhbvsAFqTM2MjcwNjg3MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgqDhTgFqTQxMDM4NTYzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzA2ODcx", "url": "https://github.com/keycloak/keycloak/pull/6819#pullrequestreview-362706871", "createdAt": "2020-02-21T15:24:03Z", "commit": {"oid": "9181663f157d6e4f661a6237b60381ad2d8ff306"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNDowM1rOFs6kzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyNDowM1rOFs6kzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0MTM1Nw==", "bodyText": "Is this if statement really necessary ?", "url": "https://github.com/keycloak/keycloak/pull/6819#discussion_r382641357", "createdAt": "2020-02-21T15:24:03Z", "author": {"login": "pedroigor"}, "path": "authz/policy/common/src/main/java/org/keycloak/authorization/policy/provider/permission/ScopePolicyProviderFactory.java", "diffHunk": "@@ -62,6 +66,33 @@ public ScopePermissionRepresentation toRepresentation(Policy policy, Authorizati\n         return new ScopePermissionRepresentation();\n     }\n \n+    @Override\n+    public void onCreate(Policy policy, ScopePermissionRepresentation representation, AuthorizationProvider authorization) {\n+        updateResourceType(policy, representation);\n+    }\n+\n+    @Override\n+    public void onUpdate(Policy policy, ScopePermissionRepresentation representation, AuthorizationProvider authorization) {\n+        updateResourceType(policy, representation);\n+    }\n+\n+    private void updateResourceType(Policy policy, ScopePermissionRepresentation representation) {\n+        if (representation != null) {\n+            //TODO: remove this check once we migrate to new API\n+            if (ScopePermissionRepresentation.class.equals(representation.getClass())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9181663f157d6e4f661a6237b60381ad2d8ff306"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYyNzEwNTk1", "url": "https://github.com/keycloak/keycloak/pull/6819#pullrequestreview-362710595", "createdAt": "2020-02-21T15:29:01Z", "commit": {"oid": "9181663f157d6e4f661a6237b60381ad2d8ff306"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyOTowMVrOFs6wfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMVQxNToyOTowMVrOFs6wfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjY0NDM1MQ==", "bodyText": "In addition to onCreate|Update you should also make sure the representation is set with the defaultResorceType setting by implementing org.keycloak.authorization.policy.provider.permission.ScopePolicyProviderFactory#toRepresentation.\nPlease, take a look at ResourcePolicyProviderFactory.", "url": "https://github.com/keycloak/keycloak/pull/6819#discussion_r382644351", "createdAt": "2020-02-21T15:29:01Z", "author": {"login": "pedroigor"}, "path": "authz/policy/common/src/main/java/org/keycloak/authorization/policy/provider/permission/ScopePolicyProviderFactory.java", "diffHunk": "@@ -62,6 +66,33 @@ public ScopePermissionRepresentation toRepresentation(Policy policy, Authorizati\n         return new ScopePermissionRepresentation();\n     }\n \n+    @Override\n+    public void onCreate(Policy policy, ScopePermissionRepresentation representation, AuthorizationProvider authorization) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9181663f157d6e4f661a6237b60381ad2d8ff306"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9181663f157d6e4f661a6237b60381ad2d8ff306", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/9181663f157d6e4f661a6237b60381ad2d8ff306", "committedDate": "2020-02-21T13:04:40Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}, "afterCommit": {"oid": "825e17d71c70029020ec2663b2419293a3e8c325", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/825e17d71c70029020ec2663b2419293a3e8c325", "committedDate": "2020-02-25T15:49:07Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0Mjc2NDk4", "url": "https://github.com/keycloak/keycloak/pull/6819#pullrequestreview-364276498", "createdAt": "2020-02-25T16:17:50Z", "commit": {"oid": "825e17d71c70029020ec2663b2419293a3e8c325"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjoxNzo1MFrOFuMmhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNVQxNjoxNzo1MFrOFuMmhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Mzk4NTI4Nw==", "bodyText": "We realized that, by adding a resourceType to ScopePermissionRepresentation, we are implying that such Permissions refer to a set of resources. Scope permissions which do not reference an specific resource are involved in all Resource Permission Evaluation requesting the specified scope.  The query findPolicyIdByNullResourceScope looks for Scope Permissions which do not refer to specific resources. When a ScopePermission has a defaultResourceType defined, it should not be retrieved by this query. E.g.:\n\nResources:\n\nt1 (Scopes=read,write, Type=t)\nt2 (Scopes=read,write, Type=t)\nx1 (Scopes=read,write, Type=x)\nx2 (Scopes=read,write, Type=x)\n\n\nPermissions:\n\nScopePermission -> t:read (Scope=read, ResourceType=t)\nScopePermission -> any:read (Scope=read, ResourceType=null)\n\n\n\nWithout the proposed changes, the permission t:read would be retrieved by the DefaultPolicyEvaluator when evaluating permissions for the resource x1 since it doesn't reference an specific resource (It references a resourceType instead). Only the permission any:read should be involved in the x1 permission evaluation since t:readonly applies to resources of type t.\nWe've included a new field configKeys since JPA does not support queries like 'defaultResourceType' not member of pe.config being pe.config a Map collection. This could also be achieved with an in-memory filtering but we think the JPA approach is a better solution. Do you think is there a better approach?", "url": "https://github.com/keycloak/keycloak/pull/6819#discussion_r383985287", "createdAt": "2020-02-25T16:17:50Z", "author": {"login": "alvarogimenez"}, "path": "model/jpa/src/main/java/org/keycloak/authorization/jpa/entities/PolicyEntity.java", "diffHunk": "@@ -59,7 +56,7 @@\n                 @NamedQuery(name=\"findPolicyIdByResource\", query=\"select p from PolicyEntity p inner join fetch p.resources r left join fetch p.scopes s inner join fetch p.associatedPolicies a where p.resourceServer.id = :serverId and (r.resourceServer.id = :serverId and r.id = :resourceId)\"),\n                 @NamedQuery(name=\"findPolicyIdByScope\", query=\"select pe from PolicyEntity pe left join fetch pe.resources r inner join fetch pe.scopes s inner join fetch pe.associatedPolicies a where pe.resourceServer.id = :serverId and exists (select p.id from ScopeEntity s inner join s.policies p where s.resourceServer.id = :serverId and (p.resourceServer.id = :serverId and p.type = 'scope' and s.id in (:scopeIds) and p.id = pe.id))\"),\n                 @NamedQuery(name=\"findPolicyIdByResourceScope\", query=\"select pe from PolicyEntity pe inner join fetch pe.resources r inner join fetch pe.scopes s inner join fetch pe.associatedPolicies a where pe.resourceServer.id = :serverId and exists (select p.id from ScopeEntity s inner join s.policies p where s.resourceServer.id = :serverId and (p.resourceServer.id = :serverId and p.type = 'scope' and s.id in (:scopeIds) and p.id = pe.id)) and exists (select p.id from ResourceEntity r inner join r.policies p where r.resourceServer.id = :serverId and (p.resourceServer.id = :serverId and p.id = pe.id and p.type = 'scope' and r.id in (:resourceId)))\"),\n-                @NamedQuery(name=\"findPolicyIdByNullResourceScope\", query=\"select pe from PolicyEntity pe left join fetch pe.resources r inner join fetch pe.scopes s inner join fetch pe.associatedPolicies a where pe.resourceServer.id = :serverId and exists (select p.id from ScopeEntity s inner join s.policies p where s.resourceServer.id = :serverId and (p.resourceServer.id = :serverId and p.id = pe.id and p.type = 'scope' and s.id in (:scopeIds))) and pe.resources is empty\"),\n+                @NamedQuery(name=\"findPolicyIdByNullResourceScope\", query=\"select pe from PolicyEntity pe left join fetch pe.resources r left join fetch pe.configKeys ck inner join fetch pe.scopes s inner join fetch pe.associatedPolicies a where pe.resourceServer.id = :serverId and exists (select p.id from ScopeEntity s inner join s.policies p where s.resourceServer.id = :serverId and (p.resourceServer.id = :serverId and p.id = pe.id and p.type = 'scope' and s.id in (:scopeIds))) and pe.resources is empty and 'defaultResourceType' not member of pe.configKeys\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "825e17d71c70029020ec2663b2419293a3e8c325"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "825e17d71c70029020ec2663b2419293a3e8c325", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/825e17d71c70029020ec2663b2419293a3e8c325", "committedDate": "2020-02-25T15:49:07Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}, "afterCommit": {"oid": "ce0f0b60a7ec8628ec3ffb1617079536431f4093", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/ce0f0b60a7ec8628ec3ffb1617079536431f4093", "committedDate": "2020-02-26T15:06:27Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce0f0b60a7ec8628ec3ffb1617079536431f4093", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/ce0f0b60a7ec8628ec3ffb1617079536431f4093", "committedDate": "2020-02-26T15:06:27Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}, "afterCommit": {"oid": "c28089a1874bd7c0ca700a40689aa2dddca5020c", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/c28089a1874bd7c0ca700a40689aa2dddca5020c", "committedDate": "2020-05-04T08:30:21Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aafb599b0a77bb01d6ec54e7c9065ea1ef6d36a4", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/aafb599b0a77bb01d6ec54e7c9065ea1ef6d36a4", "committedDate": "2020-05-12T07:17:25Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c28089a1874bd7c0ca700a40689aa2dddca5020c", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/c28089a1874bd7c0ca700a40689aa2dddca5020c", "committedDate": "2020-05-04T08:30:21Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}, "afterCommit": {"oid": "aafb599b0a77bb01d6ec54e7c9065ea1ef6d36a4", "author": {"user": {"login": "alvarogimenez", "name": "\u00c1lvaro G\u00f3mez Gim\u00e9nez"}}, "url": "https://github.com/keycloak/keycloak/commit/aafb599b0a77bb01d6ec54e7c9065ea1ef6d36a4", "committedDate": "2020-05-12T07:17:25Z", "message": "KEYCLOAK-13066 Include resourceType in ScopePermissionRepresentation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMzg1NjM4", "url": "https://github.com/keycloak/keycloak/pull/6819#pullrequestreview-410385638", "createdAt": "2020-05-12T20:11:31Z", "commit": {"oid": "aafb599b0a77bb01d6ec54e7c9065ea1ef6d36a4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2528, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}