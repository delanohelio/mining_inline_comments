{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzMjc0MjIx", "number": 7109, "title": "Add name and description edit functionality to Authentication and Exe\u2026", "bodyText": "\u2026cution Flows\n@mposolda @pskopek", "createdAt": "2020-05-26T15:19:19Z", "url": "https://github.com/keycloak/keycloak/pull/7109", "merged": true, "mergeCommit": {"oid": "8d6f8d046535d403746f89d9af0b7461755a616a"}, "closed": true, "closedAt": "2020-06-04T06:08:53Z", "author": {"login": "drichtarik"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABclJN5IABqjMzNzQ4OTk3NjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn3x_xgFqTQyNDEyNjgzMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5254decd3e45581f27f37ef8fe25882ecccc6d2c", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/5254decd3e45581f27f37ef8fe25882ecccc6d2c", "committedDate": "2020-05-26T15:15:24Z", "message": "Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "b69b4b574e97e1335cba7009b85e38b0b16d5e07", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/b69b4b574e97e1335cba7009b85e38b0b16d5e07", "committedDate": "2020-05-26T18:44:49Z", "message": "Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b69b4b574e97e1335cba7009b85e38b0b16d5e07", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/b69b4b574e97e1335cba7009b85e38b0b16d5e07", "committedDate": "2020-05-26T18:44:49Z", "message": "Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/ebc057e55e31c8d16a91bbbd2f708c399030ca56", "committedDate": "2020-05-27T15:31:17Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE5Nzc0MjE2", "url": "https://github.com/keycloak/keycloak/pull/7109#pullrequestreview-419774216", "createdAt": "2020-05-28T04:48:05Z", "commit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNDo0ODowNVrOGblgMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yOFQwNTowMzowMVrOGblt7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3OTE4Ng==", "bodyText": "Please don't change return type to \"Response\" .\nIn case that it was \"void\" as in current master and some exception happen on server, then the client will receive the exception as well. Which is usually good thing that client is notified about some failure through the exception. However when you change the return type on the admin-client to \"Response\", then the client call won't receive the exception at all. Instead of receiving exception, client  needs to explicitly check the status of the response etc. This means that client needs to explicitly close the \"Response\" (which is often forgotten) and I think this can be also the reason of broken tests.", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431579186", "createdAt": "2020-05-28T04:48:05Z", "author": {"login": "mposolda"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/AuthenticationManagementResource.java", "diffHunk": "@@ -106,7 +111,7 @@\n     @Path(\"/flows/{flowAlias}/executions\")\n     @PUT\n     @Consumes(MediaType.APPLICATION_JSON)\n-    void updateExecutions(@PathParam(\"flowAlias\") String flowAlias, AuthenticationExecutionInfoRepresentation rep);\n+    Response updateExecutions(@PathParam(\"flowAlias\") String flowAlias, AuthenticationExecutionInfoRepresentation rep);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3OTczMA==", "bodyText": "I suggest to use \"void\" as return type. See the other comment below. In general, using \"Response\" as return type in the admin-client method signature is quite error-prone and it will be ideal to avoid if possible.", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431579730", "createdAt": "2020-05-28T04:50:26Z", "author": {"login": "mposolda"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/AuthenticationManagementResource.java", "diffHunk": "@@ -88,6 +88,11 @@\n     @Consumes(MediaType.APPLICATION_JSON)\n     Response copy(@PathParam(\"flowAlias\") String flowAlias, Map<String, String> data);\n \n+    @Path(\"/flows/{id}\")\n+    @PUT\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    Response updateFlow(@PathParam(\"id\") String id, AuthenticationFlowRepresentation flow);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU3OTk5MQ==", "bodyText": "Is this change needed? If @produces is required, then it will be maybe good to keep the @consumes as well?", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431579991", "createdAt": "2020-05-28T04:51:28Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/AuthenticationManagementResource.java", "diffHunk": "@@ -254,7 +254,7 @@ public AuthenticationFlowRepresentation getFlow(@PathParam(\"id\") String id) {\n     @Path(\"/flows/{id}\")\n     @PUT\n     @NoCache\n-    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(MediaType.APPLICATION_JSON)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MDQxMQ==", "bodyText": "I think this test failed because you changed the return type in admin client to \"Response\" . If you change it back, the test will probably start passing again. So it will be ideal to revert this change and make sure that PermissionsTest is still tested.", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431580411", "createdAt": "2020-05-28T04:53:07Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/PermissionsTest.java", "diffHunk": "@@ -1138,11 +1138,6 @@ public void invoke(RealmResource realm) {\n                 realm.flows().getExecutions(\"nosuch\");\n             }\n         }, Resource.REALM, false);\n-        invoke(new Invocation() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MjEzMQ==", "bodyText": "This won't need try/finally block if \"response\" won't be the return type of the \"updateFlow\" method as I suggested earlier.", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431582131", "createdAt": "2020-05-28T05:00:34Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/authentication/FlowTest.java", "diffHunk": "@@ -275,4 +275,150 @@ public void addExecutionFlow() {\n         assertAdminEvents.assertEvent(REALM_NAME, OperationType.CREATE, AdminEventPaths.authAddExecutionFlowPath(\"parent\"), params, ResourceType.AUTH_EXECUTION_FLOW);\n     }\n \n+    @Test\n+    //KEYCLOAK-12741\n+    public void editFlowTest() {\n+        List<AuthenticationFlowRepresentation> flows;\n+\n+        //copy one first\n+        HashMap<String, String> params = new HashMap<>();\n+        params.put(\"newName\", \"Copy of browser\");\n+        Response response = authMgmtResource.copy(\"browser\", params);\n+        assertAdminEvents.assertEvent(REALM_NAME, OperationType.CREATE, AdminEventPaths.authCopyFlowPath(\"browser\"), params, ResourceType.AUTH_FLOW);\n+        try {\n+            Assert.assertEquals(\"Copy flow\", 201, response.getStatus());\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Set a new unique name. Should succeed\n+        flows = authMgmtResource.getFlows();\n+        AuthenticationFlowRepresentation testFlow = findFlowByAlias(\"Copy of browser\", flows);\n+        testFlow.setAlias(\"Copy of browser2\");\n+        response = authMgmtResource.updateFlow(testFlow.getId(), testFlow);\n+        flows = authMgmtResource.getFlows();\n+        try {\n+            Assert.assertEquals(\"Copy of browser2\", findFlowByAlias(\"Copy of browser2\", flows).getAlias());\n+            assertAdminEvents.assertEvent(REALM_NAME, OperationType.UPDATE, AdminEventPaths.authEditFlowPath(testFlow.getId()), ResourceType.AUTH_FLOW);\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Create new flow and edit the old one to have the new ones name\n+        AuthenticationFlowRepresentation newFlow = newFlow(\"New Flow\", \"Test description\", \"basic-flow\", true, false);\n+        createFlow(newFlow);\n+        // check that new flow is returned in a children list\n+        flows = authMgmtResource.getFlows();\n+        AuthenticationFlowRepresentation found = findFlowByAlias(\"New Flow\", flows);\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 78}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MjMzOQ==", "bodyText": "This will need to catch exception instead of checking the response status. Which is in general better approach.", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431582339", "createdAt": "2020-05-28T05:01:28Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/authentication/FlowTest.java", "diffHunk": "@@ -275,4 +275,150 @@ public void addExecutionFlow() {\n         assertAdminEvents.assertEvent(REALM_NAME, OperationType.CREATE, AdminEventPaths.authAddExecutionFlowPath(\"parent\"), params, ResourceType.AUTH_EXECUTION_FLOW);\n     }\n \n+    @Test\n+    //KEYCLOAK-12741\n+    public void editFlowTest() {\n+        List<AuthenticationFlowRepresentation> flows;\n+\n+        //copy one first\n+        HashMap<String, String> params = new HashMap<>();\n+        params.put(\"newName\", \"Copy of browser\");\n+        Response response = authMgmtResource.copy(\"browser\", params);\n+        assertAdminEvents.assertEvent(REALM_NAME, OperationType.CREATE, AdminEventPaths.authCopyFlowPath(\"browser\"), params, ResourceType.AUTH_FLOW);\n+        try {\n+            Assert.assertEquals(\"Copy flow\", 201, response.getStatus());\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Set a new unique name. Should succeed\n+        flows = authMgmtResource.getFlows();\n+        AuthenticationFlowRepresentation testFlow = findFlowByAlias(\"Copy of browser\", flows);\n+        testFlow.setAlias(\"Copy of browser2\");\n+        response = authMgmtResource.updateFlow(testFlow.getId(), testFlow);\n+        flows = authMgmtResource.getFlows();\n+        try {\n+            Assert.assertEquals(\"Copy of browser2\", findFlowByAlias(\"Copy of browser2\", flows).getAlias());\n+            assertAdminEvents.assertEvent(REALM_NAME, OperationType.UPDATE, AdminEventPaths.authEditFlowPath(testFlow.getId()), ResourceType.AUTH_FLOW);\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Create new flow and edit the old one to have the new ones name\n+        AuthenticationFlowRepresentation newFlow = newFlow(\"New Flow\", \"Test description\", \"basic-flow\", true, false);\n+        createFlow(newFlow);\n+        // check that new flow is returned in a children list\n+        flows = authMgmtResource.getFlows();\n+        AuthenticationFlowRepresentation found = findFlowByAlias(\"New Flow\", flows);\n+        try {\n+            Assert.assertNotNull(\"created flow visible in parent\", found);\n+            compareFlows(newFlow, found);\n+\n+            testFlow.setAlias(\"New Flow\");\n+            response = authMgmtResource.updateFlow(testFlow.getId(), testFlow);\n+            Assert.assertEquals(\"updateFlow using the alias of existing flow should fail\", 409, response.getStatus());\n+            flows = authMgmtResource.getFlows();\n+\n+            //name should be the same for the old Flow\n+            Assert.assertEquals(\"Copy of browser2\", findFlowByAlias(\"Copy of browser2\", flows).getAlias());\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Only update the description\n+        found.setDescription(\"New description\");\n+        response = authMgmtResource.updateFlow(found.getId(), found);\n+        flows = authMgmtResource.getFlows();\n+        try {\n+            Assert.assertEquals(\"New description\", findFlowByAlias(\"New Flow\", flows).getDescription());\n+            assertAdminEvents.assertEvent(REALM_NAME, OperationType.UPDATE, AdminEventPaths.authEditFlowPath(found.getId()), ResourceType.AUTH_FLOW);\n+        } finally {\n+            response.close();\n+        }\n+\n+        //Update name and description\n+        found.setAlias(\"New Flow2\");\n+        found.setDescription(\"New description2\");\n+        response = authMgmtResource.updateFlow(found.getId(), found);\n+        flows = authMgmtResource.getFlows();\n+        try {\n+            Assert.assertEquals(\"New Flow2\", findFlowByAlias(\"New Flow2\", flows).getAlias());\n+            Assert.assertEquals(\"New description2\", findFlowByAlias(\"New Flow2\", flows).getDescription());\n+            assertAdminEvents.assertEvent(REALM_NAME, OperationType.UPDATE, AdminEventPaths.authEditFlowPath(found.getId()), ResourceType.AUTH_FLOW);\n+            Assert.assertNull(findFlowByAlias(\"New Flow\", flows));\n+        } finally {\n+            response.close();\n+        }\n+        authMgmtResource.deleteFlow(testFlow.getId());\n+    }\n+\n+    @Test\n+    public void editExecutionFlowTest() {\n+        HashMap<String, String> params = new HashMap<>();\n+        List<AuthenticationExecutionInfoRepresentation> executionReps;\n+        //create new parent flow\n+        AuthenticationFlowRepresentation newFlow = newFlow(\"Parent-Flow\", \"This is a parent flow\", \"basic-flow\", true, false);\n+        createFlow(newFlow);\n+\n+        //create a child sub flow\n+        params.put(\"alias\", \"Child-Flow\");\n+        params.put(\"description\", \"This is a child flow\");\n+        params.put(\"provider\", \"registration-page-form\");\n+        params.put(\"type\", \"basic-flow\");\n+\n+        authMgmtResource.addExecutionFlow(\"Parent-Flow\", params);\n+        assertAdminEvents.assertEvent(REALM_NAME, OperationType.CREATE, AdminEventPaths.authAddExecutionFlowPath(\"Parent-Flow\"), params, ResourceType.AUTH_EXECUTION_FLOW);\n+\n+        //create another\n+        executionReps = authMgmtResource.getExecutions(\"Parent-Flow\");\n+\n+        params = new HashMap<>();\n+        params.put(\"alias\", \"Child-Flow\");\n+        params.put(\"description\", \"This is another child flow\");\n+        params.put(\"provider\", \"registration-page-form\");\n+        params.put(\"type\", \"basic-flow\");\n+\n+        try {\n+            authMgmtResource.addExecutionFlow(\"Parent-Flow\", params);\n+            Assert.fail(\"addExecutionFlow the alias already exist\");\n+        } catch (Exception expected) {\n+            // Expected\n+        }\n+\n+        AuthenticationExecutionInfoRepresentation found = executionReps.get(0);\n+        found.setDisplayName(\"Parent-Flow\");\n+\n+        Response response = authMgmtResource.updateExecutions(\"Parent-Flow\", found);\n+        try {\n+            Assert.assertEquals(\"updateFlow using the alias of existing flow should fail\", 409, response.getStatus());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 158}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMTU4MjcwMQ==", "bodyText": "It seems the NPE can happen on this line. This is probably the reason of some more failing tests. Probably some null check is needed here?", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r431582701", "createdAt": "2020-05-28T05:03:01Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/AuthenticationManagementResource.java", "diffHunk": "@@ -599,7 +618,34 @@ public void updateExecutions(@PathParam(\"flowAlias\") String flowAlias, Authentic\n             model.setRequirement(AuthenticationExecutionModel.Requirement.valueOf(rep.getRequirement()));\n             realm.updateAuthenticatorExecution(model);\n             adminEvent.operation(OperationType.UPDATE).resource(ResourceType.AUTH_EXECUTION).resourcePath(session.getContext().getUri()).representation(rep).success();\n+            return Response.accepted(flow).build();\n         }\n+\n+        AuthenticationFlowModel checkFlow = realm.getFlowByAlias(rep.getDisplayName());\n+\n+        //check if a flow with the same name already exist\n+        if (checkFlow != null) {\n+            //if only the description changed, the IDs of old and new are going to be the same\n+            if (!checkFlow.getDescription().equals(rep.getDescription()) && checkFlow.getId().equals(rep.getFlowId())) {\n+                checkFlow.setDescription(rep.getDescription());\n+                realm.updateAuthenticationFlow(checkFlow);\n+            } else {\n+                //Flow with that name already exists\n+                return ErrorResponse.exists(\"Flow alias name already exists\");\n+            }\n+        } else {\n+            //if the name changed\n+            checkFlow = realm.getAuthenticationFlowById(rep.getFlowId());\n+            checkFlow.setAlias(rep.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56"}, "originalPosition": 86}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ebc057e55e31c8d16a91bbbd2f708c399030ca56", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/ebc057e55e31c8d16a91bbbd2f708c399030ca56", "committedDate": "2020-05-27T15:31:17Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "f1ec3da62a6b8c91c208d589c60465c421dd0d73", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/f1ec3da62a6b8c91c208d589c60465c421dd0d73", "committedDate": "2020-06-01T17:35:02Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f1ec3da62a6b8c91c208d589c60465c421dd0d73", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/f1ec3da62a6b8c91c208d589c60465c421dd0d73", "committedDate": "2020-06-01T17:35:02Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "e3f12498a11eba85051f577581005d4ade0974b8", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/e3f12498a11eba85051f577581005d4ade0974b8", "committedDate": "2020-06-01T18:50:09Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3f12498a11eba85051f577581005d4ade0974b8", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/e3f12498a11eba85051f577581005d4ade0974b8", "committedDate": "2020-06-01T18:50:09Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/2fa4788c15732c043c42b05dd85b828d75138e2c", "committedDate": "2020-06-02T13:12:17Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzMjM1NTIy", "url": "https://github.com/keycloak/keycloak/pull/7109#pullrequestreview-423235522", "createdAt": "2020-06-03T05:50:09Z", "commit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTo1MDowOVrOGeM7gw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wM1QwNTo1MDozMlrOGeM72g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjMwNw==", "bodyText": "Maybe remove this comment?", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r434322307", "createdAt": "2020-06-03T05:50:09Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/AuthenticationManagementResource.java", "diffHunk": "@@ -599,7 +648,70 @@ public void updateExecutions(@PathParam(\"flowAlias\") String flowAlias, Authentic\n             model.setRequirement(AuthenticationExecutionModel.Requirement.valueOf(rep.getRequirement()));\n             realm.updateAuthenticatorExecution(model);\n             adminEvent.operation(OperationType.UPDATE).resource(ResourceType.AUTH_EXECUTION).resourcePath(session.getContext().getUri()).representation(rep).success();\n+            //return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjM1Mg==", "bodyText": "Maybe remove this comment?", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r434322352", "createdAt": "2020-06-03T05:50:19Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/AuthenticationManagementResource.java", "diffHunk": "@@ -599,7 +648,70 @@ public void updateExecutions(@PathParam(\"flowAlias\") String flowAlias, Authentic\n             model.setRequirement(AuthenticationExecutionModel.Requirement.valueOf(rep.getRequirement()));\n             realm.updateAuthenticatorExecution(model);\n             adminEvent.operation(OperationType.UPDATE).resource(ResourceType.AUTH_EXECUTION).resourcePath(session.getContext().getUri()).representation(rep).success();\n+            //return;\n+            return Response.accepted(flow).build();\n+        }\n+\n+        //executions can't have name and description updated\n+        if (rep.getAuthenticationFlow() == null) { return Response.accepted(flow).build();}\n+\n+        //check if updating a correct flow\n+        AuthenticationFlowModel checkFlow = realm.getAuthenticationFlowById(rep.getFlowId());\n+        if (checkFlow == null) {\n+            session.getTransactionManager().setRollbackOnly();\n+            throw new NotFoundException(\"Illegal execution\");\n+        }\n+\n+        //if a different flow with the same name does already exist, throw an exception\n+        if (realm.getFlowByAlias(rep.getDisplayName()) != null && !checkFlow.getAlias().equals(rep.getDisplayName())) {\n+            return ErrorResponse.exists(\"Flow alias name already exists\");\n+            //throw new BadRequestException(\"Name already exists\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c"}, "originalPosition": 118}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDMyMjM5NA==", "bodyText": "Maybe remove this comment?", "url": "https://github.com/keycloak/keycloak/pull/7109#discussion_r434322394", "createdAt": "2020-06-03T05:50:32Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/AuthenticationManagementResource.java", "diffHunk": "@@ -599,7 +648,70 @@ public void updateExecutions(@PathParam(\"flowAlias\") String flowAlias, Authentic\n             model.setRequirement(AuthenticationExecutionModel.Requirement.valueOf(rep.getRequirement()));\n             realm.updateAuthenticatorExecution(model);\n             adminEvent.operation(OperationType.UPDATE).resource(ResourceType.AUTH_EXECUTION).resourcePath(session.getContext().getUri()).representation(rep).success();\n+            //return;\n+            return Response.accepted(flow).build();\n+        }\n+\n+        //executions can't have name and description updated\n+        if (rep.getAuthenticationFlow() == null) { return Response.accepted(flow).build();}\n+\n+        //check if updating a correct flow\n+        AuthenticationFlowModel checkFlow = realm.getAuthenticationFlowById(rep.getFlowId());\n+        if (checkFlow == null) {\n+            session.getTransactionManager().setRollbackOnly();\n+            throw new NotFoundException(\"Illegal execution\");\n+        }\n+\n+        //if a different flow with the same name does already exist, throw an exception\n+        if (realm.getFlowByAlias(rep.getDisplayName()) != null && !checkFlow.getAlias().equals(rep.getDisplayName())) {\n+            return ErrorResponse.exists(\"Flow alias name already exists\");\n+            //throw new BadRequestException(\"Name already exists\");\n+        }\n+\n+        //if the name changed\n+        if (!checkFlow.getAlias().equals(rep.getDisplayName())) {\n+            checkFlow.setAlias(rep.getDisplayName());\n+        }\n+\n+        //check if the description changed\n+        if (!checkFlow.getDescription().equals(rep.getDescription())) {\n+            checkFlow.setDescription(rep.getDescription());\n+        }\n+\n+        //update the flow\n+        realm.updateAuthenticationFlow(checkFlow);\n+        adminEvent.operation(OperationType.UPDATE).resource(ResourceType.AUTH_EXECUTION).resourcePath(session.getContext().getUri()).representation(rep).success();\n+        return Response.accepted(flow).build();\n+\n+/*        AuthenticationFlowModel checkFlow = realm.getFlowByAlias(rep.getDisplayName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c"}, "originalPosition": 136}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fa4788c15732c043c42b05dd85b828d75138e2c", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/2fa4788c15732c043c42b05dd85b828d75138e2c", "committedDate": "2020-06-02T13:12:17Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "ace896996a1df84c6ab97b84f99681072e6d1e7b", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/ace896996a1df84c6ab97b84f99681072e6d1e7b", "committedDate": "2020-06-03T10:02:21Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "31f6cc08841c27246f0c1a71244483c6e3c25f8b", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/31f6cc08841c27246f0c1a71244483c6e3c25f8b", "committedDate": "2020-06-03T14:38:02Z", "message": "EYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ace896996a1df84c6ab97b84f99681072e6d1e7b", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/ace896996a1df84c6ab97b84f99681072e6d1e7b", "committedDate": "2020-06-03T10:02:21Z", "message": "KEYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}, "afterCommit": {"oid": "31f6cc08841c27246f0c1a71244483c6e3c25f8b", "author": {"user": {"login": "drichtarik", "name": "Denis Richt\u00e1rik"}}, "url": "https://github.com/keycloak/keycloak/commit/31f6cc08841c27246f0c1a71244483c6e3c25f8b", "committedDate": "2020-06-03T14:38:02Z", "message": "EYCLOAK-12741 Add name and description edit functionality to Authentication and Execution Flows"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MTI2ODMx", "url": "https://github.com/keycloak/keycloak/pull/7109#pullrequestreview-424126831", "createdAt": "2020-06-04T06:08:31Z", "commit": {"oid": "31f6cc08841c27246f0c1a71244483c6e3c25f8b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3092, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}