{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyNTM0ODc0", "number": 7220, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0NDowMFrOETHb-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo1MjoyMlrOEU9v9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg4NDgwMjUxOnYy", "diffSide": "RIGHT", "path": "server-spi/src/main/java/org/keycloak/models/credential/PasswordCredentialModel.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQwNjo0NDowMFrOG4qt3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxOToyOTo1NlrOG6TrbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3MzMwOA==", "bodyText": "Just for the sake of compatibility with other implementations, could we keep the constructor private and instead introduce other static method like for example:\npublic static PasswordCredentialModel createFromValues(String algorithm, byte[] salt, int hashIterations, String \nencodedPassword, MultivaluedHashMap<String, String> otherCredentialData,, MultivaluedHashMap<String, String> otherSecretData)\n\nThe current method signature \"createFromValues\" needs to be kept as well for the backwards compatibility, but it can just call the new method. Something like:\npublic static PasswordCredentialModel createFromValues(String algorithm, byte[] salt, int hashIterations, String encodedPassword) {\n    createFromValues(algorithm, salt, hashIterations, encodedPassword, Collections.emptyMap(), Collections.emptyMap());\n}", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r462073308", "createdAt": "2020-07-29T06:44:00Z", "author": {"login": "mposolda"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/PasswordCredentialModel.java", "diffHunk": "@@ -15,7 +15,7 @@\n     private final PasswordCredentialData credentialData;\n     private final PasswordSecretData secretData;\n \n-    private PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {\n+    public PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7127ffa48bbf7bccf447d38861bfea6159e0440c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjI1Nzg1NQ==", "bodyText": "@mposolda Yeah, you're right about the credential data. I was thinking about a separated and more general-purpose thing like what you mentioned before in regards to something like \"otherClaims\". And possibly avoid migration, etc.\nBut if you think we can reuse that column, that is fine.", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r462257855", "createdAt": "2020-07-29T12:24:32Z", "author": {"login": "pedroigor"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/PasswordCredentialModel.java", "diffHunk": "@@ -15,7 +15,7 @@\n     private final PasswordCredentialData credentialData;\n     private final PasswordSecretData secretData;\n \n-    private PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {\n+    public PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3MzMwOA=="}, "originalCommit": {"oid": "7127ffa48bbf7bccf447d38861bfea6159e0440c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzc5MzAwNA==", "bodyText": "I agree, we can move to a static factory + private constructor. The rename is also okay.\nI am not completely onboard that using multi-value hashmaps is a useful feature here, but if you strongly prefer it, it will serve the purpose I had envisioned. So yeah, I will add that as well.\nI think I will be able to do the updates either this weekend or early next week. :)", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r463793004", "createdAt": "2020-07-31T19:29:56Z", "author": {"login": "Norwae"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/PasswordCredentialModel.java", "diffHunk": "@@ -15,7 +15,7 @@\n     private final PasswordCredentialData credentialData;\n     private final PasswordSecretData secretData;\n \n-    private PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {\n+    public PasswordCredentialModel(PasswordCredentialData credentialData, PasswordSecretData secretData) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjA3MzMwOA=="}, "originalCommit": {"oid": "7127ffa48bbf7bccf447d38861bfea6159e0440c"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDE3NjA4OnYy", "diffSide": "RIGHT", "path": "server-spi/src/main/java/org/keycloak/models/credential/dto/PasswordSecretData.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo0OToyM1rOG7c42A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxNzoyMjozNFrOG7qIAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjQ3Mg==", "bodyText": "Could you lazily create the instance on the getter method and avoid creating this instance every time an instance is created? We are working on reducing footprint and small changes like will help.", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r464992472", "createdAt": "2020-08-04T11:49:23Z", "author": {"login": "pedroigor"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/dto/PasswordSecretData.java", "diffHunk": "@@ -26,9 +40,15 @@ public PasswordSecretData(@JsonProperty(\"value\") String value, @JsonProperty(\"sa\n         }\n     }\n \n+    /**\n+     * Default creator (Secret consists only of a value and a single salt)\n+     * @param value hash value\n+     * @param salt salt\n+     */\n     public PasswordSecretData(String value, byte[] salt) {\n         this.value = value;\n         this.salt = salt;\n+        this.additionalParameters = new MultivaluedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c267537b41902e3cad8f11b7068eb6603ead51"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0OTc4MQ==", "bodyText": "Doing so would require me to give up the final modifier on the fields (lazy creation), or alternatively allow the field to be null. Since all the explicitly-modeled fields are final in these types, I would prefer to not break this pattern (principle of least surprise).\nAgain, I will defer to your judgement here, but I at least wanted to raise the point.", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r465049781", "createdAt": "2020-08-04T13:28:20Z", "author": {"login": "Norwae"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/dto/PasswordSecretData.java", "diffHunk": "@@ -26,9 +40,15 @@ public PasswordSecretData(@JsonProperty(\"value\") String value, @JsonProperty(\"sa\n         }\n     }\n \n+    /**\n+     * Default creator (Secret consists only of a value and a single salt)\n+     * @param value hash value\n+     * @param salt salt\n+     */\n     public PasswordSecretData(String value, byte[] salt) {\n         this.value = value;\n         this.salt = salt;\n+        this.additionalParameters = new MultivaluedHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjQ3Mg=="}, "originalCommit": {"oid": "04c267537b41902e3cad8f11b7068eb6603ead51"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTIwOTM0Nw==", "bodyText": "I prefer the lazy creation or maybe you can just initialize as an empty collection when the instance is created using this constructor?", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r465209347", "createdAt": "2020-08-04T17:22:34Z", "author": {"login": "pedroigor"}, "path": "server-spi/src/main/java/org/keycloak/models/credential/dto/PasswordSecretData.java", "diffHunk": "@@ -26,9 +40,15 @@ public PasswordSecretData(@JsonProperty(\"value\") String value, @JsonProperty(\"sa\n         }\n     }\n \n+    /**\n+     * Default creator (Secret consists only of a value and a single salt)\n+     * @param value hash value\n+     * @param salt salt\n+     */\n     public PasswordSecretData(String value, byte[] salt) {\n         this.value = value;\n         this.salt = salt;\n+        this.additionalParameters = new MultivaluedHashMap<>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MjQ3Mg=="}, "originalCommit": {"oid": "04c267537b41902e3cad8f11b7068eb6603ead51"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDE4Njc2OnYy", "diffSide": "LEFT", "path": "themes/src/main/resources/theme/keycloak/common/resources/node_modules/rcue/dist/img/git-logo.svg", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo1MjoyMlrOG7c_Jw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMzoyNjoyOFrOG7gTxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NDA4Nw==", "bodyText": "Can we remove this change from this PR? It looks OK, but I would prefer making theme related changes in a separate PR. Otherwise, we are going to need to include a few more people to the review :)", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r464994087", "createdAt": "2020-08-04T11:52:22Z", "author": {"login": "pedroigor"}, "path": "themes/src/main/resources/theme/keycloak/common/resources/node_modules/rcue/dist/img/git-logo.svg", "diffHunk": "@@ -1,21 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04c267537b41902e3cad8f11b7068eb6603ead51"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTA0ODUxOA==", "bodyText": "That was actually a mistake - I have restored it. Thanks for the catch. \ud83d\udc4d", "url": "https://github.com/keycloak/keycloak/pull/7220#discussion_r465048518", "createdAt": "2020-08-04T13:26:28Z", "author": {"login": "Norwae"}, "path": "themes/src/main/resources/theme/keycloak/common/resources/node_modules/rcue/dist/img/git-logo.svg", "diffHunk": "@@ -1,21 +0,0 @@\n-<?xml version=\"1.0\" encoding=\"utf-8\"?>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NDA4Nw=="}, "originalCommit": {"oid": "04c267537b41902e3cad8f11b7068eb6603ead51"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3602, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}