{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMDQzNTkw", "number": 7146, "title": "[KEYCLOAK-13202] Reset password redirects to account client", "bodyText": "JIRA: KEYCLOAK-13202", "createdAt": "2020-06-08T10:44:35Z", "url": "https://github.com/keycloak/keycloak/pull/7146", "merged": true, "mergeCommit": {"oid": "ec9bf6206e3d937a974ac84b9618c00823edc884"}, "closed": true, "closedAt": "2020-06-18T11:08:37Z", "author": {"login": "mabartos"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcpUoSagFqTQyNjQ5NzUyMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcscdr5gFqTQzMzE3NjgwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI2NDk3NTIy", "url": "https://github.com/keycloak/keycloak/pull/7146#pullrequestreview-426497522", "createdAt": "2020-06-08T18:18:39Z", "commit": {"oid": "dffb83106baee9f8db28290c35658882f6945001"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxODo0MFrOGgqc9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxODo0MFrOGgqc9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMzE1OA==", "bodyText": "I believe the lines 409-411 should be removed and line 410 should be moved after line 401 - so that redirectUri is set to the redirectUri of account client just in case that it corresponds to account client? Probably something like this:\n       if (client == null) {\n            client = SystemClientUtil.getSystemClient(realm);\n            redirectUri = Urls.accountBase(session.getContext().getUri().getBaseUri()).path(\"/\").build(realm.getName()).toString();\n        }\n\nWDYT?", "url": "https://github.com/keycloak/keycloak/pull/7146#discussion_r436903158", "createdAt": "2020-06-08T18:18:40Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/LoginActionsService.java", "diffHunk": "@@ -380,31 +379,43 @@ public Response resetCredentialsGET(@QueryParam(AUTH_SESSION_ID) String authSess\n             if (!realm.isResetPasswordAllowed()) {\n                 event.event(EventType.RESET_PASSWORD);\n                 event.error(Errors.NOT_ALLOWED);\n-                return ErrorPage.error(session, authSession, Response.Status.BAD_REQUEST, Messages.RESET_CREDENTIAL_NOT_ALLOWED);\n+                return ErrorPage.error(session, null, Response.Status.BAD_REQUEST, Messages.RESET_CREDENTIAL_NOT_ALLOWED);\n \n             }\n-            authSession = createAuthenticationSessionForClient();\n+            authSession = createAuthenticationSessionForClient(clientId);\n             return processResetCredentials(false, null, authSession, null);\n         }\n \n         event.event(EventType.RESET_PASSWORD);\n         return resetCredentials(authSessionId, code, execution, clientId, tabId);\n     }\n \n-    AuthenticationSessionModel createAuthenticationSessionForClient()\n-      throws UriBuilderException, IllegalArgumentException {\n+    AuthenticationSessionModel createAuthenticationSessionForClient(String clientID)\n+            throws UriBuilderException, IllegalArgumentException {\n         AuthenticationSessionModel authSession;\n \n-        // set up the account service as the endpoint to call.\n-        ClientModel client = SystemClientUtil.getSystemClient(realm);\n+        ClientModel client = session.realms().getClientByClientId(clientID, realm);\n+        String redirectUri = null;\n+\n+        if (client == null) {\n+            client = SystemClientUtil.getSystemClient(realm);\n+        } else {\n+            redirectUri = client.getRedirectUris()\n+                    .stream()\n+                    .findFirst()\n+                    .orElse(null);\n+        }\n+\n+        if (redirectUri == null) {\n+            redirectUri = Urls.accountBase(session.getContext().getUri().getBaseUri()).path(\"/\").build(realm.getName()).toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dffb83106baee9f8db28290c35658882f6945001"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dffb83106baee9f8db28290c35658882f6945001", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/dffb83106baee9f8db28290c35658882f6945001", "committedDate": "2020-06-08T10:38:40Z", "message": "[KEYCLOAK-13202] Reset password redirects to account client"}, "afterCommit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/0a0a26da9578808e2057785345ab8cdd79035a6a", "committedDate": "2020-06-16T12:18:25Z", "message": "[KEYCLOAK-13202] Reset password redirects to account client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMyMDgxODYz", "url": "https://github.com/keycloak/keycloak/pull/7146#pullrequestreview-432081863", "createdAt": "2020-06-17T06:03:07Z", "commit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjowMzowN1rOGk2yWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xN1QwNjoxOTo0NVrOGk3JGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTI5OTU0Ng==", "bodyText": "I see there is existing method RedirectUtils.resolveValidRedirects(KeycloakSession session, String rootUrl, Set<String> validRedirects)  , which seems to already quite similar thing you introduced here? Will it be possible to use the existing method as much as possible to avoid some duplicated code logic?", "url": "https://github.com/keycloak/keycloak/pull/7146#discussion_r441299546", "createdAt": "2020-06-17T06:03:07Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/protocol/oidc/utils/RedirectUtils.java", "diffHunk": "@@ -195,4 +196,27 @@ private static String getSingleValidRedirectUri(Collection<String> validRedirect\n         }\n         return validRedirect;\n     }\n+\n+    public static String getValidRedirectUriWithRootUrl(ClientModel client) {\n+        return (client != null) ? getValidRedirectUriWithRootUrl(client.getRootUrl(), client.getRedirectUris()) : null;\n+    }\n+\n+    public static String getValidRedirectUriWithRootUrl(String rootUrl, Collection<String> redirectUris) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwMzcyMQ==", "bodyText": "Is it possible to test the scenario with 2 browsers (driver and driver2 variables already available inside this test) instead of the different browser tabs as we discussed on the call? It seems to me the test with more browser tabs is quite error prone and there might be issues/instabilities for various browsers (which will occur especially in the environments like jenkins etc)", "url": "https://github.com/keycloak/keycloak/pull/7146#discussion_r441303721", "createdAt": "2020-06-17T06:15:14Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/ResetPasswordTest.java", "diffHunk": "@@ -1084,4 +1086,140 @@ public void failResetPasswordServiceAccount() {\n         loginPage.assertCurrent();\n         assertEquals(\"Invalid username or password.\", errorPage.getError());\n     }\n+\n+    @Test\n+    public void resetPasswordLinkNewTabAndProperRedirectAccount() throws IOException {\n+        final String REQUIRED_URI = OAuthClient.AUTH_SERVER_ROOT + \"/realms/test/account/applications\";\n+        final String REDIRECT_URI = getAccountRedirectUrl() + \"?path=applications\";\n+        final String CLIENT_ID = \"account\";\n+\n+        try (BrowserTabUtil tabUtil = BrowserTabUtil.getInstanceAndSetEnv(driver)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTMwNTM2OQ==", "bodyText": "I suggest to test the scenario with different client than the admin console. Any test with the admin console adds the potential for instabilities and issues and needs of the workarounds like this :) How about the default client \"test-client\" , which uses the AppPage? For example see the ResetPasswordTest.resetPasswordWithLengthPasswordPolicy() or some other tests used on many places inside the testsuite.", "url": "https://github.com/keycloak/keycloak/pull/7146#discussion_r441305369", "createdAt": "2020-06-17T06:19:45Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/ResetPasswordTest.java", "diffHunk": "@@ -1084,4 +1086,140 @@ public void failResetPasswordServiceAccount() {\n         loginPage.assertCurrent();\n         assertEquals(\"Invalid username or password.\", errorPage.getError());\n     }\n+\n+    @Test\n+    public void resetPasswordLinkNewTabAndProperRedirectAccount() throws IOException {\n+        final String REQUIRED_URI = OAuthClient.AUTH_SERVER_ROOT + \"/realms/test/account/applications\";\n+        final String REDIRECT_URI = getAccountRedirectUrl() + \"?path=applications\";\n+        final String CLIENT_ID = \"account\";\n+\n+        try (BrowserTabUtil tabUtil = BrowserTabUtil.getInstanceAndSetEnv(driver)) {\n+            assertThat(tabUtil.getCountOfTabs(), Matchers.is(1));\n+\n+            driver.navigate().to(REQUIRED_URI);\n+            resetPasswordTwiceInNewTab(defaultUser, CLIENT_ID, false, REDIRECT_URI, REQUIRED_URI);\n+            assertThat(driver.getTitle(), Matchers.equalTo(\"Keycloak Account Management\"));\n+\n+            oauth.openLogout();\n+\n+            driver.navigate().to(REQUIRED_URI);\n+            resetPasswordTwiceInNewTab(defaultUser, CLIENT_ID, true, REDIRECT_URI, REQUIRED_URI);\n+            assertThat(driver.getTitle(), Matchers.equalTo(\"Keycloak Account Management\"));\n+        }\n+    }\n+\n+    @Test\n+    public void resetPasswordLinkNewTabAndProperRedirectAdminConsole() throws IOException {\n+        final String REDIRECT_URI = OAuthClient.AUTH_SERVER_ROOT + \"/admin/test/console/\";\n+        final String CLIENT_ID = \"security-admin-console\";\n+\n+        // It's necessary to take this here before redirecting to Admin Console.\n+        try (BrowserTabUtil tabUtil = BrowserTabUtil.getInstanceAndSetEnv(driver)) {\n+            assertThat(tabUtil.getCountOfTabs(), Matchers.is(1));\n+            driver.navigate().to(REDIRECT_URI);\n+\n+            // HtmlUnit has problem with redirecting immediately to Security Console.\n+            if (driver instanceof HtmlUnitDriver)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a"}, "originalPosition": 118}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5c20fb7433bf58f2faf85a1b58d31a489b73436c", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/5c20fb7433bf58f2faf85a1b58d31a489b73436c", "committedDate": "2020-06-17T12:23:00Z", "message": "[KEYCLOAK-13202] Reset password redirects to account client"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a0a26da9578808e2057785345ab8cdd79035a6a", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/0a0a26da9578808e2057785345ab8cdd79035a6a", "committedDate": "2020-06-16T12:18:25Z", "message": "[KEYCLOAK-13202] Reset password redirects to account client"}, "afterCommit": {"oid": "5c20fb7433bf58f2faf85a1b58d31a489b73436c", "author": {"user": {"login": "mabartos", "name": "Martin Barto\u0161"}}, "url": "https://github.com/keycloak/keycloak/commit/5c20fb7433bf58f2faf85a1b58d31a489b73436c", "committedDate": "2020-06-17T12:23:00Z", "message": "[KEYCLOAK-13202] Reset password redirects to account client"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMTc2ODA1", "url": "https://github.com/keycloak/keycloak/pull/7146#pullrequestreview-433176805", "createdAt": "2020-06-18T11:08:31Z", "commit": {"oid": "5c20fb7433bf58f2faf85a1b58d31a489b73436c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2935, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}