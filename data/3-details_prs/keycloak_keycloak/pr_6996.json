{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MjQ2MjA4", "number": 6996, "title": "KEYCLOAK-13916 Refactor SAML metadata generation to use the SAMLMetadataWriter class", "bodyText": "Changes the current IdP/SP metadata generation logic, based on string manipulations, to use the more robust SAMLMetadataWriter class. The generated XML is functionally the same as before.\nSmall notes:\n\nI had to add a couple of constants to the JBossSAMLURIConstants class. Are those really useful? Does Keycloak client really support SAML1/SECEXT protocols?\nI had to fix some minor errors in the SAMLMetadataWriter class, i.e.:\na. Attribute protocolSupportEnumeration in SPSSODescriptor: was rendering only the first protocol of the supplied list\nb. SPSSODescriptor did not output KeyDescriptors\nc. IDPSSODescriptor-generated files were not compliant with the SAML Metadata XSD (the NameIDFormat tag must be placed after the SingleLogout elements)\nI had to change the value of the constant FALLBACK_ERROR_URL_STRING to make it a valid URI (replaced spaces with underscores)\nThe previous generated XMLs were indented - after this PR they no longer are. I haven't been able to find a way to set the XMLStreamWriter class to pretty print. Suggestions welcome!\nThe tests have been updated and are all passing (after pulling in #6993).", "createdAt": "2020-04-22T12:04:58Z", "url": "https://github.com/keycloak/keycloak/pull/6996", "merged": true, "mergeCommit": {"oid": "d6934c64fddc073540f59913cb8f79bdbcf039f6"}, "closed": true, "closedAt": "2020-07-09T07:39:37Z", "author": {"login": "lscorcia"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcctJRYgBqjMyODk0MDYxMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABczKD4zgFqTQ0NTM2Mjc0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c5dd5d2ae0a319cc970ad436fb1f6475a3c00ac0", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/c5dd5d2ae0a319cc970ad436fb1f6475a3c00ac0", "committedDate": "2020-04-22T23:58:14Z", "message": "Prevent crash when NameIDFormat is null - can happen in tests because SAML Metadata import does not import NameIDFormat and a default isn't set"}, "afterCommit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad", "committedDate": "2020-04-30T13:29:14Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMzk1Mzc4", "url": "https://github.com/keycloak/keycloak/pull/6996#pullrequestreview-442395378", "createdAt": "2020-07-03T12:57:02Z", "commit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMjo1ODoyMVrOGsvnkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxMzowMTozNlrOGsvs6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MDcwNA==", "bodyText": "Please do not use star imports, import explicitly each class", "url": "https://github.com/keycloak/keycloak/pull/6996#discussion_r449570704", "createdAt": "2020-07-03T12:58:21Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SPMetadataDescriptor.java", "diffHunk": "@@ -17,59 +17,108 @@\n \n package org.keycloak.saml;\n \n+import org.keycloak.dom.saml.v2.metadata.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MTQ3MA==", "bodyText": "Please avoid star imports", "url": "https://github.com/keycloak/keycloak/pull/6996#discussion_r449571470", "createdAt": "2020-07-03T13:00:07Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/protocol/saml/IDPMetadataDescriptor.java", "diffHunk": "@@ -0,0 +1,125 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.protocol.saml;\n+\n+import org.keycloak.dom.saml.v2.metadata.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTU3MjA3NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (logoutUrl == null || assertionUrl.trim().isEmpty()) logoutUrl = client.getManagementUrl();\n          \n          \n            \n                        if (logoutUrl == null || assertionUrl.trim().isEmpty()) logoutUrl = FALLBACK_ERROR_URL_STRING;\n          \n          \n            \n                        if (logoutUrl == null || logoutUrl.trim().isEmpty()) logoutUrl = client.getManagementUrl();\n          \n          \n            \n                        if (logoutUrl == null || logoutUrl.trim().isEmpty()) logoutUrl = FALLBACK_ERROR_URL_STRING;", "url": "https://github.com/keycloak/keycloak/pull/6996#discussion_r449572075", "createdAt": "2020-07-03T13:01:36Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/protocol/saml/installation/SamlSPDescriptorClientInstallation.java", "diffHunk": "@@ -28,45 +30,55 @@\n import org.keycloak.saml.SPMetadataDescriptor;\n import org.keycloak.saml.common.constants.JBossSAMLURIConstants;\n \n+import org.w3c.dom.Element;\n+\n import javax.ws.rs.core.MediaType;\n import javax.ws.rs.core.Response;\n import java.net.URI;\n-import org.keycloak.dom.saml.v2.metadata.KeyTypes;\n+import java.util.Arrays;\n+\n \n /**\n  * @author <a href=\"mailto:bill@burkecentral.com\">Bill Burke</a>\n  * @version $Revision: 1 $\n  */\n public class SamlSPDescriptorClientInstallation implements ClientInstallationProvider {\n \n+    protected static final Logger logger = Logger.getLogger(SamlSPDescriptorClientInstallation.class);\n+\n     public static final String SAML_CLIENT_INSTALATION_SP_DESCRIPTOR = \"saml-sp-descriptor\";\n-    private static final String FALLBACK_ERROR_URL_STRING = \"ERROR:ENDPOINT NOT SET\";\n+    private static final String FALLBACK_ERROR_URL_STRING = \"ERROR:ENDPOINT_NOT_SET\";\n \n     public static String getSPDescriptorForClient(ClientModel client) {\n-        SamlClient samlClient = new SamlClient(client);\n-        String assertionUrl;\n-        String logoutUrl;\n-        String binding;\n-        if (samlClient.forcePostBinding()) {\n-            assertionUrl = client.getAttribute(SamlProtocol.SAML_ASSERTION_CONSUMER_URL_POST_ATTRIBUTE);\n-            logoutUrl = client.getAttribute(SamlProtocol.SAML_SINGLE_LOGOUT_SERVICE_URL_POST_ATTRIBUTE);\n-            binding = JBossSAMLURIConstants.SAML_HTTP_POST_BINDING.get();\n-        } else { //redirect binding\n-            assertionUrl = client.getAttribute(SamlProtocol.SAML_ASSERTION_CONSUMER_URL_REDIRECT_ATTRIBUTE);\n-            logoutUrl = client.getAttribute(SamlProtocol.SAML_SINGLE_LOGOUT_SERVICE_URL_REDIRECT_ATTRIBUTE);\n-            binding = JBossSAMLURIConstants.SAML_HTTP_REDIRECT_BINDING.get();\n+        try {\n+            SamlClient samlClient = new SamlClient(client);\n+            String assertionUrl;\n+            String logoutUrl;\n+            URI binding;\n+            if (samlClient.forcePostBinding()) {\n+                assertionUrl = client.getAttribute(SamlProtocol.SAML_ASSERTION_CONSUMER_URL_POST_ATTRIBUTE);\n+                logoutUrl = client.getAttribute(SamlProtocol.SAML_SINGLE_LOGOUT_SERVICE_URL_POST_ATTRIBUTE);\n+                binding = JBossSAMLURIConstants.SAML_HTTP_POST_BINDING.getUri();\n+            } else { //redirect binding\n+                assertionUrl = client.getAttribute(SamlProtocol.SAML_ASSERTION_CONSUMER_URL_REDIRECT_ATTRIBUTE);\n+                logoutUrl = client.getAttribute(SamlProtocol.SAML_SINGLE_LOGOUT_SERVICE_URL_REDIRECT_ATTRIBUTE);\n+                binding = JBossSAMLURIConstants.SAML_HTTP_REDIRECT_BINDING.getUri();\n+            }\n+            if (assertionUrl == null || assertionUrl.trim().isEmpty()) assertionUrl = client.getManagementUrl();\n+            if (assertionUrl == null || assertionUrl.trim().isEmpty()) assertionUrl = FALLBACK_ERROR_URL_STRING;\n+            if (logoutUrl == null || assertionUrl.trim().isEmpty()) logoutUrl = client.getManagementUrl();\n+            if (logoutUrl == null || assertionUrl.trim().isEmpty()) logoutUrl = FALLBACK_ERROR_URL_STRING;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad"}, "originalPosition": 65}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/d0fb5a1aabef72cb568eef484f6a4f6cf533e6ad", "committedDate": "2020-04-30T13:29:14Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}, "afterCommit": {"oid": "2fddb9dac4358601c2bb2c596073bd6ee0945339", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/2fddb9dac4358601c2bb2c596073bd6ee0945339", "committedDate": "2020-07-03T13:53:04Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cb301c212c1ad78f83ad613287c2eea2bd3b93b", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/5cb301c212c1ad78f83ad613287c2eea2bd3b93b", "committedDate": "2020-07-03T16:13:40Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2fddb9dac4358601c2bb2c596073bd6ee0945339", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/2fddb9dac4358601c2bb2c596073bd6ee0945339", "committedDate": "2020-07-03T13:53:04Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}, "afterCommit": {"oid": "5cb301c212c1ad78f83ad613287c2eea2bd3b93b", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/5cb301c212c1ad78f83ad613287c2eea2bd3b93b", "committedDate": "2020-07-03T16:13:40Z", "message": "Refactor SAML metadata generation to use the SAMLMetadataWriter class"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ1MzYyNzQz", "url": "https://github.com/keycloak/keycloak/pull/6996#pullrequestreview-445362743", "createdAt": "2020-07-09T07:39:31Z", "commit": {"oid": "5cb301c212c1ad78f83ad613287c2eea2bd3b93b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3158, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}