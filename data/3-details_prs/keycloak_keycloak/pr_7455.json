{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1MzU5MTMx", "number": 7455, "title": "KEYCLOAK-15770 Skip creating session for docker protocol authentication", "bodyText": "@stianst @hmlnarik @pedroigor The PR tries to skip creating of user/client sessions after successful docker protocol authentication as it seems this is not needed. Hopefully it can be re-used for skip creating of sessions in other use-cases (Especially OAuth2 Client Credentials Grant. But maybe even some more like SAML ECP?).\nI've tried to use the approach that userSession/clientSession are still created as objects, but those are just \"transient\" sessions, which are not saved to infinispan cache at all. They are valid just for the scope of current request (current KeycloakSession lifecycle). This makes it easier to work with protocolMappers SPI and other parts of the code, which rely on the fact that userSession/clientSession objects exist and avoid some NPE and other similar issues...\nWDYT? Do you please have a chance to review?", "createdAt": "2020-09-30T08:59:04Z", "url": "https://github.com/keycloak/keycloak/pull/7455", "merged": true, "mergeCommit": {"oid": "ff05072c164d95e5084fba7d556820d1ccbe7f31"}, "closed": true, "closedAt": "2020-10-09T05:53:27Z", "author": {"login": "mposolda"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdOlQAqgFqTUwMTA5NTU5Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQgQoUgFqTUwNDcwMjg0MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAxMDk1NTkz", "url": "https://github.com/keycloak/keycloak/pull/7455#pullrequestreview-501095593", "createdAt": "2020-10-02T12:36:10Z", "commit": {"oid": "5a3cd031a984a86125bc5a5b2ae88bc4ce47053b"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5a3cd031a984a86125bc5a5b2ae88bc4ce47053b", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/5a3cd031a984a86125bc5a5b2ae88bc4ce47053b", "committedDate": "2020-09-30T08:52:50Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}, "afterCommit": {"oid": "a53dc0fa9923f4a1a37b999c9d5bd947918ffb1d", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/a53dc0fa9923f4a1a37b999c9d5bd947918ffb1d", "committedDate": "2020-10-05T10:07:01Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a53dc0fa9923f4a1a37b999c9d5bd947918ffb1d", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/a53dc0fa9923f4a1a37b999c9d5bd947918ffb1d", "committedDate": "2020-10-05T10:07:01Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}, "afterCommit": {"oid": "c815f1b45a7fbf9b923e467cd26156ae28d58068", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/c815f1b45a7fbf9b923e467cd26156ae28d58068", "committedDate": "2020-10-05T21:06:14Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/16e1ca8f5bf6e4f423842217feb6ea67fad08516", "committedDate": "2020-10-06T10:21:17Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c815f1b45a7fbf9b923e467cd26156ae28d58068", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/c815f1b45a7fbf9b923e467cd26156ae28d58068", "committedDate": "2020-10-05T21:06:14Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}, "afterCommit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/16e1ca8f5bf6e4f423842217feb6ea67fad08516", "committedDate": "2020-10-06T10:21:17Z", "message": "KEYCLOAK-15770 Skip creating session for docker protocol authentication"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0MDI2MzM0", "url": "https://github.com/keycloak/keycloak/pull/7455#pullrequestreview-504026334", "createdAt": "2020-10-07T15:50:33Z", "commit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1MDozM1rOHd6Eqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo1MDozM1rOHd6Eqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTEyMjIxOQ==", "bodyText": "Do we really want to push whatever comes from the request to the session notes? Does not look safe for me ...\nI think that ideally, we should have some switch to enable/disable this on a per-flow basis or have a Transient Session Authenticator that always set this note to indicate whether or not sessions for that flow should be transient.", "url": "https://github.com/keycloak/keycloak/pull/7455#discussion_r501122219", "createdAt": "2020-10-07T15:50:33Z", "author": {"login": "pedroigor"}, "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/forms/SetClientNoteAuthenticator.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ *\n+ */\n+\n+package org.keycloak.testsuite.forms;\n+\n+import java.util.List;\n+\n+import javax.ws.rs.core.MultivaluedMap;\n+\n+import org.jboss.logging.Logger;\n+import org.keycloak.Config;\n+import org.keycloak.authentication.AuthenticationFlowContext;\n+import org.keycloak.authentication.Authenticator;\n+import org.keycloak.authentication.AuthenticatorFactory;\n+import org.keycloak.models.AuthenticationExecutionModel;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.KeycloakSessionFactory;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.UserModel;\n+import org.keycloak.provider.ProviderConfigProperty;\n+import org.keycloak.sessions.AuthenticationSessionModel;\n+\n+/**\n+ * @author <a href=\"mailto:mposolda@redhat.com\">Marek Posolda</a>\n+ */\n+public class SetClientNoteAuthenticator implements Authenticator, AuthenticatorFactory {\n+\n+    protected static final Logger logger = Logger.getLogger(SetClientNoteAuthenticator.class);\n+\n+    public static final String PROVIDER_ID = \"set-client-note-authenticator\";\n+\n+    // Query parameters of this name will be used to save the client note to authentication session\n+    public static final String PREFIX = \"note-\";\n+\n+    @Override\n+    public void authenticate(AuthenticationFlowContext context) {\n+        MultivaluedMap<String, String> inputData = context.getHttpRequest().getDecodedFormParameters();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NTc0NTg1", "url": "https://github.com/keycloak/keycloak/pull/7455#pullrequestreview-504574585", "createdAt": "2020-10-08T09:04:15Z", "commit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA0NzAyODQx", "url": "https://github.com/keycloak/keycloak/pull/7455#pullrequestreview-504702841", "createdAt": "2020-10-08T11:55:10Z", "commit": {"oid": "16e1ca8f5bf6e4f423842217feb6ea67fad08516"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3445, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}