{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NjYzMDQz", "number": 7376, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxODowNlrOEfehOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToyNjoyN1rOEhlnKw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAxNDQxMzM2OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/account/SessionRestServiceTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxODowNlrOHLxXng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxNDoxODowNlrOHLxXng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjEwNTI0Ng==", "bodyText": "A more robust way would probably be something like driver instanceof HtmlUnitDriver. But since this is really just a nit pick and it's already merged in -prod repo, let's leave it this way to keep it consistent. ;)", "url": "https://github.com/keycloak/keycloak/pull/7376#discussion_r482105246", "createdAt": "2020-09-02T14:18:06Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/account/SessionRestServiceTest.java", "diffHunk": "@@ -168,14 +173,17 @@ public void testGetDevicesResponse() throws Exception {\n         List<ClientRepresentation> clients = session.getClients();\n         assertEquals(2, clients.size());\n         assertThat(session.getClients(), Matchers.hasItem(Matchers.hasProperty(\"clientId\",\n-                Matchers.anyOf(Matchers.is(\"public-client-0\"), Matchers.is(\"public-client-1\")))));\n+                anyOf(Matchers.is(\"public-client-0\"), Matchers.is(\"public-client-1\")))));\n         assertThat(session.getClients(), Matchers.hasItem(Matchers.hasProperty(\"clientName\",\n-                Matchers.anyOf(Matchers.is(\"Public Client 0\"), Matchers.is(\"Public Client 1\")))));\n+                anyOf(Matchers.is(\"Public Client 0\"), Matchers.is(\"Public Client 1\")))));\n     }\n \n     @Test\n     public void testGetDevicesSessions() throws Exception {\n         ContainerAssume.assumeAuthServerUndertow();\n+        assumeTrue(\"Browser must be htmlunit. Otherwise we are not able to set desired BrowserHeaders\",\n+                System.getProperty(\"browser\").equals(\"htmlUnit\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc537c54a68cb64bc443f97813849899ab8d79"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNjU0Njk5OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/headers/DefaultSecurityHeadersProvider.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwOToyNjoyN1rOHO-zPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQwNjoyMToyOFrOHT_kXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ3MTAzOQ==", "bodyText": "This change will mean we don't add headers at all if the realm is missing headers", "url": "https://github.com/keycloak/keycloak/pull/7376#discussion_r485471039", "createdAt": "2020-09-09T09:26:27Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/headers/DefaultSecurityHeadersProvider.java", "diffHunk": "@@ -44,7 +48,7 @@ public DefaultSecurityHeadersProvider(KeycloakSession session) {\n         if (realm != null) {\n             headerValues = realm.getBrowserSecurityHeaders();\n         } else {\n-            headerValues = BrowserSecurityHeaders.defaultHeaders;\n+            headerValues = Collections.emptyMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4fc537c54a68cb64bc443f97813849899ab8d79"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTUwMzc4Nw==", "bodyText": "We will. headerValues map is only for values from the realm now. if the map is empty a default value will be used for each header. See https://github.com/keycloak/keycloak/pull/7376/files#diff-a8f44e2e22dfdd252505677da0e5c34aR129", "url": "https://github.com/keycloak/keycloak/pull/7376#discussion_r485503787", "createdAt": "2020-09-09T10:22:07Z", "author": {"login": "mhajas"}, "path": "services/src/main/java/org/keycloak/headers/DefaultSecurityHeadersProvider.java", "diffHunk": "@@ -44,7 +48,7 @@ public DefaultSecurityHeadersProvider(KeycloakSession session) {\n         if (realm != null) {\n             headerValues = realm.getBrowserSecurityHeaders();\n         } else {\n-            headerValues = BrowserSecurityHeaders.defaultHeaders;\n+            headerValues = Collections.emptyMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ3MTAzOQ=="}, "originalCommit": {"oid": "f4fc537c54a68cb64bc443f97813849899ab8d79"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDcyNjQ5Mw==", "bodyText": "Of course, for some reason I was thinking that was used to loop over what headers to add ;)", "url": "https://github.com/keycloak/keycloak/pull/7376#discussion_r490726493", "createdAt": "2020-09-18T06:21:28Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/headers/DefaultSecurityHeadersProvider.java", "diffHunk": "@@ -44,7 +48,7 @@ public DefaultSecurityHeadersProvider(KeycloakSession session) {\n         if (realm != null) {\n             headerValues = realm.getBrowserSecurityHeaders();\n         } else {\n-            headerValues = BrowserSecurityHeaders.defaultHeaders;\n+            headerValues = Collections.emptyMap();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTQ3MTAzOQ=="}, "originalCommit": {"oid": "f4fc537c54a68cb64bc443f97813849899ab8d79"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3405, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}