{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwOTEwOTg1", "number": 7437, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo1MTo1OVrOEpuMaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToxOTo0NFrOE2t8kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTgzOTE1OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo1MTo1OVrOHbkM3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxODoxNDoxNVrOHeqvQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2NjcxOQ==", "bodyText": "This is not in line with https://tools.ietf.org/html/rfc3986#section-2.2 anymore. Is this intended? If so, needs to be justified in the comment above", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r498666719", "createdAt": "2020-10-02T07:51:59Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -19,17 +19,20 @@\n import javax.ws.rs.BadRequestException;\n import org.jboss.logging.Logger;\n \n+import java.util.Set;\n+\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {\n     protected static final Logger logger = Logger.getLogger(ReservedCharValidator.class);\n     \n     // https://tools.ietf.org/html/rfc3986#section-2.2\n-    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"[\", \"@\", \"!\", \"$\", \n+    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"@\", \"!\", \"$\",\n                                                    \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", \n-                                                   \"]\", \"[\", \"\\\\\" };\n+                                                   \"]\", \"[\", \"\\\\\", \"{\", \"}\", \"%\" };", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddcbb0f6532893512aa9ac236ee6c644dccc49d5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY5MjU5NA==", "bodyText": "Thank you for your comments, I added there the comment with justification and also changed the Set into Iterable.", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r498692594", "createdAt": "2020-10-02T08:44:48Z", "author": {"login": "lhanusov"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -19,17 +19,20 @@\n import javax.ws.rs.BadRequestException;\n import org.jboss.logging.Logger;\n \n+import java.util.Set;\n+\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {\n     protected static final Logger logger = Logger.getLogger(ReservedCharValidator.class);\n     \n     // https://tools.ietf.org/html/rfc3986#section-2.2\n-    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"[\", \"@\", \"!\", \"$\", \n+    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"@\", \"!\", \"$\",\n                                                    \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", \n-                                                   \"]\", \"[\", \"\\\\\" };\n+                                                   \"]\", \"[\", \"\\\\\", \"{\", \"}\", \"%\" };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2NjcxOQ=="}, "originalCommit": {"oid": "ddcbb0f6532893512aa9ac236ee6c644dccc49d5"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxOTU1NA==", "bodyText": "I wonder if adding those three characters could break things for existing users?", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r501919554", "createdAt": "2020-10-08T18:14:15Z", "author": {"login": "ssilvert"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -19,17 +19,20 @@\n import javax.ws.rs.BadRequestException;\n import org.jboss.logging.Logger;\n \n+import java.util.Set;\n+\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {\n     protected static final Logger logger = Logger.getLogger(ReservedCharValidator.class);\n     \n     // https://tools.ietf.org/html/rfc3986#section-2.2\n-    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"[\", \"@\", \"!\", \"$\", \n+    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"@\", \"!\", \"$\",\n                                                    \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", \n-                                                   \"]\", \"[\", \"\\\\\" };\n+                                                   \"]\", \"[\", \"\\\\\", \"{\", \"}\", \"%\" };", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2NjcxOQ=="}, "originalCommit": {"oid": "ddcbb0f6532893512aa9ac236ee6c644dccc49d5"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyMTg0MjAwOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo1Mjo0OFrOHbkOiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMlQwNzo1Mjo0OFrOHbkOiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODY2NzE0Nw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static void validate(Set<String> strSet) throws ReservedCharException {\n          \n          \n            \n                public static void validate(Iterable<String> strSet) throws ReservedCharException {", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r498667147", "createdAt": "2020-10-02T07:52:48Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -44,6 +47,14 @@ public static void validate(String str) throws ReservedCharException {\n             } \n         }\n     }\n+\n+    public static void validate(Set<String> strSet) throws ReservedCharException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ddcbb0f6532893512aa9ac236ee6c644dccc49d5"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MDA3NjYxOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQwNjoxMzowNlrOHePVNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxODoyMDozN1rOHgI5AQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MDUxNg==", "bodyText": "@ssilvert I changed the ReservedChars array and added there 3 new chars. Also Hynek proposed to refactor the whole class and change the for-each loop into regex validation. What do you think?", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r501470516", "createdAt": "2020-10-08T06:13:06Z", "author": {"login": "lhanusov"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -22,14 +22,16 @@\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bdb57de09cef9127f24528f4a2555a91b8865a3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTkxNjQ3OQ==", "bodyText": "You can code it either way.  If you use regex then you might lose the ability to report which character was disallowed?", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r501916479", "createdAt": "2020-10-08T18:09:17Z", "author": {"login": "ssilvert"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -22,14 +22,16 @@\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MDUxNg=="}, "originalCommit": {"oid": "3bdb57de09cef9127f24528f4a2555a91b8865a3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTk4MTg5Mg==", "bodyText": "You can get the disallowed character encountered by the regex via capturing groups. Regex has linear complexity while current validate complexity is O(nm).", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r501981892", "createdAt": "2020-10-08T20:05:49Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -22,14 +22,16 @@\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MDUxNg=="}, "originalCommit": {"oid": "3bdb57de09cef9127f24528f4a2555a91b8865a3"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzQ2MjE0NQ==", "bodyText": "You can get the disallowed character encountered by the regex via capturing groups. Regex has linear complexity while current validate complexity is O(nm).\n\nI doubt that there is actually a meaningful performance benefit because n and m are so small.  And regex solutions often to lead to code that is hard to read.\nBut like I said, either way is fine with me.", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r503462145", "createdAt": "2020-10-12T18:20:37Z", "author": {"login": "ssilvert"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -22,14 +22,16 @@\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTQ3MDUxNg=="}, "originalCommit": {"oid": "3bdb57de09cef9127f24528f4a2555a91b8865a3"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODExMzI2OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToxOTo0MVrOHvqBiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToxOTo0MVrOHvqBiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczMzY0Mw==", "bodyText": "Missing\n        if (str == null) return;", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r519733643", "createdAt": "2020-11-09T11:19:41Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -19,29 +19,46 @@\n import javax.ws.rs.BadRequestException;\n import org.jboss.logging.Logger;\n \n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {\n     protected static final Logger logger = Logger.getLogger(ReservedCharValidator.class);\n     \n     // https://tools.ietf.org/html/rfc3986#section-2.2\n-    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"[\", \"@\", \"!\", \"$\", \n-                                                   \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", \n-                                                   \"]\", \"[\", \"\\\\\" };\n+    private static final Pattern RESERVED_CHARS_PATTERN = Pattern.compile(\"[:/?#@!$&()*+,;=\\\\[\\\\]\\\\\\\\]\");\n+\n+    // KEYCLOAK-14231 - Supported Locales: Three new characters were added on top of this RFC: \"{\", \"}\", \"%\"\n+    private static final Pattern RESERVED_CHARS_LOCALES_PATTERN = Pattern.compile(\"[:/?#@!$&()*+,;=\\\\[\\\\]\\\\\\\\{}%]\");\n+\n     private ReservedCharValidator() {}\n-    \n-    public static void validate(String str) throws ReservedCharException {\n+\n+    public static void validate(String str, Pattern pattern) throws ReservedCharException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97985c47c02a8be298b0b335123dfaa565cfa4b"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI1ODExMzQ2OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToxOTo0NFrOHvqBpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQxMToxOTo0NFrOHvqBpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTczMzY3MQ==", "bodyText": "This is weird and I understand that this is based on the original code. Please replace with\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        ReservedCharException e = new ReservedCharException(message);\n          \n          \n            \n                        logger.warn(message, e);\n          \n          \n            \n                        throw e;\n          \n          \n            \n                        logger.warn(message);\n          \n          \n            \n                        throw new ReservedCharException(message);", "url": "https://github.com/keycloak/keycloak/pull/7437#discussion_r519733671", "createdAt": "2020-11-09T11:19:44Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/utils/ReservedCharValidator.java", "diffHunk": "@@ -19,29 +19,46 @@\n import javax.ws.rs.BadRequestException;\n import org.jboss.logging.Logger;\n \n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+\n /**\n  *\n  * @author Stan Silvert\n+ * @author Lukas Hanusovsky lhanusov@redhat.com\n  */\n public class ReservedCharValidator {\n     protected static final Logger logger = Logger.getLogger(ReservedCharValidator.class);\n     \n     // https://tools.ietf.org/html/rfc3986#section-2.2\n-    private static final String[] RESERVED_CHARS = { \":\", \"/\", \"?\", \"#\", \"[\", \"@\", \"!\", \"$\", \n-                                                   \"&\", \"(\", \")\", \"*\", \"+\", \",\", \";\", \"=\", \n-                                                   \"]\", \"[\", \"\\\\\" };\n+    private static final Pattern RESERVED_CHARS_PATTERN = Pattern.compile(\"[:/?#@!$&()*+,;=\\\\[\\\\]\\\\\\\\]\");\n+\n+    // KEYCLOAK-14231 - Supported Locales: Three new characters were added on top of this RFC: \"{\", \"}\", \"%\"\n+    private static final Pattern RESERVED_CHARS_LOCALES_PATTERN = Pattern.compile(\"[:/?#@!$&()*+,;=\\\\[\\\\]\\\\\\\\{}%]\");\n+\n     private ReservedCharValidator() {}\n-    \n-    public static void validate(String str) throws ReservedCharException {\n+\n+    public static void validate(String str, Pattern pattern) throws ReservedCharException {\n+        Matcher matcher = pattern.matcher(str);\n+        if (matcher.find()) {\n+            String message = \"Character '\" + matcher.group() + \"' not allowed.\";\n+            ReservedCharException e = new ReservedCharException(message);\n+            logger.warn(message, e);\n+            throw e;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c97985c47c02a8be298b0b335123dfaa565cfa4b"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3340, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}