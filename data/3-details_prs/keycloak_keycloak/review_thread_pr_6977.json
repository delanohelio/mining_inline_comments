{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjM0MTg4", "number": 6977, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowNjo0MVrOD0agBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowNjo0MVrOD0agBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2Mjg2NzI0OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowNjo0MVrOGJWTSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxMTozMzoyNFrOGJxkPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1NTc1NA==", "bodyText": "@martin-kanis Based on the discussion on keycloak-dev, we will handle the case of disabled user differently than the case of user registration. So I am sorry for the confusion :)\nStill I believe it will be slightly better to call \"authenticationManager.backchannelLogout\" instead of directly call just \"removeUserSession\" . That would mean an attempt to propagate to logout to the applications or identity brokers, which is good. Is it possible? I will accept this PR afterwards.", "url": "https://github.com/keycloak/keycloak/pull/6977#discussion_r412455754", "createdAt": "2020-04-21T20:06:41Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java", "diffHunk": "@@ -188,16 +189,20 @@ protected AuthenticationSessionModel createAuthenticationSession(ClientModel cli\n             UserSessionModel userSession = userSessionCrossDCManager.getUserSessionIfExistsRemotely(manager, realm);\n \n             if (userSession != null) {\n-                String userSessionId = userSession.getId();\n-                rootAuthSession = session.authenticationSessions().createRootAuthenticationSession(userSessionId, realm);\n-                authSession = rootAuthSession.createAuthenticationSession(client);\n-                logger.debugf(\"Sent request to authz endpoint. We don't have root authentication session with ID '%s' but we have userSession.\" +\n-                        \"Re-created root authentication session with same ID. Client is: %s . New authentication session tab ID: %s\", userSessionId, client.getClientId(), authSession.getTabId());\n+                UserModel user = userSession.getUser();\n+                if (user != null && !user.isEnabled()) {\n+                    authSession = createNewAuthenticationSession(manager, client);\n+\n+                    session.sessions().removeUserSession(realm, userSession);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjkwMjQ2Mw==", "bodyText": "Done", "url": "https://github.com/keycloak/keycloak/pull/6977#discussion_r412902463", "createdAt": "2020-04-22T11:33:24Z", "author": {"login": "martin-kanis"}, "path": "services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java", "diffHunk": "@@ -188,16 +189,20 @@ protected AuthenticationSessionModel createAuthenticationSession(ClientModel cli\n             UserSessionModel userSession = userSessionCrossDCManager.getUserSessionIfExistsRemotely(manager, realm);\n \n             if (userSession != null) {\n-                String userSessionId = userSession.getId();\n-                rootAuthSession = session.authenticationSessions().createRootAuthenticationSession(userSessionId, realm);\n-                authSession = rootAuthSession.createAuthenticationSession(client);\n-                logger.debugf(\"Sent request to authz endpoint. We don't have root authentication session with ID '%s' but we have userSession.\" +\n-                        \"Re-created root authentication session with same ID. Client is: %s . New authentication session tab ID: %s\", userSessionId, client.getClientId(), authSession.getTabId());\n+                UserModel user = userSession.getUser();\n+                if (user != null && !user.isEnabled()) {\n+                    authSession = createNewAuthenticationSession(manager, client);\n+\n+                    session.sessions().removeUserSession(realm, userSession);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1NTc1NA=="}, "originalCommit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3708, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}