{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM0NDI3ODQw", "number": 7667, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzoxOVrOFC2M6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzozNFrOFC2NbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTI5NTE1OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/LogoutTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzoxOVrOICNNjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzoxOVrOICNNjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NDUyNg==", "bodyText": "Nit: should be\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        assertTrue(appPage.isCurrent());\n          \n          \n            \n                        appPage.assertCurrent();\n          \n      \n    \n    \n  \n\nto have nicer failure report.", "url": "https://github.com/keycloak/keycloak/pull/7667#discussion_r539184526", "createdAt": "2020-12-09T10:23:19Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/LogoutTest.java", "diffHunk": "@@ -118,6 +134,37 @@ public void logoutSession() {\n         assertNotEquals(sessionId, sessionId2);\n     }\n \n+    @Test\n+    public void logoutWithExpiredSession() throws Exception {\n+        try (AutoCloseable c = new RealmAttributeUpdater(adminClient.realm(\"test\"))\n+                .updateWith(r -> r.setSsoSessionMaxLifespan(2))\n+                .update()) {\n+\n+            oauth.doLogin(\"test-user@localhost\", \"password\");\n+\n+            String code = oauth.getCurrentQuery().get(OAuth2Constants.CODE);\n+\n+            oauth.clientSessionState(\"client-session\");\n+            OAuthClient.AccessTokenResponse tokenResponse = oauth.doAccessTokenRequest(code, \"password\");\n+            String idTokenString = tokenResponse.getIdToken();\n+\n+            // wait for a timeout\n+            // setTimeOffset doesn't work because session cookie is not invalidated thus the logout flow would continue with browser logout\n+            TimeUnit.SECONDS.sleep(3);\n+\n+            String logoutUrl = oauth.getLogoutUrl().redirectUri(oauth.APP_AUTH_ROOT).idTokenHint(idTokenString).build();\n+            driver.navigate().to(logoutUrl);\n+\n+            // should not throw an internal server error\n+            assertTrue(appPage.isCurrent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931a8e33d4e8196e1335891f69df2719b1796ad4"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM4NTI5NjQ1OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/LogoutTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzozNFrOICNOYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOVQxMDoyMzozNFrOICNOYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzOTE4NDczOA==", "bodyText": "Same as above", "url": "https://github.com/keycloak/keycloak/pull/7667#discussion_r539184738", "createdAt": "2020-12-09T10:23:34Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/forms/LogoutTest.java", "diffHunk": "@@ -118,6 +134,37 @@ public void logoutSession() {\n         assertNotEquals(sessionId, sessionId2);\n     }\n \n+    @Test\n+    public void logoutWithExpiredSession() throws Exception {\n+        try (AutoCloseable c = new RealmAttributeUpdater(adminClient.realm(\"test\"))\n+                .updateWith(r -> r.setSsoSessionMaxLifespan(2))\n+                .update()) {\n+\n+            oauth.doLogin(\"test-user@localhost\", \"password\");\n+\n+            String code = oauth.getCurrentQuery().get(OAuth2Constants.CODE);\n+\n+            oauth.clientSessionState(\"client-session\");\n+            OAuthClient.AccessTokenResponse tokenResponse = oauth.doAccessTokenRequest(code, \"password\");\n+            String idTokenString = tokenResponse.getIdToken();\n+\n+            // wait for a timeout\n+            // setTimeOffset doesn't work because session cookie is not invalidated thus the logout flow would continue with browser logout\n+            TimeUnit.SECONDS.sleep(3);\n+\n+            String logoutUrl = oauth.getLogoutUrl().redirectUri(oauth.APP_AUTH_ROOT).idTokenHint(idTokenString).build();\n+            driver.navigate().to(logoutUrl);\n+\n+            // should not throw an internal server error\n+            assertTrue(appPage.isCurrent());\n+\n+            // check if the back channel logout succeeded\n+            driver.navigate().to(oauth.getLoginFormUrl());\n+            WaitUtils.waitForPageToLoad();\n+            assertTrue(loginPage.isCurrent());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "931a8e33d4e8196e1335891f69df2719b1796ad4"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3240, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}