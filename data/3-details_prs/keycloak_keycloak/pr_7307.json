{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5NTk5MjQz", "number": 7307, "title": "KEYCLOAK-14961 SAML Identity Provider: Add ability to request specific AuthnContexts to remote IdPs", "bodyText": "Allows Keycloak SAML Identity Broker to request specific AuthnContexts to remote IdP. It requires small plumbing changes in the SAML Identity Provider and three additional fields in the SAML Configuration UI to enter the required parameters:\n\nComparison Type: can be one of the fixed values Exact, Minimum, Maximum, Better;\nAuthnContext ClassRefs: a list of URIs corresponding to well-known types of authentication (can also have provider-specific URIs);\nAuthnContext DeclRefs: a list of URIs corresponding to a provider-specific authentication context declaration;\n\n\nThere is no change to AuthnRequests if no classes or declarations are set: if both ClassRefs and DeclRefs are empty, the RequestedAuthnContext element is not emitted at all, otherwise the element is generated and will also have its Comparison attribute set to the Comparison Type.\nPoints of attention:\n\nSince the IdP Config does not support multivalued attributes, data is stored as a JSON-serialized array of objects;\nI have added the parameters as a separate, initially-collapsed section - if you prefer they can be merged in the already existing \"SAML Config\" section;\nI am not a native English speaker so any suggestions to the translation strings are welcome.\n\nThis issue replaces PR #7292 which was initially meant to be just the plumbing code, but it wasn't much effort to also add the required UI and complete the feature.", "createdAt": "2020-07-30T21:00:25Z", "url": "https://github.com/keycloak/keycloak/pull/7307", "merged": true, "mergeCommit": {"oid": "67b2d5ffddf968a74948c084278f813660005a1c"}, "closed": true, "closedAt": "2020-09-03T19:25:37Z", "author": {"login": "lscorcia"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6pM7TgBqjM2MTE5MTYwMDE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFMHHCgFqTQ4MTYwMDU1NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7d4c0fd2228742827144f31be549898a3feb9cd", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/c7d4c0fd2228742827144f31be549898a3feb9cd", "committedDate": "2020-07-30T19:40:38Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}, "afterCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "committedDate": "2020-08-01T13:52:58Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0NDQ1NDY4", "url": "https://github.com/keycloak/keycloak/pull/7307#pullrequestreview-464445468", "createdAt": "2020-08-10T17:48:04Z", "commit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4OTA5NzYx", "url": "https://github.com/keycloak/keycloak/pull/7307#pullrequestreview-478909761", "createdAt": "2020-08-31T19:55:20Z", "commit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxOTo1NToyMFrOHKHH9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0zMVQxOTo1OTo1OFrOHKHQig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDUzMw==", "bodyText": "Nit: Use LinkedList instead.", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364533", "createdAt": "2020-08-31T19:55:20Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDY2NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)\n          \n          \n            \n                        if (requestedAuthnContextClassRef != null && ! requestedAuthnContextClassRef.isEmpty())", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364664", "createdAt": "2020-08-31T19:55:37Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();\n+        this.requestedAuthnContextDeclRefList = new ArrayList<String>();\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder setComparison(AuthnContextComparisonType comparison) {\n+        this.comparison = comparison;\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextClassRef(String authnContextClassRef) {\n+        this.requestedAuthnContextClassRefList.add(authnContextClassRef);\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextDeclRef(String authnContextDeclRef) {\n+        this.requestedAuthnContextDeclRefList.add(authnContextDeclRef);\n+        return this;\n+    }\n+\n+    public RequestedAuthnContextType build() {\n+        if (this.comparison != null)\n+            this.requestedAuthnContextType.setComparison(this.comparison);\n+\n+        for (String requestedAuthnContextClassRef: this.requestedAuthnContextClassRefList)\n+            if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NDc1Nw==", "bodyText": "Nit:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (requestedAuthnContextDeclRef != null && requestedAuthnContextDeclRef.length() > 0)\n          \n          \n            \n                        if (requestedAuthnContextDeclRef != null && ! requestedAuthnContextDeclRef.isEmpty())", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480364757", "createdAt": "2020-08-31T19:55:51Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SAML2RequestedAuthnContextBuilder.java", "diffHunk": "@@ -0,0 +1,66 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml;\n+\n+import org.keycloak.dom.saml.v2.protocol.AuthnContextComparisonType;\n+import org.keycloak.dom.saml.v2.protocol.RequestedAuthnContextType;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+\n+public class SAML2RequestedAuthnContextBuilder {\n+    private final RequestedAuthnContextType requestedAuthnContextType;\n+    private AuthnContextComparisonType comparison;\n+    private List<String> requestedAuthnContextClassRefList;\n+    private List<String> requestedAuthnContextDeclRefList;\n+\n+    public SAML2RequestedAuthnContextBuilder() {\n+        this.requestedAuthnContextType = new RequestedAuthnContextType();\n+        this.requestedAuthnContextClassRefList = new ArrayList<String>();\n+        this.requestedAuthnContextDeclRefList = new ArrayList<String>();\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder setComparison(AuthnContextComparisonType comparison) {\n+        this.comparison = comparison;\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextClassRef(String authnContextClassRef) {\n+        this.requestedAuthnContextClassRefList.add(authnContextClassRef);\n+        return this;\n+    }\n+\n+    public SAML2RequestedAuthnContextBuilder addAuthnContextDeclRef(String authnContextDeclRef) {\n+        this.requestedAuthnContextDeclRefList.add(authnContextDeclRef);\n+        return this;\n+    }\n+\n+    public RequestedAuthnContextType build() {\n+        if (this.comparison != null)\n+            this.requestedAuthnContextType.setComparison(this.comparison);\n+\n+        for (String requestedAuthnContextClassRef: this.requestedAuthnContextClassRefList)\n+            if (requestedAuthnContextClassRef != null && requestedAuthnContextClassRef.length() > 0)\n+                this.requestedAuthnContextType.addAuthnContextClassRef(requestedAuthnContextClassRef);\n+\n+        for (String requestedAuthnContextDeclRef: this.requestedAuthnContextDeclRefList)\n+            if (requestedAuthnContextDeclRef != null && requestedAuthnContextDeclRef.length() > 0)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjA1Mw==", "bodyText": "Is this class necessary? Can the serialized form be just a list of Strings instead?\nNote: Changing this to String would have impact on themes as well.", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366053", "createdAt": "2020-08-31T19:58:29Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjU0MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);\n          \n          \n            \n                        return Arrays.asList(JsonSerialization.readValue(authnContextClassRefs, String[].class));", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366540", "createdAt": "2020-08-31T19:59:33Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {\n+        public String uri;\n+    }\n+\n+    private List<String> getAuthnContextClassRefUris() {\n+        ArrayList<String> output = new ArrayList<String>();\n+\n+        String authnContextClassRefs = getConfig().getAuthnContextClassRefs();\n+        if (authnContextClassRefs == null || authnContextClassRefs.length() == 0)\n+            return output;\n+\n+        try {\n+            AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MDM2NjczMA==", "bodyText": "same here", "url": "https://github.com/keycloak/keycloak/pull/7307#discussion_r480366730", "createdAt": "2020-08-31T19:59:58Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -148,6 +160,52 @@ private String getEntityId(UriInfo uriInfo, RealmModel realm) {\n         return UriBuilder.fromUri(uriInfo.getBaseUri()).path(\"realms\").path(realm.getName()).build().toString();\n     }\n \n+    static class AuthnContextClassRefJsonObject {\n+        public String uri;\n+    }\n+\n+    private List<String> getAuthnContextClassRefUris() {\n+        ArrayList<String> output = new ArrayList<String>();\n+\n+        String authnContextClassRefs = getConfig().getAuthnContextClassRefs();\n+        if (authnContextClassRefs == null || authnContextClassRefs.length() == 0)\n+            return output;\n+\n+        try {\n+            AuthnContextClassRefJsonObject[] jsonObjects = JsonSerialization.readValue(authnContextClassRefs, AuthnContextClassRefJsonObject[].class);\n+\n+            for (AuthnContextClassRefJsonObject jsonObject: jsonObjects)\n+                output.add(jsonObject.uri);\n+        } catch (Exception e) {\n+            logger.warn(\"Could not json-deserialize AuthContextClassRefs config entry: \" + authnContextClassRefs, e);\n+        }\n+\n+        return output;\n+    }\n+\n+    static class AuthnContextDeclRefJsonObject {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/402a7fab7ba809ba9b57ee6474aaf2f0d994aadb", "committedDate": "2020-08-01T13:52:58Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}, "afterCommit": {"oid": "148d2634fecf694a9bee168fe1fce56716b6c9ff", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/148d2634fecf694a9bee168fe1fce56716b6c9ff", "committedDate": "2020-08-31T23:23:29Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "148d2634fecf694a9bee168fe1fce56716b6c9ff", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/148d2634fecf694a9bee168fe1fce56716b6c9ff", "committedDate": "2020-08-31T23:23:29Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}, "afterCommit": {"oid": "ee7e6e923d63b59f389e674609bba4b852098922", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/ee7e6e923d63b59f389e674609bba4b852098922", "committedDate": "2020-09-01T00:52:37Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgwNjcwMDAw", "url": "https://github.com/keycloak/keycloak/pull/7307#pullrequestreview-480670000", "createdAt": "2020-09-02T10:04:20Z", "commit": {"oid": "ee7e6e923d63b59f389e674609bba4b852098922"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e23f4e083b06eb57c9a499771e51e98c6311456", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/0e23f4e083b06eb57c9a499771e51e98c6311456", "committedDate": "2020-09-02T20:17:58Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ee7e6e923d63b59f389e674609bba4b852098922", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/ee7e6e923d63b59f389e674609bba4b852098922", "committedDate": "2020-09-01T00:52:37Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}, "afterCommit": {"oid": "0e23f4e083b06eb57c9a499771e51e98c6311456", "author": {"user": {"login": "lscorcia", "name": "Luca Leonardo Scorcia"}}, "url": "https://github.com/keycloak/keycloak/commit/0e23f4e083b06eb57c9a499771e51e98c6311456", "committedDate": "2020-09-02T20:17:58Z", "message": "KEYCLOAK-14961 SAML Client: Add ability to request specific AuthnContexts to remote IdPs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxNjAwNTU1", "url": "https://github.com/keycloak/keycloak/pull/7307#pullrequestreview-481600555", "createdAt": "2020-09-03T08:13:29Z", "commit": {"oid": "0e23f4e083b06eb57c9a499771e51e98c6311456"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2888, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}