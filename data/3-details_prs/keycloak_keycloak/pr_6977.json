{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjM0MTg4", "number": 6977, "title": "KEYCLOAK-9623 Disabling logged in user will not allow other user to l\u2026", "bodyText": "\u2026ogin after he is thrown out of his session", "createdAt": "2020-04-14T14:52:35Z", "url": "https://github.com/keycloak/keycloak/pull/6977", "merged": true, "mergeCommit": {"oid": "a04c70531a9ebfaab337efa78967b6c2ecd5213b"}, "closed": true, "closedAt": "2020-04-23T12:40:26Z", "author": {"login": "martin-kanis"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcX8q0kgFqTM5NDA0MjQ0NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaYRttgFqTM5ODg1NTM3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MDQyNDQ0", "url": "https://github.com/keycloak/keycloak/pull/6977#pullrequestreview-394042444", "createdAt": "2020-04-15T18:47:25Z", "commit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjM1Nzky", "url": "https://github.com/keycloak/keycloak/pull/6977#pullrequestreview-397635792", "createdAt": "2020-04-21T20:06:40Z", "commit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowNjo0MVrOGJWTSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowNjo0MVrOGJWTSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1NTc1NA==", "bodyText": "@martin-kanis Based on the discussion on keycloak-dev, we will handle the case of disabled user differently than the case of user registration. So I am sorry for the confusion :)\nStill I believe it will be slightly better to call \"authenticationManager.backchannelLogout\" instead of directly call just \"removeUserSession\" . That would mean an attempt to propagate to logout to the applications or identity brokers, which is good. Is it possible? I will accept this PR afterwards.", "url": "https://github.com/keycloak/keycloak/pull/6977#discussion_r412455754", "createdAt": "2020-04-21T20:06:41Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/protocol/AuthorizationEndpointBase.java", "diffHunk": "@@ -188,16 +189,20 @@ protected AuthenticationSessionModel createAuthenticationSession(ClientModel cli\n             UserSessionModel userSession = userSessionCrossDCManager.getUserSessionIfExistsRemotely(manager, realm);\n \n             if (userSession != null) {\n-                String userSessionId = userSession.getId();\n-                rootAuthSession = session.authenticationSessions().createRootAuthenticationSession(userSessionId, realm);\n-                authSession = rootAuthSession.createAuthenticationSession(client);\n-                logger.debugf(\"Sent request to authz endpoint. We don't have root authentication session with ID '%s' but we have userSession.\" +\n-                        \"Re-created root authentication session with same ID. Client is: %s . New authentication session tab ID: %s\", userSessionId, client.getClientId(), authSession.getTabId());\n+                UserModel user = userSession.getUser();\n+                if (user != null && !user.isEnabled()) {\n+                    authSession = createNewAuthenticationSession(manager, client);\n+\n+                    session.sessions().removeUserSession(realm, userSession);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8f1733840269caa7039754c2a7882c4cd6300dad", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/8f1733840269caa7039754c2a7882c4cd6300dad", "committedDate": "2020-04-14T14:51:53Z", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session"}, "afterCommit": {"oid": "448af9d1818336bdc0410eb1a0d665ab30c4dff8", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/448af9d1818336bdc0410eb1a0d665ab30c4dff8", "committedDate": "2020-04-22T11:08:16Z", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7160c634931a671e4154ed0183205137a027448e", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/7160c634931a671e4154ed0183205137a027448e", "committedDate": "2020-04-22T11:32:51Z", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "448af9d1818336bdc0410eb1a0d665ab30c4dff8", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/448af9d1818336bdc0410eb1a0d665ab30c4dff8", "committedDate": "2020-04-22T11:08:16Z", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session"}, "afterCommit": {"oid": "7160c634931a671e4154ed0183205137a027448e", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/7160c634931a671e4154ed0183205137a027448e", "committedDate": "2020-04-22T11:32:51Z", "message": "KEYCLOAK-9623 Disabling logged in user will not allow other user to login after he is thrown out of his session"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4ODU1Mzc0", "url": "https://github.com/keycloak/keycloak/pull/6977#pullrequestreview-398855374", "createdAt": "2020-04-23T08:05:11Z", "commit": {"oid": "7160c634931a671e4154ed0183205137a027448e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3140, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}