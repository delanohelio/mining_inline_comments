{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2MDUwMTcw", "number": 6987, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyNDozMVrOD1ueoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyNjo0NlrOD1v-jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjYyNjI1OnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/widgets/LocaleSelectors.tsx", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyNDozMVrOGLTHIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyNDozMVrOGLTHIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMDY0MA==", "bodyText": "I don't think this is a correct label but we'll address accessibility in another task, so it's ok I think.", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414500640", "createdAt": "2020-04-24T11:24:31Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/widgets/LocaleSelectors.tsx", "diffHunk": "@@ -13,122 +13,44 @@\n  * See the License for the specific language governing permissions and\n  * limitations under the License.\n  */\n-\n import * as React from 'react';\n-import {withRouter, RouteComponentProps} from 'react-router-dom';\n-\n-import {Msg} from './Msg';\n \n import {\n-    Dropdown,\n-    DropdownItem,\n-    DropdownToggle,\n-    Nav,\n-    NavExpandable,\n-    NavItem,\n-    NavList\n+    FormSelect,\n+    FormSelectOption,\n+    FormSelectProps\n } from '@patternfly/react-core';\n \n-declare const locale: string;\n-declare const baseUrl: string;\n-declare const referrer: string;\n-declare const referrerUri: string;\n-\n interface AvailableLocale {\n     locale: string; \n     label: string;\n };\n declare const availableLocales: [AvailableLocale];\n-// remove entry for current locale\n-const availLocales = availableLocales.filter((availableLocale: AvailableLocale) => availableLocale.locale !== locale);\n \n-let referrerFragment = '';\n-if ((typeof referrer !== 'undefined') && \n-    (typeof referrerUri !== 'undefined')) {\n-    referrerFragment = '&referrer=' + referrer + '&referrer_uri=' + encodeURIComponent(referrerUri);\n-}\n+interface LocaleSelectorProps extends FormSelectProps { }\n+interface LocaleSelectorState { }\n+export class LocaleSelector extends React.Component<LocaleSelectorProps, LocaleSelectorState> {\n     \n-interface LocaleKebabItemProps extends RouteComponentProps {}\n-interface LocaleKebabItemState {activeGroup: string; activeItem: string}\n-class LocaleKebabItem extends React.Component<LocaleKebabItemProps, LocaleKebabItemState> {\n-    public constructor(props: LocaleKebabItemProps) {\n-        super(props);\n-        this.state = {\n-            activeGroup: 'locale-group',\n-            activeItem: ''\n-        };\n-    }\n-     \n-    public render(): React.ReactNode {        \n-        const appPath = this.props.location.pathname;\n-        const localeNavItems = availLocales.map((availableLocale: AvailableLocale) => {\n-            const url = baseUrl + '?kc_locale=' + availableLocale.locale + referrerFragment + '#' + appPath;\n-            return (<NavItem\n-                        id={`mobile-locale-${availableLocale.locale}`}\n-                        key={availableLocale.locale}\n-                        to={url}>\n-                            {availableLocale.label}\n-                    </NavItem> );\n-        });\n-        \n-        return (\n-            <Nav>\n-                <NavList>\n-                    <NavExpandable id=\"mobile-locale\" title={Msg.localize('locale_' + locale)} isActive={false} groupId=\"locale-group\">\n-                    {localeNavItems}\n-                  </NavExpandable>\n-                </NavList>\n-            </Nav>\n-        );\n-    }\n-};\n-\n-interface LocaleDropdownComponentProps extends RouteComponentProps {}\n-interface LocaleDropdownComponentState {isDropdownOpen: boolean}\n-class LocaleDropdownComponent extends React.Component<LocaleDropdownComponentProps, LocaleDropdownComponentState> {\n-    public constructor(props: LocaleDropdownComponentProps) {\n+    constructor(props: LocaleSelectorProps) {\n         super(props);\n-        this.state = {isDropdownOpen: false};\n     }\n-     \n-    private onDropdownToggle = (isDropdownOpen: boolean) => {\n-        this.setState({\n-            isDropdownOpen\n-        });\n-    };\n-\n-    private onDropdownSelect = () => {\n-        this.setState({\n-            isDropdownOpen: !this.state.isDropdownOpen\n-        });\n-    };\n \n-    public render(): React.ReactNode {\n-        const appPath = this.props.location.pathname;\n-        const localeDropdownItems = availLocales.map((availableLocale: AvailableLocale) => {\n-            const url = baseUrl + '?kc_locale=' + availableLocale.locale + referrerFragment + '#' + appPath;\n-            return (<DropdownItem\n-                        id={`locale-${availableLocale.locale}`}\n-                        key={availableLocale.locale}\n-                        href={url}>\n-                            {availableLocale.label}\n-                    </DropdownItem> );\n-        });\n-\n-        if (localeDropdownItems.length < 2) return (<React.Fragment/>);\n-        \n+    render(): React.ReactNode {\n         return (\n-            <Dropdown\n-                isPlain\n-                position=\"right\"\n-                onSelect={this.onDropdownSelect}\n-                isOpen={this.state.isDropdownOpen}\n-                toggle={<DropdownToggle id=\"locale-dropdown-toggle\" onToggle={this.onDropdownToggle}><Msg msgKey={'locale_' + locale}/></DropdownToggle>}\n-                dropdownItems={localeDropdownItems}\n-            />\n+            <FormSelect\n+                id=\"locale-select\"\n+                value={this.props.value}\n+                onChange={(value, event) => { if (this.props.onChange) this.props.onChange(value, event) }}\n+                aria-label=\"Select Runtime\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 129}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NjY0MTQzOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/account-page/AccountPage.tsx", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMToyODoyOVrOGLTPsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzoyOTowMVrOGLXujw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMjgzNA==", "bodyText": "It seems this condition doesn't work. The whole page is reloaded every time when the form is saved, regardless if the locale changed.", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414502834", "createdAt": "2020-04-24T11:28:29Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/account-page/AccountPage.tsx", "diffHunk": "@@ -100,6 +108,9 @@ export class AccountPage extends React.Component<AccountPageProps, AccountPageSt\n             AccountServiceClient.Instance.doPost(\"/\", { data: reqData })\n                 .then(() => { // to use response, say ((response: AxiosResponse<FormFields>) => {\n                     ContentAlert.success('accountUpdatedMessage');\n+                    if (locale !== this.state.formFields.attributes!.locale) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3MTY0OQ==", "bodyText": "it doesn't reload the page always it only worked the first time! Fixed it now the locale is a array apparently", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414571649", "createdAt": "2020-04-24T13:22:37Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/account-page/AccountPage.tsx", "diffHunk": "@@ -100,6 +108,9 @@ export class AccountPage extends React.Component<AccountPageProps, AccountPageSt\n             AccountServiceClient.Instance.doPost(\"/\", { data: reqData })\n                 .then(() => { // to use response, say ((response: AxiosResponse<FormFields>) => {\n                     ContentAlert.success('accountUpdatedMessage');\n+                    if (locale !== this.state.formFields.attributes!.locale) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMjgzNA=="}, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3NjI3MQ==", "bodyText": "The test was failing because of this as well, new build: https://keycloak-jenkins.com/job/keycloak-account2-matrix/868/", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414576271", "createdAt": "2020-04-24T13:29:01Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/account-page/AccountPage.tsx", "diffHunk": "@@ -100,6 +108,9 @@ export class AccountPage extends React.Component<AccountPageProps, AccountPageSt\n             AccountServiceClient.Instance.doPost(\"/\", { data: reqData })\n                 .then(() => { // to use response, say ((response: AxiosResponse<FormFields>) => {\n                     ContentAlert.success('accountUpdatedMessage');\n+                    if (locale !== this.state.formFields.attributes!.locale) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUwMjgzNA=="}, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg2MTUxOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyNDoxNlrOGLVMnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyNDoxNlrOGLVMnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNDgxMw==", "bodyText": "Please us this instead:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    WaitUtils.pause(1000);\n          \n          \n            \n                    WaitUtils.waitForPageToLoad();", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414534813", "createdAt": "2020-04-24T12:24:16Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "diffHunk": "@@ -53,29 +52,17 @@ public void addTestRealms(List<RealmRepresentation> testRealms) {\n     @Before\n     public void beforeI18nTest() {\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, welcomeScreen.header().getCurrentLocaleName());\n-    }\n-\n-    @Test\n-    public void welcomeScreenTest() {\n-        welcomeScreen.header().selectLocale(CUSTOM_LOCALE);\n-        assertCustomLocaleWelcomeScreen();\n-\n-        // check if selected locale is preserved\n-        welcomeScreen.clickPersonalInfoLink();\n-        assertCustomLocaleLoginPage();\n-        loginToAccount();\n-        assertTestUserLocale(CUSTOM_LOCALE);\n-        assertCustomLocalePersonalInfo();\n     }\n \n     @Test\n     public void loggedInPageTest() {\n         personalInfoPage.navigateTo();\n         loginToAccount();\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, personalInfoPage.header().getCurrentLocaleName());\n-        personalInfoPage.header().selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.clickSave(false);\n+        WaitUtils.pause(1000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3Njg3MTgzOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMjoyNjo0NlrOGLVSeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzo1NToyMlrOGLY32Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNjMxMg==", "bodyText": "Could you please extend the test a bit? We need to be sure i18n works on the Welcome Screen as well.", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414536312", "createdAt": "2020-04-24T12:26:46Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "diffHunk": "@@ -53,29 +52,17 @@ public void addTestRealms(List<RealmRepresentation> testRealms) {\n     @Before\n     public void beforeI18nTest() {\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, welcomeScreen.header().getCurrentLocaleName());\n-    }\n-\n-    @Test\n-    public void welcomeScreenTest() {\n-        welcomeScreen.header().selectLocale(CUSTOM_LOCALE);\n-        assertCustomLocaleWelcomeScreen();\n-\n-        // check if selected locale is preserved\n-        welcomeScreen.clickPersonalInfoLink();\n-        assertCustomLocaleLoginPage();\n-        loginToAccount();\n-        assertTestUserLocale(CUSTOM_LOCALE);\n-        assertCustomLocalePersonalInfo();\n     }\n \n     @Test\n     public void loggedInPageTest() {\n         personalInfoPage.navigateTo();\n         loginToAccount();\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, personalInfoPage.header().getCurrentLocaleName());\n-        personalInfoPage.header().selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.clickSave(false);\n+        WaitUtils.pause(1000);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU3NDU3Mg==", "bodyText": "well there is the assertCustomLocaleWelcomeScreen there isn't much more to test I'm afraid.", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414574572", "createdAt": "2020-04-24T13:26:35Z", "author": {"login": "edewit"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "diffHunk": "@@ -53,29 +52,17 @@ public void addTestRealms(List<RealmRepresentation> testRealms) {\n     @Before\n     public void beforeI18nTest() {\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, welcomeScreen.header().getCurrentLocaleName());\n-    }\n-\n-    @Test\n-    public void welcomeScreenTest() {\n-        welcomeScreen.header().selectLocale(CUSTOM_LOCALE);\n-        assertCustomLocaleWelcomeScreen();\n-\n-        // check if selected locale is preserved\n-        welcomeScreen.clickPersonalInfoLink();\n-        assertCustomLocaleLoginPage();\n-        loginToAccount();\n-        assertTestUserLocale(CUSTOM_LOCALE);\n-        assertCustomLocalePersonalInfo();\n     }\n \n     @Test\n     public void loggedInPageTest() {\n         personalInfoPage.navigateTo();\n         loginToAccount();\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, personalInfoPage.header().getCurrentLocaleName());\n-        personalInfoPage.header().selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.clickSave(false);\n+        WaitUtils.pause(1000);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNjMxMg=="}, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU5NTAzMw==", "bodyText": "You're correct, scratch this. I missed the last line (assertCustomLocaleWelcomeScreen();) in this test.", "url": "https://github.com/keycloak/keycloak/pull/6987#discussion_r414595033", "createdAt": "2020-04-24T13:55:22Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/InternationalizationTest.java", "diffHunk": "@@ -53,29 +52,17 @@ public void addTestRealms(List<RealmRepresentation> testRealms) {\n     @Before\n     public void beforeI18nTest() {\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, welcomeScreen.header().getCurrentLocaleName());\n-    }\n-\n-    @Test\n-    public void welcomeScreenTest() {\n-        welcomeScreen.header().selectLocale(CUSTOM_LOCALE);\n-        assertCustomLocaleWelcomeScreen();\n-\n-        // check if selected locale is preserved\n-        welcomeScreen.clickPersonalInfoLink();\n-        assertCustomLocaleLoginPage();\n-        loginToAccount();\n-        assertTestUserLocale(CUSTOM_LOCALE);\n-        assertCustomLocalePersonalInfo();\n     }\n \n     @Test\n     public void loggedInPageTest() {\n         personalInfoPage.navigateTo();\n         loginToAccount();\n         assertTestUserLocale(null);\n-        assertEquals(DEFAULT_LOCALE_NAME, personalInfoPage.header().getCurrentLocaleName());\n-        personalInfoPage.header().selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.selectLocale(CUSTOM_LOCALE);\n+        personalInfoPage.clickSave(false);\n+        WaitUtils.pause(1000);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDUzNjMxMg=="}, "originalCommit": {"oid": "dde1c310499f328b899e43e11f4f0dc1969145bd"}, "originalPosition": 52}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3717, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}