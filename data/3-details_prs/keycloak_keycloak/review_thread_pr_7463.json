{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk2Nzg1ODMz", "number": 7463, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzozNjozNVrOE1Oe_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyNzoyMVrOE1l7Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjQ3Mjk1OnYy", "diffSide": "RIGHT", "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzozNjozNVrOHtYVqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxMzo1NDozM1rOH4ObNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NjczMA==", "bodyText": "This is not correct, in Fuse we use https://github.com/keycloak/keycloak/blob/master/pom.xml#L1700-L1701", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517346730", "createdAt": "2020-11-04T13:36:35Z", "author": {"login": "martin-kanis"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -103,11 +103,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpclient</artifactId>\n-      <version>4.5.2</version>\n+      <version>4.5.12</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5OTUzNg==", "bodyText": "@martin-kanis Right, great catch Martin, thanks! The script have their versions mangled, because at the moment there are two duplicate definitions of both the org.apache.httpcomponents:httpclient and org.apachehttpcomponents.httpcore artifacts in the Keycloak / RH-SSO Fuse adapter license files:\n\nThe first definition came from [KEYCLOAK-11764] Upgrade to Wildfly 19 change\nWhile the second from [KEYCLOAK-15892] Can not install 7.4.3.CR1 Fuse adapter change\n\nSince assuming there can be just one version of a specific artifact defined in the license files (if there are two versions of the same, how would be determined which of them should be actually used), tried to consolidate them via 67dfcac commit (intentionally left it separated so you can better double check / verify) -- basically:\n\nDropped the duplicate entries (from both the respective license.xml files and from the *.txt files),\nAnd kept only former versions of these artifacts for both the Keycloak and RH-SSO adapters (or more exactly, those versions listed in apache.httpcomponents.fuse.version and apache.httpcomponents.httpcore.fuse.version properties)\n\nPlease double-check if the state after the 67dfcac commit is the expected one (IOW there should be just one version of those artifacts listed in Fuse adapter files & their versions should match the aforementioned two properties)\nAlso filed KEYCLOAK-16200 to prevent re-occurrence of duplicate entries in license files, and KEYCLOAK-16202 not to have versions of httpclient / httpcore in Fuse adapter updated, if it gets updated as part of the Wildfly upgrade (IOW let them get upgraded on other places within the repo, for the purpose of e.g. the testsuite or quarkus reference, but skip the Fuse adapter entries).", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r518699536", "createdAt": "2020-11-06T11:44:10Z", "author": {"login": "iankko"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -103,11 +103,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpclient</artifactId>\n-      <version>4.5.2</version>\n+      <version>4.5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NjczMA=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODcxMDU0Mw==", "bodyText": "@iankko Thanks for the update. I think the state of 67dfcac is correct one i.e my understanding is that Fuse licenses should contain entries only for httpcomponents used in Fuse (4.5.2 and 4.4.4)  and don't contain versions from EAP. @drichtarik is that correct?", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r518710543", "createdAt": "2020-11-06T12:07:27Z", "author": {"login": "martin-kanis"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -103,11 +103,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpclient</artifactId>\n-      <version>4.5.2</version>\n+      <version>4.5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NjczMA=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 84}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODcxODY0Ng==", "bodyText": "Previously checked this with @pskopek Per the conclusion listing the same artifact in the same license file with two different versions would be an error. This is already fixed, resolving", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r528718646", "createdAt": "2020-11-23T13:54:33Z", "author": {"login": "iankko"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -103,11 +103,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpclient</artifactId>\n-      <version>4.5.2</version>\n+      <version>4.5.12</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0NjczMA=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0MjQ3MzEzOnYy", "diffSide": "RIGHT", "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNFQxMzozNjozOFrOHtYVzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNlQxMTo0NTowMVrOHuq7xQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0Njc2Ng==", "bodyText": "This is not correct, in Fuse we use https://github.com/keycloak/keycloak/blob/master/pom.xml#L1700-L1701", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517346766", "createdAt": "2020-11-04T13:36:38Z", "author": {"login": "martin-kanis"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -125,11 +125,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpcore</artifactId>\n-      <version>4.4.4</version>\n+      <version>4.4.13</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY5OTk3Mw==", "bodyText": "Covered by 67dfcac change, PTAL", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r518699973", "createdAt": "2020-11-06T11:45:01Z", "author": {"login": "iankko"}, "path": "distribution/adapters/fuse-adapter-zip/src/main/resources/licenses/keycloak/licenses.xml", "diffHunk": "@@ -125,11 +125,11 @@\n     <dependency>\n       <groupId>org.apache.httpcomponents</groupId>\n       <artifactId>httpcore</artifactId>\n-      <version>4.4.4</version>\n+      <version>4.4.13</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzM0Njc2Ng=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 98}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI2NDgzOnYy", "diffSide": "RIGHT", "path": "model/infinispan/src/main/java/org/keycloak/cluster/infinispan/LockEntryPredicate.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxNToxNVrOHt8XTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzozMDo1N1rOH4YIUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNjk3Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet())\n          \n          \n            \n                                KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, ConcurrentHashMap::newKeySet)\n          \n      \n    \n    \n  \n\nThe lamba can be avoided.", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517936973", "createdAt": "2020-11-05T10:15:15Z", "author": {"login": "martin-kanis"}, "path": "model/infinispan/src/main/java/org/keycloak/cluster/infinispan/LockEntryPredicate.java", "diffHunk": "@@ -77,7 +77,7 @@ public LockEntryPredicate readObject(ObjectInput input) throws IOException, Clas\n \n         public LockEntryPredicate readObjectVersion1(ObjectInput input) throws IOException, ClassNotFoundException {\n             return new LockEntryPredicate(\n-                    KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>())\n+                    KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3NzY0OQ==", "bodyText": "@martin-kanis Corrected per the suggestion in the latest version (please double-check). Thanks!", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r528877649", "createdAt": "2020-11-23T17:30:57Z", "author": {"login": "iankko"}, "path": "model/infinispan/src/main/java/org/keycloak/cluster/infinispan/LockEntryPredicate.java", "diffHunk": "@@ -77,7 +77,7 @@ public LockEntryPredicate readObject(ObjectInput input) throws IOException, Clas\n \n         public LockEntryPredicate readObjectVersion1(ObjectInput input) throws IOException, ClassNotFoundException {\n             return new LockEntryPredicate(\n-                    KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>())\n+                    KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNjk3Mw=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI2NzU2OnYy", "diffSide": "RIGHT", "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxNjowMVrOHt8ZBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzozMToyMlrOH4YJUw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNzQxMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // clientScopes\n          \n          \n            \n                          KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, ConcurrentHashMap::newKeySet),  // clientScopes", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517937412", "createdAt": "2020-11-05T10:16:01Z", "author": {"login": "martin-kanis"}, "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "diffHunk": "@@ -234,14 +233,14 @@ public AuthenticationSessionEntity readObjectVersion1(ObjectInput input) throws\n \n               MarshallUtil.unmarshallString(input),     // redirectUri\n               MarshallUtil.unmarshallString(input),     // action\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // clientScopes\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // clientScopes", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3NzkwNw==", "bodyText": "Ditto, fixed in latest version.", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r528877907", "createdAt": "2020-11-23T17:31:22Z", "author": {"login": "iankko"}, "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "diffHunk": "@@ -234,14 +233,14 @@ public AuthenticationSessionEntity readObjectVersion1(ObjectInput input) throws\n \n               MarshallUtil.unmarshallString(input),     // redirectUri\n               MarshallUtil.unmarshallString(input),     // action\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // clientScopes\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // clientScopes", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNzQxMg=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjI2OTg5OnYy", "diffSide": "RIGHT", "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoxNjozM1rOHt8aaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzozMTozNVrOH4YJ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNzc2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                          KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // requiredActions\n          \n          \n            \n                          KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, ConcurrentHashMap::newKeySet),  // requiredActions", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517937768", "createdAt": "2020-11-05T10:16:33Z", "author": {"login": "martin-kanis"}, "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "diffHunk": "@@ -234,14 +233,14 @@ public AuthenticationSessionEntity readObjectVersion1(ObjectInput input) throws\n \n               MarshallUtil.unmarshallString(input),     // redirectUri\n               MarshallUtil.unmarshallString(input),     // action\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // clientScopes\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // clientScopes\n \n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, EXECUTION_STATUS_EXT, size -> new ConcurrentHashMap<>(size)), // executionStatus\n               MarshallUtil.unmarshallString(input),     // protocol\n \n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashMap<>(size)), // clientNotes\n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashMap<>(size)), // authNotes\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // requiredActions\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // requiredActions", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg3ODAzOA==", "bodyText": "And this one too", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r528878038", "createdAt": "2020-11-23T17:31:35Z", "author": {"login": "iankko"}, "path": "model/infinispan/src/main/java/org/keycloak/models/sessions/infinispan/entities/AuthenticationSessionEntity.java", "diffHunk": "@@ -234,14 +233,14 @@ public AuthenticationSessionEntity readObjectVersion1(ObjectInput input) throws\n \n               MarshallUtil.unmarshallString(input),     // redirectUri\n               MarshallUtil.unmarshallString(input),     // action\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // clientScopes\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // clientScopes\n \n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, EXECUTION_STATUS_EXT, size -> new ConcurrentHashMap<>(size)), // executionStatus\n               MarshallUtil.unmarshallString(input),     // protocol\n \n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashMap<>(size)), // clientNotes\n               KeycloakMarshallUtil.readMap(input, KeycloakMarshallUtil.STRING_EXT, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashMap<>(size)), // authNotes\n-              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> new ConcurrentHashSet<>()),  // requiredActions\n+              KeycloakMarshallUtil.readCollection(input, KeycloakMarshallUtil.STRING_EXT, size -> ConcurrentHashMap.newKeySet()),  // requiredActions", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzkzNzc2OA=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NjMxMzMwOnYy", "diffSide": "RIGHT", "path": "model/infinispan/src/test/java/org/keycloak/models/sessions/infinispan/initializer/ConcurrencyVersioningTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMDoyNzoyMVrOHt81PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yM1QxNzozOTozOVrOH4YdEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0NDYzNg==", "bodyText": "I'm wondering what is purpose of these boolean variables across *Test.java classes when they are never changed. They could be probably eliminated and code could be simplified.", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r517944636", "createdAt": "2020-11-05T10:27:21Z", "author": {"login": "martin-kanis"}, "path": "model/infinispan/src/test/java/org/keycloak/models/sessions/infinispan/initializer/ConcurrencyVersioningTest.java", "diffHunk": "@@ -234,19 +234,16 @@ public static void endBatch(Cache<String, String> cache) {\n \n \n     protected DefaultCacheManager getVersionedCacheManager() {\n-        GlobalConfigurationBuilder gcb = new GlobalConfigurationBuilder();\n-\n-\n-        boolean clustered = false;\n         boolean async = false;\n-        boolean allowDuplicateJMXDomains = true;\n+        boolean clustered = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODg4Mjk2Mg==", "bodyText": "Right, great catch, thanks Martin! Previously tried to do the minimal necessary amount of changes to get the code to compile with new Wildfly / Wildfly Core version. But you are correct regarding those two variables (assuming they got there as the code for new test got copied from DefaultInfinispanConnectionProviderFactory.java [in this file those two can be initialized from system properties] and assuming as the code of these tests got simplified / reduced during the time, their use doesn't make much sense already).\nIn any case, dropped their use if / where applicable (in tests touched within this PR). Please see the latest version.", "url": "https://github.com/keycloak/keycloak/pull/7463#discussion_r528882962", "createdAt": "2020-11-23T17:39:39Z", "author": {"login": "iankko"}, "path": "model/infinispan/src/test/java/org/keycloak/models/sessions/infinispan/initializer/ConcurrencyVersioningTest.java", "diffHunk": "@@ -234,19 +234,16 @@ public static void endBatch(Cache<String, String> cache) {\n \n \n     protected DefaultCacheManager getVersionedCacheManager() {\n-        GlobalConfigurationBuilder gcb = new GlobalConfigurationBuilder();\n-\n-\n-        boolean clustered = false;\n         boolean async = false;\n-        boolean allowDuplicateJMXDomains = true;\n+        boolean clustered = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk0NDYzNg=="}, "originalCommit": {"oid": "760d8f6fc3015896db3047893f8d6e7d73e51350"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3368, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}