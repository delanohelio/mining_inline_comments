{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIzNjkxNjA5", "number": 7111, "title": "KEYCLOAK-14304 Expand xml parsing for SAML Identity Provider", "bodyText": "Changes discribed in https://issues.redhat.com/browse/KEYCLOAK-14304", "createdAt": "2020-05-27T08:27:26Z", "url": "https://github.com/keycloak/keycloak/pull/7111", "merged": true, "mergeCommit": {"oid": "1fa93db1b4df7c2133004d4ac96a0134372c7cb5"}, "closed": true, "closedAt": "2020-09-02T18:43:11Z", "author": {"login": "cgeorgilakis"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcxP_W2gFqTQ0MjI0MDI4MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdFAggrAFqTQ4MTE2NjkzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMjQwMjgw", "url": "https://github.com/keycloak/keycloak/pull/7111#pullrequestreview-442240280", "createdAt": "2020-07-03T08:29:44Z", "commit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwODoyOTo0NVrOGsoVAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwOToyNTo1MFrOGsqFpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ1MTI2Ng==", "bodyText": "Please use a name ending in _NSURI and signalling the source, e.g.:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                ENTITY_ATTRIBUTES(\"urn:oasis:names:tc:SAML:metadata:attribute\"),\n          \n          \n            \n                // http://docs.oasis-open.org/security/saml/Post2.0/sstc-metadata-attr-cd-01.pdf\n          \n          \n            \n                METADATA_ENTITY_ATTRIBUTES_NSURI(\"urn:oasis:names:tc:SAML:metadata:attribute\"),", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449451266", "createdAt": "2020-07-03T08:29:45Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/saml/common/constants/JBossSAMLURIConstants.java", "diffHunk": "@@ -65,6 +65,7 @@\n     HOLDER_OF_KEY(\"urn:oasis:names:tc:SAML:2.0:cm:holder-of-key\"),\n \n     METADATA_NSURI(\"urn:oasis:names:tc:SAML:2.0:metadata\"),\n+    ENTITY_ATTRIBUTES(\"urn:oasis:names:tc:SAML:metadata:attribute\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ1MjE1Mg==", "bodyText": "These constants should be only in the services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderFactory.java\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                String MACEDIR =\"http://macedir.org/entity-category\";\n          \n          \n            \n                String HIDE_FOR_DISCOVERY= \"http://refeds.org/category/hide-from-discovery\";\n          \n          \n            \n                String MACEDIR_ENTITY_CATEGORY = \"http://macedir.org/entity-category\";\n          \n          \n            \n                String REFEDS_HIDE_FOR_DISCOVERY = \"http://refeds.org/category/hide-from-discovery\";", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449452152", "createdAt": "2020-07-03T08:31:26Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/saml/common/constants/GeneralConstants.java", "diffHunk": "@@ -150,6 +150,9 @@\n     String BASE64_ENCODE_WSTRUST_SECRET_KEY = \"picketlink.wstrust.base64_encode_wstrust_secret_key\";\n \n     String HTTP_HEADER_X_REQUESTED_WITH = \"X-Requested-With\";\n+    \n+    String MACEDIR =\"http://macedir.org/entity-category\";\n+    String HIDE_FOR_DISCOVERY= \"http://refeds.org/category/hide-from-discovery\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2MzMxMQ==", "bodyText": "This file belongs to a separate package. Lets call it\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.keycloak.dom.saml.v2.metadata;\n          \n          \n            \n            package org.keycloak.dom.saml.v2.mdattr;", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449463311", "createdAt": "2020-07-03T08:53:33Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/dom/saml/v2/metadata/EntityAttributes.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.keycloak.dom.saml.v2.metadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2NDY5Mw==", "bodyText": "Do not add this field here, and rather use the any above.\nOTOH, you can add a method that would extract the EntityAttributes from the any field, e.g.\n    public EntityAttributes getEntityAttributes() {\n        for (Object o : this.any) {\n            if (o instanceof EntityAttributes) {\n                return (EntityAttributes) o;\n            }\n        }\n        return null;\n    }", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449464693", "createdAt": "2020-07-03T08:56:04Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/dom/saml/v2/metadata/ExtensionsType.java", "diffHunk": "@@ -45,6 +45,8 @@\n \n     protected List<Object> any = new ArrayList<>();\n \n+\n+   protected EntityAttributes entityAttributes;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ2NjcxMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            package org.keycloak.saml.processing.core.parsers.saml.metadata;\n          \n          \n            \n            package org.keycloak.saml.processing.core.parsers.saml.mdattr;", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449466711", "createdAt": "2020-07-03T08:59:51Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLEntityAttributesParser.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.keycloak.saml.processing.core.parsers.saml.metadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3MDM3OA==", "bodyText": "Remove and use parser from org.keycloak.saml.processing.core.parsers.saml.assertion", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449470378", "createdAt": "2020-07-03T09:06:54Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLAssertionParser.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package org.keycloak.saml.processing.core.parsers.saml.metadata;\n+\n+public class SAMLAssertionParser extends SAMLAttributeTypeParser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3MDQ2OQ==", "bodyText": "Remove and use parser from org.keycloak.saml.processing.core.parsers.saml.assertion", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449470469", "createdAt": "2020-07-03T09:07:05Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLAttributeParser.java", "diffHunk": "@@ -16,20 +16,12 @@\n  */\n package org.keycloak.saml.processing.core.parsers.saml.metadata;\n \n-import org.keycloak.dom.saml.v2.assertion.AttributeType;\n-import org.keycloak.saml.common.exceptions.ParsingException;\n-import org.keycloak.saml.common.util.StaxParserUtil;\n-import org.keycloak.saml.processing.core.parsers.saml.assertion.SAMLAttributeValueParser;\n-\n-import javax.xml.stream.XMLEventReader;\n-import javax.xml.stream.events.StartElement;\n-\n /**\n  * Parse the <conditions> in the saml assertion\n  *\n  * @since Oct 14, 2010\n  */\n-public class SAMLAttributeParser extends AbstractStaxSamlMetadataParser<AttributeType> {\n+public class SAMLAttributeParser extends SAMLAttributeTypeParser {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3MDYxOA==", "bodyText": "Remove this change", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449470618", "createdAt": "2020-07-03T09:07:24Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLAttributeTypeParser.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package org.keycloak.saml.processing.core.parsers.saml.metadata;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3ODIyNQ==", "bodyText": "Check the formatting.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449478225", "createdAt": "2020-07-03T09:22:10Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderFactory.java", "diffHunk": "@@ -152,6 +155,18 @@ public SAMLIdentityProviderConfig createConfig() {\n                             samlIdentityProviderConfig.setEncryptionPublicKey(defaultCertificate);\n                         }\n                     }\n+                    \n+                    samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date()) );\n+                    \n+                \t//check for hide on login attibute\n+        \t\t\tif ( entityType.getExtensions() != null && entityType.getExtensions().getEntityAttributes() != null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3ODcyMw==", "bodyText": "Remove, there is already enabled property in the parent class.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449478723", "createdAt": "2020-07-03T09:23:10Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderConfig.java", "diffHunk": "@@ -52,6 +52,8 @@\n     public static final String WANT_ASSERTIONS_SIGNED = \"wantAssertionsSigned\";\n     public static final String WANT_AUTHN_REQUESTS_SIGNED = \"wantAuthnRequestsSigned\";\n     public static final String XML_SIG_KEY_INFO_KEY_NAME_TRANSFORMER = \"xmlSigKeyInfoKeyNameTransformer\";\n+    public static final String HIDE_ON_LOGIN = \"hideOnLoginPage\";\n+    public static final String ENABLED = \"enabled\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3OTI1OQ==", "bodyText": "This constant should be in IdentityProviderModel.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449479259", "createdAt": "2020-07-03T09:24:18Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderConfig.java", "diffHunk": "@@ -52,6 +52,8 @@\n     public static final String WANT_ASSERTIONS_SIGNED = \"wantAssertionsSigned\";\n     public static final String WANT_AUTHN_REQUESTS_SIGNED = \"wantAuthnRequestsSigned\";\n     public static final String XML_SIG_KEY_INFO_KEY_NAME_TRANSFORMER = \"xmlSigKeyInfoKeyNameTransformer\";\n+    public static final String HIDE_ON_LOGIN = \"hideOnLoginPage\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3OTYwNg==", "bodyText": "Check formatting.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449479606", "createdAt": "2020-07-03T09:24:53Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLExtensionsParser.java", "diffHunk": "@@ -47,6 +47,14 @@ protected ExtensionsType instantiateElement(XMLEventReader xmlEventReader, Start\n \n     @Override\n     protected void processSubElement(XMLEventReader xmlEventReader, ExtensionsType target, SAMLMetadataQNames element, StartElement elementDetail) throws ParsingException {\n-        target.addExtension(StaxParserUtil.getDOMElement(xmlEventReader));\n+        \n+    \tswitch (element) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3OTcxMQ==", "bodyText": "Check formatting", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449479711", "createdAt": "2020-07-03T09:25:04Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLEntityAttributesParser.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package org.keycloak.saml.processing.core.parsers.saml.metadata;\n+\n+import static org.keycloak.saml.processing.core.parsers.saml.metadata.SAMLMetadataQNames.ATTR_LANG;\n+\n+import java.io.Serializable;\n+\n+import javax.xml.stream.XMLEventReader;\n+import javax.xml.stream.events.StartElement;\n+\n+import org.keycloak.dom.saml.v2.assertion.AttributeType;\n+import org.keycloak.dom.saml.v2.metadata.EntityAttributes;\n+import org.keycloak.saml.common.exceptions.ParsingException;\n+import org.keycloak.saml.common.util.StaxParserUtil;\n+\n+public class SAMLEntityAttributesParser extends AbstractStaxSamlMetadataParser<EntityAttributes> implements Serializable {\n+\t private static final SAMLEntityAttributesParser INSTANCE = new SAMLEntityAttributesParser();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ4MDEwMg==", "bodyText": "This change is not needed.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r449480102", "createdAt": "2020-07-03T09:25:50Z", "author": {"login": "hmlnarik"}, "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "diffHunk": "@@ -965,6 +965,7 @@ module.controller('RealmIdentityProviderCtrl', function($scope, $filter, $upload\n         for (var key in data) {\n             $scope.identityProvider.config[key] = data[key];\n         }\n+        $scope.identityProvider.enabled = data[\"enabled\"];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "872ea5e7ac9d0c741e0b5b341ac24e9e078e02e7", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/872ea5e7ac9d0c741e0b5b341ac24e9e078e02e7", "committedDate": "2020-07-06T13:23:32Z", "message": "pull request comments"}, "afterCommit": {"oid": "7f88355a1aea51cb25c7a45a75535fd117e19d1c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/7f88355a1aea51cb25c7a45a75535fd117e19d1c", "committedDate": "2020-07-07T08:20:17Z", "message": "pull request comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzODYyMDc3", "url": "https://github.com/keycloak/keycloak/pull/7111#pullrequestreview-443862077", "createdAt": "2020-07-07T12:56:45Z", "commit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxMjo1Njo0NlrOGt9QdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQxNToyNDo1MlrOGvWQyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDg0Mjc0MA==", "bodyText": "Please do check the formatting", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r450842740", "createdAt": "2020-07-07T12:56:46Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderFactory.java", "diffHunk": "@@ -152,6 +155,18 @@ public SAMLIdentityProviderConfig createConfig() {\n                             samlIdentityProviderConfig.setEncryptionPublicKey(defaultCertificate);\n                         }\n                     }\n+                    \n+                    samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date()) );\n+                    \n+                \t//check for hide on login attibute\n+        \t\t\tif ( entityType.getExtensions() != null && entityType.getExtensions().getEntityAttributes() != null ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3ODIyNQ=="}, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4MDQ4Mw==", "bodyText": "Check formatting of this whole file.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452280483", "createdAt": "2020-07-09T14:56:13Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/dom/saml/v2/mdattr/EntityAttributes.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package org.keycloak.dom.saml.v2.mdattr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4MzA2OQ==", "bodyText": "Check formatting of the whole file. Please do not use tabs but 4 spaces as indentation.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452283069", "createdAt": "2020-07-09T14:59:34Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/mdattr/SAMLEntityAttributesParser.java", "diffHunk": "@@ -0,0 +1,48 @@\n+package org.keycloak.saml.processing.core.parsers.saml.mdattr;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4MzczMg==", "bodyText": "This belongs below to L 88, the namespace is other (see comment below)", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452283732", "createdAt": "2020-07-09T15:00:24Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/processing/core/parsers/saml/metadata/SAMLMetadataQNames.java", "diffHunk": "@@ -77,14 +77,15 @@\n     ATTR_IS_REQUIRED(null, \"isRequired\"),\n     ATTR_NAME(null, \"Name\"),\n     ATTR_NAME_FORMAT(null, \"NameFormat\"),\n-\n+    ENTITY_ATTRIBUTES(JBossSAMLURIConstants.METADATA_ENTITY_ATTRIBUTES_NSURI, \"EntityAttributes\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI4ODU0Nw==", "bodyText": "Time needs to be adjusted to local \"Keycloak server\" time.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date()) );\n          \n          \n            \n                                samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date(Time.currentTime())) );", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452288547", "createdAt": "2020-07-09T15:06:57Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderFactory.java", "diffHunk": "@@ -152,6 +158,18 @@ public SAMLIdentityProviderConfig createConfig() {\n                             samlIdentityProviderConfig.setEncryptionPublicKey(defaultCertificate);\n                         }\n                     }\n+                    \n+                    samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date()) );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5MzAwMg==", "bodyText": "In that case it is necessary to use a specific name, plain enable would be confusing with the property above.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String ENABLED = \"enabled\";\n          \n          \n            \n                public static final String ENABLED_FROM_METADATA = \"enabledFromMetadata\";", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452293002", "createdAt": "2020-07-09T15:13:13Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderConfig.java", "diffHunk": "@@ -52,6 +52,8 @@\n     public static final String WANT_ASSERTIONS_SIGNED = \"wantAssertionsSigned\";\n     public static final String WANT_AUTHN_REQUESTS_SIGNED = \"wantAuthnRequestsSigned\";\n     public static final String XML_SIG_KEY_INFO_KEY_NAME_TRANSFORMER = \"xmlSigKeyInfoKeyNameTransformer\";\n+    public static final String HIDE_ON_LOGIN = \"hideOnLoginPage\";\n+    public static final String ENABLED = \"enabled\";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTQ3ODcyMw=="}, "originalCommit": {"oid": "35590d000cf584f1c0c7453c6fc6a9e6018697a6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NDk1MA==", "bodyText": "Use constant, not literal:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean enabled = Boolean.valueOf(result.get(\"enabled\"));\n          \n          \n            \n                    result.remove(\"enabled\");\n          \n          \n            \n                    boolean enabled = Boolean.valueOf(result.get(ENABLED_FROM_METADATA));\n          \n          \n            \n                    result.remove(ENABLED_FROM_METADATA);", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452294950", "createdAt": "2020-07-09T15:16:04Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/IdentityProviderTest.java", "diffHunk": "@@ -646,6 +652,10 @@ public void testSamlImportAndExportMultipleSigningKeys() throws URISyntaxExcepti\n         form.addFormData(\"file\", body, MediaType.APPLICATION_XML_TYPE, \"saml-idp-metadata-two-signing-certs\");\n \n         Map<String, String> result = realm.identityProviders().importFrom(form);\n+        //firtsly check and remove enabled from result\n+        boolean enabled = Boolean.valueOf(result.get(\"enabled\"));\n+        result.remove(\"enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NTE0NA==", "bodyText": "Use constant, not literal:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    boolean enabled = Boolean.valueOf(result.get(\"enabled\"));\n          \n          \n            \n                    result.remove(\"enabled\");\n          \n          \n            \n                    boolean enabled = Boolean.valueOf(result.get(ENABLED_FROM_METADATA));\n          \n          \n            \n                    result.remove(ENABLED_FROM_METADATA);", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452295144", "createdAt": "2020-07-09T15:16:21Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/IdentityProviderTest.java", "diffHunk": "@@ -608,6 +609,11 @@ public void testSamlImportAndExport() throws URISyntaxException, IOException, Pa\n         form.addFormData(\"file\", body, MediaType.APPLICATION_XML_TYPE, \"saml-idp-metadata.xml\");\n \n         Map<String, String> result = realm.identityProviders().importFrom(form);\n+       //firtsly check and remove enabled from result\n+        boolean enabled = Boolean.valueOf(result.get(\"enabled\"));\n+        result.remove(\"enabled\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NTUzNw==", "bodyText": "For the tests:\nAdd a test with a an IdP that is not enabled and check that it is indeed not enabled after import.\nWhy is enabled removed from the result? It should remain there to test the functionality.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452295537", "createdAt": "2020-07-09T15:16:56Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/IdentityProviderTest.java", "diffHunk": "@@ -608,6 +609,11 @@ public void testSamlImportAndExport() throws URISyntaxException, IOException, Pa\n         form.addFormData(\"file\", body, MediaType.APPLICATION_XML_TYPE, \"saml-idp-metadata.xml\");\n \n         Map<String, String> result = realm.identityProviders().importFrom(form);\n+       //firtsly check and remove enabled from result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5NjY0OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (data[\"enabled\"] != undefined) {\n          \n          \n            \n                        $scope.identityProvider.enabled = data[\"enabled\"];\n          \n          \n            \n                    if (data[\"enabledFromMetadata\"] !== undefined) {\n          \n          \n            \n                        $scope.identityProvider.enabled = data[\"enabledFromMetadata\"];\n          \n          \n            \n            \n          \n      \n    \n    \n  \n\n(Please note !== and not !=)", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452296648", "createdAt": "2020-07-09T15:18:37Z", "author": {"login": "hmlnarik"}, "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "diffHunk": "@@ -965,6 +965,9 @@ module.controller('RealmIdentityProviderCtrl', function($scope, $filter, $upload\n         for (var key in data) {\n             $scope.identityProvider.config[key] = data[key];\n         }\n+        if (data[\"enabled\"] != undefined) {\n+            $scope.identityProvider.enabled = data[\"enabled\"];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjI5OTY0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    for (Object o : this.any) {\n          \n          \n            \n                        if (o instanceof EntityAttributes) {\n          \n          \n            \n                            return (EntityAttributes) o;\n          \n          \n            \n                        }\n          \n          \n            \n                    }\n          \n          \n            \n                    return null;\n          \n          \n            \n                    return this.any.stream()\n          \n          \n            \n                        .filter(EntityAttributes::isInstance)\n          \n          \n            \n                        .findAny();", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452299645", "createdAt": "2020-07-09T15:22:55Z", "author": {"login": "hmlnarik"}, "path": "saml-core-api/src/main/java/org/keycloak/dom/saml/v2/metadata/ExtensionsType.java", "diffHunk": "@@ -88,4 +89,14 @@ public void removeExtension(Object extension) {\n     public List<Object> getAny() {\n         return Collections.unmodifiableList(this.any);\n     }\n-}\n\\ No newline at end of file\n+\n+    public EntityAttributes getEntityAttributes() {\n+        for (Object o : this.any) {\n+            if (o instanceof EntityAttributes) {\n+                return (EntityAttributes) o;\n+            }\n+        }\n+        return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjMwMTAwMg==", "bodyText": "Prevent potential NPE\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \t\t\t\t    if (MACEDIR_ENTITY_CATEGORY.equals(attribute.getName()) && attribute.getAttributeValue().contains(REFEDS_HIDE_FROM_DISCOVERY) )\n          \n          \n            \n                    \t\t\t\t    if (MACEDIR_ENTITY_CATEGORY.equals(attribute.getName()) && REFEDS_HIDE_FROM_DISCOVERY.equals(attribute.getAttributeValue()))", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r452301002", "createdAt": "2020-07-09T15:24:52Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProviderFactory.java", "diffHunk": "@@ -152,6 +158,18 @@ public SAMLIdentityProviderConfig createConfig() {\n                             samlIdentityProviderConfig.setEncryptionPublicKey(defaultCertificate);\n                         }\n                     }\n+                    \n+                    samlIdentityProviderConfig.setEnabledConfig(entityType.getValidUntil() == null || entityType.getValidUntil().toGregorianCalendar().getTime().after(new Date()) );\n+                    \n+                \t//check for hide on login attribute\n+        \t\t\tif ( entityType.getExtensions() != null && entityType.getExtensions().getEntityAttributes() != null ) {\n+        \t\t\t    for (AttributeType attribute :  entityType.getExtensions().getEntityAttributes().getAttribute()) {\n+        \t\t\t\t    if (MACEDIR_ENTITY_CATEGORY.equals(attribute.getName()) && attribute.getAttributeValue().contains(REFEDS_HIDE_FROM_DISCOVERY) )", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3471111cdfdbddf1cb656d40add4c3f75d53ba2a"}, "originalPosition": 46}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d84e38969ab658a0b536724fd3b6a71d1a48068a", "author": {"user": {"login": "cgeorgilakis", "name": null}}, "url": "https://github.com/keycloak/keycloak/commit/d84e38969ab658a0b536724fd3b6a71d1a48068a", "committedDate": "2020-07-13T13:38:01Z", "message": "pull request comments 2"}, "afterCommit": {"oid": "c19289e26951a4104718473d16de18d789bccdae", "author": {"user": {"login": "cgeorgilakis", "name": null}}, "url": "https://github.com/keycloak/keycloak/commit/c19289e26951a4104718473d16de18d789bccdae", "committedDate": "2020-07-14T07:38:24Z", "message": "pull request comments 2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dd5249248a282e0166c1dbb27c58b403b60a2395", "author": {"user": {"login": "cgeorgilakis", "name": null}}, "url": "https://github.com/keycloak/keycloak/commit/dd5249248a282e0166c1dbb27c58b403b60a2395", "committedDate": "2020-07-14T14:50:03Z", "message": "realmjs and Date correction"}, "afterCommit": {"oid": "c59a3c9c75120ab44a983ea9c00496451561c084", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/c59a3c9c75120ab44a983ea9c00496451561c084", "committedDate": "2020-07-14T15:02:58Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c59a3c9c75120ab44a983ea9c00496451561c084", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/c59a3c9c75120ab44a983ea9c00496451561c084", "committedDate": "2020-07-14T15:02:58Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}, "afterCommit": {"oid": "d7b9d42a132effd137207f1453749a59aed9b974", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/d7b9d42a132effd137207f1453749a59aed9b974", "committedDate": "2020-07-22T14:00:29Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczMTc3Mjcx", "url": "https://github.com/keycloak/keycloak/pull/7111#pullrequestreview-473177271", "createdAt": "2020-08-24T07:21:12Z", "commit": {"oid": "d7b9d42a132effd137207f1453749a59aed9b974"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzoyMToxMlrOHFXg6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQwNzoyMToxMlrOHFXg6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTM5MDE4Ng==", "bodyText": "enabledFromMetadata should be also removed from $scope.identityProvider.config.", "url": "https://github.com/keycloak/keycloak/pull/7111#discussion_r475390186", "createdAt": "2020-08-24T07:21:12Z", "author": {"login": "hmlnarik"}, "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "diffHunk": "@@ -965,6 +965,9 @@ module.controller('RealmIdentityProviderCtrl', function($scope, $filter, $upload\n         for (var key in data) {\n             $scope.identityProvider.config[key] = data[key];\n         }\n+        if (data[\"enabledFromMetadata\"] !== undefined ) {\n+            $scope.identityProvider.enabled = data[\"enabledFromMetadata\"] == \"true\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7b9d42a132effd137207f1453749a59aed9b974"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d7b9d42a132effd137207f1453749a59aed9b974", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/d7b9d42a132effd137207f1453749a59aed9b974", "committedDate": "2020-07-22T14:00:29Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}, "afterCommit": {"oid": "7753e9e69bb1e166ad2eb3b090f7b8e946995e1e", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/7753e9e69bb1e166ad2eb3b090f7b8e946995e1e", "committedDate": "2020-08-26T10:09:37Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c973fb37eb1b92c04f549863a3022676817d7ec9", "author": {"user": {"login": "cgeorgilakis", "name": null}}, "url": "https://github.com/keycloak/keycloak/commit/c973fb37eb1b92c04f549863a3022676817d7ec9", "committedDate": "2020-08-27T10:29:00Z", "message": "remove enabledFromMetadata from config"}, "afterCommit": {"oid": "0b53552d8a2239f5c4efc1c6b9901e571be0631c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/0b53552d8a2239f5c4efc1c6b9901e571be0631c", "committedDate": "2020-08-27T10:36:43Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0b53552d8a2239f5c4efc1c6b9901e571be0631c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/0b53552d8a2239f5c4efc1c6b9901e571be0631c", "committedDate": "2020-08-27T10:36:43Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}, "afterCommit": {"oid": "1b7169610c79bf3dc3aaec1f4a57aa029bd5e83c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/1b7169610c79bf3dc3aaec1f4a57aa029bd5e83c", "committedDate": "2020-09-01T07:21:02Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b7169610c79bf3dc3aaec1f4a57aa029bd5e83c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/1b7169610c79bf3dc3aaec1f4a57aa029bd5e83c", "committedDate": "2020-09-01T07:21:02Z", "message": "https://issues.redhat.com/browse/KEYCLOAK-14304"}, "afterCommit": {"oid": "36502d5495a7aca34176c87b4f09bb75a1abd199", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/36502d5495a7aca34176c87b4f09bb75a1abd199", "committedDate": "2020-09-01T07:40:37Z", "message": "KEYCLOAK-14304 Enhance SAML Identity Provider Metadata processing:wq"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9353e5470d7e62c33fc99737b2750be7075ed84f", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/9353e5470d7e62c33fc99737b2750be7075ed84f", "committedDate": "2020-09-01T07:47:32Z", "message": "KEYCLOAK-14304 Enhance SAML Identity Provider Metadata processing"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "36502d5495a7aca34176c87b4f09bb75a1abd199", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/36502d5495a7aca34176c87b4f09bb75a1abd199", "committedDate": "2020-09-01T07:40:37Z", "message": "KEYCLOAK-14304 Enhance SAML Identity Provider Metadata processing:wq"}, "afterCommit": {"oid": "9353e5470d7e62c33fc99737b2750be7075ed84f", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/9353e5470d7e62c33fc99737b2750be7075ed84f", "committedDate": "2020-09-01T07:47:32Z", "message": "KEYCLOAK-14304 Enhance SAML Identity Provider Metadata processing"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTY2OTM5", "url": "https://github.com/keycloak/keycloak/pull/7111#pullrequestreview-481166939", "createdAt": "2020-09-02T18:42:22Z", "commit": {"oid": "9353e5470d7e62c33fc99737b2750be7075ed84f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3097, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}