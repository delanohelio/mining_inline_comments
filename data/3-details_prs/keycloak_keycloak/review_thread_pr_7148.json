{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMTI0NDA2", "number": 7148, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoxNDozN1rOEDcJng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODo0MDowNlrOEFcV0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMDQyMzk4OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/AbstractFirstBrokerLoginTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxMzoxNDozN1rOGgdVAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo1MTozOVrOGgpgxw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4ODEzMA==", "bodyText": "I'm not sure if this is intended behavior. @mposolda Could you please double check this?", "url": "https://github.com/keycloak/keycloak/pull/7148#discussion_r436688130", "createdAt": "2020-06-08T13:14:37Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/AbstractFirstBrokerLoginTest.java", "diffHunk": "@@ -286,14 +288,19 @@ public void testLinkAccountByLogInAsUserUsingBrowserButtons() {\n         // Click browser 'back' and then 'forward' and then continue\n         driver.navigate().back();\n         assertTrue(driver.getPageSource().contains(\"You are already logged in.\"));\n-        driver.navigate().forward();\n+        driver.navigate().forward(); // here a new execution ID is added to the URL using JS, see below\n         idpConfirmLinkPage.assertCurrent();\n \n         // Click browser 'back' on review profile page\n         idpConfirmLinkPage.clickReviewProfile();\n         waitForPage(driver, \"update account information\", false);\n         updateAccountInformationPage.assertCurrent();\n         driver.navigate().back();\n+        // JS-capable browsers (i.e. all except HtmlUnit) add a new execution ID to the URL which then causes the login expire page to appear (because the old ID and new ID don't match)\n+        if (!(driver instanceof HtmlUnitDriver)) {\n+            loginExpiredPage.assertCurrent();\n+            loginExpiredPage.clickLoginContinueLink();\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee6d153c819fe2b5bbb1858d3b82c1c29b7a7935"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NjY5Mw==", "bodyText": "@vmuzikar Yes, this is expected behaviour. IMO this change is fine", "url": "https://github.com/keycloak/keycloak/pull/7148#discussion_r436886693", "createdAt": "2020-06-08T17:49:48Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/AbstractFirstBrokerLoginTest.java", "diffHunk": "@@ -286,14 +288,19 @@ public void testLinkAccountByLogInAsUserUsingBrowserButtons() {\n         // Click browser 'back' and then 'forward' and then continue\n         driver.navigate().back();\n         assertTrue(driver.getPageSource().contains(\"You are already logged in.\"));\n-        driver.navigate().forward();\n+        driver.navigate().forward(); // here a new execution ID is added to the URL using JS, see below\n         idpConfirmLinkPage.assertCurrent();\n \n         // Click browser 'back' on review profile page\n         idpConfirmLinkPage.clickReviewProfile();\n         waitForPage(driver, \"update account information\", false);\n         updateAccountInformationPage.assertCurrent();\n         driver.navigate().back();\n+        // JS-capable browsers (i.e. all except HtmlUnit) add a new execution ID to the URL which then causes the login expire page to appear (because the old ID and new ID don't match)\n+        if (!(driver instanceof HtmlUnitDriver)) {\n+            loginExpiredPage.assertCurrent();\n+            loginExpiredPage.clickLoginContinueLink();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4ODEzMA=="}, "originalCommit": {"oid": "ee6d153c819fe2b5bbb1858d3b82c1c29b7a7935"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4Nzc1MQ==", "bodyText": "Thanks!", "url": "https://github.com/keycloak/keycloak/pull/7148#discussion_r436887751", "createdAt": "2020-06-08T17:51:39Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/AbstractFirstBrokerLoginTest.java", "diffHunk": "@@ -286,14 +288,19 @@ public void testLinkAccountByLogInAsUserUsingBrowserButtons() {\n         // Click browser 'back' and then 'forward' and then continue\n         driver.navigate().back();\n         assertTrue(driver.getPageSource().contains(\"You are already logged in.\"));\n-        driver.navigate().forward();\n+        driver.navigate().forward(); // here a new execution ID is added to the URL using JS, see below\n         idpConfirmLinkPage.assertCurrent();\n \n         // Click browser 'back' on review profile page\n         idpConfirmLinkPage.clickReviewProfile();\n         waitForPage(driver, \"update account information\", false);\n         updateAccountInformationPage.assertCurrent();\n         driver.navigate().back();\n+        // JS-capable browsers (i.e. all except HtmlUnit) add a new execution ID to the URL which then causes the login expire page to appear (because the old ID and new ID don't match)\n+        if (!(driver instanceof HtmlUnitDriver)) {\n+            loginExpiredPage.assertCurrent();\n+            loginExpiredPage.clickLoginContinueLink();\n+        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjY4ODEzMA=="}, "originalCommit": {"oid": "ee6d153c819fe2b5bbb1858d3b82c1c29b7a7935"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MTQyNjcyOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/HOW-TO-RUN.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwODo0MDowNlrOGjokig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQwOTo0NToxM1rOGjq7NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxODA1OA==", "bodyText": "By default with this profile, firefox is running in headless mode. Could you please add some info about firefoxHeadless property here?", "url": "https://github.com/keycloak/keycloak/pull/7148#discussion_r440018058", "createdAt": "2020-06-15T08:40:06Z", "author": {"login": "mhajas"}, "path": "testsuite/integration-arquillian/HOW-TO-RUN.md", "diffHunk": "@@ -925,3 +925,19 @@ Then, just run tests using the `auth-server-quarkus` profile:\n \n     mvn -f testsuite/integration-arquillian/tests/base/pom.xml clean install -Pauth-server-quarkus\n \n+## Cookies testing\n+In order to reproduce some specific cookies behaviour in browsers (like SameSite policies or 3rd party cookie blocking),\n+some subset of tests needs to be ran with different hosts for auth server and app/IdP server in order to simulate third\n+party contexts. Those hosts must be different from localhost as that host has some special treatment from browsers. At\n+the same time both hosts must use different domains to be considered cross-origin, e.g. `127.0.0.1.nip.io` and\n+`127.0.0.1.xip.io`. NOT `app1.127.0.0.1.nip.io` and `app2.127.0.0.1.nip.io`!!\n+\n+Also, those new cookies policies are currently not yet enabled by default (which will change in the near future). To test\n+those policies, you need the latest stable Firefox and use `firefox-strict-cookies` profile.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edef4443ae54e6eaf03e17edd9bf0b25affaca18"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDA1NjYyOQ==", "bodyText": "Thanks for the review! I've updated the docs.", "url": "https://github.com/keycloak/keycloak/pull/7148#discussion_r440056629", "createdAt": "2020-06-15T09:45:13Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/HOW-TO-RUN.md", "diffHunk": "@@ -925,3 +925,19 @@ Then, just run tests using the `auth-server-quarkus` profile:\n \n     mvn -f testsuite/integration-arquillian/tests/base/pom.xml clean install -Pauth-server-quarkus\n \n+## Cookies testing\n+In order to reproduce some specific cookies behaviour in browsers (like SameSite policies or 3rd party cookie blocking),\n+some subset of tests needs to be ran with different hosts for auth server and app/IdP server in order to simulate third\n+party contexts. Those hosts must be different from localhost as that host has some special treatment from browsers. At\n+the same time both hosts must use different domains to be considered cross-origin, e.g. `127.0.0.1.nip.io` and\n+`127.0.0.1.xip.io`. NOT `app1.127.0.0.1.nip.io` and `app2.127.0.0.1.nip.io`!!\n+\n+Also, those new cookies policies are currently not yet enabled by default (which will change in the near future). To test\n+those policies, you need the latest stable Firefox and use `firefox-strict-cookies` profile.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDAxODA1OA=="}, "originalCommit": {"oid": "edef4443ae54e6eaf03e17edd9bf0b25affaca18"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3541, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}