{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjg3MDY5", "number": 7099, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNToxNTozNlrOD_I4QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNToxNTozNlrOD_I4QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY3NTMyMzUyOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oidc/flows/AbstractOIDCResponseTypeTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yM1QxNToxNTozNlrOGZp6xQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDoxOToxNFrOGaggqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1NDM3Mw==", "bodyText": "One could optionally verify the generated hash, but I did not find a method to do that. Would be great if someone could point me to a method where the at_hash claim is checked...? :)", "url": "https://github.com/keycloak/keycloak/pull/7099#discussion_r429554373", "createdAt": "2020-05-23T15:15:36Z", "author": {"login": "thomasdarimont"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oidc/flows/AbstractOIDCResponseTypeTest.java", "diffHunk": "@@ -253,6 +253,8 @@ private void oidcFlow(String expectedAccessAlg, String expectedIdTokenAlg) throw\n         for (IDToken idt : idTokens) {\n             Assert.assertEquals(\"abcdef123456\", idt.getNonce());\n             Assert.assertEquals(authzResponse.getSessionState(), idt.getSessionState());\n+            // see KEYCLOAK-9635\n+            Assert.assertNotNull(\"claim at_hash should be present in IDToken for OIDC auth code flow requests\", idt.getAccessTokenHash());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1d20d2ef876f4c3659d51a8f70afc00bd6c07843"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ0ODgwOQ==", "bodyText": "@thomasdarimont It is done for example in testAuthzResponseAndRetrieveIDTokens() of various tests, which already generate \"at_has\" . For example in OIDCImplicitResponseTypeIDTokenTokenTest.testAuthzResponseAndRetrieveIDTokens() .\nI suggest to explicitly add the verifications to the individual methods to explicitly check OIDCXYTest.testAuthzResponseAndRetrieveIDTokens() to explicitly check if \"at_hash\" is generated always when it makes sense instead of using it here in the subclass where the check is not very explicit. WDYT?", "url": "https://github.com/keycloak/keycloak/pull/7099#discussion_r430448809", "createdAt": "2020-05-26T14:19:14Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oidc/flows/AbstractOIDCResponseTypeTest.java", "diffHunk": "@@ -253,6 +253,8 @@ private void oidcFlow(String expectedAccessAlg, String expectedIdTokenAlg) throw\n         for (IDToken idt : idTokens) {\n             Assert.assertEquals(\"abcdef123456\", idt.getNonce());\n             Assert.assertEquals(authzResponse.getSessionState(), idt.getSessionState());\n+            // see KEYCLOAK-9635\n+            Assert.assertNotNull(\"claim at_hash should be present in IDToken for OIDC auth code flow requests\", idt.getAccessTokenHash());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTU1NDM3Mw=="}, "originalCommit": {"oid": "1d20d2ef876f4c3659d51a8f70afc00bd6c07843"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3661, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}