{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwMjk3MzAy", "number": 7540, "title": "KEYCLOAK-4544 Broker Login autolink with disabled user creation", "bodyText": "Hi,\nI am unable to reopen the PR #6282 .\nLike other users describe in the JIRA ticket, I use an Id provider and I want to restrict users by linking only on existing account.\nAccording to @mposolda comments, I have added a DISABLE_USER_CREATION option to the IdpCreateUserIfUniqueAuthenticator.\nHope my contribution will help.\nDidier", "createdAt": "2020-10-26T20:45:49Z", "url": "https://github.com/keycloak/keycloak/pull/7540", "merged": true, "mergeCommit": {"oid": "cb12fed96eeeffd118694856ffe7c453e33844a8"}, "closed": true, "closedAt": "2021-02-11T10:06:50Z", "author": {"login": "diodfr"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdWmsaGABqjM5MjUyMjMyNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABd4xjzdgFqTU4NzY3ODI2Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b20ee612d90f8ec5863f8e5cf3eec6e2132c9199", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/b20ee612d90f8ec5863f8e5cf3eec6e2132c9199", "committedDate": "2020-10-26T18:24:46Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}, "afterCommit": {"oid": "ecbbc59c1cd6def0cd5399f9b956117a92a2ba45", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/ecbbc59c1cd6def0cd5399f9b956117a92a2ba45", "committedDate": "2020-10-27T10:48:00Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ecbbc59c1cd6def0cd5399f9b956117a92a2ba45", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/ecbbc59c1cd6def0cd5399f9b956117a92a2ba45", "committedDate": "2020-10-27T10:48:00Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}, "afterCommit": {"oid": "4c7e1bc257b04e048b30baa6cfddcaf7a25c0f9f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/4c7e1bc257b04e048b30baa6cfddcaf7a25c0f9f", "committedDate": "2020-10-27T10:50:47Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4c7e1bc257b04e048b30baa6cfddcaf7a25c0f9f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/4c7e1bc257b04e048b30baa6cfddcaf7a25c0f9f", "committedDate": "2020-10-27T10:50:47Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}, "afterCommit": {"oid": "203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3", "committedDate": "2020-10-27T11:01:14Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0MTkwOTE3", "url": "https://github.com/keycloak/keycloak/pull/7540#pullrequestreview-534190917", "createdAt": "2020-11-19T08:44:15Z", "commit": {"oid": "203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo0NDoxNVrOH2SRvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwODo0NDoxNVrOH2SRvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjY4NDYwNQ==", "bodyText": "Is it possible to avoid changes in this class in this PR?", "url": "https://github.com/keycloak/keycloak/pull/7540#discussion_r526684605", "createdAt": "2020-11-19T08:44:15Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/authentication/AuthenticationProcessor.java", "diffHunk": "@@ -976,12 +976,12 @@ public Response authenticateOnly() throws AuthenticationFlowException {\n         AuthenticationFlow authenticationFlow = createFlowExecution(this.flowId, null);\n         Response challenge = authenticationFlow.processFlow();\n         if (challenge != null) return challenge;\n-        if (authenticationSession.getAuthenticatedUser() == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/203e1ad2a0abdf7e262d0e26da7aeba1e71ab6e3", "committedDate": "2020-10-27T11:01:14Z", "message": "KEYCLOAK-4544 Broker Login autolink with disabled user creation"}, "afterCommit": {"oid": "dea779a50fd2e038408b6e2a80c76b13dc44954f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/dea779a50fd2e038408b6e2a80c76b13dc44954f", "committedDate": "2021-01-30T18:28:36Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "dea779a50fd2e038408b6e2a80c76b13dc44954f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/dea779a50fd2e038408b6e2a80c76b13dc44954f", "committedDate": "2021-01-30T18:28:36Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}, "afterCommit": {"oid": "97f202a95506b07051a8d7a6e5805b713cf0ff6f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/97f202a95506b07051a8d7a6e5805b713cf0ff6f", "committedDate": "2021-01-31T14:12:10Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTgyNTM4MTA4", "url": "https://github.com/keycloak/keycloak/pull/7540#pullrequestreview-582538108", "createdAt": "2021-02-03T16:13:00Z", "commit": {"oid": "97f202a95506b07051a8d7a6e5805b713cf0ff6f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxNjoxMzowMVrOIfKQIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMi0wM1QxOTo1Njo0M1rOIfUIhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTU0NDczNw==", "bodyText": "This looks like a typo added by accident?", "url": "https://github.com/keycloak/keycloak/pull/7540#discussion_r569544737", "createdAt": "2021-02-03T16:13:01Z", "author": {"login": "mposolda"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/authentication/AbstractAuthenticationTest.java", "diffHunk": "@@ -193,7 +193,7 @@ AuthenticatorConfigRepresentation newConfig(String alias, String[] keyvalues) {\n         return config;\n     }\n \n-    void createFlow(AuthenticationFlowRepresentation flowRep) {\n+    void createFlow(AuthenticationFlowRepresentation flowRep) {//", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f202a95506b07051a8d7a6e5805b713cf0ff6f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU2OTcwNjYzMQ==", "bodyText": "I see in the test, that user will see \"Invalid username or error\", which doesn't look like correct error message. There will be probably some better message like \"Invalid user\" ? It is available as a constant Messages.INVALID_USER.\nFor the inspiration, I suggest to take a look for example here https://github.com/keycloak/keycloak/blob/12.0.0/services/src/main/java/org/keycloak/authentication/authenticators/broker/IdpCreateUserIfUniqueAuthenticator.java#L103 for how to throw the error message and ensure that correct event is triggered.", "url": "https://github.com/keycloak/keycloak/pull/7540#discussion_r569706631", "createdAt": "2021-02-03T19:56:43Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/broker/IdpDetectExistingBrokerUserAuthenticator.java", "diffHunk": "@@ -0,0 +1,80 @@\n+/*\n+ * Copyright 2016 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.authentication.authenticators.broker;\n+\n+import org.jboss.logging.Logger;\n+import org.keycloak.authentication.AuthenticationFlowContext;\n+import org.keycloak.authentication.authenticators.broker.util.ExistingUserInfo;\n+import org.keycloak.authentication.authenticators.broker.util.SerializedBrokeredIdentityContext;\n+import org.keycloak.broker.provider.BrokeredIdentityContext;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.UserModel;\n+import org.keycloak.services.ServicesLogger;\n+\n+import static org.keycloak.authentication.AuthenticationFlowError.UNKNOWN_USER;\n+\n+public class IdpDetectExistingBrokerUserAuthenticator extends IdpCreateUserIfUniqueAuthenticator {\n+\n+    private static final Logger logger = Logger.getLogger(IdpDetectExistingBrokerUserAuthenticator.class);\n+\n+    @Override\n+    protected void authenticateImpl(AuthenticationFlowContext context, SerializedBrokeredIdentityContext serializedCtx, BrokeredIdentityContext brokerContext) {\n+\n+        RealmModel realm = context.getRealm();\n+\n+        if (context.getAuthenticationSession().getAuthNote(EXISTING_USER_INFO) != null) {\n+            context.attempted();\n+            return;\n+        }\n+\n+        String username = getUsername(context, serializedCtx, brokerContext);\n+        if (username == null) {\n+            ServicesLogger.LOGGER.resetFlow(realm.isRegistrationEmailAsUsername() ? \"Email\" : \"Username\");\n+            context.getAuthenticationSession().setAuthNote(ENFORCE_UPDATE_PROFILE, \"true\");\n+            context.resetFlow();\n+            return;\n+        }\n+\n+        ExistingUserInfo duplication = checkExistingUser(context, username, serializedCtx, brokerContext);\n+\n+        if (duplication == null) {\n+            logger.errorf(\"The user %s should be already registered in the realm to login  %s\",username,  realm.getName());\n+            context.failure(UNKNOWN_USER);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f202a95506b07051a8d7a6e5805b713cf0ff6f"}, "originalPosition": 58}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97f202a95506b07051a8d7a6e5805b713cf0ff6f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/97f202a95506b07051a8d7a6e5805b713cf0ff6f", "committedDate": "2021-01-31T14:12:10Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}, "afterCommit": {"oid": "22b87b48a00674497959cf17f777a62106ae0cf0", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/22b87b48a00674497959cf17f777a62106ae0cf0", "committedDate": "2021-02-08T07:49:14Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22b87b48a00674497959cf17f777a62106ae0cf0", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/22b87b48a00674497959cf17f777a62106ae0cf0", "committedDate": "2021-02-08T07:49:14Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}, "afterCommit": {"oid": "cbfbbfcd34db746cf9db7e6e1259ba519ac91c6f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/cbfbbfcd34db746cf9db7e6e1259ba519ac91c6f", "committedDate": "2021-02-08T08:57:08Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d44c1914768ee9014339a0b0d5493ff48184e5d", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/4d44c1914768ee9014339a0b0d5493ff48184e5d", "committedDate": "2021-02-09T16:02:41Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbfbbfcd34db746cf9db7e6e1259ba519ac91c6f", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/cbfbbfcd34db746cf9db7e6e1259ba519ac91c6f", "committedDate": "2021-02-08T08:57:08Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}, "afterCommit": {"oid": "4d44c1914768ee9014339a0b0d5493ff48184e5d", "author": {"user": {"login": "diodfr", "name": "Diod FR"}}, "url": "https://github.com/keycloak/keycloak/commit/4d44c1914768ee9014339a0b0d5493ff48184e5d", "committedDate": "2021-02-09T16:02:41Z", "message": "KEYCLOAK-4544 Detect existing user before granting user autolink"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTg3Njc4MjYy", "url": "https://github.com/keycloak/keycloak/pull/7540#pullrequestreview-587678262", "createdAt": "2021-02-10T14:41:28Z", "commit": {"oid": "4d44c1914768ee9014339a0b0d5493ff48184e5d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3387, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}