{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgyODE5NDc2", "number": 6855, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyMjo0N1rODth5Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOToxNDozOVrODxWnPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDY3ODY2OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/services/resources/account/resources/ResourcesService.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyMjo0N1rOF_AWxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMzoyMjo0N1rOF_AWxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTYxMDQzNg==", "bodyText": "I think we avoid using wildcard when possible.", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r401610436", "createdAt": "2020-04-01T13:22:47Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/services/resources/account/resources/ResourcesService.java", "diffHunk": "@@ -25,11 +25,7 @@\n import javax.ws.rs.QueryParam;\n import javax.ws.rs.core.Link;\n import javax.ws.rs.core.Response;\n-import java.util.ArrayList;\n-import java.util.Collection;\n-import java.util.HashMap;\n-import java.util.List;\n-import java.util.Map;\n+import java.util.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5bdce024e8bc137d8317be8cbdc7d16861e980b0"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDcyMTIzOnYy", "diffSide": "RIGHT", "path": "themes/pom.xml", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODo1OToxNlrOGExPOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMzoyMjoyMFrOGFOWuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDIwMQ==", "bodyText": "Didn't we get rid of querystring?", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407654201", "createdAt": "2020-04-13T18:59:16Z", "author": {"login": "ssilvert"}, "path": "themes/pom.xml", "diffHunk": "@@ -143,6 +143,13 @@\n                     <include>**/node_modules/systemjs/dist/system.src.js</include>\n                     <include>**/node_modules/tippy.js/dist/tippy.min.js</include>\n                     <include>**/node_modules/upper-case/upper-case.js</include>\n+                    <include>**/node_modules/parse-link-header/index.js</include>\n+                    <include>**/node_modules/querystring/*.js</include>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5MTUxNw==", "bodyText": "only in the new snowpack version right? but I could merge that in here as well", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407891517", "createdAt": "2020-04-14T06:18:12Z", "author": {"login": "edewit"}, "path": "themes/pom.xml", "diffHunk": "@@ -143,6 +143,13 @@\n                     <include>**/node_modules/systemjs/dist/system.src.js</include>\n                     <include>**/node_modules/tippy.js/dist/tippy.min.js</include>\n                     <include>**/node_modules/upper-case/upper-case.js</include>\n+                    <include>**/node_modules/parse-link-header/index.js</include>\n+                    <include>**/node_modules/querystring/*.js</include>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDIwMQ=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3NTMyMA==", "bodyText": "It was my understanding that you added custom code so we could stop using querystring and url packages.  If that code is ready to go then let's go ahead and include with this PR.  Since it only affects My Resources, I think that will be easier than using a standalone PR for it.", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r408075320", "createdAt": "2020-04-14T11:50:46Z", "author": {"login": "ssilvert"}, "path": "themes/pom.xml", "diffHunk": "@@ -143,6 +143,13 @@\n                     <include>**/node_modules/systemjs/dist/system.src.js</include>\n                     <include>**/node_modules/tippy.js/dist/tippy.min.js</include>\n                     <include>**/node_modules/upper-case/upper-case.js</include>\n+                    <include>**/node_modules/parse-link-header/index.js</include>\n+                    <include>**/node_modules/querystring/*.js</include>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDIwMQ=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEzMTI1Nw==", "bodyText": "your understanding is correct, I thought that this would be included in your PR not this one. But we can add it here makes no difference.", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r408131257", "createdAt": "2020-04-14T13:22:20Z", "author": {"login": "edewit"}, "path": "themes/pom.xml", "diffHunk": "@@ -143,6 +143,13 @@\n                     <include>**/node_modules/systemjs/dist/system.src.js</include>\n                     <include>**/node_modules/tippy.js/dist/tippy.min.js</include>\n                     <include>**/node_modules/upper-case/upper-case.js</include>\n+                    <include>**/node_modules/parse-link-header/index.js</include>\n+                    <include>**/node_modules/querystring/*.js</include>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDIwMQ=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDcyMjA4OnYy", "diffSide": "RIGHT", "path": "themes/pom.xml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODo1OTozMlrOGExPzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODo1OTozMlrOGExPzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1NDM0OA==", "bodyText": "Didn't we get rid of url?", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407654348", "createdAt": "2020-04-13T18:59:32Z", "author": {"login": "ssilvert"}, "path": "themes/pom.xml", "diffHunk": "@@ -143,6 +143,13 @@\n                     <include>**/node_modules/systemjs/dist/system.src.js</include>\n                     <include>**/node_modules/tippy.js/dist/tippy.min.js</include>\n                     <include>**/node_modules/upper-case/upper-case.js</include>\n+                    <include>**/node_modules/parse-link-header/index.js</include>\n+                    <include>**/node_modules/querystring/*.js</include>\n+                    <include>**/node_modules/url/url.js</include>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDc0NzMxOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/EditTheResource.tsx", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTowNjo1OVrOGExf3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNzoxMjoyN1rOGFBFLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1ODQ2MQ==", "bodyText": "@edewit Just wondering.  Have you tried this on small devices like cell phones?  How does it look?", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407658461", "createdAt": "2020-04-13T19:06:59Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/EditTheResource.tsx", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import {\n+    Button,\n+    Modal,\n+    DataList,\n+    DataListItemRow,\n+    DataListItemCells,\n+    DataListCell,\n+    DataListItem,\n+    ChipGroup,\n+    ChipGroupToolbarItem,\n+    Chip\n+} from '@patternfly/react-core';\n+\n+import { EditAltIcon } from '@patternfly/react-icons';\n+\n+import { Resource, Permission, Scope } from './MyResourcesPage';\n+import { Msg } from '../../widgets/Msg';\n+import { AccountServiceClient } from '../../account-service/account.service';\n+import { ContentAlert } from '../ContentAlert';\n+\n+interface EditTheResourceProps {\n+    resource: Resource;\n+    permissions: Permission[];\n+    onClose: (resource: Resource, row: number) => void;\n+    row: number;\n+}\n+\n+interface EditTheResourceState {\n+    isOpen: boolean;\n+}\n+\n+export class EditTheResource extends React.Component<EditTheResourceProps, EditTheResourceState> {\n+    protected static defaultProps = { permissions: [], row: 0 };\n+\n+    public constructor(props: EditTheResourceProps) {\n+        super(props);\n+\n+        this.state = {\n+            isOpen: false,\n+        };\n+    }\n+\n+    private clearState(): void {\n+        this.setState({\n+        });\n+    }\n+\n+    private handleToggleDialog = () => {\n+        if (this.state.isOpen) {\n+            this.setState({ isOpen: false });\n+        } else {\n+            this.clearState();\n+            this.setState({ isOpen: true });\n+        }\n+    };\n+\n+    async deletePermission(permission: Permission, scope: Scope): Promise<void> {\n+        permission.scopes.splice(permission.scopes.indexOf(scope), 1);\n+        await AccountServiceClient.Instance.doPut(`/resources/${this.props.resource._id}/permissions`, {data: [permission]});\n+        ContentAlert.success(Msg.localize('shareSuccess'));\n+        this.props.onClose(this.props.resource, this.props.row);\n+    }\n+\n+    public render(): React.ReactNode {\n+        return (\n+            <React.Fragment>\n+                <Button variant=\"link\" onClick={this.handleToggleDialog}>\n+                    <EditAltIcon /> Edit\n+                </Button>\n+\n+                <Modal\n+                    title={'Edit the resource - ' + this.props.resource.name}\n+                    isLarge={true}\n+                    width={'45%'}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5NjMxOA==", "bodyText": "that is a very stupid setting both seems that it's a copy paste, removed it in both places. Without it it looks like this:", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407896318", "createdAt": "2020-04-14T06:31:35Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/EditTheResource.tsx", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import {\n+    Button,\n+    Modal,\n+    DataList,\n+    DataListItemRow,\n+    DataListItemCells,\n+    DataListCell,\n+    DataListItem,\n+    ChipGroup,\n+    ChipGroupToolbarItem,\n+    Chip\n+} from '@patternfly/react-core';\n+\n+import { EditAltIcon } from '@patternfly/react-icons';\n+\n+import { Resource, Permission, Scope } from './MyResourcesPage';\n+import { Msg } from '../../widgets/Msg';\n+import { AccountServiceClient } from '../../account-service/account.service';\n+import { ContentAlert } from '../ContentAlert';\n+\n+interface EditTheResourceProps {\n+    resource: Resource;\n+    permissions: Permission[];\n+    onClose: (resource: Resource, row: number) => void;\n+    row: number;\n+}\n+\n+interface EditTheResourceState {\n+    isOpen: boolean;\n+}\n+\n+export class EditTheResource extends React.Component<EditTheResourceProps, EditTheResourceState> {\n+    protected static defaultProps = { permissions: [], row: 0 };\n+\n+    public constructor(props: EditTheResourceProps) {\n+        super(props);\n+\n+        this.state = {\n+            isOpen: false,\n+        };\n+    }\n+\n+    private clearState(): void {\n+        this.setState({\n+        });\n+    }\n+\n+    private handleToggleDialog = () => {\n+        if (this.state.isOpen) {\n+            this.setState({ isOpen: false });\n+        } else {\n+            this.clearState();\n+            this.setState({ isOpen: true });\n+        }\n+    };\n+\n+    async deletePermission(permission: Permission, scope: Scope): Promise<void> {\n+        permission.scopes.splice(permission.scopes.indexOf(scope), 1);\n+        await AccountServiceClient.Instance.doPut(`/resources/${this.props.resource._id}/permissions`, {data: [permission]});\n+        ContentAlert.success(Msg.localize('shareSuccess'));\n+        this.props.onClose(this.props.resource, this.props.row);\n+    }\n+\n+    public render(): React.ReactNode {\n+        return (\n+            <React.Fragment>\n+                <Button variant=\"link\" onClick={this.handleToggleDialog}>\n+                    <EditAltIcon /> Edit\n+                </Button>\n+\n+                <Modal\n+                    title={'Edit the resource - ' + this.props.resource.name}\n+                    isLarge={true}\n+                    width={'45%'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1ODQ2MQ=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkxMzc3Mw==", "bodyText": "on a wide screen without the 45% it's a bit wide, but still okay in my opinion:", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407913773", "createdAt": "2020-04-14T07:12:27Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/EditTheResource.tsx", "diffHunk": "@@ -0,0 +1,147 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *      http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import * as React from 'react';\n+\n+import {\n+    Button,\n+    Modal,\n+    DataList,\n+    DataListItemRow,\n+    DataListItemCells,\n+    DataListCell,\n+    DataListItem,\n+    ChipGroup,\n+    ChipGroupToolbarItem,\n+    Chip\n+} from '@patternfly/react-core';\n+\n+import { EditAltIcon } from '@patternfly/react-icons';\n+\n+import { Resource, Permission, Scope } from './MyResourcesPage';\n+import { Msg } from '../../widgets/Msg';\n+import { AccountServiceClient } from '../../account-service/account.service';\n+import { ContentAlert } from '../ContentAlert';\n+\n+interface EditTheResourceProps {\n+    resource: Resource;\n+    permissions: Permission[];\n+    onClose: (resource: Resource, row: number) => void;\n+    row: number;\n+}\n+\n+interface EditTheResourceState {\n+    isOpen: boolean;\n+}\n+\n+export class EditTheResource extends React.Component<EditTheResourceProps, EditTheResourceState> {\n+    protected static defaultProps = { permissions: [], row: 0 };\n+\n+    public constructor(props: EditTheResourceProps) {\n+        super(props);\n+\n+        this.state = {\n+            isOpen: false,\n+        };\n+    }\n+\n+    private clearState(): void {\n+        this.setState({\n+        });\n+    }\n+\n+    private handleToggleDialog = () => {\n+        if (this.state.isOpen) {\n+            this.setState({ isOpen: false });\n+        } else {\n+            this.clearState();\n+            this.setState({ isOpen: true });\n+        }\n+    };\n+\n+    async deletePermission(permission: Permission, scope: Scope): Promise<void> {\n+        permission.scopes.splice(permission.scopes.indexOf(scope), 1);\n+        await AccountServiceClient.Instance.doPut(`/resources/${this.props.resource._id}/permissions`, {data: [permission]});\n+        ContentAlert.success(Msg.localize('shareSuccess'));\n+        this.props.onClose(this.props.resource, this.props.row);\n+    }\n+\n+    public render(): React.ReactNode {\n+        return (\n+            <React.Fragment>\n+                <Button variant=\"link\" onClick={this.handleToggleDialog}>\n+                    <EditAltIcon /> Edit\n+                </Button>\n+\n+                <Modal\n+                    title={'Edit the resource - ' + this.props.resource.name}\n+                    isLarge={true}\n+                    width={'45%'}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY1ODQ2MQ=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 92}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDc3MzA4OnYy", "diffSide": "LEFT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/MyResourcesPage.tsx", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOToxNDozOVrOGExvsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwNjoyMTozMlrOGE_yhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2MjUxNA==", "bodyText": "Is noResourceSharedWithYou still used somewhere?  If not, it needs to be removed from the resource bundle.", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407662514", "createdAt": "2020-04-13T19:14:39Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/MyResourcesPage.tsx", "diffHunk": "@@ -224,8 +227,8 @@ export class MyResourcesPage extends React.Component<MyResourcesPageProps, MyRes\n         return (\n             <ContentPage title=\"resources\" onRefresh={this.fetchInitialResources.bind(this)}>\n                 <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n-                    {this.makeTab(0, 'myResources', this.state.myResources, 'notHaveAnyResource')}\n-                    {this.makeTab(1, 'sharedwithMe', this.state.sharedWithMe, 'noResourcesSharedWithYou')}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzg5MjYxMg==", "bodyText": "it's used on multiple places just not here ;)", "url": "https://github.com/keycloak/keycloak/pull/6855#discussion_r407892612", "createdAt": "2020-04-14T06:21:32Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/content/my-resources-page/MyResourcesPage.tsx", "diffHunk": "@@ -224,8 +227,8 @@ export class MyResourcesPage extends React.Component<MyResourcesPageProps, MyRes\n         return (\n             <ContentPage title=\"resources\" onRefresh={this.fetchInitialResources.bind(this)}>\n                 <Tabs isFilled activeKey={this.state.activeTabKey} onSelect={this.handleTabClick}>\n-                    {this.makeTab(0, 'myResources', this.state.myResources, 'notHaveAnyResource')}\n-                    {this.makeTab(1, 'sharedwithMe', this.state.sharedWithMe, 'noResourcesSharedWithYou')}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY2MjUxNA=="}, "originalCommit": {"oid": "d50137e08e8fd004d9e0a203af51ee4a92cd086e"}, "originalPosition": 106}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3806, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}