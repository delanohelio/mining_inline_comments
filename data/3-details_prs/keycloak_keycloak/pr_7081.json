{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwMTExMjYw", "number": 7081, "title": "[KEYCLOAK-11784] - Quarkus Keycloak Application", "bodyText": "", "createdAt": "2020-05-19T13:14:07Z", "url": "https://github.com/keycloak/keycloak/pull/7081", "merged": true, "mergeCommit": {"oid": "54db691b26d7d096d98438f43a205262ea64145e"}, "closed": true, "closedAt": "2020-05-20T06:25:26Z", "author": {"login": "pedroigor"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABci0Ri0AH2gAyNDIwMTExMjYwOjExNTI4OThkMTVhMGI2MjMzZGIzMWQ2NzZkYzM2OTZiZDgwOTRhNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjC5vzgFqTQxNTAyMDQ2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1152898d15a0b6233db31d676dc3696bd8094a57", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/1152898d15a0b6233db31d676dc3696bd8094a57", "committedDate": "2020-05-19T13:13:44Z", "message": "[KEYCLOAK-11784] - Quarkus Keycloak Application"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDc4MjEz", "url": "https://github.com/keycloak/keycloak/pull/7081#pullrequestreview-414478213", "createdAt": "2020-05-19T14:04:26Z", "commit": {"oid": "1152898d15a0b6233db31d676dc3696bd8094a57"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDowNDoyN1rOGXh_-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDowNDoyN1rOGXh_-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMyNzQ4MA==", "bodyText": "Would it be possible to move the initialization logic into a dedicated protected init() method?", "url": "https://github.com/keycloak/keycloak/pull/7081#discussion_r427327480", "createdAt": "2020-05-19T14:04:27Z", "author": {"login": "thomasdarimont"}, "path": "quarkus/runtime/src/main/java/org/keycloak/QuarkusKeycloakApplication.java", "diffHunk": "@@ -1,10 +1,402 @@\n package org.keycloak;\n \n+import javax.transaction.SystemException;\n+import javax.transaction.Transaction;\n import javax.ws.rs.ApplicationPath;\n \n+import java.io.File;\n+import java.io.FileInputStream;\n+import java.io.FileNotFoundException;\n+import java.io.IOException;\n+import java.io.InputStream;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.NoSuchElementException;\n+import java.util.ServiceLoader;\n+import java.util.Set;\n+import java.util.StringTokenizer;\n+import java.util.concurrent.atomic.AtomicBoolean;\n+\n+import com.fasterxml.jackson.core.type.TypeReference;\n+import org.jboss.logging.Logger;\n+import org.keycloak.common.util.Resteasy;\n+import org.keycloak.config.ConfigProviderFactory;\n+import org.keycloak.exportimport.ExportImportManager;\n+import org.keycloak.migration.MigrationModelManager;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.KeycloakSessionFactory;\n+import org.keycloak.models.KeycloakSessionTask;\n+import org.keycloak.models.ModelDuplicateException;\n+import org.keycloak.models.RealmModel;\n+import org.keycloak.models.UserModel;\n+import org.keycloak.models.UserProvider;\n+import org.keycloak.models.dblock.DBLockManager;\n+import org.keycloak.models.dblock.DBLockProvider;\n+import org.keycloak.models.utils.KeycloakModelUtils;\n+import org.keycloak.models.utils.PostMigrationEvent;\n+import org.keycloak.models.utils.RepresentationToModel;\n+import org.keycloak.platform.Platform;\n+import org.keycloak.platform.PlatformProvider;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.services.DefaultKeycloakSessionFactory;\n+import org.keycloak.services.ServicesLogger;\n+import org.keycloak.services.error.KeycloakErrorHandler;\n+import org.keycloak.services.filters.KeycloakSecurityHeadersFilter;\n+import org.keycloak.services.filters.KeycloakTransactionCommitter;\n+import org.keycloak.services.managers.ApplianceBootstrap;\n+import org.keycloak.services.managers.RealmManager;\n+import org.keycloak.services.managers.UserStorageSyncManager;\n+import org.keycloak.services.resources.JsResource;\n import org.keycloak.services.resources.KeycloakApplication;\n+import org.keycloak.services.resources.RealmsResource;\n+import org.keycloak.services.resources.RobotsResource;\n+import org.keycloak.services.resources.ThemeResource;\n+import org.keycloak.services.resources.WelcomeResource;\n+import org.keycloak.services.resources.admin.AdminRoot;\n+import org.keycloak.services.scheduled.ClearExpiredClientInitialAccessTokens;\n+import org.keycloak.services.scheduled.ClearExpiredEvents;\n+import org.keycloak.services.scheduled.ClearExpiredUserSessions;\n+import org.keycloak.services.scheduled.ClusterAwareScheduledTaskRunner;\n+import org.keycloak.services.scheduled.ScheduledTaskRunner;\n+import org.keycloak.services.util.ObjectMapperResolver;\n+import org.keycloak.timer.TimerProvider;\n+import org.keycloak.transaction.JtaTransactionManagerLookup;\n+import org.keycloak.util.JsonSerialization;\n \n @ApplicationPath(\"/\")\n public class QuarkusKeycloakApplication extends KeycloakApplication {\n \n+    private static final Logger logger = Logger.getLogger(KeycloakApplication.class);\n+\n+    protected final PlatformProvider platform = Platform.getPlatform();\n+\n+    protected Set<Object> singletons = new HashSet<Object>();\n+    protected Set<Class<?>> classes = new HashSet<Class<?>>();\n+\n+    protected KeycloakSessionFactory sessionFactory;\n+\n+    public QuarkusKeycloakApplication() {\n+\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1152898d15a0b6233db31d676dc3696bd8094a57"}, "originalPosition": 81}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1MDIwNDY4", "url": "https://github.com/keycloak/keycloak/pull/7081#pullrequestreview-415020468", "createdAt": "2020-05-20T06:16:19Z", "commit": {"oid": "1152898d15a0b6233db31d676dc3696bd8094a57"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3070, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}