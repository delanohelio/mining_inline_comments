{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjYyNDYx", "number": 7152, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoxMTozOFrOED5mpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoxMjoyNlrOED5oKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTI0OTY3OnYy", "diffSide": "RIGHT", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoxMTozOFrOGhMFBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToxMjozN1rOGiVFmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDA4Ng==", "bodyText": "I think that lines 86-87 should be replaced with:\nTruststoreProvider provider = session.getProvider(TruststoreProvider.class);\n\nThis is more proper use of KeycloakSession SPI and at the same time, it is not hardcoded to \"file\" provider - the users can in theory replace the \"file\" provider with something else", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r437454086", "createdAt": "2020-06-09T14:11:38Z", "author": {"login": "mposolda"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java", "diffHunk": "@@ -76,15 +80,22 @@ private void createLdapContext() throws NamingException {\n \n         ldapContext = new InitialLdapContext(connProp, null);\n         if (ldapConfig.isStartTls()) {\n+            SSLSocketFactory sslSocketFactory = null;\n+            String useTruststoreSpi = ldapConfig.getUseTruststoreSpi();\n+            if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35dac0171626716dcdfe7704356670f7f806e225"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1MDI2NQ==", "bodyText": "@mposolda Thanks for the review & suggestion of the fix! (didn't know there's more easier / appropriate way on how to achieve the same). Both instances fixed per your suggestion", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r438650265", "createdAt": "2020-06-11T09:12:37Z", "author": {"login": "iankko"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPContextManager.java", "diffHunk": "@@ -76,15 +80,22 @@ private void createLdapContext() throws NamingException {\n \n         ldapContext = new InitialLdapContext(connProp, null);\n         if (ldapConfig.isStartTls()) {\n+            SSLSocketFactory sslSocketFactory = null;\n+            String useTruststoreSpi = ldapConfig.getUseTruststoreSpi();\n+            if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDA4Ng=="}, "originalCommit": {"oid": "35dac0171626716dcdfe7704356670f7f806e225"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTI1MzUyOnYy", "diffSide": "RIGHT", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDoxMjoyNlrOGhMHZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwOToxMjo0OVrOGiVGEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDY5Mw==", "bodyText": "Same comment as above", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r437454693", "createdAt": "2020-06-09T14:12:26Z", "author": {"login": "mposolda"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java", "diffHunk": "@@ -511,7 +515,15 @@ public void authenticate(String dn, String password) throws AuthenticationExcept\n \n             authCtx = new InitialLdapContext(env, null);\n             if (config.isStartTls()) {\n-                tlsResponse = LDAPContextManager.startTLS(authCtx, \"simple\", dn, password.toCharArray());\n+                SSLSocketFactory sslSocketFactory = null;\n+                String useTruststoreSpi = config.getUseTruststoreSpi();\n+                if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                    TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35dac0171626716dcdfe7704356670f7f806e225"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY1MDM4Ng==", "bodyText": "Fixed", "url": "https://github.com/keycloak/keycloak/pull/7152#discussion_r438650386", "createdAt": "2020-06-11T09:12:49Z", "author": {"login": "iankko"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/idm/store/ldap/LDAPOperationManager.java", "diffHunk": "@@ -511,7 +515,15 @@ public void authenticate(String dn, String password) throws AuthenticationExcept\n \n             authCtx = new InitialLdapContext(env, null);\n             if (config.isStartTls()) {\n-                tlsResponse = LDAPContextManager.startTLS(authCtx, \"simple\", dn, password.toCharArray());\n+                SSLSocketFactory sslSocketFactory = null;\n+                String useTruststoreSpi = config.getUseTruststoreSpi();\n+                if (useTruststoreSpi != null && useTruststoreSpi.equals(LDAPConstants.USE_TRUSTSTORE_ALWAYS)) {\n+                    TruststoreProviderFactory truststoreFactory = (TruststoreProviderFactory) session.getKeycloakSessionFactory().getProviderFactory(TruststoreProvider.class, \"file\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ1NDY5Mw=="}, "originalCommit": {"oid": "35dac0171626716dcdfe7704356670f7f806e225"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3549, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}