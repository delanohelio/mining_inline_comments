{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5NzU3NTQ3", "number": 7480, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDozNjoyMlrOEsMKwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyOTowOFrOEsM8zQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzcyMTYwOnYy", "diffSide": "RIGHT", "path": "saml-core/src/main/java/org/keycloak/saml/SignatureAlgorithm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDozNjoyMlrOHfX6eA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDozNjoyMlrOHfX6eA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY1OTcwNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA512_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(RSA_SHA256_MGF1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(RSA_SHA512_MGF1.getXmlSignatureMethod(), RSA_SHA512_MGF1);\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA512_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA512_MGF1);", "url": "https://github.com/keycloak/keycloak/pull/7480#discussion_r502659704", "createdAt": "2020-10-09T20:36:22Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SignatureAlgorithm.java", "diffHunk": "@@ -43,11 +45,15 @@\n         signatureMethodMap.put(RSA_SHA256.getXmlSignatureMethod(), RSA_SHA256);\n         signatureMethodMap.put(RSA_SHA512.getXmlSignatureMethod(), RSA_SHA512);\n         signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), DSA_SHA1);\n+        signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n+        signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA512_MGF1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c2288ff419465e8ae7e4d10ebe6db2e3ab24494"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0NzcyMjYwOnYy", "diffSide": "RIGHT", "path": "saml-core/src/main/java/org/keycloak/saml/SignatureAlgorithm.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDozNjo0NlrOHfX7CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMDozNjo0NlrOHfX7CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY1OTg0OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA512_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(RSA_SHA256_MGF1.getXmlSignatureDigestMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(RSA_SHA512_MGF1.getXmlSignatureDigestMethod(), RSA_SHA512_MGF1);\n          \n      \n    \n    \n  \n\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA512_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA256_MGF1);\n          \n          \n            \n                    signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA512_MGF1);", "url": "https://github.com/keycloak/keycloak/pull/7480#discussion_r502659849", "createdAt": "2020-10-09T20:36:46Z", "author": {"login": "hmlnarik"}, "path": "saml-core/src/main/java/org/keycloak/saml/SignatureAlgorithm.java", "diffHunk": "@@ -43,11 +45,15 @@\n         signatureMethodMap.put(RSA_SHA256.getXmlSignatureMethod(), RSA_SHA256);\n         signatureMethodMap.put(RSA_SHA512.getXmlSignatureMethod(), RSA_SHA512);\n         signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), DSA_SHA1);\n+        signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA256_MGF1);\n+        signatureMethodMap.put(DSA_SHA1.getXmlSignatureMethod(), RSA_SHA512_MGF1);\n \n         signatureDigestMethodMap.put(RSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA1);\n         signatureDigestMethodMap.put(RSA_SHA256.getXmlSignatureDigestMethod(), RSA_SHA256);\n         signatureDigestMethodMap.put(RSA_SHA512.getXmlSignatureDigestMethod(), RSA_SHA512);\n         signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), DSA_SHA1);\n+        signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA256_MGF1);\n+        signatureDigestMethodMap.put(DSA_SHA1.getXmlSignatureDigestMethod(), RSA_SHA512_MGF1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c2288ff419465e8ae7e4d10ebe6db2e3ab24494"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0Nzg0OTczOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyOTowOFrOHfZHTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQyMToyOTowOFrOHfZHTw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjY3OTM3NQ==", "bodyText": "These changes should be done consistently also for SAML clients.", "url": "https://github.com/keycloak/keycloak/pull/7480#discussion_r502679375", "createdAt": "2020-10-09T21:29:08Z", "author": {"login": "hmlnarik"}, "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/realm.js", "diffHunk": "@@ -841,7 +841,9 @@ module.controller('RealmIdentityProviderCtrl', function($scope, $filter, $upload\n             \"RSA_SHA1\",\n             \"RSA_SHA256\",\n             \"RSA_SHA512\",\n-            \"DSA_SHA1\"\n+            \"DSA_SHA1\",\n+            \"RSA_SHA256_MGF1\",\n+            \"RSA_SHA512_MGF1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c2288ff419465e8ae7e4d10ebe6db2e3ab24494"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3374, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}