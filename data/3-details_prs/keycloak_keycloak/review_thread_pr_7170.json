{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NTc2MDMy", "number": 7170, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTozMDoyMlrOEGrIow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTozMDoyMlrOEGrIow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NDMzNjM1OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/mappers/UserAttributeMapper.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQwOTozMDoyMlrOGlnXMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQxMDoyNDowOVrOGlpM1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NTQwOQ==", "bodyText": "I'm slightly worried about using the 0 index here. Are we sure, this is always going to be 0?", "url": "https://github.com/keycloak/keycloak/pull/7170#discussion_r442095409", "createdAt": "2020-06-18T09:30:22Z", "author": {"login": "slaskawi"}, "path": "services/src/main/java/org/keycloak/broker/saml/mappers/UserAttributeMapper.java", "diffHunk": "@@ -151,6 +152,12 @@ private void setIfNotEmpty(Consumer<String> consumer, List<String> values) {\n         }\n     }\n \n+    private void setIfNotEmptyAndDifferent(Consumer<String> consumer, Supplier<String> currentValueSupplier, List<String> values) {\n+        if (values != null && !values.isEmpty() && !values.get(0).equals(currentValueSupplier.get())) {\n+            consumer.accept(values.get(0));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "daf6b694320e2f0089bfb0fd1ae90a37a8cd0da6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5OTI3Nw==", "bodyText": ".get(0) - that is how setIfNotEmpty() was already implemented.\nWe also have checks - values != null && !values.isEmpty() that guarantee that collection is not empty.\nSecondly, \"get(0)\" element is guaranteed to be non-null because \"values\" come from findAttributeValuesInContext() method which has \".filter(Objects::nonNull)\"", "url": "https://github.com/keycloak/keycloak/pull/7170#discussion_r442099277", "createdAt": "2020-06-18T09:37:19Z", "author": {"login": "ovshevchuk"}, "path": "services/src/main/java/org/keycloak/broker/saml/mappers/UserAttributeMapper.java", "diffHunk": "@@ -151,6 +152,12 @@ private void setIfNotEmpty(Consumer<String> consumer, List<String> values) {\n         }\n     }\n \n+    private void setIfNotEmptyAndDifferent(Consumer<String> consumer, Supplier<String> currentValueSupplier, List<String> values) {\n+        if (values != null && !values.isEmpty() && !values.get(0).equals(currentValueSupplier.get())) {\n+            consumer.accept(values.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NTQwOQ=="}, "originalCommit": {"oid": "daf6b694320e2f0089bfb0fd1ae90a37a8cd0da6"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjEyNTUyNA==", "bodyText": "Fair enough, let me approve.", "url": "https://github.com/keycloak/keycloak/pull/7170#discussion_r442125524", "createdAt": "2020-06-18T10:24:09Z", "author": {"login": "slaskawi"}, "path": "services/src/main/java/org/keycloak/broker/saml/mappers/UserAttributeMapper.java", "diffHunk": "@@ -151,6 +152,12 @@ private void setIfNotEmpty(Consumer<String> consumer, List<String> values) {\n         }\n     }\n \n+    private void setIfNotEmptyAndDifferent(Consumer<String> consumer, Supplier<String> currentValueSupplier, List<String> values) {\n+        if (values != null && !values.isEmpty() && !values.get(0).equals(currentValueSupplier.get())) {\n+            consumer.accept(values.get(0));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjA5NTQwOQ=="}, "originalCommit": {"oid": "daf6b694320e2f0089bfb0fd1ae90a37a8cd0da6"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3565, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}