{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIyMjU2NzU0", "number": 7097, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODowMlrOEHAdjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODowMlrOEHAdjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzgzMDU0OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/services/resources/admin/RoleContainerResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNjozODowMlrOGmJsjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQyMTowNzozN1rOHlRIwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1NzkzMg==", "bodyText": "I wonder if there should be some validation that all the composite roles actually exist. Would it make sense to fail the operation if a role was not found, not just ignore it? (This applies for client roles below as well.) We do that for the composite endpoint:\n\n  \n    \n      keycloak/services/src/main/java/org/keycloak/services/resources/admin/RoleContainerResource.java\n    \n    \n        Lines 286 to 288\n      in\n      6f2ca34\n    \n    \n    \n    \n\n        \n          \n           if (role == null) { \n        \n\n        \n          \n               throw new NotFoundException(\"Could not find role\"); \n        \n\n        \n          \n           } \n        \n    \n  \n\n\nOn the other hand, we lack validation on most endpoints in general, so...", "url": "https://github.com/keycloak/keycloak/pull/7097#discussion_r442657932", "createdAt": "2020-06-19T06:38:02Z", "author": {"login": "vmuzikar"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RoleContainerResource.java", "diffHunk": "@@ -148,6 +151,38 @@ public Response createRole(final RoleRepresentation rep) {\n                 adminEvent.resource(ResourceType.REALM_ROLE);\n             }\n \n+            // Handling of nested composite roles for KEYCLOAK-12754\n+            if (rep.isComposite() && rep.getComposites() != null) {\n+                RoleRepresentation.Composites composites = rep.getComposites();\n+\n+                Set<String> compositeRealmRoles = composites.getRealm();\n+                if (compositeRealmRoles != null && !compositeRealmRoles.isEmpty()) {\n+                    Set<RoleModel> realmRoles = compositeRealmRoles.stream()\n+                            .map(realm::getRole)\n+                            .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f2ca347e164ecd141eac633ac4577b5768c9d01"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODg0MDEzMA==", "bodyText": "@vmuzikar sorry for the long delay,.. I just rebased the PR and added the requested checks, to ensure that the roles contained in the composite role exist. The code now throws a NotFoundException if a nested role does not exist.", "url": "https://github.com/keycloak/keycloak/pull/7097#discussion_r508840130", "createdAt": "2020-10-20T21:07:37Z", "author": {"login": "thomasdarimont"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RoleContainerResource.java", "diffHunk": "@@ -148,6 +151,38 @@ public Response createRole(final RoleRepresentation rep) {\n                 adminEvent.resource(ResourceType.REALM_ROLE);\n             }\n \n+            // Handling of nested composite roles for KEYCLOAK-12754\n+            if (rep.isComposite() && rep.getComposites() != null) {\n+                RoleRepresentation.Composites composites = rep.getComposites();\n+\n+                Set<String> compositeRealmRoles = composites.getRealm();\n+                if (compositeRealmRoles != null && !compositeRealmRoles.isEmpty()) {\n+                    Set<RoleModel> realmRoles = compositeRealmRoles.stream()\n+                            .map(realm::getRole)\n+                            .filter(Objects::nonNull)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY1NzkzMg=="}, "originalCommit": {"oid": "6f2ca347e164ecd141eac633ac4577b5768c9d01"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3655, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}