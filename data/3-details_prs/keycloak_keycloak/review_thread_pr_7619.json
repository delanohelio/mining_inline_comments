{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyMTQ0OTk1", "number": 7619, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDowNDowMVrOE6fUYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDoxNzo1MFrOE6frNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzY1OTg3OnYy", "diffSide": "RIGHT", "path": "server-spi/src/main/java/org/keycloak/models/UserProvider.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDowNDowMVrOH1mD8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDo0NDo1NFrOH1ntWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2MDE3Ng==", "bodyText": "Default implementation from the superinterface gets inherited regardless.\nPerhaps the following could be used instead:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    @Override\n          \n          \n            \n                    Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm);\n          \n          \n            \n                    @Override\n          \n          \n            \n                    default Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm) {\n          \n          \n            \n                        throw new UnsupportedOperationException(\"Not implemented yet.\");\n          \n          \n            \n                    }", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525960176", "createdAt": "2020-11-18T10:04:01Z", "author": {"login": "hmlnarik"}, "path": "server-spi/src/main/java/org/keycloak/models/UserProvider.java", "diffHunk": "@@ -168,4 +172,38 @@\n     void close();\n \n     void preRemove(RealmModel realm, ComponentModel component);\n+\n+    interface Streams extends UserProvider, UserQueryProvider.Streams {\n+        @Override\n+        default Set<FederatedIdentityModel> getFederatedIdentities(UserModel user, RealmModel realm) {\n+            return this.getFederatedIdentitiesStream(user, realm).collect(Collectors.toSet());\n+        }\n+\n+        @Override\n+        Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm);\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c"}, "originalPosition": 112}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk4NzE2Mw==", "bodyText": "Please ignore this one. I must have made a mistake when trying this.", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525987163", "createdAt": "2020-11-18T10:44:54Z", "author": {"login": "hmlnarik"}, "path": "server-spi/src/main/java/org/keycloak/models/UserProvider.java", "diffHunk": "@@ -168,4 +172,38 @@\n     void close();\n \n     void preRemove(RealmModel realm, ComponentModel component);\n+\n+    interface Streams extends UserProvider, UserQueryProvider.Streams {\n+        @Override\n+        default Set<FederatedIdentityModel> getFederatedIdentities(UserModel user, RealmModel realm) {\n+            return this.getFederatedIdentitiesStream(user, realm).collect(Collectors.toSet());\n+        }\n+\n+        @Override\n+        Stream<FederatedIdentityModel> getFederatedIdentitiesStream(UserModel user, RealmModel realm);\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2MDE3Ng=="}, "originalCommit": {"oid": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c"}, "originalPosition": 112}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NzcxODMxOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/federation/UserPropertyFileStorage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDoxNzo1MFrOH1mn_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxMDoxNzo1MFrOH1mn_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTk2OTQwNg==", "bodyText": "Please return this file to the state before #7524.", "url": "https://github.com/keycloak/keycloak/pull/7619#discussion_r525969406", "createdAt": "2020-11-18T10:17:50Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/federation/UserPropertyFileStorage.java", "diffHunk": "@@ -43,7 +43,8 @@\n  * @author <a href=\"mailto:bill@burkecentral.com\">Bill Burke</a>\n  * @version $Revision: 1 $\n  */\n-public class UserPropertyFileStorage implements UserLookupProvider, UserStorageProvider, UserQueryProvider, CredentialInputValidator {\n+public class UserPropertyFileStorage implements UserLookupProvider, UserStorageProvider, UserQueryProvider.Streams,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a80a19ce93fe04630f6c4f2cc6793cb8ab55117c"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3192, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}