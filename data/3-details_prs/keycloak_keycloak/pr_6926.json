{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzMDA1NTI4", "number": 6926, "title": "[KEYCLOAK-2343] - Allow exact user search by user attributes", "bodyText": "", "createdAt": "2020-03-24T13:55:02Z", "url": "https://github.com/keycloak/keycloak/pull/6926", "merged": true, "mergeCommit": {"oid": "e16f30d31f5e6545bfc02897e95d57fd5fedd50a"}, "closed": true, "closedAt": "2020-06-10T15:02:52Z", "author": {"login": "pedroigor"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcQ0VYIgBqjMxNjAxMDA4MDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcp5-SYAFqTQyODA3MjQxMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "82ebc060b0250e766dc02f295d58038d090e0b18", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/82ebc060b0250e766dc02f295d58038d090e0b18", "committedDate": "2020-03-24T13:53:31Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes"}, "afterCommit": {"oid": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "committedDate": "2020-03-24T15:05:56Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgwNDE1NzY0", "url": "https://github.com/keycloak/keycloak/pull/6926#pullrequestreview-380415764", "createdAt": "2020-03-24T15:19:52Z", "commit": {"oid": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxOTo1MlrOF61XCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxNToxOTo1MlrOF61XCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzIzNTk3Nw==", "bodyText": "?????", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r397235977", "createdAt": "2020-03-24T15:19:52Z", "author": {"login": "stianst"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/ldap/LDAPGroupMapperTest.java", "diffHunk": "@@ -74,6 +74,11 @@ protected void afterImportTestRealm() {\n     @Test\n     public void test01_ldapOnlyGroupMappings() {\n         test01_ldapOnlyGroupMappings(true);\n+        try {\n+            Thread.sleep(1000000000);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/91fcd5a0c61be2837db03b740720ddfd7f68a7e6", "committedDate": "2020-03-24T15:05:56Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes"}, "afterCommit": {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/d0e6d474385d397a37b5d581006f181f0b3a28db", "committedDate": "2020-03-24T18:05:04Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3MjMwOTQ1", "url": "https://github.com/keycloak/keycloak/pull/6926#pullrequestreview-427230945", "createdAt": "2020-06-09T14:48:33Z", "commit": {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNDo0ODozM1rOGhN1Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTowNzo0NVrOGhOvbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4Mjg0Nw==", "bodyText": "I believe admin client should rather add exact on the parameter-richest variant of search(String search, Integer firstResult, Integer maxResults, Boolean briefRepresentation).\n<sigh>Pity Java does not have any support for default parameter values.</sigh>", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437482847", "createdAt": "2020-06-09T14:48:33Z", "author": {"login": "hmlnarik"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UsersResource.java", "diffHunk": "@@ -56,6 +56,10 @@\n     @Produces(MediaType.APPLICATION_JSON)\n     List<UserRepresentation> search(@QueryParam(\"username\") String username);\n \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    List<UserRepresentation> search(@QueryParam(\"username\") String username, @QueryParam(\"exact\") Boolean exact);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ4NjQ0MA==", "bodyText": "For better performance and smaller memory footprint, evaluate the predicate early:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    return searchForUser(search, realm, firstResult, maxResults, username -> {\n          \n          \n            \n                        if (Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))) {\n          \n          \n            \n                            return username.equals(search);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            return username.contains(search);\n          \n          \n            \n                        }\n          \n          \n            \n                    });\n          \n          \n            \n                    Predicate<String> p = Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))\n          \n          \n            \n                        ? username -> username.equals(search)\n          \n          \n            \n                        : username -> username.contains(search);\n          \n          \n            \n                    return searchForUser(search, realm, firstResult, maxResults, p);", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437486440", "createdAt": "2020-06-09T14:53:06Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/servers/auth-server/services/testsuite-providers/src/main/java/org/keycloak/testsuite/federation/UserPropertyFileStorage.java", "diffHunk": "@@ -174,28 +175,21 @@ public int getUsersCount(RealmModel realm) {\n \n     @Override\n     public List<UserModel> searchForUser(String search, RealmModel realm, int firstResult, int maxResults) {\n-        if (maxResults == 0) return Collections.EMPTY_LIST;\n-        List<UserModel> users = new LinkedList<>();\n-        int count = 0;\n-        for (Object un : userPasswords.keySet()) {\n-            String username = (String)un;\n-            if (username.contains(search)) {\n-                if (count++ < firstResult) {\n-                    continue;\n-                }\n-                users.add(createUser(realm, username));\n-                if (users.size() + 1 > maxResults) break;\n-            }\n-        }\n-        return users;\n+        return searchForUser(search, realm, firstResult, maxResults, username -> username.contains(search));\n     }\n \n     @Override\n     public List<UserModel> searchForUser(Map<String, String> attributes, RealmModel realm, int firstResult, int maxResults) {\n         String search = Optional.ofNullable(attributes.get(UserModel.USERNAME))\n                 .orElseGet(()-> attributes.get(UserModel.SEARCH));\n         if (search == null) return Collections.EMPTY_LIST;\n-        return searchForUser(search, realm, firstResult, maxResults);\n+        return searchForUser(search, realm, firstResult, maxResults, username -> {\n+            if (Boolean.valueOf(attributes.getOrDefault(UserModel.EXACT, Boolean.FALSE.toString()))) {\n+                return username.equals(search);\n+            } else {\n+                return username.contains(search);\n+            }\n+        });", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzQ5NzcwOQ==", "bodyText": "When using\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    Assert.assertEquals(0, testRealmResource().users().search(\"a\", true).size());\n          \n          \n            \n                    Assert.assertEquals(1, testRealmResource().users().search(\"apollo\", true).size());\n          \n          \n            \n                    Assert.assertEquals(1, testRealmResource().users().search(\"tbrady\", true).size());\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"a\", true), Matchers.hasSize(0));\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"apollo\", true), Matchers.hasSize(1));\n          \n          \n            \n                    Assert.assertThat(testRealmResource().users().search(\"tbrady\", true), Matchers.hasSize(1));\n          \n      \n    \n    \n  \n\nthe output on failure shows the search results which is better for debugging potential failures.", "url": "https://github.com/keycloak/keycloak/pull/6926#discussion_r437497709", "createdAt": "2020-06-09T15:07:45Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java", "diffHunk": "@@ -474,6 +474,13 @@ public void testQuery() {\n         });\n     }\n \n+    @Test\n+    public void testQueryExactMatch() {\n+        Assert.assertEquals(0, testRealmResource().users().search(\"a\", true).size());\n+        Assert.assertEquals(1, testRealmResource().users().search(\"apollo\", true).size());\n+        Assert.assertEquals(1, testRealmResource().users().search(\"tbrady\", true).size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0e6d474385d397a37b5d581006f181f0b3a28db"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b2ed75d3028409b0788be337669f2087ae40f2c2", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/b2ed75d3028409b0788be337669f2087ae40f2c2", "committedDate": "2020-06-09T16:42:54Z", "message": "Update testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>"}, "afterCommit": {"oid": "d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "committedDate": "2020-06-09T17:13:14Z", "message": "Update testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3OTY1NzY3", "url": "https://github.com/keycloak/keycloak/pull/6926#pullrequestreview-427965767", "createdAt": "2020-06-10T11:36:57Z", "commit": {"oid": "d3a7741117dd67394f0eda1b8c59ffcaba6ada7f"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4738c15e2670efc805602d67631eff9d7a235229", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/4738c15e2670efc805602d67631eff9d7a235229", "committedDate": "2020-06-10T12:37:33Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/d3a7741117dd67394f0eda1b8c59ffcaba6ada7f", "committedDate": "2020-06-09T17:13:14Z", "message": "Update testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/storage/UserStorageTest.java\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>"}, "afterCommit": {"oid": "4738c15e2670efc805602d67631eff9d7a235229", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/4738c15e2670efc805602d67631eff9d7a235229", "committedDate": "2020-06-10T12:37:33Z", "message": "[KEYCLOAK-2343] - Allow exact user search by user attributes\n\nCo-authored-by: Hynek Mlna\u0159\u00edk <hmlnarik@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDcyNDEx", "url": "https://github.com/keycloak/keycloak/pull/6926#pullrequestreview-428072411", "createdAt": "2020-06-10T13:49:36Z", "commit": {"oid": "4738c15e2670efc805602d67631eff9d7a235229"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3206, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}