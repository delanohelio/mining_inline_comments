{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5MTcyNzAz", "number": 6962, "title": "KEYCLOAK-10927 - Implement LDAPv3 Password Modify Extended Operation \u2026", "bodyText": "\u2026(RFC-3062).\nKEYCLOAK-10927 - Implement LDAPv3 Password Modify Extended Operation (RFC-3062).\nThis PR adds a Configuration Option to the LDAP configuration page to enable or disable (default) the use of the LDAPv3 Password Extended Modify Operation when changing user passwords. Please Review my PR.\nDocumentation PR: keycloak/keycloak-documentation#906.\nI'll update KEYCLOAK-10927 as well.", "createdAt": "2020-04-05T17:10:29Z", "url": "https://github.com/keycloak/keycloak/pull/6962", "merged": true, "mergeCommit": {"oid": "3382682115063220495c1b06f87dd4112e76f01c"}, "closed": true, "closedAt": "2020-05-20T19:04:46Z", "author": {"login": "cachescrubber"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcglgG6gFqTQxMDEyNTg1MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjN4QvgFqTQxNTYzMjc2Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEwMTI1ODUw", "url": "https://github.com/keycloak/keycloak/pull/6962#pullrequestreview-410125850", "createdAt": "2020-05-12T14:53:13Z", "commit": {"oid": "20105c75b490e648b70a5f7150f7aa2f6e17fdf1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzODU3Njk1", "url": "https://github.com/keycloak/keycloak/pull/6962#pullrequestreview-413857695", "createdAt": "2020-05-18T18:57:34Z", "commit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxODo1NzozNFrOGXDu5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQxOToxNzo1NVrOGXEXVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzMTU5MA==", "bodyText": "Is it possible to rename existing class LDAPConnectionTestManager to something like LDAPServerCapabilitiesManager and add the logic behind this into that class? This will allow that filling of some common connection properties (CONNECTION_URL, USE_TRUSTSTORE_SPI etc) can be probably some done in the shared code, which will be shared for existing method for testing connection and testing authentication", "url": "https://github.com/keycloak/keycloak/pull/6962#discussion_r426831590", "createdAt": "2020-05-18T18:57:34Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RealmAdminResource.java", "diffHunk": "@@ -966,6 +981,43 @@ public Response testLDAPConnection(TestLdapConnectionRepresentation config) {\n                 config.getStartTls());\n     }\n \n+    /**\n+     * Get LDAP supported extensions.\n+     * @param config LDAP configuration\n+     * @return\n+     */\n+    @POST\n+    @Path(\"ldap-supported-extensions\")\n+    @NoCache\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(javax.ws.rs.core.MediaType.APPLICATION_JSON)\n+    public Response getLDAPSupportedExtensions(TestLdapConnectionRepresentation config) {\n+\n+        auth.realm().requireManageRealm();\n+\n+        String bindCredential = handleSavedBindCredential(config.getComponentId(), config.getBindCredential());\n+\n+        // Create Factory Methods for LDAPConfig and LDAPIdentityStore in LDAPConnectionTestManager?\n+        MultivaluedHashMap<String, String> map = new MultivaluedHashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "originalPosition": 152}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzMjEzNw==", "bodyText": "The AUTH_TYPE should be taken based on what is configured for the provider. In case that AUTH_TYPE is \"none\", it should use \"none\" here as well. Not sure if the representation object should be updated based on that to wrap this info?", "url": "https://github.com/keycloak/keycloak/pull/6962#discussion_r426832137", "createdAt": "2020-05-18T18:58:37Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RealmAdminResource.java", "diffHunk": "@@ -966,6 +981,43 @@ public Response testLDAPConnection(TestLdapConnectionRepresentation config) {\n                 config.getStartTls());\n     }\n \n+    /**\n+     * Get LDAP supported extensions.\n+     * @param config LDAP configuration\n+     * @return\n+     */\n+    @POST\n+    @Path(\"ldap-supported-extensions\")\n+    @NoCache\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(javax.ws.rs.core.MediaType.APPLICATION_JSON)\n+    public Response getLDAPSupportedExtensions(TestLdapConnectionRepresentation config) {\n+\n+        auth.realm().requireManageRealm();\n+\n+        String bindCredential = handleSavedBindCredential(config.getComponentId(), config.getBindCredential());\n+\n+        // Create Factory Methods for LDAPConfig and LDAPIdentityStore in LDAPConnectionTestManager?\n+        MultivaluedHashMap<String, String> map = new MultivaluedHashMap<>();\n+        map.add(LDAPConstants.CONNECTION_URL, config.getConnectionUrl());\n+        map.add(LDAPConstants.USE_TRUSTSTORE_SPI, config.getUseTruststoreSpi());\n+        map.add(LDAPConstants.AUTH_TYPE, LDAPConstants.AUTH_TYPE_SIMPLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNDkxNg==", "bodyText": "It will be better if response allows to differentiate between supportedControl, supportedExtensions and supportedFeatures. The JSON can possibly look like this:\n{ \n    \"supportedExtension\": [ \"1.3.6.1.4.1.1466.20036\" ],\n    \"supportedFeatures\": [ \"1.3.6.1.1.14\", \"1.3.6.1.4.1.4203.1.5.1\" ],\n    \"supportedControl\": [ \"1.2.840.113556.1.4.1413\", \"1.2.840.113556.1.4.2239\", \"1.2.840.113556.1.4.319\" ]\n}\n\nFeel free to create some internal JSON representation class for help with this - for example see TestLdapConnectionRepresentation for the inspiration", "url": "https://github.com/keycloak/keycloak/pull/6962#discussion_r426834916", "createdAt": "2020-05-18T19:03:58Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RealmAdminResource.java", "diffHunk": "@@ -966,6 +981,43 @@ public Response testLDAPConnection(TestLdapConnectionRepresentation config) {\n                 config.getStartTls());\n     }\n \n+    /**\n+     * Get LDAP supported extensions.\n+     * @param config LDAP configuration\n+     * @return\n+     */\n+    @POST\n+    @Path(\"ldap-supported-extensions\")\n+    @NoCache\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(javax.ws.rs.core.MediaType.APPLICATION_JSON)\n+    public Response getLDAPSupportedExtensions(TestLdapConnectionRepresentation config) {\n+\n+        auth.realm().requireManageRealm();\n+\n+        String bindCredential = handleSavedBindCredential(config.getComponentId(), config.getBindCredential());\n+\n+        // Create Factory Methods for LDAPConfig and LDAPIdentityStore in LDAPConnectionTestManager?\n+        MultivaluedHashMap<String, String> map = new MultivaluedHashMap<>();\n+        map.add(LDAPConstants.CONNECTION_URL, config.getConnectionUrl());\n+        map.add(LDAPConstants.USE_TRUSTSTORE_SPI, config.getUseTruststoreSpi());\n+        map.add(LDAPConstants.AUTH_TYPE, LDAPConstants.AUTH_TYPE_SIMPLE);\n+        map.add(LDAPConstants.BIND_DN, config.getBindDn());\n+        map.add(LDAPConstants.BIND_CREDENTIAL, bindCredential);\n+        IdentityStore ldapIdentityStore = new LDAPIdentityStore(session, new LDAPConfig(map));\n+\n+        Set<LDAPOid> ldapOids = ldapIdentityStore.queryServerCapabilities();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "originalPosition": 160}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNzI3MA==", "bodyText": "This doesn't seem to work for me. My LDAP server has only single supportedExtension \"1.3.6.1.4.1.1466.20036\" and despite that, when I click on \"Query\" button, the \"Enable the LDAPv3 Password Modify Extended Operation\" is incorrectly switched to ON.\nHint: You can run LDAPEmbeddedServer from your IDE, which runs embedded ApacheDS server. That one doesn't have the passwdModifyOID enabled.", "url": "https://github.com/keycloak/keycloak/pull/6962#discussion_r426837270", "createdAt": "2020-05-18T19:08:31Z", "author": {"login": "mposolda"}, "path": "themes/src/main/resources/theme/base/admin/resources/js/controllers/users.js", "diffHunk": "@@ -1703,7 +1704,23 @@ module.controller('LDAPUserStorageCtrl', function($scope, $location, Notificatio\n         });\n     }\n \n-\n+    $scope.queryAndSetLdapSupportedExtensions = function() {\n+        console.log('LDAPCtrl: getLdapSupportedExtensions');\n+        const PASSWORD_MODIFY_OID = '1.3.6.1.4.1.4203.1.11.1';\n+\n+        $http.post(\n+            `${authUrl}/admin/realms/${realm.realm}/ldap-supported-extensions`,\n+            initConnectionTest(\"getLdapSupportedExtensions\", $scope.instance.config)).then(\n+            (response) => {\n+                Notifications.success(\"LDAP supported extensions successfully requested.\");\n+                const ldapOids = response.data;\n+                if (angular.isArray(ldapOids)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg0MTk0Mg==", "bodyText": "It will be also good to dump those supported extensions, features and controls to the server.log with the \"log.info\"", "url": "https://github.com/keycloak/keycloak/pull/6962#discussion_r426841942", "createdAt": "2020-05-18T19:17:55Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/RealmAdminResource.java", "diffHunk": "@@ -966,6 +981,43 @@ public Response testLDAPConnection(TestLdapConnectionRepresentation config) {\n                 config.getStartTls());\n     }\n \n+    /**\n+     * Get LDAP supported extensions.\n+     * @param config LDAP configuration\n+     * @return\n+     */\n+    @POST\n+    @Path(\"ldap-supported-extensions\")\n+    @NoCache\n+    @Consumes(MediaType.APPLICATION_JSON)\n+    @Produces(javax.ws.rs.core.MediaType.APPLICATION_JSON)\n+    public Response getLDAPSupportedExtensions(TestLdapConnectionRepresentation config) {\n+\n+        auth.realm().requireManageRealm();\n+\n+        String bindCredential = handleSavedBindCredential(config.getComponentId(), config.getBindCredential());\n+\n+        // Create Factory Methods for LDAPConfig and LDAPIdentityStore in LDAPConnectionTestManager?\n+        MultivaluedHashMap<String, String> map = new MultivaluedHashMap<>();\n+        map.add(LDAPConstants.CONNECTION_URL, config.getConnectionUrl());\n+        map.add(LDAPConstants.USE_TRUSTSTORE_SPI, config.getUseTruststoreSpi());\n+        map.add(LDAPConstants.AUTH_TYPE, LDAPConstants.AUTH_TYPE_SIMPLE);\n+        map.add(LDAPConstants.BIND_DN, config.getBindDn());\n+        map.add(LDAPConstants.BIND_CREDENTIAL, bindCredential);\n+        IdentityStore ldapIdentityStore = new LDAPIdentityStore(session, new LDAPConfig(map));\n+\n+        Set<LDAPOid> ldapOids = ldapIdentityStore.queryServerCapabilities();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjgzNDkxNg=="}, "originalCommit": {"oid": "9100184bdb3c819511419ec60e13690fb4dee97d"}, "originalPosition": 160}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a94bdd0f8c0dd261d13c4d3c14b95d590005ec5", "author": {"user": {"login": "cachescrubber", "name": null}}, "url": "https://github.com/keycloak/keycloak/commit/4a94bdd0f8c0dd261d13c4d3c14b95d590005ec5", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927 - Implement LDAPv3 Password Modify Extended Operation (RFC-3062)."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "855d442d61760931e9d652c768c4cb7e6aa5d3f7", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/855d442d61760931e9d652c768c4cb7e6aa5d3f7", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927 - Introduce getLDAPSupportedExtensions(). Use result instead of configuration."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfcb29a8188218818bf465e3422824de71d9f8a3", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/bfcb29a8188218818bf465e3422824de71d9f8a3", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927 add possibility to query ldap supported extensions"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec8e9637bd7e5679ddb6e59f4fe9fd2cff59a58d", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/ec8e9637bd7e5679ddb6e59f4fe9fd2cff59a58d", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927: reorganize layout of ldap config page"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "da48fbc7af22fe66a0c72f4238c4d1f3ee6aa8f5", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/da48fbc7af22fe66a0c72f4238c4d1f3ee6aa8f5", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927 use configuration instead of rootDSE query."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "995fc39af4209e0df2f1654b30062f79434e9679", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/995fc39af4209e0df2f1654b30062f79434e9679", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927 Extend the RootDSE query to include controls and features as well as extension OIDs."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f8c24cd1f05deb2bf95e1275bf8621dac2b4bf1e", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/f8c24cd1f05deb2bf95e1275bf8621dac2b4bf1e", "committedDate": "2020-05-20T04:50:26Z", "message": "KEYCLOAK-10927: fix setting of passwordModifyExtended option"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1fcd008caf3f21d6f693e7f1cd89a03c89736d2b", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/1fcd008caf3f21d6f693e7f1cd89a03c89736d2b", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: refactor LDAPConnectionTestManager and add corresponding test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5a50aec4e5b6e89d368064f1a7cff2012561be6", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/d5a50aec4e5b6e89d368064f1a7cff2012561be6", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: rename LDAPConnectionTestManager to LDAPServerCapabilitiesManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "708d0d3845caace3232ad421a9e82c8b042cab83", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/708d0d3845caace3232ad421a9e82c8b042cab83", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: introduce CapabilityType"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a1508031090fd5c06f65045460299e80f090764", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/6a1508031090fd5c06f65045460299e80f090764", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: rename Rest Endpoint to ldapServerCapabilities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b1548ace82eb51f396300776aee38ac6fc18bf4d", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/b1548ace82eb51f396300776aee38ac6fc18bf4d", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: info log discovered capabilities"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "545259a9a526bc3c1985907472dc2c5330cc21e1", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/545259a9a526bc3c1985907472dc2c5330cc21e1", "committedDate": "2020-05-19T16:31:11Z", "message": "Merge branch 'master' into KEYCLOAK-10927_ldap_password_modify_extended_op"}, "afterCommit": {"oid": "b1548ace82eb51f396300776aee38ac6fc18bf4d", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/b1548ace82eb51f396300776aee38ac6fc18bf4d", "committedDate": "2020-05-20T04:50:27Z", "message": "KEYCLOAK-10927: info log discovered capabilities"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5603cdca9484bcd1ebbe82b4d80ac6da5d063ab2", "author": {"user": {"login": "mposolda", "name": "Marek Posolda"}}, "url": "https://github.com/keycloak/keycloak/commit/5603cdca9484bcd1ebbe82b4d80ac6da5d063ab2", "committedDate": "2020-05-20T16:28:03Z", "message": "KEYCLOAK-10927 Added LDAPPasswordModifyExtensionTest. A bit of refactoring related to query supported LDAP extensions and PAssword Modify operation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d2ae2a41118074e88cae7c3b331079a2e764164", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/8d2ae2a41118074e88cae7c3b331079a2e764164", "committedDate": "2020-05-20T17:34:47Z", "message": "Merge branch 'mposolda-KEYCLOAK-10927_ldap_password_modify_extended_op-2' into KEYCLOAK-10927_ldap_password_modify_extended_op"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE1NjMyNzYz", "url": "https://github.com/keycloak/keycloak/pull/6962#pullrequestreview-415632763", "createdAt": "2020-05-20T19:03:39Z", "commit": {"oid": "8d2ae2a41118074e88cae7c3b331079a2e764164"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3126, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}