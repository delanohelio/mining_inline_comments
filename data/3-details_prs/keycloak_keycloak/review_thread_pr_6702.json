{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4NjcyMzMw", "number": 6702, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowODoxMVrODcqhIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowODoxMVrODcqhIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMxMzgzMzI4OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wM1QxNTowODoxMVrOFk0nOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQxMjo0ODozOVrOFlS3pA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng==", "bodyText": "Should we use https://github.com/keycloak/keycloak/blob/master/server-spi-private/src/main/java/org/keycloak/models/utils/KeycloakModelUtils.java#L81 instead of UUID? SecureRandom seems more appropriate for a nonce than an UUID", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374155066", "createdAt": "2020-02-03T15:08:11Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1Njg2OQ==", "bodyText": "UUID uses SecureRandom behind the scenes. But I can change to reuse the same code from model utils.", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374156869", "createdAt": "2020-02-03T15:11:15Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng=="}, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NzMwOA==", "bodyText": "And that was the code we had previously, so I did not change this specific part.", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374157308", "createdAt": "2020-02-03T15:12:01Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng=="}, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDUxMTc4Nw==", "bodyText": "UUID is more expensive to generate than a SecureRandom, and since it doesn't have to be unique, just secure, there's no need to use UUID. Why not just use KeycloakModelUtils directly? It's what we use for example to generate client secrets.", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374511787", "createdAt": "2020-02-04T07:35:38Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng=="}, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDYyMjk0NQ==", "bodyText": "@stianst done", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374622945", "createdAt": "2020-02-04T11:43:47Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng=="}, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDY1MDc4OA==", "bodyText": "Created https://issues.redhat.com/browse/KEYCLOAK-12891.", "url": "https://github.com/keycloak/keycloak/pull/6702#discussion_r374650788", "createdAt": "2020-02-04T12:48:39Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -715,4 +721,32 @@ protected BrokeredIdentityContext exchangeExternalImpl(EventBuilder event, Multi\n             throw new ErrorResponseException(OAuthErrorException.INVALID_TOKEN, \"invalid token type\", Response.Status.BAD_REQUEST);\n         }\n     }\n+\n+    @Override\n+    protected UriBuilder createAuthorizationUrl(AuthenticationRequest request) {\n+        UriBuilder uriBuilder = super.createAuthorizationUrl(request);\n+        String nonce = UUID.randomUUID().toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDE1NTA2Ng=="}, "originalCommit": {"oid": "90583f72ab84dba7bd6509d422eb340af4fe3653"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3837, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}