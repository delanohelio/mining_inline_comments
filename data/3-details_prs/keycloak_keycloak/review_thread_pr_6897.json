{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzg5MTU4Njk3", "number": 6897, "reviewThreads": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozMzozOFrODvGy5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxNzowNFrOD1dSnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzIwOTk3OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozMzozOFrOGBViTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0MDo0NFrOGB7bzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ==", "bodyText": "I don't think we necessarily need to make a separate test for this. It could \"piggyback\" on some other test class, e.g. PersonalInfoTest. (I think you had it like that at some point.)\nBut if you decide it should have its own test class (which is also ok), please don't base it on BaseAccountPageTest as it contains some features specific for a page test (like a navigation test, e.g.). You can use AbstractAccountTest instead as a much more suitable option.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404054605", "createdAt": "2020-04-06T12:33:38Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNDU3Mg==", "bodyText": "@edewit Thanks for adding the test. I haven't yet tested it but all the changes in PersonalInfoPage should be moved to LoggedInPageHeader.\n\nSo you changed your mind again. I'll change the code again", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404634572", "createdAt": "2020-04-07T08:35:56Z", "author": {"login": "edewit"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDYzNzgyNQ==", "bodyText": "@edewit How did I change my mind? :) The citation you're mentioning is specifically about the page object whereas this thread is about the test class. If something's not clear please let me know \u2013 we could e.g. schedule a call and talk about it.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404637825", "createdAt": "2020-04-07T08:41:07Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY2MzQ4Nw==", "bodyText": "Okay now I'm totally confused, based on you comment I moved all the stuff to separate classes. Then you comment that I shouldn't do that so I revert. I might have misinterpreted that, because you only mend the stuff from PersonalInfoPage, but here in this PR you also say that I shouldn't have a LoggedInPageHeader", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404663487", "createdAt": "2020-04-07T09:21:34Z", "author": {"login": "edewit"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3MTQyNQ==", "bodyText": "But I think I know what you meant now. Changed it.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404671425", "createdAt": "2020-04-07T09:33:59Z", "author": {"login": "edewit"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NTUzMw==", "bodyText": "Thank you. My whole point was to simply follow the pattern we have in the tests to keep the code consistent and clean.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404675533", "createdAt": "2020-04-07T09:40:44Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/LoggedInPageHeaderTest.java", "diffHunk": "@@ -0,0 +1,44 @@\n+/*\n+ * Copyright 2018 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2;\n+\n+import org.jboss.arquillian.graphene.page.Page;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.keycloak.testsuite.admin.ApiUtil;\n+import org.keycloak.testsuite.ui.account2.page.AbstractLoggedInPage;\n+import org.keycloak.testsuite.ui.account2.page.LoggedInPageHeaderPage;\n+\n+import static org.junit.Assert.assertTrue;\n+\n+public class LoggedInPageHeaderTest extends BaseAccountPageTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NDYwNQ=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzIyMjQ5OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/LoggedInPageHeaderPage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozNzowNVrOGBVp7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozNzowNVrOGBVp7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NjU1Ng==", "bodyText": "Please don't make a separate Page Class for this. It's not a page, it's part of a page header. Please move its content to AbstractHeader (if the username will be displayed on Welcome Screen as well) or LoggedInPageHeader.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404056556", "createdAt": "2020-04-06T12:37:05Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/LoggedInPageHeaderPage.java", "diffHunk": "@@ -0,0 +1,43 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.testsuite.ui.account2.page;\n+\n+import org.keycloak.representations.idm.UserRepresentation;\n+import org.openqa.selenium.WebElement;\n+import org.openqa.selenium.support.FindBy;\n+\n+import static org.keycloak.testsuite.util.UIAssert.assertElementDisabled;\n+import static org.keycloak.testsuite.util.UIAssert.assertInputElementValid;\n+import static org.keycloak.testsuite.util.UIUtils.getTextInputValue;\n+import static org.keycloak.testsuite.util.UIUtils.setTextInputValue;\n+\n+import static org.junit.Assert.assertEquals;\n+\n+public class LoggedInPageHeaderPage extends AbstractLoggedInPage {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNzIyNzAwOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxMjozODoyMVrOGBVs1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMTowMjo1MVrOGCqIOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg==", "bodyText": "I think we should display the logged in user on Welcome Screen as well. This way it's not consistent.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404057302", "createdAt": "2020-04-06T12:38:21Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MDM4OQ==", "bodyText": "It's already not consistent as it's also missing the avatar image on the welcome screen.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404640389", "createdAt": "2020-04-07T08:45:13Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY0MzYzOA==", "bodyText": "Good catch with the avatar image. Strictly speaking it should be present there as well but it might be out of scope of this PR \u2013\u00a0it's up to you.\nSince the Welcome Screen allows user to log in (without redirecting to a React page), there should be at least the logged in user present there, at the very least.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404643638", "createdAt": "2020-04-07T08:50:18Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgxOTk3NA==", "bodyText": "I'm not sure we need the avatar image.  The image is only cosmetic.  It doesn't add any functionality and it does take up valuable space.\n@vmuzikar @edewit WDYT?", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404819974", "createdAt": "2020-04-07T13:44:33Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDgyMDQzMA==", "bodyText": "And I could go either way.  Aesthetics are important too.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404820430", "createdAt": "2020-04-07T13:45:09Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQ0MDU3MA==", "bodyText": "@ssilvert I believe there are currently no plans for actually supporting avatar images, right? In that case +1 for removing the fake one as it might be confusing for the user \u2013 it implies there's some avatar but user can't change it.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r405440570", "createdAt": "2020-04-08T11:02:51Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/App.tsx", "diffHunk": "@@ -63,11 +63,17 @@ export class App extends React.Component<AppProps> {\n         // globally set up locale for date formatting\n         moment.locale(locale);\n \n+        const avatar = (\n+            <div className=\"pf-l-toolbar__group\" style={{marginLeft: '10px'}}>\n+                <span id=\"loggedInUser\">{this.kcSvc.userName}</span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDA1NzMwMg=="}, "originalCommit": {"oid": "f2715025b344d37411701efec2df07376836979e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTE1MzczOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/PersonalInfoTest.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0MzozOFrOGB7i-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDo1MjowM1rOGCpyZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NzM3MQ==", "bodyText": "Please make sure the test is thorough enough and possibly covers all the possibilities (user doesn't have first and last name, user has only first or last name, user has preferred username, ...).\nAnd possibly add a test for Welcome Screen as well.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404677371", "createdAt": "2020-04-07T09:43:38Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/PersonalInfoTest.java", "diffHunk": "@@ -154,6 +155,11 @@ public void disabledEditUsername() {\n         personalInfoPage.valuesEqual(testUser2);\n     }\n \n+    @Test\n+    public void testNameInToolbar() {\n+        assertEquals(\"test user\", personalInfoPage.header().getToolbarLoggedInUser().getText());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90c756aa22fc78304d2ffac7b9143fd2bb39728"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NjEzMQ==", "bodyText": "added more cases", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404796131", "createdAt": "2020-04-07T13:11:19Z", "author": {"login": "edewit"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/PersonalInfoTest.java", "diffHunk": "@@ -154,6 +155,11 @@ public void disabledEditUsername() {\n         personalInfoPage.valuesEqual(testUser2);\n     }\n \n+    @Test\n+    public void testNameInToolbar() {\n+        assertEquals(\"test user\", personalInfoPage.header().getToolbarLoggedInUser().getText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NzM3MQ=="}, "originalCommit": {"oid": "f90c756aa22fc78304d2ffac7b9143fd2bb39728"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQzNDk4MQ==", "bodyText": "Looks good, thanks. Could you please add something similar for welcome screen as well? It doesn't share the implementation with React pages, so it's worth to have a separate test for that too.\nAlso, on welcome screen please test that the user is not displayed at all if not logged in. We have to make sure we don't have gaps in test coverage. :)", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r405434981", "createdAt": "2020-04-08T10:52:03Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/PersonalInfoTest.java", "diffHunk": "@@ -154,6 +155,11 @@ public void disabledEditUsername() {\n         personalInfoPage.valuesEqual(testUser2);\n     }\n \n+    @Test\n+    public void testNameInToolbar() {\n+        assertEquals(\"test user\", personalInfoPage.header().getToolbarLoggedInUser().getText());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3NzM3MQ=="}, "originalCommit": {"oid": "f90c756aa22fc78304d2ffac7b9143fd2bb39728"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxMTE1NjQ1OnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QwOTo0NDoxNFrOGB7klA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxMzoxMTowN1rOGCCyXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3Nzc4MA==", "bodyText": "Does this mean Welcome Page doesn't display first and last name of a user?", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404677780", "createdAt": "2020-04-07T09:44:14Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -109,6 +109,7 @@\n                 } else {\n                     document.getElementById(\"landingSignOutButton\").style.display='inline';\n                     document.getElementById(\"landingSignOutLink\").style.display='inline';\n+                    document.getElementById(\"loggedInUser\").innerHTML = keycloak.tokenParsed.preferred_username;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f90c756aa22fc78304d2ffac7b9143fd2bb39728"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDc5NTk5Nw==", "bodyText": "done", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r404795997", "createdAt": "2020-04-07T13:11:07Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -109,6 +109,7 @@\n                 } else {\n                     document.getElementById(\"landingSignOutButton\").style.display='inline';\n                     document.getElementById(\"landingSignOutLink\").style.display='inline';\n+                    document.getElementById(\"loggedInUser\").innerHTML = keycloak.tokenParsed.preferred_username;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDY3Nzc4MA=="}, "originalCommit": {"oid": "f90c756aa22fc78304d2ffac7b9143fd2bb39728"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNTk1OTIwOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/fragment/LoggedInPageHeader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDo1Njo0NFrOGCp72g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxMDo1Njo0NFrOGCp72g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTQzNzQwMg==", "bodyText": "Please return String from this element using getTextFromElement as it includes some hacks (and more might be added in the future).\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public WebElement getToolbarLoggedInUser() {\n          \n          \n            \n                    return toolbarLoggedInUser;\n          \n          \n            \n                public String getToolbarLoggedInUser() {\n          \n          \n            \n                    return getTextFromElement(toolbarLoggedInUser);", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r405437402", "createdAt": "2020-04-08T10:56:44Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/fragment/LoggedInPageHeader.java", "diffHunk": "@@ -73,4 +76,8 @@ protected WebElement getLogoutBtn() {\n     protected WebElement getReferrerLink() {\n         return isMobileLayout() ? referrerLinkMobile : referrerLink;\n     }\n+\n+    public WebElement getToolbarLoggedInUser() {\n+        return toolbarLoggedInUser;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "897d2394e4ed5d807e6d113b7ec508721f916105"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDYwNDYxOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoyNToyMlrOGEwGFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMDo1NVrOGFLRuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNTQ3Nw==", "bodyText": "@edewit This needs to be localized.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r407635477", "createdAt": "2020-04-13T18:25:22Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkzMzI5OA==", "bodyText": "I think we don't actually need to localize this. If I got it right, this won't be never displayed because KC always includes at least preferred_username in tokens, am I right? I understood this is just a failsafe of sorts.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r407933298", "createdAt": "2020-04-14T07:48:27Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNTQ3Nw=="}, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MDgyNw==", "bodyText": "I don't know enough to say with 100% certainty.  It's not a big deal to localize just in case.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r408080827", "createdAt": "2020-04-14T12:00:55Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNTQ3Nw=="}, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzMDYxNzkyOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxODoyOToyNFrOGEwOyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjo0OToxNlrOGFNAFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzcwNQ==", "bodyText": "This needs to be localized as well.  Many cultures don't do givenName + ' ' + familyName.  So these should be passed in as params to a message bundle instead.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r407637705", "createdAt": "2020-04-13T18:29:24Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';\n+        if (KeycloakService.keycloakAuth.tokenParsed) {\n+            const givenName = (KeycloakService.keycloakAuth.tokenParsed as {given_name: string}).given_name;\n+            const familyName = (KeycloakService.keycloakAuth.tokenParsed as {family_name: string}).family_name;\n+            const preferredUsername = (KeycloakService.keycloakAuth.tokenParsed as {preferred_username: string}).preferred_username;\n+            if (givenName && familyName) {\n+                userName = givenName + ' ' + familyName;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzkyMTAyMQ==", "bodyText": "givenName (given_name) and familyName (family_name) are the properties in tokenParsed so what do you want me to localize? The way we concatenate the name? Are there more properties in tokenParsed that contain the parts of the name?", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r407921021", "createdAt": "2020-04-14T07:26:30Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';\n+        if (KeycloakService.keycloakAuth.tokenParsed) {\n+            const givenName = (KeycloakService.keycloakAuth.tokenParsed as {given_name: string}).given_name;\n+            const familyName = (KeycloakService.keycloakAuth.tokenParsed as {family_name: string}).family_name;\n+            const preferredUsername = (KeycloakService.keycloakAuth.tokenParsed as {preferred_username: string}).preferred_username;\n+            if (givenName && familyName) {\n+                userName = givenName + ' ' + familyName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzcwNQ=="}, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA3ODkxOA==", "bodyText": "Yes, the way we concatenate the name should be localized.  I think all you need to do is pass the params into Msg.  Then the message bundle concatenates based on locale.  So English bundle looks something like:\nfullName={0} {1}\nSouth Korea bundle might look like:\nfullName={1} {0}", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r408078918", "createdAt": "2020-04-14T11:57:21Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';\n+        if (KeycloakService.keycloakAuth.tokenParsed) {\n+            const givenName = (KeycloakService.keycloakAuth.tokenParsed as {given_name: string}).given_name;\n+            const familyName = (KeycloakService.keycloakAuth.tokenParsed as {family_name: string}).family_name;\n+            const preferredUsername = (KeycloakService.keycloakAuth.tokenParsed as {preferred_username: string}).preferred_username;\n+            if (givenName && familyName) {\n+                userName = givenName + ' ' + familyName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzcwNQ=="}, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODEwOTA3Nw==", "bodyText": "okay done", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r408109077", "createdAt": "2020-04-14T12:49:16Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/resources/app/keycloak-service/keycloak.service.ts", "diffHunk": "@@ -84,6 +84,21 @@ export class KeycloakService {\n         return KeycloakService.keycloakAuth.realm;\n     }\n \n+    public get userName(): string {\n+        let userName = 'Anonymous';\n+        if (KeycloakService.keycloakAuth.tokenParsed) {\n+            const givenName = (KeycloakService.keycloakAuth.tokenParsed as {given_name: string}).given_name;\n+            const familyName = (KeycloakService.keycloakAuth.tokenParsed as {family_name: string}).family_name;\n+            const preferredUsername = (KeycloakService.keycloakAuth.tokenParsed as {preferred_username: string}).preferred_username;\n+            if (givenName && familyName) {\n+                userName = givenName + ' ' + familyName;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzYzNzcwNQ=="}, "originalCommit": {"oid": "60702df6066330c5f0dce3a5d7bc751580ce0ece"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNzczMjQ5OnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxMDo0Nzo1OVrOGF0KWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxODo0MDoyMVrOGGGtRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1MDY4Mg==", "bodyText": "I've noticed we use the same ID both at Welcome Screen and at React pages. The Welcome Screen is technically always present in the DOM, just hidden when a React page is loaded. I'm no HTML expert, so correct me if I'm wrong, but I think it's not valid to have duplicit IDs in HTML and it could theoretically cause some problems. One thing I can think of is testing \u2013\u00a0it could be a bit nondeterministic as we don't know which of the elements with this ID was selected.\nAt the Welcome Screen we usually use landing prefix for IDs to prevent this kind of issues.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r408750682", "createdAt": "2020-04-15T10:47:59Z", "author": {"login": "vmuzikar"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -160,6 +178,10 @@\n               <button id=\"landingSignOutButton\" tabindex=\"0\" style=\"display:none\" onclick=\"keycloak.logout();\" class=\"pf-c-button pf-m-primary\" type=\"button\">${msg(\"doSignOut\")}</button>\n             </div>\n \n+            <div class=\"pf-l-toolbar__group\" style=\"margin-left: 10px;\">\n+                <span id=\"loggedInUser\"></span>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0e3d01ec0a5dadb62154dc9d0cedd7a5b438328c"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTA1NDUzNA==", "bodyText": "At the Welcome Screen we usually use landing prefix for IDs to prevent this kind of issues.\n\nI think that's a good idea.  We should make sure to do that from now on.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r409054534", "createdAt": "2020-04-15T18:40:21Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -160,6 +178,10 @@\n               <button id=\"landingSignOutButton\" tabindex=\"0\" style=\"display:none\" onclick=\"keycloak.logout();\" class=\"pf-c-button pf-m-primary\" type=\"button\">${msg(\"doSignOut\")}</button>\n             </div>\n \n+            <div class=\"pf-l-toolbar__group\" style=\"margin-left: 10px;\">\n+                <span id=\"loggedInUser\"></span>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODc1MDY4Mg=="}, "originalCommit": {"oid": "0e3d01ec0a5dadb62154dc9d0cedd7a5b438328c"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2NjgzNzIzOnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/PersonalInfoPage.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDozNzoxMVrOGJ579Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxNDozNzoxMVrOGJ579Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzAzOTYwNQ==", "bodyText": "This change is not necessary.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r413039605", "createdAt": "2020-04-22T14:37:11Z", "author": {"login": "vmuzikar"}, "path": "testsuite/integration-arquillian/tests/other/base-ui/src/test/java/org/keycloak/testsuite/ui/account2/page/PersonalInfoPage.java", "diffHunk": "@@ -26,6 +26,8 @@\n import static org.keycloak.testsuite.util.UIUtils.getTextInputValue;\n import static org.keycloak.testsuite.util.UIUtils.setTextInputValue;\n \n+import static org.junit.Assert.assertEquals;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b92ae05ae890b058a5bae667bc5a1ae9d0e0d4e1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3MzgxMDIxOnYy", "diffSide": "RIGHT", "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QyMDoxNzowNFrOGK6WGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQwNzowNToyMVrOGLJj9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NDg3NQ==", "bodyText": "@edewit Can you move this function to WelcomePageScripts.js?  index.ftl is too big and hard to manage already.", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r414094875", "createdAt": "2020-04-23T20:17:04Z", "author": {"login": "ssilvert"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -121,6 +122,23 @@\n             }).error(function() {\n                 alert('failed to initialize keycloak');\n             });\n+\n+            function loggedInUserName() {\n+                let userName = '${msg(\"unknownUser\")}';\n+                if (keycloak.tokenParsed) {\n+                    const givenName = keycloak.tokenParsed.given_name;\n+                    const familyName = keycloak.tokenParsed.family_name;\n+                    const preferredUsername = keycloak.tokenParsed.preferred_username;\n+                    if (givenName && familyName) {\n+                        userName = [givenName, familyName].reduce((acc, value, index) =>\n+                            acc.replace('{'+ index + '}', value), '${msg(\"fullName\")}'\n+                        );\n+                    } else {\n+                        userName = (givenName || familyName) || preferredUsername || userName;\n+                    }\n+                }\n+                return userName;\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b92ae05ae890b058a5bae667bc5a1ae9d0e0d4e1"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDM0NDE4Mg==", "bodyText": "It can't move as it needs freemarker to have the \"fullName = {0} {1}\" template", "url": "https://github.com/keycloak/keycloak/pull/6897#discussion_r414344182", "createdAt": "2020-04-24T07:05:21Z", "author": {"login": "edewit"}, "path": "themes/src/main/resources/theme/keycloak-preview/account/index.ftl", "diffHunk": "@@ -121,6 +122,23 @@\n             }).error(function() {\n                 alert('failed to initialize keycloak');\n             });\n+\n+            function loggedInUserName() {\n+                let userName = '${msg(\"unknownUser\")}';\n+                if (keycloak.tokenParsed) {\n+                    const givenName = keycloak.tokenParsed.given_name;\n+                    const familyName = keycloak.tokenParsed.family_name;\n+                    const preferredUsername = keycloak.tokenParsed.preferred_username;\n+                    if (givenName && familyName) {\n+                        userName = [givenName, familyName].reduce((acc, value, index) =>\n+                            acc.replace('{'+ index + '}', value), '${msg(\"fullName\")}'\n+                        );\n+                    } else {\n+                        userName = (givenName || familyName) || preferredUsername || userName;\n+                    }\n+                }\n+                return userName;\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDA5NDg3NQ=="}, "originalCommit": {"oid": "b92ae05ae890b058a5bae667bc5a1ae9d0e0d4e1"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3828, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}