{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA3MzE4NzUw", "number": 6997, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTowODoyMlrOD067Ig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTowODoyMlrOD067Ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU2ODE3OTU0OnYy", "diffSide": "RIGHT", "path": "authz/client/src/main/java/org/keycloak/authorization/client/resource/PermissionResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMlQxOTowODoyMlrOGKGmLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yM1QwNjo1NTozNVrOGKZmcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0NzAyMg==", "bodyText": "Instead of passing the ticket representation we can just use the ID (String) as the argument for this method.", "url": "https://github.com/keycloak/keycloak/pull/6997#discussion_r413247022", "createdAt": "2020-04-22T19:08:22Z", "author": {"login": "pedroigor"}, "path": "authz/client/src/main/java/org/keycloak/authorization/client/resource/PermissionResource.java", "diffHunk": "@@ -237,13 +237,43 @@ public void update(final PermissionTicketRepresentation ticket) {\n         if (ticket.getId() == null) {\n             throw new IllegalArgumentException(\"Permission ticket must have an id\");\n         }\n-        Callable callable = new Callable() {\n+        Callable<Void> callable = new Callable<Void>() {\n             @Override\n-            public Object call() throws Exception {\n-                http.<List>put(serverConfiguration.getPermissionEndpoint()+\"/ticket\")\n+            public Void call() throws Exception {\n+                http.<Void>put(serverConfiguration.getPermissionEndpoint()+\"/ticket\")\n                         .json(JsonSerialization.writeValueAsBytes(ticket))\n                         .authorizationBearer(pat.call())\n-                        .response().json(List.class).execute();\n+                        .response()\n+                        .execute();\n+                return null;\n+            }\n+        };\n+        try {\n+            callable.call();\n+        } catch (Exception cause) {\n+            Throwables.retryAndWrapExceptionIfNecessary(callable, pat, \"Error updating permission ticket\", cause);\n+        }\n+    }\n+\n+    /**\n+     * Deletes a permission ticket.\n+     *\n+     * @param ticket the permission ticket\n+     */\n+    public void delete(final PermissionTicketRepresentation ticket) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4a809854db30c05b5d889fe6a1ce2ab768d440f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzU1ODM4NA==", "bodyText": "Thanks for the fast feedback, it is fixed now.", "url": "https://github.com/keycloak/keycloak/pull/6997#discussion_r413558384", "createdAt": "2020-04-23T06:55:35Z", "author": {"login": "bartmentech"}, "path": "authz/client/src/main/java/org/keycloak/authorization/client/resource/PermissionResource.java", "diffHunk": "@@ -237,13 +237,43 @@ public void update(final PermissionTicketRepresentation ticket) {\n         if (ticket.getId() == null) {\n             throw new IllegalArgumentException(\"Permission ticket must have an id\");\n         }\n-        Callable callable = new Callable() {\n+        Callable<Void> callable = new Callable<Void>() {\n             @Override\n-            public Object call() throws Exception {\n-                http.<List>put(serverConfiguration.getPermissionEndpoint()+\"/ticket\")\n+            public Void call() throws Exception {\n+                http.<Void>put(serverConfiguration.getPermissionEndpoint()+\"/ticket\")\n                         .json(JsonSerialization.writeValueAsBytes(ticket))\n                         .authorizationBearer(pat.call())\n-                        .response().json(List.class).execute();\n+                        .response()\n+                        .execute();\n+                return null;\n+            }\n+        };\n+        try {\n+            callable.call();\n+        } catch (Exception cause) {\n+            Throwables.retryAndWrapExceptionIfNecessary(callable, pat, \"Error updating permission ticket\", cause);\n+        }\n+    }\n+\n+    /**\n+     * Deletes a permission ticket.\n+     *\n+     * @param ticket the permission ticket\n+     */\n+    public void delete(final PermissionTicketRepresentation ticket) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMzI0NzAyMg=="}, "originalCommit": {"oid": "f4a809854db30c05b5d889fe6a1ce2ab768d440f"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3723, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}