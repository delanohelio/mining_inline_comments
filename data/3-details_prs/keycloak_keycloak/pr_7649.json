{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5NDkwNzcx", "number": 7649, "title": "KEYCLOAK-14556 Authentication session map store", "bodyText": "", "createdAt": "2020-11-30T11:41:42Z", "url": "https://github.com/keycloak/keycloak/pull/7649", "merged": true, "mergeCommit": {"oid": "f6be378ecae926c8ec0a5d2521e5021a06eb33da"}, "closed": true, "closedAt": "2020-12-07T19:49:00Z", "author": {"login": "martin-kanis"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhmRL5ABqjQwNTIyMjc4NzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdj6_5KAFqTU0NjQ4MTgwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c38ea7058f55b8df7c065fea873bcf91318e802", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/0c38ea7058f55b8df7c065fea873bcf91318e802", "committedDate": "2020-11-30T11:40:27Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "a8e7c23853baac5f42d9ff9406fefcfddf3033dc", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a8e7c23853baac5f42d9ff9406fefcfddf3033dc", "committedDate": "2020-11-30T14:31:35Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjQ0MzMy", "url": "https://github.com/keycloak/keycloak/pull/7649#pullrequestreview-541244332", "createdAt": "2020-11-30T19:52:25Z", "commit": {"oid": "a8e7c23853baac5f42d9ff9406fefcfddf3033dc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1MjoyNlrOH8LUqg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTo1MjoyNlrOH8LUqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjg2MjEyMg==", "bodyText": "GHA failed on out of memory because of these lines, better keep them commented out :-)", "url": "https://github.com/keycloak/keycloak/pull/7649#discussion_r532862122", "createdAt": "2020-11-30T19:52:26Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/resources/log4j.properties", "diffHunk": "@@ -89,8 +89,8 @@ log4j.logger.org.keycloak.services.clientregistration.policy=debug\n # Enable logs the JDBC parameters passed to a query\n #log4j.logger.org.hibernate.type=trace\n \n-# log4j.logger.org.keycloak.models.map=trace\n-# log4j.logger.org.keycloak.models.map.transaction=debug\n+log4j.logger.org.keycloak.models.map=trace\n+log4j.logger.org.keycloak.models.map.transaction=debug\n \n # Enable to log short stack traces for log entries enabled with StackUtil.getShortStackTrace() calls\n-# log4j.logger.org.keycloak.STACK_TRACE=trace\n+log4j.logger.org.keycloak.STACK_TRACE=trace", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a8e7c23853baac5f42d9ff9406fefcfddf3033dc"}, "originalPosition": 20}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a8e7c23853baac5f42d9ff9406fefcfddf3033dc", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a8e7c23853baac5f42d9ff9406fefcfddf3033dc", "committedDate": "2020-11-30T14:31:35Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "ff388730e676ad5b37c71c6cc7f41412c0a553fd", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/ff388730e676ad5b37c71c6cc7f41412c0a553fd", "committedDate": "2020-11-30T20:52:37Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ff388730e676ad5b37c71c6cc7f41412c0a553fd", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/ff388730e676ad5b37c71c6cc7f41412c0a553fd", "committedDate": "2020-11-30T20:52:37Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "c4c2eecd813bb2dada3fb3fa905ca1c876c23020", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/c4c2eecd813bb2dada3fb3fa905ca1c876c23020", "committedDate": "2020-12-04T12:45:01Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c4c2eecd813bb2dada3fb3fa905ca1c876c23020", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/c4c2eecd813bb2dada3fb3fa905ca1c876c23020", "committedDate": "2020-12-04T12:45:01Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc", "committedDate": "2020-12-04T12:47:03Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTc5Nzg2", "url": "https://github.com/keycloak/keycloak/pull/7649#pullrequestreview-544979786", "createdAt": "2020-12-04T13:58:00Z", "commit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1ODowMVrOH_SByA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1ODowMVrOH_SByA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExNzcwNA==", "bodyText": "Why has this method been introduced?", "url": "https://github.com/keycloak/keycloak/pull/7649#discussion_r536117704", "createdAt": "2020-12-04T13:58:01Z", "author": {"login": "hmlnarik"}, "path": "server-spi/src/main/java/org/keycloak/sessions/AuthenticationSessionProvider.java", "diffHunk": "@@ -31,27 +31,87 @@\n     /**\n      * Creates and registers a new authentication session with random ID. Authentication session\n      * entity will be prefilled with current timestamp, the given realm and client.\n+     * @param realm {@code RealmModel}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n      */\n     RootAuthenticationSessionModel createRootAuthenticationSession(RealmModel realm);\n \n-    RootAuthenticationSessionModel createRootAuthenticationSession(String id, RealmModel realm);\n+    /**\n+     * Creates a new root authentication session specified by the provided id and realm.\n+     * @param id {@code String}\n+     * @param realm {@code RealmModel}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n+     * @deprecated Use {@link #createRootAuthenticationSession(RealmModel, String)} createRootAuthenticationSession} instead.\n+     */\n+    @Deprecated\n+    default RootAuthenticationSessionModel createRootAuthenticationSession(String id, RealmModel realm) {\n+        return createRootAuthenticationSession(realm, id);\n+    }\n \n+    /**\n+     * Creates a new root authentication session specified by the provided realm and id.\n+     * @param realm {@code RealmModel}\n+     * @param id {@code String}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n+     */\n+    RootAuthenticationSessionModel createRootAuthenticationSession(RealmModel realm, String id);\n+\n+    /**\n+     * Returns the root authentication session specified by the provided realm and id.\n+     * @param realm {@code RealmModel}\n+     * @param authenticationSessionId {@code RootAuthenticationSessionModel}\n+     * @return Returns found {@code RootAuthenticationSessionModel} or {@code null} if no root authentication session is found.\n+     */\n     RootAuthenticationSessionModel getRootAuthenticationSession(RealmModel realm, String authenticationSessionId);\n \n-    void removeRootAuthenticationSession(RealmModel realm, RootAuthenticationSessionModel authenticationSession);\n+    /**\n+     * Removes provided root authentication session.\n+     * @param realm {@code RealmModel}\n+     * @param authenticationSession {@code RootAuthenticationSessionModel}\n+     * @deprecated Use {@link #removeRootAuthenticationSession(RootAuthenticationSessionModel)} removeRootAuthenticationSession} instead.\n+     */\n+    @Deprecated\n+    default void removeRootAuthenticationSession(RealmModel realm, RootAuthenticationSessionModel authenticationSession) {\n+        removeRootAuthenticationSession(authenticationSession);\n+    }\n+\n+    /**\n+     * Removes provided root authentication session.\n+     * @param authenticationSession {@code RootAuthenticationSessionModel}\n+     */\n+    void removeRootAuthenticationSession(RootAuthenticationSessionModel authenticationSession);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc"}, "originalPosition": 54}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0OTc5OTk1", "url": "https://github.com/keycloak/keycloak/pull/7649#pullrequestreview-544979995", "createdAt": "2020-12-04T13:58:16Z", "commit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1ODoxNlrOH_SCbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMzo1ODoxNlrOH_SCbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjExNzg2OA==", "bodyText": "Why has this method been introduced?", "url": "https://github.com/keycloak/keycloak/pull/7649#discussion_r536117868", "createdAt": "2020-12-04T13:58:16Z", "author": {"login": "hmlnarik"}, "path": "server-spi/src/main/java/org/keycloak/sessions/AuthenticationSessionProvider.java", "diffHunk": "@@ -31,27 +31,87 @@\n     /**\n      * Creates and registers a new authentication session with random ID. Authentication session\n      * entity will be prefilled with current timestamp, the given realm and client.\n+     * @param realm {@code RealmModel}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n      */\n     RootAuthenticationSessionModel createRootAuthenticationSession(RealmModel realm);\n \n-    RootAuthenticationSessionModel createRootAuthenticationSession(String id, RealmModel realm);\n+    /**\n+     * Creates a new root authentication session specified by the provided id and realm.\n+     * @param id {@code String}\n+     * @param realm {@code RealmModel}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n+     * @deprecated Use {@link #createRootAuthenticationSession(RealmModel, String)} createRootAuthenticationSession} instead.\n+     */\n+    @Deprecated\n+    default RootAuthenticationSessionModel createRootAuthenticationSession(String id, RealmModel realm) {\n+        return createRootAuthenticationSession(realm, id);\n+    }\n \n+    /**\n+     * Creates a new root authentication session specified by the provided realm and id.\n+     * @param realm {@code RealmModel}\n+     * @param id {@code String}\n+     * @return Returns created {@code RootAuthenticationSessionModel}. Never returns {@code null}.\n+     */\n+    RootAuthenticationSessionModel createRootAuthenticationSession(RealmModel realm, String id);\n+\n+    /**\n+     * Returns the root authentication session specified by the provided realm and id.\n+     * @param realm {@code RealmModel}\n+     * @param authenticationSessionId {@code RootAuthenticationSessionModel}\n+     * @return Returns found {@code RootAuthenticationSessionModel} or {@code null} if no root authentication session is found.\n+     */\n     RootAuthenticationSessionModel getRootAuthenticationSession(RealmModel realm, String authenticationSessionId);\n \n-    void removeRootAuthenticationSession(RealmModel realm, RootAuthenticationSessionModel authenticationSession);\n+    /**\n+     * Removes provided root authentication session.\n+     * @param realm {@code RealmModel}\n+     * @param authenticationSession {@code RootAuthenticationSessionModel}\n+     * @deprecated Use {@link #removeRootAuthenticationSession(RootAuthenticationSessionModel)} removeRootAuthenticationSession} instead.\n+     */\n+    @Deprecated\n+    default void removeRootAuthenticationSession(RealmModel realm, RootAuthenticationSessionModel authenticationSession) {\n+        removeRootAuthenticationSession(authenticationSession);\n+    }\n+\n+    /**\n+     * Removes provided root authentication session.\n+     * @param authenticationSession {@code RootAuthenticationSessionModel}\n+     */\n+    void removeRootAuthenticationSession(RootAuthenticationSessionModel authenticationSession);\n \n+    /**\n+     * Removes a root authentication session by the given id.\n+     * @param id {@code String}\n+     */\n+    void removeRootAuthenticationSessionById(String id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc"}, "originalPosition": 60}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/2d80db29096f04c84e8ac4cbcf55d80a41c3d5cc", "committedDate": "2020-12-04T12:47:03Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "96e6acffd3262c6d1fc94e7d9b2087ab55726605", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/96e6acffd3262c6d1fc94e7d9b2087ab55726605", "committedDate": "2020-12-04T14:00:23Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "96e6acffd3262c6d1fc94e7d9b2087ab55726605", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/96e6acffd3262c6d1fc94e7d9b2087ab55726605", "committedDate": "2020-12-04T14:00:23Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "179fc0d6af7d8f2a2e61c1b2144defb31a013add", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/179fc0d6af7d8f2a2e61c1b2144defb31a013add", "committedDate": "2020-12-04T14:29:08Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba", "committedDate": "2020-12-07T14:34:31Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "179fc0d6af7d8f2a2e61c1b2144defb31a013add", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/179fc0d6af7d8f2a2e61c1b2144defb31a013add", "committedDate": "2020-12-04T14:29:08Z", "message": "KEYCLOAK-14556 Authentication session map store"}, "afterCommit": {"oid": "8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba", "committedDate": "2020-12-07T14:34:31Z", "message": "KEYCLOAK-14556 Authentication session map store"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDgxNjg1", "url": "https://github.com/keycloak/keycloak/pull/7649#pullrequestreview-546481685", "createdAt": "2020-12-07T19:48:42Z", "commit": {"oid": "8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ2NDgxODAx", "url": "https://github.com/keycloak/keycloak/pull/7649#pullrequestreview-546481801", "createdAt": "2020-12-07T19:48:52Z", "commit": {"oid": "8c508bd35cef8cb4d70798fefc2b7af6bf8dbbba"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3285, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}