{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3MDY0NzUx", "number": 7136, "title": "KEYCLOAK-14368 Streams serialization in Jackson", "bodyText": "", "createdAt": "2020-06-03T09:03:33Z", "url": "https://github.com/keycloak/keycloak/pull/7136", "merged": true, "mergeCommit": {"oid": "9c4da9b3ce25bf609ffa9f53fe6a9d68b7b00d5c"}, "closed": true, "closedAt": "2020-07-07T14:26:13Z", "author": {"login": "martin-kanis"}, "timelineItems": {"totalCount": 30, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcoO_bKABqjM0MTA0MTUyMzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcymrZEgFqTQ0Mzk0NDgzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bc147f1a4b32e93a4fcd09dff717dfd6a60c38c3", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/bc147f1a4b32e93a4fcd09dff717dfd6a60c38c3", "committedDate": "2020-06-03T09:01:35Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "cbac29d1f3466e91699a9984befda92594a86891", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/cbac29d1f3466e91699a9984befda92594a86891", "committedDate": "2020-06-05T09:10:33Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cbac29d1f3466e91699a9984befda92594a86891", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/cbac29d1f3466e91699a9984befda92594a86891", "committedDate": "2020-06-05T09:10:33Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "4f2b77f0519be9e0c3befda2fa9c89db030654ba", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/4f2b77f0519be9e0c3befda2fa9c89db030654ba", "committedDate": "2020-06-10T07:20:06Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4f2b77f0519be9e0c3befda2fa9c89db030654ba", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/4f2b77f0519be9e0c3befda2fa9c89db030654ba", "committedDate": "2020-06-10T07:20:06Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "d1f95738da3ac5fb23ac6430e625af2f443b5257", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/d1f95738da3ac5fb23ac6430e625af2f443b5257", "committedDate": "2020-06-10T08:00:23Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI3ODU4MzI4", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-427858328", "createdAt": "2020-06-10T09:04:17Z", "commit": {"oid": "d1f95738da3ac5fb23ac6430e625af2f443b5257"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTowNDoxN1rOGhr0GA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQwOTowNDoxN1rOGhr0GA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk3NDA0MA==", "bodyText": "The response is available in the AsyncEvent object and should not be part of the AsyncListener", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r437974040", "createdAt": "2020-06-10T09:04:17Z", "author": {"login": "hmlnarik"}, "path": "wildfly/extensions/src/main/java/org/keycloak/provider/wildfly/KeycloakSessionServletFilter.java", "diffHunk": "@@ -91,28 +94,28 @@ public int getLocalPort() {\n             filterChain.doFilter(servletRequest, servletResponse);\n         } finally {\n             if (servletRequest.isAsyncStarted()) {\n-                servletRequest.getAsyncContext().addListener(createAsyncLifeCycleListener(session));\n+                servletRequest.getAsyncContext().addListener(createAsyncLifeCycleListener(session, response));\n             } else {\n-                closeSession(session);\n+                closeSession(session, response);\n             }\n         }\n     }\n \n-    private AsyncListener createAsyncLifeCycleListener(final KeycloakSession session) {\n+    private AsyncListener createAsyncLifeCycleListener(final KeycloakSession session, final HttpServletResponse response) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d1f95738da3ac5fb23ac6430e625af2f443b5257"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1f95738da3ac5fb23ac6430e625af2f443b5257", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/d1f95738da3ac5fb23ac6430e625af2f443b5257", "committedDate": "2020-06-10T08:00:23Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "a9516fab2774513b5173ab03e19e0b08ce4a757e", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a9516fab2774513b5173ab03e19e0b08ce4a757e", "committedDate": "2020-06-10T09:49:56Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9516fab2774513b5173ab03e19e0b08ce4a757e", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a9516fab2774513b5173ab03e19e0b08ce4a757e", "committedDate": "2020-06-10T09:49:56Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "a2a736bd152b96042e16e8b4b16bf133248f4db0", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a2a736bd152b96042e16e8b4b16bf133248f4db0", "committedDate": "2020-06-10T11:39:22Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2a736bd152b96042e16e8b4b16bf133248f4db0", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/a2a736bd152b96042e16e8b4b16bf133248f4db0", "committedDate": "2020-06-10T11:39:22Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/e4c9f7972ec5c21eee66f5e6255e32389a72abd3", "committedDate": "2020-06-10T13:02:57Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MDk5ODYz", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-428099863", "createdAt": "2020-06-10T14:16:56Z", "commit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNjo1NlrOGh2_0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNjo1NlrOGh2_0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NzI2NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    if (transactionManager != null) {\n          \n          \n            \n                    if (transactionManager != null && transactionManager.isActive()) {", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r438157265", "createdAt": "2020-06-10T14:16:56Z", "author": {"login": "hmlnarik"}, "path": "wildfly/extensions/src/main/java/org/keycloak/provider/wildfly/KeycloakSessionServletFilter.java", "diffHunk": "@@ -122,10 +124,17 @@ public void onStartAsync(AsyncEvent event) {\n     }\n \n     private void closeSession(KeycloakSession session) {\n-        // KeycloakTransactionCommitter is responsible for committing the transaction, but if an exception is thrown it's not invoked and transaction\n-        // should be rolled back\n-        if (session.getTransactionManager() != null && session.getTransactionManager().isActive()) {\n-            session.getTransactionManager().rollback();\n+        KeycloakTransactionManager transactionManager = session.getTransactionManager();\n+        if (transactionManager != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTAwMTQ2", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-428100146", "createdAt": "2020-06-10T14:17:15Z", "commit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNzoxNVrOGh3ArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDoxNzoxNVrOGh3ArQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE1NzQ4NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        } else if (transactionManager.isActive()){\n          \n          \n            \n                        } else {", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r438157485", "createdAt": "2020-06-10T14:17:15Z", "author": {"login": "hmlnarik"}, "path": "wildfly/extensions/src/main/java/org/keycloak/provider/wildfly/KeycloakSessionServletFilter.java", "diffHunk": "@@ -122,10 +124,17 @@ public void onStartAsync(AsyncEvent event) {\n     }\n \n     private void closeSession(KeycloakSession session) {\n-        // KeycloakTransactionCommitter is responsible for committing the transaction, but if an exception is thrown it's not invoked and transaction\n-        // should be rolled back\n-        if (session.getTransactionManager() != null && session.getTransactionManager().isActive()) {\n-            session.getTransactionManager().rollback();\n+        KeycloakTransactionManager transactionManager = session.getTransactionManager();\n+        if (transactionManager != null) {\n+            // transaction was postponed in KeycloakTransactionCommitter, commit it here\n+            if ((transactionManager instanceof SupportsPostponedCommit) &&\n+                    ((SupportsPostponedCommit) transactionManager).isPostponedCommit()) {\n+                transactionManager.commit();\n+            } else if (transactionManager.isActive()){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI4MTI1NDUx", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-428125451", "createdAt": "2020-06-10T14:40:26Z", "commit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo0MDoyNlrOGh4KRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNDo0MDoyNlrOGh4KRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODE3NjMyNw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    KeycloakTransaction tx =  Resteasy.getContextData(KeycloakTransaction.class);\n          \n          \n            \n                    KeycloakTransaction tx = Resteasy.getContextData(KeycloakTransaction.class);", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r438176327", "createdAt": "2020-06-10T14:40:26Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/services/filters/KeycloakTransactionCommitter.java", "diffHunk": "@@ -36,13 +36,20 @@\n public class KeycloakTransactionCommitter implements ContainerResponseFilter {\n \n     @Override\n-    public void filter(ContainerRequestContext containerRequestContext, ContainerResponseContext containerResponseContext) throws IOException {\n-        KeycloakTransaction tx = Resteasy.getContextData(KeycloakTransaction.class);\n+    public void filter(ContainerRequestContext containerRequestContext, ContainerResponseContext containerResponseContext) {\n+        KeycloakTransaction tx =  Resteasy.getContextData(KeycloakTransaction.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e4c9f7972ec5c21eee66f5e6255e32389a72abd3", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/e4c9f7972ec5c21eee66f5e6255e32389a72abd3", "committedDate": "2020-06-10T13:02:57Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "63e4ebfffe3b5fb7c8e66b49721f729e7d15358a", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/63e4ebfffe3b5fb7c8e66b49721f729e7d15358a", "committedDate": "2020-06-10T15:01:15Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63e4ebfffe3b5fb7c8e66b49721f729e7d15358a", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/63e4ebfffe3b5fb7c8e66b49721f729e7d15358a", "committedDate": "2020-06-10T15:01:15Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "ccb330128db4b64b5b0bd90ef3ded724629a653f", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/ccb330128db4b64b5b0bd90ef3ded724629a653f", "committedDate": "2020-06-11T10:01:48Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ccb330128db4b64b5b0bd90ef3ded724629a653f", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/ccb330128db4b64b5b0bd90ef3ded724629a653f", "committedDate": "2020-06-11T10:01:48Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "f10e05ac9cf2615b38a32363dc8f636065e96b35", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/f10e05ac9cf2615b38a32363dc8f636065e96b35", "committedDate": "2020-06-15T07:41:49Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f10e05ac9cf2615b38a32363dc8f636065e96b35", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/f10e05ac9cf2615b38a32363dc8f636065e96b35", "committedDate": "2020-06-15T07:41:49Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "e36d65dc3f1275bc0c5fe694573222737f06e5c3", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/e36d65dc3f1275bc0c5fe694573222737f06e5c3", "committedDate": "2020-06-19T11:32:51Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e36d65dc3f1275bc0c5fe694573222737f06e5c3", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/e36d65dc3f1275bc0c5fe694573222737f06e5c3", "committedDate": "2020-06-19T11:32:51Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "7cd7c969a555bd5d73e7244dc1afd63c2b234588", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/7cd7c969a555bd5d73e7244dc1afd63c2b234588", "committedDate": "2020-06-24T15:45:28Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cd7c969a555bd5d73e7244dc1afd63c2b234588", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/7cd7c969a555bd5d73e7244dc1afd63c2b234588", "committedDate": "2020-06-24T15:45:28Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "18e5fcb18cae5dcd217eda55ef729d50b985f2a5", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/18e5fcb18cae5dcd217eda55ef729d50b985f2a5", "committedDate": "2020-06-26T12:04:27Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "18e5fcb18cae5dcd217eda55ef729d50b985f2a5", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/18e5fcb18cae5dcd217eda55ef729d50b985f2a5", "committedDate": "2020-06-26T12:04:27Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "041043602558ad0d8f56b94ac79c963d5511931d", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/041043602558ad0d8f56b94ac79c963d5511931d", "committedDate": "2020-06-30T10:11:47Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "041043602558ad0d8f56b94ac79c963d5511931d", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/041043602558ad0d8f56b94ac79c963d5511931d", "committedDate": "2020-06-30T10:11:47Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "8d8de4b9fbb680f94dca0ed34a479c30b26d0303", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/8d8de4b9fbb680f94dca0ed34a479c30b26d0303", "committedDate": "2020-07-01T08:05:00Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8d8de4b9fbb680f94dca0ed34a479c30b26d0303", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/8d8de4b9fbb680f94dca0ed34a479c30b26d0303", "committedDate": "2020-07-01T08:05:00Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}, "afterCommit": {"oid": "10dc9fc1104fa95a1c1f5076fee83c730655fae9", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/10dc9fc1104fa95a1c1f5076fee83c730655fae9", "committedDate": "2020-07-01T11:14:58Z", "message": "KEYCLOAK-14368 Streams serialization in Jackson"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwMTc0OTI1", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-440174925", "createdAt": "2020-06-30T16:12:13Z", "commit": {"oid": "041043602558ad0d8f56b94ac79c963d5511931d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTo0MDozNVrOGriV8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMTo0MDozNVrOGriV8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMwNDYyNw==", "bodyText": "Ideally this would be addEndHandler but this method is only available with Vert.x 3.9.1 while current quarkus version is on 3.9.0.\n@stianst / @pedroigor Is it possible / how feasible is to update quarkus?", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r448304627", "createdAt": "2020-07-01T11:40:35Z", "author": {"login": "hmlnarik"}, "path": "quarkus/runtime/src/main/java/org/keycloak/provider/quarkus/QuarkusClientConnectionFilter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.provider.quarkus;\n+\n+import io.quarkus.vertx.web.RouteFilter;\n+import io.vertx.core.Handler;\n+import io.vertx.core.http.HttpServerRequest;\n+import io.vertx.ext.web.RoutingContext;\n+import org.keycloak.common.ClientConnection;\n+import org.keycloak.common.util.Resteasy;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.services.filters.AbstractClientConnectionServletFilter;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.ext.Provider;\n+\n+@PreMatching\n+@Provider\n+public class QuarkusClientConnectionFilter implements javax.ws.rs.container.ContainerRequestFilter {\n+\n+    @Inject\n+    RoutingContext routingContext;\n+\n+    @Override\n+    public void filter(ContainerRequestContext containerRequestContext) {\n+        HttpServerRequest request = routingContext.request();\n+        ClientConnection connection = createConnection(request);\n+\n+        AbstractClientConnectionServletFilter servletFilter = new AbstractClientConnectionServletFilter() {\n+            @Override\n+            protected void nextFilter(KeycloakSession session) {\n+                Resteasy.pushContext(KeycloakSession.class, session);\n+                Resteasy.pushContext(ClientConnection.class, connection);\n+\n+                routingContext.put(\"KeycloakSession\", session);\n+            }\n+        };\n+        routingContext.put(\"AbstractClientConnectionServletFilter\", servletFilter);\n+        servletFilter.filter();\n+    }\n+\n+    @RouteFilter()\n+    public void vertxFilter(RoutingContext rc) {\n+        rc.addHeadersEndHandler((Handler) e -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10dc9fc1104fa95a1c1f5076fee83c730655fae9"}, "originalPosition": 61}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMDk2MTk3", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442096197", "createdAt": "2020-07-03T01:22:49Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTExMDQ4", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442111048", "createdAt": "2020-07-03T02:25:50Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoyNTo1MFrOGsh33g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjoyNTo1MFrOGsh33g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NTUwMg==", "bodyText": "I'm doing similar changes in another PR. I'm wondering if we should get first my changes even though we need some more discussion around configuration.\nIt should not be a problem as most of the changes are necessary.", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r449345502", "createdAt": "2020-07-03T02:25:50Z", "author": {"login": "pedroigor"}, "path": "quarkus/runtime/src/main/java/org/keycloak/provider/quarkus/KeycloakConfigSourceProvider.java", "diffHunk": "@@ -58,23 +55,16 @@\n         }\n \n         if (filePath != null) {\n-            sources.add(wrap(new KeycloakPropertiesConfigSource.InFileSystem(filePath)));\n+            sources.add(new KeycloakPropertiesConfigSource.InFileSystem(filePath));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTEyMjQz", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442112243", "createdAt": "2020-07-03T02:30:48Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjozMDo0OVrOGsh7zA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjozMDo0OVrOGsh7zA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NjUwOA==", "bodyText": "I remember using filter differently where we basically dispatch the request from the eventloop so that we can control all the request lifecycle.\nI think it should work better as well as serve as an important point for any other change we might need that affects the thread execution.", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r449346508", "createdAt": "2020-07-03T02:30:49Z", "author": {"login": "pedroigor"}, "path": "quarkus/runtime/src/main/java/org/keycloak/provider/quarkus/QuarkusClientConnectionFilter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.provider.quarkus;\n+\n+import io.quarkus.vertx.web.RouteFilter;\n+import io.vertx.core.Handler;\n+import io.vertx.core.http.HttpServerRequest;\n+import io.vertx.ext.web.RoutingContext;\n+import org.keycloak.common.ClientConnection;\n+import org.keycloak.common.util.Resteasy;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.services.filters.AbstractClientConnectionServletFilter;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.ext.Provider;\n+\n+@PreMatching\n+@Provider\n+public class QuarkusClientConnectionFilter implements javax.ws.rs.container.ContainerRequestFilter {\n+\n+    @Inject\n+    RoutingContext routingContext;\n+\n+    @Override\n+    public void filter(ContainerRequestContext containerRequestContext) {\n+        HttpServerRequest request = routingContext.request();\n+        ClientConnection connection = createConnection(request);\n+\n+        AbstractClientConnectionServletFilter servletFilter = new AbstractClientConnectionServletFilter() {\n+            @Override\n+            protected void nextFilter(KeycloakSession session) {\n+                Resteasy.pushContext(KeycloakSession.class, session);\n+                Resteasy.pushContext(ClientConnection.class, connection);\n+\n+                routingContext.put(\"KeycloakSession\", session);\n+            }\n+        };\n+        routingContext.put(\"AbstractClientConnectionServletFilter\", servletFilter);\n+        servletFilter.filter();\n+    }\n+\n+    @RouteFilter()\n+    public void vertxFilter(RoutingContext rc) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "originalPosition": 60}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTEyNTQ1", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442112545", "createdAt": "2020-07-03T02:32:15Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjozMjoxNVrOGsh8-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QwMjozMjoxNVrOGsh8-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTM0NjgxMQ==", "bodyText": "If you use private you are forcing reflection. That is why the method is marked with default/package.", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r449346811", "createdAt": "2020-07-03T02:32:15Z", "author": {"login": "pedroigor"}, "path": "quarkus/runtime/src/main/java/org/keycloak/provider/quarkus/QuarkusLifecycleObserver.java", "diffHunk": "@@ -38,10 +37,7 @@\n     private static final String KEYCLOAK_ADMIN_ENV_VAR = \"KEYCLOAK_ADMIN\";\n     private static final String KEYCLOAK_ADMIN_PASSWORD_ENV_VAR = \"KEYCLOAK_ADMIN_PASSWORD\";\n \n-    @Inject\n-    KeycloakApplication application;\n-\n-    void onStartupEvent(@Observes StartupEvent event) {\n+    private void onStartupEvent(@Observes StartupEvent event) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyMTEzMjU2", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442113256", "createdAt": "2020-07-03T02:35:03Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyNDUwODAy", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-442450802", "createdAt": "2020-07-03T14:32:43Z", "commit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDozMjo0M1rOGsyKdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNDozMjo0M1rOGsyKdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYxMjQwNg==", "bodyText": "The fact we are creating instances of AbstractClientConnectionServletFilter on every request is not ideal. As well as duplicating code when pushing context data.\nWe could potentially override methods and have the main logic from the abstract class.", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r449612406", "createdAt": "2020-07-03T14:32:43Z", "author": {"login": "pedroigor"}, "path": "quarkus/runtime/src/main/java/org/keycloak/provider/quarkus/QuarkusClientConnectionFilter.java", "diffHunk": "@@ -0,0 +1,97 @@\n+/*\n+ * Copyright 2019 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.provider.quarkus;\n+\n+import io.quarkus.vertx.web.RouteFilter;\n+import io.vertx.core.Handler;\n+import io.vertx.core.http.HttpServerRequest;\n+import io.vertx.ext.web.RoutingContext;\n+import org.keycloak.common.ClientConnection;\n+import org.keycloak.common.util.Resteasy;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.services.filters.AbstractClientConnectionServletFilter;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.container.ContainerRequestContext;\n+import javax.ws.rs.container.PreMatching;\n+import javax.ws.rs.ext.Provider;\n+\n+@PreMatching\n+@Provider\n+public class QuarkusClientConnectionFilter implements javax.ws.rs.container.ContainerRequestFilter {\n+\n+    @Inject\n+    RoutingContext routingContext;\n+\n+    @Override\n+    public void filter(ContainerRequestContext containerRequestContext) {\n+        HttpServerRequest request = routingContext.request();\n+        ClientConnection connection = createConnection(request);\n+\n+        AbstractClientConnectionServletFilter servletFilter = new AbstractClientConnectionServletFilter() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10"}, "originalPosition": 46}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1c4669538808b351fce6c63ce4fa539205face1", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/e1c4669538808b351fce6c63ce4fa539205face1", "committedDate": "2020-07-03T16:56:43Z", "message": "[KEYCLOAK-14147] - Request filter refactoring\n\nCo-authored-by: Stian Thorgersen <stian@redhat.com>\nCo-authored-by: Martin Kanis <mkanis@redhat.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f5b2fe44387681117990cf50aa3f2317f28bfe10", "author": {"user": {"login": "martin-kanis", "name": "Martin Kanis"}}, "url": "https://github.com/keycloak/keycloak/commit/f5b2fe44387681117990cf50aa3f2317f28bfe10", "committedDate": "2020-07-02T09:50:59Z", "message": "Upgrade to Quarkus 1.6.0.CR1"}, "afterCommit": {"oid": "e1c4669538808b351fce6c63ce4fa539205face1", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/e1c4669538808b351fce6c63ce4fa539205face1", "committedDate": "2020-07-03T16:56:43Z", "message": "[KEYCLOAK-14147] - Request filter refactoring\n\nCo-authored-by: Stian Thorgersen <stian@redhat.com>\nCo-authored-by: Martin Kanis <mkanis@redhat.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTM4OTU2", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-443938956", "createdAt": "2020-07-07T14:20:15Z", "commit": {"oid": "e1c4669538808b351fce6c63ce4fa539205face1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDoyMDoxNVrOGuA2QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNDoyMDoxNVrOGuA2QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDkwMTU2OA==", "bodyText": "Rename to something like AbstractRequestFilter, including renaming subclasses.", "url": "https://github.com/keycloak/keycloak/pull/7136#discussion_r450901568", "createdAt": "2020-07-07T14:20:15Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/services/filters/AbstractClientConnectionFilter.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package org.keycloak.services.filters;\n+\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+import java.util.function.Consumer;\n+import java.util.function.Function;\n+import java.util.function.Supplier;\n+\n+import org.keycloak.common.ClientConnection;\n+import org.keycloak.common.util.Resteasy;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.models.KeycloakSessionFactory;\n+import org.keycloak.models.KeycloakTransactionManager;\n+import org.keycloak.services.resources.KeycloakApplication;\n+\n+\n+public abstract class AbstractClientConnectionFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1c4669538808b351fce6c63ce4fa539205face1"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzOTQ0ODM5", "url": "https://github.com/keycloak/keycloak/pull/7136#pullrequestreview-443944839", "createdAt": "2020-07-07T14:26:05Z", "commit": {"oid": "e1c4669538808b351fce6c63ce4fa539205face1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2924, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}