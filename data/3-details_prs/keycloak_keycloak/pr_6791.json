{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc1NTMwNjY0", "number": 6791, "title": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs", "bodyText": "no longer compare them to the server absolutePath; instead use the base URI to build the validation URL\n\nLinks to Jiras: https://issues.redhat.com/browse/KEYCLOAK-12612\nhttps://issues.redhat.com/browse/KEYCLOAK-12944", "createdAt": "2020-02-14T19:08:17Z", "url": "https://github.com/keycloak/keycloak/pull/6791", "merged": true, "mergeCommit": {"oid": "7a3998870ca71ffdf94b491f7f105dfc7f24649b"}, "closed": true, "closedAt": "2020-02-18T19:38:20Z", "author": {"login": "sguilhen"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcFJZYFAFqTM1OTU2ODM1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcFnNmDgFqTM2MDYxNjk5NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTY4MzU4", "url": "https://github.com/keycloak/keycloak/pull/6791#pullrequestreview-359568358", "createdAt": "2020-02-17T08:51:56Z", "commit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODo1MTo1NlrOFqcXyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwODo1MjozMVrOFqcYzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ==", "bodyText": "This is not going to work as Keycloak may be exposed on a different context-path on the reverse proxy. I.e. frontendUrl could be \"https://mykeycloak.org/\" while Keycloak is listening on \"https://10.9.10.10:8443/auth\".", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380049355", "createdAt": "2020-02-17T08:51:56Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/protocol/saml/SamlService.java", "diffHunk": "@@ -517,6 +517,19 @@ public Response execute(String samlRequest, String samlResponse, String relaySta\n             else\n                 return handleSamlResponse(samlResponse, relayState);\n         }\n+\n+        /**\n+         * KEYCLOAK-12616, KEYCLOAK-12944: construct the expected destination URI in the same way that {@link KeycloakUriInfo#getAbsolutePath()}\n+         * used to do prior to the changes introduced by the addition of the default hostname provider.\n+         *\n+         * @param session a reference to the {@link KeycloakSession}.\n+         * @return the constructed {@link URI}.\n+         */\n+        protected URI getExpectedDestinationUri(final KeycloakSession session) {\n+            KeycloakUriInfo info = session.getContext().getUri();\n+            URI baseUri = info.getBaseUri();\n+            return info.getAbsolutePathBuilder().scheme(baseUri.getScheme()).host(baseUri.getHost()).port(baseUri.getPort()).build();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTYxNA==", "bodyText": "It would be better to just load the actual destination of the endpoints, rather than build it based on the request.", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380049614", "createdAt": "2020-02-17T08:52:31Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/protocol/saml/SamlService.java", "diffHunk": "@@ -517,6 +517,19 @@ public Response execute(String samlRequest, String samlResponse, String relaySta\n             else\n                 return handleSamlResponse(samlResponse, relayState);\n         }\n+\n+        /**\n+         * KEYCLOAK-12616, KEYCLOAK-12944: construct the expected destination URI in the same way that {@link KeycloakUriInfo#getAbsolutePath()}\n+         * used to do prior to the changes introduced by the addition of the default hostname provider.\n+         *\n+         * @param session a reference to the {@link KeycloakSession}.\n+         * @return the constructed {@link URI}.\n+         */\n+        protected URI getExpectedDestinationUri(final KeycloakSession session) {\n+            KeycloakUriInfo info = session.getContext().getUri();\n+            URI baseUri = info.getBaseUri();\n+            return info.getAbsolutePathBuilder().scheme(baseUri.getScheme()).host(baseUri.getHost()).port(baseUri.getPort()).build();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA0OTM1NQ=="}, "originalCommit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1"}, "originalPosition": 58}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU5NTc4Mzcz", "url": "https://github.com/keycloak/keycloak/pull/6791#pullrequestreview-359578373", "createdAt": "2020-02-17T09:08:34Z", "commit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowODozNFrOFqc3hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xN1QwOTowODozNFrOFqc3hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MDA1NzQ3OQ==", "bodyText": "See above. In the test the destination URL should not match the Keycloak server's context path as it may be different on the reverse proxy.", "url": "https://github.com/keycloak/keycloak/pull/6791#discussion_r380057479", "createdAt": "2020-02-17T09:08:34Z", "author": {"login": "stianst"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/saml/SamlReverseProxyTest.java", "diffHunk": "@@ -0,0 +1,136 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.testsuite.saml;\n+\n+import java.net.URI;\n+import java.util.HashMap;\n+\n+import javax.ws.rs.core.Response;\n+import javax.ws.rs.core.UriBuilder;\n+\n+import org.apache.http.client.methods.CloseableHttpResponse;\n+import org.apache.http.client.methods.HttpUriRequest;\n+import org.apache.http.impl.client.CloseableHttpClient;\n+import org.apache.http.impl.client.HttpClientBuilder;\n+import org.apache.http.util.EntityUtils;\n+import org.junit.After;\n+import org.junit.Before;\n+import org.junit.ClassRule;\n+import org.junit.Test;\n+import org.keycloak.protocol.saml.SamlProtocol;\n+import org.keycloak.representations.idm.RealmRepresentation;\n+import org.keycloak.saml.SAML2LogoutRequestBuilder;\n+import org.keycloak.saml.processing.api.saml.v2.request.SAML2Request;\n+import org.keycloak.services.resources.RealmsResource;\n+import org.keycloak.testsuite.util.ReverseProxy;\n+import org.keycloak.testsuite.util.SamlClient;\n+import org.w3c.dom.Document;\n+\n+import static org.hamcrest.Matchers.containsString;\n+import static org.junit.Assert.assertThat;\n+import static org.keycloak.testsuite.util.Matchers.statusCodeIsHC;\n+\n+/**\n+ * SAML tests using a {@code frontendUrl} that points to a reverse proxy. The SAML request destination should be validated\n+ * against the proxy address and any redirection should also have the proxy as target.\n+ *\n+ * @author <a href=\"mailto:sguilhen@redhat.com\">Stefan Guilhen</a>\n+ */\n+public class SamlReverseProxyTest extends AbstractSamlTest {\n+\n+    @ClassRule\n+    public static ReverseProxy proxy = new ReverseProxy();\n+\n+    // destination should match the path of the keycloak server, which includes the /auth/ element.\n+    private static final String DESTINATION_URL  = proxy.getUrl() + \"/auth/\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1"}, "originalPosition": 59}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0c8b6be4be661cb41d940675e8822ae34cf914f1", "author": {"user": {"login": "sguilhen", "name": "Stefan Guilhen"}}, "url": "https://github.com/keycloak/keycloak/commit/0c8b6be4be661cb41d940675e8822ae34cf914f1", "committedDate": "2020-02-14T19:06:17Z", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL"}, "afterCommit": {"oid": "2b8fce19d01c5a7be00e01f54ae7f27f85052543", "author": {"user": {"login": "sguilhen", "name": "Stefan Guilhen"}}, "url": "https://github.com/keycloak/keycloak/commit/2b8fce19d01c5a7be00e01f54ae7f27f85052543", "committedDate": "2020-02-17T18:25:10Z", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "author": {"user": {"login": "sguilhen", "name": "Stefan Guilhen"}}, "url": "https://github.com/keycloak/keycloak/commit/6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "committedDate": "2020-02-17T19:04:26Z", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2b8fce19d01c5a7be00e01f54ae7f27f85052543", "author": {"user": {"login": "sguilhen", "name": "Stefan Guilhen"}}, "url": "https://github.com/keycloak/keycloak/commit/2b8fce19d01c5a7be00e01f54ae7f27f85052543", "committedDate": "2020-02-17T18:25:10Z", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL"}, "afterCommit": {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "author": {"user": {"login": "sguilhen", "name": "Stefan Guilhen"}}, "url": "https://github.com/keycloak/keycloak/commit/6aa9ea6f4335f29d4e699851b33c58dade1c69eb", "committedDate": "2020-02-17T19:04:26Z", "message": "[KEYCLOAK-12612][KEYCLOAK-12944] Fix validation of SAML destination URLs\n - no longer compare them to the server absolutePath; instead use the base URI to build the validation URL"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwMTkzNjIy", "url": "https://github.com/keycloak/keycloak/pull/6791#pullrequestreview-360193622", "createdAt": "2020-02-18T09:43:16Z", "commit": {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNjE2OTk0", "url": "https://github.com/keycloak/keycloak/pull/6791#pullrequestreview-360616994", "createdAt": "2020-02-18T19:36:51Z", "commit": {"oid": "6aa9ea6f4335f29d4e699851b33c58dade1c69eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2677, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}