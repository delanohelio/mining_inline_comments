{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE4MTMyNDU3", "number": 7592, "title": "KEYCLOAK-14198 Client Policy - Condition : Client - Client IP", "bodyText": "This PR is for KEYCLOAK-14198 Client Policy - Condition : Client - Client IP in KEYCLOAK-13933 Client Policies, also is the part of the project Client Policy Official Support of FAPI-SIG activity.\nGenerally speaking, the aim of this PR is to support policy conditions defined in Client Policy design document", "createdAt": "2020-11-10T00:46:50Z", "url": "https://github.com/keycloak/keycloak/pull/7592", "merged": true, "mergeCommit": {"oid": "a0b171073558b034a6c108d43586f3fbc055a5e0"}, "closed": true, "closedAt": "2020-11-10T14:37:27Z", "author": {"login": "tnorimat"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdbEw2VAFqTUyNjkzNTk0MA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdbKW9RgFqTUyNzI2NjA3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI2OTM1OTQw", "url": "https://github.com/keycloak/keycloak/pull/7592#pullrequestreview-526935940", "createdAt": "2020-11-10T07:55:06Z", "commit": {"oid": "deba243f3bbc89944ff95d356f667c55fc67d898"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo1NTowNlrOHwQBKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQwNzo1NTowNlrOHwQBKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDM1NjEzOA==", "bodyText": "Minor typo in the name of the method (should be \"matched\")", "url": "https://github.com/keycloak/keycloak/pull/7592#discussion_r520356138", "createdAt": "2020-11-10T07:55:06Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/services/clientpolicy/condition/ClientIpAddressCondition.java", "diffHunk": "@@ -0,0 +1,82 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.keycloak.services.clientpolicy.condition;\n+\n+import org.jboss.logging.Logger;\n+\n+import org.keycloak.component.ComponentModel;\n+import org.keycloak.models.KeycloakSession;\n+import org.keycloak.services.clientpolicy.ClientPolicyContext;\n+import org.keycloak.services.clientpolicy.ClientPolicyException;\n+import org.keycloak.services.clientpolicy.ClientPolicyLogger;\n+import org.keycloak.services.clientpolicy.ClientPolicyVote;\n+\n+public class ClientIpAddressCondition implements ClientPolicyConditionProvider {\n+\n+    private static final Logger logger = Logger.getLogger(ClientIpAddressCondition.class);\n+\n+    private final KeycloakSession session;\n+    private final ComponentModel componentModel;\n+\n+    public ClientIpAddressCondition(KeycloakSession session, ComponentModel componentModel) {\n+        this.session = session;\n+        this.componentModel = componentModel;\n+    }\n+\n+    @Override\n+    public String getName() {\n+        return componentModel.getName();\n+    }\n+\n+    @Override\n+    public String getProviderId() {\n+        return componentModel.getProviderId();\n+    }\n+\n+    @Override\n+    public ClientPolicyVote applyPolicy(ClientPolicyContext context) throws ClientPolicyException {\n+        switch (context.getEvent()) {\n+            case TOKEN_REQUEST:\n+            case TOKEN_REFRESH:\n+            case TOKEN_REVOKE:\n+            case TOKEN_INTROSPECT:\n+            case USERINFO_REQUEST:\n+            case LOGOUT_REQUEST:\n+                if (isIpAddressMathced()) return ClientPolicyVote.YES;\n+                return ClientPolicyVote.NO;\n+            default:\n+                return ClientPolicyVote.ABSTAIN;\n+        }\n+    }\n+\n+    private boolean isIpAddressMathced() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "deba243f3bbc89944ff95d356f667c55fc67d898"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c7f600aebcf733f7c155801dd29c82497e3d5ea", "author": {"user": {"login": "tnorimat", "name": "Takashi Norimatsu"}}, "url": "https://github.com/keycloak/keycloak/commit/7c7f600aebcf733f7c155801dd29c82497e3d5ea", "committedDate": "2020-11-10T08:51:20Z", "message": "KEYCLOAK-14198 Client Policy - Condition : Client - Client IP"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "deba243f3bbc89944ff95d356f667c55fc67d898", "author": {"user": {"login": "tnorimat", "name": "Takashi Norimatsu"}}, "url": "https://github.com/keycloak/keycloak/commit/deba243f3bbc89944ff95d356f667c55fc67d898", "committedDate": "2020-11-10T00:41:29Z", "message": "KEYCLOAK-14198 Client Policy - Condition : Client - Client IP"}, "afterCommit": {"oid": "7c7f600aebcf733f7c155801dd29c82497e3d5ea", "author": {"user": {"login": "tnorimat", "name": "Takashi Norimatsu"}}, "url": "https://github.com/keycloak/keycloak/commit/7c7f600aebcf733f7c155801dd29c82497e3d5ea", "committedDate": "2020-11-10T08:51:20Z", "message": "KEYCLOAK-14198 Client Policy - Condition : Client - Client IP"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3MjY2MDc0", "url": "https://github.com/keycloak/keycloak/pull/7592#pullrequestreview-527266074", "createdAt": "2020-11-10T14:37:19Z", "commit": {"oid": "7c7f600aebcf733f7c155801dd29c82497e3d5ea"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3231, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}