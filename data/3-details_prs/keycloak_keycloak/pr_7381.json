{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1MzE5MzI5", "number": 7381, "title": "KEYCLOAK-13923 Support PKCE for OIDC based Identity Providers", "bodyText": "We now support usage of PKCE for OIDC based Identity Providers.\nNote this needs some tests - it works fine on a local setup with two Keycloak realms and one setup as IdP for the other.\nNot sure whether the approach with ClientSessionCode.getClientSession  in org.keycloak.broker.oidc.OIDCIdentityProvider.OIDCEndpoint#generateTokenRequest is the right way to resolve the references AuthenticationSession / client session notes.", "createdAt": "2020-08-28T10:18:41Z", "url": "https://github.com/keycloak/keycloak/pull/7381", "merged": true, "mergeCommit": {"oid": "1a7600e356bb0fd903c854d5ec19fdd168ffa31a"}, "closed": true, "closedAt": "2021-01-05T14:00:00Z", "author": {"login": "thomasdarimont"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdDSVMfgBqjM3MDMzMTkzNDI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdtLYZjAFqTU2MTgwODMyMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8ed9f3148c4b6165fd069fce340aa1cb015f8b09", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/8ed9f3148c4b6165fd069fce340aa1cb015f8b09", "committedDate": "2020-08-28T10:15:32Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}, "afterCommit": {"oid": "5c02451136c5d660d14809ac0316bf21b8a7f107", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/5c02451136c5d660d14809ac0316bf21b8a7f107", "committedDate": "2020-08-28T10:20:15Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c02451136c5d660d14809ac0316bf21b8a7f107", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/5c02451136c5d660d14809ac0316bf21b8a7f107", "committedDate": "2020-08-28T10:20:15Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}, "afterCommit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/b886d04c29aac5896eb687cb8c0fefa8440e02e9", "committedDate": "2020-08-28T10:21:31Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODgzODEw", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-514883810", "createdAt": "2020-10-22T15:57:42Z", "commit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1Nzo0MlrOHmo1cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNTo1Nzo0MlrOHmo1cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI3Njk3OQ==", "bodyText": "What should happen if the state param is missing?", "url": "https://github.com/keycloak/keycloak/pull/7381#discussion_r510276979", "createdAt": "2020-10-22T15:57:42Z", "author": {"login": "thomasdarimont"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -317,6 +321,27 @@ public OIDCEndpoint(AuthenticationCallback callback, RealmModel realm, EventBuil\n             super(callback, realm, event);\n         }\n \n+        @Override\n+        public SimpleHttp generateTokenRequest(String authorizationCode) {\n+            SimpleHttp simpleHttp = super.generateTokenRequest(authorizationCode);\n+\n+            if (getConfig().isPkceEnabled()) {\n+\n+                // reconstruct the original code verifier that was used to generate the code challenge.\n+                String stateParam = httpRequest.getUri().getQueryParameters().getFirst(OAuth2Constants.STATE);\n+                // TODO handle state param missing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODg5ODk1", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-514889895", "createdAt": "2020-10-22T16:04:06Z", "commit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjowNDowNlrOHmpHhg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNjowNDowNlrOHmpHhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI4MTYwNg==", "bodyText": "What to do if the authSession is missing?", "url": "https://github.com/keycloak/keycloak/pull/7381#discussion_r510281606", "createdAt": "2020-10-22T16:04:06Z", "author": {"login": "thomasdarimont"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -317,6 +321,27 @@ public OIDCEndpoint(AuthenticationCallback callback, RealmModel realm, EventBuil\n             super(callback, realm, event);\n         }\n \n+        @Override\n+        public SimpleHttp generateTokenRequest(String authorizationCode) {\n+            SimpleHttp simpleHttp = super.generateTokenRequest(authorizationCode);\n+\n+            if (getConfig().isPkceEnabled()) {\n+\n+                // reconstruct the original code verifier that was used to generate the code challenge.\n+                String stateParam = httpRequest.getUri().getQueryParameters().getFirst(OAuth2Constants.STATE);\n+                // TODO handle state param missing\n+\n+                IdentityBrokerState idpBrokerState = IdentityBrokerState.encoded(stateParam);\n+                ClientModel client = realm.getClientByClientId(idpBrokerState.getClientId());\n+                AuthenticationSessionModel authSession = ClientSessionCode.getClientSession(idpBrokerState.getEncoded(), idpBrokerState.getTabId(), session, realm, client, event, AuthenticationSessionModel.class);\n+                // TODO handle authSession missing", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9"}, "originalPosition": 57}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b886d04c29aac5896eb687cb8c0fefa8440e02e9", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/b886d04c29aac5896eb687cb8c0fefa8440e02e9", "committedDate": "2020-08-28T10:21:31Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}, "afterCommit": {"oid": "fc6ecc60c946c17fef56392f1f03e655588b1882", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/fc6ecc60c946c17fef56392f1f03e655588b1882", "committedDate": "2020-10-22T16:20:52Z", "message": "KEYCLOAK-13923 Warn if PKCE information cannot be found code-to-token request in OIDCIdentityProvider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzE0NDYz", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-533714463", "createdAt": "2020-11-18T17:40:44Z", "commit": {"oid": "fc6ecc60c946c17fef56392f1f03e655588b1882"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzNzE4ODU2", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-533718856", "createdAt": "2020-11-18T17:45:52Z", "commit": {"oid": "fc6ecc60c946c17fef56392f1f03e655588b1882"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo0NTo1MlrOH16lsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxNzo0NTo1MlrOH16lsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjI5NjQ5Nw==", "bodyText": "I think makes more sense the PKCE code here org.keycloak.broker.oidc.AbstractOAuth2IdentityProvider#authenticateTokenRequest. As this may also be useful for OAuth2-based brokers.", "url": "https://github.com/keycloak/keycloak/pull/7381#discussion_r526296497", "createdAt": "2020-11-18T17:45:52Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/OIDCIdentityProvider.java", "diffHunk": "@@ -317,6 +321,39 @@ public OIDCEndpoint(AuthenticationCallback callback, RealmModel realm, EventBuil\n             super(callback, realm, event);\n         }\n \n+        @Override\n+        public SimpleHttp generateTokenRequest(String authorizationCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fc6ecc60c946c17fef56392f1f03e655588b1882"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3464a1fc90536cc326eab8a9d463c267b13e0b1a", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/3464a1fc90536cc326eab8a9d463c267b13e0b1a", "committedDate": "2020-12-20T22:16:30Z", "message": "KEYCLOAK-13923 - Support PKCE for Identity Provider\n\nWe now support usage of PKCE for OIDC based Identity Providers."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3818cd76d53be967ab12843fb07e1ba93ef45fa2", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/3818cd76d53be967ab12843fb07e1ba93ef45fa2", "committedDate": "2020-12-20T22:16:30Z", "message": "KEYCLOAK-13923 Warn if PKCE information cannot be found code-to-token request in OIDCIdentityProvider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fc6ecc60c946c17fef56392f1f03e655588b1882", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/fc6ecc60c946c17fef56392f1f03e655588b1882", "committedDate": "2020-10-22T16:20:52Z", "message": "KEYCLOAK-13923 Warn if PKCE information cannot be found code-to-token request in OIDCIdentityProvider"}, "afterCommit": {"oid": "e3f079c934d269b7e8c6c0ae5d7cf5424c81b202", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/e3f079c934d269b7e8c6c0ae5d7cf5424c81b202", "committedDate": "2020-12-20T22:47:30Z", "message": "KEYCLOAK-13923 Pull up PKCE handling from OIDC to OAuth IdentityProvider infrastructure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2652cfb76e62e85037722415e9838cec31a9aa4a", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/2652cfb76e62e85037722415e9838cec31a9aa4a", "committedDate": "2020-12-20T22:50:44Z", "message": "KEYCLOAK-13923 Pull up PKCE handling from OIDC to OAuth IdentityProvider infrastructure"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e3f079c934d269b7e8c6c0ae5d7cf5424c81b202", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/e3f079c934d269b7e8c6c0ae5d7cf5424c81b202", "committedDate": "2020-12-20T22:47:30Z", "message": "KEYCLOAK-13923 Pull up PKCE handling from OIDC to OAuth IdentityProvider infrastructure"}, "afterCommit": {"oid": "2652cfb76e62e85037722415e9838cec31a9aa4a", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/2652cfb76e62e85037722415e9838cec31a9aa4a", "committedDate": "2020-12-20T22:50:44Z", "message": "KEYCLOAK-13923 Pull up PKCE handling from OIDC to OAuth IdentityProvider infrastructure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "66fb57486ab01c88eea08fed2149eb70f42e0ac9", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/66fb57486ab01c88eea08fed2149eb70f42e0ac9", "committedDate": "2021-01-04T15:15:55Z", "message": "KEYCLOAK-13923 Adding test for PKCE support for OAuth Identity providers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "63d4c7d63894b3936962bc93047624501ced2a9c", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/63d4c7d63894b3936962bc93047624501ced2a9c", "committedDate": "2021-01-04T15:13:51Z", "message": "adding test"}, "afterCommit": {"oid": "66fb57486ab01c88eea08fed2149eb70f42e0ac9", "author": {"user": {"login": "pedroigor", "name": "Pedro Igor"}}, "url": "https://github.com/keycloak/keycloak/commit/66fb57486ab01c88eea08fed2149eb70f42e0ac9", "committedDate": "2021-01-04T15:15:55Z", "message": "KEYCLOAK-13923 Adding test for PKCE support for OAuth Identity providers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxNzI3OTUx", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-561727951", "createdAt": "2021-01-05T11:51:48Z", "commit": {"oid": "66fb57486ab01c88eea08fed2149eb70f42e0ac9"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MTo0OFrOIOUaKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNVQxMTo1MTo0OFrOIOUaKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTg4NTM1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            String stateParam = httpRequest.getUri().getQueryParameters().getFirst(OAuth2Constants.STATE);\n          \n          \n            \n                            String stateParam = session.getContext().getUri().getQueryParameters().getFirst(OAuth2Constants.STATE);", "url": "https://github.com/keycloak/keycloak/pull/7381#discussion_r551885353", "createdAt": "2021-01-05T11:51:48Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/broker/oidc/AbstractOAuth2IdentityProvider.java", "diffHunk": "@@ -507,6 +530,45 @@ public SimpleHttp generateTokenRequest(String authorizationCode) {\n                     .param(OAUTH2_PARAMETER_REDIRECT_URI, Urls.identityProviderAuthnResponse(context.getUri().getBaseUri(),\n                             getConfig().getAlias(), context.getRealm().getName()).toString())\n                     .param(OAUTH2_PARAMETER_GRANT_TYPE, OAUTH2_GRANT_TYPE_AUTHORIZATION_CODE);\n+\n+            if (getConfig().isPkceEnabled()) {\n+\n+                // reconstruct the original code verifier that was used to generate the code challenge from the HttpRequest.\n+                String stateParam = httpRequest.getUri().getQueryParameters().getFirst(OAuth2Constants.STATE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "66fb57486ab01c88eea08fed2149eb70f42e0ac9"}, "originalPosition": 85}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cdea583e742d3cfeb3a6009dd65c21a766629c68", "author": {"user": {"login": "thomasdarimont", "name": "Thomas Darimont"}}, "url": "https://github.com/keycloak/keycloak/commit/cdea583e742d3cfeb3a6009dd65c21a766629c68", "committedDate": "2021-01-05T12:11:43Z", "message": "KEYCLOAK-13923 Use URI from KeycloakContext instead of HttpRequest\n\nCo-authored-by: Pedro Igor <pigor.craveiro@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYxODA4MzIx", "url": "https://github.com/keycloak/keycloak/pull/7381#pullrequestreview-561808321", "createdAt": "2021-01-05T13:59:26Z", "commit": {"oid": "cdea583e742d3cfeb3a6009dd65c21a766629c68"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2782, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}