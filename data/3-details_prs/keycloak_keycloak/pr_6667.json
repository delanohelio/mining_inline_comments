{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzNjgwMDk0", "number": 6667, "title": "[KEYCLOAK-11621] Allow user creation via group MANAGE_MEMBERS and MANAGE_MEMBERSHIP permissions (Admin API)", "bodyText": "Jira Issues:\n\nKEYCLOAK-11621\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\nSolution:\n\nChange access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n\nadmin user from master realm:\n- POST /{realm}/users without groups                  => HTTP 201 user created\n- POST /{realm}/users with groups                     => HTTP 201 user created\nuser with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n- POST /{realm}/users without groups                  => HTTP 403 user NOT created\n- POST /{realm}/users with group1                     => HTTP 201 user created\n- POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n- POST /{realm}/users with group1 & wrong group path    => HTTP 400 user NOT created\nuser with MANAGE_MEMBERS permission on group1\n- POST /{realm}/users without groups                  => HTTP 403 user NOT created\n- POST /{realm}/users with group1                     => HTTP 403 user NOT created\n- POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n- POST /{realm}/users with group1 & wrong group path    => HTTP 400 user NOT created", "createdAt": "2020-01-16T14:40:06Z", "url": "https://github.com/keycloak/keycloak/pull/6667", "merged": true, "mergeCommit": {"oid": "b19fe5c01b2a6af57ae651cb5b3b60c7f4c05d75"}, "closed": true, "closedAt": "2020-09-10T15:26:56Z", "author": {"login": "clementcur"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-s1K8AFqTM0OTE4NzEzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHieWvAFqTQ4NjA1MjYzMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MTg3MTMw", "url": "https://github.com/keycloak/keycloak/pull/6667#pullrequestreview-349187130", "createdAt": "2020-01-28T08:12:07Z", "commit": {"oid": "2e2e89ffb415e485f6ec85eaf6a94199a5a23847"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODoxMjowOFrOFicDVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwODoxMjowOFrOFicDVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTY1NTUxMA==", "bodyText": "This is strange, what's the difference between requireManageMembers and requireManageMembership?", "url": "https://github.com/keycloak/keycloak/pull/6667#discussion_r371655510", "createdAt": "2020-01-28T08:12:08Z", "author": {"login": "stianst"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/UsersResource.java", "diffHunk": "@@ -105,7 +100,21 @@ public UsersResource(RealmModel realm, AdminPermissionEvaluator auth, AdminEvent\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     public Response createUser(final UserRepresentation rep) {\n-        auth.users().requireManage();\n+        // if groups is part of the user rep, check if admin has manage_members and manage_membership on each group\n+        if (rep.getGroups() != null) {\n+            for (String groupId : rep.getGroups()) {\n+                GroupModel group = realm.getGroupById(groupId);\n+                if (group != null) {\n+                    auth.groups().requireManageMembers(group);\n+                    auth.groups().requireManageMembership(group);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e2e89ffb415e485f6ec85eaf6a94199a5a23847"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NDQwNTQ4", "url": "https://github.com/keycloak/keycloak/pull/6667#pullrequestreview-349440548", "createdAt": "2020-01-28T14:58:05Z", "commit": {"oid": "2e2e89ffb415e485f6ec85eaf6a94199a5a23847"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDo1ODowNlrOFioIDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxNDo1ODowNlrOFioIDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTg1MzMyNw==", "bodyText": "I think better is a 400 response.", "url": "https://github.com/keycloak/keycloak/pull/6667#discussion_r371853327", "createdAt": "2020-01-28T14:58:06Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/UsersResource.java", "diffHunk": "@@ -105,7 +100,21 @@ public UsersResource(RealmModel realm, AdminPermissionEvaluator auth, AdminEvent\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     public Response createUser(final UserRepresentation rep) {\n-        auth.users().requireManage();\n+        // if groups is part of the user rep, check if admin has manage_members and manage_membership on each group\n+        if (rep.getGroups() != null) {\n+            for (String groupId : rep.getGroups()) {\n+                GroupModel group = realm.getGroupById(groupId);\n+                if (group != null) {\n+                    auth.groups().requireManageMembers(group);\n+                    auth.groups().requireManageMembership(group);\n+                } else {\n+                    // unrecognized group from id\n+                    throw new ForbiddenException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e2e89ffb415e485f6ec85eaf6a94199a5a23847"}, "originalPosition": 28}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ef9c0e74be1065a3bd80c537366207d03333454", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/1ef9c0e74be1065a3bd80c537366207d03333454", "committedDate": "2020-01-30T14:10:19Z", "message": "Cleaned imports\n\nmade sure explicit imports are used\nremoved unsed import"}, "afterCommit": {"oid": "cc9ed3e921d776c86247b909677f5a99d801f3ee", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/cc9ed3e921d776c86247b909677f5a99d801f3ee", "committedDate": "2020-05-01T11:46:21Z", "message": "Cleaned imports\n\nmade sure explicit imports are used\nremoved unsed import"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc9ed3e921d776c86247b909677f5a99d801f3ee", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/cc9ed3e921d776c86247b909677f5a99d801f3ee", "committedDate": "2020-05-01T11:46:21Z", "message": "Cleaned imports\n\nmade sure explicit imports are used\nremoved unsed import"}, "afterCommit": {"oid": "f2023f2241b97ea926614cf3996619eeb967b792", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/f2023f2241b97ea926614cf3996619eeb967b792", "committedDate": "2020-05-01T13:36:55Z", "message": "[KEYCLOAK-11621] Added ability to create users within a permitted group via Admin API\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\n\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\n\nSolution:\n- Change access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n  1. admin user from master realm:\n    - POST /{realm}/users without groups                  => HTTP 201 user created\n    - POST /{realm}/users with groups                     => HTTP 201 user created\n  2. user with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 201 user created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group ID    => HTTP 400 user NOT created\n  3. user with MANAGE_MEMBERS permission on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group ID    => HTTP 400 user NOT created"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f2023f2241b97ea926614cf3996619eeb967b792", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/f2023f2241b97ea926614cf3996619eeb967b792", "committedDate": "2020-05-01T13:36:55Z", "message": "[KEYCLOAK-11621] Added ability to create users within a permitted group via Admin API\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\n\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\n\nSolution:\n- Change access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n  1. admin user from master realm:\n    - POST /{realm}/users without groups                  => HTTP 201 user created\n    - POST /{realm}/users with groups                     => HTTP 201 user created\n  2. user with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 201 user created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group ID    => HTTP 400 user NOT created\n  3. user with MANAGE_MEMBERS permission on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group ID    => HTTP 400 user NOT created"}, "afterCommit": {"oid": "714eae52d13f30cae850760756cd2f52b12cae1c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/714eae52d13f30cae850760756cd2f52b12cae1c", "committedDate": "2020-05-01T18:38:38Z", "message": "[KEYCLOAK-11621] Allow user creation via group permissions (Admin API)\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\n\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\n\nSolution:\n- Change access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n  1. admin user from master realm:\n    - POST /{realm}/users without groups                  => HTTP 201 user created\n    - POST /{realm}/users with groups                     => HTTP 201 user created\n  2. user with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 201 user created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created\n  3. user with MANAGE_MEMBERS permission on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMxODc3ODgx", "url": "https://github.com/keycloak/keycloak/pull/6667#pullrequestreview-431877881", "createdAt": "2020-06-16T20:45:35Z", "commit": {"oid": "714eae52d13f30cae850760756cd2f52b12cae1c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo0NTozNVrOGkshdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNlQyMDo0NTozNVrOGkshdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MTEzMTM4Mg==", "bodyText": "I did not catch this before, but I think we should first try to check requireManage and only in case we get an exception (lacking permission) we fallback to your changes that rely on the fine-grained permission.\nThe reason behind this comment is that we avoid people not using fine-grained permissions to not be impacted by the additional checks you are adding.", "url": "https://github.com/keycloak/keycloak/pull/6667#discussion_r441131382", "createdAt": "2020-06-16T20:45:35Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/services/resources/admin/UsersResource.java", "diffHunk": "@@ -107,7 +109,20 @@ public UsersResource(RealmModel realm, AdminPermissionEvaluator auth, AdminEvent\n     @POST\n     @Consumes(MediaType.APPLICATION_JSON)\n     public Response createUser(final UserRepresentation rep) {\n-        auth.users().requireManage();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "714eae52d13f30cae850760756cd2f52b12cae1c"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a767a8d2a261ae04350564f9a3a8fd8bc5da6d00", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/a767a8d2a261ae04350564f9a3a8fd8bc5da6d00", "committedDate": "2020-08-28T07:27:13Z", "message": "[KEYCLOAK-11621] Allow user creation via group permissions (Admin API)\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\n\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\n\nSolution:\n- Change access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n  1. admin user from master realm:\n    - POST /{realm}/users without groups                  => HTTP 201 user created\n    - POST /{realm}/users with groups                     => HTTP 201 user created\n  2. user with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 201 user created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created\n  3. user with MANAGE_MEMBERS permission on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "032243847f4be05d34d2fe9a6e0d179817d03ee5", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/032243847f4be05d34d2fe9a6e0d179817d03ee5", "committedDate": "2020-08-28T15:31:18Z", "message": "Finegrain admin as fallback and added some tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "714eae52d13f30cae850760756cd2f52b12cae1c", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/714eae52d13f30cae850760756cd2f52b12cae1c", "committedDate": "2020-05-01T18:38:38Z", "message": "[KEYCLOAK-11621] Allow user creation via group permissions (Admin API)\n\nProblem:\nUsing fine-grained admin permissions on groups, it is not permitted to create new users\nwithin a group.\n\nCause:\nThe POST /{realm}/users API does not check permission for each group part of the new\nuser representation\n\nSolution:\n- Change access logic for POST /{realm}/users to require MANAGE_MEMBERS and\nMANAGE_MEMBERSHIP permissions on each of the incoming groups\n\nTests:\nManual API testing performed:\n  1. admin user from master realm:\n    - POST /{realm}/users without groups                  => HTTP 201 user created\n    - POST /{realm}/users with groups                     => HTTP 201 user created\n  2. user with MANAGE_MEMBERS & MANAGE_MEMBERSHIP permissions on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 201 user created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created\n  3. user with MANAGE_MEMBERS permission on group1\n    - POST /{realm}/users without groups                  => HTTP 403 user NOT created\n    - POST /{realm}/users with group1                     => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & group2            => HTTP 403 user NOT created\n    - POST /{realm}/users with group1 & wrong group path  => HTTP 400 user NOT created"}, "afterCommit": {"oid": "032243847f4be05d34d2fe9a6e0d179817d03ee5", "author": {"user": null}, "url": "https://github.com/keycloak/keycloak/commit/032243847f4be05d34d2fe9a6e0d179817d03ee5", "committedDate": "2020-08-28T15:31:18Z", "message": "Finegrain admin as fallback and added some tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MDUyNjMw", "url": "https://github.com/keycloak/keycloak/pull/6667#pullrequestreview-486052630", "createdAt": "2020-09-10T15:24:38Z", "commit": {"oid": "032243847f4be05d34d2fe9a6e0d179817d03ee5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2715, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}