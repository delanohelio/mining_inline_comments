{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4Njc3ODI1", "number": 7007, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowMjowOVrOEMySUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToyODo0NVrOEOZnsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQyMjU5OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowMjowOVrOGvGGTA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowMjowOVrOGvGGTA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNjE3Mg==", "bodyText": "There should be no exception thrown. The destination is attribute only mandatory in certain cases, see the SAML spec above.\nThe code should be similar to:\nif (authnRequest.getDestination() != null) {\n    destinationUrl = authnRequest.getDestination().toString();\n}\nSimilar code needs to be in keycloakInitiatedBrowserLogout and backchannelLogout methods.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452036172", "createdAt": "2020-07-09T08:02:09Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -121,6 +125,10 @@ public Response performLogin(AuthenticationRequest request) {\n                 authnRequest = it.next().beforeSendingLoginRequest(authnRequest, request.getAuthenticationSession());\n             }\n \n+            destinationUrl = ofNullable(authnRequest.getDestination())\n+                    .map(URI::toString)\n+                    .orElseThrow(() -> new IdentityBrokerException(\"No destination in login request\"));\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQyODMyOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDowM1rOGvGKBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDowM1rOGvGKBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzEyNg==", "bodyText": "Remove, destination is optional per spec.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037126", "createdAt": "2020-07-09T08:04:03Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -212,6 +220,9 @@ protected LogoutRequestType buildLogoutRequest(UserSessionModel userSession, Uri\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, userSession, null);\n         }\n+        if (logoutRequest.getDestination() == null) {\n+            throw new IdentityBrokerException(\"No destination in logout request\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQyOTAxOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoxM1rOGvGKdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoxM1rOGvGKdA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzIzNg==", "bodyText": "Remove, destination is optional per spec.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037236", "createdAt": "2020-07-09T08:04:13Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -538,6 +538,10 @@ public ResponseType transformLoginResponse(List<ProtocolMapperProcessor<SAMLLogi\n             response = (ResponseType) it.next().beforeSendingResponse(response, clientSessionCtx.getClientSession());\n         }\n \n+        if (response.getDestination() == null) {\n+            throw new RuntimeException(\"No destination in login response\");\n+        }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQyOTIzOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoxOFrOGvGKkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoxOFrOGvGKkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzI2Ng==", "bodyText": "Remove, destination is optional per spec.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037266", "createdAt": "2020-07-09T08:04:18Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -745,6 +749,9 @@ protected LogoutRequestType createLogoutRequest(String logoutUrl, AuthenticatedC\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n+        if (logoutRequest.getDestination() == null) {\n+            throw new RuntimeException(\"No destination in logout request\");\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQyOTQzOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoyM1rOGvGKsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDoyM1rOGvGKsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzI5OQ==", "bodyText": "Remove, destination is optional per spec.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037299", "createdAt": "2020-07-09T08:04:23Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/services/resources/IdentityBrokerService.java", "diffHunk": "@@ -523,6 +523,9 @@ public Response authenticated(BrokeredIdentityContext context) {\n             for(Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n                 loginResponse = it.next().beforeProcessingLoginResponse(loginResponse, authenticationSession);\n             }\n+            if (loginResponse.getDestination() == null) {\n+                throw new RuntimeException(\"No destination in login response\");\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxODQzMDkzOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDo0N1rOGvGLow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wOVQwODowNDo0N1rOGvGLow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MjAzNzUzOQ==", "bodyText": "Remove, destination is optional per spec.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r452037539", "createdAt": "2020-07-09T08:04:47Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLEndpoint.java", "diffHunk": "@@ -334,6 +334,12 @@ protected Response logoutRequest(LogoutRequestType request, String relayState) {\n                 }\n             }\n \n+            if (request.getDestination() == null) {\n+                event.detail(Details.REASON, \"no_destination_in_logout_request\");\n+                event.error(Errors.INVALID_SAML_AUTHN_REQUEST);\n+                return ErrorPage.error(session, null, Response.Status.BAD_REQUEST, Messages.INVALID_REQUEST);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6664c6b7fe16af9ac4be569c00bbb5e8267638bc"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjA2MTA4OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MTowMVrOGwN3uA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQwOTo0MDo1MVrOGx2a1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA==", "bodyText": "Please do remove the else part. In case destination is not set, the original value of singleLogoutServiceUrl should be used for submission.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212088", "createdAt": "2020-07-11T16:41:01Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -162,6 +167,12 @@ public void backchannelLogout(KeycloakSession session, UserSessionModel userSess\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+            if (logoutRequest.getDestination() != null) {\n+                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+            } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMjEzNw==", "bodyText": "I managed this case exactly as it is done a few lines above. This method does not support blank values for singleLogoutServiceUrl, should we allow blank values after building the logout request anyway?\n\n  \n    \n      keycloak/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n    \n    \n         Line 163\n      in\n      f8a4f66\n    \n    \n    \n    \n\n        \n          \n           if (singleLogoutServiceUrl == null || singleLogoutServiceUrl.trim().equals(\"\") || !getConfig().isBackchannelSupported()) return;", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453512137", "createdAt": "2020-07-13T09:19:48Z", "author": {"login": "looorent"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -162,6 +167,12 @@ public void backchannelLogout(KeycloakSession session, UserSessionModel userSess\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+            if (logoutRequest.getDestination() != null) {\n+                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MjM5NA==", "bodyText": "By this line, the singleLogoutServiceUrl is guaranteed to be non-null and non-empty exactly because of the mentioned check. Hence use the value from the singleLogoutServiceUrl.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454592394", "createdAt": "2020-07-14T19:28:28Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -162,6 +167,12 @@ public void backchannelLogout(KeycloakSession session, UserSessionModel userSess\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+            if (logoutRequest.getDestination() != null) {\n+                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDkyNTAxNA==", "bodyText": "Based on this comment, I understood that you wanted me to put the request's destination insingleLogoutServiceUrl because custom processors could be involved in buildLogoutRequest  (as we do for the destination url in the login flow). I can remove this, no problem.", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454925014", "createdAt": "2020-07-15T09:40:51Z", "author": {"login": "looorent"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -162,6 +167,12 @@ public void backchannelLogout(KeycloakSession session, UserSessionModel userSess\n         JaxrsSAML2BindingBuilder binding = buildLogoutBinding(session, userSession, realm);\n         try {\n             LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+            if (logoutRequest.getDestination() != null) {\n+                singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+            } else {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA4OA=="}, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjA2MTE0OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MToxMlrOGwN3vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QwOToyMTozNlrOGwgQWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA5NQ==", "bodyText": "Same as above", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212095", "createdAt": "2020-07-11T16:41:12Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -186,6 +197,11 @@ public Response keycloakInitiatedBrowserLogout(KeycloakSession session, UserSess\n        } else {\n             try {\n                 LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+                if (logoutRequest.getDestination() != null) {\n+                    singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+                } else {\n+                    return null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzUxMzMwNQ==", "bodyText": "Same answer as above. This is inspired from this existing line:\n\n  \n    \n      keycloak/services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java\n    \n    \n         Line 183\n      in\n      f8a4f66\n    \n    \n    \n    \n\n        \n          \n           if (singleLogoutServiceUrl == null || singleLogoutServiceUrl.trim().equals(\"\")) return null;", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453513305", "createdAt": "2020-07-13T09:21:36Z", "author": {"login": "looorent"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -186,6 +197,11 @@ public Response keycloakInitiatedBrowserLogout(KeycloakSession session, UserSess\n        } else {\n             try {\n                 LogoutRequestType logoutRequest = buildLogoutRequest(userSession, uriInfo, realm, singleLogoutServiceUrl);\n+                if (logoutRequest.getDestination() != null) {\n+                    singleLogoutServiceUrl = logoutRequest.getDestination().toString();\n+                } else {\n+                    return null;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjA5NQ=="}, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNjA2MTQ2OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MToyNlrOGwN34g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQxNjo0MToyNlrOGwN34g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzIxMjEzMA==", "bodyText": "Remove unrelated change", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r453212130", "createdAt": "2020-07-11T16:41:26Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/broker/saml/SAMLIdentityProvider.java", "diffHunk": "@@ -54,6 +54,7 @@\n import java.util.Set;\n import java.util.TreeSet;\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTM1MjgxOnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToyODo0NVrOGxiIIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxOToyODo0NVrOGxiIIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU5MjU0NQ==", "bodyText": "Remove unrelated change", "url": "https://github.com/keycloak/keycloak/pull/7007#discussion_r454592545", "createdAt": "2020-07-14T19:28:45Z", "author": {"login": "hmlnarik"}, "path": "services/src/main/java/org/keycloak/protocol/saml/SamlProtocol.java", "diffHunk": "@@ -745,7 +745,7 @@ protected LogoutRequestType createLogoutRequest(String logoutUrl, AuthenticatedC\n         for (Iterator<SamlAuthenticationPreprocessor> it = SamlSessionUtils.getSamlAuthenticationPreprocessorIterator(session); it.hasNext();) {\n             logoutRequest = it.next().beforeSendingLogoutRequest(logoutRequest, clientSession.getUserSession(), clientSession);\n         }\n-        \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9090ac225f38ae79df5c8f70cfc2acd22740280b"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3732, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}