{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3MTY4OTQ4", "number": 6806, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoyODoyOFrODhEY9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoyNzoxOFrODhJz4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDAxNTI3OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/ServiceAccountTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoyODoyOFrOFrn_lg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxMzoyODoyOFrOFrn_lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTI4ODM0Mg==", "bodyText": "It may look weird a 409 response here. But I didn't want to change the scope of this PR and review how the endpoint is mapping errors to the proper status.", "url": "https://github.com/keycloak/keycloak/pull/6806#discussion_r381288342", "createdAt": "2020-02-19T13:28:28Z", "author": {"login": "pedroigor"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/oauth/ServiceAccountTest.java", "diffHunk": "@@ -281,6 +291,25 @@ public void clientCredentialsAuthRequest_ClientES256_RealmPS256() throws Excepti\n     \tconductClientCredentialsAuthRequest(Algorithm.HS256, Algorithm.ES256, Algorithm.PS256);\n     }\n \n+    @Test\n+    public void failManagePassword() {\n+        UserResource serviceAccount = adminClient.realm(\"test\").users().get(userId);\n+        UserRepresentation representation = serviceAccount.toRepresentation();\n+\n+        CredentialRepresentation password = new CredentialRepresentation();\n+        password.setValue(\"password\");\n+        password.setType(CredentialRepresentation.PASSWORD);\n+        password.setTemporary(false);\n+\n+        representation.setCredentials(Arrays.asList(password));\n+\n+        this.expectedException.expect(Matchers.allOf(Matchers.instanceOf(ClientErrorException.class), \n+                Matchers.hasProperty(\"response\", Matchers.hasProperty(\"status\", Matchers.is(409)))));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56d336cdb2b8f1ef7323207256b53ae3c45486fa"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2MDkwMzM5OnYy", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/authentication/authenticators/browser/AbstractUsernameFormAuthenticator.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoyNzoxOFrOFrwgoA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xOVQxNzoyNzoxOFrOFrwgoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTQyNzg3Mg==", "bodyText": "Is it really necessary to add this check here? Doesn't the AuthenticationProcessor prevent the login request from reaching this point?", "url": "https://github.com/keycloak/keycloak/pull/6806#discussion_r381427872", "createdAt": "2020-02-19T17:27:18Z", "author": {"login": "sguilhen"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/browser/AbstractUsernameFormAuthenticator.java", "diffHunk": "@@ -101,7 +101,7 @@ protected void dummyHash(AuthenticationFlowContext context) {\n     }\n \n     public void testInvalidUser(AuthenticationFlowContext context, UserModel user) {\n-        if (user == null) {\n+        if (user == null || user.getServiceAccountClientLink() != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56d336cdb2b8f1ef7323207256b53ae3c45486fa"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3763, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}