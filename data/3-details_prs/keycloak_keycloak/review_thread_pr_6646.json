{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwMzk2NTU4", "number": 6646, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMTo1MToyNlrODXftmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzo1ODo0NVrODYFoFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1OTYzNDE2OnYy", "diffSide": "RIGHT", "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xM1QxMTo1MToyNlrOFc0e-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzo0MTo1OVrOFdX0bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ==", "bodyText": "Please use parameter name briefRepresentation to keep consistent with the rest of API", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r365764345", "createdAt": "2020-01-13T11:51:26Z", "author": {"login": "hmlnarik"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyMzIyMQ==", "bodyText": "Ha yes it's true, I think the full representation is now present already in 2 API's I will fix this one and the other ones.", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366323221", "createdAt": "2020-01-14T12:58:58Z", "author": {"login": "Cracky5457"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyNzk0MA==", "bodyText": "Fixed. Should we fixe all the full parameters in this issue ? because it had common change with other endpoint for the method toRepresentation", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366327940", "createdAt": "2020-01-14T13:10:03Z", "author": {"login": "Cracky5457"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMyOTA1NQ==", "bodyText": "Thank you! That would be fantastic.", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366329055", "createdAt": "2020-01-14T13:12:19Z", "author": {"login": "hmlnarik"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzOTA3Mg==", "bodyText": "I created an other PR, but maybe I should cherry pick the commit to this one and also change the toRepresentation , searchForGroupByName , toGroupHierarchy method here ? #6655", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366339072", "createdAt": "2020-01-14T13:33:39Z", "author": {"login": "Cracky5457"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjMzOTIxMQ==", "bodyText": "Just to be clear, the proper name is briefRepresentation, not full", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366339211", "createdAt": "2020-01-14T13:33:56Z", "author": {"login": "hmlnarik"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM0MzI3OQ==", "bodyText": "Yes I changed it to briefRepresentation but some methods inside ModelToRepresentation.java was already using a full boolean that's why I used full in the API at the begining. So for theses PR I just changed the API definition ( that mean that it won t work anymore if someone use full already ... but I think there is no documentation about full so it should be ok ). So I changed the API definition, not the ModelToRepresentation.java method, I can't change both in separate pull request because if one is validate before the other it will broke the other. It's not really clear like that but have a look on the code you will understand.", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366343279", "createdAt": "2020-01-14T13:41:59Z", "author": {"login": "Cracky5457"}, "path": "integration/admin-client/src/main/java/org/keycloak/admin/client/resource/UserResource.java", "diffHunk": "@@ -67,6 +68,19 @@\n     List<GroupRepresentation> groups(@QueryParam(\"search\") String search,\n                                      @QueryParam(\"first\") Integer firstResult,\n                                      @QueryParam(\"max\") Integer maxResults);\n+    \n+    @Path(\"groups\")\n+    @GET\n+    List<GroupRepresentation> groups(@QueryParam(\"first\") Integer firstResult,\n+                                     @QueryParam(\"max\") Integer maxResults,\n+                                     @QueryParam(\"full\") @DefaultValue(\"false\") boolean fullRepresentation);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTc2NDM0NQ=="}, "originalCommit": {"oid": "a7e8de65157594395876d36bb58e5732bf4ff090"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MzM4NTE5OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQxMzo1MDo1NlrOFdYF3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzo0NToxNVrOFdvewg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM0Nzc0MA==", "bodyText": "It seems this user is never removed. You can use Creator.create(RealmResource, UserRepresentation) that handles cleanup automatically, see e.g. https://github.com/keycloak/keycloak/blob/master/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/adapter/servlet/SAMLServletAdapterTest.java#L924. Feel free to use Creator.create(RealmResource, GroupRepresentation) for group similarly.", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366347740", "createdAt": "2020-01-14T13:50:56Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -1668,4 +1675,35 @@ public void testDeleteCredentials() {\n         user.resetPassword(credPasswd);\n         Assert.assertEquals(1, user.credentials().size());\n     }\n+    \n+    @Test\n+    public void testGetGroupsForUserFullRepresentation() {\n+       \n+        RealmResource realm = adminClient.realms().realm(\"test\");\n+        GroupsResource groups = realm.groups();\n+        \n+        String userName = \"brief-grouptest-user\";\n+        String groupName = \"groupWithAttribute\";\n+        Map<String, List<String>> attributes = new HashMap<String, List<String>>();\n+        attributes.put(\"attribute1\", Arrays.asList(\"attribute1\",\"attribute2\"));\n+        \n+        try (Response response = groups.add(GroupBuilder.create().name(groupName).attributes(attributes).build())) {\n+            String groupId = ApiUtil.getCreatedId(response);\n+            \n+            UsersResource users = realm.users();\n+\n+            UserRepresentation userRepresentation = UserBuilder.create()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c38cfca4064e13d320d9b7fbbb753342863a9e2d"}, "originalPosition": 63}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczMDk0Ng==", "bodyText": "done, for group too", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366730946", "createdAt": "2020-01-15T07:45:15Z", "author": {"login": "Cracky5457"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -1668,4 +1675,35 @@ public void testDeleteCredentials() {\n         user.resetPassword(credPasswd);\n         Assert.assertEquals(1, user.credentials().size());\n     }\n+    \n+    @Test\n+    public void testGetGroupsForUserFullRepresentation() {\n+       \n+        RealmResource realm = adminClient.realms().realm(\"test\");\n+        GroupsResource groups = realm.groups();\n+        \n+        String userName = \"brief-grouptest-user\";\n+        String groupName = \"groupWithAttribute\";\n+        Map<String, List<String>> attributes = new HashMap<String, List<String>>();\n+        attributes.put(\"attribute1\", Arrays.asList(\"attribute1\",\"attribute2\"));\n+        \n+        try (Response response = groups.add(GroupBuilder.create().name(groupName).attributes(attributes).build())) {\n+            String groupId = ApiUtil.getCreatedId(response);\n+            \n+            UsersResource users = realm.users();\n+\n+            UserRepresentation userRepresentation = UserBuilder.create()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjM0Nzc0MA=="}, "originalCommit": {"oid": "c38cfca4064e13d320d9b7fbbb753342863a9e2d"}, "originalPosition": 63}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2NTg0NTk5OnYy", "diffSide": "RIGHT", "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwNzo1ODo0NVrOFdvuvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQwODoxNDowNlrOFdwBjw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczNTAzNg==", "bodyText": "Nit: The level of try nesting and call to get representation (lines 1690 - 1698) could be simplified to:\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    try (Creator<GroupResource> g = Creator.create(realm, GroupBuilder.create().name(groupName).attributes(attributes).build())) {\n          \n          \n            \n                        UserRepresentation userRepresentation = UserBuilder\n          \n          \n            \n                                .edit(createUserRepresentation(userName, \"joe@average.com\", \"average\", \"joe\", true))\n          \n          \n            \n                                .addPassword(\"password\")\n          \n          \n            \n                                .build();\n          \n          \n            \n            \n          \n          \n            \n                            try (Creator<UserResource> u = Creator.create(realm, userRepresentation);\n          \n          \n            \n                              Creator<GroupResource> g = Creator.create(realm, GroupBuilder.create().name(groupName).attributes(attributes).build())) {\n          \n          \n            \n                        String groupId = g.id());", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366735036", "createdAt": "2020-01-15T07:58:45Z", "author": {"login": "hmlnarik"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -1668,4 +1676,34 @@ public void testDeleteCredentials() {\n         user.resetPassword(credPasswd);\n         Assert.assertEquals(1, user.credentials().size());\n     }\n+    \n+    @Test\n+    public void testGetGroupsForUserFullRepresentation() {\n+       \n+        RealmResource realm = adminClient.realms().realm(\"test\");\n+        \n+        String userName = \"averagejoe\";\n+        String groupName = \"groupWithAttribute\";\n+        Map<String, List<String>> attributes = new HashMap<String, List<String>>();\n+        attributes.put(\"attribute1\", Arrays.asList(\"attribute1\",\"attribute2\"));\n+        \n+        try (Creator<GroupResource> g = Creator.create(realm, GroupBuilder.create().name(groupName).attributes(attributes).build())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3c8500f16b029a4f459a76bf7b62333ef4ed2347"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczOTg1NQ==", "bodyText": "done", "url": "https://github.com/keycloak/keycloak/pull/6646#discussion_r366739855", "createdAt": "2020-01-15T08:14:06Z", "author": {"login": "Cracky5457"}, "path": "testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/UserTest.java", "diffHunk": "@@ -1668,4 +1676,34 @@ public void testDeleteCredentials() {\n         user.resetPassword(credPasswd);\n         Assert.assertEquals(1, user.credentials().size());\n     }\n+    \n+    @Test\n+    public void testGetGroupsForUserFullRepresentation() {\n+       \n+        RealmResource realm = adminClient.realms().realm(\"test\");\n+        \n+        String userName = \"averagejoe\";\n+        String groupName = \"groupWithAttribute\";\n+        Map<String, List<String>> attributes = new HashMap<String, List<String>>();\n+        attributes.put(\"attribute1\", Arrays.asList(\"attribute1\",\"attribute2\"));\n+        \n+        try (Creator<GroupResource> g = Creator.create(realm, GroupBuilder.create().name(groupName).attributes(attributes).build())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjczNTAzNg=="}, "originalCommit": {"oid": "3c8500f16b029a4f459a76bf7b62333ef4ed2347"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3924, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}