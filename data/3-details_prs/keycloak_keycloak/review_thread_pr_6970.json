{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAwNTU2OTY4", "number": 6970, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjowODoxM1rOD7uQGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0OTowM1rOD_tWsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYzOTUwMzYzOnYy", "diffSide": "RIGHT", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMlQxNjowODoxM1rOGUOHvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xNVQxNDozMzoxMlrOGWHanA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1NjA2Mg==", "bodyText": "Is it possible to change tooltip to contain more details? I would use something like: Keycloak group path the LDAP groups are added to. For example if value '/Applications/App1' is used, then LDAP groups will be available in Keycloak under group 'App1', which is child of top level group 'Applications'. The default value is '/' so LDAP groups will be mapped to the Keycloak groups at the top level. The configured group path must already exists in the Keycloak when creating this mapper.", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r423856062", "createdAt": "2020-05-12T16:08:13Z", "author": {"login": "mposolda"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -198,6 +198,12 @@\n                 .helpText(\"If this flag is true, then during sync of groups from LDAP to Keycloak, we will keep just those Keycloak groups, which still exists in LDAP. Rest will be deleted\")\n                 .type(ProviderConfigProperty.BOOLEAN_TYPE)\n                 .defaultValue(\"false\")\n+                .add()\n+                .property().name(GroupMapperConfig.LDAP_GROUPS_PATH)\n+                .label(\"Groups Path\")\n+                .helpText(\"Keycloak group path the LDAP groups are added to\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce3360e05f76325bb4b8f2c6f6f032fe705822fa"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNTg0MzM1Ng==", "bodyText": "Sure. If you don't mind then I'll use your tooltip text as-is \ud83d\udc4d", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r425843356", "createdAt": "2020-05-15T14:33:12Z", "author": {"login": "tjuerge"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -198,6 +198,12 @@\n                 .helpText(\"If this flag is true, then during sync of groups from LDAP to Keycloak, we will keep just those Keycloak groups, which still exists in LDAP. Rest will be deleted\")\n                 .type(ProviderConfigProperty.BOOLEAN_TYPE)\n                 .defaultValue(\"false\")\n+                .add()\n+                .property().name(GroupMapperConfig.LDAP_GROUPS_PATH)\n+                .label(\"Groups Path\")\n+                .helpText(\"Keycloak group path the LDAP groups are added to\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzg1NjA2Mg=="}, "originalCommit": {"oid": "ce3360e05f76325bb4b8f2c6f6f032fe705822fa"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY4MTI5OTY4OnYy", "diffSide": "RIGHT", "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNDo0OTowM1rOGah5Rw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yNlQxNTowNjo0NVrOGaitbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ==", "bodyText": "Is it possible to use generic message without adding \"group\" variable into the text? Maybe just something like \"Groups path group does not exist  - please create the group on specified path first\" .\nThe reason is some potential for various injection attacks, which would be possible if the user input (variable \"group\") is shown in the notification in the UI.\nBonus point: If you manage to localize the error message, it will be nice as well. The message with specified key will just need to be added to this file and that should be enough: https://github.com/keycloak/keycloak/blob/master/themes/src/main/resources/theme/base/admin/messages/messages_en.properties", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430471495", "createdAt": "2020-05-26T14:49:03Z", "author": {"login": "mposolda"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -282,6 +292,12 @@ public void validateConfiguration(KeycloakSession session, RealmModel realm, Com\n         }\n \n         LDAPUtils.validateCustomLdapFilter(config.getConfig().getFirst(GroupMapperConfig.GROUPS_LDAP_FILTER));\n+\n+        checkMandatoryConfigAttribute(GroupMapperConfig.LDAP_GROUPS_PATH, \"Groups Path\", config);\n+        String group = config.getConfig().getFirst(GroupMapperConfig.LDAP_GROUPS_PATH).trim();\n+        if (!\"/\".equals(group) && KeycloakModelUtils.findGroupByPath(realm, group) == null) {\n+            throw new ComponentValidationException(\"Groups path group '\" + group + \"' does not exist - please create it first\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8bf22a5554dda835ec7aaa13663707b73800aa95"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3ODA2NA==", "bodyText": "Sure. And now I know why the other exception messages are so generic.", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430478064", "createdAt": "2020-05-26T14:57:40Z", "author": {"login": "tjuerge"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -282,6 +292,12 @@ public void validateConfiguration(KeycloakSession session, RealmModel realm, Com\n         }\n \n         LDAPUtils.validateCustomLdapFilter(config.getConfig().getFirst(GroupMapperConfig.GROUPS_LDAP_FILTER));\n+\n+        checkMandatoryConfigAttribute(GroupMapperConfig.LDAP_GROUPS_PATH, \"Groups Path\", config);\n+        String group = config.getConfig().getFirst(GroupMapperConfig.LDAP_GROUPS_PATH).trim();\n+        if (!\"/\".equals(group) && KeycloakModelUtils.findGroupByPath(realm, group) == null) {\n+            throw new ComponentValidationException(\"Groups path group '\" + group + \"' does not exist - please create it first\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ=="}, "originalCommit": {"oid": "8bf22a5554dda835ec7aaa13663707b73800aa95"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ4NDg0NA==", "bodyText": "And here we go", "url": "https://github.com/keycloak/keycloak/pull/6970#discussion_r430484844", "createdAt": "2020-05-26T15:06:45Z", "author": {"login": "tjuerge"}, "path": "federation/ldap/src/main/java/org/keycloak/storage/ldap/mappers/membership/group/GroupLDAPStorageMapperFactory.java", "diffHunk": "@@ -282,6 +292,12 @@ public void validateConfiguration(KeycloakSession session, RealmModel realm, Com\n         }\n \n         LDAPUtils.validateCustomLdapFilter(config.getConfig().getFirst(GroupMapperConfig.GROUPS_LDAP_FILTER));\n+\n+        checkMandatoryConfigAttribute(GroupMapperConfig.LDAP_GROUPS_PATH, \"Groups Path\", config);\n+        String group = config.getConfig().getFirst(GroupMapperConfig.LDAP_GROUPS_PATH).trim();\n+        if (!\"/\".equals(group) && KeycloakModelUtils.findGroupByPath(realm, group) == null) {\n+            throw new ComponentValidationException(\"Groups path group '\" + group + \"' does not exist - please create it first\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMDQ3MTQ5NQ=="}, "originalCommit": {"oid": "8bf22a5554dda835ec7aaa13663707b73800aa95"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3705, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}