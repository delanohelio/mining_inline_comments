{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMTY4MzAx", "number": 7656, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNVQxOTo1NjoxNVrOGvVZmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNVQxOTo1Njo0MVrOGvVaMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "PRRT_kwDOAKnDVc4a9Vma", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNVQxOTo1NjoxNVrOKkqMrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNVQyMTo1MjowN1rOKkunBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "PRRC_kwDOAKnDVc4qSoyt", "bodyText": "Perhaps we should mention here the possibility to provide a comma-separated list of OIDs?", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r709528749", "createdAt": "2021-09-15T19:56:15Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -201,6 +206,22 @@\n         extendedKeyUsage.setLabel(\"Validate Extended Key Usage\");\n         extendedKeyUsage.setHelpText(\"Validates the extended purposes of the certificate's key using certificate's Extended Key Usage extension. Leaving the field blank will disable Extended Key Usage validation. See RFC 5280 for a detailed definition of X509 Extended Key Usage extension.\");\n \n+        ProviderConfigProperty certificatePolicy = new ProviderConfigProperty();\n+        certificatePolicy.setType(STRING_TYPE);\n+        certificatePolicy.setName(CERTIFICATE_POLICY);\n+        certificatePolicy.setLabel(\"Validate Certificate Policy\");\n+        certificatePolicy.setHelpText(\"Validates the certificate policies of the certificate's key using certificate's Policy extension. Leaving the field blank will disable Certificate Policies validation. See RFC 5280 for a detailed definition of X509 Certificate Policy extension.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 20}, {"id": "PRRC_kwDOAKnDVc4qS6cE", "bodyText": "Sure! I will add \"Multiple policies should be separated using a comma.\", just like in the documentation PR.", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r709601028", "createdAt": "2021-09-15T21:52:07Z", "author": {"login": "lscorcia"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -201,6 +206,22 @@\n         extendedKeyUsage.setLabel(\"Validate Extended Key Usage\");\n         extendedKeyUsage.setHelpText(\"Validates the extended purposes of the certificate's key using certificate's Extended Key Usage extension. Leaving the field blank will disable Extended Key Usage validation. See RFC 5280 for a detailed definition of X509 Extended Key Usage extension.\");\n \n+        ProviderConfigProperty certificatePolicy = new ProviderConfigProperty();\n+        certificatePolicy.setType(STRING_TYPE);\n+        certificatePolicy.setName(CERTIFICATE_POLICY);\n+        certificatePolicy.setLabel(\"Validate Certificate Policy\");\n+        certificatePolicy.setHelpText(\"Validates the certificate policies of the certificate's key using certificate's Policy extension. Leaving the field blank will disable Certificate Policies validation. See RFC 5280 for a detailed definition of X509 Certificate Policy extension.\");", "state": "SUBMITTED", "replyTo": {"id": "PRRC_kwDOAKnDVc4qSoyt"}, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 20}]}}, {"id": "PRRT_kwDOAKnDVc4a9Vow", "diffSide": "RIGHT", "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0xNVQxOTo1Njo0MVrOKkqNsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wOS0yMFQxMTozMjo0MVrOKnGJ5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "PRRC_kwDOAKnDVc4qSo2w", "bodyText": "Could you please use upper-case in constant names as you did for others?", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r709529008", "createdAt": "2021-09-15T19:56:41Z", "author": {"login": "pedroigor"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -87,6 +87,11 @@\n             USERNAME_EMAIL_MAPPER\n     };\n \n+    private static final String[] certificatePolicyModes = {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 4}, {"id": "PRRC_kwDOAKnDVc4qS66c", "bodyText": "I'm sorry, I don't understand your suggestion: the constant names are already uppercase (CERTIFICATE_POLICY_MODE_ALL, CERTIFICATE_POLICY_MODE_ANY). Are you talking about the constant values ('Any', 'All')? If that's the case then, sure, no problem!", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r709602972", "createdAt": "2021-09-15T21:55:59Z", "author": {"login": "lscorcia"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -87,6 +87,11 @@\n             USERNAME_EMAIL_MAPPER\n     };\n \n+    private static final String[] certificatePolicyModes = {", "state": "SUBMITTED", "replyTo": {"id": "PRRC_kwDOAKnDVc4qSo2w"}, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 4}, {"id": "PRRC_kwDOAKnDVc4qb4Hw", "bodyText": "I think Pedro meant to use the uppercase for the constant name itself? Probably something like:\nprivate static final String[] CERTIFICATE_POLICY_MODES = {", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r711950832", "createdAt": "2021-09-20T08:02:33Z", "author": {"login": "mposolda"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -87,6 +87,11 @@\n             USERNAME_EMAIL_MAPPER\n     };\n \n+    private static final String[] certificatePolicyModes = {", "state": "SUBMITTED", "replyTo": {"id": "PRRC_kwDOAKnDVc4qSo2w"}, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 4}, {"id": "PRRC_kwDOAKnDVc4qcYnn", "bodyText": "Oh, sure! I didn't think about it because it was consistent with constant definitions at the lines above, but I will change it. Thanks!", "url": "https://github.com/keycloak/keycloak/pull/7656#discussion_r712083943", "createdAt": "2021-09-20T11:32:41Z", "author": {"login": "lscorcia"}, "path": "services/src/main/java/org/keycloak/authentication/authenticators/x509/AbstractX509ClientCertificateAuthenticatorFactory.java", "diffHunk": "@@ -87,6 +87,11 @@\n             USERNAME_EMAIL_MAPPER\n     };\n \n+    private static final String[] certificatePolicyModes = {", "state": "SUBMITTED", "replyTo": {"id": "PRRC_kwDOAKnDVc4qSo2w"}, "originalCommit": {"oid": "ecfc0b9cb61a93979979a65a6ec3c0143de29d15"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3226, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}