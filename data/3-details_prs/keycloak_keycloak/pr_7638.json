{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2NjUzMzU1", "number": 7638, "title": "KEYCLOAK-16444 Use StAX for validator", "bodyText": "", "createdAt": "2020-11-24T17:45:08Z", "url": "https://github.com/keycloak/keycloak/pull/7638", "merged": true, "mergeCommit": {"oid": "5c2122d36f1a41449ab414e0fcdebc92b04015db"}, "closed": true, "closedAt": "2020-11-25T13:20:21Z", "author": {"login": "hmlnarik"}, "timelineItems": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdf5ZG3AH2gAyNTI2NjUzMzU1OjAyYjg1NDI0OGVlYjFlYTAwNDZkNDA1NTI2MjA3MmFiNmI5YzVlYzg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdf81gVAFqTUzODQwNjg3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "02b854248eeb1ea0046d4055262072ab6b9c5ec8", "author": {"user": {"login": "hmlnarik", "name": "Hynek Mlna\u0159\u00edk"}}, "url": "https://github.com/keycloak/keycloak/commit/02b854248eeb1ea0046d4055262072ab6b9c5ec8", "committedDate": "2020-11-25T07:40:54Z", "message": "KEYCLOAK-16444 Initialize JAXP components consistently"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b0f8815858e6b70f0f9e53154f6cdeab9018bbd", "author": {"user": {"login": "hmlnarik", "name": "Hynek Mlna\u0159\u00edk"}}, "url": "https://github.com/keycloak/keycloak/commit/1b0f8815858e6b70f0f9e53154f6cdeab9018bbd", "committedDate": "2020-11-24T16:12:40Z", "message": "KEYCLOAK-16444 Initialize JAXP components consistently"}, "afterCommit": {"oid": "02b854248eeb1ea0046d4055262072ab6b9c5ec8", "author": {"user": {"login": "hmlnarik", "name": "Hynek Mlna\u0159\u00edk"}}, "url": "https://github.com/keycloak/keycloak/commit/02b854248eeb1ea0046d4055262072ab6b9c5ec8", "committedDate": "2020-11-25T07:40:54Z", "message": "KEYCLOAK-16444 Initialize JAXP components consistently"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM4NDA2ODcx", "url": "https://github.com/keycloak/keycloak/pull/7638#pullrequestreview-538406871", "createdAt": "2020-11-25T11:34:18Z", "commit": {"oid": "02b854248eeb1ea0046d4055262072ab6b9c5ec8"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTozNDoxOFrOH5vV4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNVQxMTozNDoxOFrOH5vV4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMDMwNjUzMQ==", "bodyText": "It seems that REQUEST_FLAWED and REQUEST_FLAWED_LOCAL is exactly same string? I guess that was not intended for this test?", "url": "https://github.com/keycloak/keycloak/pull/7638#discussion_r530306531", "createdAt": "2020-11-25T11:34:18Z", "author": {"login": "mposolda"}, "path": "saml-core/src/test/java/org/keycloak/saml/processing/core/util/JAXPValidationUtilTest.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates\n+ * and other contributors as indicated by the @author tags.\n+ * \n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ * \n+ * http://www.apache.org/licenses/LICENSE-2.0\n+ * \n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+package org.keycloak.saml.processing.core.util;\n+\n+import java.io.ByteArrayInputStream;\n+import java.io.IOException;\n+import org.hamcrest.Matcher;\n+import org.hamcrest.Matchers;\n+import org.junit.Test;\n+import org.xml.sax.SAXException;\n+import static org.junit.Assert.assertThat;\n+\n+/**\n+ *\n+ * @author hmlnarik\n+ */\n+public class JAXPValidationUtilTest {\n+\n+    private static final String REQUEST_VALID = \"<samlp:AuthnRequest xmlns:samlp=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\" xmlns:saml=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" ID=\\\"a123\\\" Version=\\\"2.0\\\" IssueInstant=\\\"2014-07-16T23:52:45Z\\\" >\" +\n+            \"<saml:Issuer>urn:test</saml:Issuer>\" +\n+            \"</samlp:AuthnRequest>\";\n+\n+    private static final String REQUEST_FLAWED = \"<samlp:AuthnRequest xmlns:samlp=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\" xmlns:saml=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" ID=\\\"&heh;\\\" Version=\\\"2.0\\\" IssueInstant=\\\"2014-07-16T23:52:45Z\\\" >\" +\n+            \"<saml:Issuer>urn:test</saml:Issuer>\" +\n+            \"</samlp:AuthnRequest>\";\n+\n+    private static final String REQUEST_FLAWED_LOCAL = \"<samlp:AuthnRequest xmlns:samlp=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\" xmlns:saml=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" ID=\\\"&heh;\\\" Version=\\\"2.0\\\" IssueInstant=\\\"2014-07-16T23:52:45Z\\\" >\" +\n+            \"<saml:Issuer>urn:test</saml:Issuer>\" +\n+            \"</samlp:AuthnRequest>\";\n+\n+    private static final String REQUEST_INVALID = \"<samlp:InvalidAuthnRequest xmlns:samlp=\\\"urn:oasis:names:tc:SAML:2.0:protocol\\\" xmlns:saml=\\\"urn:oasis:names:tc:SAML:2.0:assertion\\\" ID=\\\"a123\\\" Version=\\\"2.0\\\" IssueInstant=\\\"2014-07-16T23:52:45Z\\\" >\" +\n+            \"<saml:Issuer>urn:test</saml:Issuer>\" +\n+            \"</samlp:AuthnRequest>\";\n+\n+\n+    @Test\n+    public void testServerSideValidator() throws Exception {\n+        String preamble = \"<!DOCTYPE AuthnRequest [\" +\n+                \"<!ELEMENT AuthnRequest (#PCDATA)>\" +\n+                \"<!ENTITY heh SYSTEM \\\"file:///etc/passwd\\\">\" +\n+                \"]>\";\n+\n+        assertInputValidation(REQUEST_VALID, Matchers.nullValue());\n+\n+        assertInputValidation(REQUEST_INVALID, Matchers.notNullValue());\n+        assertInputValidation(preamble + REQUEST_FLAWED, Matchers.notNullValue());\n+        assertInputValidation(preamble + REQUEST_FLAWED_LOCAL, Matchers.notNullValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "02b854248eeb1ea0046d4055262072ab6b9c5ec8"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3266, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}