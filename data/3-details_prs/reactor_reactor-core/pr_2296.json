{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNjQwNDk4", "number": 2296, "title": "fix #1053 MonoProcessor rework", "bodyText": "This PR introduces NextProcessor and VoidProcessor. A possible LatestProcessor could be added too.\nIt also introduces Flux.shareNext and Mono.share in addition to publishNext for consistency. A follow up would be to add a ConnectableMono.\nNow if we add a latest processor, how to represent it in the new Sinks ? right now the sinks is expressed around cardinality, should Sinks.singleOrEmpty() becomes Sinks.singleOrEmpty().first() and last() to differentiate the first and last signals ? Should this be better under Sinks.many().latest() ?", "createdAt": "2020-08-01T00:19:58Z", "url": "https://github.com/reactor/reactor-core/pull/2296", "merged": true, "mergeCommit": {"oid": "ea1aa1e6aea7364c5d4b59acd977116dceb319be"}, "closed": true, "closedAt": "2020-08-07T14:46:34Z", "author": {"login": "smaldini"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc6dobtABqjM2MTA4ODM3Nzk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc8liO4gBqjM2MzM1NDQyNzk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb9a04b666df7c9fdabaee54f91ce5ab89f7e670", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/cb9a04b666df7c9fdabaee54f91ce5ab89f7e670", "committedDate": "2020-08-01T00:11:45Z", "message": "Split MonoProcessor to void and next implementations\nadd consistent Mono.shareNext() and Mono.share()"}, "afterCommit": {"oid": "3543e8878618d0aed594ace28fae7e82ae14746b", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/3543e8878618d0aed594ace28fae7e82ae14746b", "committedDate": "2020-08-01T00:24:56Z", "message": "Split MonoProcessor to void and next implementations\nadd consistent Mono.shareNext() and Mono.share()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "34b2cc1140e13eec3c6aa7630a52e206b616bae7", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/34b2cc1140e13eec3c6aa7630a52e206b616bae7", "committedDate": "2020-08-01T14:21:26Z", "message": "Test fixes and doc tweak"}, "afterCommit": {"oid": "3e74e376e574aa5bb0c298619f825b073339afc1", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/3e74e376e574aa5bb0c298619f825b073339afc1", "committedDate": "2020-08-01T14:21:53Z", "message": "Test fixes and doc tweak"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3e74e376e574aa5bb0c298619f825b073339afc1", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/3e74e376e574aa5bb0c298619f825b073339afc1", "committedDate": "2020-08-01T14:21:53Z", "message": "Test fixes and doc tweak"}, "afterCommit": {"oid": "0bf3a50174ead6785b2fc1406f4edf6738455ec7", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/0bf3a50174ead6785b2fc1406f4edf6738455ec7", "committedDate": "2020-08-04T14:15:53Z", "message": "Rework PR to avoid breaking change\n\nThe MonoProcessor is reintroduced as deprecated public API.\nCurrent PR's \"MonoProcessor\" is turned into a package\nprivate AbstractMonoProcessor.\n\nThe nice thing about package-private classes with public\nmethods is that extending that class with a public class\nmakes the methods reachable. That's what we do with\nMonoProcessor (which is \"publicizing\" NextProcessor)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0bf3a50174ead6785b2fc1406f4edf6738455ec7", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/0bf3a50174ead6785b2fc1406f4edf6738455ec7", "committedDate": "2020-08-04T14:15:53Z", "message": "Rework PR to avoid breaking change\n\nThe MonoProcessor is reintroduced as deprecated public API.\nCurrent PR's \"MonoProcessor\" is turned into a package\nprivate AbstractMonoProcessor.\n\nThe nice thing about package-private classes with public\nmethods is that extending that class with a public class\nmakes the methods reachable. That's what we do with\nMonoProcessor (which is \"publicizing\" NextProcessor)."}, "afterCommit": {"oid": "f28187f80ccd2d0a699a0742590ff92e4e22edac", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/f28187f80ccd2d0a699a0742590ff92e4e22edac", "committedDate": "2020-08-04T15:17:36Z", "message": "Rework PR to avoid breaking change\n\nThe MonoProcessor is reintroduced as deprecated public API.\nCurrent PR's \"MonoProcessor\" is turned into a package\nprivate AbstractMonoProcessor.\n\nThe nice thing about package-private classes with public\nmethods is that extending that class with a public class\nmakes the methods reachable. That's what we do with\nMonoProcessor (which is \"publicizing\" NextProcessor).\n\nAlso takes the latest processor changes (Sinks.One|Empty) into account."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f28187f80ccd2d0a699a0742590ff92e4e22edac", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/f28187f80ccd2d0a699a0742590ff92e4e22edac", "committedDate": "2020-08-04T15:17:36Z", "message": "Rework PR to avoid breaking change\n\nThe MonoProcessor is reintroduced as deprecated public API.\nCurrent PR's \"MonoProcessor\" is turned into a package\nprivate AbstractMonoProcessor.\n\nThe nice thing about package-private classes with public\nmethods is that extending that class with a public class\nmakes the methods reachable. That's what we do with\nMonoProcessor (which is \"publicizing\" NextProcessor).\n\nAlso takes the latest processor changes (Sinks.One|Empty) into account."}, "afterCommit": {"oid": "99ee19bb192ec9fc0182b4447249729e15bec5bf", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/99ee19bb192ec9fc0182b4447249729e15bec5bf", "committedDate": "2020-08-04T15:42:40Z", "message": "Rework PR to avoid breaking change\n\nThe MonoProcessor is reintroduced as deprecated public API.\nCurrent PR's \"MonoProcessor\" is turned into a package\nprivate AbstractMonoProcessor.\n\nThe nice thing about package-private classes with public\nmethods is that extending that class with a public class\nmakes the methods reachable. That's what we do with\nMonoProcessor (which is \"publicizing\" NextProcessor).\n\nAlso takes the latest processor changes (Sinks.One|Empty) into account."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "503dc8a0f72602509211cab575d6857a3f6f2bdd", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/503dc8a0f72602509211cab575d6857a3f6f2bdd", "committedDate": "2020-08-04T16:42:12Z", "message": "Remove most usage of MonoProcessor in tests"}, "afterCommit": {"oid": "28158614ba0b3605a6e2618f1e9fb5a57e108baa", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/28158614ba0b3605a6e2618f1e9fb5a57e108baa", "committedDate": "2020-08-04T17:07:46Z", "message": "Remove most usage of MonoProcessor in tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "28158614ba0b3605a6e2618f1e9fb5a57e108baa", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/28158614ba0b3605a6e2618f1e9fb5a57e108baa", "committedDate": "2020-08-04T17:07:46Z", "message": "Remove most usage of MonoProcessor in tests"}, "afterCommit": {"oid": "7cdf1e85f65f3771311174cc80c050064b2e8750", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/7cdf1e85f65f3771311174cc80c050064b2e8750", "committedDate": "2020-08-05T08:48:11Z", "message": "Remove most usage of MonoProcessor in tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7cdf1e85f65f3771311174cc80c050064b2e8750", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/7cdf1e85f65f3771311174cc80c050064b2e8750", "committedDate": "2020-08-05T08:48:11Z", "message": "Remove most usage of MonoProcessor in tests"}, "afterCommit": {"oid": "be77bbe2d0dffa426f704b89965c669c53cc76a0", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/be77bbe2d0dffa426f704b89965c669c53cc76a0", "committedDate": "2020-08-05T10:32:46Z", "message": "Remove most usage of MonoProcessor in tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYyNTg4NzM1", "url": "https://github.com/reactor/reactor-core/pull/2296#pullrequestreview-462588735", "createdAt": "2020-08-06T14:44:01Z", "commit": {"oid": "be77bbe2d0dffa426f704b89965c669c53cc76a0"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDo0NDowMVrOG82w1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNDo0NDowMVrOG82w1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjQ2NDk4MQ==", "bodyText": "Could we add a TODO and open an issue to not forget about this?", "url": "https://github.com/reactor/reactor-core/pull/2296#discussion_r466464981", "createdAt": "2020-08-06T14:44:01Z", "author": {"login": "aneveu"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6737,7 +6737,8 @@ public int getPrefetch() {\n \t * @return a new {@link Mono}\n \t */\n \tpublic final Mono<T> publishNext() {\n-\t\treturn Mono.onAssembly(new MonoProcessor<>(this));\n+\t\t//Should add a ConnectableMono to align with #publish()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be77bbe2d0dffa426f704b89965c669c53cc76a0"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMTI4Mzc4", "url": "https://github.com/reactor/reactor-core/pull/2296#pullrequestreview-463128378", "createdAt": "2020-08-07T08:26:37Z", "commit": {"oid": "6367b06c672c7fe04d78d42c98cbc0e81a8c1327"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoyNjozOFrOG9RL1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwODoyNzoxMFrOG9RM0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5Nzg3OA==", "bodyText": "Sink instead of Upstream into the error message", "url": "https://github.com/reactor/reactor-core/pull/2296#discussion_r466897878", "createdAt": "2020-08-07T08:26:38Z", "author": {"login": "aneveu"}, "path": "reactor-core/src/main/java/reactor/core/publisher/DelegateSinkOneMonoProcessor.java", "diffHunk": "@@ -28,37 +28,38 @@\n /**\n  * @author Stephane Maldini\n  */\n-final class DelegateSinkMonoProcessor<IN> extends AbstractMonoProcessor<IN> {\n+final class DelegateSinkOneMonoProcessor<IN> extends MonoProcessor<IN> {\n \n \tfinal Mono<IN>      downstream;\n-\tfinal Sinks.One<IN> upstream;\n+\tfinal Sinks.One<IN> sink;\n \n-\tDelegateSinkMonoProcessor(Mono<IN> downstream, Sinks.One<IN> upstream) {\n-\t\tthis.downstream = Objects.requireNonNull(downstream, \"Downstream must not be null\");\n-\t\tthis.upstream = Objects.requireNonNull(upstream, \"Upstream must not be null\");\n+\tDelegateSinkOneMonoProcessor(Sinks.One<IN> sink) {\n+\t\tthis.sink = Objects.requireNonNull(sink, \"Upstream must not be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6367b06c672c7fe04d78d42c98cbc0e81a8c1327"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njg5ODEzMA==", "bodyText": "Sink instead of Upstream into the error message", "url": "https://github.com/reactor/reactor-core/pull/2296#discussion_r466898130", "createdAt": "2020-08-07T08:27:10Z", "author": {"login": "aneveu"}, "path": "reactor-core/src/main/java/reactor/core/publisher/DelegateSinkFluxProcessor.java", "diffHunk": "@@ -32,10 +32,9 @@\n \tfinal Flux<IN>       flux;\n \tfinal Sinks.Many<IN> sink;\n \n-\tDelegateSinkFluxProcessor(Flux<IN> flux,\n-\t\t\t\t\t\t\t  Sinks.Many<IN> sink) {\n-\t\tthis.flux = Objects.requireNonNull(flux, \"Downstream must not be null\");\n+\tDelegateSinkFluxProcessor(Sinks.Many<IN> sink) {\n \t\tthis.sink = Objects.requireNonNull(sink, \"Upstream must not be null\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6367b06c672c7fe04d78d42c98cbc0e81a8c1327"}, "originalPosition": 8}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6367b06c672c7fe04d78d42c98cbc0e81a8c1327", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/6367b06c672c7fe04d78d42c98cbc0e81a8c1327", "committedDate": "2020-08-06T17:46:54Z", "message": "Come back to abstract MonoProcessor + add japicmp special exclusions\n\nThe hierarchy is back to a newly abstract MonoProcessor, extended by\nNextProcessor.\n\nThe breaking change should be palatable since the class was previously\nfinal.\n\nWe only exclude this particular change from japicmp, which involves\na ViolationRule.\nThis change also limits the breaking changes as much as possible\ncompared to the original commit."}, "afterCommit": {"oid": "38231e1fe1d6948fbf5928bacb0a4e5d2185b096", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/38231e1fe1d6948fbf5928bacb0a4e5d2185b096", "committedDate": "2020-08-07T14:24:33Z", "message": "polish per review, deprecate Flux.publishNext"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYzMzYzMTYz", "url": "https://github.com/reactor/reactor-core/pull/2296#pullrequestreview-463363163", "createdAt": "2020-08-07T14:34:10Z", "commit": {"oid": "38231e1fe1d6948fbf5928bacb0a4e5d2185b096"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "87b3db91ac0c0d2e17b2f77f436597bf88e4fb92", "author": {"user": {"login": "smaldini", "name": "Stephane Maldini"}}, "url": "https://github.com/reactor/reactor-core/commit/87b3db91ac0c0d2e17b2f77f436597bf88e4fb92", "committedDate": "2020-08-07T14:44:28Z", "message": "fix #1053 Make MonoProcessor abstract and add two implementations\n\n - Make `MonoProcessor` an abstract class much like FluxProcessor\n - add `NextProcessor` as the equivalent of former MonoProcessor\n - add `VoidProcessor` as a low-overhead way to get a complete/error\n only processor\n - add `Flux.shareNext()` as a better named alternative to `publishNext`\n which is deprecated\n - add `Mono.share()`"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "17752253fefe7b139d0dba3d9d0133555da25429", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/17752253fefe7b139d0dba3d9d0133555da25429", "committedDate": "2020-08-07T14:45:12Z", "message": "[build] Add a 3rd way to add japicmp exclusions\n\nThis commit uses the richReport and ViolationRule approach to add\na third type of exclusions. Namely, we don't want to entirely exclude\nviolations from MonoProcessor, just the fact that the class is now\nabstract."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "38231e1fe1d6948fbf5928bacb0a4e5d2185b096", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/38231e1fe1d6948fbf5928bacb0a4e5d2185b096", "committedDate": "2020-08-07T14:24:33Z", "message": "polish per review, deprecate Flux.publishNext"}, "afterCommit": {"oid": "17752253fefe7b139d0dba3d9d0133555da25429", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/17752253fefe7b139d0dba3d9d0133555da25429", "committedDate": "2020-08-07T14:45:12Z", "message": "[build] Add a 3rd way to add japicmp exclusions\n\nThis commit uses the richReport and ViolationRule approach to add\na third type of exclusions. Namely, we don't want to entirely exclude\nviolations from MonoProcessor, just the fact that the class is now\nabstract."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2809, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}