{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4MDkxNTU5", "number": 2511, "title": "fix #2481 Clarify the Mono contract explicitly", "bodyText": "", "createdAt": "2020-11-26T13:53:35Z", "url": "https://github.com/reactor/reactor-core/pull/2511", "merged": true, "mergeCommit": {"oid": "e343b61f69b26afabd18570fb8d8b4a302a94c9d"}, "closed": true, "closedAt": "2020-11-27T16:19:17Z", "author": {"login": "ericbottard"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdgk0ipgFqTUzOTg1ODA1OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdgpoLIABqjQwNDY2MzgxNzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM5ODU4MDU4", "url": "https://github.com/reactor/reactor-core/pull/2511#pullrequestreview-539858058", "createdAt": "2020-11-27T10:12:21Z", "commit": {"oid": "bae87d235a7c004d650537ab6b5430f986945f6c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxMjoyMVrOH64d5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yN1QxMDoxMzowM1rOH64fXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDYxMg==", "bodyText": "It might be still a bit ambiguous for someone less familiar with Reactive Streams (this could be their first exposure to the concepts).\nSuggestion:\nthat emits at most one item via the `onNext` signal then terminates with an `onComplete` signal (successful `Mono`, with or without value), or only emits a single `onError` signal (failed `Mono`).", "url": "https://github.com/reactor/reactor-core/pull/2511#discussion_r531504612", "createdAt": "2020-11-27T10:12:21Z", "author": {"login": "simonbasle"}, "path": "docs/asciidoc/coreFeatures.adoc", "diffHunk": "@@ -47,7 +47,11 @@ The following image shows how a `Mono` transforms an item:\n image::https://raw.githubusercontent.com/reactor/reactor-core/v3.0.7.RELEASE/src/docs/marble/mono.png[Mono]\n \n A `Mono<T>` is a specialized `Publisher<T>` that emits at most one item and then\n-(optionally) terminates with an `onComplete` signal or an `onError` signal.\n+terminates with an `onComplete` signal or alternatively, emits an `onError` signal.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae87d235a7c004d650537ab6b5430f986945f6c"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTUwNDk5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            of tests. On the other hand, `onNext+onError` is explicitly forbidden.\n          \n          \n            \n            of tests. On the other hand, `onNext` + `onError` is explicitly forbidden.", "url": "https://github.com/reactor/reactor-core/pull/2511#discussion_r531504990", "createdAt": "2020-11-27T10:13:03Z", "author": {"login": "simonbasle"}, "path": "docs/asciidoc/coreFeatures.adoc", "diffHunk": "@@ -47,7 +47,11 @@ The following image shows how a `Mono` transforms an item:\n image::https://raw.githubusercontent.com/reactor/reactor-core/v3.0.7.RELEASE/src/docs/marble/mono.png[Mono]\n \n A `Mono<T>` is a specialized `Publisher<T>` that emits at most one item and then\n-(optionally) terminates with an `onComplete` signal or an `onError` signal.\n+terminates with an `onComplete` signal or alternatively, emits an `onError` signal.\n+Most `Mono` implementations are expected to immediately call `onComplete` on their\n+`Subscriber` after having called `onNext`. `Mono.never()` is an outlier: it doesn't\n+emit any signal, which is not technically forbidden although not terribly useful outside\n+of tests. On the other hand, `onNext+onError` is explicitly forbidden.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bae87d235a7c004d650537ab6b5430f986945f6c"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMDY3NTk3", "url": "https://github.com/reactor/reactor-core/pull/2511#pullrequestreview-540067597", "createdAt": "2020-11-27T15:46:43Z", "commit": {"oid": "7ffb42cac0b75f01fed992f802bd5aa2d413022c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63c667313d0e64db91a84cfafd103241144510fa", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/63c667313d0e64db91a84cfafd103241144510fa", "committedDate": "2020-11-27T15:52:38Z", "message": "fix #2481 clarify the Mono contract explicitly."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9583fbaa2d8cd9a77fac54bbc79a3a0bb83586f", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/d9583fbaa2d8cd9a77fac54bbc79a3a0bb83586f", "committedDate": "2020-11-27T15:52:39Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "22b17b047ce85e9ac5172c274115c22a4a348cf6", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/22b17b047ce85e9ac5172c274115c22a4a348cf6", "committedDate": "2020-11-27T15:52:39Z", "message": "fixup wording for forbidden combination"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3bafcbd14e56d1be187a759b67174df26b5cceec", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/3bafcbd14e56d1be187a759b67174df26b5cceec", "committedDate": "2020-11-27T15:52:01Z", "message": "fixup wording for forbidden combination"}, "afterCommit": {"oid": "22b17b047ce85e9ac5172c274115c22a4a348cf6", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/22b17b047ce85e9ac5172c274115c22a4a348cf6", "committedDate": "2020-11-27T15:52:39Z", "message": "fixup wording for forbidden combination"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2710, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}