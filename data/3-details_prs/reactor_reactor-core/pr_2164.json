{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NjI5MjAx", "number": 2164, "title": "Ensure DeferredSubscription makes requests serially", "bodyText": "This PR ensures that DefferedSubscription makes requests serially if there is racing between set / requestN (according to RS spec Rule 2.7)\nSigned-off-by: Oleh Dokuka shadowgun@i.ua", "createdAt": "2020-05-18T17:06:14Z", "url": "https://github.com/reactor/reactor-core/pull/2164", "merged": true, "mergeCommit": {"oid": "103190f7ad1ff5d9efefdc5312583b6409d6ac0b"}, "closed": true, "closedAt": "2020-05-19T15:33:20Z", "author": {"login": "OlegDokuka"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcivZvvABqjMzNTA0ODE4ODU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABci1RNCAFqTQxNDQ5ODIwNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "361ac35388ba6ee8f108b68ee2752d356fa79fa4", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/361ac35388ba6ee8f108b68ee2752d356fa79fa4", "committedDate": "2020-05-18T17:04:53Z", "message": "ensures DeferredSubscription makes requests serially\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}, "afterCommit": {"oid": "470f144fae613e22301a4b31cfdffbfa2966a18c", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/470f144fae613e22301a4b31cfdffbfa2966a18c", "committedDate": "2020-05-19T07:32:54Z", "message": "ensures DeferredSubscription makes requests serially\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/6720f8b08819597cfd96f925773938d6fc9f470e", "committedDate": "2020-05-19T07:35:33Z", "message": "ensures DeferredSubscription makes requests serially\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "470f144fae613e22301a4b31cfdffbfa2966a18c", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/470f144fae613e22301a4b31cfdffbfa2966a18c", "committedDate": "2020-05-19T07:32:54Z", "message": "ensures DeferredSubscription makes requests serially\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}, "afterCommit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/6720f8b08819597cfd96f925773938d6fc9f470e", "committedDate": "2020-05-19T07:35:33Z", "message": "ensures DeferredSubscription makes requests serially\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MjY5NDcz", "url": "https://github.com/reactor/reactor-core/pull/2164#pullrequestreview-414269473", "createdAt": "2020-05-19T09:32:46Z", "commit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTozMjo0N1rOGXYBAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwOTo0MjowNlrOGXYXaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2MzkwNw==", "bodyText": "maybe just insist on a positive r meaning concurrent requestN which would trigger another round of the loop", "url": "https://github.com/reactor/reactor-core/pull/2164#discussion_r427163907", "createdAt": "2020-05-19T09:32:47Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Operators.java", "diffHunk": "@@ -1444,53 +1444,72 @@ public int size() {\n \tpublic static class DeferredSubscription\n \t\t\timplements Subscription, Scannable {\n \n-\t\tvolatile Subscription s;\n+\t\tstatic final int STATE_CANCELLED = -2;\n+\t\tstatic final int STATE_SUBSCRIBED = -1;\n+\n+\t\tSubscription s;\n \t\tvolatile long requested;\n \n \t\tprotected boolean isCancelled(){\n-\t\t\treturn s == cancelledSubscription();\n+\t\t\treturn requested == STATE_CANCELLED;\n \t\t}\n \n \t\t@Override\n \t\tpublic void cancel() {\n-\t\t\tSubscription a = s;\n-\t\t\tif (a != cancelledSubscription()) {\n-\t\t\t\ta = S.getAndSet(this, cancelledSubscription());\n-\t\t\t\tif (a != null && a != cancelledSubscription()) {\n-\t\t\t\t\ta.cancel();\n-\t\t\t\t}\n+\t\t\tfinal long state = REQUESTED.getAndSet(this, STATE_CANCELLED);\n+\t\t\tif (state == STATE_CANCELLED) {\n+\t\t\t\treturn;\n \t\t\t}\n+\n+\t\t\tif (state == STATE_SUBSCRIBED) {\n+\t\t\t\tthis.s.cancel();\n+\t\t\t}\n+\t\t}\n+\n+\t\tprotected void terminate() {\n+\t\t\tREQUESTED.getAndSet(this, STATE_CANCELLED);\n \t\t}\n \n \t\t@Override\n \t\t@Nullable\n \t\tpublic Object scanUnsafe(Attr key) {\n+\t\t\tlong requested = this.requested; // volatile read to see subscription\n \t\t\tif (key == Attr.PARENT) return s;\n-\t\t\tif (key == Attr.REQUESTED_FROM_DOWNSTREAM) return requested;\n+\t\t\tif (key == Attr.REQUESTED_FROM_DOWNSTREAM) return requested < 0 ? 0 : requested;\n \t\t\tif (key == Attr.CANCELLED) return isCancelled();\n \n \t\t\treturn null;\n \t\t}\n \n \t\t@Override\n \t\tpublic void request(long n) {\n-\t\t\tSubscription a = s;\n-\t\t\tif (a != null) {\n-\t\t\t\ta.request(n);\n-\t\t\t}\n-\t\t\telse {\n-\t\t\t\taddCap(REQUESTED, this, n);\n-\n-\t\t\t\ta = s;\n+\t\t\tlong r = this.requested; // volatile read beforehand\n \n-\t\t\t\tif (a != null) {\n-\t\t\t\t\tlong r = REQUESTED.getAndSet(this, 0L);\n+\t\t\tif (r > STATE_SUBSCRIBED) { // works only in case onSubscribe has not happened\n+\t\t\t\tlong u;\n+\t\t\t\tfor (;;) { // normal CAS loop with overflow protection\n+\t\t\t\t\tif (r == Long.MAX_VALUE) { // if r == Long.MAX_VALUE then we dont care and we can loose this request just in case of racing\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t\tu = Operators.addCap(r, n);\n+\t\t\t\t\tif (REQUESTED.compareAndSet(this, r, u)) { // Means increment happened before onSubscribe\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t\telse { // Means increment happened after onSubscribe\n+\t\t\t\t\t\tr = this.requested; // update new state to see what exactly happened (onSubscribe | cancel | requestN)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2NDEwMQ==", "bodyText": "typo: accumulated", "url": "https://github.com/reactor/reactor-core/pull/2164#discussion_r427164101", "createdAt": "2020-05-19T09:33:07Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Operators.java", "diffHunk": "@@ -1512,30 +1532,30 @@ public final boolean set(Subscription s) {\n \t\t\t\treturn false;\n \t\t\t}\n \n-\t\t\tif (S.compareAndSet(this, null, s)) {\n+\t\t\tlong r;\n+\t\t\tlong accomulated = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2ODAyNA==", "bodyText": "suggestion: accumulated += toRequest. it simplifies to the same, but is easier to read and better conveys the logic IMHO (we track how much of the pre-subscribe request we've already propagated)", "url": "https://github.com/reactor/reactor-core/pull/2164#discussion_r427168024", "createdAt": "2020-05-19T09:39:31Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Operators.java", "diffHunk": "@@ -1512,30 +1532,30 @@ public final boolean set(Subscription s) {\n \t\t\t\treturn false;\n \t\t\t}\n \n-\t\t\tif (S.compareAndSet(this, null, s)) {\n+\t\t\tlong r;\n+\t\t\tlong accomulated = 0;\n+\t\t\tfor (;;) {\n+\t\t\t\tr = this.requested;\n \n-\t\t\t\tlong r = REQUESTED.getAndSet(this, 0L);\n-\n-\t\t\t\tif (r != 0L) {\n-\t\t\t\t\ts.request(r);\n+\t\t\t\tif (r == STATE_CANCELLED || r == STATE_SUBSCRIBED) {\n+\t\t\t\t\ts.cancel();\n+\t\t\t\t\treturn false;\n \t\t\t\t}\n \n-\t\t\t\treturn true;\n-\t\t\t}\n+\t\t\t\tthis.s = s;\n \n-\t\t\ta = this.s;\n+\t\t\t\tlong toRequest = r - accomulated;\n+\t\t\t\tif (toRequest > 0) { // if there is something,\n+\t\t\t\t\ts.request(toRequest); // then we do a request on the given subscription\n+\t\t\t\t}\n+\t\t\t\taccomulated = r;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzE2OTY0MA==", "bodyText": "was this intended as a separate change?\nif not, would benefit from the same level of commenting and from test coverage ;)", "url": "https://github.com/reactor/reactor-core/pull/2164#discussion_r427169640", "createdAt": "2020-05-19T09:42:06Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/StrictSubscriber.java", "diffHunk": "@@ -72,9 +72,22 @@ public void onSubscribe(Subscription s) {\n \t\t\tactual.onSubscribe(this);\n \n \t\t\tif (Operators.setOnce(S, this, s)) {\n-\t\t\t\tlong r = REQUESTED.getAndSet(this, 0L);\n-\t\t\t\tif (r != 0L) {\n+\t\t\t\tfor (;;) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6720f8b08819597cfd96f925773938d6fc9f470e"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8bbf5f653856aab301cecd49f0f906575d815939", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/8bbf5f653856aab301cecd49f0f906575d815939", "committedDate": "2020-05-19T10:23:12Z", "message": "rollbacks changes\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7fe7034d07df331cdc74f375e9f8a13e5755f7cb", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/7fe7034d07df331cdc74f375e9f8a13e5755f7cb", "committedDate": "2020-05-19T10:44:31Z", "message": "fixes typo\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ac7b27ac86e8c4798a636f8c94c304184946081", "author": {"user": {"login": "OlegDokuka", "name": "Oleh Dokuka"}}, "url": "https://github.com/reactor/reactor-core/commit/9ac7b27ac86e8c4798a636f8c94c304184946081", "committedDate": "2020-05-19T13:42:16Z", "message": "increases readability\n\nSigned-off-by: Oleh Dokuka <shadowgun@i.ua>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDk4MjA1", "url": "https://github.com/reactor/reactor-core/pull/2164#pullrequestreview-414498205", "createdAt": "2020-05-19T14:23:16Z", "commit": {"oid": "9ac7b27ac86e8c4798a636f8c94c304184946081"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2980, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}