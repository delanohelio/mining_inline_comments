{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NTA5OTY5", "number": 2327, "title": "fix #2319 Split emitXxx/tryEmitXxx", "bodyText": "", "createdAt": "2020-08-13T16:46:25Z", "url": "https://github.com/reactor/reactor-core/pull/2327", "merged": true, "mergeCommit": {"oid": "6dbbe8ab939b5f3a168d91c2918c9b12d1f89407"}, "closed": true, "closedAt": "2020-08-14T18:03:38Z", "author": {"login": "simonbasle"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-kq4AAFqTQ2NzA0MjQ1Nw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-3ehNAFqTQ2NzcyMjY3Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3MDQyNDU3", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467042457", "createdAt": "2020-08-13T18:52:35Z", "commit": {"oid": "da6855525b2760928ea56c9b51eec2f09908b035"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo1MjozNVrOHAZLNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxODo1MjozNVrOHAZLNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDE3NDUxNg==", "bodyText": "IMO this and many other usages should use the regular emitNext that would fail on overflow. Otherwise we're introducing the same problem as in M2", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470174516", "createdAt": "2020-08-13T18:52:35Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/DelegateSinkFluxProcessor.java", "diffHunk": "@@ -47,17 +47,17 @@ public Context currentContext() {\n \n \t@Override\n \tpublic void onComplete() {\n-\t\tsink.emitComplete();\n+\t\tsink.tryEmitComplete();\n \t}\n \n \t@Override\n \tpublic void onError(Throwable t) {\n-\t\tsink.emitError(t);\n+\t\tsink.tryEmitError(t);\n \t}\n \n \t@Override\n \tpublic void onNext(IN in) {\n-\t\tsink.emitNext(in);\n+\t\tsink.tryEmitNext(in);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da6855525b2760928ea56c9b51eec2f09908b035"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDA0OTI1", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467404925", "createdAt": "2020-08-14T08:39:42Z", "commit": {"oid": "da6855525b2760928ea56c9b51eec2f09908b035"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODozOTo0MlrOHAseiQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwODozOTo0MlrOHAseiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDQ5MDc2MQ==", "bodyText": "nit: could use a switch for readability and performance", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470490761", "createdAt": "2020-08-14T08:39:42Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/DirectProcessor.java", "diffHunk": "@@ -166,13 +189,33 @@ public Emission emitError(Throwable t) {\n \t}\n \n \t@Override\n-\tpublic Emission emitNext(T t) {\n+\tpublic void emitNext(T value) {\n+\t\tEmission result = tryEmitNext(value);\n+\t\tif (result == Emission.FAIL_OVERFLOW) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "da6855525b2760928ea56c9b51eec2f09908b035"}, "originalPosition": 56}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ac3453b1bba3155be6bdec06c2452f0d0606ce3a", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/ac3453b1bba3155be6bdec06c2452f0d0606ce3a", "committedDate": "2020-08-14T08:48:35Z", "message": "replace most usage of tryEmitXxx with emitXxx since these don't check Emission"}, "afterCommit": {"oid": "80d0e985e01f009f73d9e7dafa1e3e93840a7dff", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/80d0e985e01f009f73d9e7dafa1e3e93840a7dff", "committedDate": "2020-08-14T09:06:23Z", "message": "replace most usage of tryEmitXxx with emitXxx since these don't check Emission"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDIzNzM4", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467423738", "createdAt": "2020-08-14T09:08:06Z", "commit": {"oid": "ac3453b1bba3155be6bdec06c2452f0d0606ce3a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowODoyMlrOHAtYLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOTowODoyMlrOHAtYLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwNTUxNw==", "bodyText": "while migrating some of r-kafka code, I had the following in mind:\nwhat if r-core adds more \"negative\" Emission cases but I only handle one.\nHence the idea:\nAdd Emission#isSuccessful, so that it can be checked in places like this one.\nWDYT?", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470505517", "createdAt": "2020-08-14T09:08:22Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/DirectProcessor.java", "diffHunk": "@@ -147,14 +158,26 @@ public Emission emitComplete() {\n \t}\n \n \t@Override\n-\tpublic Emission emitError(Throwable t) {\n+\tpublic void onError(Throwable throwable) {\n+\t\temitError(throwable);\n+\t}\n+\n+\t@Override\n+\tpublic void emitError(Throwable error) {\n+\t\tEmission result = tryEmitError(error);\n+\t\tif (result == Emission.FAIL_TERMINATED) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d0e985e01f009f73d9e7dafa1e3e93840a7dff"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDI1NDY1", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467425465", "createdAt": "2020-08-14T09:10:50Z", "commit": {"oid": "80d0e985e01f009f73d9e7dafa1e3e93840a7dff"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToxMDo1MFrOHAtc-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQwOToxMDo1MFrOHAtc-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDUwNjc0Ng==", "bodyText": "idea:\n@SuppressWarnings(\"unused\")\nEmission emission = tryEmitEmpty();", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470506746", "createdAt": "2020-08-14T09:10:50Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/NextProcessor.java", "diffHunk": "@@ -114,17 +114,41 @@ public O block(@Nullable Duration timeout) {\n \t}\n \n \t@Override\n-\tpublic Emission emitEmpty() {\n-\t\treturn emitValue(null);\n+\tpublic final void onComplete() {\n+\t\t//no particular error condition handling for onComplete", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80d0e985e01f009f73d9e7dafa1e3e93840a7dff"}, "originalPosition": 7}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "180dbb9c5b57797f66bba86f0c40ee38493d5f75", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/180dbb9c5b57797f66bba86f0c40ee38493d5f75", "committedDate": "2020-08-14T09:17:32Z", "message": "Use switch statement for readability in emitNext"}, "afterCommit": {"oid": "47ac116e21849dedb9a61bbe5b5e38787e83bb8a", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/47ac116e21849dedb9a61bbe5b5e38787e83bb8a", "committedDate": "2020-08-14T10:30:26Z", "message": "fix #2329 Improve Emission API: hasSucceeded, orThrow"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NDkxMjM5", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467491239", "createdAt": "2020-08-14T11:04:01Z", "commit": {"oid": "7d97daff9a8e62cd724d723b263e6c84f084b299"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTYyNzUz", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467562753", "createdAt": "2020-08-14T13:12:26Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMjoyNlrOHA0DMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMjoyNlrOHA0DMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNDgzMg==", "bodyText": "this one is indeed inconsistent with other usages. tryEmitNext should probably not emit any error here", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470614832", "createdAt": "2020-08-14T13:12:26Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/UnicastProcessor.java", "diffHunk": "@@ -280,8 +328,7 @@ public Emission emitNext(T t) {\n \t\t\t\t\tex.initCause(e);\n \t\t\t\t}\n \t\t\t}\n-\t\t\tOperators.onDiscard(t, ctx);\n-\t\t\tonError(ex);\n+\t\t\tonError(ex); //FIXME should this really error ??", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 105}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTYzMTk4", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467563198", "createdAt": "2020-08-14T13:13:04Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzowNFrOHA0EbQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzowNFrOHA0EbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTE0OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\twhile (s.tryEmitNext(i).hasFailed() ) {\n          \n          \n            \n            \t\t\twhile (s.tryEmitNext(i).hasFailed()) {", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470615149", "createdAt": "2020-08-14T13:13:04Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxPublishOnTest.java", "diffHunk": "@@ -1186,8 +1184,15 @@ public void mapNotifiesOnce() throws InterruptedException {\n \t\t\t                            }\n \t\t                            }));\n \n+\t\tfinal long start = System.currentTimeMillis();\n \t\tfor (int i = 0; i < COUNT; i++) {\n-\t\t\twhile (s.emitNext(i).hasFailed() );\n+\t\t\tlong busyLoops = 0;\n+\t\t\twhile (s.tryEmitNext(i).hasFailed() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTYzNzMx", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467563731", "createdAt": "2020-08-14T13:13:47Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzo0N1rOHA0GAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzo0N1rOHA0GAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTU1NQ==", "bodyText": "nit: this whole thing can be replaced with Awaitility, I think", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470615555", "createdAt": "2020-08-14T13:13:47Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxPublishOnTest.java", "diffHunk": "@@ -1186,8 +1184,15 @@ public void mapNotifiesOnce() throws InterruptedException {\n \t\t\t                            }\n \t\t                            }));\n \n+\t\tfinal long start = System.currentTimeMillis();\n \t\tfor (int i = 0; i < COUNT; i++) {\n-\t\t\twhile (s.emitNext(i).hasFailed() );\n+\t\t\tlong busyLoops = 0;\n+\t\t\twhile (s.tryEmitNext(i).hasFailed() ) {\n+\t\t\t\tbusyLoops++;\n+\t\t\t\tif (busyLoops % 5000 == 0 && System.currentTimeMillis() - start >= 10_0000) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTYzODQ3", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467563847", "createdAt": "2020-08-14T13:13:56Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzo1NlrOHA0GYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxMzo1NlrOHA0GYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTY0OA==", "bodyText": "ditto", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470615648", "createdAt": "2020-08-14T13:13:56Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxPublishOnTest.java", "diffHunk": "@@ -1226,8 +1231,15 @@ public void mapManyFlushesAllValuesThoroughly() throws InterruptedException {\n \t\t\tlatch.countDown();\n \t\t});\n \n+\t\tfinal long start = System.currentTimeMillis();\n \t\tfor (int i = 1; i <= items; i++) {\n-\t\t\twhile (s.emitNext(String.valueOf(i)).hasFailed() );\n+\t\t\tlong busyLoops = 0;\n+\t\t\twhile (s.tryEmitNext(String.valueOf(i)).hasFailed() ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTY0MDM3", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467564037", "createdAt": "2020-08-14T13:14:10Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoxMFrOHA0G3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoxMFrOHA0G3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTc3NA==", "bodyText": "ditto", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470615774", "createdAt": "2020-08-14T13:14:10Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/scenarios/FluxSpecTests.java", "diffHunk": "@@ -1103,8 +1103,15 @@ public void collectFromMultipleThread1() throws Exception {\n \t\t\t\t\tlatch.countDown();\n \t\t\t\t});\n \n+\t\tfinal long start = System.currentTimeMillis();\n \t\tFlux.range(1, 1000).subscribe(data -> {\n-\t\t\twhile(head.emitNext(data).hasFailed());\n+\t\t\tlong busyLoops = 0;\n+\t\t\twhile(head.tryEmitNext(data).hasFailed()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTY0MTkz", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467564193", "createdAt": "2020-08-14T13:14:25Z", "commit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoyNlrOHA0HWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMzoxNDoyNlrOHA0HWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYxNTg5OA==", "bodyText": "ditto", "url": "https://github.com/reactor/reactor-core/pull/2327#discussion_r470615898", "createdAt": "2020-08-14T13:14:26Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/scenarios/FluxTests.java", "diffHunk": "@@ -589,7 +589,13 @@ private void parallelBufferedTimeoutTest(int iterations) throws InterruptedExcep\n \t\tlong start = System.currentTimeMillis();\n \n \t\tfor (String i : data) {\n-\t\t\twhile (deferred.emitNext(i).hasFailed() );\n+\t\t\tlong busyLoops = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6add6403b36a28e56d71b328d8aaf86ba984e7ef"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ef8bb534fdab2f8ca6910947c0ad6b6db8da0c", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/45ef8bb534fdab2f8ca6910947c0ad6b6db8da0c", "committedDate": "2020-08-14T16:21:42Z", "message": "[Polish] Add inners[] param to Operators dropMulticast private methods\n\nReviewed-in: #2327"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fb25075300c52c9233b70193736b590a56348c44", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/fb25075300c52c9233b70193736b590a56348c44", "committedDate": "2020-08-14T16:21:58Z", "message": "fix #2319 Split emitXxx/tryEmitXxx, more consistent use of hooks\n\ntryEmit methods should mostly not use onErrorDropped/onNextDropped or\nonDiscard hooks, leaving that to the emit methods (or to the user).\n\nmost usage of sinks in tests relies on `emit` methods, which is pretty\nconsistent with their new semantic of \"doing the right thing\" out of the\nbox (since most test usage didn't even check the Emission result).\n\nReviewed-in: #2327"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d2c4a420e341a2c9587b498d1fc1b48b6c2138da", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/d2c4a420e341a2c9587b498d1fc1b48b6c2138da", "committedDate": "2020-08-14T16:22:06Z", "message": "[polish] Avoid potential infinite busy looping in tests\n\nReviewed-in: #2327"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "19d093c6a624ebf6f2c77f7befb5944ac3104ba4", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/19d093c6a624ebf6f2c77f7befb5944ac3104ba4", "committedDate": "2020-08-14T16:22:37Z", "message": "fix #2329 Improve Emission API: polish status helpers, add orThrow()\n\n - `hasEmitted` is a bit confusing (\"Emission has emitted\") so it has\n been renamed to `hasSucceeded()`\n - `hasOverflowed()`, `wasPreviouslyCancelled()` and\n `wasPreviouslyTerminate()` don't bring much value compared to direct\n equal checks, even in terms of readability (contrary to `hasFailed()`\n so these 3 methods have been removed\n\nOn top of that, a new `orThrow()` method is added to `Emission` to\neasily turn a failure enum into throwing an exception (if absolutely\nneeded and relevant).\n\nReviewed-in: #2327"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9bcbd403d05ccf20747f40c0751856dc6f8fffc", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/c9bcbd403d05ccf20747f40c0751856dc6f8fffc", "committedDate": "2020-08-14T16:02:29Z", "message": "fixup unnecessary deprecated, fix emitValue(null) in NextProcessor"}, "afterCommit": {"oid": "19d093c6a624ebf6f2c77f7befb5944ac3104ba4", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/19d093c6a624ebf6f2c77f7befb5944ac3104ba4", "committedDate": "2020-08-14T16:22:37Z", "message": "fix #2329 Improve Emission API: polish status helpers, add orThrow()\n\n - `hasEmitted` is a bit confusing (\"Emission has emitted\") so it has\n been renamed to `hasSucceeded()`\n - `hasOverflowed()`, `wasPreviouslyCancelled()` and\n `wasPreviouslyTerminate()` don't bring much value compared to direct\n equal checks, even in terms of readability (contrary to `hasFailed()`\n so these 3 methods have been removed\n\nOn top of that, a new `orThrow()` method is added to `Emission` to\neasily turn a failure enum into throwing an exception (if absolutely\nneeded and relevant).\n\nReviewed-in: #2327"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NzIyNjcy", "url": "https://github.com/reactor/reactor-core/pull/2327#pullrequestreview-467722672", "createdAt": "2020-08-14T16:47:31Z", "commit": {"oid": "c9bcbd403d05ccf20747f40c0751856dc6f8fffc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2826, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}