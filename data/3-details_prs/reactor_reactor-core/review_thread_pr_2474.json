{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE0NjY0ODU3", "number": 2474, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0ODo1NlrOE00Gaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozMTowN1rOE04sTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODE1MDE5OnYy", "diffSide": "RIGHT", "path": "gradle/releaser.gradle", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxMzo0ODo1NlrOHsvh0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNDo1OTozMFrOHsyw9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3ODA5OA==", "bodyText": "I suggest passing the attribute directly via the asciidoc plugin, ie \n  \n    \n      reactor-core/gradle/asciidoc.gradle\n    \n    \n         Line 44\n      in\n      4bdfbd3\n    \n    \n    \n    \n\n        \n          \n           attributes 'allow-uri-read': '',", "url": "https://github.com/reactor/reactor-core/pull/2474#discussion_r516678098", "createdAt": "2020-11-03T13:48:56Z", "author": {"login": "ericbottard"}, "path": "gradle/releaser.gradle", "diffHunk": "@@ -55,25 +55,40 @@ task copyReadme(type: Copy, group: \"releaser helpers\", description: \"copies the\n \tinto rootProject.buildDir\n }\n \n+task copyGettingStarted(type: Copy, group: \"releaser helpers\", description: \"copies the gettingStarted.adoc in preparation for search and replace\") {\n+\tfrom(rootProject.rootDir) {\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n+\t}\n+\tinto rootProject.buildDir\n+}\n+\n task bumpVersionsInReadme(type: Copy, group: \"releaser helpers\", description: \"replaces versions in README\") {\n+\tdef bomVersion = rootProject.findProperty(\"bomVersion\")\n \tdef oldVersion = rootProject.findProperty(\"oldVersion\")\n \tdef currentVersion = rootProject.findProperty(\"currentVersion\")\n \tdef nextVersion = rootProject.findProperty(\"nextVersion\")\n \tdef oldSnapshot = currentVersion?.replace(\"RELEASE\", \"BUILD-SNAPSHOT\")\n \n \tonlyIf { oldVersion != null && currentVersion != null && nextVersion != null }\n \tdependsOn copyReadme\n+\tdependsOn copyGettingStarted\n \n \tdoLast {\n \t\tprintln \"Will replace $oldVersion with $currentVersion and $oldSnapshot with $nextVersion\"\n+\t\tif (bomVersion == null) println \"No `bomVersion` set, will not change bom version in gettingStarted.adoc\"\n+\t\telse println \"Will change bomVersion in gettingStarted.adoc to $bomVersion\"\n \t}\n \tfrom(rootProject.buildDir) {\n \t\tinclude 'README.md'\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n \t}\n \tinto rootProject.rootDir\n-\tfilter { line -> line\n-\t\t.replace(oldVersion, currentVersion)\n-\t\t.replace(oldSnapshot, nextVersion)\n+\tfilter { line -> (bomVersion == null) ?\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion) :\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion)\n+\t\t\t.replaceAll(\"\\\\:reactorReleaseTrain\\\\: .*\", \":reactorReleaseTrain: \" + bomVersion)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5dafb0f983da4f963e0543cb4d9e48ec3ba8000"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjcyNzQ3OA==", "bodyText": "let's put it in the gradle.properties then, and a manual step on top of the README bump task", "url": "https://github.com/reactor/reactor-core/pull/2474#discussion_r516727478", "createdAt": "2020-11-03T14:54:35Z", "author": {"login": "simonbasle"}, "path": "gradle/releaser.gradle", "diffHunk": "@@ -55,25 +55,40 @@ task copyReadme(type: Copy, group: \"releaser helpers\", description: \"copies the\n \tinto rootProject.buildDir\n }\n \n+task copyGettingStarted(type: Copy, group: \"releaser helpers\", description: \"copies the gettingStarted.adoc in preparation for search and replace\") {\n+\tfrom(rootProject.rootDir) {\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n+\t}\n+\tinto rootProject.buildDir\n+}\n+\n task bumpVersionsInReadme(type: Copy, group: \"releaser helpers\", description: \"replaces versions in README\") {\n+\tdef bomVersion = rootProject.findProperty(\"bomVersion\")\n \tdef oldVersion = rootProject.findProperty(\"oldVersion\")\n \tdef currentVersion = rootProject.findProperty(\"currentVersion\")\n \tdef nextVersion = rootProject.findProperty(\"nextVersion\")\n \tdef oldSnapshot = currentVersion?.replace(\"RELEASE\", \"BUILD-SNAPSHOT\")\n \n \tonlyIf { oldVersion != null && currentVersion != null && nextVersion != null }\n \tdependsOn copyReadme\n+\tdependsOn copyGettingStarted\n \n \tdoLast {\n \t\tprintln \"Will replace $oldVersion with $currentVersion and $oldSnapshot with $nextVersion\"\n+\t\tif (bomVersion == null) println \"No `bomVersion` set, will not change bom version in gettingStarted.adoc\"\n+\t\telse println \"Will change bomVersion in gettingStarted.adoc to $bomVersion\"\n \t}\n \tfrom(rootProject.buildDir) {\n \t\tinclude 'README.md'\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n \t}\n \tinto rootProject.rootDir\n-\tfilter { line -> line\n-\t\t.replace(oldVersion, currentVersion)\n-\t\t.replace(oldSnapshot, nextVersion)\n+\tfilter { line -> (bomVersion == null) ?\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion) :\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion)\n+\t\t\t.replaceAll(\"\\\\:reactorReleaseTrain\\\\: .*\", \":reactorReleaseTrain: \" + bomVersion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3ODA5OA=="}, "originalCommit": {"oid": "a5dafb0f983da4f963e0543cb4d9e48ec3ba8000"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjczMTEyNw==", "bodyText": "updated", "url": "https://github.com/reactor/reactor-core/pull/2474#discussion_r516731127", "createdAt": "2020-11-03T14:59:30Z", "author": {"login": "simonbasle"}, "path": "gradle/releaser.gradle", "diffHunk": "@@ -55,25 +55,40 @@ task copyReadme(type: Copy, group: \"releaser helpers\", description: \"copies the\n \tinto rootProject.buildDir\n }\n \n+task copyGettingStarted(type: Copy, group: \"releaser helpers\", description: \"copies the gettingStarted.adoc in preparation for search and replace\") {\n+\tfrom(rootProject.rootDir) {\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n+\t}\n+\tinto rootProject.buildDir\n+}\n+\n task bumpVersionsInReadme(type: Copy, group: \"releaser helpers\", description: \"replaces versions in README\") {\n+\tdef bomVersion = rootProject.findProperty(\"bomVersion\")\n \tdef oldVersion = rootProject.findProperty(\"oldVersion\")\n \tdef currentVersion = rootProject.findProperty(\"currentVersion\")\n \tdef nextVersion = rootProject.findProperty(\"nextVersion\")\n \tdef oldSnapshot = currentVersion?.replace(\"RELEASE\", \"BUILD-SNAPSHOT\")\n \n \tonlyIf { oldVersion != null && currentVersion != null && nextVersion != null }\n \tdependsOn copyReadme\n+\tdependsOn copyGettingStarted\n \n \tdoLast {\n \t\tprintln \"Will replace $oldVersion with $currentVersion and $oldSnapshot with $nextVersion\"\n+\t\tif (bomVersion == null) println \"No `bomVersion` set, will not change bom version in gettingStarted.adoc\"\n+\t\telse println \"Will change bomVersion in gettingStarted.adoc to $bomVersion\"\n \t}\n \tfrom(rootProject.buildDir) {\n \t\tinclude 'README.md'\n+\t\tinclude \"docs/asciidoc/gettingStarted.adoc\"\n \t}\n \tinto rootProject.rootDir\n-\tfilter { line -> line\n-\t\t.replace(oldVersion, currentVersion)\n-\t\t.replace(oldSnapshot, nextVersion)\n+\tfilter { line -> (bomVersion == null) ?\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion) :\n+\t\tline.replace(oldVersion, currentVersion)\n+\t\t\t.replace(oldSnapshot, nextVersion)\n+\t\t\t.replaceAll(\"\\\\:reactorReleaseTrain\\\\: .*\", \":reactorReleaseTrain: \" + bomVersion)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjY3ODA5OA=="}, "originalCommit": {"oid": "a5dafb0f983da4f963e0543cb4d9e48ec3ba8000"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzODkwMjUzOnYy", "diffSide": "RIGHT", "path": "docs/asciidoc/gettingStarted.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNjozMTowN1rOHs25zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMTozNzo1NVrOHt_WBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc5ODkyNw==", "bodyText": "wouldn't it be better to link to https://projectreactor.io/docs that contains both the release train + core's version?", "url": "https://github.com/reactor/reactor-core/pull/2474#discussion_r516798927", "createdAt": "2020-11-03T16:31:07Z", "author": {"login": "bsideup"}, "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -83,20 +83,25 @@ However, if you want to force the use of a specific artifact's version, you can\n it when adding your dependency, as you usually would. You can also forgo the BOM entirely\n and specify dependencies by their artifact versions.\n \n+WARNING: As of this version (reactor-core {project-version}), the latest stable BOM in the associated\n+release train line is `{reactorReleaseTrain}`, which is what is used in snippets below.\n+There might be newer versions since then (including snapshots, milestones and new release train lines),\n+see https://github.com/reactor/reactor/releases/.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39ad59e219ca2648f79d4d5251193d8b559acffc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzk4NTc5OA==", "bodyText": "indeed, fixed", "url": "https://github.com/reactor/reactor-core/pull/2474#discussion_r517985798", "createdAt": "2020-11-05T11:37:55Z", "author": {"login": "simonbasle"}, "path": "docs/asciidoc/gettingStarted.adoc", "diffHunk": "@@ -83,20 +83,25 @@ However, if you want to force the use of a specific artifact's version, you can\n it when adding your dependency, as you usually would. You can also forgo the BOM entirely\n and specify dependencies by their artifact versions.\n \n+WARNING: As of this version (reactor-core {project-version}), the latest stable BOM in the associated\n+release train line is `{reactorReleaseTrain}`, which is what is used in snippets below.\n+There might be newer versions since then (including snapshots, milestones and new release train lines),\n+see https://github.com/reactor/reactor/releases/.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjc5ODkyNw=="}, "originalCommit": {"oid": "39ad59e219ca2648f79d4d5251193d8b559acffc"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 829, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}