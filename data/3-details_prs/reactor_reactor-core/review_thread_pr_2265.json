{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mzc0MDE5", "number": 2265, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzowOVrOEOvepA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNToxMlrOEPH9ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkzNDEyOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/withMicrometerTest/java/reactor/core/scheduler/SchedulersMetricsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzowOVrOGyD9bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzowOVrOGyD9bA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Njg2MA==", "bodyText": "unnecessary rename / typo teardDown", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455146860", "createdAt": "2020-07-15T15:37:09Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/withMicrometerTest/java/reactor/core/scheduler/SchedulersMetricsTest.java", "diffHunk": "@@ -32,31 +33,33 @@\n @RunWith(JUnitParamsRunner.class)\n public class SchedulersMetricsTest {\n \n-\tSimpleMeterRegistry simpleMeterRegistry;\n \n \t@Rule\n \tpublic AutoDisposingRule afterTest = new AutoDisposingRule();\n \n+\tprivate MeterRegistry registry;\n+\tprivate MeterRegistry previousRegistry;\n+\n \t@Before\n \tpublic void setUp() {\n-\t\tsimpleMeterRegistry = new SimpleMeterRegistry();\n-\t\tMetrics.addRegistry(simpleMeterRegistry);\n+\t\tregistry = new SimpleMeterRegistry();\n+\t\tpreviousRegistry = reactor.util.Metrics.Configuration.useRegistry(registry);\n \t\tSchedulers.enableMetrics();\n \t}\n \n \t@After\n-\tpublic void tearDown() {\n+\tpublic void teardDown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkzNjg3OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzo1MlrOGyD_Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxNDoyNjoxOFrOGytg_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzMwNw==", "bodyText": "Maybe rename MicrometerConfiguration ?", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455147307", "createdAt": "2020-07-15T15:37:52Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "diffHunk": "@@ -49,4 +52,23 @@ public static final boolean isInstrumentationAvailable() {\n \t\treturn isMicrometerAvailable;\n \t}\n \n+\tpublic static class Configuration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTgyNzcxMA==", "bodyText": "(the rationale is that this strongly signals classloading of Micrometer. an added benefit is if we ever add support of other metrics frameworks)", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455827710", "createdAt": "2020-07-16T14:26:18Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "diffHunk": "@@ -49,4 +52,23 @@ public static final boolean isInstrumentationAvailable() {\n \t\treturn isMicrometerAvailable;\n \t}\n \n+\tpublic static class Configuration {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzMwNw=="}, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzODkzOTA0OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozODoyOVrOGyEAnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozODoyOVrOGyEAnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzY3OQ==", "bodyText": "Move on getRegistry and mention the default is globalRegistry ?", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455147679", "createdAt": "2020-07-15T15:38:29Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "diffHunk": "@@ -49,4 +52,23 @@ public static final boolean isInstrumentationAvailable() {\n \t\treturn isMicrometerAvailable;\n \t}\n \n+\tpublic static class Configuration {\n+\n+\t\t/**\n+\t\t * The registry to use in reactor for metrics related purposes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0Mjk0NTM4OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNToxMlrOGyqYHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNToxMlrOGyqYHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NjI4Nw==", "bodyText": "Fix", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455776287", "createdAt": "2020-07-16T13:15:12Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6072,6 +6073,11 @@ public int getPrefetch() {\n \t * Metrics are gathered on {@link Subscriber} events, and it is recommended to also\n \t * {@link #name(String) name} (and optionally {@link #tag(String, String) tag}) the\n \t * sequence.\n+\t * <p>\n+     * The {@link MeterRegistry} used by reactor can be configured via", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 888, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}