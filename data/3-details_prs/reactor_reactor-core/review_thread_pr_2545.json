{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQyMDAwNTQ0", "number": 2545, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxMToyOVrOFG0Ctg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwOTozMjoxMlrOFP7A9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjg4NDM4OnYy", "diffSide": "RIGHT", "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxMToyOVrOIH_1Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xN1QxMTo0ODoyMlrOIVRA6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1Njc5MQ==", "bodyText": "looking at this, I'm thinking maybe a second method like private String format could be used in all the log methods, in order to mutualize this if/else choice, wdyt?\nthe new method would get two strings as input: the prefix ([TRACE] and the other variants) and the user-provided message / format(format, arguments) result. it would then decide whether or not to put the thread name in the middle, centralizing that decision.", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r545256791", "createdAt": "2020-12-17T17:11:29Z", "author": {"login": "simonbasle"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -83,16 +85,28 @@ public boolean isTraceEnabled() {\n \n \t@Override\n \tpublic synchronized void trace(String msg) {\n-\t\tthis.log.format(\"[TRACE] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n+\t\tif(logCurrentThreadName){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0112daf6b7ea4baedc2bf96cffc5d13ec814d7d"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTE2OTc3MQ==", "bodyText": "Thanks for the suggestion, that way is much cleaner.", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559169771", "createdAt": "2021-01-17T11:48:22Z", "author": {"login": "vdjuketic"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -83,16 +85,28 @@ public boolean isTraceEnabled() {\n \n \t@Override\n \tpublic synchronized void trace(String msg) {\n-\t\tthis.log.format(\"[TRACE] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n+\t\tif(logCurrentThreadName){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1Njc5MQ=="}, "originalCommit": {"oid": "d0112daf6b7ea4baedc2bf96cffc5d13ec814d7d"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyNjg5NDE3OnYy", "diffSide": "RIGHT", "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxMzozM1rOIH_7AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QxNzoxMzozM1rOIH_7AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTI1ODI0MA==", "bodyText": "I don't think there is much need to make it mutable. could you replace the setter with a second constructor taking the boolean directly, and make the field final?", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r545258240", "createdAt": "2020-12-17T17:13:33Z", "author": {"login": "simonbasle"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -166,17 +216,37 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n+\t\tif(logCurrentThreadName){\n+\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n+\t\t} else {\n+\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n+\t\t}\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n+\t\tif(logCurrentThreadName){\n+\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n+\t\t} else {\n+\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n+\t\t}\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n-\t\tthis.err.format(\"[ERROR] (%s) %s - %s\\n\", Thread.currentThread().getName(), msg, t);\n+\t\tif(logCurrentThreadName){\n+\t\t\tthis.err.format(\"[ERROR] (%s) %s - %s\\n\", Thread.currentThread().getName(), msg, t);\n+\t\t} else {\n+\t\t\tthis.err.format(\"[ERROR] %s - %s\\n\", msg, t);\n+\t\t}\n \t\tt.printStackTrace(this.err);\n \t}\n+\n+\tpublic boolean isLogCurrentThreadName() {\n+\t\treturn logCurrentThreadName;\n+\t}\n+\n+\tpublic void setLogCurrentThreadName(boolean logCurrentThreadName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0112daf6b7ea4baedc2bf96cffc5d13ec814d7d"}, "originalPosition": 183}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzUyMjM5ODYyOnYy", "diffSide": "RIGHT", "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwOTozMjoxMlrOIVgtpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQxODo1MDo0NFrOIV0Urg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ==", "bodyText": "can you just ensure the log levels are padded left? [%5s] in both format Strings should suffice", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559426981", "createdAt": "2021-01-18T09:32:12Z", "author": {"login": "simonbasle"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyOTA3Ng==", "bodyText": "ah I see you've fixed that directly in each method. I'll let you decide if you prefer to mutualize that padding in the logContent method or not. Just let me know in response to this comment.", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559429076", "createdAt": "2021-01-18T09:35:33Z", "author": {"login": "simonbasle"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ=="}, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ0MTc4Ng==", "bodyText": "I noticed that WARN and INFO level logging is padded differently than the rest and I wasn't sure if there's a specific reason for that so I did it this way. There's a couple of different unit tests relying on that padding as well.", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559441786", "createdAt": "2021-01-18T09:54:57Z", "author": {"login": "vdjuketic"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ=="}, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQ0NDMzNw==", "bodyText": "I don't mind updating those unit tests if every log type is supposed to have that padding", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559444337", "createdAt": "2021-01-18T09:58:43Z", "author": {"login": "vdjuketic"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ=="}, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTUzNDcwMg==", "bodyText": "yeah it was sort of a cosmetic thing, intending to align the log level part of the output. with your latest changes the unit tests are fine. it is more a question of putting the padding in the logContent method vs in the info(...) and warn(...) methods.", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559534702", "createdAt": "2021-01-18T12:32:25Z", "author": {"login": "simonbasle"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ=="}, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTc0ODI3MA==", "bodyText": "In that case i think we can leave it how it is right now with padding in the individual methods", "url": "https://github.com/reactor/reactor-core/pull/2545#discussion_r559748270", "createdAt": "2021-01-18T18:50:44Z", "author": {"login": "vdjuketic"}, "path": "reactor-test/src/main/java/reactor/test/util/TestLogger.java", "diffHunk": "@@ -216,37 +176,30 @@ public boolean isErrorEnabled() {\n \n \t@Override\n \tpublic synchronized void error(String msg) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), msg);\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", msg);\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", msg));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String format, Object... arguments) {\n-\t\tif(logCurrentThreadName){\n-\t\t\tthis.err.format(\"[ERROR] (%s) %s\\n\", Thread.currentThread().getName(), format(format, arguments));\n-\t\t} else {\n-\t\t\tthis.err.format(\"[ERROR] %s\\n\", format(format, arguments));\n-\t\t}\n+\t\tthis.err.format(logContent(\"ERROR\", format(format, arguments)));\n \t}\n \n \t@Override\n \tpublic synchronized void error(String msg, Throwable t) {\n+\t\tthis.err.format(logContent(\"ERROR\", String.format(\"%s - %s\", msg, t)));\n+\t\tt.printStackTrace(this.err);\n+\t}\n+\n+\tString logContent(String logType, String msg){", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQyNjk4MQ=="}, "originalCommit": {"oid": "6acafbe9e4e3987cb7b61c972ad2ee261cfeb7e2"}, "originalPosition": 189}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 873, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}