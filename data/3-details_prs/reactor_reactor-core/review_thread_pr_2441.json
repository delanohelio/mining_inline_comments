{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzOTY5NDMz", "number": 2441, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0Njo1MlrOEt6gGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0ODo0OFrOEt6jwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTc5ODY1OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/test/java/reactor/core/ExceptionsTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0Njo1MlrOHh_sQQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0Njo1MlrOHh_sQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwODU3Nw==", "bodyText": "Not needed since each test gets a new instance", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505408577", "createdAt": "2020-10-15T09:46:52Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/test/java/reactor/core/ExceptionsTest.java", "diffHunk": "@@ -38,6 +39,16 @@\n  */\n public class ExceptionsTest {\n \n+\t//used for two addThrowableXxx tests lower in the class\n+\tvolatile @Nullable Throwable addThrowable;\n+\tstatic final AtomicReferenceFieldUpdater<ExceptionsTest, Throwable> ADD_THROWABLE =\n+\t\t\tAtomicReferenceFieldUpdater.newUpdater(ExceptionsTest.class, Throwable.class, \"addThrowable\");\n+\n+\t@BeforeEach\n+\tpublic void resetAddThrowable() {\n+\t\taddThrowable = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4054f3ff88d21cb616972037ed6925c717872a0"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgwMjAzOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NzozMVrOHh_uUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0NzozMVrOHh_uUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQwOTEwNg==", "bodyText": "Not needed as each test gets a new instance of FluxReplayTest", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505409106", "createdAt": "2020-10-15T09:47:31Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxReplayTest.java", "diffHunk": "@@ -41,6 +41,22 @@\n \n public class FluxReplayTest extends FluxOperatorTest<String, String> {\n \n+\tVirtualTimeScheduler vts;\n+\n+\t@BeforeEach\n+\tpublic void vtsStart() {\n+\t\t//delayElements (notably) now uses parallel() so VTS must be enabled everywhere\n+\t\tvts = VirtualTimeScheduler.getOrSet();\n+\t}\n+\n+\t@AfterEach\n+\tpublic void vtsStop() {\n+\t\tvts = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4054f3ff88d21cb616972037ed6925c717872a0"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE2NTgwODAyOnYy", "diffSide": "LEFT", "path": "reactor-core/src/test/java/reactor/core/scheduler/SchedulersTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo0ODo0OFrOHh_yMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwOTo1Njo1M1rOHiAIOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMDA5OA==", "bodyText": "I assume N was unused?", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505410098", "createdAt": "2020-10-15T09:48:48Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/test/java/reactor/core/scheduler/SchedulersTest.java", "diffHunk": "@@ -623,10 +624,6 @@ public void assertRejectingScheduler(Scheduler scheduler) {\n \t\t}\n \t}\n \n-\t//private final int             BUFFER_SIZE     = 8;\n-\tprivate final AtomicReference<Throwable> exceptionThrown = new AtomicReference<>();\n-\tprivate final int                        N               = 17;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b4054f3ff88d21cb616972037ed6925c717872a0"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxNTczNg==", "bodyText": "yes, it was indeed", "url": "https://github.com/reactor/reactor-core/pull/2441#discussion_r505415736", "createdAt": "2020-10-15T09:56:53Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/test/java/reactor/core/scheduler/SchedulersTest.java", "diffHunk": "@@ -623,10 +624,6 @@ public void assertRejectingScheduler(Scheduler scheduler) {\n \t\t}\n \t}\n \n-\t//private final int             BUFFER_SIZE     = 8;\n-\tprivate final AtomicReference<Throwable> exceptionThrown = new AtomicReference<>();\n-\tprivate final int                        N               = 17;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTQxMDA5OA=="}, "originalCommit": {"oid": "b4054f3ff88d21cb616972037ed6925c717872a0"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 809, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}