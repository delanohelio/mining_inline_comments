{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MDgxNTgy", "number": 2418, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozMDo1OVrOErpJdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozMjozNVrOErpMcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTk4Mzg5OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/SinkEmptySerialized.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozMDo1OVrOHehhMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDo0MDowNVrOHeh8wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc2ODQ5Ng==", "bodyText": "err? Why this change?", "url": "https://github.com/reactor/reactor-core/pull/2418#discussion_r501768496", "createdAt": "2020-10-08T14:30:59Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/SinkEmptySerialized.java", "diffHunk": "@@ -21,7 +21,8 @@\n import java.util.Objects;\n import java.util.stream.Stream;\n \n-class SinkEmptySerialized<T> extends SerializedSink implements InternalEmptySink<T>, ContextHolder {\n+class SinkEmptySerialized<T> extends SinksSpecs.AbstractSerializedSink", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7febc51bd7bf8beb0796507c3ac2d2864146f4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc3NTU1Mg==", "bodyText": "because I consider this a good polish. having the internal classes under SinksSpecs rather than next to it prevent unnecessary IDE completion and confusion. unless you mean the Abstract prefix? we do rarely use it, indeed, but I feel SerializedSink is more ambiguous than SinksSpecs.AbstractSerializedSink...", "url": "https://github.com/reactor/reactor-core/pull/2418#discussion_r501775552", "createdAt": "2020-10-08T14:40:05Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/SinkEmptySerialized.java", "diffHunk": "@@ -21,7 +21,8 @@\n import java.util.Objects;\n import java.util.stream.Stream;\n \n-class SinkEmptySerialized<T> extends SerializedSink implements InternalEmptySink<T>, ContextHolder {\n+class SinkEmptySerialized<T> extends SinksSpecs.AbstractSerializedSink", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc2ODQ5Ng=="}, "originalCommit": {"oid": "be7febc51bd7bf8beb0796507c3ac2d2864146f4"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTk5MTUzOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/test/java/reactor/core/publisher/SinksTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozMjozNVrOHehmAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxNDozMjozNVrOHehmAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTc2OTczMA==", "bodyText": "maybe not \"is serialized\" but \"is protected from non-serialized access\"?", "url": "https://github.com/reactor/reactor-core/pull/2418#discussion_r501769730", "createdAt": "2020-10-08T14:32:35Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/SinksTest.java", "diffHunk": "@@ -50,6 +50,30 @@\n  */\n class SinksTest {\n \n+\t@Test\n+\tvoid oneIsSerialized() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "be7febc51bd7bf8beb0796507c3ac2d2864146f4"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 793, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}