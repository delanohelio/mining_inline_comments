{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkzNTgwNjI3", "number": 2082, "title": "[test] Add a post-test listener that resets hooks consistently", "bodyText": "cc @sbrannen", "createdAt": "2020-03-25T13:14:59Z", "url": "https://github.com/reactor/reactor-core/pull/2082", "merged": true, "mergeCommit": {"oid": "9bef11032f68ef920e90f54cdf07e9df289be8f4"}, "closed": true, "closedAt": "2020-03-26T09:55:31Z", "author": {"login": "bsideup"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRHTt6AH2gAyMzkzNTgwNjI3OmM0Mzg1ODgwYjdlOGM3ZWU4NTYzZGE4MzNjNGE4NTVkYjZiNmQwMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcRY7HOgFqTM4MTg0MzIwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008", "author": {"user": {"login": "bsideup", "name": "Sergei Egorov"}}, "url": "https://github.com/reactor/reactor-core/commit/c4385880b7e8c7ee8563da833c4a855db6b6d008", "committedDate": "2020-03-25T13:13:40Z", "message": "Add a `TestExecutionListener` that performs post-test cleanups"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjE2NjQ0", "url": "https://github.com/reactor/reactor-core/pull/2082#pullrequestreview-381216644", "createdAt": "2020-03-25T14:43:42Z", "commit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMjE3ODM3", "url": "https://github.com/reactor/reactor-core/pull/2082#pullrequestreview-381217837", "createdAt": "2020-03-25T14:44:53Z", "commit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0NDo1M1rOF7ejzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQxNDo0OTowOFrOF7exVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxMDk4OA==", "bodyText": "Have you considered importing the junit-bom to manage all JUnit 5 artifact versions?", "url": "https://github.com/reactor/reactor-core/pull/2082#discussion_r397910988", "createdAt": "2020-03-25T14:44:53Z", "author": {"login": "sbrannen"}, "path": "reactor-core/build.gradle", "diffHunk": "@@ -64,6 +64,7 @@ dependencies {\n \n   testCompile \"junit:junit:$jUnitVersion\"\n   testCompile \"org.junit.jupiter:junit-jupiter-api:${jUnitJupiterVersion}\"\n+  testCompile \"org.junit.platform:junit-platform-launcher:1.6.1\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzkxNDQ1Mw==", "bodyText": "Do you want to invoke reset() for all test identifiers?\nFYI: as currently implemented, reset() would get invoked after every test method and after every test class.\nSo, if you just want to do this for test methods, you would need to check if the TestIdentifier represents a container or a test.", "url": "https://github.com/reactor/reactor-core/pull/2082#discussion_r397914453", "createdAt": "2020-03-25T14:49:08Z", "author": {"login": "sbrannen"}, "path": "reactor-core/src/test/java/reactor/ReactorTestExecutionListener.java", "diffHunk": "@@ -0,0 +1,50 @@\n+/*\n+ * Copyright (c) 2020-Present Pivotal Software Inc, All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       https://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package reactor;\n+\n+import org.junit.platform.engine.TestExecutionResult;\n+import org.junit.platform.launcher.TestExecutionListener;\n+import org.junit.platform.launcher.TestIdentifier;\n+import reactor.core.publisher.Hooks;\n+import reactor.core.scheduler.Schedulers;\n+\n+public class ReactorTestExecutionListener implements TestExecutionListener {\n+\n+\tpublic static void reset() {\n+\t\tHooks.resetOnOperatorDebug();\n+\n+\t\tHooks.resetOnEachOperator();\n+\t\tHooks.resetOnLastOperator();\n+\n+\t\tHooks.resetOnErrorDropped();\n+\t\tHooks.resetOnNextDropped();\n+\n+\t\tHooks.resetOnNextError();\n+\t\tHooks.resetOnOperatorError();\n+\n+\t\tSchedulers.resetOnHandleError();\n+\t\tSchedulers.resetFactory();\n+\t\tSchedulers.resetOnScheduleHooks();\n+\n+\t\t// TODO capture non-default schedulers and shutdown them\n+\t}\n+\n+\t@Override\n+\tpublic void executionFinished(TestIdentifier testIdentifier, TestExecutionResult testExecutionResult) {\n+\t\treset();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxMzI5NTk5", "url": "https://github.com/reactor/reactor-core/pull/2082#pullrequestreview-381329599", "createdAt": "2020-03-25T16:37:13Z", "commit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgxODQzMjA2", "url": "https://github.com/reactor/reactor-core/pull/2082#pullrequestreview-381843206", "createdAt": "2020-03-26T09:45:05Z", "commit": {"oid": "c4385880b7e8c7ee8563da833c4a855db6b6d008"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2925, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}