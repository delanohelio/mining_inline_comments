{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NDUyMzg2", "number": 2045, "title": "fix #1973 Resolve a race that prevent decrement of REMAINING_TASK", "bodyText": "we might not need a complete reimplementation as in #2040 after all, if this fixes #1973 and #1992 (to be verified for the later)\nthis fixes #1973 only", "createdAt": "2020-02-12T18:08:37Z", "url": "https://github.com/reactor/reactor-core/pull/2045", "merged": true, "mergeCommit": {"oid": "ae86602c5d37658b8e0bea8323ea3ef66a9211ec"}, "closed": true, "closedAt": "2020-02-14T09:11:22Z", "author": {"login": "simonbasle"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDqTQXAH2gAyMzc0NDUyMzg2OjFmYjQzNGY3M2FiYjZjZDhhMTAxNzA3NzVhNzQ1YTBiMjRjMTM0NzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcELYdVgFqTM1ODc4MDk4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1fb434f73abb6cd8a10170775a745a0b24c13475", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/1fb434f73abb6cd8a10170775a745a0b24c13475", "committedDate": "2020-02-12T18:04:54Z", "message": "fix #1973 Resolve a race that prevent decrement of REMAINING_TASK"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MTEyMjU3", "url": "https://github.com/reactor/reactor-core/pull/2045#pullrequestreview-358112257", "createdAt": "2020-02-13T10:37:35Z", "commit": {"oid": "1fb434f73abb6cd8a10170775a745a0b24c13475"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozNzozNVrOFpOzmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozNzozNVrOFpOzmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3ODUyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t1, 2, r -> new Thread(r,\"raceActiveDeferredDirectDispose\"), 3);\n          \n          \n            \n            \t\t\t\t1, 2, r -> new Thread(r, \"raceActiveDeferredDirectDispose\"), 3);", "url": "https://github.com/reactor/reactor-core/pull/2045#discussion_r378778520", "createdAt": "2020-02-13T10:37:35Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/scheduler/BoundedElasticSchedulerTest.java", "diffHunk": "@@ -680,6 +681,47 @@ public void defaultBoundedElasticConfigurationIsConsistentWithJavadoc() {\n \t\t\t\t.isEqualTo(Schedulers.DEFAULT_BOUNDED_ELASTIC_QUEUESIZE);\n \t}\n \n+\t@Test\n+\tpublic void raceActiveWorkerDisposeAndDeferredDirectDispose() {\n+\t\tBoundedElasticScheduler boundedElasticScheduler = new BoundedElasticScheduler(\n+\t\t\t\t1, 2, r -> new Thread(r,\"raceActiveDeferredDirectDispose\"), 3);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb434f73abb6cd8a10170775a745a0b24c13475"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MTEyOTQ3", "url": "https://github.com/reactor/reactor-core/pull/2045#pullrequestreview-358112947", "createdAt": "2020-02-13T10:38:38Z", "commit": {"oid": "1fb434f73abb6cd8a10170775a745a0b24c13475"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozODozOFrOFpO1tw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxMDozODozOFrOFpO1tw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODc3OTA2Mw==", "bodyText": "schedule always happens before the race starts due to the method ref on dispose. Is it intentionally?", "url": "https://github.com/reactor/reactor-core/pull/2045#discussion_r378779063", "createdAt": "2020-02-13T10:38:38Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/scheduler/BoundedElasticSchedulerTest.java", "diffHunk": "@@ -680,6 +681,47 @@ public void defaultBoundedElasticConfigurationIsConsistentWithJavadoc() {\n \t\t\t\t.isEqualTo(Schedulers.DEFAULT_BOUNDED_ELASTIC_QUEUESIZE);\n \t}\n \n+\t@Test\n+\tpublic void raceActiveWorkerDisposeAndDeferredDirectDispose() {\n+\t\tBoundedElasticScheduler boundedElasticScheduler = new BoundedElasticScheduler(\n+\t\t\t\t1, 2, r -> new Thread(r,\"raceActiveDeferredDirectDispose\"), 3);\n+\n+\t\tBoundedElasticScheduler.ActiveWorker activeWorker =\n+\t\t\t\t(BoundedElasticScheduler.ActiveWorker) boundedElasticScheduler.createWorker();\n+\n+\t\tint maxRounds = 1_000_000;\n+\t\tAtomicInteger incrementWon = new AtomicInteger();\n+\t\tAtomicInteger rejected = new AtomicInteger();\n+\t\tint rounds = 0;\n+\t\twhile(rounds++ < maxRounds) {\n+\t\t\ttry {\n+\t\t\t\tif (rounds % 10 == 0) { //from time to time reverse the race\n+\t\t\t\t\tRaceTestUtils.race(\n+\t\t\t\t\t\t\tactiveWorker::dispose,\n+\t\t\t\t\t\t\tboundedElasticScheduler.schedule(incrementWon::incrementAndGet)::dispose", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1fb434f73abb6cd8a10170775a745a0b24c13475"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3484b889fdac8cc79b7984a89dc186f2a3886b17", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/3484b889fdac8cc79b7984a89dc186f2a3886b17", "committedDate": "2020-02-13T16:17:16Z", "message": "fix review issues: race test didn't use runnable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4MzczODc5", "url": "https://github.com/reactor/reactor-core/pull/2045#pullrequestreview-358373879", "createdAt": "2020-02-13T16:39:38Z", "commit": {"oid": "3484b889fdac8cc79b7984a89dc186f2a3886b17"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjozOTozOVrOFpbFCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNjozOTozOVrOFpbFCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk3OTU5NA==", "bodyText": "Missing lambda too", "url": "https://github.com/reactor/reactor-core/pull/2045#discussion_r378979594", "createdAt": "2020-02-13T16:39:39Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/scheduler/BoundedElasticSchedulerTest.java", "diffHunk": "@@ -680,6 +681,47 @@ public void defaultBoundedElasticConfigurationIsConsistentWithJavadoc() {\n \t\t\t\t.isEqualTo(Schedulers.DEFAULT_BOUNDED_ELASTIC_QUEUESIZE);\n \t}\n \n+\t@Test\n+\tpublic void raceActiveWorkerDisposeAndDeferredDirectDispose() {\n+\t\tBoundedElasticScheduler boundedElasticScheduler = new BoundedElasticScheduler(\n+\t\t\t\t1, 2, r -> new Thread(r, \"raceActiveDeferredDirectDispose\"), 3);\n+\n+\t\tBoundedElasticScheduler.ActiveWorker activeWorker =\n+\t\t\t\t(BoundedElasticScheduler.ActiveWorker) boundedElasticScheduler.createWorker();\n+\n+\t\tint maxRounds = 1_000_000;\n+\t\tAtomicInteger incrementWon = new AtomicInteger();\n+\t\tAtomicInteger rejected = new AtomicInteger();\n+\t\tint rounds = 0;\n+\t\twhile(rounds++ < maxRounds) {\n+\t\t\ttry {\n+\t\t\t\tif (rounds % 10 == 0) { //from time to time reverse the race\n+\t\t\t\t\tRaceTestUtils.race(\n+\t\t\t\t\t\t\tactiveWorker::dispose,\n+\t\t\t\t\t\t\t() -> boundedElasticScheduler.schedule(incrementWon::incrementAndGet).dispose()\n+\t\t\t\t\t);\n+\t\t\t\t}\n+\t\t\t\telse {\n+\t\t\t\t\tRaceTestUtils.race(\n+\t\t\t\t\t\t\tboundedElasticScheduler.schedule(incrementWon::incrementAndGet)::dispose,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3484b889fdac8cc79b7984a89dc186f2a3886b17"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e5ff6fce778d411a8bff4c84239f785fe54fdc7", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/0e5ff6fce778d411a8bff4c84239f785fe54fdc7", "committedDate": "2020-02-13T16:57:14Z", "message": "fix second half of the test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzU4NzgwOTg0", "url": "https://github.com/reactor/reactor-core/pull/2045#pullrequestreview-358780984", "createdAt": "2020-02-14T08:37:27Z", "commit": {"oid": "0e5ff6fce778d411a8bff4c84239f785fe54fdc7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2911, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}