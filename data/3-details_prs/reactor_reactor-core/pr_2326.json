{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3NDEyMjI4", "number": 2326, "title": "fix #2325 Add method to snapshot factory+global schedulers, used by VTS", "bodyText": "", "createdAt": "2020-08-13T14:11:42Z", "url": "https://github.com/reactor/reactor-core/pull/2326", "merged": true, "mergeCommit": {"oid": "f9c799374e7406e472cc6c6307b9650c5cb79684"}, "closed": true, "closedAt": "2020-08-14T17:19:28Z", "author": {"login": "simonbasle"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-goROAH2gAyNDY3NDEyMjI4OjBkMDI5NWU4Y2EyOTMzNTQ3YzQyY2ZkYjIxM2MwZDZlODY1ZDVlNmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-2rnZAH2gAyNDY3NDEyMjI4OjI1NjNhZGZmODVlOGEwYWU1N2Y3ZjVhZjA5OGViNmUyNDZkYjFkYjI=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/0d0295e8ca2933547c42cfdb213c0d6e865d5e6b", "committedDate": "2020-08-13T14:10:20Z", "message": "fix #2325 Add method to snapshot factory+global schedulers, used by VTS"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2ODY1NjQw", "url": "https://github.com/reactor/reactor-core/pull/2326#pullrequestreview-466865640", "createdAt": "2020-08-13T15:19:22Z", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTM5Nzc5", "url": "https://github.com/reactor/reactor-core/pull/2326#pullrequestreview-467539779", "createdAt": "2020-08-14T12:36:47Z", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjozNjo0N1rOHAy-7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjozNjo0N1rOHAy-7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDU5NzM1Nw==", "bodyText": "This should be the second sentence. The current javadoc doesn't mention that this allows setting the factory in the first place.", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470597357", "createdAt": "2020-08-14T12:36:47Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java", "diffHunk": "@@ -677,16 +678,62 @@ public static void disableMetrics() {\n \t/**\n \t * Re-apply default factory to {@link Schedulers}\n \t */\n-\tpublic static void resetFactory(){\n+\tpublic static void resetFactory() {\n \t\tsetFactory(DEFAULT);\n \t}\n \n+\t/**\n+\t * Set the current {@link Schedulers} aside in a capturing {@link Snapshot} that", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTQ1ODYy", "url": "https://github.com/reactor/reactor-core/pull/2326#pullrequestreview-467545862", "createdAt": "2020-08-14T12:46:57Z", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0Njo1N1rOHAzRaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0Njo1N1rOHAzRaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjA4OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * @param snapshot\n          \n          \n            \n            \t * Reset the Factory and Schedulers with the ones saved in a \n          \n          \n            \n            \t * previously {@link #setFactoryWithSnapshot(Factory) captured} snapshot.\n          \n          \n            \n            \t * <p>Passing {@code null} re-applies the default factory.", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602088", "createdAt": "2020-08-14T12:46:57Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/scheduler/Schedulers.java", "diffHunk": "@@ -677,16 +678,62 @@ public static void disableMetrics() {\n \t/**\n \t * Re-apply default factory to {@link Schedulers}\n \t */\n-\tpublic static void resetFactory(){\n+\tpublic static void resetFactory() {\n \t\tsetFactory(DEFAULT);\n \t}\n \n+\t/**\n+\t * Set the current {@link Schedulers} aside in a capturing {@link Snapshot} that\n+\t * can be later restored via {@link #resetFrom(Snapshot)}.\n+\t *\n+\t * @return a {@link Snapshot} representing a restorable snapshot of {@link Schedulers}\n+\t */\n+\tpublic static Snapshot setFactoryWithSnapshot(Factory newFactory) {\n+\t\t//nulling out CACHED references ensures that the schedulers won't be disposed\n+\t\t//when setting the newFactory via setFactory\n+\t\tSnapshot snapshot = new Snapshot(\n+\t\t\t\tCACHED_ELASTIC.getAndSet(null),\n+\t\t\t\tCACHED_BOUNDED_ELASTIC.getAndSet(null),\n+\t\t\t\tCACHED_PARALLEL.getAndSet(null),\n+\t\t\t\tCACHED_SINGLE.getAndSet(null),\n+\t\t\t\tfactory);\n+\t\tsetFactory(newFactory);\n+\t\treturn snapshot;\n+\t}\n+\n+\t/**\n+\t * @param snapshot", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTQ2NDE1", "url": "https://github.com/reactor/reactor-core/pull/2326#pullrequestreview-467546415", "createdAt": "2020-08-14T12:47:52Z", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0Nzo1MlrOHAzTCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0Nzo1MlrOHAzTCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjUwNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n          \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602506", "createdAt": "2020-08-14T12:47:52Z", "author": {"login": "ericbottard"}, "path": "reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java", "diffHunk": "@@ -77,8 +77,12 @@ public static VirtualTimeScheduler create(boolean defer) {\n \t * Assign a newly created {@link VirtualTimeScheduler} to all {@link reactor.core.scheduler.Schedulers.Factory}\n \t * factories ONLY if no {@link VirtualTimeScheduler} is currently set. In case of scheduler creation,\n \t * there is no deferring of time operations (see {@link #create(boolean)}.\n-\t * While the method is thread safe, its usually advised to execute such\n-\t * wide-impact BEFORE all tested code runs (setup etc). The created scheduler is returned.\n+\t * Note that prior to replacing the factories, a {@link Schedulers#setFactoryWithSnapshot(Schedulers.Factory) snapshot}\n+\t * will be performed. Resetting the factory will restore said snapshot.\n+\t * <p>\n+\t * While this methods makes best effort to be thread safe, it is usually advised to\n+\t * perform such wide-impact setup serially and BEFORE all test code runs\n+\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3NTQ2NTU3", "url": "https://github.com/reactor/reactor-core/pull/2326#pullrequestreview-467546557", "createdAt": "2020-08-14T12:48:07Z", "commit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0ODowN1rOHAzTfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQxMjo0ODowN1rOHAzTfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDYwMjYyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.\n          \n          \n            \n            \t * (setup/beforeAll/beforeClass...). The created Scheduler is returned.", "url": "https://github.com/reactor/reactor-core/pull/2326#discussion_r470602620", "createdAt": "2020-08-14T12:48:07Z", "author": {"login": "ericbottard"}, "path": "reactor-test/src/main/java/reactor/test/scheduler/VirtualTimeScheduler.java", "diffHunk": "@@ -90,8 +94,13 @@ public static VirtualTimeScheduler getOrSet() {\n \t * Assign a newly created {@link VirtualTimeScheduler} to all {@link reactor.core.scheduler.Schedulers.Factory}\n \t * factories ONLY if no {@link VirtualTimeScheduler} is currently set. In case of scheduler creation,\n \t * there is opt-in deferring of time related operations (see {@link #create(boolean)}.\n-\t * While the method is thread safe, its usually advised to execute such\n-\t * wide-impact BEFORE all tested code runs (setup etc). The created scheduler is returned.\n+\t * Note that prior to replacing the factories, a {@link Schedulers#setFactoryWithSnapshot(Schedulers.Factory) snapshot}\n+\t * will be performed. Resetting the factory will restore said snapshot.\n+\t * <p>\n+\t * While this methods makes best effort to be thread safe, it is usually advised to\n+\t * perform such wide-impact setup serially and BEFORE all test code runs\n+\t * (setup/beforeAll/beforeClass...). The create Scheduler is returned.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d0295e8ca2933547c42cfdb213c0d6e865d5e6b"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71008cd714df113ee778bf63650d4c7b492f2714", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/71008cd714df113ee778bf63650d4c7b492f2714", "committedDate": "2020-08-14T15:28:09Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Eric Bottard <313494+ericbottard@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2563adff85e8a0ae57f7f5af098eb6e246db1db2", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/2563adff85e8a0ae57f7f5af098eb6e246db1db2", "committedDate": "2020-08-14T15:51:54Z", "message": "Improve javadoc of setFactoryWithSnapshot and resetFrom"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2823, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}