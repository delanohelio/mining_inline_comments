{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTg0NTQ5", "number": 2365, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoyNTo1NVrOEhOCTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjo0NDozMVrOEiGOwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMjY4NDMwOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/FluxRepeatWhen.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoyNTo1NVrOHOaccg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMjoyNTo1NVrOHOaccg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg3NTM3OA==", "bodyText": "onBackpressureError() was wrongly used and fails the same way in master if the queue is removed (e.g. by using many().unsafe()", "url": "https://github.com/reactor/reactor-core/pull/2365#discussion_r484875378", "createdAt": "2020-09-08T12:25:55Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/FluxRepeatWhen.java", "diffHunk": "@@ -211,7 +211,7 @@ public Object scanUnsafe(Attr key) {\n \n \t\tRepeatWhenMainSubscriber<?> main;\n \n-\t\tfinal Sinks.Many<Long> completionSignal = Sinks.many().multicast().onBackpressureError();\n+\t\tfinal Sinks.Many<Long> completionSignal = Sinks.many().multicast().onBackpressureBuffer();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ea9e282b60305435bb38e6ef44c186ac253e8b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTg4Njg4OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/SinksSpecs.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjo0MzoxOVrOHPxr4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjo0NToyN1rOHPxxKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMwNDczOQ==", "bodyText": "could we maybe loop (maybe with a parkNanos(10) or something) in order to at least ensure that emitXxx methods don't require external synchronization?", "url": "https://github.com/reactor/reactor-core/pull/2365#discussion_r486304739", "createdAt": "2020-09-10T12:43:19Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/SinksSpecs.java", "diffHunk": "@@ -125,12 +128,26 @@ public void emitNext(T value) {\n \t\t\t\temitError(ex);\n \t\t\t\tOperators.onDiscard(value, currentContext());\n \t\t\t\tbreak;\n+\t\t\t}\n \t\t\tcase FAIL_CANCELLED:\n \t\t\t\tOperators.onDiscard(value, currentContext());\n \t\t\t\tbreak;\n \t\t\tcase FAIL_TERMINATED:\n \t\t\t\tOperators.onNextDropped(value, currentContext());\n \t\t\t\tbreak;\n+\t\t\tcase FAIL_NON_SERIALIZED: {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ea9e282b60305435bb38e6ef44c186ac253e8b"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMwNjA5MA==", "bodyText": "Unfortunately we can't, otherwise we may introduce an infinite loop. We could retry it once, but IMO if retries are desired, tryEmitXxx should be used instead.", "url": "https://github.com/reactor/reactor-core/pull/2365#discussion_r486306090", "createdAt": "2020-09-10T12:45:27Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/SinksSpecs.java", "diffHunk": "@@ -125,12 +128,26 @@ public void emitNext(T value) {\n \t\t\t\temitError(ex);\n \t\t\t\tOperators.onDiscard(value, currentContext());\n \t\t\t\tbreak;\n+\t\t\t}\n \t\t\tcase FAIL_CANCELLED:\n \t\t\t\tOperators.onDiscard(value, currentContext());\n \t\t\t\tbreak;\n \t\t\tcase FAIL_TERMINATED:\n \t\t\t\tOperators.onNextDropped(value, currentContext());\n \t\t\t\tbreak;\n+\t\t\tcase FAIL_NON_SERIALIZED: {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMwNDczOQ=="}, "originalCommit": {"oid": "06ea9e282b60305435bb38e6ef44c186ac253e8b"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MTg5MTIxOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/SinksSpecs.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjo0NDozMVrOHPxukg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxMjo0NDozMVrOHPxukg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjMwNTQyNg==", "bodyText": "we'll need to document that fail fast behavior everywhere we pretend that Sinks are by default safe to use from multiple threads (mainly in various places of Sinks.java javadocs)", "url": "https://github.com/reactor/reactor-core/pull/2365#discussion_r486305426", "createdAt": "2020-09-10T12:44:31Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/SinksSpecs.java", "diffHunk": "@@ -81,16 +77,23 @@ public final Emission tryEmitComplete() {\n \t\tif (done) {\n \t\t\treturn Sinks.Emission.FAIL_TERMINATED;\n \t\t}\n+\t\tThread lockedAt = this.lockedAt;\n+\t\tif (!(lockedAt == null || lockedAt == Thread.currentThread())) {\n+\t\t\treturn Emission.FAIL_NON_SERIALIZED;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "06ea9e282b60305435bb38e6ef44c186ac253e8b"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 962, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}