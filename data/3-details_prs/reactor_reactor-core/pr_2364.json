{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxOTgyMDEx", "number": 2364, "title": "fix #2362 Prevent ConcurrentModificationEx on bufferPredicate discard", "bodyText": "This commit adds some internal synchronization of the buffer in\nFluxBufferPredicate in order to ensure that cancellation racing with\nonNext doesn't trigger a ConcurrentModificationException (due to the\nbuffer being iterated by onDiscard while onNext adds an element to it).", "createdAt": "2020-09-08T11:41:02Z", "url": "https://github.com/reactor/reactor-core/pull/2364", "merged": true, "mergeCommit": {"oid": "d0e19e72844d966d668a1c2c22ab0420fbf3eb44"}, "closed": true, "closedAt": "2020-09-10T12:23:26Z", "author": {"login": "simonbasle"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG2COUgH2gAyNDgxOTgyMDExOjQyZDhiNTEwN2RmODczZDYzMDJhNzRjMThjNGJmMzQxMzViYjNhNDc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHeb6sgH2gAyNDgxOTgyMDExOjk1MDE5OWFlNmY4NGQ1Nzk3MWMzMDViYzUwNWUzYmZlYWNhYzg2NmU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "42d8b5107df873d6302a74c18c4bf34135bb3a47", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/42d8b5107df873d6302a74c18c4bf34135bb3a47", "committedDate": "2020-09-08T11:38:05Z", "message": "fix #2362 Prevent ConcurrentModificationEx on bufferPredicate discard\n\nThis commit adds some internal synchronization of the buffer in\nFluxBufferPredicate in order to ensure that cancellation racing with\nonNext doesn't trigger a ConcurrentModificationException (due to the\nbuffer being iterated by onDiscard while onNext adds an element to it)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDQ5OTM1", "url": "https://github.com/reactor/reactor-core/pull/2364#pullrequestreview-484049935", "createdAt": "2020-09-08T11:42:35Z", "commit": {"oid": "42d8b5107df873d6302a74c18c4bf34135bb3a47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo0MjozNVrOHOZBIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo0MjozNVrOHOZBIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1MjAwMA==", "bodyText": "why not getAndSet?", "url": "https://github.com/reactor/reactor-core/pull/2364#discussion_r484852000", "createdAt": "2020-09-08T11:42:35Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/main/java/reactor/core/publisher/FluxBufferPredicate.java", "diffHunk": "@@ -176,8 +178,13 @@ public void request(long n) {\n \n \t\t@Override\n \t\tpublic void cancel() {\n+\t\t\tC b;\n+\t\t\tsynchronized (this) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42d8b5107df873d6302a74c18c4bf34135bb3a47"}, "originalPosition": 34}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0MDUwNDk1", "url": "https://github.com/reactor/reactor-core/pull/2364#pullrequestreview-484050495", "createdAt": "2020-09-08T11:43:23Z", "commit": {"oid": "42d8b5107df873d6302a74c18c4bf34135bb3a47"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo0MzoyM1rOHOZCyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxMTo0MzoyM1rOHOZCyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDg1MjQyNQ==", "bodyText": "this one could really use a stress test instead", "url": "https://github.com/reactor/reactor-core/pull/2364#discussion_r484852425", "createdAt": "2020-09-08T11:43:23Z", "author": {"login": "bsideup"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxBufferPredicateTest.java", "diffHunk": "@@ -912,6 +916,153 @@ public void discardOnError() {\n \t\t            .hasDiscardedExactly(1, 2, 3);\n \t}\n \n+\tstatic private final Context DISCARD_RACE_WITH_ON_NEXT_CTX = Context.of(Hooks.KEY_ON_DISCARD, (Consumer<?>) (Object o) -> ((AtomicInteger) o).incrementAndGet());\n+\n+\tBaseSubscriber<ArrayList<AtomicInteger>> createDiscardRaceWithOnNextDownstream(final AtomicLong receivedCounter) {\n+\t\treturn new BaseSubscriber<ArrayList<AtomicInteger>>() {\n+\t\t\t@Override\n+\t\t\tpublic Context currentContext() {\n+\t\t\t\treturn DISCARD_RACE_WITH_ON_NEXT_CTX;\n+\t\t\t}\n+\n+\t\t\t@Override\n+\t\t\tprotected void hookOnNext(ArrayList<AtomicInteger> value) {\n+\t\t\t\treceivedCounter.addAndGet(value.size());\n+\t\t\t}\n+\t\t};\n+\t}\n+\n+\t@Test\n+\tpublic void discardRaceWithOnNext_bufferAdds() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42d8b5107df873d6302a74c18c4bf34135bb3a47"}, "originalPosition": 104}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80c2e338037d842f9e394eb7320c9ca9aafc532a", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/80c2e338037d842f9e394eb7320c9ca9aafc532a", "committedDate": "2020-09-10T10:15:19Z", "message": "remove unnecessary volatile"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg1Nzg3Mzky", "url": "https://github.com/reactor/reactor-core/pull/2364#pullrequestreview-485787392", "createdAt": "2020-09-10T10:17:14Z", "commit": {"oid": "80c2e338037d842f9e394eb7320c9ca9aafc532a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "950199ae6f84d57971c305bc505e3bfeacac866e", "author": {"user": {"login": "simonbasle", "name": "Simon Basl\u00e9"}}, "url": "https://github.com/reactor/reactor-core/commit/950199ae6f84d57971c305bc505e3bfeacac866e", "committedDate": "2020-09-10T10:42:21Z", "message": "Mutualized ROUNDS param with requestRaceWithOnNextLoops, now 10K"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2859, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}