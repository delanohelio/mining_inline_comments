{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYzNTAxNDU0", "number": 2304, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMTo0NlrOEV5mLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMjowNFrOEV5mhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzk5MjE0OnYy", "diffSide": "RIGHT", "path": "docs/asciidoc/metrics.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMTo0NlrOG8610w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMTo0NlrOG8610w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzMTc5NQ==", "bodyText": "status=completed and status=completedEmpty", "url": "https://github.com/reactor/reactor-core/pull/2304#discussion_r466531795", "createdAt": "2020-08-06T16:21:46Z", "author": {"login": "simonbasle"}, "path": "docs/asciidoc/metrics.adoc", "diffHunk": "@@ -88,14 +88,17 @@ Just adding these two operators will expose a whole bunch of useful metrics!\n \n | [name].onNext.delay | Timer | Measures delays between onNext signals (or between onSubscribe and first onNext)\n \n-| [name].flow.duration | Timer | Times the duration elapsed between a subscription and the termination or cancellation of the sequence. A status tag is added to specify what event caused the timer to end (`onComplete`, `onError`, `cancel`).\n+| [name].flow.duration | Timer | Times the duration elapsed between a subscription and the termination or cancellation of the sequence. A status tag is added to specify what event caused the timer to end (`onComplete`, `onCompleteEmpty`, `onError`, `cancel`).\n |=======\n \n+\n+\n Want to know how many times your event processing has restarted due to some error? Read `reactor.subscribed`, because `retry()` operator will re-subscribe to the source publisher on error.\n \n Interested in \"events per second\" metric? Measure the rate of `reactor.onNext.delay` 's count.\n \n Want to be alerted when the listener throws an error? `reactor.flow.duration` with `status=error` tag is your friend.\n+Similarly, `status=onComplete` and `status=onCompleteEmpty` will allow you to distinguish sequences that completed with elements from sequences that completed empty.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad76461552b0031f977c834b880ddf249df7ff48"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzk5MjI1OnYy", "diffSide": "RIGHT", "path": "docs/asciidoc/metrics.adoc", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMTo0OVrOG8617w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMTo0OVrOG8617w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzMTgyMw==", "bodyText": "actually, this documentation is wrong. the status values are completed, cancelled completedEmpty and error \ud83d\ude22 for the 3 old possible values, this was already wrong in 3.2 documentation though...", "url": "https://github.com/reactor/reactor-core/pull/2304#discussion_r466531823", "createdAt": "2020-08-06T16:21:49Z", "author": {"login": "simonbasle"}, "path": "docs/asciidoc/metrics.adoc", "diffHunk": "@@ -88,14 +88,17 @@ Just adding these two operators will expose a whole bunch of useful metrics!\n \n | [name].onNext.delay | Timer | Measures delays between onNext signals (or between onSubscribe and first onNext)\n \n-| [name].flow.duration | Timer | Times the duration elapsed between a subscription and the termination or cancellation of the sequence. A status tag is added to specify what event caused the timer to end (`onComplete`, `onError`, `cancel`).\n+| [name].flow.duration | Timer | Times the duration elapsed between a subscription and the termination or cancellation of the sequence. A status tag is added to specify what event caused the timer to end (`onComplete`, `onCompleteEmpty`, `onError`, `cancel`).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad76461552b0031f977c834b880ddf249df7ff48"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMzk5MzAwOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/FluxMetrics.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMjowNFrOG862cA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNjoyMjowNFrOG862cA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjUzMTk1Mg==", "bodyText": "the status values are wrong here", "url": "https://github.com/reactor/reactor-core/pull/2304#discussion_r466531952", "createdAt": "2020-08-06T16:22:04Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/FluxMetrics.java", "diffHunk": "@@ -220,7 +226,7 @@ public Object scanUnsafe(Attr key) {\n \tstatic final String METER_SUBSCRIBED     = \".subscribed\";\n \t/**\n \t * Meter that times the duration elapsed between a subscription and the termination or cancellation of the sequence.\n-\t * A status tag is added to specify what event caused the timer to end (onComplete, onError, cancel).\n+\t * A status tag is added to specify what event caused the timer to end (onComplete, onCompleteEmpty, onError, cancel).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad76461552b0031f977c834b880ddf249df7ff48"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 914, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}