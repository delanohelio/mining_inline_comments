{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5ODQwODM3", "number": 2427, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyMzo1N1rOErkT5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyODoxOFrOErkZpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTE5MTQwOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyMzo1N1rOHeZ7kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyMzo1N1rOHeZ7kw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NDE3OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t * This is a particularly important distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now-\n          \n          \n            \n            \t * This is a particularly important distinction with regard to {@link #FAIL_CANCELLED} which means the sink is -now-", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501644179", "createdAt": "2020-10-08T11:23:57Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -86,13 +86,14 @@ public static ManySpec many() {\n \t}\n \n \t/**\n-\t * Represents the immediate status of a signal emission. This does not guarantee that a signal is consumed,\n-\t * it simply refers to the sink state when an emit method is invoked. This is a particularly important\n-\t * distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now- interrupted and emission can't\n-\t * proceed. Consequently, it is possible to emit a signal and obtain an \"OK\" status even if an in-flight cancellation\n-\t * is happening. This is due to the async nature of these actions: producer emits while consumer can interrupt independently.\n+\t * Represents the immediate result of an emit attempt (eg. in {@link Sinks.Many#tryEmitNext(Object)}.\n+\t * This does not guarantee that a signal is consumed, it simply refers to the sink state when an emit method is invoked.\n+\t * This is a particularly important distinction with regards to {@link #FAIL_CANCELLED} which means the sink is -now-", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTIwMjQzOnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyNzoxMlrOHeaCRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMzowODo1OFrOHedtbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTg5NA==", "bodyText": "These do not provide any added value, users can already discover the return type.", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501645894", "createdAt": "2020-10-08T11:27:12Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -594,56 +595,56 @@ public Emission getReason() {\n \n \t\t/**\n \t\t * Try emitting a non-null element, generating an {@link Subscriber#onNext(Object) onNext} signal.\n-\t\t * The result of the attempt is represented as an {@link Emission}, which possibly indicates error cases.\n+\t\t * The result of the attempt is represented as an {@link EmitResult}, which possibly indicates error cases.\n \t\t * <p>\n \t\t * Might throw an unchecked exception in case of a fatal error downstream which cannot\n \t\t * be propagated to any asynchronous handler (aka a bubbling exception).\n \t\t *\n \t\t * @param t the value to emit, not null\n-\t\t * @return {@link Emission}\n+\t\t * @return {@link EmitResult}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTcwNjA5Mw==", "bodyText": "improved the comments", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501706093", "createdAt": "2020-10-08T13:08:58Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -594,56 +595,56 @@ public Emission getReason() {\n \n \t\t/**\n \t\t * Try emitting a non-null element, generating an {@link Subscriber#onNext(Object) onNext} signal.\n-\t\t * The result of the attempt is represented as an {@link Emission}, which possibly indicates error cases.\n+\t\t * The result of the attempt is represented as an {@link EmitResult}, which possibly indicates error cases.\n \t\t * <p>\n \t\t * Might throw an unchecked exception in case of a fatal error downstream which cannot\n \t\t * be propagated to any asynchronous handler (aka a bubbling exception).\n \t\t *\n \t\t * @param t the value to emit, not null\n-\t\t * @return {@link Emission}\n+\t\t * @return {@link EmitResult}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NTg5NA=="}, "originalCommit": {"oid": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e"}, "originalPosition": 166}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0MTIwNjE0OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyODoxOFrOHeaEfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQxMToyODoxOFrOHeaEfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTY0NjQ2Mw==", "bodyText": "Same as before, this can be removed if there is nothing to add.", "url": "https://github.com/reactor/reactor-core/pull/2427#discussion_r501646463", "createdAt": "2020-10-08T11:28:18Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Sinks.java", "diffHunk": "@@ -721,24 +722,24 @@ public Emission getReason() {\n \n \t\t/**\n \t\t * Try to complete the {@link Mono} without a value, generating only an {@link Subscriber#onComplete() onComplete} signal.\n-\t\t * The result of the attempt is represented as an {@link Emission}, which possibly indicates error cases.\n+\t\t * The result of the attempt is represented as an {@link EmitResult}, which possibly indicates error cases.\n \t\t *\n-\t\t * @return {@link Emission}\n+\t\t * @return {@link EmitResult}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "468c7ccfbcb7aa45d630df1034c8b21fa58c061e"}, "originalPosition": 275}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 801, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}