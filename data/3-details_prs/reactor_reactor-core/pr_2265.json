{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3Mzc0MDE5", "number": 2265, "title": "2253 redesign meterregistry", "bodyText": "This PR is on top of #2261, which is used as a way to prove that this PR does not introduce classloader issues.\nPlease focus on 127f69f when reviewing.", "createdAt": "2020-07-10T10:59:13Z", "url": "https://github.com/reactor/reactor-core/pull/2265", "merged": true, "mergeCommit": {"oid": "64fd556b3460510cdf2bd057f517dc07130a571e"}, "closed": true, "closedAt": "2020-07-16T15:05:36Z", "author": {"login": "ericbottard"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1Mv5rgFqTQ0OTA3OTU2Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc1gJFOgBqjM1NTM1MjE3NTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5MDc5NTYy", "url": "https://github.com/reactor/reactor-core/pull/2265#pullrequestreview-449079562", "createdAt": "2020-07-15T15:37:09Z", "commit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozNzowOVrOGyD9bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNVQxNTozODoyOVrOGyEAnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0Njg2MA==", "bodyText": "unnecessary rename / typo teardDown", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455146860", "createdAt": "2020-07-15T15:37:09Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/withMicrometerTest/java/reactor/core/scheduler/SchedulersMetricsTest.java", "diffHunk": "@@ -32,31 +33,33 @@\n @RunWith(JUnitParamsRunner.class)\n public class SchedulersMetricsTest {\n \n-\tSimpleMeterRegistry simpleMeterRegistry;\n \n \t@Rule\n \tpublic AutoDisposingRule afterTest = new AutoDisposingRule();\n \n+\tprivate MeterRegistry registry;\n+\tprivate MeterRegistry previousRegistry;\n+\n \t@Before\n \tpublic void setUp() {\n-\t\tsimpleMeterRegistry = new SimpleMeterRegistry();\n-\t\tMetrics.addRegistry(simpleMeterRegistry);\n+\t\tregistry = new SimpleMeterRegistry();\n+\t\tpreviousRegistry = reactor.util.Metrics.Configuration.useRegistry(registry);\n \t\tSchedulers.enableMetrics();\n \t}\n \n \t@After\n-\tpublic void tearDown() {\n+\tpublic void teardDown() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzMwNw==", "bodyText": "Maybe rename MicrometerConfiguration ?", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455147307", "createdAt": "2020-07-15T15:37:52Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "diffHunk": "@@ -49,4 +52,23 @@ public static final boolean isInstrumentationAvailable() {\n \t\treturn isMicrometerAvailable;\n \t}\n \n+\tpublic static class Configuration {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTE0NzY3OQ==", "bodyText": "Move on getRegistry and mention the default is globalRegistry ?", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455147679", "createdAt": "2020-07-15T15:38:29Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/main/java/reactor/util/Metrics.java", "diffHunk": "@@ -49,4 +52,23 @@ public static final boolean isInstrumentationAvailable() {\n \t\treturn isMicrometerAvailable;\n \t}\n \n+\tpublic static class Configuration {\n+\n+\t\t/**\n+\t\t * The registry to use in reactor for metrics related purposes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ5ODM0NzE0", "url": "https://github.com/reactor/reactor-core/pull/2265#pullrequestreview-449834714", "createdAt": "2020-07-16T13:15:12Z", "commit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNToxMlrOGyqYHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMzoxNToxMlrOGyqYHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTc3NjI4Nw==", "bodyText": "Fix", "url": "https://github.com/reactor/reactor-core/pull/2265#discussion_r455776287", "createdAt": "2020-07-16T13:15:12Z", "author": {"login": "ericbottard"}, "path": "reactor-core/src/main/java/reactor/core/publisher/Flux.java", "diffHunk": "@@ -6072,6 +6073,11 @@ public int getPrefetch() {\n \t * Metrics are gathered on {@link Subscriber} events, and it is recommended to also\n \t * {@link #name(String) name} (and optionally {@link #tag(String, String) tag}) the\n \t * sequence.\n+\t * <p>\n+     * The {@link MeterRegistry} used by reactor can be configured via", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de3760e38c588a609674d0ef6ea7e10b5c58ccd6", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/de3760e38c588a609674d0ef6ea7e10b5c58ccd6", "committedDate": "2020-07-16T14:21:34Z", "message": "fix 2253 redesign how MetricsRegistry is configured\n\nThis commit revisits the use of MicroMeter in project reactor by not\nsolely relying on MicroMeter's glogbalRegistry, but instead offering\na way to configure which registry to use prior to calling metrics().\nThe default value is still the globalRegistry, thus being fully backwards\ncompatible."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5871262723ec911637d68d8dab6489532bc7ecf", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/d5871262723ec911637d68d8dab6489532bc7ecf", "committedDate": "2020-07-16T14:30:24Z", "message": "Address review comments"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "127f69fa8ddb33042d29720174ddbf5b96db53b7", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/127f69fa8ddb33042d29720174ddbf5b96db53b7", "committedDate": "2020-07-10T10:54:06Z", "message": "fix 2253 redesign how MetricsRegistry is configured\n\nThis commit revisits the use of MicroMeter in project reactor by not\nsolely relying on MicroMeter's glogbalRegistry, but instead offering\na way to configure which registry to use prior to calling metrics().\nThe default value is still the globalRegistry, thus being fully backwards\ncompatible."}, "afterCommit": {"oid": "d5871262723ec911637d68d8dab6489532bc7ecf", "author": {"user": {"login": "ericbottard", "name": "Eric Bottard"}}, "url": "https://github.com/reactor/reactor-core/commit/d5871262723ec911637d68d8dab6489532bc7ecf", "committedDate": "2020-07-16T14:30:24Z", "message": "Address review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2778, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}