{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYwOTY4Nzgz", "number": 2009, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoxMToxN1rODXMyTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoxMToxN1rODXMyTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI1NjUzMzI1OnYy", "diffSide": "RIGHT", "path": "reactor-core/src/test/java/reactor/core/publisher/FluxFlattenIterableTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxNjoxMToxN1rOFcYyAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQxOTowNjowMVrOFcdXMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMxMDQ2Ng==", "bodyText": "nit: maybe replace the test name suffixes of Async with NotFused and Sync with Fused ?", "url": "https://github.com/reactor/reactor-core/pull/2009#discussion_r365310466", "createdAt": "2020-01-10T16:11:17Z", "author": {"login": "simonbasle"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxFlattenIterableTest.java", "diffHunk": "@@ -398,7 +397,7 @@ public void syncDrainWithPollFailure() {\n     }\n \n \t@Test\n-\tpublic void errorModeContinueNullPublisher() {\n+\tpublic void errorModeContinueNullPublisherAsync() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d746544df6b796e4f5ec42a8c7de5311266381c7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTM4NTUyMA==", "bodyText": "Sure. I thought the Async / sync was logical because of the drain method that would get called.\nWill change.", "url": "https://github.com/reactor/reactor-core/pull/2009#discussion_r365385520", "createdAt": "2020-01-10T19:06:01Z", "author": {"login": "mdonkers"}, "path": "reactor-core/src/test/java/reactor/core/publisher/FluxFlattenIterableTest.java", "diffHunk": "@@ -398,7 +397,7 @@ public void syncDrainWithPollFailure() {\n     }\n \n \t@Test\n-\tpublic void errorModeContinueNullPublisher() {\n+\tpublic void errorModeContinueNullPublisherAsync() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTMxMDQ2Ng=="}, "originalCommit": {"oid": "d746544df6b796e4f5ec42a8c7de5311266381c7"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 979, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}