{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUxODEwOTQ0", "number": 2160, "title": "#2150 Change the rules for how a constructor for mapping is picked", "bodyText": "New rules:\n\nConstructor annotated with @default (from any package) has highest precedence\nIf there is a single public constructor then it would be used to construct the object\nIf a parameterless constructor exists then it would be used to construct the object, and the other constructors will be ignored\n\nFixes #2150", "createdAt": "2020-07-18T08:55:15Z", "url": "https://github.com/mapstruct/mapstruct/pull/2160", "merged": true, "mergeCommit": {"oid": "cb432fa61b76a8f81bac05ab120b342a007e8536"}, "closed": true, "closedAt": "2020-07-18T16:53:33Z", "author": {"login": "filiphr"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2Ehc2gH2gAyNDUxODEwOTQ0OmZmMTUwY2IyZWU5ZGU0ZjdkNzFkNjNjYTgyZWIwNjlhNmFjY2MzMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc2KxQvgFqTQ1MTA2NjYxMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ff150cb2ee9de4f7d71d63ca82eb069a6accc306", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/ff150cb2ee9de4f7d71d63ca82eb069a6accc306", "committedDate": "2020-07-18T08:54:09Z", "message": "#2150 Change the rules for how a constructor for mapping is picked\n\nNew rules:\n\n1. Constructor annotated with @Default (from any package) has highest precedence\n2. If there is a single public constructor then it would be used to construct the object\n3. If a parameterless constructor exists then it would be used to construct the object, and the other constructors will be ignored"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDQzNDg3", "url": "https://github.com/mapstruct/mapstruct/pull/2160#pullrequestreview-451043487", "createdAt": "2020-07-18T09:01:59Z", "commit": {"oid": "ff150cb2ee9de4f7d71d63ca82eb069a6accc306"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwOTowMTo1OVrOGzm87A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xOFQwOTowMzoxOFrOGzm9PA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc2ODc0OA==", "bodyText": "Perhaps add an example?", "url": "https://github.com/mapstruct/mapstruct/pull/2160#discussion_r456768748", "createdAt": "2020-07-18T09:01:59Z", "author": {"login": "sjaakd"}, "path": "documentation/src/main/asciidoc/chapter-3-defining-a-mapper.asciidoc", "diffHunk": "@@ -537,8 +537,10 @@ When doing a mapping MapStruct checks if there is a builder for the type being m\n If there is no builder, then MapStruct looks for a single accessible constructor.\n When there are multiple constructors then the following is done to pick the one which should be used:\n \n-* If a parameterless constructor exists then it would be used to construct the object, and the other constructors will be ignored\n-* If there are multiple constructors then the one annotated with annotation named `@Default` (from any package) will be used\n+* If a constructor is annotated with an annotation named `@Default` (from any package) it will be used.\n+* If a single public constructor exists then it will be used to construct the object, and the other non public constructors will be ignored.\n+* If a parameterless constructor exists then it will be used to construct the object, and the other constructors will be ignored.\n+* If there are multiple eligible constructors then there will be a compilation error due to ambigious constructors. In order to break the ambiquity an annotation named `@Default` (from any package) can used.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff150cb2ee9de4f7d71d63ca82eb069a6accc306"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Njc2ODgyOA==", "bodyText": "Should we also allow friendly and protected?  I guess we have some logic somewhere to detect these scenarios...", "url": "https://github.com/mapstruct/mapstruct/pull/2160#discussion_r456768828", "createdAt": "2020-07-18T09:03:18Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -603,63 +603,84 @@ private ConstructorAccessor getConstructorAccessor(Type type) {\n             List<ExecutableElement> constructors = ElementFilter.constructorsIn( type.getTypeElement()\n                 .getEnclosedElements() );\n \n-            ExecutableElement defaultConstructor = null;\n+            // The rules for picking a constructor are the following:\n+            // 1. Constructor annotated with @Default (from any package) has highest precedence\n+            // 2. If there is a single public constructor then it would be used to construct the object\n+            // 3. If a parameterless constructor exists then it would be used to construct the object, and the other\n+            // constructors will be ignored\n+            ExecutableElement defaultAnnotatedConstructor = null;\n+            ExecutableElement parameterLessConstructor = null;\n             List<ExecutableElement> accessibleConstructors = new ArrayList<>( constructors.size() );\n+            List<ExecutableElement> publicConstructors = new ArrayList<>( );\n \n             for ( ExecutableElement constructor : constructors ) {\n                 if ( constructor.getModifiers().contains( Modifier.PRIVATE ) ) {\n                     continue;\n                 }\n \n+                if ( hasDefaultAnnotationFromAnyPackage( constructor ) ) {\n+                    // We found a constructor annotated with @Default everything else is irrelevant\n+                    defaultAnnotatedConstructor = constructor;\n+                    break;\n+                }\n+\n                 if ( constructor.getParameters().isEmpty() ) {\n-                    defaultConstructor = constructor;\n+                    parameterLessConstructor = constructor;\n                 }\n                 else {\n                     accessibleConstructors.add( constructor );\n                 }\n+\n+                if ( constructor.getModifiers().contains( Modifier.PUBLIC ) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ff150cb2ee9de4f7d71d63ca82eb069a6accc306"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ecb2e93f19f90076927e5d5edafbcb641fd57f2", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/5ecb2e93f19f90076927e5d5edafbcb641fd57f2", "committedDate": "2020-07-18T14:34:12Z", "message": "Add examples about the constructor detection rules"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxMDY2NjEy", "url": "https://github.com/mapstruct/mapstruct/pull/2160#pullrequestreview-451066612", "createdAt": "2020-07-18T16:10:51Z", "commit": {"oid": "5ecb2e93f19f90076927e5d5edafbcb641fd57f2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4556, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}