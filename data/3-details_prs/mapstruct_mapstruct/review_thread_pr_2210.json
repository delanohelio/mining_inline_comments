{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkzNDc1NjY0", "number": 2210, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODozNzowM1rOEnueGA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyODowNFrOEu47hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDkxMjg4OnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODozNzowM1rOHYez1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODozNzowM1rOHYez1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjY2MQ==", "bodyText": "some textual stuff: I would use \"handles\" instead of \"treats\".. (a bit nitpicking, I agree)..", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432661", "createdAt": "2020-09-26T08:37:03Z", "author": {"login": "sjaakd"}, "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.\n  * <p>\n- * Either {@link #resultType()}, {@link #qualifiedBy()} or {@link #nullValueMappingStrategy()} must be specified.\n+ * When source or the target is of type {@code Iterable} or {@code Stream}, it treats the target as a simple pojo and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDkxMzgwOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODozODo0MFrOHYe0SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODozODo0MFrOHYe0SA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjc3Ng==", "bodyText": "\"tries\" == attempts", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432776", "createdAt": "2020-09-26T08:38:40Z", "author": {"login": "sjaakd"}, "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.\n  * <p>\n- * Either {@link #resultType()}, {@link #qualifiedBy()} or {@link #nullValueMappingStrategy()} must be specified.\n+ * When source or the target is of type {@code Iterable} or {@code Stream}, it treats the target as a simple pojo and\n+ * tries to map the parameters. Otherwise, either {@link #resultType()}, {@link #qualifiedBy()} or", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwMDkxNTYxOnYy", "diffSide": "RIGHT", "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODo0MDo1OFrOHYe1IA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNlQwODo0MDo1OFrOHYe1IA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTQzMjk5Mg==", "bodyText": "Forces MapStruct to handle target and source as bean and configures the mapping.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r495432992", "createdAt": "2020-09-26T08:40:58Z", "author": {"login": "sjaakd"}, "path": "core/src/main/java/org/mapstruct/BeanMapping.java", "diffHunk": "@@ -18,7 +18,9 @@\n /**\n  * Configures the mapping between two bean types.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "44037e8029ede0b47d4a6baf5c15a5d8165e9cf7"}, "originalPosition": 2}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAxNzM3OnYy", "diffSide": "RIGHT", "path": "documentation/src/main/asciidoc/chapter-6-mapping-collections.asciidoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoxNzoxNFrOHjikWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoxNzoxNFrOHjikWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyODU2OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            It is not allowed to declare mapping methods with an iterable source and a non-iterable target from java package or the other way around. An error will be raised when detecting this situation.\n          \n          \n            \n            It is not allowed to declare mapping methods with an iterable source (from a java package) and a non-iterable target or the other way around. An error will be raised when detecting this situation.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507028568", "createdAt": "2020-10-18T07:17:14Z", "author": {"login": "filiphr"}, "path": "documentation/src/main/asciidoc/chapter-6-mapping-collections.asciidoc", "diffHunk": "@@ -90,7 +90,7 @@ carDto.getPassengers().addAll( personsToPersonDtos( car.getPassengers() ) );\n \n [WARNING]\n ====\n-It is not allowed to declare mapping methods with an iterable source and a non-iterable target or the other way around. An error will be raised when detecting this situation.\n+It is not allowed to declare mapping methods with an iterable source and a non-iterable target from java package or the other way around. An error will be raised when detecting this situation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyMDk5OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMToxMFrOHjimEQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMToxMFrOHjimEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTAwOQ==", "bodyText": "Type already has a method called isJavaLangType we can use it here.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029009", "createdAt": "2020-10-18T07:21:10Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "diffHunk": "@@ -536,6 +537,11 @@ private boolean checkParameterAndReturnType(ExecutableElement method, List<Param\n         return true;\n     }\n \n+    private boolean isStreamTypeOrIterableFromJavaStdLib(Type type) {\n+        return type.isStreamType() || ( type.isIterableType() && type.getPackageName() != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyMjIwOnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMjoxOFrOHjimoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMjoxOFrOHjimoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTE1Mw==", "bodyText": "Let's keep the order of the checks same as before, first the parameter and then the result type. It makes it clearer when reading the message as well.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029153", "createdAt": "2020-10-18T07:22:18Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MethodRetrievalProcessor.java", "diffHunk": "@@ -485,7 +486,7 @@ private boolean checkParameterAndReturnType(ExecutableElement method, List<Param\n \n         Type parameterType = sourceParameters.get( 0 ).getType();\n \n-        if ( parameterType.isIterableOrStreamType() && !resultType.isIterableOrStreamType() ) {\n+        if ( !resultType.isIterableOrStreamType() && isStreamTypeOrIterableFromJavaStdLib( parameterType ) ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyMjYwOnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/util/Message.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMjo1M1rOHjim0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyMjo1M1rOHjim0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTIwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type from java stdlib.\" ),\n          \n          \n            \n                RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type from java stdlib to non-iterable type.\" ),", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029203", "createdAt": "2020-10-18T07:22:53Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/util/Message.java", "diffHunk": "@@ -143,9 +143,9 @@\n     RETRIEVAL_DUPLICATE_MAPPING_TARGETS( \"Can't generate mapping method with more than one @MappingTarget parameter.\" ),\n     RETRIEVAL_VOID_MAPPING_METHOD( \"Can't generate mapping method with return type void.\" ),\n     RETRIEVAL_NON_ASSIGNABLE_RESULTTYPE( \"The result type is not assignable to the the return type.\" ),\n-    RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type.\" ),\n+    RETRIEVAL_ITERABLE_TO_NON_ITERABLE( \"Can't generate mapping method from iterable type to non-iterable type from java stdlib.\" ),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyNDA2OnYy", "diffSide": "RIGHT", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/FruitsMenu.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyNDozMFrOHjinhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyNDozMFrOHjinhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTM4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public class FruitsMenu implements Iterable<org.mapstruct.ap.test.collection.iterabletononiterable.Fruit> {\n          \n          \n            \n            public class FruitsMenu implements Iterable<Fruit> {", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029381", "createdAt": "2020-10-18T07:24:30Z", "author": {"login": "filiphr"}, "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/FruitsMenu.java", "diffHunk": "@@ -0,0 +1,35 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.collection.iterabletononiterable;\n+\n+import java.util.Iterator;\n+import java.util.List;\n+\n+/**\n+ *\n+ * @author Saheb Preet Singh\n+ */\n+public class FruitsMenu implements Iterable<org.mapstruct.ap.test.collection.iterabletononiterable.Fruit> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyNTUwOnYy", "diffSide": "RIGHT", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyNjowM1rOHjioNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyNjowM1rOHjioNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTU1OA==", "bodyText": "You can move this in the class annotated WithClasses. This might speed up the test a bit since it will do only one compilation per class instead of doing multiple in case the methods are ordered differently. Same comment for the other test methods.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029558", "createdAt": "2020-10-18T07:26:03Z", "author": {"login": "filiphr"}, "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "diffHunk": "@@ -45,4 +47,34 @@ public void shouldReverseMapStringListToStringUsingCustomMapper() {\n         assertThat( source.getNames() ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n         assertThat( source.publicNames ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n     }\n+\n+    @Test\n+    @IssueKey(\"607\")\n+    @WithClasses({\n+            FruitsMapper.class", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjAyNjk1OnYy", "diffSide": "RIGHT", "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyODowNFrOHjio6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwNzoyODowNFrOHjio6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzAyOTczNg==", "bodyText": "You can do it in one assertion by using assertThat( salad.getFruits() ).extracting( Fruit::getType ).containsExactly( \"mango\", \"apple\", \"banana\" ). Same comment stands for the test method below.", "url": "https://github.com/mapstruct/mapstruct/pull/2210#discussion_r507029736", "createdAt": "2020-10-18T07:28:04Z", "author": {"login": "filiphr"}, "path": "processor/src/test/java/org/mapstruct/ap/test/collection/iterabletononiterable/IterableToNonIterableMappingTest.java", "diffHunk": "@@ -45,4 +47,34 @@ public void shouldReverseMapStringListToStringUsingCustomMapper() {\n         assertThat( source.getNames() ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n         assertThat( source.publicNames ).isEqualTo( Arrays.asList( \"Alice\", \"Bob\", \"Jim\" ) );\n     }\n+\n+    @Test\n+    @IssueKey(\"607\")\n+    @WithClasses({\n+            FruitsMapper.class\n+    })\n+    public void shouldMapIterableToNonIterable() {\n+        List<Fruit> fruits =  Arrays.asList( new Fruit( \"mango\" ), new Fruit( \"apple\" ),\n+                new Fruit( \"banana\" ) );\n+        FruitsMenu menu = new FruitsMenu(fruits);\n+        FruitSalad salad = FruitsMapper.INSTANCE.fruitsMenuToSalad( menu );\n+        assertThat( salad.getFruits().get( 0 ).getType() ).isEqualTo( \"mango\" );\n+        assertThat( salad.getFruits().get( 1 ).getType() ).isEqualTo( \"apple\" );\n+        assertThat( salad.getFruits().get( 2 ).getType() ).isEqualTo( \"banana\" );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "82d17d75ad3dabd6409926a0f27fcfcb7525b3b1"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4174, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}