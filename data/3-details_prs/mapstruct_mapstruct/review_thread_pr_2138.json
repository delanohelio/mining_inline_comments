{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MzE4Mzg5", "number": 2138, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOToxNzoyMlrOELZuWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOToyNzo1OFrOELZwuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzkxMjU3OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOToxNzoyMlrOGs9hAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOTo0OTo0MFrOGs9pfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODQwMQ==", "bodyText": "What if the method is not one of these types? It can be an intermediate ForgedMethod or an existing HelperMethod that we have created. Why shouldn't we reuse that one?", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449798401", "createdAt": "2020-07-04T19:17:22Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {\n+\n+            if ( method instanceof SourceMethod ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTUyMg==", "bodyText": "is not possible here.. We don't resolve forged methods.. If so, we should throw an unsupported.", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449799522", "createdAt": "2020-07-04T19:34:09Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {\n+\n+            if ( method instanceof SourceMethod ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODQwMQ=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMDEwMg==", "bodyText": "You are right", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449800102", "createdAt": "2020-07-04T19:42:29Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {\n+\n+            if ( method instanceof SourceMethod ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODQwMQ=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMDU3Mw==", "bodyText": "resolved, I guess?", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449800573", "createdAt": "2020-07-04T19:49:40Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {\n+\n+            if ( method instanceof SourceMethod ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODQwMQ=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzkxNDkyOnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOToyMTozM1rOGs9iIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOTo0Mjo0MVrOGs9nrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODY4OQ==", "bodyText": "Why is this change needed?\nySourceType and targetTypeX don't have to be the same types I think. One can be more specific then the other.", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449798689", "createdAt": "2020-07-04T19:21:33Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -486,10 +511,9 @@ private Assignment resolveViaConversionAndMethod(Type sourceType, Type targetTyp\n                 ySourceType = ySourceType.resolveTypeVarToType( targetType, methodYCandidate.getResultType() );\n \n                 if ( ySourceType != null ) {\n-                    methodRefY = resolveViaMethod( ySourceType, targetType, true );\n+                    methodRefY = applyMatching( ySourceType, targetType, methodYCandidate );\n                     if ( methodRefY != null ) {\n-                        Type targetTypeX = methodYCandidate.getSourceParameters().get( 0 ).getType();\n-                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, targetTypeX );\n+                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, ySourceType );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTU1NA==", "bodyText": "the change was forgotten last time.. it's actually a bug.", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449799554", "createdAt": "2020-07-04T19:34:41Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -486,10 +511,9 @@ private Assignment resolveViaConversionAndMethod(Type sourceType, Type targetTyp\n                 ySourceType = ySourceType.resolveTypeVarToType( targetType, methodYCandidate.getResultType() );\n \n                 if ( ySourceType != null ) {\n-                    methodRefY = resolveViaMethod( ySourceType, targetType, true );\n+                    methodRefY = applyMatching( ySourceType, targetType, methodYCandidate );\n                     if ( methodRefY != null ) {\n-                        Type targetTypeX = methodYCandidate.getSourceParameters().get( 0 ).getType();\n-                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, targetTypeX );\n+                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, ySourceType );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODY4OQ=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMDEwOQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449800109", "createdAt": "2020-07-04T19:42:41Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -486,10 +511,9 @@ private Assignment resolveViaConversionAndMethod(Type sourceType, Type targetTyp\n                 ySourceType = ySourceType.resolveTypeVarToType( targetType, methodYCandidate.getResultType() );\n \n                 if ( ySourceType != null ) {\n-                    methodRefY = resolveViaMethod( ySourceType, targetType, true );\n+                    methodRefY = applyMatching( ySourceType, targetType, methodYCandidate );\n                     if ( methodRefY != null ) {\n-                        Type targetTypeX = methodYCandidate.getSourceParameters().get( 0 ).getType();\n-                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, targetTypeX );\n+                        ConversionAssignment conversionXRef = resolveViaConversion( sourceType, ySourceType );", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5ODY4OQ=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 99}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzkxODY1OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOToyNzo1OFrOGs9j0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxOTo0MzozOFrOGs9n3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTEyMw==", "bodyText": "Perhaps this should be named resolveViaGivenMethod? Or something in that direction. applyMatching differs from the other methods in my opinion", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449799123", "createdAt": "2020-07-04T19:27:58Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTYyMQ==", "bodyText": "not entirely.. We still have to apply all criteria to really figure out if it matches (qualifiers, xml-stuff, resultTypes, etc)", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449799621", "createdAt": "2020-07-04T19:35:26Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTEyMw=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTgwMDE1Ng==", "bodyText": "OK", "url": "https://github.com/mapstruct/mapstruct/pull/2138#discussion_r449800156", "createdAt": "2020-07-04T19:43:38Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -376,32 +377,56 @@ private Assignment resolveViaMethod(Type sourceType, Type targetType, boolean co\n             return null;\n         }\n \n+        /**\n+         * Applies matching to given method only\n+         *\n+         * @param sourceType the source type\n+         * @param targetType the target type\n+         * @param method     the method to match\n+         * @return an assignment if a match, given the criteria could be found. When the method is a\n+         * buildIn method, all the bookkeeping is applied.\n+         */\n+        private Assignment applyMatching(Type sourceType, Type targetType, Method method) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc5OTEyMw=="}, "originalCommit": {"oid": "62efe5977c3719bad195841ab331176d1b2ce995"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4226, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}