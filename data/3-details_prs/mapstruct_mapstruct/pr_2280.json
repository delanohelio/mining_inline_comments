{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIzMTQ2MjUy", "number": 2280, "title": "default component model: mapper reference use singleton INSTANCE if i\u2026", "bodyText": "\u2026t exists\nThis allows to easily avoid the runtime dependency on mapstruct.jar:\nwe can avoid Mappers.getMapper(...) for instantiating used mappers if\nthe code follows the conventionnal pattern for creating mapper singletons.\nFix #2277.", "createdAt": "2020-11-18T12:21:43Z", "url": "https://github.com/mapstruct/mapstruct/pull/2280", "merged": true, "mergeCommit": {"oid": "c59ca79e7f992d051661fa2d39eb1cbee014b116"}, "closed": true, "closedAt": "2021-02-06T15:10:33Z", "author": {"login": "dmngb"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdrPDv9gFqTU2MDAzOTk2Ng==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdxUTfhgH2gAyNTIzMTQ2MjUyOmU5MmRlOGI3MjgyYjhlZmUxNWViZjMwMGY3NzIzMWYxMmM0ZDUxZGU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwMDM5OTY2", "url": "https://github.com/mapstruct/mapstruct/pull/2280#pullrequestreview-560039966", "createdAt": "2020-12-30T13:04:43Z", "commit": {"oid": "04d3393aef1f052a1d55900639787a080225adca"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzowNDo0M1rOIMs0vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0zMFQxMzowNjo1NVrOIMs3WQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE4ODIyMw==", "bodyText": "don't try to re-org the imports (nitty-witty thing.. but helps to review the code \ud83d\ude04", "url": "https://github.com/mapstruct/mapstruct/pull/2280#discussion_r550188223", "createdAt": "2020-12-30T13:04:43Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MapperCreationProcessor.java", "diffHunk": "@@ -5,14 +5,24 @@\n  */\n package org.mapstruct.ap.internal.processor;\n \n+import static javax.lang.model.element.Modifier.FINAL;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d3393aef1f052a1d55900639787a080225adca"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MDE4ODg4OQ==", "bodyText": "I don't know this from the top of my head, but does a field in an interface automatically get the modifiers \"PUBLIC, STATIC, FINAL\" ?\nI guess checkstyle does, but should we warn as well if you spot an intention to use this pattern but for instance left out STATIC?", "url": "https://github.com/mapstruct/mapstruct/pull/2280#discussion_r550188889", "createdAt": "2020-12-30T13:06:55Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MapperCreationProcessor.java", "diffHunk": "@@ -133,9 +138,16 @@ public int getPriority() {\n         List<String> variableNames = new LinkedList<>();\n \n         for ( TypeMirror usedMapper : mapperAnnotation.uses() ) {\n+            boolean isSingleton = typeUtils.asElement( usedMapper ).getEnclosedElements().stream()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d3393aef1f052a1d55900639787a080225adca"}, "originalPosition": 69}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5NTkwMTA5", "url": "https://github.com/mapstruct/mapstruct/pull/2280#pullrequestreview-569590109", "createdAt": "2021-01-15T20:17:17Z", "commit": {"oid": "04d3393aef1f052a1d55900639787a080225adca"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQyMDoxNzoxOFrOIUsd-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQyMDoxNzoxOFrOIUsd-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODU3MTAwMg==", "bodyText": "I don't really like that we have so many different method calls here.\nI would suggest the following. Extract a method named hasInstanceMapper that takes Element as a parameter and returns true if  these 4 conditions here are satisfied. Additionally instead of using filter you can directly use anyMatch(this::hasInstanceMapper).\nI would also suggest extracting the Arrays.asList into a static field in the MapperCreationProcessor in order to avoid creating that list all the time.", "url": "https://github.com/mapstruct/mapstruct/pull/2280#discussion_r558571002", "createdAt": "2021-01-15T20:17:18Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/MapperCreationProcessor.java", "diffHunk": "@@ -133,9 +138,16 @@ public int getPriority() {\n         List<String> variableNames = new LinkedList<>();\n \n         for ( TypeMirror usedMapper : mapperAnnotation.uses() ) {\n+            boolean isSingleton = typeUtils.asElement( usedMapper ).getEnclosedElements().stream()\n+            .filter( a -> a.getKind().isField() )\n+            .filter( a -> a.getModifiers().containsAll( Arrays.asList( PUBLIC, STATIC, FINAL ) ) )\n+            .filter( a -> a.getSimpleName().contentEquals( \"INSTANCE\" ) )\n+            .filter( a -> typeUtils.isSameType( a.asType(), usedMapper ) )\n+            .anyMatch( a -> true );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "04d3393aef1f052a1d55900639787a080225adca"}, "originalPosition": 74}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72cab914881a434072745b8e586a7203696f7525", "author": {"user": null}, "url": "https://github.com/mapstruct/mapstruct/commit/72cab914881a434072745b8e586a7203696f7525", "committedDate": "2021-01-18T10:15:32Z", "message": "default component model: mapper reference uses singleton INSTANCE if it exists\n\nThis allows to easily avoid the runtime dependency on mapstruct.jar:\nwe can avoid Mappers.getMapper(...) for instantiating used mappers if\nthe code follows the conventionnal pattern for creating mapper singletons.\n\nFix #2277."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92de8b7282b8efe15ebf300f77231f12c4d51de", "author": {"user": null}, "url": "https://github.com/mapstruct/mapstruct/commit/e92de8b7282b8efe15ebf300f77231f12c4d51de", "committedDate": "2021-01-18T10:38:55Z", "message": "default component model: extract method to check if a singleton INSTANCE exists\n\n# Conflicts:\n#\tprocessor/src/main/java/org/mapstruct/ap/internal/processor/MapperCreationProcessor.java"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4491, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}