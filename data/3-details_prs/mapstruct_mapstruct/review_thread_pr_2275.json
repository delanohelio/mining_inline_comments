{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxMTgwNDYy", "number": 2275, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDowODoxOFrOE713bA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDoxMToxOFrOE714Vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMTgzOTgwOnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDowODoxOFrOH3tZJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDowODoxOFrOH3tZJQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzQ0NQ==", "bodyText": "add in the comment this is auto-unboxing..", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177445", "createdAt": "2020-11-21T10:08:18Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check\n+                return true;\n+            }\n+\n+            if ( nvpms == SET_TO_DEFAULT || nvpms == IGNORE ) {\n+                // NullValuePropertyMapping is SET_TO_DEFAULT or IGNORE -> do a null check\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isConverted() ) {\n+                // If the type is converted then check is needed\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isDirect() && targetType.isPrimitive() ) {\n+                // If the type is direct and the target type is primtive then check is needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMTg0MTU1OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDoxMDoyNVrOH3tZ6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMlQxMjowMjozMFrOH32a9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzY0Mg==", "bodyText": "This is a strange one.. NullValueCheckStrategy does concern parameters, not bean properties.. Do you remember why this one is here? Perhaps it requires some more comment \ud83d\ude04", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177642", "createdAt": "2020-11-21T10:10:25Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODMyNTM2Ng==", "bodyText": "I think that you are talking about NullValueMappingStrategy. The NullValueCheckStrategy is for properties", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528325366", "createdAt": "2020-11-22T12:02:30Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzY0Mg=="}, "originalCommit": {"oid": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMTg0MjE1OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDoxMToxOFrOH3taLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMVQxMDoxMToxOFrOH3taLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODE3NzcwOQ==", "bodyText": "comment: 'a type conversion is applied' so null check is required.", "url": "https://github.com/mapstruct/mapstruct/pull/2275#discussion_r528177709", "createdAt": "2020-11-21T10:11:18Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/PropertyMapping.java", "diffHunk": "@@ -438,6 +434,49 @@ private Assignment assignToPlainViaSetter(Type targetType, Assignment rhs) {\n             }\n         }\n \n+        /**\n+         * Checks whether the setter wrapper should include a null / presence check or not\n+         *\n+         * @param rhs the source right hand side\n+         * @param targetType the target type\n+         *\n+         * @return whether to include a null / presence check or not\n+         */\n+        private boolean setterWrapperNeedsSourceNullCheck(Assignment rhs, Type targetType) {\n+            if ( rhs.getSourceType().isPrimitive() && rhs.getSourcePresenceCheckerReference() == null ) {\n+                // If the source type is primitive or it doesn't have a presence checker then\n+                // we shouldn't do a null check\n+                return false;\n+            }\n+\n+            if ( nvcs == ALWAYS ) {\n+                // NullValueCheckStrategy is ALWAYS -> do a null check\n+                return true;\n+            }\n+\n+            if ( nvpms == SET_TO_DEFAULT || nvpms == IGNORE ) {\n+                // NullValuePropertyMapping is SET_TO_DEFAULT or IGNORE -> do a null check\n+                return true;\n+            }\n+\n+            if ( rhs.getType().isConverted() ) {\n+                // If the type is converted then check is needed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9879b1fd9e9041cbb5183cc5e200ef6300c07f3e"}, "originalPosition": 61}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4191, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}