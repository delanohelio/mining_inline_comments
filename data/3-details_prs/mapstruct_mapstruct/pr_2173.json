{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYxNzk0NDU5", "number": 2173, "title": "#2169 Add support for defining a custom default exception for enum mapping", "bodyText": "Fixes #2169\nPerhaps we should rename EnumNamingStrategy into EnumMappingStrategy. Not sure if naming is still correct if we have the getDefaultExceptionType() in there.\nWhat do you think @sjaakd", "createdAt": "2020-08-02T11:29:11Z", "url": "https://github.com/mapstruct/mapstruct/pull/2173", "merged": true, "mergeCommit": {"oid": "7dcbef349d234e986ba41a4838937274f55e5c14"}, "closed": true, "closedAt": "2020-08-29T11:53:31Z", "author": {"login": "filiphr"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc67wE2ABqjM2MTMyNjUzNjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDnbwCgH2gAyNDYxNzk0NDU5OmQ3N2E0MGY4ZmNhMzlkMGIzMTM2MTEyMzcxODZhMGM5ZWUyMDFjYjA=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "931d3a65ed2cdfdf26638f7e44b6f0e040d01559", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/931d3a65ed2cdfdf26638f7e44b6f0e040d01559", "committedDate": "2020-08-02T11:26:15Z", "message": "#2169 Add support for defining a custom default exception for enum mapping"}, "afterCommit": {"oid": "3766b06f65c0d6c5e1595ef58c6686a1273da57d", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/3766b06f65c0d6c5e1595ef58c6686a1273da57d", "committedDate": "2020-08-02T11:30:23Z", "message": "#2169 Add support for defining a custom default exception for enum mapping"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NjU2MDUz", "url": "https://github.com/mapstruct/mapstruct/pull/2173#pullrequestreview-459656053", "createdAt": "2020-08-02T15:05:28Z", "commit": {"oid": "3766b06f65c0d6c5e1595ef58c6686a1273da57d"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3212489951e61dd17fc5962754b9ec44d6fd81a9", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/3212489951e61dd17fc5962754b9ec44d6fd81a9", "committedDate": "2020-08-29T07:31:46Z", "message": "#2169 Add support for defining a custom default exception for enum mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbcaaf792011214f9a3f19d64dc132120721887a", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/dbcaaf792011214f9a3f19d64dc132120721887a", "committedDate": "2020-08-29T07:31:46Z", "message": "Rename EnumNamingStrategy to EnumMappingStrategy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/55847378f80e7f1ebb20df5c8fcbc90e2b5691fe", "committedDate": "2020-08-29T07:31:46Z", "message": "Add default enum exception to Mapper and MapperConfig"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3766b06f65c0d6c5e1595ef58c6686a1273da57d", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/3766b06f65c0d6c5e1595ef58c6686a1273da57d", "committedDate": "2020-08-02T11:30:23Z", "message": "#2169 Add support for defining a custom default exception for enum mapping"}, "afterCommit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/55847378f80e7f1ebb20df5c8fcbc90e2b5691fe", "committedDate": "2020-08-29T07:31:46Z", "message": "Add default enum exception to Mapper and MapperConfig"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE2MjI2", "url": "https://github.com/mapstruct/mapstruct/pull/2173#pullrequestreview-478116226", "createdAt": "2020-08-29T10:11:33Z", "commit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxMTozM1rOHJaiQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxMTozM1rOHJaiQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzMzk4Ng==", "bodyText": "I know it is not part of this solution.. but I'm not happy with those methods coming from @BeanMapping.. I think they should be provided by @EnumMapping", "url": "https://github.com/mapstruct/mapstruct/pull/2173#discussion_r479633986", "createdAt": "2020-08-29T10:11:33Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/ValueMappingMethod.java", "diffHunk": "@@ -485,16 +500,28 @@ String getValue(ValueMappingOptions valueMapping) {\n     }\n \n     private ValueMappingMethod(Method method, List<MappingEntry> enumMappings, String nullTarget, String defaultTarget,\n-        boolean throwIllegalArgumentException, List<LifecycleCallbackMethodReference> beforeMappingMethods,\n+        Type defaultException,\n+        List<LifecycleCallbackMethodReference> beforeMappingMethods,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "originalPosition": 79}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE2NDY4", "url": "https://github.com/mapstruct/mapstruct/pull/2173#pullrequestreview-478116468", "createdAt": "2020-08-29T10:16:36Z", "commit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxNjozNlrOHJajzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxNjozNlrOHJajzw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNDM4Mw==", "bodyText": "when you throw a checked exception.. shouldn't we check whether the method signature has defined such exception in the throws clause or do we leave this up to the compiler?", "url": "https://github.com/mapstruct/mapstruct/pull/2173#discussion_r479634383", "createdAt": "2020-08-29T10:16:36Z", "author": {"login": "sjaakd"}, "path": "processor/src/test/resources/fixtures/org/mapstruct/ap/test/value/exception/CustomDefaultExceptionDefinedInMapperConfigImpl.java", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.value.exception;\n+\n+import javax.annotation.Generated;\n+import org.mapstruct.ap.test.value.CustomIllegalArgumentException;\n+import org.mapstruct.ap.test.value.ExternalOrderType;\n+import org.mapstruct.ap.test.value.OrderType;\n+\n+@Generated(\n+    value = \"org.mapstruct.ap.MappingProcessor\",\n+    date = \"2020-08-29T09:36:57+0200\",\n+    comments = \"version: , compiler: javac, environment: Java 11.0.2 (AdoptOpenJDK)\"\n+)\n+public class CustomDefaultExceptionDefinedInMapperConfigImpl implements CustomDefaultExceptionDefinedInMapperConfig {\n+\n+    @Override\n+    public ExternalOrderType withAnyUnmapped(OrderType orderType) {\n+        if ( orderType == null ) {\n+            return null;\n+        }\n+\n+        ExternalOrderType externalOrderType;\n+\n+        switch ( orderType ) {\n+            default: externalOrderType = ExternalOrderType.DEFAULT;\n+        }\n+\n+        return externalOrderType;\n+    }\n+\n+    @Override\n+    public ExternalOrderType withAnyRemaining(OrderType orderType) {\n+        if ( orderType == null ) {\n+            return null;\n+        }\n+\n+        ExternalOrderType externalOrderType;\n+\n+        switch ( orderType ) {\n+            case RETAIL: externalOrderType = ExternalOrderType.RETAIL;\n+            break;\n+            case B2B: externalOrderType = ExternalOrderType.B2B;\n+            break;\n+            default: externalOrderType = ExternalOrderType.DEFAULT;\n+        }\n+\n+        return externalOrderType;\n+    }\n+\n+    @Override\n+    public ExternalOrderType onlyWithMappings(OrderType orderType) {\n+        if ( orderType == null ) {\n+            return null;\n+        }\n+\n+        ExternalOrderType externalOrderType;\n+\n+        switch ( orderType ) {\n+            case EXTRA: externalOrderType = ExternalOrderType.SPECIAL;\n+            break;\n+            case STANDARD: externalOrderType = ExternalOrderType.DEFAULT;\n+            break;\n+            case NORMAL: externalOrderType = ExternalOrderType.DEFAULT;\n+            break;\n+            case RETAIL: externalOrderType = ExternalOrderType.RETAIL;\n+            break;\n+            case B2B: externalOrderType = ExternalOrderType.B2B;\n+            break;\n+            default: throw new CustomIllegalArgumentException( \"Unexpected enum constant: \" + orderType );", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "originalPosition": 73}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE2NTk1", "url": "https://github.com/mapstruct/mapstruct/pull/2173#pullrequestreview-478116595", "createdAt": "2020-08-29T10:19:14Z", "commit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxOToxNFrOHJakdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQxMDoxOToxNFrOHJakdQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYzNDU0OQ==", "bodyText": "we probably should mention that:\n\nThe exception should have an empty constructor\nThe exception (when checked) should be added to the method signature.", "url": "https://github.com/mapstruct/mapstruct/pull/2173#discussion_r479634549", "createdAt": "2020-08-29T10:19:14Z", "author": {"login": "sjaakd"}, "path": "core/src/main/java/org/mapstruct/EnumMapping.java", "diffHunk": "@@ -111,13 +111,22 @@\n      *\n      * @return the name transformation strategy\n      */\n-    String nameTransformationStrategy();\n+    String nameTransformationStrategy() default \"\";\n \n     /**\n      * The configuration that should be passed on the appropriate name transformation strategy.\n      * e.g. a suffix that should be applied to the source enum when doing name based mapping.\n      *\n      * @return the configuration to use\n      */\n-    String configuration();\n+    String configuration() default \"\";\n+\n+    /**\n+     * Exception that should be thrown by the generated code if no mapping matches.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc4MTE2NjQ2", "url": "https://github.com/mapstruct/mapstruct/pull/2173#pullrequestreview-478116646", "createdAt": "2020-08-29T10:19:57Z", "commit": {"oid": "55847378f80e7f1ebb20df5c8fcbc90e2b5691fe"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c84c1a1c3264af8b320e83feb72ff6d89348c2a", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/7c84c1a1c3264af8b320e83feb72ff6d89348c2a", "committedDate": "2020-08-29T10:32:18Z", "message": "Add info about the enum exception in the API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d77a40f8fca39d0b313611237186a0c9ee201cb0", "author": {"user": {"login": "filiphr", "name": "Filip Hrisafov"}}, "url": "https://github.com/mapstruct/mapstruct/commit/d77a40f8fca39d0b313611237186a0c9ee201cb0", "committedDate": "2020-08-29T10:55:37Z", "message": "Use unexpectedValueMappingException in the API"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4564, "cost": 1, "resetAt": "2021-11-01T16:37:27Z"}}}