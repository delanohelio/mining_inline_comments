{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxMDIzMTgz", "number": 2129, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDo1MjoyMVrOELYxtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDo1MjoyMVrOELYxtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMzc1NzM0OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNDo1MjoyMVrOGs8XMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNFQxNjoyOTowNlrOGs8yDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3OTUwNg==", "bodyText": "resolveToType already checks for isTypeVar(). You can directly do\nySourceType = ySourceType.resolveToType( targetType, methodYCandidate.getResultType() );", "url": "https://github.com/mapstruct/mapstruct/pull/2129#discussion_r449779506", "createdAt": "2020-07-04T14:52:21Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -426,29 +426,33 @@ private Assignment resolveViaMethodAndMethod(Type sourceType, Type targetType) {\n             // sourceMethod or builtIn that fits the signature B to C. Only then there is a match. If we have a match\n             // a nested method call can be called. so C = methodY( methodX (A) )\n             for ( Method methodYCandidate : methodYCandidates ) {\n-                if ( Object.class.getName()\n-                    .equals( methodYCandidate.getSourceParameters().get( 0 ).getType().getName() ) ) {\n+                Type ySourceType = methodYCandidate.getSourceParameters().get( 0 ).getType();\n+                if ( Object.class.getName().equals( ySourceType.getName() ) ) {\n                     //  java.lang.Object as intermediate result\n                     continue;\n                 }\n \n-                methodRefY =\n-                    resolveViaMethod( methodYCandidate.getSourceParameters().get( 0 ).getType(), targetType, true );\n+                if ( ySourceType.isTypeVar() ) {\n+                    ySourceType = ySourceType.resolveToType( targetType, methodYCandidate.getResultType() );\n+                }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8856e10f5d0a79464291631f1ea356994f1d8f16"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc4NjM4Mw==", "bodyText": "that's true..  but there's actually a reason for this:\n\nI did not want to do the resolveToType unchecked in the resolveToType method itself.. Was a bit struggling with the method name.\nI wanted to make the flow clear at the call site..\n\nI could have made it resolveTypeVarToType at hind site.  Will do this.", "url": "https://github.com/mapstruct/mapstruct/pull/2129#discussion_r449786383", "createdAt": "2020-07-04T16:29:06Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -426,29 +426,33 @@ private Assignment resolveViaMethodAndMethod(Type sourceType, Type targetType) {\n             // sourceMethod or builtIn that fits the signature B to C. Only then there is a match. If we have a match\n             // a nested method call can be called. so C = methodY( methodX (A) )\n             for ( Method methodYCandidate : methodYCandidates ) {\n-                if ( Object.class.getName()\n-                    .equals( methodYCandidate.getSourceParameters().get( 0 ).getType().getName() ) ) {\n+                Type ySourceType = methodYCandidate.getSourceParameters().get( 0 ).getType();\n+                if ( Object.class.getName().equals( ySourceType.getName() ) ) {\n                     //  java.lang.Object as intermediate result\n                     continue;\n                 }\n \n-                methodRefY =\n-                    resolveViaMethod( methodYCandidate.getSourceParameters().get( 0 ).getType(), targetType, true );\n+                if ( ySourceType.isTypeVar() ) {\n+                    ySourceType = ySourceType.resolveToType( targetType, methodYCandidate.getResultType() );\n+                }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTc3OTUwNg=="}, "originalCommit": {"oid": "8856e10f5d0a79464291631f1ea356994f1d8f16"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4223, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}