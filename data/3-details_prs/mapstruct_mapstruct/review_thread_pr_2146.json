{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ1NTYyOTY4", "number": 2146, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo1Nzo0OVrOEO_S-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzowNDozM1rOEO_a7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTUyNTY5OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/selector/XmlElementDeclSelector.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNjo1Nzo0OVrOGycpgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDo1NzoxMlrOGyl04g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MTM2Mw==", "bodyText": "Does it matter that we are not doing getValue for the name?", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455551363", "createdAt": "2020-07-16T06:57:49Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/selector/XmlElementDeclSelector.java", "diffHunk": "@@ -69,7 +69,7 @@ public XmlElementDeclSelector(Types typeUtils) {\n             }\n \n             String name = xmlElementDecl.name().get();\n-            TypeMirror scope = xmlElementDecl.scope().get();\n+            TypeMirror scope = xmlElementDecl.scope().getValue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1MTc1MQ==", "bodyText": "From the top of my head: get() will return the default value when null,  but in this case we want getValue();", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455651751", "createdAt": "2020-07-16T09:28:01Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/selector/XmlElementDeclSelector.java", "diffHunk": "@@ -69,7 +69,7 @@ public XmlElementDeclSelector(Types typeUtils) {\n             }\n \n             String name = xmlElementDecl.name().get();\n-            TypeMirror scope = xmlElementDecl.scope().get();\n+            TypeMirror scope = xmlElementDecl.scope().getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MTM2Mw=="}, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5OTU4OA==", "bodyText": "So.. to be precise. It does perhaps not make a difference.  Its indeed as above. Omitting scope from the annotation (as is done in the test case) gives  a scope:\n\nGLOBAL.class with get()\nnull with getValue()\n\nI prefer the latter one.. It will not go into typeUtils.isSameType( scope, xmlElementRefInfo.sourceType() ) on line 76", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455699588", "createdAt": "2020-07-16T10:53:18Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/selector/XmlElementDeclSelector.java", "diffHunk": "@@ -69,7 +69,7 @@ public XmlElementDeclSelector(Types typeUtils) {\n             }\n \n             String name = xmlElementDecl.name().get();\n-            TypeMirror scope = xmlElementDecl.scope().get();\n+            TypeMirror scope = xmlElementDecl.scope().getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MTM2Mw=="}, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTcwMTczMA==", "bodyText": "Makes sense", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455701730", "createdAt": "2020-07-16T10:57:12Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/source/selector/XmlElementDeclSelector.java", "diffHunk": "@@ -69,7 +69,7 @@ public XmlElementDeclSelector(Types typeUtils) {\n             }\n \n             String name = xmlElementDecl.name().get();\n-            TypeMirror scope = xmlElementDecl.scope().get();\n+            TypeMirror scope = xmlElementDecl.scope().getValue();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1MTM2Mw=="}, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0MTU0NjA3OnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQwNzowNDozM1rOGyc1wQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNlQxMDo1Mzo0OFrOGyltwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1NDQ5Nw==", "bodyText": "Why do we need 2 methods? One with Set and another one with List?", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455554497", "createdAt": "2020-07-16T07:04:33Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -640,15 +433,21 @@ private boolean isUpdateMethodForMapping(Method methodCandidate) {\n                 && !methodCandidate.isLifecycleCallbackMethod();\n         }\n \n-        private <T extends Method> SelectedMethod<T> getBestMatch(List<T> methods, Type sourceType, Type returnType) {\n+        private <T extends Method> List<SelectedMethod<T>> getBestMatch(Set<T> methods, Type source, Type target) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 412}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY1MzI0NQ==", "bodyText": "I do use sets in the 2 step matchers to store unique 'SelectedMethods'.. I don't do that in the regular one-step variant. So I wanted to preserve order there (did not want to touch it). I bolted on the Set and did not want to change it all over the place..\nPerhaps later in a cleanup?", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455653245", "createdAt": "2020-07-16T09:30:27Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -640,15 +433,21 @@ private boolean isUpdateMethodForMapping(Method methodCandidate) {\n                 && !methodCandidate.isLifecycleCallbackMethod();\n         }\n \n-        private <T extends Method> SelectedMethod<T> getBestMatch(List<T> methods, Type sourceType, Type returnType) {\n+        private <T extends Method> List<SelectedMethod<T>> getBestMatch(Set<T> methods, Type source, Type target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1NDQ5Nw=="}, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 412}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTY5OTkwNg==", "bodyText": "I'll push an update.. removing the method.. I'll change it at the (one) call site.", "url": "https://github.com/mapstruct/mapstruct/pull/2146#discussion_r455699906", "createdAt": "2020-07-16T10:53:48Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/processor/creation/MappingResolverImpl.java", "diffHunk": "@@ -640,15 +433,21 @@ private boolean isUpdateMethodForMapping(Method methodCandidate) {\n                 && !methodCandidate.isLifecycleCallbackMethod();\n         }\n \n-        private <T extends Method> SelectedMethod<T> getBestMatch(List<T> methods, Type sourceType, Type returnType) {\n+        private <T extends Method> List<SelectedMethod<T>> getBestMatch(Set<T> methods, Type source, Type target) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NTU1NDQ5Nw=="}, "originalCommit": {"oid": "46c8fcd016a78bfca99054cbdd7f1bf47895298a"}, "originalPosition": 412}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4227, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}