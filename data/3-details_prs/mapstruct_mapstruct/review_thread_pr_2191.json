{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc1NDMxMTQ4", "number": 2191, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNjoxMlrOEd2QgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNjozOVrOEd2Q-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzMzMTIwOnYy", "diffSide": "RIGHT", "path": "processor/src/test/java/org/mapstruct/ap/test/bugs/_2174/UserMapper.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNjoxMlrOHJQbPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNjoxMjoyMFrOHJZT9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODM1MQ==", "bodyText": "would be interesting to see if 2 forged methods are called from the same method. E.g. a postal code and a PostalCodeNotFounException. Both should be added to the thrown clause", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479468351", "createdAt": "2020-08-28T18:26:12Z", "author": {"login": "sjaakd"}, "path": "processor/src/test/java/org/mapstruct/ap/test/bugs/_2174/UserMapper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.bugs._2174;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.factory.Mappers;\n+\n+/**\n+ * @author Filip Hrisafov\n+ */\n+@Mapper\n+public interface UserMapper {\n+\n+    UserMapper INSTANCE = Mappers.getMapper( UserMapper.class );\n+\n+    @Mapping(target = \"address.city\", source = \"city\")\n+    User map(UserDto dto) throws CityNotFoundException;\n+\n+    default City mapCity(String city) throws CityNotFoundException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMzk0MA==", "bodyText": "I'll add that as well", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479613940", "createdAt": "2020-08-29T06:12:20Z", "author": {"login": "filiphr"}, "path": "processor/src/test/java/org/mapstruct/ap/test/bugs/_2174/UserMapper.java", "diffHunk": "@@ -0,0 +1,87 @@\n+/*\n+ * Copyright MapStruct Authors.\n+ *\n+ * Licensed under the Apache License version 2.0, available at http://www.apache.org/licenses/LICENSE-2.0\n+ */\n+package org.mapstruct.ap.test.bugs._2174;\n+\n+import org.mapstruct.Mapper;\n+import org.mapstruct.Mapping;\n+import org.mapstruct.factory.Mappers;\n+\n+/**\n+ * @author Filip Hrisafov\n+ */\n+@Mapper\n+public interface UserMapper {\n+\n+    UserMapper INSTANCE = Mappers.getMapper( UserMapper.class );\n+\n+    @Mapping(target = \"address.city\", source = \"city\")\n+    User map(UserDto dto) throws CityNotFoundException;\n+\n+    default City mapCity(String city) throws CityNotFoundException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODM1MQ=="}, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5NzMzMjQyOnYy", "diffSide": "RIGHT", "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxODoyNjozOVrOHJQcBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOVQwNjo1ODo0MFrOHJZhog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ==", "bodyText": "and what about factory methods?", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479468549", "createdAt": "2020-08-28T18:26:39Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -296,8 +296,18 @@ else if ( !method.isUpdateMethod() ) {\n                             existingVariableNames\n             );\n \n-            if (factoryMethod != null && method instanceof ForgedMethod ) {\n-                ( (ForgedMethod) method ).addThrownTypes( factoryMethod.getThrownTypes() );\n+            if ( method instanceof ForgedMethod ) {\n+                ForgedMethod forgedMethod = (ForgedMethod) method;\n+                if ( factoryMethod != null ) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxMzkyMQ==", "bodyText": "What about them? Before the if check was if ( factoryMethod != null && method instanceOf ForgedMethod ). I moved the if ( factoryMethod != null ) inside.", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479613921", "createdAt": "2020-08-29T06:12:03Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -296,8 +296,18 @@ else if ( !method.isUpdateMethod() ) {\n                             existingVariableNames\n             );\n \n-            if (factoryMethod != null && method instanceof ForgedMethod ) {\n-                ( (ForgedMethod) method ).addThrownTypes( factoryMethod.getThrownTypes() );\n+            if ( method instanceof ForgedMethod ) {\n+                ForgedMethod forgedMethod = (ForgedMethod) method;\n+                if ( factoryMethod != null ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNjMzMg==", "bodyText": "I meant: what if a factory method throws an exception while creating an object.. but I guess that's covered elsewhere ...", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479616332", "createdAt": "2020-08-29T06:43:50Z", "author": {"login": "sjaakd"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -296,8 +296,18 @@ else if ( !method.isUpdateMethod() ) {\n                             existingVariableNames\n             );\n \n-            if (factoryMethod != null && method instanceof ForgedMethod ) {\n-                ( (ForgedMethod) method ).addThrownTypes( factoryMethod.getThrownTypes() );\n+            if ( method instanceof ForgedMethod ) {\n+                ForgedMethod forgedMethod = (ForgedMethod) method;\n+                if ( factoryMethod != null ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTYxNzQ0Mg==", "bodyText": "I didn't go down this rabbit hole :). I guess it is covered in some other test case", "url": "https://github.com/mapstruct/mapstruct/pull/2191#discussion_r479617442", "createdAt": "2020-08-29T06:58:40Z", "author": {"login": "filiphr"}, "path": "processor/src/main/java/org/mapstruct/ap/internal/model/BeanMappingMethod.java", "diffHunk": "@@ -296,8 +296,18 @@ else if ( !method.isUpdateMethod() ) {\n                             existingVariableNames\n             );\n \n-            if (factoryMethod != null && method instanceof ForgedMethod ) {\n-                ( (ForgedMethod) method ).addThrownTypes( factoryMethod.getThrownTypes() );\n+            if ( method instanceof ForgedMethod ) {\n+                ForgedMethod forgedMethod = (ForgedMethod) method;\n+                if ( factoryMethod != null ) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTQ2ODU0OQ=="}, "originalCommit": {"oid": "01dc8535ea56160d286d12e9b6afb432c45459a7"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4238, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}