{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM2OTMxNTcw", "number": 279, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMDowN1rOEHA7jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMjo1NzoyMlrOEHaeyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzkwNzMyOnYy", "diffSide": "RIGHT", "path": "examples-test-utils/pom.xml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMDowN1rOGmKbgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMDowN1rOGmKbgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY2OTk1NQ==", "bodyText": "As not all the examples might require the KafkaClient, I set this dependency as provided.", "url": "https://github.com/kiegroup/kogito-examples/pull/279#discussion_r442669955", "createdAt": "2020-06-19T07:10:07Z", "author": {"login": "Sgitario"}, "path": "examples-test-utils/pom.xml", "diffHunk": "@@ -34,11 +34,23 @@\n       <scope>compile</scope>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>kafka</artifactId>\n+      <scope>compile</scope>\n+    </dependency>\n+    \n     <dependency>\n       <groupId>io.quarkus</groupId>\n       <artifactId>quarkus-junit5</artifactId>\n       <scope>provided</scope>\n     </dependency>\n+    \n+    <dependency>\n+      <groupId>org.apache.kafka</groupId>\n+      <artifactId>kafka-clients</artifactId>\n+      <scope>provided</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab5a435f4f4991a46684862e6e9c611c9394437f"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc1NzkxMDM1OnYy", "diffSide": "RIGHT", "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoKafkaContainer.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMToyNVrOGmKdeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQwNzoxMToyNVrOGmKdeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjY3MDQ1Nw==", "bodyText": "Some examples need to run the persistence and events at the same time. That's why we can't use the default test.category for this.", "url": "https://github.com/kiegroup/kogito-examples/pull/279#discussion_r442670457", "createdAt": "2020-06-19T07:11:25Z", "author": {"login": "Sgitario"}, "path": "examples-test-utils/src/main/java/org/kie/kogito/testcontainers/KogitoKafkaContainer.java", "diffHunk": "@@ -0,0 +1,76 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.testcontainers;\n+\n+import org.kie.kogito.resources.ConditionHolder;\n+import org.kie.kogito.resources.ConditionalTestResource;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.testcontainers.containers.KafkaContainer;\n+import org.testcontainers.containers.Network;\n+import org.testcontainers.containers.output.Slf4jLogConsumer;\n+\n+/**\n+ * Kafka Container for Kogito examples.\n+ */\n+public class KogitoKafkaContainer extends KafkaContainer implements ConditionalTestResource<KogitoKafkaContainer> {\n+\n+    public static final String QUARKUS_KAFKA_BOOTSTRAP_SERVERS = \"kafka.bootstrap.servers\";\n+    public static final String SPRINGBOOT_KAFKA_BOOTSTRAP_SERVERS = \"spring.kafka.bootstrap-servers\";\n+\n+    private static final String CLOUD_EVENTS_PROPERTY = \"tests.cloud.events\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ab5a435f4f4991a46684862e6e9c611c9394437f"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MjA5MzUyOnYy", "diffSide": "RIGHT", "path": "examples-test-utils/pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwMjo1NzoyMlrOGmwmFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQwNTozNjo0OVrOGmyd0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTI1NA==", "bodyText": "compile is the default anyway, doesn't need to be specified.", "url": "https://github.com/kiegroup/kogito-examples/pull/279#discussion_r443295254", "createdAt": "2020-06-22T02:57:22Z", "author": {"login": "cristianonicolai"}, "path": "examples-test-utils/pom.xml", "diffHunk": "@@ -34,11 +34,23 @@\n       <scope>compile</scope>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>kafka</artifactId>\n+      <scope>compile</scope>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6cc384654c89788022af7f7434c5458928e4a2d5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzMyNTkwNg==", "bodyText": "Removed", "url": "https://github.com/kiegroup/kogito-examples/pull/279#discussion_r443325906", "createdAt": "2020-06-22T05:36:49Z", "author": {"login": "Sgitario"}, "path": "examples-test-utils/pom.xml", "diffHunk": "@@ -34,11 +34,23 @@\n       <scope>compile</scope>\n     </dependency>\n     \n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>kafka</artifactId>\n+      <scope>compile</scope>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzI5NTI1NA=="}, "originalCommit": {"oid": "6cc384654c89788022af7f7434c5458928e4a2d5"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 537, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}