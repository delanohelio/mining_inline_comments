{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM5NTg4MjY4", "number": 487, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODoxMToxNlrOFFdAhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTo0MTozOVrOFFffmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjYyNDY5OnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODoxMToxNlrOIF-DSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTo1MzozNVrOIGHKgg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDQ0MQ==", "bodyText": "maybe rename to indexTpl", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543130441", "createdAt": "2020-12-15T08:11:16Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2NDAzNA==", "bodyText": "this matches with the file name that gets injected, so not sure, wdyt?", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543264034", "createdAt": "2020-12-15T11:28:00Z", "author": {"login": "cristianonicolai"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDQ0MQ=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI2NTI2Mw==", "bodyText": "To know it is a template and not the index page rendered", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543265263", "createdAt": "2020-12-15T11:30:05Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDQ0MQ=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3OTc0Ng==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543279746", "createdAt": "2020-12-15T11:53:35Z", "author": {"login": "cristianonicolai"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDQ0MQ=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 51}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMjYyNjE2OnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwODoxMTozNVrOIF-EIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTo1Mzo0MVrOIGHKwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDY1Nw==", "bodyText": "maybe rename template -> indexPage", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543130657", "createdAt": "2020-12-15T08:11:35Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;\n \n     void setupRouter(@Observes Router router) {\n         router.route().handler(LoggerHandler.create());\n         router.route().handler(FaviconHandler.create());\n         router.route().handler(StaticHandler.create());\n-        router.route(GET, \"/\").handler(ctx -> ctx.response().end(resource));\n+        String template = index.render();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3OTgwOA==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543279808", "createdAt": "2020-12-15T11:53:41Z", "author": {"login": "cristianonicolai"}, "path": "kogito-travel-agency/extended/travels/src/main/java/org/kie/kogito/app/VertxRouter.java", "diffHunk": "@@ -15,57 +15,29 @@\n  */\n package org.kie.kogito.app;\n \n-import java.net.URL;\n-\n-import javax.annotation.PostConstruct;\n import javax.enterprise.context.ApplicationScoped;\n import javax.enterprise.event.Observes;\n import javax.inject.Inject;\n \n-import io.vertx.core.Vertx;\n-import io.vertx.core.buffer.Buffer;\n+import io.quarkus.qute.Template;\n import io.vertx.ext.web.Router;\n import io.vertx.ext.web.handler.FaviconHandler;\n import io.vertx.ext.web.handler.LoggerHandler;\n import io.vertx.ext.web.handler.StaticHandler;\n-import org.eclipse.microprofile.config.inject.ConfigProperty;\n \n import static io.vertx.core.http.HttpMethod.GET;\n-import static java.nio.charset.StandardCharsets.UTF_8;\n \n @ApplicationScoped\n public class VertxRouter {\n \n     @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.http.url\", defaultValue = \"http://localhost:8180\")\n-    String dataIndexHttpURL;\n-\n-    @Inject\n-    @ConfigProperty(name = \"kogito.dataindex.ws.url\", defaultValue = \"ws://localhost:8180\")\n-    String dataIndexWsURL;\n-\n-    @Inject\n-    Vertx vertx;\n-\n-    private Buffer resource;\n-\n-    @PostConstruct\n-    public void init() {\n-        try {\n-            resource = Buffer.buffer(vertx.fileSystem()\n-                                             .readFileBlocking(\"META-INF/resources/index.html\")\n-                                             .toString(UTF_8)\n-                                             .replace(\"__GRAPHQL_HTTP_ENDPOINT__\", \"\\\"\" + dataIndexHttpURL + \"/graphql\\\"\")\n-                                             .replace(\"__GRAPHQL_WS_ENDPOINT__\", \"\\\"\" + dataIndexWsURL + \"/graphql\\\"\"));\n-        } catch (Exception e) {\n-            throw new RuntimeException(e);\n-        }\n-    }\n+    Template index;\n \n     void setupRouter(@Observes Router router) {\n         router.route().handler(LoggerHandler.create());\n         router.route().handler(FaviconHandler.create());\n         router.route().handler(StaticHandler.create());\n-        router.route(GET, \"/\").handler(ctx -> ctx.response().end(resource));\n+        String template = index.render();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzEzMDY1Nw=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzAzMDMwOnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/extended/travels/src/main/resources/templates/index.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTo0MToxOFrOIGBv3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTo1Mzo0NlrOIGHLBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5MTAwNQ==", "bodyText": "Nitpicking too.. but could we have graphql as const?", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543191005", "createdAt": "2020-12-15T09:41:18Z", "author": {"login": "pefernan"}, "path": "kogito-travel-agency/extended/travels/src/main/resources/templates/index.html", "diffHunk": "@@ -55,7 +71,7 @@ <h1>Travels</h1>\n </div>\n </div>\n <script>\n-    var graphql = __GRAPHQL_HTTP_ENDPOINT__;\n+    var graphql = '{config:property('kogito.dataindex.http.url') or 'http://localhost:8180'}/graphql';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3OTg3OQ==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543279879", "createdAt": "2020-12-15T11:53:46Z", "author": {"login": "cristianonicolai"}, "path": "kogito-travel-agency/extended/travels/src/main/resources/templates/index.html", "diffHunk": "@@ -55,7 +71,7 @@ <h1>Travels</h1>\n </div>\n </div>\n <script>\n-    var graphql = __GRAPHQL_HTTP_ENDPOINT__;\n+    var graphql = '{config:property('kogito.dataindex.http.url') or 'http://localhost:8180'}/graphql';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5MTAwNQ=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxMzAzMTkyOnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/extended/visas/src/main/resources/templates/index.html", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwOTo0MTozOVrOIGBw3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxMTo1Mzo1N1rOIGHLag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5MTI2MA==", "bodyText": "Same", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543191260", "createdAt": "2020-12-15T09:41:39Z", "author": {"login": "pefernan"}, "path": "kogito-travel-agency/extended/visas/src/main/resources/templates/index.html", "diffHunk": "@@ -48,7 +64,7 @@ <h1>Visa applications</h1>\n </div>\n </div>\n <script>\n-    var graphql = __GRAPHQL_HTTP_ENDPOINT__;\n+    var graphql = '{config:property('kogito.dataindex.http.url') or 'http://localhost:8180'}/graphql';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzI3OTk3OA==", "bodyText": "done", "url": "https://github.com/kiegroup/kogito-examples/pull/487#discussion_r543279978", "createdAt": "2020-12-15T11:53:57Z", "author": {"login": "cristianonicolai"}, "path": "kogito-travel-agency/extended/visas/src/main/resources/templates/index.html", "diffHunk": "@@ -48,7 +64,7 @@ <h1>Visa applications</h1>\n </div>\n </div>\n <script>\n-    var graphql = __GRAPHQL_HTTP_ENDPOINT__;\n+    var graphql = '{config:property('kogito.dataindex.http.url') or 'http://localhost:8180'}/graphql';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzE5MTI2MA=="}, "originalCommit": {"oid": "7fe830e3353905857fc745e722f8663570483691"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 378, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}