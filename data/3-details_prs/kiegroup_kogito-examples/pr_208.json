{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNDM5MTcw", "number": 208, "title": "KOGITO-1798: Disable example failing tests with persistence until def\u2026", "bodyText": "\u2026ects are fixed\nJIRA Ticket: https://issues.redhat.com/browse/KOGITO-1798\nDescription: We have to ignore a couple of tests because some defects with persistance.\nAlso, we wanted to make the quarkus and spring boot versions behave the same using: same name files and using JUnit 5.\nFinally, I added some configuration I needed for running Infinispan in Spring Boot (in Quarkus, this configuration was not necessary).", "createdAt": "2020-04-09T13:56:24Z", "url": "https://github.com/kiegroup/kogito-examples/pull/208", "merged": true, "mergeCommit": {"oid": "698784fb0d2801b873732cf7c217c02773574687"}, "closed": true, "closedAt": "2020-04-15T14:10:53Z", "author": {"login": "Sgitario"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXfUKMgBqjMyMzAwNjgwMTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX4tetAFqTM5MzgxMTg4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81f694617cf6747629b662c6c636bc8d95f389f3", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/81f694617cf6747629b662c6c636bc8d95f389f3", "committedDate": "2020-04-09T13:54:33Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/14802de701c0c2507f1e3b9397b59757377f4c7c", "committedDate": "2020-04-14T08:35:01Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzY2MDA5", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392766009", "createdAt": "2020-04-14T09:41:38Z", "commit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo0MTozOFrOGFGlKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo0MTozOFrOGFGlKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwMzg4Mg==", "bodyText": "Can you please unify assetions?\nYou seems to use old and new JUnit at the same time.", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408003882", "createdAt": "2020-04-14T09:41:38Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzY4OTg5", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392768989", "createdAt": "2020-04-14T09:45:23Z", "commit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo0NToyNFrOGFGvHw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwOTo0NToyNFrOGFGvHw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAwNjQzMQ==", "bodyText": "Why did you delete assertEquals(ProcessInstance.STATE_COMPLETED, processInstance.status());", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408006431", "createdAt": "2020-04-14T09:45:24Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static org.junit.Assert.assertNotNull;\n+import static org.junit.Assert.assertTrue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertFalse;\n+\n+import java.util.Collections;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.auth.SecurityPolicy;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.kie.kogito.process.ProcessInstance;\n+import org.kie.kogito.process.ProcessInstances;\n+import org.kie.kogito.process.WorkItem;\n+import org.kie.kogito.services.identity.StaticIdentityProvider;\n+import org.springframework.beans.factory.annotation.Autowired;\n+import org.springframework.beans.factory.annotation.Qualifier;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.AFTER_EACH_TEST_METHOD) // reset spring context after each test method\n+public class OrdersProcessTest {\n+\n+\t@Autowired\n+\t@Qualifier(\"demo.orders\")\n+\tProcess<? extends Model> orderProcess;\n+\n+\t@Autowired\n+\t@Qualifier(\"demo.orderItems\")\n+\tProcess<? extends Model> orderItemsProcess;\n+\n+\tprivate SecurityPolicy policy = SecurityPolicy\n+\t\t\t.of(new StaticIdentityProvider(\"john\", Collections.singletonList(\"managers\")));\n+\n+\t@Test\n+\tpublic void testOrderProcess() {\n+\t\tassertNotNull(orderProcess);\n+\n+\t\tModel m = orderProcess.createModel();\n+\t\tMap<String, Object> parameters = new HashMap<>();\n+\t\tparameters.put(\"approver\", \"john\");\n+\t\tparameters.put(\"order\", new Order(\"12345\", false, 0.0));\n+\t\tm.fromMap(parameters);\n+\n+\t\tProcessInstance<?> processInstance = orderProcess.createInstance(m);\n+\t\tprocessInstance.start();\n+\n+\t\tassertEquals(ProcessInstance.STATE_ACTIVE, processInstance.status());\n+\t\tModel result = (Model) processInstance.variables();\n+\t\tassertEquals(2, result.toMap().size());\n+\t\tassertTrue(((Order) result.toMap().get(\"order\")).getTotal() > 0);\n+\n+\t\tProcessInstances<? extends Model> orderItemProcesses = orderItemsProcess.instances();\n+\t\tassertEquals(1, orderItemProcesses.values().size());\n+\n+\t\tProcessInstance<?> childProcessInstance = orderItemProcesses.values().iterator().next();\n+\n+\t\tList<WorkItem> workItems = childProcessInstance.workItems(policy);\n+\t\tassertEquals(1, workItems.size());\n+\n+\t\tchildProcessInstance.completeWorkItem(workItems.get(0).getId(), null, policy);\n+\n+\t\tassertEquals(ProcessInstance.STATE_COMPLETED, childProcessInstance.status());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c"}, "originalPosition": 75}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "14802de701c0c2507f1e3b9397b59757377f4c7c", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/14802de701c0c2507f1e3b9397b59757377f4c7c", "committedDate": "2020-04-14T08:35:01Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/8532e321f7d680fb3a3c3567a76c415a3b633369", "committedDate": "2020-04-14T09:58:44Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzgxNTU0", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392781554", "createdAt": "2020-04-14T10:02:07Z", "commit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDowMjowOFrOGFHXjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDowMjowOFrOGFHXjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNjc4MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t      </plugin>\n          \n          \n            \n            \t    </plugin>", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408016780", "createdAt": "2020-04-14T10:02:08Z", "author": {"login": "sutaakar"}, "path": "process-quarkus-example/pom.xml", "diffHunk": "@@ -129,6 +129,19 @@\n           <version>${project.version}</version>\n         </dependency>\n       </dependencies>\n+      <build>\n+        <plugins>\n+          <plugin>\n+            <groupId>org.apache.maven.plugins</groupId>\n+            <artifactId>maven-surefire-plugin</artifactId>\n+            <configuration>\n+              <systemPropertyVariables>\n+                <tests.category>persistence</tests.category>\n+              </systemPropertyVariables>\n+            </configuration>\n+\t      </plugin>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzgyMjQ1", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392782245", "createdAt": "2020-04-14T10:03:01Z", "commit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDowMzowMlrOGFHZsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDowMzowMlrOGFHZsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAxNzMzMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  \t<tests.category>persistence</tests.category>\n          \n          \n            \n                    <tests.category>persistence</tests.category>", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408017331", "createdAt": "2020-04-14T10:03:02Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -119,6 +119,9 @@\n           <name>persistence</name>\n         </property>\n       </activation>\n+      <properties>\n+      \t<tests.category>persistence</tests.category>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzk2MTA4", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392796108", "createdAt": "2020-04-14T10:22:56Z", "commit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDoyMjo1NlrOGFIH_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDoyMjo1NlrOGFIH_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTE4Mg==", "bodyText": "Wouldn't it have more sense to keep there AFTER_EACH_TEST_METHOD?", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408029182", "createdAt": "2020-04-14T10:22:56Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java", "diffHunk": "@@ -0,0 +1,303 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNzk2NzU1", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392796755", "createdAt": "2020-04-14T10:23:54Z", "commit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDoyMzo1NFrOGFIKGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMDoyMzo1NFrOGFIKGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg==", "bodyText": "IMHO it should be rather placed in AfterEach so the test cleans up after it has been executed.", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408029722", "createdAt": "2020-04-14T10:23:54Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java", "diffHunk": "@@ -0,0 +1,303 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method\n+public class OrdersRestTest {\n+\n+\tprivate static String orderPayload = \"{\\\"approver\\\" : \\\"john\\\", \\\"order\\\" : {\\\"orderNumber\\\" : \\\"12345\\\", \\\"shipped\\\" : false}}\";\n+\n+\t@Inject\n+\t@Named(\"demo.orders\")\n+\tProcess<? extends Model> orderProcess;\n+\n+\t@Inject\n+\t@Named(\"demo.orderItems\")\n+\tProcess<? extends Model> orderItemsProcess;\n+\n+\t@LocalServerPort\n+\tint port;\n+\n+\t@BeforeEach\n+\tpublic void setUp() {\n+\t\tRestAssured.port = port;\n+\n+        // need it when running with persistence\n+        orderProcess.instances().values().forEach(pi -> pi.abort());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/8532e321f7d680fb3a3c3567a76c415a3b633369", "committedDate": "2020-04-14T09:58:44Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "committedDate": "2020-04-14T10:27:48Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/9c5f29577f92c5589d32d5efa6ae61f319c65e3b", "committedDate": "2020-04-14T10:27:48Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "committedDate": "2020-04-14T10:43:47Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/3d5a3ecb8ca0e84d2472bdd8fa43a25fecc5a5f8", "committedDate": "2020-04-14T10:43:47Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/94a49c23e28aa46407372de4f3c8178dedcaf379", "committedDate": "2020-04-14T10:55:51Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODQ2NDI2", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392846426", "createdAt": "2020-04-14T11:42:35Z", "commit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODU5MDE1", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392859015", "createdAt": "2020-04-14T12:02:19Z", "commit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxMjowMjoxOVrOGFLUng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDowMTozN1rOGFQHjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODA4MTU2Ng==", "bodyText": "did you add the auth yourself ?", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408081566", "createdAt": "2020-04-14T12:02:19Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/src/main/resources/application.properties", "diffHunk": "@@ -2,4 +2,8 @@ spring.mvc.servlet.path=/docs\n \n resteasy.jaxrs.scan-packages=org.kie.kogito.**\n \n-infinispan.remote.server-list=127.0.0.1:11222\n\\ No newline at end of file\n+infinispan.remote.server-list=127.0.0.1:11222", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODE2MDE0Mg==", "bodyText": "any reason for double tests.category ?", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408160142", "createdAt": "2020-04-14T14:01:37Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -119,6 +119,9 @@\n           <name>persistence</name>\n         </property>\n       </activation>\n+      <properties>\n+      \t<tests.category>persistence</tests.category>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "94a49c23e28aa46407372de4f3c8178dedcaf379", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/94a49c23e28aa46407372de4f3c8178dedcaf379", "committedDate": "2020-04-14T10:55:51Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "ba140456694b353e2d9c9734e2910a309771f664", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/ba140456694b353e2d9c9734e2910a309771f664", "committedDate": "2020-04-14T14:40:50Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyOTk4NDg2", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-392998486", "createdAt": "2020-04-14T14:43:56Z", "commit": {"oid": "ba140456694b353e2d9c9734e2910a309771f664"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMDUyMTc3", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-393052177", "createdAt": "2020-04-14T15:38:06Z", "commit": {"oid": "ba140456694b353e2d9c9734e2910a309771f664"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozODowNlrOGFUvSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozOToxOVrOGFUzEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNTg1MQ==", "bodyText": "I usually prefer to have the clean up done in the before method. That helps if you run let's say a separated service ( infinispan ? ) so the state is always the expected one when the test executes.", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408235851", "createdAt": "2020-04-14T15:38:06Z", "author": {"login": "cristianonicolai"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersRestTest.java", "diffHunk": "@@ -0,0 +1,303 @@\n+package org.kie.kogito.examples.demo;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+import java.util.Map;\n+\n+import javax.inject.Inject;\n+import javax.inject.Named;\n+\n+import org.junit.jupiter.api.BeforeEach;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.extension.ExtendWith;\n+import org.kie.kogito.Model;\n+import org.kie.kogito.examples.DemoApplication;\n+import org.kie.kogito.process.Process;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.boot.web.server.LocalServerPort;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+import org.springframework.test.context.junit.jupiter.SpringExtension;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+@ExtendWith(SpringExtension.class)\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.RANDOM_PORT, classes = DemoApplication.class)\n+@DirtiesContext(classMode = ClassMode.BEFORE_EACH_TEST_METHOD) // reset spring context after each test method\n+public class OrdersRestTest {\n+\n+\tprivate static String orderPayload = \"{\\\"approver\\\" : \\\"john\\\", \\\"order\\\" : {\\\"orderNumber\\\" : \\\"12345\\\", \\\"shipped\\\" : false}}\";\n+\n+\t@Inject\n+\t@Named(\"demo.orders\")\n+\tProcess<? extends Model> orderProcess;\n+\n+\t@Inject\n+\t@Named(\"demo.orderItems\")\n+\tProcess<? extends Model> orderItemsProcess;\n+\n+\t@LocalServerPort\n+\tint port;\n+\n+\t@BeforeEach\n+\tpublic void setUp() {\n+\t\tRestAssured.port = port;\n+\n+        // need it when running with persistence\n+        orderProcess.instances().values().forEach(pi -> pi.abort());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODAyOTcyMg=="}, "originalCommit": {"oid": "8532e321f7d680fb3a3c3567a76c415a3b633369"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNjgxNg==", "bodyText": "missing headers?", "url": "https://github.com/kiegroup/kogito-examples/pull/208#discussion_r408236816", "createdAt": "2020-04-14T15:39:19Z", "author": {"login": "cristianonicolai"}, "path": "process-springboot-example/src/test/java/org/kie/kogito/examples/demo/OrdersProcessTest.java", "diffHunk": "@@ -0,0 +1,129 @@\n+package org.kie.kogito.examples.demo;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba140456694b353e2d9c9734e2910a309771f664"}, "originalPosition": 1}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "committedDate": "2020-04-15T11:52:17Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ba140456694b353e2d9c9734e2910a309771f664", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/ba140456694b353e2d9c9734e2910a309771f664", "committedDate": "2020-04-14T14:40:50Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}, "afterCommit": {"oid": "13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "author": {"user": {"login": "Sgitario", "name": "Jose Carvajal"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8", "committedDate": "2020-04-15T11:52:17Z", "message": "KOGITO-1798: Disable example failing tests with persistence until defects are fixed"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzODExODg4", "url": "https://github.com/kiegroup/kogito-examples/pull/208#pullrequestreview-393811888", "createdAt": "2020-04-15T14:10:42Z", "commit": {"oid": "13eae3fc15aa8ff1f1adbcd3ae5fea47fd95f7d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4404, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}