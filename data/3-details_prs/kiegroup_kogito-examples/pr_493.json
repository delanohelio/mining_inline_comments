{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0ODY3NjYx", "number": 493, "title": "[KOGITO-4076] Added dmn-drools-springboot-metrics example", "bodyText": "https://issues.redhat.com/browse/KOGITO-4076\nPRs:\n\nkiegroup/kogito-runtimes#955\n#493", "createdAt": "2020-12-23T14:39:55Z", "url": "https://github.com/kiegroup/kogito-examples/pull/493", "merged": true, "mergeCommit": {"oid": "86c19fcb57799e7b8d993aad938aa8c2fb33d48b"}, "closed": true, "closedAt": "2021-01-22T12:50:17Z", "author": {"login": "danielezonca"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpAJsTgH2gAyNTQ0ODY3NjYxOmFkMmQwNjg2OTRlNzNhY2I1YjEzNGJlZWQ4OTljZTJjNTc2MjI2MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdyncN5AFqTU3NDE3NzY4Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ad2d068694e73acb5b134beed899ce2c5762262f", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/ad2d068694e73acb5b134beed899ce2c5762262f", "committedDate": "2020-12-23T14:38:43Z", "message": "Added dmn-drools-springboot-metrics example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYwODc1NzI0", "url": "https://github.com/kiegroup/kogito-examples/pull/493#pullrequestreview-560875724", "createdAt": "2021-01-04T09:16:23Z", "commit": {"oid": "ad2d068694e73acb5b134beed899ce2c5762262f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOToxNjoyNFrOINqQ6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wNFQwOToxNzoyM1rOINqS_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5NDg1Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n          \n          \n            \n            \n          \n          \n            \n            ARG JAVA_PACKAGE=java-11-openjdk-headless\n          \n          \n            \n            ARG RUN_JAVA_VERSION=1.3.5\n          \n          \n            \n            \n          \n          \n            \n            ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n          \n          \n            \n            \n          \n          \n            \n            # Install java and the run-java script\n          \n          \n            \n            # Also set up permissions for user `1001`\n          \n          \n            \n            RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \\\n          \n          \n            \n                && microdnf update \\\n          \n          \n            \n                && microdnf clean all \\\n          \n          \n            \n                && mkdir /deployments \\\n          \n          \n            \n                && chown 1001 /deployments \\\n          \n          \n            \n                && chmod \"g+rwX\" /deployments \\\n          \n          \n            \n                && chown 1001:root /deployments \\\n          \n          \n            \n                && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n          \n          \n            \n                && chown 1001 /deployments/run-java.sh \\\n          \n          \n            \n                && chmod 540 /deployments/run-java.sh \\\n          \n          \n            \n                && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n          \n          \n            \n            \n          \n          \n            \n            # Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\n          \n          \n            \n            ENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n          \n          \n            \n            \n          \n          \n            \n            COPY target/lib/* /deployments/lib/\n          \n          \n            \n            COPY target/*-runner.jar /deployments/app.jar\n          \n          \n            \n            \n          \n          \n            \n            EXPOSE 8080\n          \n          \n            \n            EXPOSE 3000\n          \n          \n            \n            USER 1001\n          \n          \n            \n            \n          \n          \n            \n            ENTRYPOINT [ \"/deployments/run-java.sh\" ]\n          \n          \n            \n            FROM quay.io/kiegroup/kogito-springboot-ubi8:latest\n          \n          \n            \n            \n          \n          \n            \n            COPY target/*.jar $KOGITO_HOME/bin", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r551194857", "createdAt": "2021-01-04T09:16:24Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/Dockerfile", "diffHunk": "@@ -0,0 +1,32 @@\n+FROM registry.access.redhat.com/ubi8/ubi-minimal:8.1\n+\n+ARG JAVA_PACKAGE=java-11-openjdk-headless\n+ARG RUN_JAVA_VERSION=1.3.5\n+\n+ENV LANG='en_US.UTF-8' LANGUAGE='en_US:en'\n+\n+# Install java and the run-java script\n+# Also set up permissions for user `1001`\n+RUN microdnf install curl ca-certificates ${JAVA_PACKAGE} \\\n+    && microdnf update \\\n+    && microdnf clean all \\\n+    && mkdir /deployments \\\n+    && chown 1001 /deployments \\\n+    && chmod \"g+rwX\" /deployments \\\n+    && chown 1001:root /deployments \\\n+    && curl https://repo1.maven.org/maven2/io/fabric8/run-java-sh/${RUN_JAVA_VERSION}/run-java-sh-${RUN_JAVA_VERSION}-sh.sh -o /deployments/run-java.sh \\\n+    && chown 1001 /deployments/run-java.sh \\\n+    && chmod 540 /deployments/run-java.sh \\\n+    && echo \"securerandom.source=file:/dev/urandom\" >> /etc/alternatives/jre/lib/security/java.security\n+\n+# Configure the JAVA_OPTIONS, you can add -XshowSettings:vm to also display the heap size.\n+ENV JAVA_OPTIONS=\"-Dquarkus.http.host=0.0.0.0 -Djava.util.logging.manager=org.jboss.logmanager.LogManager\"\n+\n+COPY target/lib/* /deployments/lib/\n+COPY target/*-runner.jar /deployments/app.jar\n+\n+EXPOSE 8080\n+EXPOSE 3000\n+USER 1001\n+\n+ENTRYPOINT [ \"/deployments/run-java.sh\" ]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad2d068694e73acb5b134beed899ce2c5762262f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MTE5NTM5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Once you compile your Quarkus project, a dashboard for each available endpoint will be generated under the path `target/resources/dashboards/`. You can then inject those grafana dashboards during the deployment of the grafana instance.\n          \n          \n            \n            Once you compile your Springboot project, a dashboard for each available endpoint will be generated under the path `target/resources/dashboards/`. You can then inject those grafana dashboards during the deployment of the grafana instance.", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r551195390", "createdAt": "2021-01-04T09:17:23Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,98 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+  \n+### How to enable the feature\n+\n+Import the following dependency in your `pom.xml` if you are using quarkus:\n+\n+```XML\n+<dependency>\n+ <groupId>org.kie.kogito</groupId>\n+ <artifactId>monitoring-prometheus-springboot-addon</artifactId>\n+</dependency>\n+```\n+\n+Otherwise, if you are using quarkus import\n+```XML\n+<dependency>\n+ <groupId>org.kie.kogito</groupId>\n+ <artifactId>monitoring-prometheus-quarkus-addon</artifactId>\n+</dependency>\n+```\n+\n+### Architecture\n+\n+Once you compile your Quarkus project, a dashboard for each available endpoint will be generated under the path `target/resources/dashboards/`. You can then inject those grafana dashboards during the deployment of the grafana instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ad2d068694e73acb5b134beed899ce2c5762262f"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b467c5f1edd49b70ae34827f678ba5edeb9d64a2", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/b467c5f1edd49b70ae34827f678ba5edeb9d64a2", "committedDate": "2021-01-05T23:41:05Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Jacopo Rota <jacopo.r00ta@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bc3e3545366985805fe3130218849409c6b731d", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/9bc3e3545366985805fe3130218849409c6b731d", "committedDate": "2021-01-05T23:44:26Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix\n\n# Conflicts:\n#\tprocess-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/a7851be0ca4b574b6328af8cb18c5c3893263d13", "committedDate": "2021-01-05T23:45:12Z", "message": "Minor fix"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTYzNTEwNzM3", "url": "https://github.com/kiegroup/kogito-examples/pull/493#pullrequestreview-563510737", "createdAt": "2021-01-07T14:06:02Z", "commit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNDowNjowMlrOIPto_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0wN1QxNDoxMzoxNVrOIPt5ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0NzMyNQ==", "bodyText": "Is this related to the topic of this PR - \"Added dmn-drools-springboot-metrics example\"?", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r553347325", "createdAt": "2021-01-07T14:06:02Z", "author": {"login": "jiripetrlik"}, "path": "dmn-drools-quarkus-metrics/src/test/java/org/kie/kogito/examples/LoanEligibilityTest.java", "diffHunk": "@@ -61,6 +61,7 @@ public void testMetricsLoanEligibility() {\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0OTM2MQ==", "bodyText": "It seems that there is springboot addon in the snippet bellow.", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r553349361", "createdAt": "2021-01-07T14:09:24Z", "author": {"login": "jiripetrlik"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,98 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+  \n+### How to enable the feature\n+\n+Import the following dependency in your `pom.xml` if you are using quarkus:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM0OTg5MQ==", "bodyText": "Does it make sense to write about Quarkus addon in the Springboot example?", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r553349891", "createdAt": "2021-01-07T14:10:21Z", "author": {"login": "jiripetrlik"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,98 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+  \n+### How to enable the feature\n+\n+Import the following dependency in your `pom.xml` if you are using quarkus:\n+\n+```XML\n+<dependency>\n+ <groupId>org.kie.kogito</groupId>\n+ <artifactId>monitoring-prometheus-springboot-addon</artifactId>\n+</dependency>\n+```\n+\n+Otherwise, if you are using quarkus import", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1MTAwNA==", "bodyText": "Can you please provide more info about why is this test failing?", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r553351004", "createdAt": "2021-01-07T14:12:22Z", "author": {"login": "jiripetrlik"}, "path": "dmn-drools-springboot-metrics/src/test/java/org/kie/kogito/examples/GrafanaDockerComposeIT.java", "diffHunk": "@@ -0,0 +1,85 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.kogito.examples;\n+\n+import java.io.File;\n+\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.Test;\n+import org.testcontainers.containers.DockerComposeContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.hasItem;\n+\n+@Disabled(\"Flaky test. Must disable temporarily\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1MzM1MTUzMA==", "bodyText": "Is this related to this PR?", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r553351530", "createdAt": "2021-01-07T14:13:15Z", "author": {"login": "jiripetrlik"}, "path": "process-infinispan-persistence-quarkus/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -97,6 +97,7 @@ public void testDealsRest() {\n     }\n \n     @Test\n+    @SuppressWarnings(\"unchecked\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7851be0ca4b574b6328af8cb18c5c3893263d13"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f329306f6172c18f7157b1f942527ea9fdab20fc", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/f329306f6172c18f7157b1f942527ea9fdab20fc", "committedDate": "2021-01-08T12:14:16Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2231af7f2e0dd1163586e9d400922706f25d41a4", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/2231af7f2e0dd1163586e9d400922706f25d41a4", "committedDate": "2021-01-08T12:16:02Z", "message": "Fix readme"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5aab6ae55ac3931626ae656df9892eb396c43d48", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/5aab6ae55ac3931626ae656df9892eb396c43d48", "committedDate": "2021-01-10T17:34:15Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ad9dfa2b8e9129690d92a4b6fd66cf08ce9e9c", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/55ad9dfa2b8e9129690d92a4b6fd66cf08ce9e9c", "committedDate": "2021-01-10T18:02:30Z", "message": "Enable integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "074b4fc3706fa78ed3f0a1cb24a964a522e9c076", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/074b4fc3706fa78ed3f0a1cb24a964a522e9c076", "committedDate": "2021-01-11T18:25:01Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4", "committedDate": "2021-01-11T18:25:20Z", "message": "fix header"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTY5MzI4MDQ3", "url": "https://github.com/kiegroup/kogito-examples/pull/493#pullrequestreview-569328047", "createdAt": "2021-01-15T14:53:11Z", "commit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1MzoxMVrOIUffRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xNVQxNDo1ODo0M1rOIUft9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM1ODM0Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                build: ./\n          \n          \n            \n                image: org.kie.kogito.examples/dmn-drools-sprintboot-metrics:1.0", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r558358342", "createdAt": "2021-01-15T14:53:11Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/docker-compose.yml", "diffHunk": "@@ -0,0 +1,28 @@\n+version: '2'\n+\n+services:\n+  hello:\n+    build: ./", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM1OTE0Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                </plugins>\n          \n          \n            \n                  <plugin>\n          \n          \n            \n                    <groupId>org.codehaus.mojo</groupId>\n          \n          \n            \n                    <artifactId>exec-maven-plugin</artifactId>\n          \n          \n            \n                    <executions>\n          \n          \n            \n                      <execution>\n          \n          \n            \n                        <id>docker-build</id>\n          \n          \n            \n                        <phase>pre-integration-test</phase>\n          \n          \n            \n                        <goals>\n          \n          \n            \n                          <goal>exec</goal>\n          \n          \n            \n                        </goals>\n          \n          \n            \n                        <configuration>\n          \n          \n            \n                          <executable>docker</executable>\n          \n          \n            \n                          <workingDirectory>${project.basedir}</workingDirectory>\n          \n          \n            \n                          <arguments>\n          \n          \n            \n                            <argument>build</argument>\n          \n          \n            \n                            <argument>-t</argument>\n          \n          \n            \n                            <argument>${project.groupId}/${project.artifactId}:1.0</argument>\n          \n          \n            \n                            <argument>.</argument>\n          \n          \n            \n                          </arguments>\n          \n          \n            \n                        </configuration>\n          \n          \n            \n                      </execution>\n          \n          \n            \n                    </executions>\n          \n          \n            \n                  </plugin>\n          \n          \n            \n                </plugins>", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r558359147", "createdAt": "2021-01-15T14:54:28Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/pom.xml", "diffHunk": "@@ -0,0 +1,158 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+         xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>2.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>dmn-drools-springboot-metrics</artifactId>\n+  <name>Kogito Example :: DMN Metrics SpringBoot</name>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-dependencies</artifactId>\n+        <version>${springboot.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-springboot-starter</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>monitoring-prometheus-springboot-addon</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>org.springframework.boot</groupId>\n+      <artifactId>spring-boot-starter-test</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.rest-assured</groupId>\n+      <artifactId>rest-assured</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+    <dependency>\n+      <groupId>org.testcontainers</groupId>\n+      <artifactId>junit-jupiter</artifactId>\n+      <scope>test</scope>\n+    </dependency>\n+\n+  </dependencies>\n+\n+  <build>\n+    <finalName>${project.artifactId}</finalName>\n+    <plugins>\n+      <plugin>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-maven-plugin</artifactId>\n+        <extensions>true</extensions>\n+      </plugin>\n+      <plugin>\n+        <groupId>org.springframework.boot</groupId>\n+        <artifactId>spring-boot-maven-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <goals>\n+              <goal>repackage</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      <plugin>\n+        <groupId>io.openapitools.swagger</groupId>\n+        <artifactId>swagger-maven-plugin</artifactId>\n+        <configuration>\n+          <useResourcePackagesChildren>true</useResourcePackagesChildren>\n+          <resourcePackages>\n+            <resourcePackage>http</resourcePackage>\n+          </resourcePackages>\n+          <outputDirectory>${basedir}/target/classes/static/</outputDirectory>\n+          <outputFilename>swagger</outputFilename>\n+          <outputFormats>JSON,YAML</outputFormats>\n+          <prettyPrint>true</prettyPrint>\n+          <swaggerConfig>\n+            <info>\n+              <title>${project.description}</title>\n+              <version>${project.version}</version>\n+            </info>\n+          </swaggerConfig>\n+        </configuration>\n+        <executions>\n+          <execution>\n+            <phase>compile</phase>\n+            <goals>\n+              <goal>generate</goal>\n+            </goals>\n+          </execution>\n+        </executions>\n+      </plugin>\n+      <plugin>\n+        <artifactId>maven-resources-plugin</artifactId>\n+        <executions>\n+          <execution>\n+            <id>copy-resources</id>\n+            <phase>prepare-package</phase>\n+            <goals>\n+              <goal>copy-resources</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.basedir}/docker-compose/grafana/provisioning/dashboards</outputDirectory>\n+              <resources>\n+                <resource>\n+                  <directory>${project.build.directory}/classes/META-INF/resources/monitoring/dashboards</directory>\n+                  <filtering>false</filtering>\n+                </resource>\n+              </resources>\n+            </configuration>\n+          </execution>\n+          <execution>\n+            <id>copy-docker-compose-for-tests</id>\n+            <phase>prepare-package</phase>\n+            <goals>\n+              <goal>copy-resources</goal>\n+            </goals>\n+            <configuration>\n+              <outputDirectory>${project.build.testOutputDirectory}</outputDirectory>\n+              <resources>\n+                <resource>\n+                  <directory>${project.basedir}</directory>\n+                  <includes>\n+                    <include>docker-compose.yml</include>\n+                    <include>docker-compose/</include>\n+                  </includes>\n+                </resource>\n+              </resources>\n+            </configuration>\n+          </execution>\n+        </executions>\n+      </plugin>\n+    </plugins>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4"}, "originalPosition": 155}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MTg1MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              \n          \n          \n            \n                - Docker 19+ (only if you want to run the integration tests and/or you want to use the `docker-compose` script provided in this example).", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r558361851", "createdAt": "2021-01-15T14:58:22Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,90 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1ODM2MjEwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Run `mvn clean package` to build the project and generate dashboards. \n          \n          \n            \n            1. Run `mvn clean package` to build the project and generate dashboards.  A docker image tagged `org.kie.kogito.examples/dmn-drools-sprintboot-metrics-example:1.0` will be built (docker must be installed on your system).", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r558362101", "createdAt": "2021-01-15T14:58:43Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,90 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+  \n+### How to enable the feature\n+\n+Import the following dependency in your `pom.xml`:\n+\n+```XML\n+<dependency>\n+ <groupId>org.kie.kogito</groupId>\n+ <artifactId>monitoring-prometheus-springboot-addon</artifactId>\n+</dependency>\n+```\n+\n+### Architecture\n+\n+Once you compile your Springboot project, a dashboard for each available endpoint will be generated under the path `target/resources/dashboards/`. You can then inject those grafana dashboards during the deployment of the grafana instance.\n+\n+The use case is summarized in the following schema:\n+ \n+![RuntimeMetrics](https://user-images.githubusercontent.com/18282531/76740726-a0cbdd80-676e-11ea-8cc3-63ed5cbb3ac8.png)\n+\n+To summarize, the kogito app will expose by default an endpoint `/metrics` with the prometheus variables, and a prometheus instance will simply fetch the data from there.\n+\n+### Dashboards\n+\n+Kogito currently exports two types of dashboards depending on the model used on the endpoint:\n+1. Operational dashboard: this dashboard is generated for DMN and DRL endpoints and it contains\n+    * Total number of requests on the endpoint.\n+    * Average per minute of the number of requests on the endpoint.\n+    * Quantiles on the elapsed time to evaluate the requests.\n+    * Exception details.\n+![Screenshot from 2020-05-19 15-20-03](https://user-images.githubusercontent.com/18282531/82339837-ca171d00-99ee-11ea-85bc-2681878fb6ab.png)\n+2. Domain specific dashboard: currently this dashboard is exported only for DMN endpoints. In particular, the domain specific dashboard contains a graph for each type of decision in the DMN model. At the moment, only the built-in types `number`, `string` and `boolean` are supported:\n+   * if the output of the decision is a number, the graph contains the quantiles for that metric (on a sliding window of 3 minutes).\n+   * If the output is a boolean or a string, the graph contains the number of occurrences for each output (10 minutes average).\n+![Screenshot from 2020-05-19 15-19-48](https://user-images.githubusercontent.com/18282531/82339828-c71c2c80-99ee-11ea-85b6-b5d4a0337f0b.png)\n+\n+You can use these default dashboards, or you can personalize them and use your custom dashboards.\n+\n+### Compile and Run in Local Dev Mode\n+\n+It is possible to use `docker-compose` to demonstrate how to inject the generated dashboards in the volume of the grafana container:\n+1. Run `mvn clean package` to build the project and generate dashboards. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a911b2ed9cc6254c2ca34c64e1b9c3aab3b82b4"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2f3a74bfe50837d9589fbe910d9d9a5f2d0f6794", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/2f3a74bfe50837d9589fbe910d9d9a5f2d0f6794", "committedDate": "2021-01-15T15:18:53Z", "message": "Update README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a456640c658ab94cc89678e5a75acbe7cd12402", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/8a456640c658ab94cc89678e5a75acbe7cd12402", "committedDate": "2021-01-15T15:19:54Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Jacopo Rota <jacopo.r00ta@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTcwMjgyNDE1", "url": "https://github.com/kiegroup/kogito-examples/pull/493#pullrequestreview-570282415", "createdAt": "2021-01-18T08:58:04Z", "commit": {"oid": "8a456640c658ab94cc89678e5a75acbe7cd12402"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwODo1ODowNFrOIVfYsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMS0wMS0xOFQwODo1ODoxN1rOIVfZKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQwNTIzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                image: org.kie.kogito.examples/dmn-drools-sprintboot-metrics:1.0\n          \n          \n            \n                image: org.kie.kogito.examples/dmn-drools-springboot-metrics:1.0", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r559405234", "createdAt": "2021-01-18T08:58:04Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/docker-compose.yml", "diffHunk": "@@ -0,0 +1,27 @@\n+version: '2'\n+\n+services:\n+  hello:\n+    image: org.kie.kogito.examples/dmn-drools-sprintboot-metrics:1.0", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a456640c658ab94cc89678e5a75acbe7cd12402"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU1OTQwNTM1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            1. Run `mvn clean package` to build the project and generate dashboards.  A docker image tagged `org.kie.kogito.examples/dmn-drools-sprintboot-metrics-example:1.0` will be built (docker must be installed on your system).\n          \n          \n            \n            1. Run `mvn clean package` to build the project and generate dashboards.  A docker image tagged `org.kie.kogito.examples/dmn-drools-springboot-metrics-example:1.0` will be built (docker must be installed on your system).", "url": "https://github.com/kiegroup/kogito-examples/pull/493#discussion_r559405353", "createdAt": "2021-01-18T08:58:17Z", "author": {"login": "r00ta"}, "path": "dmn-drools-springboot-metrics/README.md", "diffHunk": "@@ -0,0 +1,90 @@\n+# Drools + SpringBoot + Runtime metrics\n+\n+## Description\n+\n+This example demonstrates how to enable and consume the runtime metrics monitoring feature in Kogito. \n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+    - Docker 19+ (only if you want to run the integration tests and/or you want to use the `docker-compose` script provided in this example).\n+\n+### How to enable the feature\n+\n+Import the following dependency in your `pom.xml`:\n+\n+```XML\n+<dependency>\n+ <groupId>org.kie.kogito</groupId>\n+ <artifactId>monitoring-prometheus-springboot-addon</artifactId>\n+</dependency>\n+```\n+\n+### Architecture\n+\n+Once you compile your Springboot project, a dashboard for each available endpoint will be generated under the path `target/resources/dashboards/`. You can then inject those grafana dashboards during the deployment of the grafana instance.\n+\n+The use case is summarized in the following schema:\n+ \n+![RuntimeMetrics](https://user-images.githubusercontent.com/18282531/76740726-a0cbdd80-676e-11ea-8cc3-63ed5cbb3ac8.png)\n+\n+To summarize, the kogito app will expose by default an endpoint `/metrics` with the prometheus variables, and a prometheus instance will simply fetch the data from there.\n+\n+### Dashboards\n+\n+Kogito currently exports two types of dashboards depending on the model used on the endpoint:\n+1. Operational dashboard: this dashboard is generated for DMN and DRL endpoints and it contains\n+    * Total number of requests on the endpoint.\n+    * Average per minute of the number of requests on the endpoint.\n+    * Quantiles on the elapsed time to evaluate the requests.\n+    * Exception details.\n+![Screenshot from 2020-05-19 15-20-03](https://user-images.githubusercontent.com/18282531/82339837-ca171d00-99ee-11ea-85bc-2681878fb6ab.png)\n+2. Domain specific dashboard: currently this dashboard is exported only for DMN endpoints. In particular, the domain specific dashboard contains a graph for each type of decision in the DMN model. At the moment, only the built-in types `number`, `string` and `boolean` are supported:\n+   * if the output of the decision is a number, the graph contains the quantiles for that metric (on a sliding window of 3 minutes).\n+   * If the output is a boolean or a string, the graph contains the number of occurrences for each output (10 minutes average).\n+![Screenshot from 2020-05-19 15-19-48](https://user-images.githubusercontent.com/18282531/82339828-c71c2c80-99ee-11ea-85b6-b5d4a0337f0b.png)\n+\n+You can use these default dashboards, or you can personalize them and use your custom dashboards.\n+\n+### Compile and Run in Local Dev Mode\n+\n+It is possible to use `docker-compose` to demonstrate how to inject the generated dashboards in the volume of the grafana container:\n+1. Run `mvn clean package` to build the project and generate dashboards.  A docker image tagged `org.kie.kogito.examples/dmn-drools-sprintboot-metrics-example:1.0` will be built (docker must be installed on your system).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8a456640c658ab94cc89678e5a75acbe7cd12402"}, "originalPosition": 55}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b07dff317a85a4da165dfdb4984fce9857ddb214", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/b07dff317a85a4da165dfdb4984fce9857ddb214", "committedDate": "2021-01-18T08:59:28Z", "message": "Apply suggestions from code review\n\nCo-authored-by: Jacopo Rota <jacopo.r00ta@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d88529abd9b3b949c616278f478c51820f97b0f", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/1d88529abd9b3b949c616278f478c51820f97b0f", "committedDate": "2021-01-18T11:55:11Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df544843da69d45beda08ae84bc2008a3d8e9d8f", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/df544843da69d45beda08ae84bc2008a3d8e9d8f", "committedDate": "2021-01-18T12:45:26Z", "message": "Improve configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a106b766242f7bdc069537d876e286e91e4873db", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/a106b766242f7bdc069537d876e286e91e4873db", "committedDate": "2021-01-21T14:24:09Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "120d41184eb91d28221610b58d533e1e358695b1", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/120d41184eb91d28221610b58d533e1e358695b1", "committedDate": "2021-01-21T14:26:03Z", "message": "Merge remote-tracking branch 'upstream/master' into KOGITO-4076-monitoring-fix\n\n# Conflicts:\n#\tdmn-drools-quarkus-metrics/README.md"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b91503c608bcc1fe12f27131a3cada1c4a5c353b", "author": {"user": {"login": "danielezonca", "name": "Daniele Zonca"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/b91503c608bcc1fe12f27131a3cada1c4a5c353b", "committedDate": "2021-01-21T17:42:05Z", "message": "Fix configuration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTc0MTc3Njg3", "url": "https://github.com/kiegroup/kogito-examples/pull/493#pullrequestreview-574177687", "createdAt": "2021-01-22T11:30:34Z", "commit": {"oid": "b91503c608bcc1fe12f27131a3cada1c4a5c353b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4311, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}