{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzMjE2Njg5", "number": 216, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo1NDoxNFrODxrx6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzoxOTowNVrODzuQPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDI0MTA1OnYy", "diffSide": "RIGHT", "path": "process-springboot-example/pom.xml", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNDo1NDoxNFrOGFSpNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTo1NjoyMlrOGFq0PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMTUyNA==", "bodyText": "shouldn't this be provided by the kogito-events-spring-boot-addon ?", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408201524", "createdAt": "2020-04-14T14:54:14Z", "author": {"login": "jstastny-cz"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -48,6 +50,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>process-management-addon</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.kafka</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxMTMyNQ==", "bodyText": "Indeed, the kafka dependency is provided by kogito-events-spring-boot-addon dependency. However, as we have several profiles (default, persistence and events) and for spring-boot I needed the KafkaConsumerConfig.java to make this example worked, I did need the kafka dependency to be added in all the profiles.\nStill, it would only do something in the \"events\" profile because the \"kogito-events-spring-boot-addon\" dependency is added, which is the glue between Kogito and Kafka.\nIn order to avoid possible drawbacks, I added the @ConditionalOnProperty in the KafkaConsumerConfig.java. This property is only provided when we deploy the example using the events profile.\nHowever, let me know your thoughts and/or you think any other approach.", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408211325", "createdAt": "2020-04-14T15:06:07Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -48,6 +50,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>process-management-addon</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.kafka</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMTUyNA=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIyMTc4Ng==", "bodyText": "This should be put as <optional>true<optional> and will be brought by kogito-events-spring-boot-addon on events profile, cool thing with Spring Boot :)\nAlso your @ConditionalOnProperty will always be true as the kafka.bootstrap.servers is set in the application.properties file.\nYou should do a @ConditionalOnClass and test for example that org.apache.kafka.clients.producer.ProducerConfig is present", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408221786", "createdAt": "2020-04-14T15:19:32Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -48,6 +50,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>process-management-addon</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.kafka</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMTUyNA=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzNTAwMA==", "bodyText": "Will do the optional thing.\nAbout the property, the configuration file is not set when deploying, hence the property won't exist.\nHowever, the ConfitionalOnClass will work too with the optional bit. Will change both things.", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408235000", "createdAt": "2020-04-14T15:36:54Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -48,6 +50,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>process-management-addon</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.kafka</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMTUyNA=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5NzU2NQ==", "bodyText": "Changed", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408597565", "createdAt": "2020-04-15T05:56:22Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/pom.xml", "diffHunk": "@@ -48,6 +50,10 @@\n       <groupId>org.kie.kogito</groupId>\n       <artifactId>process-management-addon</artifactId>\n     </dependency>\n+    <dependency>\n+      <groupId>org.springframework.kafka</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIwMTUyNA=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDMzMjc4OnYy", "diffSide": "RIGHT", "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaConsumerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNToxMjoyOVrOGFTjCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozNDoxM1rOGFUkWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxNjMzMQ==", "bodyText": "I think it should be KafkaProducerConfig", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408216331", "createdAt": "2020-04-14T15:12:29Z", "author": {"login": "sutaakar"}, "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaConsumerConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.kie.kogito.examples;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.kafka.annotation.EnableKafka;\n+import org.springframework.kafka.core.DefaultKafkaProducerFactory;\n+import org.springframework.kafka.core.KafkaTemplate;\n+import org.springframework.kafka.core.ProducerFactory;\n+import org.springframework.kafka.support.serializer.JsonSerializer;\n+\n+@EnableKafka\n+@Configuration\n+@ConditionalOnProperty(\"kafka.bootstrap.servers\")\n+public class KafkaConsumerConfig {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMzA0OA==", "bodyText": "Well spotted. Will rename it.", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408233048", "createdAt": "2020-04-14T15:34:13Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaConsumerConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.kie.kogito.examples;\n+\n+import java.util.HashMap;\n+import java.util.Map;\n+\n+import org.apache.kafka.clients.producer.ProducerConfig;\n+import org.apache.kafka.common.serialization.StringSerializer;\n+import org.springframework.beans.factory.annotation.Value;\n+import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;\n+import org.springframework.context.annotation.Bean;\n+import org.springframework.context.annotation.Configuration;\n+import org.springframework.kafka.annotation.EnableKafka;\n+import org.springframework.kafka.core.DefaultKafkaProducerFactory;\n+import org.springframework.kafka.core.KafkaTemplate;\n+import org.springframework.kafka.core.ProducerFactory;\n+import org.springframework.kafka.support.serializer.JsonSerializer;\n+\n+@EnableKafka\n+@Configuration\n+@ConditionalOnProperty(\"kafka.bootstrap.servers\")\n+public class KafkaConsumerConfig {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIxNjMzMQ=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDQzMTIyOnYy", "diffSide": "RIGHT", "path": "process-quarkus-example/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozMzoyM1rOGFUhyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTo1NTo1NVrOGFqzvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMjM5NQ==", "bodyText": "as in kogito-kafka-quickstart-* examples, we should tell the user on which topic to listen for cloud events:\n\nkogito-processinstances-events\nkogito-usertaskinstances-events", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408232395", "createdAt": "2020-04-14T15:33:23Z", "author": {"login": "radtriste"}, "path": "process-quarkus-example/README.md", "diffHunk": "@@ -76,6 +76,12 @@ Once Infinispan is up and running you can build this project with `-Ppersistence\n \n This extra profile in maven configuration adds additional dependencies needed to work with Infinispan as persistent store.\n \n+### Running with events enabled", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5NzQzNg==", "bodyText": "Added", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408597436", "createdAt": "2020-04-15T05:55:55Z", "author": {"login": "Sgitario"}, "path": "process-quarkus-example/README.md", "diffHunk": "@@ -76,6 +76,12 @@ Once Infinispan is up and running you can build this project with `-Ppersistence\n \n This extra profile in maven configuration adds additional dependencies needed to work with Infinispan as persistent store.\n \n+### Running with events enabled", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMjM5NQ=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNDQzMjk1OnYy", "diffSide": "RIGHT", "path": "process-springboot-example/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQxNTozMzo0MlrOGFUiyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNTo1NjowMlrOGFqz1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMjY0OQ==", "bodyText": "same here on listening to cloud events topics", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408232649", "createdAt": "2020-04-14T15:33:42Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/README.md", "diffHunk": "@@ -56,6 +56,16 @@ Once Infinispan is up and running you can build this project with `-Ppersistence\n \n This extra profile in maven configuration adds additional dependencies needed to work with Infinispan as persistent store.\n \n+### Running with events enabled\n+\n+Kogito supports cloud events using Kafka as message broker. So to be able to enable this you need to have\n+Kafka cluster installed and available over the network. Refer to [Kafka Apache site](https://kafka.apache.org/quickstart) to more information about how to install. By default it expects it to be at (it can be configured via application.properties file located in src/main/resources):\n+\n+```\n+kafka.bootstrap.servers=localhost:9092\n+```\n+\n+Once Kafka is up and running you can build this project with `-Pevents` to enable additional processing during the build. This extra profile in maven configuration adds additional dependencies needed to work with Cloud Events.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODU5NzQ2MA==", "bodyText": "Added", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408597460", "createdAt": "2020-04-15T05:56:02Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/README.md", "diffHunk": "@@ -56,6 +56,16 @@ Once Infinispan is up and running you can build this project with `-Ppersistence\n \n This extra profile in maven configuration adds additional dependencies needed to work with Infinispan as persistent store.\n \n+### Running with events enabled\n+\n+Kogito supports cloud events using Kafka as message broker. So to be able to enable this you need to have\n+Kafka cluster installed and available over the network. Refer to [Kafka Apache site](https://kafka.apache.org/quickstart) to more information about how to install. By default it expects it to be at (it can be configured via application.properties file located in src/main/resources):\n+\n+```\n+kafka.bootstrap.servers=localhost:9092\n+```\n+\n+Once Kafka is up and running you can build this project with `-Pevents` to enable additional processing during the build. This extra profile in maven configuration adds additional dependencies needed to work with Cloud Events.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODIzMjY0OQ=="}, "originalCommit": {"oid": "ffc5bf1818d0cc061c03dac37accb0babdcd3ad7"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzNjkzMTQzOnYy", "diffSide": "RIGHT", "path": "process-springboot-example/src/main/resources/application.properties", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzowNTowNVrOGFsanw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQwNzozNjo0MlrOGFtZqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMzc3NQ==", "bodyText": "we need also to define the different queues in there, else nothing will be sent if we use the events profile", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408623775", "createdAt": "2020-04-15T07:05:05Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/src/main/resources/application.properties", "diffHunk": "@@ -2,4 +2,6 @@ spring.mvc.servlet.path=/docs\n \n resteasy.jaxrs.scan-packages=org.kie.kogito.**\n \n-infinispan.remote.server-list=127.0.0.1:11222\n\\ No newline at end of file\n+infinispan.remote.server-list=127.0.0.1:11222\n+\n+kafka.bootstrap.servers=127.0.0.1:9092", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4f6216ee69216b077e7cd72ed36a942be08e8f0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzODg3Mw==", "bodyText": "solved. Spring Boot does not need extra config. Topics are configured in code ...\nhttps://github.com/kiegroup/kogito-runtimes/blob/master/addons/events/kogito-events-spring-boot-addon/src/main/java/org/kie/kogito/events/spring/KafkaEventPublisher.java", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408638873", "createdAt": "2020-04-15T07:34:46Z", "author": {"login": "radtriste"}, "path": "process-springboot-example/src/main/resources/application.properties", "diffHunk": "@@ -2,4 +2,6 @@ spring.mvc.servlet.path=/docs\n \n resteasy.jaxrs.scan-packages=org.kie.kogito.**\n \n-infinispan.remote.server-list=127.0.0.1:11222\n\\ No newline at end of file\n+infinispan.remote.server-list=127.0.0.1:11222\n+\n+kafka.bootstrap.servers=127.0.0.1:9092", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMzc3NQ=="}, "originalCommit": {"oid": "c4f6216ee69216b077e7cd72ed36a942be08e8f0"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYzOTkxMg==", "bodyText": "As discussed in private, this is not necessary in spring.", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r408639912", "createdAt": "2020-04-15T07:36:42Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/src/main/resources/application.properties", "diffHunk": "@@ -2,4 +2,6 @@ spring.mvc.servlet.path=/docs\n \n resteasy.jaxrs.scan-packages=org.kie.kogito.**\n \n-infinispan.remote.server-list=127.0.0.1:11222\n\\ No newline at end of file\n+infinispan.remote.server-list=127.0.0.1:11222\n+\n+kafka.bootstrap.servers=127.0.0.1:9092", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODYyMzc3NQ=="}, "originalCommit": {"oid": "c4f6216ee69216b077e7cd72ed36a942be08e8f0"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU1NTYxNzg4OnYy", "diffSide": "RIGHT", "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaProducerConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzoxOTowNVrOGIUB5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMFQxMzoyNDo1MVrOGIUSBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2OTk1OQ==", "bodyText": "add copywrite please", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r411369959", "createdAt": "2020-04-20T13:19:05Z", "author": {"login": "cristianonicolai"}, "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaProducerConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.kie.kogito.examples;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "de8010ce8440cd22688cd396e225a52077a6676c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM3NDA4Ng==", "bodyText": "added", "url": "https://github.com/kiegroup/kogito-examples/pull/216#discussion_r411374086", "createdAt": "2020-04-20T13:24:51Z", "author": {"login": "Sgitario"}, "path": "process-springboot-example/src/main/java/org/kie/kogito/examples/KafkaProducerConfig.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.kie.kogito.examples;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMTM2OTk1OQ=="}, "originalCommit": {"oid": "de8010ce8440cd22688cd396e225a52077a6676c"}, "originalPosition": 1}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 474, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}