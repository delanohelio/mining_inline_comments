{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5OTgzNjkx", "number": 386, "title": "KOGITO-3408  CloudEvent Kafka Publisher (Quarkus) ", "bodyText": "related kiegroup/kogito-runtimes#807", "createdAt": "2020-10-08T14:51:43Z", "url": "https://github.com/kiegroup/kogito-examples/pull/386", "merged": true, "mergeCommit": {"oid": "99fee751bdf13b71b7d0b1e0d0238310b23a9454"}, "closed": true, "closedAt": "2020-10-27T13:08:29Z", "author": {"login": "evacchi"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSMYfagFqTUwNzY4Njc4OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdWkD2_AH2gAyNDk5OTgzNjkxOjVlMTVlMzkzZDc2ZTdmNmRkZTlkMjJjNTkwZGFjY2Q5NmVlOTE1MzM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3Njg2Nzg4", "url": "https://github.com/kiegroup/kogito-examples/pull/386#pullrequestreview-507686788", "createdAt": "2020-10-13T17:46:45Z", "commit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "state": "COMMENTED", "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo0Njo0NVrOHgyeVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzo1MzoxNVrOHgyvZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0MzQ0NQ==", "bodyText": "So now every produced messages will be delivered to the same Topic? On Knative we can filter by CE attributes (like type or source), how we would do that from a java client app for instance? (just adding this question here to give u the opportunity to answer and leave it documented).", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504143445", "createdAt": "2020-10-13T17:46:45Z", "author": {"login": "ricardozanini"}, "path": "kogito-travel-agency/extended/visas/src/main/resources/application.properties", "diffHunk": "@@ -16,21 +16,20 @@ quarkus.infinispan-client.sasl-mechanism=\n \n kafka.bootstrap.servers=localhost:9092\n \n-#mp.messaging.incoming.visaapplications.bootstrap.servers=localhost:9092\n-mp.messaging.incoming.visaapplications.connector=smallrye-kafka\n-mp.messaging.incoming.visaapplications.topic=visaapplications\n-mp.messaging.incoming.visaapplications.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n-#mp.messaging.incoming.visaapplications.auto.offset.reset=earliest\n-\n-#mp.messaging.outgoing.visasapproved.bootstrap.servers=localhost:9092\n-mp.messaging.outgoing.visasapproved.connector=smallrye-kafka\n-mp.messaging.outgoing.visasapproved.topic=visasapproved\n-mp.messaging.outgoing.visasapproved.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n-\n-#mp.messaging.outgoing.visasrejected.bootstrap.servers=localhost:9092\n-mp.messaging.outgoing.visasrejected.connector=smallrye-kafka\n-mp.messaging.outgoing.visasrejected.topic=visasrejected\n-mp.messaging.outgoing.visasrejected.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n+## main transport\n+\n+#mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=localhost:9092\n+mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka\n+mp.messaging.incoming.kogito_incoming_stream.topic=visaapplications\n+mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n+#mp.messaging.incoming.kogito_incoming_stream.auto.offset.reset=earliest\n+\n+#mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=localhost:9092\n+mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka\n+mp.messaging.outgoing.kogito_outgoing_stream.topic=visasresponses", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NDQ4OQ==", "bodyText": "Having the predictable topics would work nicely from the Operator perspective, since we can already create them before deploying the app, without having to fetch for the required topics first.", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504144489", "createdAt": "2020-10-13T17:47:51Z", "author": {"login": "ricardozanini"}, "path": "process-kafka-quickstart-quarkus/src/main/resources/application.properties", "diffHunk": "@@ -2,20 +2,18 @@ quarkus.swagger-ui.always-include=true\n \n kafka.bootstrap.servers=localhost:9092\n \n-mp.messaging.incoming.travellers.connector=smallrye-kafka\n-mp.messaging.incoming.travellers.topic=travellers\n-mp.messaging.incoming.travellers.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n-#mp.messaging.incoming.travellers.bootstrap.servers=localhost:9092\n-#mp.messaging.incoming.travellers.auto.offset.reset=earliest\n+mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka\n+mp.messaging.incoming.kogito_incoming_stream.topic=travellers\n+mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n+#mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=localhost:9092\n+#mp.messaging.incoming.kogito_incoming_stream.auto.offset.reset=earliest\n \n \n-mp.messaging.outgoing.processedtravellers.connector=smallrye-kafka\n-mp.messaging.outgoing.processedtravellers.topic=processedtravellers\n-mp.messaging.outgoing.processedtravellers.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n-#mp.messaging.outgoing.processedtravellers.bootstrap.servers=localhost:9092\n-\n-# uncomment below line if you don't want to use cloud event payload format\n-#kogito.messaging.as-cloudevents=false\n+mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka\n+mp.messaging.outgoing.kogito_outgoing_stream.topic=processedtravellers\n+mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NDgyMw==", "bodyText": "Maybe removing this DEBUG flag?", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504144823", "createdAt": "2020-10-13T17:48:12Z", "author": {"login": "ricardozanini"}, "path": "process-kafka-quickstart-quarkus/src/main/resources/application.properties", "diffHunk": "@@ -2,20 +2,18 @@ quarkus.swagger-ui.always-include=true\n \n kafka.bootstrap.servers=localhost:9092\n \n-mp.messaging.incoming.travellers.connector=smallrye-kafka\n-mp.messaging.incoming.travellers.topic=travellers\n-mp.messaging.incoming.travellers.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n-#mp.messaging.incoming.travellers.bootstrap.servers=localhost:9092\n-#mp.messaging.incoming.travellers.auto.offset.reset=earliest\n+mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-kafka\n+mp.messaging.incoming.kogito_incoming_stream.topic=travellers\n+mp.messaging.incoming.kogito_incoming_stream.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer\n+#mp.messaging.incoming.kogito_incoming_stream.bootstrap.servers=localhost:9092\n+#mp.messaging.incoming.kogito_incoming_stream.auto.offset.reset=earliest\n \n \n-mp.messaging.outgoing.processedtravellers.connector=smallrye-kafka\n-mp.messaging.outgoing.processedtravellers.topic=processedtravellers\n-mp.messaging.outgoing.processedtravellers.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n-#mp.messaging.outgoing.processedtravellers.bootstrap.servers=localhost:9092\n-\n-# uncomment below line if you don't want to use cloud event payload format\n-#kogito.messaging.as-cloudevents=false\n+mp.messaging.outgoing.kogito_outgoing_stream.connector=smallrye-kafka\n+mp.messaging.outgoing.kogito_outgoing_stream.topic=processedtravellers\n+mp.messaging.outgoing.kogito_outgoing_stream.value.serializer=org.apache.kafka.common.serialization.StringSerializer\n+#mp.messaging.outgoing.kogito_outgoing_stream.bootstrap.servers=localhost:9092\n \n # Maximum Java heap to be used during the native image generation\n-quarkus.native.native-image-xmx=4g\n\\ No newline at end of file\n+quarkus.native.native-image-xmx=4g\n+quarkus.log.category.\"org.kie.kogito\".level=DEBUG", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NTI3NA==", "bodyText": "Why do we need this txt file?", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504145274", "createdAt": "2020-10-13T17:48:57Z", "author": {"login": "ricardozanini"}, "path": "process-knative-quickstart-quarkus/TravelersMessageProducer_7.java_txt", "diffHunk": "@@ -0,0 +1,40 @@\n+package org.kie.kogito.test;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NTk0MQ==", "bodyText": "there's no incoming for smallrye-http plugin. I understand that the implementation needs that, but seems weird from an user perspective and that might confuse people.", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504145941", "createdAt": "2020-10-13T17:50:08Z", "author": {"login": "ricardozanini"}, "path": "process-knative-quickstart-quarkus/src/main/resources/application.properties", "diffHunk": "@@ -1,4 +1,7 @@\n quarkus.swagger-ui.always-include=true\n+\n+mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-http", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 3}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NzE2OA==", "bodyText": "We would need to revert back to the name of the node. The entire SW implementation and the addon were created around that.\nThis event would be consumed / published in a Kubernetes cluster. So would make sense to have the message id from BPMN or the event type from SW spec in this field.\nPlus source means the actual source of the event, like in the GitHub demo: the source is the repository URL.", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504147168", "createdAt": "2020-10-13T17:52:16Z", "author": {"login": "ricardozanini"}, "path": "process-knative-quickstart-quarkus/src/test/java/org/acme/travel/CloudEventListenerTest.java", "diffHunk": "@@ -115,7 +115,7 @@ void checkStartNewProcessInstanceWithSourceField() throws JsonProcessingExceptio\n         given()\n                 .header(\"ce-specversion\", \"1.0\")\n                 .header(\"ce-id\", \"000\")\n-                .header(\"ce-source\", \"travellers\")\n+                .header(\"ce-source\", \"TravelersMessageDataEvent_3\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NzU4OQ==", "bodyText": "Same here (to remove incoming from smallrye-http).", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504147589", "createdAt": "2020-10-13T17:52:54Z", "author": {"login": "ricardozanini"}, "path": "process-knative-quickstart-quarkus/src/test/resources/application.properties", "diffHunk": "@@ -2,5 +2,7 @@ quarkus.http.test-port=8282\n quarkus.log.level=INFO\n \n # mocked during tests\n+mp.messaging.incoming.kogito_incoming_stream.connector=smallrye-http", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE0NzgxMg==", "bodyText": "Same here.", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504147812", "createdAt": "2020-10-13T17:53:15Z", "author": {"login": "ricardozanini"}, "path": "serverless-workflow-events-quarkus/src/main/java/org/kogito/serverless/examples/ApplicantResource.java", "diffHunk": "@@ -61,7 +61,7 @@ public void submitApplicant(JsonNode newApplicant) {\n         try {\n             CloudEvent applicantEvent = CloudEventBuilder.v1()\n                     .withId(UUID.randomUUID().toString())\n-                    .withType(\"newApplicantEvent\")\n+                    .withType(\"ApplicantworkflowMessageDataEvent_1\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzY2NDI1", "url": "https://github.com/kiegroup/kogito-examples/pull/386#pullrequestreview-507766425", "createdAt": "2020-10-13T19:36:20Z", "commit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTozNjoyMFrOHg2ZRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxOTozNjoyMFrOHg2ZRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDIwNzY4NA==", "bodyText": "Fix formatting", "url": "https://github.com/kiegroup/kogito-examples/pull/386#discussion_r504207684", "createdAt": "2020-10-13T19:36:20Z", "author": {"login": "danielezonca"}, "path": "process-knative-quickstart-quarkus/src/test/java/org/acme/travel/CloudEventListenerTest.java", "diffHunk": "@@ -38,7 +38,7 @@\n import static io.restassured.RestAssured.given;\n \n @QuarkusTest\n-public class CloudEventListenerTest {\n+    public class CloudEventListenerTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cba67152c72c5c62d3c86b6434745e5e21ee4d8"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjM2MDI3", "url": "https://github.com/kiegroup/kogito-examples/pull/386#pullrequestreview-515636027", "createdAt": "2020-10-23T12:51:20Z", "commit": {"oid": "d1778858192dcc1fc6130f6b4e1be5930e9db503"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjM5MDA4", "url": "https://github.com/kiegroup/kogito-examples/pull/386#pullrequestreview-515639008", "createdAt": "2020-10-23T12:55:24Z", "commit": {"oid": "d1778858192dcc1fc6130f6b4e1be5930e9db503"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1NjQ5NDIx", "url": "https://github.com/kiegroup/kogito-examples/pull/386#pullrequestreview-515649421", "createdAt": "2020-10-23T13:08:31Z", "commit": {"oid": "d1778858192dcc1fc6130f6b4e1be5930e9db503"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "74d83134ab77e5b3123abf91f1989ad0eb962aa0", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/74d83134ab77e5b3123abf91f1989ad0eb962aa0", "committedDate": "2020-10-27T07:22:45Z", "message": "CloudEvent Kafka Publisher (Quarkus)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "170497511e7c449009c5d1a5ba9f3352a4e35e74", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/170497511e7c449009c5d1a5ba9f3352a4e35e74", "committedDate": "2020-10-27T07:22:45Z", "message": "use cloud events topic config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8e0dadf51cdf1f7dfbf3c6f5bd7ad236985ad16", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/b8e0dadf51cdf1f7dfbf3c6f5bd7ad236985ad16", "committedDate": "2020-10-27T07:22:45Z", "message": "add dependency on spring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c48ce7479f5b7171712e20bfbfb167081a08a1d7", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/c48ce7479f5b7171712e20bfbfb167081a08a1d7", "committedDate": "2020-10-27T07:22:45Z", "message": "wip: serverless events"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5cdf6cf20fb96791430a2dac7a41f65234190e0f", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/5cdf6cf20fb96791430a2dac7a41f65234190e0f", "committedDate": "2020-10-27T07:22:45Z", "message": "adjust kafka topic names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f842cbb02f30d5ca034e71122ee52667764d8c27", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/f842cbb02f30d5ca034e71122ee52667764d8c27", "committedDate": "2020-10-27T07:22:45Z", "message": "adjust serverless wf example"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0b1772baac87124de8f78db80cb4e27fdeaaaea", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/d0b1772baac87124de8f78db80cb4e27fdeaaaea", "committedDate": "2020-10-27T07:22:45Z", "message": "fix stream names"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5b63b3ea7040c54fb9fb6373034534d34b9fc63", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/b5b63b3ea7040c54fb9fb6373034534d34b9fc63", "committedDate": "2020-10-27T07:22:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edd1b208c00f34e66eec99aaf895f00dca7c10f9", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/edd1b208c00f34e66eec99aaf895f00dca7c10f9", "committedDate": "2020-10-27T07:22:45Z", "message": "temporarily disable knative test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd7a9597b0bb45898a2037327692cd9da9c9fc51", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/fd7a9597b0bb45898a2037327692cd9da9c9fc51", "committedDate": "2020-10-27T07:22:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c93b53ca2138d8737775eef29df11a25bdc800f2", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/c93b53ca2138d8737775eef29df11a25bdc800f2", "committedDate": "2020-10-27T07:22:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ab3a2574333135b47d6169f9ff4a5d05c68e55de", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/ab3a2574333135b47d6169f9ff4a5d05c68e55de", "committedDate": "2020-10-27T07:22:45Z", "message": "wip"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9a03d7e3455b220be710bb13bf1f1ef13b9587", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/0d9a03d7e3455b220be710bb13bf1f1ef13b9587", "committedDate": "2020-10-27T07:22:45Z", "message": "fix tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3a3fbf4cd9e66e26cfc71e5badba7399583f7b1", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/e3a3fbf4cd9e66e26cfc71e5badba7399583f7b1", "committedDate": "2020-10-27T07:22:45Z", "message": "use trigger name instead of class name (both are accepted)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f41ae60d98e8815f6c1eaa7b1bc3f05645f77026", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/f41ae60d98e8815f6c1eaa7b1bc3f05645f77026", "committedDate": "2020-10-27T07:22:46Z", "message": "renaming modules to addons"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d1778858192dcc1fc6130f6b4e1be5930e9db503", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/d1778858192dcc1fc6130f6b4e1be5930e9db503", "committedDate": "2020-10-19T08:15:42Z", "message": "renaming modules to addons"}, "afterCommit": {"oid": "f41ae60d98e8815f6c1eaa7b1bc3f05645f77026", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/f41ae60d98e8815f6c1eaa7b1bc3f05645f77026", "committedDate": "2020-10-27T07:22:46Z", "message": "renaming modules to addons"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e15e393d76e7f6dde9d22c590daccd96ee91533", "author": {"user": {"login": "evacchi", "name": "Edoardo Vacchi"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/5e15e393d76e7f6dde9d22c590daccd96ee91533", "committedDate": "2020-10-27T07:44:22Z", "message": "add cloudevents addon"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4375, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}