{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA2NzU1MjM2", "number": 243, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDoxMzo0NFrOD2mfYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDoxMzo0NFrOD2mfYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU4NTgwMzIzOnYy", "diffSide": "RIGHT", "path": "process-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMDoxMzo0NFrOGMbgSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QxMToxNzoyNFrOGMd5CQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY4NjczMQ==", "bodyText": "I believe the port can be injected as a field using annotation @LocalServerPort, that removes the dependency of the test on configuration. Similarly to process-usertasks-with-security-oidc-springboot\n   @LocalServerPort\n    int randomServerPort;\n\n    @BeforeAll\n    public void before() {\n        RestAssured.port = randomServerPort;\n    }", "url": "https://github.com/kiegroup/kogito-examples/pull/243#discussion_r415686731", "createdAt": "2020-04-27T10:13:44Z", "author": {"login": "jstastny-cz"}, "path": "process-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates. \n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@Testcontainers\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, properties = {\n+        \"infinispan.remote.use-auth=true\",\n+        \"infinispan.remote.auth-username=admin\",\n+        \"infinispan.remote.auth-password=admin\",\n+        \"infinispan.remote.sasl-mechanism=DIGEST-MD5\"\n+})\n+public class DealsRestIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DealsRestIT.class);\n+\n+    @Container\n+    public static GenericContainer INFINISPAN = new FixedHostPortGenericContainer(System.getProperty(\"container.image.infinispan\"))\n+            .withFixedExposedPort(11222, 11222)\n+            .withEnv(\"USER\", \"admin\")\n+            .withEnv(\"PASS\", \"admin\")\n+            .waitingFor(Wait.forLogMessage(\".*ISPN080001.*\", 1));\n+\n+    @BeforeAll\n+    public static void setup() {\n+        RestAssured.port = 8080;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "686240183098a71962a278544b69153d9d64cde4"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTcyNTgzMw==", "bodyText": "@jstastny-cz done", "url": "https://github.com/kiegroup/kogito-examples/pull/243#discussion_r415725833", "createdAt": "2020-04-27T11:17:24Z", "author": {"login": "cristianonicolai"}, "path": "process-infinispan-persistence-springboot/src/test/java/org/acme/deals/DealsRestIT.java", "diffHunk": "@@ -0,0 +1,108 @@\n+/*\n+ * Copyright 2020 Red Hat, Inc. and/or its affiliates. \n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\");\n+ * you may not use this file except in compliance with the License.\n+ * You may obtain a copy of the License at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing, software\n+ * distributed under the License is distributed on an \"AS IS\" BASIS,\n+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ * See the License for the specific language governing permissions and\n+ * limitations under the License.\n+ */\n+\n+package org.acme.deals;\n+\n+import java.util.Map;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.Test;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.testcontainers.containers.FixedHostPortGenericContainer;\n+import org.testcontainers.containers.GenericContainer;\n+import org.testcontainers.containers.wait.strategy.Wait;\n+import org.testcontainers.junit.jupiter.Container;\n+import org.testcontainers.junit.jupiter.Testcontainers;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@Testcontainers\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, properties = {\n+        \"infinispan.remote.use-auth=true\",\n+        \"infinispan.remote.auth-username=admin\",\n+        \"infinispan.remote.auth-password=admin\",\n+        \"infinispan.remote.sasl-mechanism=DIGEST-MD5\"\n+})\n+public class DealsRestIT {\n+\n+    private static final Logger LOGGER = LoggerFactory.getLogger(DealsRestIT.class);\n+\n+    @Container\n+    public static GenericContainer INFINISPAN = new FixedHostPortGenericContainer(System.getProperty(\"container.image.infinispan\"))\n+            .withFixedExposedPort(11222, 11222)\n+            .withEnv(\"USER\", \"admin\")\n+            .withEnv(\"PASS\", \"admin\")\n+            .waitingFor(Wait.forLogMessage(\".*ISPN080001.*\", 1));\n+\n+    @BeforeAll\n+    public static void setup() {\n+        RestAssured.port = 8080;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTY4NjczMQ=="}, "originalCommit": {"oid": "686240183098a71962a278544b69153d9d64cde4"}, "originalPosition": 60}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 502, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}