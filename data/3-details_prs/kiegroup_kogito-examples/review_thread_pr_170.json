{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2NzQzODEx", "number": 170, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzoxNjowM1rODt002Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxMDoxNlrODwFhSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mzc4MDA5OnYy", "diffSide": "RIGHT", "path": "kogito-sw-greeting/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzoxNjowM1rOF_eLjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxMTo0M1rOGAnR4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5OTA4NA==", "bodyText": "I think we have bumped reqs to align to quarkus (IIRC mvn 3.6.1 or 3.6.2 and Java 11)", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r402099084", "createdAt": "2020-04-02T07:16:03Z", "author": {"login": "evacchi"}, "path": "kogito-sw-greeting/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+# Kogito Serverless Workflow Simple Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 1.8.0+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.5.4+ installed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a1317683b4bc535644d1c1e3f94f64d5edba7a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NjczOA==", "bodyText": "updated - thanks!", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r403296738", "createdAt": "2020-04-03T20:11:43Z", "author": {"login": "tsurdilo"}, "path": "kogito-sw-greeting/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+# Kogito Serverless Workflow Simple Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 1.8.0+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.5.4+ installed", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5OTA4NA=="}, "originalCommit": {"oid": "e3a1317683b4bc535644d1c1e3f94f64d5edba7a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5Mzc4MDQyOnYy", "diffSide": "RIGHT", "path": "kogito-sw-greeting/README.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQwNzoxNjoxNFrOF_eLxQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wM1QyMDoxMTo1MFrOGAnSOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5OTE0MQ==", "bodyText": "GraalVM >=19.3.1", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r402099141", "createdAt": "2020-04-02T07:16:14Z", "author": {"login": "evacchi"}, "path": "kogito-sw-greeting/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+# Kogito Serverless Workflow Simple Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 1.8.0+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.5.4+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVM 19.1.1](https://github.com/oracle/graal/releases/tag/vm-19.1.1) installed ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3a1317683b4bc535644d1c1e3f94f64d5edba7a"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzI5NjgyNQ==", "bodyText": "updated - thanks!", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r403296825", "createdAt": "2020-04-03T20:11:50Z", "author": {"login": "tsurdilo"}, "path": "kogito-sw-greeting/README.md", "diffHunk": "@@ -0,0 +1,108 @@\n+# Kogito Serverless Workflow Simple Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 1.8.0+ installed \n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.5.4+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVM 19.1.1](https://github.com/oracle/graal/releases/tag/vm-19.1.1) installed ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjA5OTE0MQ=="}, "originalCommit": {"oid": "e3a1317683b4bc535644d1c1e3f94f64d5edba7a"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTYwNDU2OnYy", "diffSide": "RIGHT", "path": "kogito-sw-greeting/README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzowNjo1MlrOGBGdYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzowNjo1MlrOGBGdYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwNzU4NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              - Java 1.8.0+ installed \n          \n          \n            \n              - Java 11+ installed", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r403807585", "createdAt": "2020-04-06T03:06:52Z", "author": {"login": "cristianonicolai"}, "path": "kogito-sw-greeting/README.md", "diffHunk": "@@ -0,0 +1,115 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet \n+(see details in the [Submit a request](#Submit-a-request) section).\n+The workflow starts with a RELAY state which injects the greeting \"Hello\" into the workflow data.\n+It then transitions to an OPERATION state which references a sysout function and passes to it\n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+This is then printed out by the function to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 1.8.0+ installed ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4993ce17ec6c77fed1b1ed321f9deb1285f33898"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTYwNTA5OnYy", "diffSide": "RIGHT", "path": "kogito-sw-greeting/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzowNzoyOVrOGBGduA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1NjowNlrOGBljSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwNzY3Mg==", "bodyText": "you can remove the groupId from here as it is inherited.", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r403807672", "createdAt": "2020-04-06T03:07:29Z", "author": {"login": "cristianonicolai"}, "path": "kogito-sw-greeting/pom.xml", "diffHunk": "@@ -0,0 +1,119 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4993ce17ec6c77fed1b1ed321f9deb1285f33898"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNzAwMw==", "bodyText": "updated. thanks.", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r404317003", "createdAt": "2020-04-06T18:56:06Z", "author": {"login": "tsurdilo"}, "path": "kogito-sw-greeting/pom.xml", "diffHunk": "@@ -0,0 +1,119 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwNzY3Mg=="}, "originalCommit": {"oid": "4993ce17ec6c77fed1b1ed321f9deb1285f33898"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUwNTYwNzc4OnYy", "diffSide": "RIGHT", "path": "kogito-sw-greeting/pom.xml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQwMzowOTozMFrOGBGfSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxODo1NjowMVrOGBljGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwODA3Mg==", "bodyText": "@tsurdilo its a fine tune but helps if you move this dependency version declaration into the dependencyManagement section on the root pom.", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r403808072", "createdAt": "2020-04-06T03:09:30Z", "author": {"login": "cristianonicolai"}, "path": "kogito-sw-greeting/pom.xml", "diffHunk": "@@ -0,0 +1,119 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>sw-quarkus-greeting</artifactId>\n+\n+  <name>Kogito Example :: Serverless Workflow :: Greeting</name>\n+  <description>Greeting service</description>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-arc</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonb</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonp</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-smallrye-openapi</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.jayway.jsonpath</groupId>\n+      <artifactId>json-path</artifactId>\n+      <version>${version.jayway.jsonpath}</version>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4993ce17ec6c77fed1b1ed321f9deb1285f33898"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDMxNjk1NQ==", "bodyText": "updated. thanks.", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r404316955", "createdAt": "2020-04-06T18:56:01Z", "author": {"login": "tsurdilo"}, "path": "kogito-sw-greeting/pom.xml", "diffHunk": "@@ -0,0 +1,119 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>8.0.0-SNAPSHOT</version>\n+  </parent>\n+  <groupId>org.kie.kogito.examples</groupId>\n+  <artifactId>sw-quarkus-greeting</artifactId>\n+\n+  <name>Kogito Example :: Serverless Workflow :: Greeting</name>\n+  <description>Greeting service</description>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-arc</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonb</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-jsonp</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-smallrye-openapi</artifactId>\n+    </dependency>\n+    <dependency>\n+      <groupId>com.jayway.jsonpath</groupId>\n+      <artifactId>json-path</artifactId>\n+      <version>${version.jayway.jsonpath}</version>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMzgwODA3Mg=="}, "originalCommit": {"oid": "4993ce17ec6c77fed1b1ed321f9deb1285f33898"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUxNzQ4NjgwOnYy", "diffSide": "RIGHT", "path": "serverless-workflow-greeting-quarkus/README.md", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoxMDoxNlrOGC41_Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOFQxNzoyMTozMFrOGC5QTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MTY2MQ==", "bodyText": "I don't see any logs running the curl commands.\nI ran the app using mvn clean package quarkus:dev\ncan you please check ?", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r405681661", "createdAt": "2020-04-08T17:10:16Z", "author": {"login": "radtriste"}, "path": "serverless-workflow-greeting-quarkus/README.md", "diffHunk": "@@ -0,0 +1,148 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet, and the language in \n+which to greet them in\n+(see details in the [Submit a request](#Submit-a-request) section).\n+\n+The workflow starts with a SWICH state, which is like a gateway. The switch state \n+decides which language to greet the person in based on the workflow input \"language\" parameter.\n+Depending on the language the workflow then injects the language-based greeting via RELAY states.\n+Relay states are just \"pass\" states which do no execute any functions and only have the ability\n+to inject data into the workflow.\n+The relay states then transition to the OPERATION state which call a \"sysout\" function passing it \n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+The function then prints out the greeting to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/sw-quarkus-greeting-{version}-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\sw-quarkus-greeting-{version}-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```text\n+mvn clean package -Pnative\n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```text\n+./target/sw-quarkus-greeting-{version}-runner\n+```\n+\n+### Submit a request\n+\n+The service based on the JSON workflow definition can be access by sending a request to http://localhost:8080/jsongreet'\n+with following content \n+\n+```json\n+{\n+  \"workflowdata\": {\n+   \"name\" : \"John\",\n+   \"language\": \"English\"\n+  }\n+}\n+```\n+\n+Complete curl command can be found below:\n+\n+```text\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"workflowdata\" : {\"name\": \"John\", \"language\": \"English\"}}' http://localhost:8080/jsongreet\n+```\n+\n+Log after curl executed:\n+\n+```text\n+{\"id\":\"541a5363-1667-4f6d-a8b4-1299eba81eac\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}}\n+```\n+\n+In Quarkus you should see the log message printed:\n+\n+```text\n+Hello from JSON Workflow, John", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "445ee6986008f2419ffc2b4bcf3715727a3cdf4a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MjYwMA==", "bodyText": "and the answer from curl command does not get any greeting field:\n{\"id\":\"12645640-bfca-4646-b1fd-d05aadcdcc8f\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\"}}", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r405682600", "createdAt": "2020-04-08T17:11:52Z", "author": {"login": "radtriste"}, "path": "serverless-workflow-greeting-quarkus/README.md", "diffHunk": "@@ -0,0 +1,148 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet, and the language in \n+which to greet them in\n+(see details in the [Submit a request](#Submit-a-request) section).\n+\n+The workflow starts with a SWICH state, which is like a gateway. The switch state \n+decides which language to greet the person in based on the workflow input \"language\" parameter.\n+Depending on the language the workflow then injects the language-based greeting via RELAY states.\n+Relay states are just \"pass\" states which do no execute any functions and only have the ability\n+to inject data into the workflow.\n+The relay states then transition to the OPERATION state which call a \"sysout\" function passing it \n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+The function then prints out the greeting to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/sw-quarkus-greeting-{version}-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\sw-quarkus-greeting-{version}-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```text\n+mvn clean package -Pnative\n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```text\n+./target/sw-quarkus-greeting-{version}-runner\n+```\n+\n+### Submit a request\n+\n+The service based on the JSON workflow definition can be access by sending a request to http://localhost:8080/jsongreet'\n+with following content \n+\n+```json\n+{\n+  \"workflowdata\": {\n+   \"name\" : \"John\",\n+   \"language\": \"English\"\n+  }\n+}\n+```\n+\n+Complete curl command can be found below:\n+\n+```text\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"workflowdata\" : {\"name\": \"John\", \"language\": \"English\"}}' http://localhost:8080/jsongreet\n+```\n+\n+Log after curl executed:\n+\n+```text\n+{\"id\":\"541a5363-1667-4f6d-a8b4-1299eba81eac\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}}\n+```\n+\n+In Quarkus you should see the log message printed:\n+\n+```text\n+Hello from JSON Workflow, John", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MTY2MQ=="}, "originalCommit": {"oid": "445ee6986008f2419ffc2b4bcf3715727a3cdf4a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MzE0MA==", "bodyText": "I have this in mvn log:\n[INFO] --- quarkus-maven-plugin:1.3.0.Final:build (default) @ serverless-workflow-greeting-quarkus ---\n[INFO] [org.jboss.threads] JBoss Threads version 3.0.1.Final\n[WARNING] workflow includes currently unsupported states.\n[WARNING] default process is generated.\n[WARNING] workflow includes currently unsupported states.\n[WARNING] default process is generated.\n[WARNING] workflow includes currently unsupported states.\n[WARNING] default process is generated.\n[WARNING] workflow includes currently unsupported states.\n[WARNING] default process is generated.\n[INFO] [io.quarkus.deployment.pkg.steps.JarResultBuildStep] Building thin jar: /home/tradisso/projects/kogito/kogito-examples/serverless-workflow-greeting-quarkus/target/serverless-workflow-greeting-quarkus-8.0.0-SNAPSHOT-runner.jar\n[INFO] [io.quarkus.deployment.QuarkusAugmentor] Quarkus augmentation completed in 3334ms\n[INFO] \n[INFO] --- quarkus-maven-plugin:1.3.0.Final:dev (default-cli) @ serverless-workflow-greeting-quarkus ---\n[WARNING] The project's sources directory does not exist /home/tradisso/projects/kogito/kogito-examples/serverless-workflow-greeting-quarkus/src/main/java\nOpenJDK 64-Bit Server VM warning: forcing TieredStopAtLevel to full optimization because JVMCI is enabled\nListening for transport dt_socket at address: 5005\n__  ____  __  _____   ___  __ ____  ______ \n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \n2020-04-08 19:11:12,279 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) workflow includes currently unsupported states.\n2020-04-08 19:11:12,279 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) default process is generated.\n2020-04-08 19:11:12,340 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) workflow includes currently unsupported states.\n2020-04-08 19:11:12,340 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) default process is generated.\n2020-04-08 19:11:12,355 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) workflow includes currently unsupported states.\n2020-04-08 19:11:12,355 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) default process is generated.\n2020-04-08 19:11:12,374 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) workflow includes currently unsupported states.\n2020-04-08 19:11:12,374 WARN  [org.jbp.ser.wor.par.ServerlessWorkflowParser] (build-17) default process is generated.\n2020-04-08 19:11:15,260 INFO  [io.quarkus] (main) serverless-workflow-greeting-quarkus 8.0.0-SNAPSHOT (powered by Quarkus 1.3.1.Final) started in 3.848s. Listening on: http://0.0.0.0:8080\n2020-04-08 19:11:15,262 INFO  [io.quarkus] (main) Profile dev activated. Live Coding activated.\n2020-04-08 19:11:15,262 INFO  [io.quarkus] (main) Installed features: [cdi, kogito, resteasy, resteasy-jackson, smallrye-openapi, swagger-ui]\n2020-04-08 19:11:21,400 INFO  [io.quarkus] (vert.x-worker-thread-0) Quarkus stopped in 0.020s\n__  ____  __  _____   ___  __ ____  ______ \n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/ \n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\   \n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/   \n2020-04-08 19:11:21,711 INFO  [io.quarkus] (vert.x-worker-thread-0) serverless-workflow-greeting-quarkus 8.0.0-SNAPSHOT (powered by Quarkus 1.3.1.Final) started in 0.064s. Listening on: http://0.0.0.0:8080\n2020-04-08 19:11:21,711 INFO  [io.quarkus] (vert.x-worker-thread-0) Profile dev activated. Live Coding activated.\n2020-04-08 19:11:21,711 INFO  [io.quarkus] (vert.x-worker-thread-0) Installed features: [cdi, kogito, resteasy, resteasy-jackson, smallrye-openapi, swagger-ui]\n2020-04-08 19:11:21,712 INFO  [io.qua.dev] (vert.x-worker-thread-0) Hot replace total time: 0.338s \n\nhere is mvn --version:\nMaven home: /home/tradisso/apps/maven/apache-maven-3.6.3\nJava version: 11.0.6, vendor: Oracle Corporation, runtime: /usr/lib/jvm/graalvm-ce-java11-19.3.1\nDefault locale: en_US, platform encoding: UTF-8\nOS name: \"linux\", version: \"5.5.13-200.fc31.x86_64\", arch: \"amd64\", family: \"unix\"", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r405683140", "createdAt": "2020-04-08T17:12:46Z", "author": {"login": "radtriste"}, "path": "serverless-workflow-greeting-quarkus/README.md", "diffHunk": "@@ -0,0 +1,148 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet, and the language in \n+which to greet them in\n+(see details in the [Submit a request](#Submit-a-request) section).\n+\n+The workflow starts with a SWICH state, which is like a gateway. The switch state \n+decides which language to greet the person in based on the workflow input \"language\" parameter.\n+Depending on the language the workflow then injects the language-based greeting via RELAY states.\n+Relay states are just \"pass\" states which do no execute any functions and only have the ability\n+to inject data into the workflow.\n+The relay states then transition to the OPERATION state which call a \"sysout\" function passing it \n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+The function then prints out the greeting to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/sw-quarkus-greeting-{version}-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\sw-quarkus-greeting-{version}-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```text\n+mvn clean package -Pnative\n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```text\n+./target/sw-quarkus-greeting-{version}-runner\n+```\n+\n+### Submit a request\n+\n+The service based on the JSON workflow definition can be access by sending a request to http://localhost:8080/jsongreet'\n+with following content \n+\n+```json\n+{\n+  \"workflowdata\": {\n+   \"name\" : \"John\",\n+   \"language\": \"English\"\n+  }\n+}\n+```\n+\n+Complete curl command can be found below:\n+\n+```text\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"workflowdata\" : {\"name\": \"John\", \"language\": \"English\"}}' http://localhost:8080/jsongreet\n+```\n+\n+Log after curl executed:\n+\n+```text\n+{\"id\":\"541a5363-1667-4f6d-a8b4-1299eba81eac\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}}\n+```\n+\n+In Quarkus you should see the log message printed:\n+\n+```text\n+Hello from JSON Workflow, John", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MTY2MQ=="}, "originalCommit": {"oid": "445ee6986008f2419ffc2b4bcf3715727a3cdf4a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4NjQwNg==", "bodyText": "Yes, as mentioned in comment - this depends on kiegroup/kogito-runtimes#417.\nOnce that one is merged you will see the proper outputs as described in the readme. Thanks!", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r405686406", "createdAt": "2020-04-08T17:18:09Z", "author": {"login": "tsurdilo"}, "path": "serverless-workflow-greeting-quarkus/README.md", "diffHunk": "@@ -0,0 +1,148 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet, and the language in \n+which to greet them in\n+(see details in the [Submit a request](#Submit-a-request) section).\n+\n+The workflow starts with a SWICH state, which is like a gateway. The switch state \n+decides which language to greet the person in based on the workflow input \"language\" parameter.\n+Depending on the language the workflow then injects the language-based greeting via RELAY states.\n+Relay states are just \"pass\" states which do no execute any functions and only have the ability\n+to inject data into the workflow.\n+The relay states then transition to the OPERATION state which call a \"sysout\" function passing it \n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+The function then prints out the greeting to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/sw-quarkus-greeting-{version}-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\sw-quarkus-greeting-{version}-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```text\n+mvn clean package -Pnative\n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```text\n+./target/sw-quarkus-greeting-{version}-runner\n+```\n+\n+### Submit a request\n+\n+The service based on the JSON workflow definition can be access by sending a request to http://localhost:8080/jsongreet'\n+with following content \n+\n+```json\n+{\n+  \"workflowdata\": {\n+   \"name\" : \"John\",\n+   \"language\": \"English\"\n+  }\n+}\n+```\n+\n+Complete curl command can be found below:\n+\n+```text\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"workflowdata\" : {\"name\": \"John\", \"language\": \"English\"}}' http://localhost:8080/jsongreet\n+```\n+\n+Log after curl executed:\n+\n+```text\n+{\"id\":\"541a5363-1667-4f6d-a8b4-1299eba81eac\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}}\n+```\n+\n+In Quarkus you should see the log message printed:\n+\n+```text\n+Hello from JSON Workflow, John", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MTY2MQ=="}, "originalCommit": {"oid": "445ee6986008f2419ffc2b4bcf3715727a3cdf4a"}, "originalPosition": 98}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4ODM5OA==", "bodyText": "I thought kiegroup/kogito-runtimes#417 would have been merged by now but it seems jenkins is super slow atm. Will notify you as soon as thats done.", "url": "https://github.com/kiegroup/kogito-examples/pull/170#discussion_r405688398", "createdAt": "2020-04-08T17:21:30Z", "author": {"login": "tsurdilo"}, "path": "serverless-workflow-greeting-quarkus/README.md", "diffHunk": "@@ -0,0 +1,148 @@\n+# Kogito Serverless Workflow - Greeting Example\n+\n+## Description\n+\n+This example contains two simple greeting workflow services. \n+The services are described using both JSON and YAML formats as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing the name of the person to greet, and the language in \n+which to greet them in\n+(see details in the [Submit a request](#Submit-a-request) section).\n+\n+The workflow starts with a SWICH state, which is like a gateway. The switch state \n+decides which language to greet the person in based on the workflow input \"language\" parameter.\n+Depending on the language the workflow then injects the language-based greeting via RELAY states.\n+Relay states are just \"pass\" states which do no execute any functions and only have the ability\n+to inject data into the workflow.\n+The relay states then transition to the OPERATION state which call a \"sysout\" function passing it \n+input parameter containing the greeting and the name of the person to greet: \"$.greeting $.name\".\n+The function then prints out the greeting to the console.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```text\n+mvn clean package quarkus:dev    \n+```\n+\n+### Compile and Run in JVM mode\n+\n+```text\n+mvn clean package \n+java -jar target/sw-quarkus-greeting-{version}-runner.jar    \n+```\n+\n+or on windows\n+\n+```text\n+mvn clean package\n+java -jar target\\sw-quarkus-greeting-{version}-runner.jar\n+```\n+\n+### Compile and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```text\n+mvn clean package -Pnative\n+```\n+  \n+To run the generated native executable, generated in `target/`, execute\n+\n+```text\n+./target/sw-quarkus-greeting-{version}-runner\n+```\n+\n+### Submit a request\n+\n+The service based on the JSON workflow definition can be access by sending a request to http://localhost:8080/jsongreet'\n+with following content \n+\n+```json\n+{\n+  \"workflowdata\": {\n+   \"name\" : \"John\",\n+   \"language\": \"English\"\n+  }\n+}\n+```\n+\n+Complete curl command can be found below:\n+\n+```text\n+curl -X POST -H 'Content-Type:application/json' -H 'Accept:application/json' -d '{\"workflowdata\" : {\"name\": \"John\", \"language\": \"English\"}}' http://localhost:8080/jsongreet\n+```\n+\n+Log after curl executed:\n+\n+```text\n+{\"id\":\"541a5363-1667-4f6d-a8b4-1299eba81eac\",\"workflowdata\":{\"name\":\"John\",\"language\":\"English\",\"greeting\":\"Hello from JSON Workflow, \"}}\n+```\n+\n+In Quarkus you should see the log message printed:\n+\n+```text\n+Hello from JSON Workflow, John", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNTY4MTY2MQ=="}, "originalCommit": {"oid": "445ee6986008f2419ffc2b4bcf3715727a3cdf4a"}, "originalPosition": 98}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 600, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}