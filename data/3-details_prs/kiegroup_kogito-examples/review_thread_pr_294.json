{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzQ1NTQ3", "number": 294, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoxNDo0NVrOEMJeyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoxNDo0NVrOEMJeyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgxMTczNzA0OnYy", "diffSide": "RIGHT", "path": "flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoxNDo0NVrOGuF4Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wN1QxNjoxNDo0NVrOGuF4Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDk4Mzk5NA==", "bodyText": "why not using the SpringBootTest.WebEnvironment.RANDOM_PORT? it is great for tests, to avoid conflicts.", "url": "https://github.com/kiegroup/kogito-examples/pull/294#discussion_r450983994", "createdAt": "2020-07-07T16:14:45Z", "author": {"login": "tiagodolphine"}, "path": "flexible-process-springboot/src/test/java/org/kie/flexible/kogito/example/ServiceDeskProcessTest.java", "diffHunk": "@@ -0,0 +1,195 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+\n+package org.kie.flexible.kogito.example;\n+\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.Optional;\n+\n+import org.junit.jupiter.api.Test;\n+import org.kie.flexible.kogito.example.model.Product;\n+import org.kie.flexible.kogito.example.model.State;\n+import org.kie.flexible.kogito.example.model.SupportCase;\n+import org.kie.flexible.kogito.example.service.TriageService;\n+import org.kie.kogito.tests.KogitoSpringbootApplication;\n+import org.springframework.boot.test.context.SpringBootTest;\n+import org.springframework.test.annotation.DirtiesContext;\n+import org.springframework.test.annotation.DirtiesContext.ClassMode;\n+\n+import io.restassured.RestAssured;\n+import io.restassured.http.ContentType;\n+\n+import static io.restassured.RestAssured.given;\n+\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertTrue;\n+\n+import static org.hamcrest.CoreMatchers.anyOf;\n+import static org.hamcrest.CoreMatchers.is;\n+import static org.hamcrest.CoreMatchers.notNullValue;\n+\n+@SpringBootTest(webEnvironment = SpringBootTest.WebEnvironment.DEFINED_PORT, classes = KogitoSpringbootApplication.class)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2c3d27bce932d34cb919010066a83d4f7b9c0333"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 557, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}