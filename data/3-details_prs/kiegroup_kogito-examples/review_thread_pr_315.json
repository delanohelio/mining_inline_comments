{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNzg3NzMy", "number": 315, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzo1NzozM1rOEVTXFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTowMTo1MlrOEVc-vQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzcyNzU4OnYy", "diffSide": "RIGHT", "path": "dmn-tracing-quarkus/README.md", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwNzo1NzozM1rOG7-hnA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzoxNjo1MVrOG8JNMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA==", "bodyText": "I think you might want to add a few lines to show how to start the trusty/tracing service", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465543580", "createdAt": "2020-08-05T07:57:33Z", "author": {"login": "evacchi"}, "path": "dmn-tracing-quarkus/README.md", "diffHunk": "@@ -0,0 +1,128 @@\n+# DMN Tracing Quarkus example\n+\n+## Description\n+\n+A simple DMN service to evaluate a loan approval and generate tracing events that might be consumed by the Trusty service.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need:\n+  - [GraalVM 19.3.1](https://github.com/oracle/graal/releases/tag/vm-19.3.1) installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```\n+mvn clean compile quarkus:dev\n+```\n+\n+### Package and Run in JVM mode\n+\n+```\n+mvn clean package\n+java -jar target/dmn-tracing-quarkus-runner.jar\n+```\n+\n+or on Windows\n+\n+```\n+mvn clean package\n+java -jar target\\dmn-tracing-quarkus-runner.jar\n+```\n+\n+### Package and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```\n+mvn clean package -Pnative\n+```\n+\n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+./target/dmn-quarkus-example-runner\n+```\n+\n+Note: This does not yet work on Windows, GraalVM and Quarkus should be rolling out support for Windows soon.\n+\n+## OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/openapi?format=json) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+When running in either Quarkus Development or Native mode, we also leverage the [Quarkus OpenAPI extension](https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development) that exposes [Swagger UI](http://localhost:8080/swagger-ui/) that you can use to look at available REST endpoints and send test requests.\n+\n+## Example Usage\n+\n+Once the service is up and running, you can use the following example to interact with the service.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTY5NTkxMA==", "bodyText": "Unfortunately we are not ready yet to integrate the two components, since the feature is still under strong development. Just to give you the idea: in this very moment the trusty service has a wrong channel name (kogito-tracing), while the runtime has kogito-tracing-decision. I spotted this few days ago and I've included the fix in this PR kiegroup/kogito-apps#339 .\nThe messaging part is under strong development here kiegroup/kogito-apps#345 and here kiegroup/kogito-runtimes#651 -> if I include an example here, it is going to be broken very often in these weeks.\nFor such reasons, if you agree, I would do that as soon as we are somehow in a more stable situation in the next weeks. wdyt @evacchi ?", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465695910", "createdAt": "2020-08-05T12:39:46Z", "author": {"login": "r00ta"}, "path": "dmn-tracing-quarkus/README.md", "diffHunk": "@@ -0,0 +1,128 @@\n+# DMN Tracing Quarkus example\n+\n+## Description\n+\n+A simple DMN service to evaluate a loan approval and generate tracing events that might be consumed by the Trusty service.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need:\n+  - [GraalVM 19.3.1](https://github.com/oracle/graal/releases/tag/vm-19.3.1) installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```\n+mvn clean compile quarkus:dev\n+```\n+\n+### Package and Run in JVM mode\n+\n+```\n+mvn clean package\n+java -jar target/dmn-tracing-quarkus-runner.jar\n+```\n+\n+or on Windows\n+\n+```\n+mvn clean package\n+java -jar target\\dmn-tracing-quarkus-runner.jar\n+```\n+\n+### Package and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```\n+mvn clean package -Pnative\n+```\n+\n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+./target/dmn-quarkus-example-runner\n+```\n+\n+Note: This does not yet work on Windows, GraalVM and Quarkus should be rolling out support for Windows soon.\n+\n+## OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/openapi?format=json) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+When running in either Quarkus Development or Native mode, we also leverage the [Quarkus OpenAPI extension](https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development) that exposes [Swagger UI](http://localhost:8080/swagger-ui/) that you can use to look at available REST endpoints and send test requests.\n+\n+## Example Usage\n+\n+Once the service is up and running, you can use the following example to interact with the service.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA=="}, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTcxODU3OQ==", "bodyText": "I've created this so to keep track https://issues.redhat.com/browse/KOGITO-2962", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465718579", "createdAt": "2020-08-05T13:16:51Z", "author": {"login": "r00ta"}, "path": "dmn-tracing-quarkus/README.md", "diffHunk": "@@ -0,0 +1,128 @@\n+# DMN Tracing Quarkus example\n+\n+## Description\n+\n+A simple DMN service to evaluate a loan approval and generate tracing events that might be consumed by the Trusty service.\n+\n+## Installing and Running\n+\n+### Prerequisites\n+\n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need:\n+  - [GraalVM 19.3.1](https://github.com/oracle/graal/releases/tag/vm-19.3.1) installed\n+  - Environment variable GRAALVM_HOME set accordingly\n+  - Note that GraalVM native image compilation typically requires other packages (glibc-devel, zlib-devel and gcc) to be installed too.  You also need 'native-image' installed in GraalVM (using 'gu install native-image'). Please refer to [GraalVM installation documentation](https://www.graalvm.org/docs/reference-manual/aot-compilation/#prerequisites) for more details.\n+\n+### Compile and Run in Local Dev Mode\n+\n+```\n+mvn clean compile quarkus:dev\n+```\n+\n+### Package and Run in JVM mode\n+\n+```\n+mvn clean package\n+java -jar target/dmn-tracing-quarkus-runner.jar\n+```\n+\n+or on Windows\n+\n+```\n+mvn clean package\n+java -jar target\\dmn-tracing-quarkus-runner.jar\n+```\n+\n+### Package and Run using Local Native Image\n+Note that this requires GRAALVM_HOME to point to a valid GraalVM installation\n+\n+```\n+mvn clean package -Pnative\n+```\n+\n+To run the generated native executable, generated in `target/`, execute\n+\n+```\n+./target/dmn-quarkus-example-runner\n+```\n+\n+Note: This does not yet work on Windows, GraalVM and Quarkus should be rolling out support for Windows soon.\n+\n+## OpenAPI (Swagger) documentation\n+[Specification at swagger.io](https://swagger.io/docs/specification/about/)\n+\n+You can take a look at the [OpenAPI definition](http://localhost:8080/openapi?format=json) - automatically generated and included in this service - to determine all available operations exposed by this service. For easy readability you can visualize the OpenAPI definition file using a UI tool like for example available [Swagger UI](https://editor.swagger.io).\n+\n+In addition, various clients to interact with this service can be easily generated using this OpenAPI definition.\n+\n+When running in either Quarkus Development or Native mode, we also leverage the [Quarkus OpenAPI extension](https://quarkus.io/guides/openapi-swaggerui#use-swagger-ui-for-development) that exposes [Swagger UI](http://localhost:8080/swagger-ui/) that you can use to look at available REST endpoints and send test requests.\n+\n+## Example Usage\n+\n+Once the service is up and running, you can use the following example to interact with the service.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0MzU4MA=="}, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNzc1NjI1OnYy", "diffSide": "RIGHT", "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwODowNTozOVrOG7-zdg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQwOTo0NjoxOVrOG8CVFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0ODE1MA==", "bodyText": "minor nitpick if you want to investigate. You may be able to inject here a smallrye reactive channel which I believe is what users should/would write", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465548150", "createdAt": "2020-08-05T08:05:39Z", "author": {"login": "evacchi"}, "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.dmn.kogito.quarkus.tracing;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.kafka.KafkaClient;\n+import org.kie.kogito.testcontainers.quarkus.KafkaQuarkusTestResource;\n+import org.kie.kogito.tracing.decision.event.trace.TraceEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaQuarkusTestResource.class)\n+public class LoanEligibilityTest {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(LoanEligibilityTest.class);\n+\n+    public static final String TOPIC_CONSUMER = \"kogito-tracing-decision\";\n+\n+    @Inject\n+    private ObjectMapper objectMapper;\n+\n+    public KafkaClient kafkaClient;\n+\n+    @ConfigProperty(name = KafkaQuarkusTestResource.KOGITO_KAFKA_PROPERTY)\n+    private String kafkaBootstrapServers;\n+\n+    @Test\n+    public void testEvaluateTrafficViolation() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTYwNTkxMA==", "bodyText": "Hi @evacchi , what do you mean? Not sure I get the point :D Not sure how do I test that an event is properly consumed if I inject here the channel", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465605910", "createdAt": "2020-08-05T09:46:19Z", "author": {"login": "r00ta"}, "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "diffHunk": "@@ -0,0 +1,94 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.kie.dmn.kogito.quarkus.tracing;\n+\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.TimeUnit;\n+\n+import javax.inject.Inject;\n+\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n+import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.Test;\n+import org.kie.kogito.kafka.KafkaClient;\n+import org.kie.kogito.testcontainers.quarkus.KafkaQuarkusTestResource;\n+import org.kie.kogito.tracing.decision.event.trace.TraceEvent;\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+\n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n+@QuarkusTest\n+@QuarkusTestResource(KafkaQuarkusTestResource.class)\n+public class LoanEligibilityTest {\n+\n+    private static Logger LOGGER = LoggerFactory.getLogger(LoanEligibilityTest.class);\n+\n+    public static final String TOPIC_CONSUMER = \"kogito-tracing-decision\";\n+\n+    @Inject\n+    private ObjectMapper objectMapper;\n+\n+    public KafkaClient kafkaClient;\n+\n+    @ConfigProperty(name = KafkaQuarkusTestResource.KOGITO_KAFKA_PROPERTY)\n+    private String kafkaBootstrapServers;\n+\n+    @Test\n+    public void testEvaluateTrafficViolation() throws InterruptedException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTU0ODE1MA=="}, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwOTMwMzY1OnYy", "diffSide": "RIGHT", "path": "dmn-tracing-quarkus/operator/dmn-quarkus-example.yaml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNTowMTo1MlrOG8NwOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQyMDoyNjo0MVrOG8ZZKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzA4Mg==", "bodyText": "Please change to KogitoBuild KogitoRuntime instead, see: #310", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465793082", "createdAt": "2020-08-05T15:01:52Z", "author": {"login": "ricardozanini"}, "path": "dmn-tracing-quarkus/operator/dmn-quarkus-example.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+apiVersion: app.kiegroup.org/v1alpha1\n+kind: KogitoApp", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTk4Mzc4NQ==", "bodyText": "Thanks!", "url": "https://github.com/kiegroup/kogito-examples/pull/315#discussion_r465983785", "createdAt": "2020-08-05T20:26:41Z", "author": {"login": "r00ta"}, "path": "dmn-tracing-quarkus/operator/dmn-quarkus-example.yaml", "diffHunk": "@@ -0,0 +1,16 @@\n+apiVersion: app.kiegroup.org/v1alpha1\n+kind: KogitoApp", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc5MzA4Mg=="}, "originalCommit": {"oid": "e062728800143aa4df93164e65578570c996b102"}, "originalPosition": 2}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 401, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}