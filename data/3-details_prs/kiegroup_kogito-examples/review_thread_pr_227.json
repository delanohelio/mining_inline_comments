{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAzODY4MTE5", "number": 227, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MDoyNFrODyKIIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMDoxNFrODyhDQQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTIxMzEyOnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MDoyNFrOGGCsSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MDoyNFrOGGCsSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4ODc0NA==", "bodyText": "Could you create another class that handle that and get the FlightBookingService bean ?", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r408988744", "createdAt": "2020-04-15T16:50:24Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "diffHunk": "@@ -1,14 +1,38 @@\n package org.acme.travels.service;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n \n import org.acme.travels.Flight;\n import org.acme.travels.Trip;\n \n @ApplicationScoped\n+@Path(\"/flightservice\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b5c5a0c9e4ca9aecece45dd80bfaf61eeeb882"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTIxNDcyOnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MDo1MVrOGGCtXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MDo1MVrOGGCtXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4OTAyMg==", "bodyText": "shouldTimeout ?", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r408989022", "createdAt": "2020-04-15T16:50:51Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "diffHunk": "@@ -1,14 +1,38 @@\n package org.acme.travels.service;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n \n import org.acme.travels.Flight;\n import org.acme.travels.Trip;\n \n @ApplicationScoped\n+@Path(\"/flightservice\")\n public class FlightBookingService {\n \n-\tpublic Flight bookFlight(Trip trip) {\n-\t\treturn new Flight(\"MX555\", trip.getBegin(), trip.getEnd());\n-\t}\n+    private Boolean timeout = Boolean.FALSE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b5c5a0c9e4ca9aecece45dd80bfaf61eeeb882"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjUzOTIxNTU5OnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1MTowM1rOGGCt2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNVQxNjo1OToxOFrOGGDCIw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4OTE0Ng==", "bodyText": "toggleTimeout() ?", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r408989146", "createdAt": "2020-04-15T16:51:03Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "diffHunk": "@@ -1,14 +1,38 @@\n package org.acme.travels.service;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n \n import org.acme.travels.Flight;\n import org.acme.travels.Trip;\n \n @ApplicationScoped\n+@Path(\"/flightservice\")\n public class FlightBookingService {\n \n-\tpublic Flight bookFlight(Trip trip) {\n-\t\treturn new Flight(\"MX555\", trip.getBegin(), trip.getEnd());\n-\t}\n+    private Boolean timeout = Boolean.FALSE;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Boolean getTimeout() {\n+        return timeout;\n+    }\n+\n+    @POST\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public boolean setTimeout() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7b5c5a0c9e4ca9aecece45dd80bfaf61eeeb882"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk5NDMzOQ==", "bodyText": "+1", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r408994339", "createdAt": "2020-04-15T16:59:18Z", "author": {"login": "tiagodolphine"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingService.java", "diffHunk": "@@ -1,14 +1,38 @@\n package org.acme.travels.service;\n \n import javax.enterprise.context.ApplicationScoped;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n \n import org.acme.travels.Flight;\n import org.acme.travels.Trip;\n \n @ApplicationScoped\n+@Path(\"/flightservice\")\n public class FlightBookingService {\n \n-\tpublic Flight bookFlight(Trip trip) {\n-\t\treturn new Flight(\"MX555\", trip.getBegin(), trip.getEnd());\n-\t}\n+    private Boolean timeout = Boolean.FALSE;\n+\n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Boolean getTimeout() {\n+        return timeout;\n+    }\n+\n+    @POST\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public boolean setTimeout() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODk4OTE0Ng=="}, "originalCommit": {"oid": "a7b5c5a0c9e4ca9aecece45dd80bfaf61eeeb882"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mjk2MDA1OnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingResource.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1ODozNVrOGGmqQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxMzo1ODozNVrOGGmqQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3ODA1MQ==", "bodyText": "I would be this as a PUT method as it is more an update of an existing thing.", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r409578051", "createdAt": "2020-04-16T13:58:35Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingResource.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.acme.travels.service;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/flightservice\")\n+public class FlightBookingResource {\n+\n+    @Inject\n+    FlightBookingService service;\n+    \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)\n+    public Boolean getShouldTimeout() {\n+        return service.getShouldTimeout();\n+    }\n+\n+    @POST", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c57863364b38a5f33df61b929159a1dd41c6bcc"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU0Mjk2ODk3OnYy", "diffSide": "RIGHT", "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowMDoxNFrOGGmvrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNDowNzoxNlrOGGnE4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3OTQzOQ==", "bodyText": "Sorry for being a PITA but still not a big fan to get/update a boolean value on /flightservice path.\nCould we have something like /flightservice/timeout or /flightservice/shouldtimeout ?\nor if want to keep /flightservice, then we should get/update a configuration structure. but it is more complex.", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r409579439", "createdAt": "2020-04-16T14:00:14Z", "author": {"login": "radtriste"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingResource.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.acme.travels.service;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/flightservice\")\n+public class FlightBookingResource {\n+\n+    @Inject\n+    FlightBookingService service;\n+    \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c57863364b38a5f33df61b929159a1dd41c6bcc"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU4NDg2Nw==", "bodyText": "I agree, adding to /flightservice/shouldtimeout is even more flexible in case we need to add more actions to the flightservice other than the timeout.", "url": "https://github.com/kiegroup/kogito-examples/pull/227#discussion_r409584867", "createdAt": "2020-04-16T14:07:16Z", "author": {"login": "tiagodolphine"}, "path": "kogito-travel-agency/travels/src/main/java/org/acme/travels/service/FlightBookingResource.java", "diffHunk": "@@ -0,0 +1,29 @@\n+package org.acme.travels.service;\n+\n+import javax.inject.Inject;\n+import javax.ws.rs.GET;\n+import javax.ws.rs.POST;\n+import javax.ws.rs.Path;\n+import javax.ws.rs.Produces;\n+import javax.ws.rs.core.MediaType;\n+\n+@Path(\"/flightservice\")\n+public class FlightBookingResource {\n+\n+    @Inject\n+    FlightBookingService service;\n+    \n+    @GET\n+    @Produces(MediaType.APPLICATION_JSON)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTU3OTQzOQ=="}, "originalCommit": {"oid": "1c57863364b38a5f33df61b929159a1dd41c6bcc"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 491, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}