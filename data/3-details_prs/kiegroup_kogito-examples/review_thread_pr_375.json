{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk1NTIwNDI5", "number": 375, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0Nzo1M1rOEpCf0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoyNDo0MlrOEpaWMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDY3OTg1OnYy", "diffSide": "RIGHT", "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0Nzo1M1rOHaebWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo0Nzo1M1rOHaebWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUyMzU0NA==", "bodyText": "Added @r00ta since the changes in this test besides of the other pom changes.", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497523544", "createdAt": "2020-09-30T13:47:53Z", "author": {"login": "tarilabs"}, "path": "dmn-tracing-quarkus/src/test/java/org/kie/dmn/kogito/quarkus/tracing/LoanEligibilityTest.java", "diffHunk": "@@ -15,55 +15,57 @@\n  */\n package org.kie.dmn.kogito.quarkus.tracing;\n \n+import static io.restassured.RestAssured.given;\n+import static org.hamcrest.Matchers.is;\n+import static org.junit.jupiter.api.Assertions.assertEquals;\n+import static org.junit.jupiter.api.Assertions.assertNotNull;\n+\n import java.util.concurrent.CountDownLatch;\n import java.util.concurrent.TimeUnit;\n \n-import javax.inject.Inject;\n-\n-import com.fasterxml.jackson.core.JsonProcessingException;\n-import com.fasterxml.jackson.databind.ObjectMapper;\n-import io.quarkus.test.common.QuarkusTestResource;\n-import io.quarkus.test.junit.QuarkusTest;\n-import io.restassured.http.ContentType;\n import org.eclipse.microprofile.config.inject.ConfigProperty;\n+import org.junit.jupiter.api.BeforeEach;\n import org.junit.jupiter.api.Test;\n import org.kie.kogito.kafka.KafkaClient;\n import org.kie.kogito.testcontainers.quarkus.KafkaQuarkusTestResource;\n import org.kie.kogito.tracing.decision.event.trace.TraceEvent;\n import org.slf4j.Logger;\n import org.slf4j.LoggerFactory;\n \n-import static io.restassured.RestAssured.given;\n-import static org.hamcrest.Matchers.is;\n-import static org.junit.jupiter.api.Assertions.assertEquals;\n-import static org.junit.jupiter.api.Assertions.assertNotNull;\n+import com.fasterxml.jackson.core.JsonProcessingException;\n+import com.fasterxml.jackson.databind.ObjectMapper;\n+\n+import io.quarkus.test.common.QuarkusTestResource;\n+import io.quarkus.test.junit.QuarkusTest;\n+import io.restassured.http.ContentType;\n \n @QuarkusTest\n @QuarkusTestResource(KafkaQuarkusTestResource.class)\n public class LoanEligibilityTest {\n \n-    private static Logger LOGGER = LoggerFactory.getLogger(LoanEligibilityTest.class);\n-\n     public static final String TOPIC_CONSUMER = \"kogito-tracing-decision\";\n \n-    @Inject\n-    private ObjectMapper objectMapper;\n+    private static final Logger LOGGER = LoggerFactory.getLogger(LoanEligibilityTest.class);\n+    private static final ObjectMapper MAPPER = new ObjectMapper();\n \n-    public KafkaClient kafkaClient;\n+    private KafkaClient kafkaClient;\n \n     @ConfigProperty(name = KafkaQuarkusTestResource.KOGITO_KAFKA_PROPERTY)\n     private String kafkaBootstrapServers;\n \n-    @Test\n-    public void testEvaluateTrafficViolation() throws InterruptedException {\n+    @BeforeEach\n+    public void setup() {\n         kafkaClient = new KafkaClient(kafkaBootstrapServers);\n+    }\n \n+    @Test\n+    public void testEvaluateTrafficViolation() throws InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExNDcyMjA0OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": false, "comments": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQxMzo1NjoyNVrOHae1qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoxNDo0OFrOHbDvhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    <failsafe.include>**/Native*IT.java</failsafe.include>\n          \n          \n            \n                    <failsafe.exclude></failsafe.exclude>\n          \n          \n            \n                    <failsafe.include>**/*IT.java,**/IT*.java,**/*ITCase.java</failsafe.include>\n          \n          \n            \n                    <failsafe.exclude></failsafe.exclude>\n          \n      \n    \n    \n  \n\nwouldn't it be simpler to restore it as default, since native test are anyway annotated?", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497530282", "createdAt": "2020-09-30T13:56:25Z", "author": {"login": "tarilabs"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU1OTc5NA==", "bodyText": "Do you mean to not set the \"failsafe.include\" property (as the default one \"**/*IT.java\" already satisfy the native tests? If so, I'm fine with that, I will do it. But using the regular expressions that you suggest seems way more complex.", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497559794", "createdAt": "2020-09-30T14:34:01Z", "author": {"login": "Sgitario"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MjU1MA==", "bodyText": "I meant to restore the Failsafe's default: https://maven.apache.org/surefire/maven-failsafe-plugin/examples/inclusion-exclusion.html#Inclusions", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497562550", "createdAt": "2020-09-30T14:37:33Z", "author": {"login": "tarilabs"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2MzcwMQ==", "bodyText": "This won't work as Quarkus needs a special annotation @NativeImageTest which only has it the Native*IT.java classes to work. If a IT test is executed in native mode, it won't work.", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497563701", "createdAt": "2020-09-30T14:39:01Z", "author": {"login": "Sgitario"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzU2OTcyOQ==", "bodyText": "This won't work as Quarkus needs a special annotation @NativeImageTest which only has it the Native*IT.java classes to work\n\ninteresting, I didn't know that. Can you point me to the reference where the annotation enforces the name to be Native*IT.java, please?", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497569729", "createdAt": "2020-09-30T14:46:28Z", "author": {"login": "tarilabs"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzYyMjk0OQ==", "bodyText": "I had a look to quarkus doc because I remember something similar but the required setup for native testing seems to be a bit different\nhttps://quarkus.io/guides/getting-started-testing#native-executable-testing\nhttps://quarkus.io/guides/building-native-image#testing-the-native-executable\nI don't see any specific filter on resources\n@Sgitario can you please verify?", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497622949", "createdAt": "2020-09-30T15:57:16Z", "author": {"login": "danielezonca"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzcwMzE5OQ==", "bodyText": "Let me be clearer on this:\n\n\nThe @NativeImageTest annotation from Quarkus does not require that the class name follows \"NativeIT, we do. I meant that all the NativeIT.java classes we have in Kogito Examples, use this annotation (and that's why we are safe to use this regular expression in the pom.xml).\n\n\nWe need to set the property \"failsafe.include\" to \"**/Native*IT.java\" to not execute the *IT classes. Otherwise, when there are both IT.java and NativeIT.java classes, the build fails at integration-test stage (the *IT test fails). You can try yourself.\n\n\nHowever, let me know if you think something here can be improved or done differently.", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r497703199", "createdAt": "2020-09-30T18:05:02Z", "author": {"login": "Sgitario"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODEzNDkxOQ==", "bodyText": "Ok thanks for your explanation. I see your point, we have some ITs that requires native mode and others not so we decided to apply this naming convention to solve this.\nI think we should better document it but it is out of scope for this PR :)", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r498134919", "createdAt": "2020-10-01T10:14:48Z", "author": {"login": "danielezonca"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzUzMDI4Mg=="}, "originalCommit": {"oid": "502e9264d20d4bd6c2555cf16a564976f9c6e42f"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExODU4NzM5OnYy", "diffSide": "RIGHT", "path": "pom.xml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDoyNDo0MlrOHbEFMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wMVQxMDo0MjowNFrOHbEoqg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0MDQ2NQ==", "bodyText": "One question, why just don't apply this configuration to all the modules instead of enumerate the modules where we can have native tests?", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r498140465", "createdAt": "2020-10-01T10:24:42Z", "author": {"login": "danielezonca"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>\n+        <quarkus.package.type>native</quarkus.package.type>\n+      </properties>\n+      <activation>\n+        <property>\n+          <name>native</name>\n+        </property>\n+      </activation>\n+      <modules>\n+        <module>decisiontable-quarkus-example</module>\n+        <module>dmn-listener-quarkus</module>\n+        <module>dmn-pmml-quarkus-example</module>\n+        <module>dmn-quarkus-example</module>\n+        <module>dmn-drools-quarkus-metrics</module>\n+        <module>dmn-tracing-quarkus</module>\n+        <module>flexible-process-quarkus</module>\n+        <module>kogito-travel-agency</module>\n+        <module>onboarding-example</module>\n+        <module>pmml-quarkus-example</module>\n+        <module>process-business-rules-quarkus</module>\n+        <module>process-infinispan-persistence-quarkus</module>\n+        <module>process-kafka-quickstart-quarkus</module>\n+        <module>process-knative-quickstart-quarkus</module>\n+        <module>process-mongodb-persistence-quarkus</module>\n+        <module>process-optaplanner-quarkus</module>\n+        <module>process-quarkus-example</module>\n+        <module>process-scripts-quarkus</module>\n+        <module>process-service-calls-quarkus</module>\n+        <module>process-service-rest-call-quarkus</module>\n+        <module>process-timer-quarkus</module>\n+        <module>process-usertasks-custom-lifecycle-quarkus</module>\n+        <module>process-usertasks-quarkus</module>\n+        <module>process-usertasks-with-security-oidc-quarkus</module>\n+        <module>process-usertasks-with-security-quarkus</module>\n+        <module>rules-quarkus-helloworld</module>\n+        <module>ruleunit-quarkus-example</module>\n+        <module>serverless-workflow-greeting-quarkus</module>\n+        <module>serverless-workflow-service-calls-quarkus</module>\n+        <module>serverless-workflow-events-quarkus</module>\n+      </modules>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4320724402a63234ac6eee2ceb2e60ff213f0e89"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0OTU0Ng==", "bodyText": "This is to group only the quarkus modules and hence exclude the spring boot examples.", "url": "https://github.com/kiegroup/kogito-examples/pull/375#discussion_r498149546", "createdAt": "2020-10-01T10:42:04Z", "author": {"login": "Sgitario"}, "path": "pom.xml", "diffHunk": "@@ -232,6 +233,74 @@\n         <module>process-springboot-example</module>\n       </modules>\n     </profile>\n+\n+    <profile>\n+      <id>native</id>\n+      <properties>\n+        <failsafe.include>**/Native*IT.java</failsafe.include>\n+        <failsafe.exclude></failsafe.exclude>\n+        <quarkus.package.type>native</quarkus.package.type>\n+      </properties>\n+      <activation>\n+        <property>\n+          <name>native</name>\n+        </property>\n+      </activation>\n+      <modules>\n+        <module>decisiontable-quarkus-example</module>\n+        <module>dmn-listener-quarkus</module>\n+        <module>dmn-pmml-quarkus-example</module>\n+        <module>dmn-quarkus-example</module>\n+        <module>dmn-drools-quarkus-metrics</module>\n+        <module>dmn-tracing-quarkus</module>\n+        <module>flexible-process-quarkus</module>\n+        <module>kogito-travel-agency</module>\n+        <module>onboarding-example</module>\n+        <module>pmml-quarkus-example</module>\n+        <module>process-business-rules-quarkus</module>\n+        <module>process-infinispan-persistence-quarkus</module>\n+        <module>process-kafka-quickstart-quarkus</module>\n+        <module>process-knative-quickstart-quarkus</module>\n+        <module>process-mongodb-persistence-quarkus</module>\n+        <module>process-optaplanner-quarkus</module>\n+        <module>process-quarkus-example</module>\n+        <module>process-scripts-quarkus</module>\n+        <module>process-service-calls-quarkus</module>\n+        <module>process-service-rest-call-quarkus</module>\n+        <module>process-timer-quarkus</module>\n+        <module>process-usertasks-custom-lifecycle-quarkus</module>\n+        <module>process-usertasks-quarkus</module>\n+        <module>process-usertasks-with-security-oidc-quarkus</module>\n+        <module>process-usertasks-with-security-quarkus</module>\n+        <module>rules-quarkus-helloworld</module>\n+        <module>ruleunit-quarkus-example</module>\n+        <module>serverless-workflow-greeting-quarkus</module>\n+        <module>serverless-workflow-service-calls-quarkus</module>\n+        <module>serverless-workflow-events-quarkus</module>\n+      </modules>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5ODE0MDQ2NQ=="}, "originalCommit": {"oid": "4320724402a63234ac6eee2ceb2e60ff213f0e89"}, "originalPosition": 56}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 432, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}