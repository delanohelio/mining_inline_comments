{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg5NTEyNTA2", "number": 369, "title": "[KOGITO-3158] Adding serverless rest example", "bodyText": "Example that test the changes performed by #778.\nIt is focus on sharing data between rest invocations\nThe example expects as input an array of numbers\nThere are two rest invocations, first one retrieve a random number, second one pass that number and the input array, multiply each element of the array by the random number and returns the sum\nFinally, sum is printed", "createdAt": "2020-09-18T19:57:45Z", "url": "https://github.com/kiegroup/kogito-examples/pull/369", "merged": true, "mergeCommit": {"oid": "14f29bf39a5ae26a7dece8e0a13df04aaa8a7d0a"}, "closed": true, "closedAt": "2020-09-28T12:00:21Z", "author": {"login": "fjtirado"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdLD69ZgBqjM3ODg4NTEyNjk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNQ0M6gFqTQ5NzM3MjYwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ea966ac4585ea25ad0fc9b97486aed88883860bb", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/ea966ac4585ea25ad0fc9b97486aed88883860bb", "committedDate": "2020-09-18T19:53:35Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "45c857f790effadf3893f3fd39f0e90a4bd077e9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/45c857f790effadf3893f3fd39f0e90a4bd077e9", "committedDate": "2020-09-21T14:04:22Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "45c857f790effadf3893f3fd39f0e90a4bd077e9", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/45c857f790effadf3893f3fd39f0e90a4bd077e9", "committedDate": "2020-09-21T14:04:22Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "3690e76c2f367f8e44b58c9f067552ad185f9c0b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/3690e76c2f367f8e44b58c9f067552ad185f9c0b", "committedDate": "2020-09-21T20:09:49Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3690e76c2f367f8e44b58c9f067552ad185f9c0b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/3690e76c2f367f8e44b58c9f067552ad185f9c0b", "committedDate": "2020-09-21T20:09:49Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "e8da51a6a1a7ee10361e85513a6feccc83db2b2b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/e8da51a6a1a7ee10361e85513a6feccc83db2b2b", "committedDate": "2020-09-21T20:11:15Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkyOTc4MTk1", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-492978195", "createdAt": "2020-09-21T21:02:54Z", "commit": {"oid": "e8da51a6a1a7ee10361e85513a6feccc83db2b2b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMTowMjo1NVrOHViUcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMTowMjo1NVrOHViUcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0NDQzNA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            This example contains a workflow that performs two consecutive REST invocations defines as functions.  \n          \n          \n            \n            This example contains a workflow that performs two consecutive REST invocations defined as functions.", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r492344434", "createdAt": "2020-09-21T21:02:55Z", "author": {"login": "ricardozanini"}, "path": "serverless-workflow-functions-quarkus/README.md", "diffHunk": "@@ -0,0 +1,122 @@\n+# Kogito Serverless Workflow - Rest Example\n+\n+## Description\n+\n+This example contains a workflow that performs two consecutive REST invocations defines as functions.  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8da51a6a1a7ee10361e85513a6feccc83db2b2b"}, "originalPosition": 5}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e801654ce5f032620cac8e3c4e9b29fd7fe6e0a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/7e801654ce5f032620cac8e3c4e9b29fd7fe6e0a", "committedDate": "2020-09-22T07:45:51Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "cc425354dc10be287a7756975f4dec9ad2eaac1a", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/cc425354dc10be287a7756975f4dec9ad2eaac1a", "committedDate": "2020-09-22T10:10:53Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzNDA2NDQ3", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-493406447", "createdAt": "2020-09-22T12:29:45Z", "commit": {"oid": "cc425354dc10be287a7756975f4dec9ad2eaac1a"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjoyOTo0NVrOHV3oCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjozMDoxOFrOHV3pSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5MzUxMw==", "bodyText": "still reads \"defines\"", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r492693513", "createdAt": "2020-09-22T12:29:45Z", "author": {"login": "evacchi"}, "path": "serverless-workflow-functions-quarkus/README.md", "diffHunk": "@@ -0,0 +1,122 @@\n+# Kogito Serverless Workflow - Rest Example\n+\n+## Description\n+\n+This example contains a workflow that performs two consecutive REST invocations defines as functions.  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM0NDQzNA=="}, "originalCommit": {"oid": "e8da51a6a1a7ee10361e85513a6feccc83db2b2b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY5MzgzMw==", "bodyText": "a JSON input", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r492693833", "createdAt": "2020-09-22T12:30:18Z", "author": {"login": "evacchi"}, "path": "serverless-workflow-functions-quarkus/README.md", "diffHunk": "@@ -0,0 +1,122 @@\n+# Kogito Serverless Workflow - Rest Example\n+\n+## Description\n+\n+This example contains a workflow that performs two consecutive REST invocations defines as functions.  \n+The workflow is described using JSON format as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects as JSON input containing a collections of numbers.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc425354dc10be287a7756975f4dec9ad2eaac1a"}, "originalPosition": 9}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "24787b9875fd08956610704bb75d7271406246fc", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/24787b9875fd08956610704bb75d7271406246fc", "committedDate": "2020-09-22T13:32:03Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "161b58813d94657711d4dec7bcb068b94033336b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/161b58813d94657711d4dec7bcb068b94033336b", "committedDate": "2020-09-22T16:18:33Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkzOTcxNzA5", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-493971709", "createdAt": "2020-09-23T01:39:49Z", "commit": {"oid": "161b58813d94657711d4dec7bcb068b94033336b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMTozOTo1MFrOHWSYOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QwMTozOTo1MFrOHWSYOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzEzMTgzMw==", "bodyText": "@fjtirado maybe would be good to review the deps that are actually needed for the demo, I'm guessing not all are used.", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r493131833", "createdAt": "2020-09-23T01:39:50Z", "author": {"login": "cristianonicolai"}, "path": "serverless-workflow-functions-quarkus/pom.xml", "diffHunk": "@@ -0,0 +1,117 @@\n+<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n+<project\n+  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"\n+  xmlns=\"http://maven.apache.org/POM/4.0.0\"\n+  xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n+  <modelVersion>4.0.0</modelVersion>\n+\n+  <parent>\n+    <groupId>org.kie.kogito</groupId>\n+    <artifactId>kogito-examples</artifactId>\n+    <version>1.0.0-SNAPSHOT</version>\n+  </parent>\n+\n+  <artifactId>serverless-workflow-functions-quarkus</artifactId>\n+\n+  <name>Kogito Example :: Serverless Workflow Functions :: Quarkus</name>\n+  <description>Kogito Serverless Workflow Example - Quarkus</description>\n+\n+  <dependencyManagement>\n+    <dependencies>\n+      <dependency>\n+        <groupId>org.kie.kogito</groupId>\n+        <artifactId>kogito-quarkus-bom</artifactId>\n+        <version>${project.version}</version>\n+        <type>pom</type>\n+        <scope>import</scope>\n+      </dependency>\n+    </dependencies>\n+  </dependencyManagement>\n+\n+  <dependencies>\n+    <dependency>\n+      <groupId>org.kie.kogito</groupId>\n+      <artifactId>kogito-quarkus</artifactId>\n+    </dependency>\n+\n+    <dependency>\n+      <groupId>io.quarkus</groupId>\n+      <artifactId>quarkus-resteasy</artifactId>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "161b58813d94657711d4dec7bcb068b94033336b"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "161b58813d94657711d4dec7bcb068b94033336b", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/161b58813d94657711d4dec7bcb068b94033336b", "committedDate": "2020-09-22T16:18:33Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "293a9483245f148024f93b8cd9b06eba645b4177", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/293a9483245f148024f93b8cd9b06eba645b4177", "committedDate": "2020-09-23T10:59:20Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "293a9483245f148024f93b8cd9b06eba645b4177", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/293a9483245f148024f93b8cd9b06eba645b4177", "committedDate": "2020-09-23T10:59:20Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "aab4f3f0f782aec9810e6a42e1921961103dc295", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/aab4f3f0f782aec9810e6a42e1921961103dc295", "committedDate": "2020-09-23T15:18:10Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aab4f3f0f782aec9810e6a42e1921961103dc295", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/aab4f3f0f782aec9810e6a42e1921961103dc295", "committedDate": "2020-09-23T15:18:10Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "5c961d8cba11f643f4418a24a1be237ac7981f75", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/5c961d8cba11f643f4418a24a1be237ac7981f75", "committedDate": "2020-09-24T09:08:35Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c961d8cba11f643f4418a24a1be237ac7981f75", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/5c961d8cba11f643f4418a24a1be237ac7981f75", "committedDate": "2020-09-24T09:08:35Z", "message": "Update serverless-workflow-functions-quarkus/README.md\n\nCo-authored-by: Ricardo Zanini <1538000+ricardozanini@users.noreply.github.com>"}, "afterCommit": {"oid": "2703e5c16fd8e332c13877704e2f39fb26ccd10c", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/2703e5c16fd8e332c13877704e2f39fb26ccd10c", "committedDate": "2020-09-24T09:09:36Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2703e5c16fd8e332c13877704e2f39fb26ccd10c", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/2703e5c16fd8e332c13877704e2f39fb26ccd10c", "committedDate": "2020-09-24T09:09:36Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "4cfd09128192a3e6581f972f9eb453d0f3a8e4e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/4cfd09128192a3e6581f972f9eb453d0f3a8e4e6", "committedDate": "2020-09-24T14:55:45Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4cfd09128192a3e6581f972f9eb453d0f3a8e4e6", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/4cfd09128192a3e6581f972f9eb453d0f3a8e4e6", "committedDate": "2020-09-24T14:55:45Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/50de42efbea13d9299337e2ceb625aa07a26aadb", "committedDate": "2020-09-25T18:28:29Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MTk2MDM0", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-497196034", "createdAt": "2020-09-28T05:32:11Z", "commit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNTozMjoxMVrOHYu9ZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNTo0MTozNVrOHYvGjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5NzI1Mg==", "bodyText": "From quarkus 1.7, the graalvm version is 20.2.0+.", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r495697252", "createdAt": "2020-09-28T05:32:11Z", "author": {"login": "Sgitario"}, "path": "serverless-workflow-functions-quarkus/README.md", "diffHunk": "@@ -0,0 +1,120 @@\n+# Kogito Serverless Workflow - Rest Example\n+\n+## Description\n+\n+This example contains a workflow that performs two consecutive REST invocations defined as functions.  \n+The workflow is described using JSON format as defined in the \n+[CNCF Serverless Workflow specification](https://github.com/cncf/wg-serverless/tree/master/workflow/spec).\n+\n+The workflow expects a JSON input containing a collections of numbers.\n+\n+The workflow starts invoking a GET to obtain a random integer. \n+This integer is passed together with the list of numbers to  a second REST invocation, a POST, which multiply each element of the array by the generated number\n+and returns the sum. \n+Finally, the resulting integer is printed using sysout script. \n+\n+## Installing and Running\n+\n+### Prerequisites\n+ \n+You will need:\n+  - Java 11+ installed\n+  - Environment variable JAVA_HOME set accordingly\n+  - Maven 3.6.2+ installed\n+\n+When using native image compilation, you will also need: \n+  - [GraalVm](https://www.graalvm.org/downloads/) 19.3.1+ installed", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5ODYzNQ==", "bodyText": "Do we need this comment here or it's just a leftover?", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r495698635", "createdAt": "2020-09-28T05:37:55Z", "author": {"login": "Sgitario"}, "path": "serverless-workflow-functions-quarkus/src/test/java/org/acme/numbers/NumbersMockService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.numbers;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo; \n+\n+public class NumbersMockService implements QuarkusTestResourceLifecycleManager{\n+\n+    private WireMockServer wireMockServer;\n+    \n+    @Override\n+    public Map<String, String> start() {\n+        wireMockServer = new WireMockServer(8080);\n+        wireMockServer.start(); \n+        \n+        wireMockServer.baseUrl();\n+        stubFor(get(urlEqualTo(\"/numbers/random\"))   \n+               .willReturn(aResponse()\n+                       .withHeader(\"Content-Type\", \"application/json\")\n+                       .withBody(\"{\\\"randomNumber\\\": 1}\")));\n+        \n+        stubFor(post(urlEqualTo(\"/numbers/1/multiplyByAndSum\"))\n+                .willReturn(aResponse()\n+                        .withHeader(\"Content-Type\", \"application/json\")\n+                        .withBody(\"{\\\"sum\\\": 34}\")));\n+        \n+        \n+       // stubFor(get(urlMatching(\".*\")).atPriority(10).willReturn(aResponse().proxiedFrom(\"http://localhost:8080\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb"}, "originalPosition": 51}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5OTU0MA==", "bodyText": "We should use the dynamic port resolution here to avoid conflicts with running local services:\nimport static com.github.tomakehurst.wiremock.core.WireMockConfiguration.options;\n\n// ...\nwireMockServer = new WireMockServer(options().dynamicPort());\n\nThen, we can get the port and provide the right value in the Map<String, String>:\nreturn Collections.singletonMap(\"my-service\", \"localhost: \" + wireMockServer.port()); // something like this\n\nThis way, the quarkus service can load the \"my-service\" property with the right port to connect with.", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r495699540", "createdAt": "2020-09-28T05:41:20Z", "author": {"login": "Sgitario"}, "path": "serverless-workflow-functions-quarkus/src/test/java/org/acme/numbers/NumbersMockService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.numbers;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo; \n+\n+public class NumbersMockService implements QuarkusTestResourceLifecycleManager{\n+\n+    private WireMockServer wireMockServer;\n+    \n+    @Override\n+    public Map<String, String> start() {\n+        wireMockServer = new WireMockServer(8080);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTY5OTU5OA==", "bodyText": "I think this call is not doing anything.", "url": "https://github.com/kiegroup/kogito-examples/pull/369#discussion_r495699598", "createdAt": "2020-09-28T05:41:35Z", "author": {"login": "Sgitario"}, "path": "serverless-workflow-functions-quarkus/src/test/java/org/acme/numbers/NumbersMockService.java", "diffHunk": "@@ -0,0 +1,63 @@\n+/**\n+ *  Copyright 2020 Red Hat, Inc. and/or its affiliates.\n+ *\n+ *  Licensed under the Apache License, Version 2.0 (the \"License\");\n+ *  you may not use this file except in compliance with the License.\n+ *  You may obtain a copy of the License at\n+ *\n+ *        http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *  Unless required by applicable law or agreed to in writing, software\n+ *  distributed under the License is distributed on an \"AS IS\" BASIS,\n+ *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+ *  See the License for the specific language governing permissions and\n+ *  limitations under the License.\n+ */\n+package org.acme.numbers;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import com.github.tomakehurst.wiremock.WireMockServer;\n+import io.quarkus.test.common.QuarkusTestResourceLifecycleManager;\n+\n+import static com.github.tomakehurst.wiremock.client.WireMock.aResponse;\n+import static com.github.tomakehurst.wiremock.client.WireMock.get;\n+import static com.github.tomakehurst.wiremock.client.WireMock.post;\n+import static com.github.tomakehurst.wiremock.client.WireMock.stubFor;\n+import static com.github.tomakehurst.wiremock.client.WireMock.urlEqualTo; \n+\n+public class NumbersMockService implements QuarkusTestResourceLifecycleManager{\n+\n+    private WireMockServer wireMockServer;\n+    \n+    @Override\n+    public Map<String, String> start() {\n+        wireMockServer = new WireMockServer(8080);\n+        wireMockServer.start(); \n+        \n+        wireMockServer.baseUrl();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb"}, "originalPosition": 39}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "50de42efbea13d9299337e2ceb625aa07a26aadb", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/50de42efbea13d9299337e2ceb625aa07a26aadb", "committedDate": "2020-09-25T18:28:29Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "9e9a5b791c1a0c109c60e17f81f11d5411f83f32", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/9e9a5b791c1a0c109c60e17f81f11d5411f83f32", "committedDate": "2020-09-28T07:28:59Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjY3OTIx", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-497267921", "createdAt": "2020-09-28T07:54:49Z", "commit": {"oid": "9e9a5b791c1a0c109c60e17f81f11d5411f83f32"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65f2fc066b045a4ff28812c524cf3c144b1ee66f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/65f2fc066b045a4ff28812c524cf3c144b1ee66f", "committedDate": "2020-09-28T08:40:40Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9e9a5b791c1a0c109c60e17f81f11d5411f83f32", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/9e9a5b791c1a0c109c60e17f81f11d5411f83f32", "committedDate": "2020-09-28T07:28:59Z", "message": "[KOGITO-3158] Adding serverless REST example"}, "afterCommit": {"oid": "65f2fc066b045a4ff28812c524cf3c144b1ee66f", "author": {"user": {"login": "fjtirado", "name": "Francisco Javier Tirado Sarti"}}, "url": "https://github.com/kiegroup/kogito-examples/commit/65f2fc066b045a4ff28812c524cf3c144b1ee66f", "committedDate": "2020-09-28T08:40:40Z", "message": "[KOGITO-3158] Adding serverless REST example"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MzcyNjAw", "url": "https://github.com/kiegroup/kogito-examples/pull/369#pullrequestreview-497372600", "createdAt": "2020-09-28T10:13:45Z", "commit": {"oid": "65f2fc066b045a4ff28812c524cf3c144b1ee66f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4361, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}