{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MzQ4NTk2", "number": 169, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzowMTozMlrOEHqD7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowMzozMlrOEHuqWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NDY0NjIwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzowMTozMlrOGnJcpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNzo1Njo0MVrOGnLP1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwMjQzNg==", "bodyText": "issue. LTR seems to refer to AD.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443702436", "createdAt": "2020-06-22T17:01:32Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -45,12 +45,19 @@\n      */\n     public static final String AD_PLUGIN_ENABLED = \"opendistro.anomaly_detection.enabled\";\n \n+    public static final String AD_BREAKER_ENABLED = \"opendistro.anomaly_detection.breaker.enabled\";\n+\n     private final Map<String, Setting<?>> settings = unmodifiableMap(new HashMap<String, Setting<?>>() {\n         {\n             /**\n              * AD plugin enable/disable setting\n              */\n             put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));\n+\n+            /**\n+             * LTR breaker enable/disable setting", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3cc7b07db6f82b3d9f91045971f60ba43b90f6e2"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzczMTkyNQ==", "bodyText": "fixed", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443731925", "createdAt": "2020-06-22T17:56:41Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -45,12 +45,19 @@\n      */\n     public static final String AD_PLUGIN_ENABLED = \"opendistro.anomaly_detection.enabled\";\n \n+    public static final String AD_BREAKER_ENABLED = \"opendistro.anomaly_detection.breaker.enabled\";\n+\n     private final Map<String, Setting<?>> settings = unmodifiableMap(new HashMap<String, Setting<?>>() {\n         {\n             /**\n              * AD plugin enable/disable setting\n              */\n             put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));\n+\n+            /**\n+             * LTR breaker enable/disable setting", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzcwMjQzNg=="}, "originalCommit": {"oid": "3cc7b07db6f82b3d9f91045971f60ba43b90f6e2"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTM4NjcyOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/AnomalyDetectorSettings.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMDo1OToxMVrOGnQyuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjozNTo0NVrOGnxd9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw==", "bodyText": "this is ok for now. but i think the number of allowed retries should be settable per exception object, i.e. the endrun exception contains a field for the number of retries, which can be specific to detector (interval), exception type (limit exceeded, other endrun), or root cause. Stop now being true would just be a special case that number of retries being 0.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443822777", "createdAt": "2020-06-22T20:59:11Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/AnomalyDetectorSettings.java", "diffHunk": "@@ -133,7 +133,7 @@ private AnomalyDetectorSettings() {}\n     public static final Setting<Integer> MAX_RETRY_FOR_END_RUN_EXCEPTION = Setting\n         .intSetting(\n             \"opendistro.anomaly_detection.max_retry_for_end_run_exception\",\n-            3,\n+            6,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1ODEzNQ==", "bodyText": "added to the tracking issue.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444358135", "createdAt": "2020-06-23T16:35:45Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/AnomalyDetectorSettings.java", "diffHunk": "@@ -133,7 +133,7 @@ private AnomalyDetectorSettings() {}\n     public static final Setting<Integer> MAX_RETRY_FOR_END_RUN_EXCEPTION = Setting\n         .intSetting(\n             \"opendistro.anomaly_detection.max_retry_for_end_run_exception\",\n-            3,\n+            6,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMjc3Nw=="}, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTM5MTg4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowMDo1NFrOGnQ2DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjozNTowNFrOGnxcYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMzYyOQ==", "bodyText": "minor. and flag for stopping.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443823629", "createdAt": "2020-06-22T21:00:54Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java", "diffHunk": "@@ -29,4 +29,15 @@\n     public LimitExceededException(String anomalyDetectorId, String message) {\n         super(anomalyDetectorId, message, true);\n     }\n+\n+    /**\n+     * Constructor with an anomaly detector ID and an explanation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM1NzczMA==", "bodyText": "added", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444357730", "createdAt": "2020-06-23T16:35:04Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/common/exception/LimitExceededException.java", "diffHunk": "@@ -29,4 +29,15 @@\n     public LimitExceededException(String anomalyDetectorId, String message) {\n         super(anomalyDetectorId, message, true);\n     }\n+\n+    /**\n+     * Constructor with an anomaly detector ID and an explanation.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyMzYyOQ=="}, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2NTM5OTk1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQyMTowMzozMlrOGnQ7Bg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yM1QxNjo0NDo0OVrOGnx0Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDkwMg==", "bodyText": "Minor. Java doc for public interface is missing.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r443824902", "createdAt": "2020-06-22T21:03:32Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -100,6 +107,10 @@ public static boolean isADPluginEnabled() {\n         return EnabledSetting.getInstance().getSettingValue(EnabledSetting.AD_PLUGIN_ENABLED);\n     }\n \n+    public static boolean isADBreakerEnabled() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NDM2Mzc5OA==", "bodyText": "added doc", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/169#discussion_r444363798", "createdAt": "2020-06-23T16:44:49Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -100,6 +107,10 @@ public static boolean isADPluginEnabled() {\n         return EnabledSetting.getInstance().getSettingValue(EnabledSetting.AD_PLUGIN_ENABLED);\n     }\n \n+    public static boolean isADBreakerEnabled() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzgyNDkwMg=="}, "originalCommit": {"oid": "babb7de74d1e0f7f991a006593ebc70df356ddb2"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2877, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}