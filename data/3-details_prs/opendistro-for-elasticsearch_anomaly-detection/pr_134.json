{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxNzI1MDYy", "number": 134, "title": "Prevent creating detector with duplicate name. Issue:#118", "bodyText": "Issue #, if available:\n#118\nDescription of changes:\nAdd logic to prevent user from creating detector with duplicate name\nTesting:\n./gradlew build\n./gradlew integTest\n\nManual testing:\n// create detector cli-d-1-min-001\n~/Downloads [ curl -X POST \"localhost:9200/_opendistro/_anomaly_detection/detectors\" -H 'Content-Type: application/json' -d'                                               ] 5:09 PM\n{\n    \"name\":\"cli-d-1-min-001\",\n    \"description\":\"Test nab daily jumpsup\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"_id\":\"LNm2OXIB8qLpH1US_aNC\",\"_version\":1,\"_seq_no\":0,\"_primary_term\":1,\"anomaly_detector\":{\"name\":\"cli-d-1-min-001\",\"description\":\"Test nab daily jumpsup\",\"time_field\":\"timestamp\",\"indices\":[\"test-index\"],\"filter_query\":{\"match_all\":{\"boost\":1.0}},\"detection_interval\":{\"period\":{\"interval\":1,\"unit\":\"Minutes\"}},\"window_delay\":{\"period\":{\"interval\":0,\"unit\":\"Seconds\"}},\"schema_version\":0,\"feature_attributes\":[{\"feature_id\":\"Jtm2OXIB8qLpH1US_KNj\",\"feature_name\":\"feature-1\",\"feature_enabled\":true,\"aggregation_query\":{\"value_sum\":{\"sum\":{\"field\":\"feature-1\"}}}}]}}\n\n// create detector cli-d-1-min-002\n~/Downloads [ curl -X POST \"localhost:9200/_opendistro/_anomaly_detection/detectors\" -H 'Content-Type: application/json' -d'                                               ] 5:09 PM\n{\n    \"name\":\"cli-d-1-min-002\",\n    \"description\":\"Test nab daily jumpsup\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"_id\":\"M9m3OXIB8qLpH1USKaM3\",\"_version\":1,\"_seq_no\":1,\"_primary_term\":1,\"anomaly_detector\":{\"name\":\"cli-d-1-min-002\",\"description\":\"Test nab daily jumpsup\",\"time_field\":\"timestamp\",\"indices\":[\"test-index\"],\"filter_query\":{\"match_all\":{\"boost\":1.0}},\"detection_interval\":{\"period\":{\"interval\":1,\"unit\":\"Minutes\"}},\"window_delay\":{\"period\":{\"interval\":0,\"unit\":\"Seconds\"}},\"schema_version\":0,\"feature_attributes\":[{\"feature_id\":\"Ldm3OXIB8qLpH1USKaMu\",\"feature_name\":\"feature-1\",\"feature_enabled\":true,\"aggregation_query\":{\"value_sum\":{\"sum\":{\"field\":\"feature-1\"}}}}]}}\n\n// Update cli-d-1-min-002 name to cli-d-1-min-001 -> failed\n~/Downloads [ curl -X PUT \"localhost:9200/_opendistro/_anomaly_detection/detectors/M9m3OXIB8qLpH1USKaM3\" -H 'Content-Type: application/json' -d'                           ] 5:10 PM\n{\n    \"name\":\"cli-d-1-min-001\",\n    \"description\":\"Test nab daily jumpsup--\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"error\":{\"root_cause\":[{\"type\":\"illegal_argument_exception\",\"reason\":\"Cannot create anomaly detector with name[cli-d-1-min-001] used by detectorId LNm2OXIB8qLpH1US_aNC.\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"Cannot create anomaly detector with name[cli-d-1-min-001] used by detectorId LNm2OXIB8qLpH1US_aNC\"},\"status\":400}\n\n// Update cli-d-1-min-002 description -> pass\n~/Downloads [ curl -X PUT \"localhost:9200/_opendistro/_anomaly_detection/detectors/M9m3OXIB8qLpH1USKaM3\" -H 'Content-Type: application/json' -d'                           ] 5:11 PM\n{\n    \"name\":\"cli-d-1-min-002\",\n    \"description\":\"Test nab daily jumpsup--updated\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"_id\":\"M9m3OXIB8qLpH1USKaM3\",\"_version\":2,\"_seq_no\":2,\"_primary_term\":1,\"anomaly_detector\":{\"name\":\"cli-d-1-min-002\",\"description\":\"Test nab daily jumpsup--updated\",\"time_field\":\"timestamp\",\"indices\":[\"test-index\"],\"filter_query\":{\"match_all\":{\"boost\":1.0}},\"detection_interval\":{\"period\":{\"interval\":1,\"unit\":\"Minutes\"}},\"window_delay\":{\"period\":{\"interval\":0,\"unit\":\"Seconds\"}},\"schema_version\":0,\"feature_attributes\":[{\"feature_id\":\"Odm4OXIB8qLpH1USqKNz\",\"feature_name\":\"feature-1\",\"feature_enabled\":true,\"aggregation_query\":{\"value_sum\":{\"sum\":{\"field\":\"feature-1\"}}}}]}}\n\n// Create detector with name cli-d-1-min-001 -> failed \n~/Downloads [ curl -X POST \"localhost:9200/_opendistro/_anomaly_detection/detectors\" -H 'Content-Type: application/json' -d'                                                                            ] 10:32 PM\n{\n    \"name\":\"cli-d-1-min-001\",\n    \"description\":\"new detector 003\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"error\":{\"root_cause\":[{\"type\":\"illegal_argument_exception\",\"reason\":\"Cannot create anomaly detector with name[cli-d-1-min-001] used by detectorId TYTeOnIBwvgo5IJfiD1y\"}],\"type\":\"illegal_argument_exception\",\"reason\":\"Cannot create anomaly detector with name[cli-d-1-min-001] used by detectorId TYTeOnIBwvgo5IJfiD1y\"},\"status\":400}\n\n// Create detector cli-d-1-min-003 -> pass\n~/Downloads [ curl -X POST \"localhost:9200/_opendistro/_anomaly_detection/detectors\" -H 'Content-Type: application/json' -d'                                                                            ] 10:34 PM\n{\n    \"name\":\"cli-d-1-min-003\",\n    \"description\":\"new detector 003\",\n    \"time_field\":\"timestamp\",\n    \"indices\":[\n        \"test-index\"\n    ],\n    \"feature_attributes\":[\n        {\n            \"feature_name\":\"feature-1\",\n            \"feature_enabled\":true,\n            \"aggregation_query\":{\n                \"value_sum\":{\n                    \"sum\":{\n                        \"field\":\"feature-1\"\n                    }\n                }\n            }\n        }\n    ],\n    \"detection_interval\":{\n        \"period\":{\n            \"interval\":1,\n            \"unit\":\"Minutes\"\n        }\n    }\n}\n'\n{\"_id\":\"WoTgOnIBwvgo5IJfcT0P\",\"_version\":1,\"_seq_no\":1,\"_primary_term\":1,\"anomaly_detector\":{\"name\":\"cli-d-1-min-003\",\"description\":\"new detector 003\",\"time_field\":\"timestamp\",\"indices\":[\"test-index\"],\"filter_query\":{\"match_all\":{\"boost\":1.0}},\"detection_interval\":{\"period\":{\"interval\":1,\"unit\":\"Minutes\"}},\"window_delay\":{\"period\":{\"interval\":0,\"unit\":\"Seconds\"}},\"schema_version\":0,\"feature_attributes\":[{\"feature_id\":\"VITgOnIBwvgo5IJfcT0M\",\"feature_name\":\"feature-1\",\"feature_enabled\":true,\"aggregation_query\":{\"value_sum\":{\"sum\":{\"field\":\"feature-1\"}}}}]}}\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-05-22T05:35:39Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134", "merged": true, "mergeCommit": {"oid": "64d7f0e58f53dac6622db1330fcbb9d9f22550e2"}, "closed": true, "closedAt": "2020-05-22T23:25:08Z", "author": {"login": "yizheliu-amazon"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjrPyyAH2gAyNDIxNzI1MDYyOjQ5ZjMwYTIzZDY5MGZmMjJmNmRmOTAyZjM5NjlmN2I2MDQ3YTQ5NmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcj6wsrgFqTQxNzIyMjMzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "49f30a23d690ff22f6df902f3969f7b6047a496f", "author": {"user": {"login": "yizheliu-amazon", "name": "Yizhe Liu"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/49f30a23d690ff22f6df902f3969f7b6047a496f", "committedDate": "2020-05-22T05:16:36Z", "message": "Prevent creating detector with duplicate name. Issue:#118"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MTMyMzg1", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#pullrequestreview-417132385", "createdAt": "2020-05-22T19:07:13Z", "commit": {"oid": "49f30a23d690ff22f6df902f3969f7b6047a496f"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOTowNzoxM1rOGZhQCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxOToxMDoyM1rOGZhUjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxMjM2Mw==", "bodyText": "minor. can this query also include a condition like not this detector id to utilize es search instead of additional postprocessing?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#discussion_r429412363", "createdAt": "2020-05-22T19:07:13Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -221,6 +222,46 @@ private void onSearchAdInputIndicesResponse(SearchResponse response, String dete\n                 + Arrays.toString(anomalyDetector.getIndices().toArray(new String[0]));\n             logger.error(errorMsg);\n             onFailure(new IllegalArgumentException(errorMsg));\n+        } else {\n+            checkADNameExists(detectorId);\n+        }\n+    }\n+\n+    private void checkADNameExists(String detectorId) throws IOException {\n+        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder()\n+            // src/main/resources/mappings/anomaly-detectors.json#L14\n+            .query(QueryBuilders.termQuery(\"name.keyword\", anomalyDetector.getName()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f30a23d690ff22f6df902f3969f7b6047a496f"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQxMzUxOA==", "bodyText": "minor. i would use a warning for this case since it's a harmless user error.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#discussion_r429413518", "createdAt": "2020-05-22T19:10:23Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -221,6 +222,46 @@ private void onSearchAdInputIndicesResponse(SearchResponse response, String dete\n                 + Arrays.toString(anomalyDetector.getIndices().toArray(new String[0]));\n             logger.error(errorMsg);\n             onFailure(new IllegalArgumentException(errorMsg));\n+        } else {\n+            checkADNameExists(detectorId);\n+        }\n+    }\n+\n+    private void checkADNameExists(String detectorId) throws IOException {\n+        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder()\n+            // src/main/resources/mappings/anomaly-detectors.json#L14\n+            .query(QueryBuilders.termQuery(\"name.keyword\", anomalyDetector.getName()))\n+            .timeout(requestTimeout);\n+        SearchRequest searchRequest = new SearchRequest(ANOMALY_DETECTORS_INDEX).source(searchSourceBuilder);\n+\n+        client\n+            .search(\n+                searchRequest,\n+                ActionListener\n+                    .wrap(\n+                        searchResponse -> onSearchADNameResponse(searchResponse, detectorId, anomalyDetector.getName()),\n+                        exception -> onFailure(exception)\n+                    )\n+            );\n+    }\n+\n+    private void onSearchADNameResponse(SearchResponse response, String detectorId, String name) throws IOException {\n+        boolean hasDuplicateName = false;\n+        String existingDetectorId = null;\n+        if (response.getHits().getTotalHits().value > 0) {\n+            for (SearchHit hit : response.getHits()) {\n+                if (!hit.getId().equals(detectorId)) {\n+                    hasDuplicateName = true;\n+                    existingDetectorId = hit.getId();\n+                    break;\n+                }\n+            }\n+        }\n+\n+        if (hasDuplicateName) {\n+            String errorMsg = String.format(\"Cannot create anomaly detector with name[%s] used by detectorId %s\", name, existingDetectorId);\n+            logger.error(errorMsg);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "49f30a23d690ff22f6df902f3969f7b6047a496f"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21", "author": {"user": {"login": "yizheliu-amazon", "name": "Yizhe Liu"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21", "committedDate": "2020-05-22T21:46:55Z", "message": "Exclude detector with input detector id when searching detector with duplicate name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjA4ODQ0", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#pullrequestreview-417208844", "createdAt": "2020-05-22T22:14:46Z", "commit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoxNDo0NlrOGZlIYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoxNDo0NlrOGZlIYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NTkzNg==", "bodyText": "How about we add mustNot condition only when detectorId is not blank?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#discussion_r429475936", "createdAt": "2020-05-22T22:14:46Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -221,6 +223,41 @@ private void onSearchAdInputIndicesResponse(SearchResponse response, String dete\n                 + Arrays.toString(anomalyDetector.getIndices().toArray(new String[0]));\n             logger.error(errorMsg);\n             onFailure(new IllegalArgumentException(errorMsg));\n+        } else {\n+            checkADNameExists(detectorId);\n+        }\n+    }\n+\n+    private void checkADNameExists(String detectorId) throws IOException {\n+        BoolQueryBuilder boolQueryBuilder = new BoolQueryBuilder();\n+        // src/main/resources/mappings/anomaly-detectors.json#L14\n+        boolQueryBuilder.must(QueryBuilders.termQuery(\"name.keyword\", anomalyDetector.getName()));\n+        // _id field does not allow \"\", but allows \" \"\n+        boolQueryBuilder.mustNot(QueryBuilders.termQuery(RestHandlerUtils._ID, StringUtils.isBlank(detectorId) ? \" \" : detectorId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjA5ODk1", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#pullrequestreview-417209895", "createdAt": "2020-05-22T22:18:51Z", "commit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoxODo1MVrOGZlLyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQyMjoxODo1MVrOGZlLyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTQ3NjgxMQ==", "bodyText": "We may show this error message on Kibana. How about we make it more readable?\nCannot create anomaly detector with name [%s] as it's already used by detector [%s]", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#discussion_r429476811", "createdAt": "2020-05-22T22:18:51Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -221,6 +223,41 @@ private void onSearchAdInputIndicesResponse(SearchResponse response, String dete\n                 + Arrays.toString(anomalyDetector.getIndices().toArray(new String[0]));\n             logger.error(errorMsg);\n             onFailure(new IllegalArgumentException(errorMsg));\n+        } else {\n+            checkADNameExists(detectorId);\n+        }\n+    }\n+\n+    private void checkADNameExists(String detectorId) throws IOException {\n+        BoolQueryBuilder boolQueryBuilder = new BoolQueryBuilder();\n+        // src/main/resources/mappings/anomaly-detectors.json#L14\n+        boolQueryBuilder.must(QueryBuilders.termQuery(\"name.keyword\", anomalyDetector.getName()));\n+        // _id field does not allow \"\", but allows \" \"\n+        boolQueryBuilder.mustNot(QueryBuilders.termQuery(RestHandlerUtils._ID, StringUtils.isBlank(detectorId) ? \" \" : detectorId));\n+        SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().query(boolQueryBuilder).timeout(requestTimeout);\n+        SearchRequest searchRequest = new SearchRequest(ANOMALY_DETECTORS_INDEX).source(searchSourceBuilder);\n+\n+        client\n+            .search(\n+                searchRequest,\n+                ActionListener\n+                    .wrap(\n+                        searchResponse -> onSearchADNameResponse(searchResponse, detectorId, anomalyDetector.getName()),\n+                        exception -> onFailure(exception)\n+                    )\n+            );\n+    }\n+\n+    private void onSearchADNameResponse(SearchResponse response, String detectorId, String name) throws IOException {\n+        if (response.getHits().getTotalHits().value > 0) {\n+            String errorMsg = String\n+                .format(\n+                    \"Cannot create anomaly detector with name[%s] used by detectorId %s\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjEwNzE4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#pullrequestreview-417210718", "createdAt": "2020-05-22T22:22:03Z", "commit": {"oid": "6f1c83c7bbd1f2537c3eaab7a38e09cd69de9e21"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "53a264caabec7cb06c2c9b23f4cbbcc0fe8072d7", "author": {"user": {"login": "yizheliu-amazon", "name": "Yizhe Liu"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/53a264caabec7cb06c2c9b23f4cbbcc0fe8072d7", "committedDate": "2020-05-22T23:13:06Z", "message": "Address Yaliang's comments and add 1 more test case"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE3MjIyMzM5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/134#pullrequestreview-417222339", "createdAt": "2020-05-22T23:21:07Z", "commit": {"oid": "53a264caabec7cb06c2c9b23f4cbbcc0fe8072d7"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1466, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}