{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE1NDI0ODIy", "number": 117, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNzo1N1rOD6y6Iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjozNjoxMVrOD6zPoA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTc4MDgzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjowNzo1N1rOGS1IKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjoyNzowMFrOGS1eJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Nzk5Mg==", "bodyText": "will Jan. cause any issue? I guess in case of Jan., month is 1, not sure if this can cause any issue", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/117#discussion_r422397992", "createdAt": "2020-05-08T22:07:57Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -234,20 +260,81 @@ private void profileState(\n     }\n \n     /**\n+     * Precondition:\n+     * 1. Index are rotated with name pattern \".opendistro-anomaly-results-history-{now/d}-1\" and now is using UTC.\n+     * 2. Latest entry with error is recorded within enabled and disabled time.  Note disabled time can be null.\n+     *\n      * Error is populated if error of the latest anomaly result is not empty.\n      * @param detectorId detector id\n-     * @param enabledTime the time when AD job is enabled in milliseconds\n+     * @param enabledTimeMillis the time when AD job is enabled in milliseconds\n      * @param listener listener to process the returned error or exception\n      */\n-    private void profileError(String detectorId, long enabledTime, MultiResponsesDelegateActionListener<DetectorProfile> listener) {\n-        SearchRequest searchLatestResult = createLatestAnomalyResultRequest(detectorId, enabledTime);\n+    private void profileError(\n+        String detectorId,\n+        long enabledTimeMillis,\n+        Instant disabledTime,\n+        MultiResponsesDelegateActionListener<DetectorProfile> listener\n+    ) {\n+        String[] latestIndex = null;\n+\n+        long disabledTimeMillis = 0;\n+        if (disabledTime != null) {\n+            disabledTimeMillis = disabledTime.toEpochMilli();\n+        }\n+        if (enabledTimeMillis > disabledTimeMillis) {\n+            // detector is still running\n+            latestIndex = new String[1];\n+            latestIndex[0] = AnomalyResult.ANOMALY_RESULT_INDEX;\n+        } else {\n+            String[] concreteIndices = indexNameExpressionResolver\n+                .concreteIndexNames(\n+                    clusterService.state(),\n+                    IndicesOptions.lenientExpandOpen(),\n+                    AnomalyDetectionIndices.ALL_AD_RESULTS_INDEX_PATTERN\n+                );\n+\n+            // find the latest from result indices such as .opendistro-anomaly-results-history-2020.04.06-1 and\n+            // /.opendistro-anomaly-results-history-2020.04.07-000002\n+            long maxTimestamp = -1;\n+            Map<Long, List<String>> candidateIndices = new HashMap<>();\n+            for (String indexName : concreteIndices) {\n+                Matcher m = Pattern.compile(\"\\\\.opendistro-anomaly-results-history-(\\\\d{4})\\\\.(\\\\d{2})\\\\.(\\\\d{2})-\\\\d+\").matcher(indexName);\n+                if (m.matches()) {\n+                    int year = Integer.parseInt(m.group(1));\n+                    int month = Integer.parseInt(m.group(2));\n+                    int date = Integer.parseInt(m.group(3));\n+                    // month starts with 0\n+                    calendar.clear();\n+                    calendar.set(year, month - 1, date);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0230b9cc2946b6454cda06a0b76c9c830977fa"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMDI1OA==", "bodyText": "I would suggest you use current year/month/date to initialize calendar, and do calendar.add(Calendar.MONTH, -1) instead.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/117#discussion_r422400258", "createdAt": "2020-05-08T22:15:32Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -234,20 +260,81 @@ private void profileState(\n     }\n \n     /**\n+     * Precondition:\n+     * 1. Index are rotated with name pattern \".opendistro-anomaly-results-history-{now/d}-1\" and now is using UTC.\n+     * 2. Latest entry with error is recorded within enabled and disabled time.  Note disabled time can be null.\n+     *\n      * Error is populated if error of the latest anomaly result is not empty.\n      * @param detectorId detector id\n-     * @param enabledTime the time when AD job is enabled in milliseconds\n+     * @param enabledTimeMillis the time when AD job is enabled in milliseconds\n      * @param listener listener to process the returned error or exception\n      */\n-    private void profileError(String detectorId, long enabledTime, MultiResponsesDelegateActionListener<DetectorProfile> listener) {\n-        SearchRequest searchLatestResult = createLatestAnomalyResultRequest(detectorId, enabledTime);\n+    private void profileError(\n+        String detectorId,\n+        long enabledTimeMillis,\n+        Instant disabledTime,\n+        MultiResponsesDelegateActionListener<DetectorProfile> listener\n+    ) {\n+        String[] latestIndex = null;\n+\n+        long disabledTimeMillis = 0;\n+        if (disabledTime != null) {\n+            disabledTimeMillis = disabledTime.toEpochMilli();\n+        }\n+        if (enabledTimeMillis > disabledTimeMillis) {\n+            // detector is still running\n+            latestIndex = new String[1];\n+            latestIndex[0] = AnomalyResult.ANOMALY_RESULT_INDEX;\n+        } else {\n+            String[] concreteIndices = indexNameExpressionResolver\n+                .concreteIndexNames(\n+                    clusterService.state(),\n+                    IndicesOptions.lenientExpandOpen(),\n+                    AnomalyDetectionIndices.ALL_AD_RESULTS_INDEX_PATTERN\n+                );\n+\n+            // find the latest from result indices such as .opendistro-anomaly-results-history-2020.04.06-1 and\n+            // /.opendistro-anomaly-results-history-2020.04.07-000002\n+            long maxTimestamp = -1;\n+            Map<Long, List<String>> candidateIndices = new HashMap<>();\n+            for (String indexName : concreteIndices) {\n+                Matcher m = Pattern.compile(\"\\\\.opendistro-anomaly-results-history-(\\\\d{4})\\\\.(\\\\d{2})\\\\.(\\\\d{2})-\\\\d+\").matcher(indexName);\n+                if (m.matches()) {\n+                    int year = Integer.parseInt(m.group(1));\n+                    int month = Integer.parseInt(m.group(2));\n+                    int date = Integer.parseInt(m.group(3));\n+                    // month starts with 0\n+                    calendar.clear();\n+                    calendar.set(year, month - 1, date);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Nzk5Mg=="}, "originalCommit": {"oid": "0c0230b9cc2946b6454cda06a0b76c9c830977fa"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwMzYyMw==", "bodyText": "will Jan. cause any issue? I guess in case of Jan., month is 1, not sure if this can cause any issue\n\njust checked java doc. month for Jan is 0 here.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/117#discussion_r422403623", "createdAt": "2020-05-08T22:27:00Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -234,20 +260,81 @@ private void profileState(\n     }\n \n     /**\n+     * Precondition:\n+     * 1. Index are rotated with name pattern \".opendistro-anomaly-results-history-{now/d}-1\" and now is using UTC.\n+     * 2. Latest entry with error is recorded within enabled and disabled time.  Note disabled time can be null.\n+     *\n      * Error is populated if error of the latest anomaly result is not empty.\n      * @param detectorId detector id\n-     * @param enabledTime the time when AD job is enabled in milliseconds\n+     * @param enabledTimeMillis the time when AD job is enabled in milliseconds\n      * @param listener listener to process the returned error or exception\n      */\n-    private void profileError(String detectorId, long enabledTime, MultiResponsesDelegateActionListener<DetectorProfile> listener) {\n-        SearchRequest searchLatestResult = createLatestAnomalyResultRequest(detectorId, enabledTime);\n+    private void profileError(\n+        String detectorId,\n+        long enabledTimeMillis,\n+        Instant disabledTime,\n+        MultiResponsesDelegateActionListener<DetectorProfile> listener\n+    ) {\n+        String[] latestIndex = null;\n+\n+        long disabledTimeMillis = 0;\n+        if (disabledTime != null) {\n+            disabledTimeMillis = disabledTime.toEpochMilli();\n+        }\n+        if (enabledTimeMillis > disabledTimeMillis) {\n+            // detector is still running\n+            latestIndex = new String[1];\n+            latestIndex[0] = AnomalyResult.ANOMALY_RESULT_INDEX;\n+        } else {\n+            String[] concreteIndices = indexNameExpressionResolver\n+                .concreteIndexNames(\n+                    clusterService.state(),\n+                    IndicesOptions.lenientExpandOpen(),\n+                    AnomalyDetectionIndices.ALL_AD_RESULTS_INDEX_PATTERN\n+                );\n+\n+            // find the latest from result indices such as .opendistro-anomaly-results-history-2020.04.06-1 and\n+            // /.opendistro-anomaly-results-history-2020.04.07-000002\n+            long maxTimestamp = -1;\n+            Map<Long, List<String>> candidateIndices = new HashMap<>();\n+            for (String indexName : concreteIndices) {\n+                Matcher m = Pattern.compile(\"\\\\.opendistro-anomaly-results-history-(\\\\d{4})\\\\.(\\\\d{2})\\\\.(\\\\d{2})-\\\\d+\").matcher(indexName);\n+                if (m.matches()) {\n+                    int year = Integer.parseInt(m.group(1));\n+                    int month = Integer.parseInt(m.group(2));\n+                    int date = Integer.parseInt(m.group(3));\n+                    // month starts with 0\n+                    calendar.clear();\n+                    calendar.set(year, month - 1, date);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjM5Nzk5Mg=="}, "originalCommit": {"oid": "0c0230b9cc2946b6454cda06a0b76c9c830977fa"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyOTgzNTg0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQyMjozNjoxMVrOGS1olA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOVQwMjo1ODowN1rOGS4B2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwNjI5Mg==", "bodyText": "One edge case: suppose detector interval is 1 minute\n1.Detector last run is at 2020-05-07, 11:59:50 PM, then AD result indices rolled over as .opendistro-anomaly-results-history-2020.05.07-001\n2.Detector next run will be 2020-05-08, 00:00:50 AM. If user stop the detector at  2020-05-08 00:00:10 AM, detector will not have AD result on 2020-05-08.\nSo this code change will check latest AD result index on 2020-05-08, as  2020-05-08 <= 2020-05-08 00:00:10 AM(disabledTime). But we can't find any AD result for this detector on 2020-05-08. How about we check last two days' AD result indices to make sure we can always get AD result? Similar to set monitor interval as 2*detector_interval", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/117#discussion_r422406292", "createdAt": "2020-05-08T22:36:11Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -234,20 +260,81 @@ private void profileState(\n     }\n \n     /**\n+     * Precondition:\n+     * 1. Index are rotated with name pattern \".opendistro-anomaly-results-history-{now/d}-1\" and now is using UTC.\n+     * 2. Latest entry with error is recorded within enabled and disabled time.  Note disabled time can be null.\n+     *\n      * Error is populated if error of the latest anomaly result is not empty.\n      * @param detectorId detector id\n-     * @param enabledTime the time when AD job is enabled in milliseconds\n+     * @param enabledTimeMillis the time when AD job is enabled in milliseconds\n      * @param listener listener to process the returned error or exception\n      */\n-    private void profileError(String detectorId, long enabledTime, MultiResponsesDelegateActionListener<DetectorProfile> listener) {\n-        SearchRequest searchLatestResult = createLatestAnomalyResultRequest(detectorId, enabledTime);\n+    private void profileError(\n+        String detectorId,\n+        long enabledTimeMillis,\n+        Instant disabledTime,\n+        MultiResponsesDelegateActionListener<DetectorProfile> listener\n+    ) {\n+        String[] latestIndex = null;\n+\n+        long disabledTimeMillis = 0;\n+        if (disabledTime != null) {\n+            disabledTimeMillis = disabledTime.toEpochMilli();\n+        }\n+        if (enabledTimeMillis > disabledTimeMillis) {\n+            // detector is still running\n+            latestIndex = new String[1];\n+            latestIndex[0] = AnomalyResult.ANOMALY_RESULT_INDEX;\n+        } else {\n+            String[] concreteIndices = indexNameExpressionResolver\n+                .concreteIndexNames(\n+                    clusterService.state(),\n+                    IndicesOptions.lenientExpandOpen(),\n+                    AnomalyDetectionIndices.ALL_AD_RESULTS_INDEX_PATTERN\n+                );\n+\n+            // find the latest from result indices such as .opendistro-anomaly-results-history-2020.04.06-1 and\n+            // /.opendistro-anomaly-results-history-2020.04.07-000002\n+            long maxTimestamp = -1;\n+            Map<Long, List<String>> candidateIndices = new HashMap<>();\n+            for (String indexName : concreteIndices) {\n+                Matcher m = Pattern.compile(\"\\\\.opendistro-anomaly-results-history-(\\\\d{4})\\\\.(\\\\d{2})\\\\.(\\\\d{2})-\\\\d+\").matcher(indexName);\n+                if (m.matches()) {\n+                    int year = Integer.parseInt(m.group(1));\n+                    int month = Integer.parseInt(m.group(2));\n+                    int date = Integer.parseInt(m.group(3));\n+                    // month starts with 0\n+                    calendar.clear();\n+                    calendar.set(year, month - 1, date);\n+                    // 2020.05.08 is translated to 1588896000000\n+                    long timestamp = calendar.getTimeInMillis();\n+\n+                    // a candidate index can be created before or after enabled time, but the index is definitely created before disabled\n+                    // time\n+                    if (timestamp <= disabledTimeMillis && maxTimestamp <= timestamp) {\n+                        maxTimestamp = timestamp;\n+                        // we can have two rotations on the same day and we don't know which one has our data, so we keep all", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c0230b9cc2946b6454cda06a0b76c9c830977fa"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQ0NTUyOA==", "bodyText": "Good point.  Changed.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/117#discussion_r422445528", "createdAt": "2020-05-09T02:58:07Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -234,20 +260,81 @@ private void profileState(\n     }\n \n     /**\n+     * Precondition:\n+     * 1. Index are rotated with name pattern \".opendistro-anomaly-results-history-{now/d}-1\" and now is using UTC.\n+     * 2. Latest entry with error is recorded within enabled and disabled time.  Note disabled time can be null.\n+     *\n      * Error is populated if error of the latest anomaly result is not empty.\n      * @param detectorId detector id\n-     * @param enabledTime the time when AD job is enabled in milliseconds\n+     * @param enabledTimeMillis the time when AD job is enabled in milliseconds\n      * @param listener listener to process the returned error or exception\n      */\n-    private void profileError(String detectorId, long enabledTime, MultiResponsesDelegateActionListener<DetectorProfile> listener) {\n-        SearchRequest searchLatestResult = createLatestAnomalyResultRequest(detectorId, enabledTime);\n+    private void profileError(\n+        String detectorId,\n+        long enabledTimeMillis,\n+        Instant disabledTime,\n+        MultiResponsesDelegateActionListener<DetectorProfile> listener\n+    ) {\n+        String[] latestIndex = null;\n+\n+        long disabledTimeMillis = 0;\n+        if (disabledTime != null) {\n+            disabledTimeMillis = disabledTime.toEpochMilli();\n+        }\n+        if (enabledTimeMillis > disabledTimeMillis) {\n+            // detector is still running\n+            latestIndex = new String[1];\n+            latestIndex[0] = AnomalyResult.ANOMALY_RESULT_INDEX;\n+        } else {\n+            String[] concreteIndices = indexNameExpressionResolver\n+                .concreteIndexNames(\n+                    clusterService.state(),\n+                    IndicesOptions.lenientExpandOpen(),\n+                    AnomalyDetectionIndices.ALL_AD_RESULTS_INDEX_PATTERN\n+                );\n+\n+            // find the latest from result indices such as .opendistro-anomaly-results-history-2020.04.06-1 and\n+            // /.opendistro-anomaly-results-history-2020.04.07-000002\n+            long maxTimestamp = -1;\n+            Map<Long, List<String>> candidateIndices = new HashMap<>();\n+            for (String indexName : concreteIndices) {\n+                Matcher m = Pattern.compile(\"\\\\.opendistro-anomaly-results-history-(\\\\d{4})\\\\.(\\\\d{2})\\\\.(\\\\d{2})-\\\\d+\").matcher(indexName);\n+                if (m.matches()) {\n+                    int year = Integer.parseInt(m.group(1));\n+                    int month = Integer.parseInt(m.group(2));\n+                    int date = Integer.parseInt(m.group(3));\n+                    // month starts with 0\n+                    calendar.clear();\n+                    calendar.set(year, month - 1, date);\n+                    // 2020.05.08 is translated to 1588896000000\n+                    long timestamp = calendar.getTimeInMillis();\n+\n+                    // a candidate index can be created before or after enabled time, but the index is definitely created before disabled\n+                    // time\n+                    if (timestamp <= disabledTimeMillis && maxTimestamp <= timestamp) {\n+                        maxTimestamp = timestamp;\n+                        // we can have two rotations on the same day and we don't know which one has our data, so we keep all", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjQwNjI5Mg=="}, "originalCommit": {"oid": "0c0230b9cc2946b6454cda06a0b76c9c830977fa"}, "originalPosition": 144}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3048, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}