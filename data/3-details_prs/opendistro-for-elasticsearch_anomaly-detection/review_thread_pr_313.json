{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIyNzc1MDk4", "number": 313, "reviewThreads": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo0MjoyMVrOE6vGhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMTowNTo1MVrOE7thGA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDI0NTgxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo0MjoyMVrOH1_JOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowNTo1NlrOH2CIcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTEyOA==", "bodyText": "Could you remove this method since nobody calls it?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526371128", "createdAt": "2020-11-18T19:42:21Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "diffHunk": "@@ -114,8 +114,7 @@ protected Cancellable getHourlyCron() {\n         return hourlyCron;\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM5MDQ5NA==", "bodyText": "Actually it's used by our scheduled jobs.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526390494", "createdAt": "2020-11-18T20:15:30Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "diffHunk": "@@ -114,8 +114,7 @@ protected Cancellable getHourlyCron() {\n         return hourlyCron;\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTEyOA=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMDA4MA==", "bodyText": "got it.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526420080", "createdAt": "2020-11-18T21:05:56Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "diffHunk": "@@ -114,8 +114,7 @@ protected Cancellable getHourlyCron() {\n         return hourlyCron;\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTEyOA=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDI0NzI2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/indices/AnomalyDetectionIndices.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo0Mjo1M1rOH1_KMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMTowNjowMlrOH2CIqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTM3OA==", "bodyText": "please remove.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526371378", "createdAt": "2020-11-18T19:42:53Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/indices/AnomalyDetectionIndices.java", "diffHunk": "@@ -439,8 +439,7 @@ public void offMaster() {\n         }\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM5MDYxNQ==", "bodyText": "The same as above", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526390615", "createdAt": "2020-11-18T20:15:41Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/indices/AnomalyDetectionIndices.java", "diffHunk": "@@ -439,8 +439,7 @@ public void offMaster() {\n         }\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTM3OA=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMDEzOQ==", "bodyText": "yes.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526420139", "createdAt": "2020-11-18T21:06:02Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/indices/AnomalyDetectionIndices.java", "diffHunk": "@@ -439,8 +439,7 @@ public void offMaster() {\n         }\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3MTM3OA=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDI2MzU3OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo0NzowMFrOH1_T6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNDo1MzozMVrOH2MtOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng==", "bodyText": "Why do we want to have a different readable name than before?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526373866", "createdAt": "2020-11-18T19:47:00Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM5MTM4MA==", "bodyText": "xContentBuilder.timeField this method changes the logic that exception will be thrown when raw and readable names are the same. This is one thing I wanna confirm with team: What readable  name should be used here?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526391380", "createdAt": "2020-11-18T20:17:07Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyMzkzMw==", "bodyText": "The original code may have a mistake since we don't intend to provide two fields for the same information.  Can we just use timeField(String name, Object timeValue)?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526423933", "createdAt": "2020-11-18T21:13:05Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1ODc5Nw==", "bodyText": "Yes, we can change it to timeField(String name, Object timeValue).  Do you see any negative impact for this change?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526458797", "createdAt": "2020-11-18T22:15:12Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4Njk5NQ==", "bodyText": "You can manually tested it by updating an detector and see if last_update_time is correct or not. If yes, we should be ok.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526486995", "createdAt": "2020-11-18T23:17:54Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MTc2Nw==", "bodyText": "Don't think there is negative impact to remove readable name.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526491767", "createdAt": "2020-11-18T23:31:32Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU5MzMzOA==", "bodyText": "Readable one is removed. The  timeField(String name, Object timeValue) method isn't compatible with other codes. To be consistent with previous version, use field method instead.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526593338", "createdAt": "2020-11-19T04:53:31Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -266,7 +267,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n             xContentBuilder.field(UI_METADATA_FIELD, uiMetadata);\n         }\n         if (lastUpdateTime != null) {\n-            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD, lastUpdateTime.toEpochMilli());\n+            xContentBuilder.timeField(LAST_UPDATE_TIME_FIELD, LAST_UPDATE_TIME_FIELD_READABLE_NAME, lastUpdateTime.toEpochMilli());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3Mzg2Ng=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDI4NjU5OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "isResolved": true, "comments": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo1MzowOFrOH1_iHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMDoxMzozNFrOH3fTig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg==", "bodyText": "To ensure we have a clean state before each integ test, can you install certificate for the super user as https://github.com/opendistro-for-elasticsearch/alerting/blob/master/alerting/src/test/kotlin/com/amazon/opendistroforelasticsearch/alerting/ODFERestTestCase.kt#L103-L124 ?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526377502", "createdAt": "2020-11-18T19:53:08Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM5NzI4Nw==", "bodyText": "It's not about super user. The deletion has been successful. Just a warning exception will be thrown as one system index is trying to be deleted. In future, this will be blocked.  I did try to use the strict mode to avoid this exception but it will block all of warning exceptions which might be not what we want. Instead here it will be only passed for this specific warning message. For long term plan, we probably need a new interface to delete the system indices", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526397287", "createdAt": "2020-11-18T20:24:20Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQyNDc4Mg==", "bodyText": "Can you tell me how do you test on security enabled on?  I didn't know we can delete system index.  If yes, there seems to be a bug on the system index side.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526424782", "createdAt": "2020-11-18T21:14:33Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ1MjI0MA==", "bodyText": "This warning is just introduced by the latest ES PR: elastic/elasticsearch#60945. It's not related to security feature. Currently security plugin isn't ready for 1.12.0. We need wait for it to run the testing against security enabled cluster.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526452240", "createdAt": "2020-11-18T22:02:10Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NjM1Mg==", "bodyText": "I see. I am afraid this call will likely fail and throw other exceptions when security is enabled.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526486352", "createdAt": "2020-11-18T23:16:16Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5NTYwMg==", "bodyText": "Have you tested some REST API by run ./gradlew run ? Will we get the same exception?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526495602", "createdAt": "2020-11-18T23:41:13Z", "author": {"login": "ylwu-amzn"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUyOTU5Nw==", "bodyText": "Also see the warning message. My understanding is that in theory, direct access system indices isn't reasonable.\n curl -v  http://127.0.0.1:9200/.opendistro-anomaly-detectors\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 9200 (#0)\n> GET /.opendistro-anomaly-detectors HTTP/1.1\n> Host: 127.0.0.1:9200\n> User-Agent: curl/7.54.0\n> Accept: */*\n>\n< HTTP/1.1 200 OK\n< Warning: 299 Elasticsearch-7.10.0-51e9d6f22758d0374a0f3f5c6e8f3a7997850f96 \"this request accesses system indices: [.opendistro-anomaly-detectors], but in a future major version, direct access to system indices will be prevented by default\"\n< content-type: application/json; charset=UTF-8\n< content-length: 1819\n<\n* Connection #0 to host 127.0.0.1 left intact\n{\".opendistro-anomaly-detectors\":{\"aliases\":{},\"mappings\":{\"dynamic\":\"false\",\"_meta\":{\"schema_version\":2},\"properties\":{\"category_field\":{\"type\":\"keyword\"},\"description\":{\"type\":\"text\"},\"detection_interval\":{\"properties\":{\"period\":```", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526529597", "createdAt": "2020-11-19T01:20:27Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMDEyMg==", "bodyText": "Based on discussion with Yaliang, there is no direct access from customer use cases. For these IT cases, we need change those before next major version. One issue is created to track this: #315", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526530122", "createdAt": "2020-11-19T01:22:09Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjU5NDM2Nw==", "bodyText": "@kaituo is there any related change in security?  since the test cases have run successfully with security enabled cluster for 1.11.0 release, it should be ok unless there is some related change in security recently.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526594367", "createdAt": "2020-11-19T04:57:09Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0NjYyMA==", "bodyText": "security also has a concept called \"system index\", different from ES's \"system index\".  Only admin with certificates can access security's system index.  Sarat added it recently and should be included in 1.12.  Previous CI runs with a security plugin without Sarat's changes.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527146620", "createdAt": "2020-11-19T19:34:08Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE1MzY4NQ==", "bodyText": "I see, thanks. This is very helpful.  could it be tested with odfe 1.11.0 by rebuilding AD plugin?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527153685", "createdAt": "2020-11-19T19:46:09Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzg1NDMwMQ==", "bodyText": "Tested on security cluster with both 1.11.0 and 1.12.0.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527854301", "createdAt": "2020-11-20T17:34:18Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk0NjYzNA==", "bodyText": "Thanks for the change.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527946634", "createdAt": "2020-11-20T20:13:34Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/ODFERestTestCase.java", "diffHunk": "@@ -105,7 +106,15 @@ protected void wipeAllODFEIndices() throws IOException {\n             for (Map<String, Object> index : parserList) {\n                 String indexName = (String) index.get(\"index\");\n                 if (indexName != null && !\".opendistro_security\".equals(indexName)) {\n-                    client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    try {\n+                        client().performRequest(new Request(\"DELETE\", \"/\" + indexName));\n+                    } catch (WarningFailureException e) {\n+                        // This will also delete system indices, and will get warning exception.\n+                        if (!e.getMessage().contains(\"this request accesses system indices\")) {\n+                            throw e;\n+                        }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM3NzUwMg=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDMxMjY2OnYy", "diffSide": "RIGHT", "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/rest/AnomalyDetectorRestApiIT.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQxOTo1OTo0N1rOH1_x9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMDoyMDoxMVrOH2AmaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MTU1Nw==", "bodyText": "Does the delete succeed?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526381557", "createdAt": "2020-11-18T19:59:47Z", "author": {"login": "kaituo"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/rest/AnomalyDetectorRestApiIT.java", "diffHunk": "@@ -327,7 +328,14 @@ public void testUpdateAnomalyDetectorWithNotExistingIndex() throws Exception {\n             detector.getUser()\n         );\n \n-        deleteIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX);\n+        try {\n+            deleteIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX);\n+        } catch (WarningFailureException e) {\n+            // This will delete system indices, and will get warning exception.\n+            if (!e.getMessage().contains(\"this request accesses system indices\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM5NDk4NA==", "bodyText": "yes. just one warning message", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526394984", "createdAt": "2020-11-18T20:20:11Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/rest/AnomalyDetectorRestApiIT.java", "diffHunk": "@@ -327,7 +328,14 @@ public void testUpdateAnomalyDetectorWithNotExistingIndex() throws Exception {\n             detector.getUser()\n         );\n \n-        deleteIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX);\n+        try {\n+            deleteIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX);\n+        } catch (WarningFailureException e) {\n+            // This will delete system indices, and will get warning exception.\n+            if (!e.getMessage().contains(\"this request accesses system indices\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjM4MTU1Nw=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMDk5MTk3OnYy", "diffSide": "RIGHT", "path": "release-notes/opendistro-for-elasticsearch-anomaly-detection.release-notes-1.12.0.0.md", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoxODo1MlrOH2GPQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMTozNjowM1rOH2JHnA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NzM2Mw==", "bodyText": "Remove this one, as 298 listed as \"Enhancements\" above", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526487363", "createdAt": "2020-11-18T23:18:52Z", "author": {"login": "ylwu-amzn"}, "path": "release-notes/opendistro-for-elasticsearch-anomaly-detection.release-notes-1.12.0.0.md", "diffHunk": "@@ -0,0 +1,22 @@\n+## Version 1.12.0.0 Release Notes\n+\n+Compatible with Elasticsearch 7.10.0\n+\n+### Enhancements\n+\n+* Improve profile API ([#298](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/298))\n+* Add checkpoint index retention for multi entity detector ([#283](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/283))\n+* Stashing context for Stats API to allow users to query from RestAPI ([#300](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/300))\n+* add HC detector request/failure stats ([#307](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/307))\n+\n+### Bug Fixes\n+\n+* Fix edge case where entities found for preview is empty ([#296](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/296))\n+* Improve profile API ([#298](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/298))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzNDU1Ng==", "bodyText": "good catch. Thanks :)", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526534556", "createdAt": "2020-11-19T01:36:03Z", "author": {"login": "weicongs-amazon"}, "path": "release-notes/opendistro-for-elasticsearch-anomaly-detection.release-notes-1.12.0.0.md", "diffHunk": "@@ -0,0 +1,22 @@\n+## Version 1.12.0.0 Release Notes\n+\n+Compatible with Elasticsearch 7.10.0\n+\n+### Enhancements\n+\n+* Improve profile API ([#298](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/298))\n+* Add checkpoint index retention for multi entity detector ([#283](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/283))\n+* Stashing context for Stats API to allow users to query from RestAPI ([#300](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/300))\n+* add HC detector request/failure stats ([#307](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/307))\n+\n+### Bug Fixes\n+\n+* Fix edge case where entities found for preview is empty ([#296](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/296))\n+* Improve profile API ([#298](https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/298))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ4NzM2Mw=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwMTAxMzUwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQyMzoyODowNlrOH2Gb8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwMTozMTozNFrOH2JCGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MDYxMQ==", "bodyText": "Not related to this PR, but is it reasonable to use GENERIC executor to run AD cron job? Same question for AnomalyDetectionIndices.java line 443 return ThreadPool.Names.MANAGEMENT;", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526490611", "createdAt": "2020-11-18T23:28:06Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "diffHunk": "@@ -114,8 +114,7 @@ protected Cancellable getHourlyCron() {\n         return hourlyCron;\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {\n         return ThreadPool.Names.GENERIC;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjUzMzE0Nw==", "bodyText": "Good call. new issue is created: #316. Let's discuss it there.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r526533147", "createdAt": "2020-11-19T01:31:34Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/cluster/MasterEventListener.java", "diffHunk": "@@ -114,8 +114,7 @@ protected Cancellable getHourlyCron() {\n         return hourlyCron;\n     }\n \n-    @Override\n-    public String executorName() {\n+    private String executorName() {\n         return ThreadPool.Names.GENERIC;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjQ5MDYxMQ=="}, "originalCommit": {"oid": "5aada21fac29451c1727bf0f0c20ff658226f02e"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMwNTIzMTQ5OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozNjozMlrOH2ukTw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQxOTozODowOFrOH2unpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0ODExMQ==", "bodyText": "Why do we need to add this?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527148111", "createdAt": "2020-11-19T19:36:32Z", "author": {"login": "kaituo"}, "path": "build.gradle", "diffHunk": "@@ -231,6 +231,8 @@ run {\n             cluster.waitForAllConditions()\n         }\n     }\n+\n+    useCluster testClusters.integTest", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd5aa7ffa0b48f7cd892895a1722b3bfa5ded1eb"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0ODk2Nw==", "bodyText": "It's related to latest change of es building too. without this, the cluster can't be started.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527148967", "createdAt": "2020-11-19T19:38:08Z", "author": {"login": "weicongs-amazon"}, "path": "build.gradle", "diffHunk": "@@ -231,6 +231,8 @@ run {\n             cluster.waitForAllConditions()\n         }\n     }\n+\n+    useCluster testClusters.integTest", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzE0ODExMQ=="}, "originalCommit": {"oid": "dd5aa7ffa0b48f7cd892895a1722b3bfa5ded1eb"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMxMDQ3MTkyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/CI.yml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMTowNTo1MVrOH3gtGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMjowOTowM1rOH3iZqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2OTU2MQ==", "bodyText": "ES7.10 doesn't support PnumNodes ? How to test cluster with multiple nodes?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527969561", "createdAt": "2020-11-20T21:05:51Z", "author": {"login": "ylwu-amzn"}, "path": ".github/workflows/CI.yml", "diffHunk": "@@ -70,10 +70,10 @@ jobs:\n           if [ $security -gt 0 ]\n           then\n             echo \"Security plugin is available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin\n           else\n             echo \"Security plugin is NOT available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db9d9cd77aa16b691c26bd472128d3098209b49d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk3MDIzNA==", "bodyText": "PnumNodes is used for local test, not for remote cluster.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527970234", "createdAt": "2020-11-20T21:07:30Z", "author": {"login": "weicongs-amazon"}, "path": ".github/workflows/CI.yml", "diffHunk": "@@ -70,10 +70,10 @@ jobs:\n           if [ $security -gt 0 ]\n           then\n             echo \"Security plugin is available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin\n           else\n             echo \"Security plugin is NOT available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2OTU2MQ=="}, "originalCommit": {"oid": "db9d9cd77aa16b691c26bd472128d3098209b49d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk3MDU1MQ==", "bodyText": "We need add new task for local testing with multi nodes", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527970551", "createdAt": "2020-11-20T21:08:20Z", "author": {"login": "weicongs-amazon"}, "path": ".github/workflows/CI.yml", "diffHunk": "@@ -70,10 +70,10 @@ jobs:\n           if [ $security -gt 0 ]\n           then\n             echo \"Security plugin is available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin\n           else\n             echo \"Security plugin is NOT available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2OTU2MQ=="}, "originalCommit": {"oid": "db9d9cd77aa16b691c26bd472128d3098209b49d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk3NDgyNg==", "bodyText": "Actually it never worked. I commented in the issue: #194. Let's use that to track the multi node testing changes", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527974826", "createdAt": "2020-11-20T21:18:47Z", "author": {"login": "weicongs-amazon"}, "path": ".github/workflows/CI.yml", "diffHunk": "@@ -70,10 +70,10 @@ jobs:\n           if [ $security -gt 0 ]\n           then\n             echo \"Security plugin is available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin\n           else\n             echo \"Security plugin is NOT available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2OTU2MQ=="}, "originalCommit": {"oid": "db9d9cd77aa16b691c26bd472128d3098209b49d"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk5NzM1NQ==", "bodyText": "Got it, let's fix in a separate PR", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/313#discussion_r527997355", "createdAt": "2020-11-20T22:09:03Z", "author": {"login": "ylwu-amzn"}, "path": ".github/workflows/CI.yml", "diffHunk": "@@ -70,10 +70,10 @@ jobs:\n           if [ $security -gt 0 ]\n           then\n             echo \"Security plugin is available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -Dhttps=true -Duser=admin -Dpassword=admin\n           else\n             echo \"Security plugin is NOT available\"\n-            ./gradlew :integTestRunner --tests \"com.amazon.opendistroforelasticsearch.ad.rest.*IT\" --tests \"com.amazon.opendistroforelasticsearch.ad.e2e.*IT\" -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\" -PnumNodes=2\n+            ./gradlew integTest -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9200 -Dtests.clustername=\"docker-cluster\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzk2OTU2MQ=="}, "originalCommit": {"oid": "db9d9cd77aa16b691c26bd472128d3098209b49d"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2818, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}