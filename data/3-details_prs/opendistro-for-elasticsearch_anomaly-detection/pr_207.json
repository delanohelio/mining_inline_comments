{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY0Nzk2ODg2", "number": 207, "title": "Get detector", "bodyText": "Cat command to concatenate and print detectors\nAdded get method to get detector configuration\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-08-07T20:12:19Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207", "merged": true, "mergeCommit": {"oid": "4b52e24d589d61789983a1afbaf3e6e251c39b1b"}, "closed": true, "closedAt": "2020-08-20T19:04:24Z", "author": {"login": "VijayanB"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc8qcaTgBqjM2MzQ2Njg2MjQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdA03UHgBqjM2NzY2NjUwOTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c6c22a1bdef903eccb4926d51031e1312e9f0b8", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/8c6c22a1bdef903eccb4926d51031e1312e9f0b8", "committedDate": "2020-08-07T19:06:04Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "892f83099f24262626398c4a04f309d800c30797", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/892f83099f24262626398c4a04f309d800c30797", "committedDate": "2020-08-07T20:28:25Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "892f83099f24262626398c4a04f309d800c30797", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/892f83099f24262626398c4a04f309d800c30797", "committedDate": "2020-08-07T20:28:25Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/092db6bc2199d8c9c28bad77fec58c425603f1cf", "committedDate": "2020-08-08T22:39:26Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1Mzg1NjQx", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-465385641", "createdAt": "2020-08-11T20:00:15Z", "commit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDowMDoxNlrOG_HLFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQyMDo1NjoyMVrOG_I8Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzMDk5OA==", "bodyText": "remove?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r468830998", "createdAt": "2020-08-11T20:00:16Z", "author": {"login": "kaituo"}, "path": "cli/internal/gateway/ad/ad.go", "diffHunk": "@@ -59,6 +61,56 @@ func (g *gateway) buildCreateURL() (*url.URL, error) {\n \treturn endpoint, nil\n }\n \n+// CreateDetector Creates an anomaly detector job.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODgzMjc2Ng==", "bodyText": "The code looks same as execyteByID.  Am I missing anything?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r468832766", "createdAt": "2020-08-11T20:04:04Z", "author": {"login": "kaituo"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,105 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\tvar results []*entity.DetectorOutput\n+\t\tif idStatus {\n+\t\t\tresults = executeByID(commandHandler, args)\n+\t\t} else {\n+\t\t\tresults = executeByNames(commandHandler, args)\n+\t\t}\n+\t\tprintDetectors(results)\n+\t},\n+}\n+\n+//executeByNames gets detector output based on name as argument\n+func executeByNames(commandHandler *ad.Handler, args []string) []*entity.DetectorOutput {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf"}, "originalPosition": 56}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODg1OTk0Mw==", "bodyText": "If we add a field in the get detector API on the plugin side, would it break anything here?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r468859943", "createdAt": "2020-08-11T20:56:21Z", "author": {"login": "kaituo"}, "path": "cli/internal/entity/ad/ad.go", "diffHunk": "@@ -143,3 +143,32 @@ type Container struct {\n type SearchResponse struct {\n \tHits Container `json:\"hits\"`\n }\n+\n+type Metadata CreateDetector\n+\n+type AnomalyDetector struct {\n+\tMetadata\n+\tSchemaVersion  int32  `json:\"schema_version\"`\n+\tLastUpdateTime uint64 `json:\"last_update_time\"`\n+}\n+\n+//DetectorResponse represents detector's setting\n+type DetectorResponse struct {\n+\tID              string          `json:\"_id\"`\n+\tAnomalyDetector AnomalyDetector `json:\"anomaly_detector\"`\n+}\n+\n+//DetectorOutput represents detector's setting displayed to user\n+type DetectorOutput struct {\n+\tID            string", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "092db6bc2199d8c9c28bad77fec58c425603f1cf", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/092db6bc2199d8c9c28bad77fec58c425603f1cf", "committedDate": "2020-08-08T22:39:26Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "31b41e446a2c1d3dca7b6c01dfde13a21960e82f", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/31b41e446a2c1d3dca7b6c01dfde13a21960e82f", "committedDate": "2020-08-12T21:19:42Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "05c54269070b14b20d347a8d209e5d80799159e6", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/05c54269070b14b20d347a8d209e5d80799159e6", "committedDate": "2020-08-12T21:24:59Z", "message": "Use block comment"}, "afterCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/88e686962380288f1129ec3924a14f40adf8328d", "committedDate": "2020-08-12T21:30:55Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MzIxMTUw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-466321150", "createdAt": "2020-08-12T22:31:09Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTAyMjkx", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467902291", "createdAt": "2020-08-14T22:16:42Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoxNjo0MlrOHBEtHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoxNjo0MlrOHBEtHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg4NzcwOQ==", "bodyText": "This line seems very long. How about breaking it into two lines?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470887709", "createdAt": "2020-08-14T22:16:42Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = executeByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {\n+\t\t\tprintDetectors(results)\n+\t\t}\n+\t},\n+}\n+\n+func getDetectors(commandHandler *ad.Handler, args []string, get func(*ad.Handler, string) ([]*entity.DetectorOutput, error)) []*entity.DetectorOutput {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTAyODYy", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467902862", "createdAt": "2020-08-14T22:18:39Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoxODozOVrOHBEu7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoxODozOVrOHBEu7A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg4ODE3Mg==", "bodyText": "This method is not to execute a detector by ID. How about rename it as \"getDetectorByID\"", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470888172", "createdAt": "2020-08-14T22:18:39Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = executeByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {\n+\t\t\tprintDetectors(results)\n+\t\t}\n+\t},\n+}\n+\n+func getDetectors(commandHandler *ad.Handler, args []string, get func(*ad.Handler, string) ([]*entity.DetectorOutput, error)) []*entity.DetectorOutput {\n+\tvar results []*entity.DetectorOutput\n+\tfor _, detector := range args {\n+\t\toutput, err := get(commandHandler, detector)\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t\treturn nil\n+\t\t}\n+\t\tresults = append(results, output...)\n+\t}\n+\treturn results\n+}\n+\n+//executeByID gets detector output based on ID as argument\n+func executeByID(commandHandler *ad.Handler, ID string) ([]*entity.DetectorOutput, error) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "originalPosition": 70}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTA0MDEy", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467904012", "createdAt": "2020-08-14T22:22:10Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoyMjoxMFrOHBEyuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoyMjoxMFrOHBEyuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg4OTE0NQ==", "bodyText": "If results is nil, what message will user see?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470889145", "createdAt": "2020-08-14T22:22:10Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = executeByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTA1MjA3", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467905207", "createdAt": "2020-08-14T22:26:11Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoyNjoxMVrOHBE2nA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjoyNjoxMVrOHBE2nA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MDE0MA==", "bodyText": "Is it best practice to use single-letter variable name in Go? How about replace d with detector ? That will be easier to read the code.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470890140", "createdAt": "2020-08-14T22:26:11Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = executeByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {\n+\t\t\tprintDetectors(results)\n+\t\t}\n+\t},\n+}\n+\n+func getDetectors(commandHandler *ad.Handler, args []string, get func(*ad.Handler, string) ([]*entity.DetectorOutput, error)) []*entity.DetectorOutput {\n+\tvar results []*entity.DetectorOutput\n+\tfor _, detector := range args {\n+\t\toutput, err := get(commandHandler, detector)\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t\treturn nil\n+\t\t}\n+\t\tresults = append(results, output...)\n+\t}\n+\treturn results\n+}\n+\n+//executeByID gets detector output based on ID as argument\n+func executeByID(commandHandler *ad.Handler, ID string) ([]*entity.DetectorOutput, error) {\n+\n+\toutput, err := ad.GetAnomalyDetectorByID(commandHandler, ID)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\treturn []*entity.DetectorOutput{output}, nil\n+}\n+\n+//printDetectors displays the list of output. Since this is json format, use indent function to\n+// pretty print before printing on console\n+func printDetectors(results []*entity.DetectorOutput) {\n+\tif results == nil {\n+\t\treturn\n+\t}\n+\tfor _, d := range results {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "originalPosition": 85}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/88e686962380288f1129ec3924a14f40adf8328d", "committedDate": "2020-08-12T21:30:55Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "98101f2bd833d452535bc8967cdd6dec7cef43ba", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/98101f2bd833d452535bc8967cdd6dec7cef43ba", "committedDate": "2020-08-14T22:28:34Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98101f2bd833d452535bc8967cdd6dec7cef43ba", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/98101f2bd833d452535bc8967cdd6dec7cef43ba", "committedDate": "2020-08-14T22:28:34Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd", "committedDate": "2020-08-14T22:43:48Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTA4MDI2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467908026", "createdAt": "2020-08-14T22:36:21Z", "commit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozNjo0MVrOHBFBFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMjozOTo0OFrOHBFD2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MjgyMQ==", "bodyText": "The message \"Input is name or pattern\" is visible to user? Have you confirmed the wording with tech writer? I feel we should say Input is detector name or name pattern, Input is detector id", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470892821", "createdAt": "2020-08-14T22:36:41Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,101 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = getDetectorsByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {\n+\t\t\tprintDetectors(results)\n+\t\t}\n+\t},\n+}\n+\n+func getDetectors(\n+\tcommandHandler *ad.Handler, args []string, get func(*ad.Handler, string) (\n+\t\t[]*entity.DetectorOutput, error)) []*entity.DetectorOutput {\n+\tvar results []*entity.DetectorOutput\n+\tfor _, detector := range args {\n+\t\toutput, err := get(commandHandler, detector)\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t\treturn nil\n+\t\t}\n+\t\tresults = append(results, output...)\n+\t}\n+\treturn results\n+}\n+\n+//getDetectorsByID gets detector output based on ID as argument\n+func getDetectorsByID(commandHandler *ad.Handler, ID string) ([]*entity.DetectorOutput, error) {\n+\n+\toutput, err := ad.GetAnomalyDetectorByID(commandHandler, ID)\n+\tif err != nil {\n+\t\treturn nil, err\n+\t}\n+\treturn []*entity.DetectorOutput{output}, nil\n+}\n+\n+//printDetectors displays the list of output. Since this is json format, use indent function to\n+// pretty print before printing on console\n+func printDetectors(results []*entity.DetectorOutput) {\n+\tif results == nil {\n+\t\treturn\n+\t}\n+\tfor _, d := range results {\n+\t\tformattedOutput, err := json.MarshalIndent(d, \"\", \"  \")\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t\treturn\n+\t\t}\n+\t\tfmt.Println(string(formattedOutput))\n+\t}\n+}\n+\n+func init() {\n+\tesadCmd.AddCommand(catCmd)\n+\tcatCmd.Flags().BoolP(\"name\", \"\", true, \"Input is name or pattern\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "98101f2bd833d452535bc8967cdd6dec7cef43ba"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg5MzUyOQ==", "bodyText": "only possibility getDetectors can get nil is if there is an error from GET method\n\nIf user input an invalid detector id, will throw an error or return empty results ?  In print method for _, d := range results {, if results is empty, will not print anything?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470893529", "createdAt": "2020-08-14T22:39:48Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -0,0 +1,99 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\t\"encoding/json\"\n+\tentity \"esad/internal/entity/ad\"\n+\t\"esad/internal/handler/ad\"\n+\t\"fmt\"\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const (\n+\tcommandCat = \"cat\"\n+)\n+\n+//catCmd prints detectors configuration based on id and name pattern.\n+var catCmd = &cobra.Command{\n+\tUse:   commandCat + \" [flags] [list of detectors]\",\n+\tShort: \"Concatenate and print detectors based on id or name pattern\",\n+\tLong:  `concatenate and print detectors based on pattern, use \"\" to make sure the name is not matched with pwd lists'`,\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tif err := cmd.Usage(); err != nil {\n+\t\t\t\tfmt.Println(err)\n+\t\t\t}\n+\t\t\treturn\n+\t\t}\n+\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\t\tcommandHandler, err := getCommandHandler()\n+\t\tif err != nil {\n+\t\t\tfmt.Println(err)\n+\t\t}\n+\t\t// default is name\n+\t\taction := ad.GetAnomalyDetectorsByNamePattern\n+\t\tif idStatus {\n+\t\t\taction = executeByID\n+\t\t}\n+\t\tif results := getDetectors(commandHandler, args, action); results != nil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDg4OTE0NQ=="}, "originalCommit": {"oid": "88e686962380288f1129ec3924a14f40adf8328d"}, "originalPosition": 50}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY3OTIyNDI2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-467922426", "createdAt": "2020-08-14T23:38:57Z", "commit": {"oid": "37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzozODo1N1rOHBFzww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xNFQyMzozODo1N1rOHBFzww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MDkwNTc5NQ==", "bodyText": "What use cases have you tested for the name pattern?  SearchDetectorByName method is using match query. Why not use regexp ?\n\tpayload := entity.SearchRequest{\n\t\tQuery: entity.SearchQuery{\n\t\t\tMatch: entity.Match{\n\t\t\t\tName: name,\n\t\t\t},\n\t\t},\n\t}", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#discussion_r470905795", "createdAt": "2020-08-14T23:38:57Z", "author": {"login": "ylwu-amzn"}, "path": "cli/internal/controller/ad/ad.go", "diffHunk": "@@ -467,5 +487,35 @@ func (c controller) DeleteDetectorByName(ctx context.Context, name string, force\n \t\t}\n \t}\n \treturn nil\n+}\n \n+//GetDetectorsByName get detector based on name pattern. It first calls SearchDetectorByName and then\n+// gets lists of detectorId and call GetDetector to get individual detector configuration\n+func (c controller) GetDetectorsByName(ctx context.Context, pattern string, display bool) ([]*entity.DetectorOutput, error) {\n+\tmatchedDetectors, err := c.getDetectorsToProcess(ctx, \"fetch\", pattern)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5OTIwOTcy", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/207#pullrequestreview-469920972", "createdAt": "2020-08-19T00:38:58Z", "commit": {"oid": "37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed28a5f413c909913aa0859488efdf4ddb95b9b5", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/ed28a5f413c909913aa0859488efdf4ddb95b9b5", "committedDate": "2020-08-20T18:32:00Z", "message": "Include comments for gateway methods\n\nEvery exported go method should have comments for readability and usage.\nAdd appropriate commands and sample data is copied from\nhttps://opendistro.github.io/for-elasticsearch-docs/docs/ad/api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dddc3bb39bc50b1374fe152ae79d01cf916150a3", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/dddc3bb39bc50b1374fe152ae79d01cf916150a3", "committedDate": "2020-08-20T18:32:00Z", "message": "Add GetDetector Gateway\n\nAdded function and test to check get response\nand regenerated mocks as well"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0746fec2f68c587561f096840e7d51fcc0ccb893", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0746fec2f68c587561f096840e7d51fcc0ccb893", "committedDate": "2020-08-20T18:32:00Z", "message": "Entity: Added entity to deserialize response\n\nUsed by GetDetectorController to deserialize\nresponse from gateway to type."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a43f925b14f776634b02ba9b64daedf7d2b5ed1", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9a43f925b14f776634b02ba9b64daedf7d2b5ed1", "committedDate": "2020-08-20T18:32:00Z", "message": "Mapper: function to map from json to structure\n\nMapper to convert gateway response to structure."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8086177398e107f4c277ca45206faf7bf9fd04ae", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/8086177398e107f4c277ca45206faf7bf9fd04ae", "committedDate": "2020-08-20T18:32:01Z", "message": "Controller: Get Detector based on Id and Name\n\nGetDetector will call gateway to get configuration\nGetDetectorByName will first call SearchDetector to get ID from Name pattern.\nLater, it will call GetDetector to get details."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6964ea0da9df8fa77b86768d805ed064fc63bf2a", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/6964ea0da9df8fa77b86768d805ed064fc63bf2a", "committedDate": "2020-08-20T18:32:01Z", "message": "Handler: GetDetector handler to call controller\n\nHandler for cat command, this will get list of detector\nbased on id and name pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1c790a29c7b5afc69c55512046b678b5e5fdb80f", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/1c790a29c7b5afc69c55512046b678b5e5fdb80f", "committedDate": "2020-08-20T18:32:01Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/37f4e4c7157e94158cf25bae3b9d20c4aaeeb1dd", "committedDate": "2020-08-14T22:43:48Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}, "afterCommit": {"oid": "1c790a29c7b5afc69c55512046b678b5e5fdb80f", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/1c790a29c7b5afc69c55512046b678b5e5fdb80f", "committedDate": "2020-08-20T18:32:01Z", "message": "Command: Cat command to concatenate and print detectors\n\nCreated command to accept list of detectors to concatenate and\nprint detectors. This is similar to cat command in unix."}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1514, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}