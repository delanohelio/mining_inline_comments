{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIwODc3OTY3", "number": 130, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjowMlrOD-UEwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjowMlrOD-UEwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY2NjY3MjAwOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestIndexAnomalyDetectorAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxNzoxMjowMlrOGYVwyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMFQxOTozMjo1N1rOGYa5Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTU2MQ==", "bodyText": "maybe you can it to keep this line consistent with other lines?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/130#discussion_r428175561", "createdAt": "2020-05-20T17:12:02Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestIndexAnomalyDetectorAction.java", "diffHunk": "@@ -73,12 +77,16 @@ public RestIndexAnomalyDetectorAction(\n         this.requestTimeout = REQUEST_TIMEOUT.get(settings);\n         this.detectionInterval = DETECTION_INTERVAL.get(settings);\n         this.detectionWindowDelay = DETECTION_WINDOW_DELAY.get(settings);\n+        this.maxAnomalyDetectors = MAX_ANOMALY_DETECTORS.get(settings);\n+        this.maxAnomalyFeatures = MAX_ANOMALY_FEATURES.get(settings);\n         this.clusterService = clusterService;\n         // TODO: will add more cluster setting consumer later\n         // TODO: inject ClusterSettings only if clusterService is only used to get ClusterSettings\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(REQUEST_TIMEOUT, it -> requestTimeout = it);\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(DETECTION_INTERVAL, it -> detectionInterval = it);\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(DETECTION_WINDOW_DELAY, it -> detectionWindowDelay = it);\n+        clusterService.getClusterSettings().addSettingsUpdateConsumer(MAX_ANOMALY_DETECTORS, newVal -> maxAnomalyDetectors = newVal);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0db7bd6862963af208b3fd49b8be7613f163e8f3"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODI1OTY4Ng==", "bodyText": "sure", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/130#discussion_r428259686", "createdAt": "2020-05-20T19:32:57Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestIndexAnomalyDetectorAction.java", "diffHunk": "@@ -73,12 +77,16 @@ public RestIndexAnomalyDetectorAction(\n         this.requestTimeout = REQUEST_TIMEOUT.get(settings);\n         this.detectionInterval = DETECTION_INTERVAL.get(settings);\n         this.detectionWindowDelay = DETECTION_WINDOW_DELAY.get(settings);\n+        this.maxAnomalyDetectors = MAX_ANOMALY_DETECTORS.get(settings);\n+        this.maxAnomalyFeatures = MAX_ANOMALY_FEATURES.get(settings);\n         this.clusterService = clusterService;\n         // TODO: will add more cluster setting consumer later\n         // TODO: inject ClusterSettings only if clusterService is only used to get ClusterSettings\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(REQUEST_TIMEOUT, it -> requestTimeout = it);\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(DETECTION_INTERVAL, it -> detectionInterval = it);\n         clusterService.getClusterSettings().addSettingsUpdateConsumer(DETECTION_WINDOW_DELAY, it -> detectionWindowDelay = it);\n+        clusterService.getClusterSettings().addSettingsUpdateConsumer(MAX_ANOMALY_DETECTORS, newVal -> maxAnomalyDetectors = newVal);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyODE3NTU2MQ=="}, "originalCommit": {"oid": "0db7bd6862963af208b3fd49b8be7613f163e8f3"}, "originalPosition": 30}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2856, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}