{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM0NzE3NzU0", "number": 154, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxMzoxMFrOEFrktQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoyNjowMFrOEFr0JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0MzkyMjQ1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/handler/AnomalyResultHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxMzoxMFrOGkBH2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoxNjo1NFrOGkBPmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMDMxNA==", "bodyText": "Minor. Should the index name be from the original index request?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/154#discussion_r440420314", "createdAt": "2020-06-15T20:13:10Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/handler/AnomalyResultHandler.java", "diffHunk": "@@ -192,7 +192,12 @@ void saveDetectorResult(IndexRequest indexRequest, String context, Iterator<Time\n             } else {\n                 TimeValue nextDelay = backoff.next();\n                 LOG.warn(RETRY_SAVING_ERR_MSG + context, cause);\n-                threadPool.schedule(() -> saveDetectorResult(indexRequest, context, backoff), nextDelay, ThreadPool.Names.SAME);\n+                // copy original request's source without other information like autoGeneratedTimestamp\n+                // otherwise, an exception will be thrown indicating autoGeneratedTimestamp should not be set\n+                // while request id is already set (id is set because we have already sent the request before).\n+                IndexRequest newReuqest = new IndexRequest(AnomalyResult.ANOMALY_RESULT_INDEX);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9517858a752607ae199ab6456e018e47def78dae"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMjI5Nw==", "bodyText": "This is AnomalyResultHandler, so its index should be AnomalyResult.ANOMALY_RESULT_INDEX.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/154#discussion_r440422297", "createdAt": "2020-06-15T20:16:54Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/handler/AnomalyResultHandler.java", "diffHunk": "@@ -192,7 +192,12 @@ void saveDetectorResult(IndexRequest indexRequest, String context, Iterator<Time\n             } else {\n                 TimeValue nextDelay = backoff.next();\n                 LOG.warn(RETRY_SAVING_ERR_MSG + context, cause);\n-                threadPool.schedule(() -> saveDetectorResult(indexRequest, context, backoff), nextDelay, ThreadPool.Names.SAME);\n+                // copy original request's source without other information like autoGeneratedTimestamp\n+                // otherwise, an exception will be thrown indicating autoGeneratedTimestamp should not be set\n+                // while request id is already set (id is set because we have already sent the request before).\n+                IndexRequest newReuqest = new IndexRequest(AnomalyResult.ANOMALY_RESULT_INDEX);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyMDMxNA=="}, "originalCommit": {"oid": "9517858a752607ae199ab6456e018e47def78dae"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc0Mzk2MTk2OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/feature/SearchFeatureDao.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoyNjowMFrOGkBgxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xNVQyMDoyOToxN1rOGkBnZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNjY5NQ==", "bodyText": "starting %d -> ending at %d?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/154#discussion_r440426695", "createdAt": "2020-06-15T20:26:00Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/feature/SearchFeatureDao.java", "diffHunk": "@@ -367,6 +380,7 @@ public void getFeaturesForSampledPeriods(\n         ActionListener<Optional<Entry<double[][], Integer>>> listener\n     ) {\n         Map<Long, double[]> cache = new HashMap<>();\n+        logger.info(String.format(\"Getting features for detector %s starting %d\", detector.getDetectorId(), endTime));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9517858a752607ae199ab6456e018e47def78dae"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyODM4OA==", "bodyText": "Good catch.  we don't know the start time at this point.  Changed to \"logger.info(String.format(\"Getting features for detector %s ending at %d\", detector.getDetectorId(), endTime));\"", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/154#discussion_r440428388", "createdAt": "2020-06-15T20:29:17Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/feature/SearchFeatureDao.java", "diffHunk": "@@ -367,6 +380,7 @@ public void getFeaturesForSampledPeriods(\n         ActionListener<Optional<Entry<double[][], Integer>>> listener\n     ) {\n         Map<Long, double[]> cache = new HashMap<>();\n+        logger.info(String.format(\"Getting features for detector %s starting %d\", detector.getDetectorId(), endTime));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MDQyNjY5NQ=="}, "originalCommit": {"oid": "9517858a752607ae199ab6456e018e47def78dae"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2862, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}