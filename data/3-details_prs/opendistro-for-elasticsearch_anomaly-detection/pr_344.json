{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ2MzE3MDg5", "number": 344, "title": "backport change: filter out exceptions which should not be counted in failure stats", "bodyText": "Issue #, if available:\nBackport this change: #341\nDescription of changes:\n\nCatch wrong feature query exception and stop detector\nSome exceptions are caused by customer input, which not related with the code logic. Will filter out such exceptions so we can get the failure stats which caused by server error.\n\nTest\n\n./gradlew build\n./gradlew integTest -PnumNodes=3 \nStart local cluster and test\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-29T04:13:51Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344", "merged": true, "mergeCommit": {"oid": "667dd5cb7e42a3e00dcbc5430664e50ccdabb6da"}, "closed": true, "closedAt": "2020-12-29T23:13:17Z", "author": {"login": "ylwu-amzn"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdqyyKfAH2gAyNTQ2MzE3MDg5OjBhMjRkZDg2NjMzNWVhZjZmZGVkYmI0MWJmNTdkZTQ2Zjg2NDFjZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdrDArVAFqTU1OTczMzk0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0a24dd866335eaf6fdedbb41bf57de46f8641ce4", "committedDate": "2020-12-29T04:12:06Z", "message": "filter out exceptions which should not be counted in failure stats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NjY2NjM4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#pullrequestreview-559666638", "createdAt": "2020-12-29T19:15:01Z", "commit": {"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Njk4NTcw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#pullrequestreview-559698570", "createdAt": "2020-12-29T21:01:38Z", "commit": {"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMTowMTozOFrOIMX58g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yOVQyMTowMTozOFrOIMX58g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0OTg0NTQ5MA==", "bodyText": "Can we directly break out of the loop after this?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#discussion_r549845490", "createdAt": "2020-12-29T21:01:38Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/AnomalyResultTransportAction.java", "diffHunk": "@@ -477,17 +483,52 @@ private CombinedRcfResult getCombinedResult(List<RCFResultResponse> rcfResults)\n         return modelManager.combineRcfResults(rcfResultLib);\n     }\n \n+    private void handleFailure(Exception exception, ActionListener<AnomalyResultResponse> listener, String adID) {\n+        if (exception instanceof IndexNotFoundException) {\n+            listener.onFailure(new EndRunException(adID, TROUBLE_QUERYING_ERR_MSG + exception.getMessage(), true).countedInStats(false));\n+        } else if (exception instanceof EndRunException) {\n+            // invalid feature query\n+            listener.onFailure(exception);\n+        } else {\n+            handleExecuteException(exception, listener, adID);\n+        }\n+    }\n+\n     void handleExecuteException(Exception ex, ActionListener<AnomalyResultResponse> listener, String adID) {\n         if (ex instanceof ClientException) {\n             listener.onFailure(ex);\n         } else if (ex instanceof AnomalyDetectionException) {\n             listener.onFailure(new InternalFailure((AnomalyDetectionException) ex));\n+        } else if (ex instanceof SearchPhaseExecutionException && invalidQuery((SearchPhaseExecutionException) ex)) {\n+            // This is to catch invalid aggregation on wrong field type. For example,\n+            // sum aggregation on text field. We should end detector run for such case.\n+            listener\n+                .onFailure(\n+                    new EndRunException(\n+                        adID,\n+                        INVALID_SEARCH_QUERY_MSG + ((SearchPhaseExecutionException) ex).getDetailedMessage(),\n+                        ex,\n+                        true\n+                    ).countedInStats(false)\n+                );\n         } else {\n             Throwable cause = ExceptionsHelper.unwrapCause(ex);\n             listener.onFailure(new InternalFailure(adID, cause));\n         }\n     }\n \n+    private boolean invalidQuery(SearchPhaseExecutionException ex) {\n+        boolean invalidQuery = true;\n+        // If all shards return bad request and failure cause is IllegalArgumentException, we\n+        // consider the feature query is invalid and will not count the error in failure stats.\n+        for (ShardSearchFailure failure : ex.shardFailures()) {\n+            if (RestStatus.BAD_REQUEST != failure.status() || !(failure.getCause() instanceof IllegalArgumentException)) {\n+                invalidQuery = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4"}, "originalPosition": 127}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5NzMzOTQ2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/344#pullrequestreview-559733946", "createdAt": "2020-12-29T23:06:26Z", "commit": {"oid": "0a24dd866335eaf6fdedbb41bf57de46f8641ce4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1455, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}