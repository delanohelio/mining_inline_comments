{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzMDM3ODU0", "number": 251, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzowNTowM1rOEtS_DQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMjowMVrOEtTDrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMyNDI5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzowNTowM1rOHhAdyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjowNDo0N1rOHhDe8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MjY4Mg==", "bodyText": "Add user field in detector index mapping https://github.com/opendistro-for-elasticsearch/anomaly-detection/blob/master/src/main/resources/mappings/anomaly-detectors.json ?\nSame for detector job.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504372682", "createdAt": "2020-10-14T03:05:03Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -289,6 +308,9 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (categoryFields != null) {\n             xContentBuilder.field(CATEGORY_FIELD, categoryFields.toArray());\n         }\n+        if (user != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 101}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyMjEzMA==", "bodyText": "Great point sure. Will add.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504422130", "createdAt": "2020-10-14T06:04:47Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -289,6 +308,9 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (categoryFields != null) {\n             xContentBuilder.field(CATEGORY_FIELD, categoryFields.toArray());\n         }\n+        if (user != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MjY4Mg=="}, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 101}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMyODE0OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzowNzozMlrOHhAf_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjoxNjoyMVrOHhDvGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MzI0NA==", "bodyText": "Here we just add User in each detector document. Security plugin will do authorization check for each request based on backend_roles or roles ? Can you share the related code?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504373244", "createdAt": "2020-10-14T03:07:32Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -131,7 +135,8 @@ public AnomalyDetector(\n         Map<String, Object> uiMetadata,\n         Integer schemaVersion,\n         Instant lastUpdateTime,\n-        List<String> categoryFields\n+        List<String> categoryFields,\n+        User user", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyNDI0NQ==", "bodyText": "Good question, security plugin will only provide the authorization headers.\nMy next PR will address this. Basically we have to query and filter by roles or backend_roles.\nHere is a code pointer in alerting which does that: opendistro-for-elasticsearch/alerting@44abca1#diff-39bec5249e2b91e055cdb30bb3edcd28ee868ab3676e98652547bcce28eed895R86", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504424245", "createdAt": "2020-10-14T06:11:03Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -131,7 +135,8 @@ public AnomalyDetector(\n         Map<String, Object> uiMetadata,\n         Integer schemaVersion,\n         Instant lastUpdateTime,\n-        List<String> categoryFields\n+        List<String> categoryFields,\n+        User user", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MzI0NA=="}, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyNjI2Ng==", "bodyText": "Got it, that makes sense.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504426266", "createdAt": "2020-10-14T06:16:21Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -131,7 +135,8 @@ public AnomalyDetector(\n         Map<String, Object> uiMetadata,\n         Integer schemaVersion,\n         Instant lastUpdateTime,\n-        List<String> categoryFields\n+        List<String> categoryFields,\n+        User user", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3MzI0NA=="}, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1OTMzNjEzOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwMzoxMjowMVrOHhAkgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjoxMjoyN1rOHhDpMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDQwMw==", "bodyText": "For old detector, they have no user field, so they will be open to all users which has AD permission ?\nFor new detector, we will create default user with the creator's user role?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504374403", "createdAt": "2020-10-14T03:12:01Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -260,6 +273,12 @@ public void writeTo(StreamOutput output) throws IOException {\n         output.writeInt(schemaVersion);\n         output.writeInstant(lastUpdateTime);\n         output.writeStringCollection(categoryFields);\n+        if (user != null) {\n+            output.writeBoolean(true); // user exists\n+            user.writeTo(output);\n+        } else {\n+            output.writeBoolean(false); // user does not exist", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 92}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQyNDc1NA==", "bodyText": "Exactly, for existing detectors where User doesn't exist, the filter will not work and users who have all access to rest api's will be able to see those detectors.\nThis is to maintain backward compatibility.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/251#discussion_r504424754", "createdAt": "2020-10-14T06:12:27Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -260,6 +273,12 @@ public void writeTo(StreamOutput output) throws IOException {\n         output.writeInt(schemaVersion);\n         output.writeInstant(lastUpdateTime);\n         output.writeStringCollection(categoryFields);\n+        if (user != null) {\n+            output.writeBoolean(true); // user exists\n+            user.writeTo(output);\n+        } else {\n+            output.writeBoolean(false); // user does not exist", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDM3NDQwMw=="}, "originalCommit": {"oid": "ec266d0c419ce0acd696e84cad8fde89fdbffdc5"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2964, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}