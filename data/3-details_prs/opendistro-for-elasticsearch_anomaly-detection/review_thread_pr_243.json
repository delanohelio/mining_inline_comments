{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwODcyNzAz", "number": 243, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDoxMTo1MVrOEsOkTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo0MzowNlrOEsxcKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE0ODExNDY5OnYy", "diffSide": "RIGHT", "path": "build.gradle", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDoxMTo1MVrOHfbhgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMFQwMDoxMTo1MVrOHfbhgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjcxODg1MQ==", "bodyText": "Added IndexAnomalyDetectorRequest using Powermock but JaCoCo doesnt read lines covered by Powermock tests.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r502718851", "createdAt": "2020-10-10T00:11:51Z", "author": {"login": "saratvemulapalli"}, "path": "build.gradle", "diffHunk": "@@ -254,7 +254,8 @@ List<String> jacocoExclusions = [\n         'com.amazon.opendistroforelasticsearch.ad.transport.StatsAnomalyDetectorTransportAction',\n         'com.amazon.opendistroforelasticsearch.ad.transport.DeleteAnomalyDetectorTransportAction*',\n         'com.amazon.opendistroforelasticsearch.ad.transport.GetAnomalyDetectorTransportAction*',\n-        'com.amazon.opendistroforelasticsearch.ad.transport.GetAnomalyDetectorResponse'\n+        'com.amazon.opendistroforelasticsearch.ad.transport.GetAnomalyDetectorResponse',\n+        'com.amazon.opendistroforelasticsearch.ad.transport.IndexAnomalyDetectorRequest'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzcyOTExOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/AnomalyDetectorActionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowNDo1N1rOHgLpHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDoxNzo0NFrOHgL-Aw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNzIyOA==", "bodyText": "Add xContentRegistry ? Same problem for other places", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503507228", "createdAt": "2020-10-12T20:04:57Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/AnomalyDetectorActionHandler.java", "diffHunk": "@@ -49,47 +49,57 @@\n      * @param clusterService ES cluster service\n      * @param client ES node client\n      * @param detectorId detector identifier\n-     * @param channel ES rest channel\n+     * @param listener Listener to send response\n      * @param function AD function\n      */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxMjU3OQ==", "bodyText": "Nice catch.\nSure will fix them.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503512579", "createdAt": "2020-10-12T20:17:44Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/AnomalyDetectorActionHandler.java", "diffHunk": "@@ -49,47 +49,57 @@\n      * @param clusterService ES cluster service\n      * @param client ES node client\n      * @param detectorId detector identifier\n-     * @param channel ES rest channel\n+     * @param listener Listener to send response\n      * @param function AD function\n      */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNzIyOA=="}, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Mzc5ODMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDozMTowMFrOHgMSpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDozNToyN1rOHgMZcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzg2MQ==", "bodyText": "Remove System.out.println, check other places too", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503517861", "createdAt": "2020-10-12T20:31:00Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -132,11 +141,15 @@ public IndexAnomalyDetectorActionHandler(\n      */\n     public void start() throws IOException {\n         if (!anomalyDetectionIndices.doesAnomalyDetectorIndexExist()) {\n+            System.out.println(\"AnomalyDetector Indices do not exist\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 123}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxOTYwMg==", "bodyText": "Sure.. there are other debugging logs as well. Will remove them.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503519602", "createdAt": "2020-10-12T20:35:27Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -132,11 +141,15 @@ public IndexAnomalyDetectorActionHandler(\n      */\n     public void start() throws IOException {\n         if (!anomalyDetectionIndices.doesAnomalyDetectorIndexExist()) {\n+            System.out.println(\"AnomalyDetector Indices do not exist\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNzg2MQ=="}, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 123}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzgxNDQ4OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDozNzozNlrOHgMcUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo1NDoxNlrOHgM2yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMDMzNg==", "bodyText": "This log is for debugging? If yes, change to debug level or remove it. Same for line 251. Check other places as well", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503520336", "createdAt": "2020-10-12T20:37:36Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -183,28 +200,35 @@ private void onGetAnomalyDetectorResponse(GetResponse response) throws IOExcepti\n \n     private void createAnomalyDetector() {\n         try {\n+            logger.info(\"#198 Request Method is PUT \");\n             QueryBuilder query = QueryBuilders.matchAllQuery();\n             SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().query(query).size(0).timeout(requestTimeout);\n \n             SearchRequest searchRequest = new SearchRequest(ANOMALY_DETECTORS_INDEX).source(searchSourceBuilder);\n \n-            client.search(searchRequest, ActionListener.wrap(response -> onSearchAdResponse(response), exception -> onFailure(exception)));\n+            client\n+                .search(\n+                    searchRequest,\n+                    ActionListener.wrap(response -> onSearchAdResponse(response), exception -> listener.onFailure(exception))\n+                );\n         } catch (Exception e) {\n-            onFailure(e);\n+            listener.onFailure(e);\n         }\n     }\n \n     private void onSearchAdResponse(SearchResponse response) throws IOException {\n+        logger.info(\"#211 onSearchAdResponse is called \");\n         if (response.getHits().getTotalHits().value >= maxAnomalyDetectors) {\n             String errorMsg = \"Can't create anomaly detector more than \" + maxAnomalyDetectors;\n             logger.error(errorMsg);\n-            onFailure(new IllegalArgumentException(errorMsg));\n+            listener.onFailure(new IllegalArgumentException(errorMsg));\n         } else {\n             searchAdInputIndices(null);\n         }\n     }\n \n     private void searchAdInputIndices(String detectorId) {\n+        logger.info(\"#222 searchAdInputIndices is called \");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 218}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNzExNA==", "bodyText": "Sure yeah it was for debugging. I removed them : )", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503527114", "createdAt": "2020-10-12T20:54:16Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -183,28 +200,35 @@ private void onGetAnomalyDetectorResponse(GetResponse response) throws IOExcepti\n \n     private void createAnomalyDetector() {\n         try {\n+            logger.info(\"#198 Request Method is PUT \");\n             QueryBuilder query = QueryBuilders.matchAllQuery();\n             SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().query(query).size(0).timeout(requestTimeout);\n \n             SearchRequest searchRequest = new SearchRequest(ANOMALY_DETECTORS_INDEX).source(searchSourceBuilder);\n \n-            client.search(searchRequest, ActionListener.wrap(response -> onSearchAdResponse(response), exception -> onFailure(exception)));\n+            client\n+                .search(\n+                    searchRequest,\n+                    ActionListener.wrap(response -> onSearchAdResponse(response), exception -> listener.onFailure(exception))\n+                );\n         } catch (Exception e) {\n-            onFailure(e);\n+            listener.onFailure(e);\n         }\n     }\n \n     private void onSearchAdResponse(SearchResponse response) throws IOException {\n+        logger.info(\"#211 onSearchAdResponse is called \");\n         if (response.getHits().getTotalHits().value >= maxAnomalyDetectors) {\n             String errorMsg = \"Can't create anomaly detector more than \" + maxAnomalyDetectors;\n             logger.error(errorMsg);\n-            onFailure(new IllegalArgumentException(errorMsg));\n+            listener.onFailure(new IllegalArgumentException(errorMsg));\n         } else {\n             searchAdInputIndices(null);\n         }\n     }\n \n     private void searchAdInputIndices(String detectorId) {\n+        logger.info(\"#222 searchAdInputIndices is called \");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMDMzNg=="}, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 218}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1MzgyODI1OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/GetAnomalyDetectorTransportAction.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo0MzowNlrOHgMkew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDo1NTowN1rOHgM4dg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMjQyNw==", "bodyText": "Change logger name to current class GetAnomalyDetectorTransportAction.class", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503522427", "createdAt": "2020-10-12T20:43:06Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/GetAnomalyDetectorTransportAction.java", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import static com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector.ANOMALY_DETECTORS_INDEX;\n+import static com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetectorJob.ANOMALY_DETECTOR_JOB_INDEX;\n+import static com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils.PROFILE;\n+import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.get.MultiGetItemResponse;\n+import org.elasticsearch.action.get.MultiGetRequest;\n+import org.elasticsearch.action.get.MultiGetResponse;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.HandledTransportAction;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.transport.TransportService;\n+\n+import com.amazon.opendistroforelasticsearch.ad.AnomalyDetectorProfileRunner;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetectorJob;\n+import com.amazon.opendistroforelasticsearch.ad.model.DetectorProfile;\n+import com.amazon.opendistroforelasticsearch.ad.model.ProfileName;\n+import com.amazon.opendistroforelasticsearch.ad.settings.AnomalyDetectorSettings;\n+import com.amazon.opendistroforelasticsearch.ad.util.DiscoveryNodeFilterer;\n+import com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils;\n+import com.google.common.collect.Sets;\n+\n+public class GetAnomalyDetectorTransportAction extends HandledTransportAction<GetAnomalyDetectorRequest, GetAnomalyDetectorResponse> {\n+\n+    private static final Logger LOG = LogManager.getLogger(StopDetectorTransportAction.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 62}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyNzU0Mg==", "bodyText": "Nice catch. Sure fixed it.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/243#discussion_r503527542", "createdAt": "2020-10-12T20:55:07Z", "author": {"login": "saratvemulapalli"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/GetAnomalyDetectorTransportAction.java", "diffHunk": "@@ -0,0 +1,232 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import static com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector.ANOMALY_DETECTORS_INDEX;\n+import static com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetectorJob.ANOMALY_DETECTOR_JOB_INDEX;\n+import static com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils.PROFILE;\n+import static org.elasticsearch.common.xcontent.XContentParserUtils.ensureExpectedToken;\n+\n+import java.util.Arrays;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Set;\n+import java.util.stream.Collectors;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.ElasticsearchStatusException;\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.get.MultiGetItemResponse;\n+import org.elasticsearch.action.get.MultiGetRequest;\n+import org.elasticsearch.action.get.MultiGetResponse;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.HandledTransportAction;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.common.CheckedConsumer;\n+import org.elasticsearch.common.Strings;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.xcontent.NamedXContentRegistry;\n+import org.elasticsearch.common.xcontent.XContentParser;\n+import org.elasticsearch.rest.BytesRestResponse;\n+import org.elasticsearch.rest.RestResponse;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.transport.TransportService;\n+\n+import com.amazon.opendistroforelasticsearch.ad.AnomalyDetectorProfileRunner;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetectorJob;\n+import com.amazon.opendistroforelasticsearch.ad.model.DetectorProfile;\n+import com.amazon.opendistroforelasticsearch.ad.model.ProfileName;\n+import com.amazon.opendistroforelasticsearch.ad.settings.AnomalyDetectorSettings;\n+import com.amazon.opendistroforelasticsearch.ad.util.DiscoveryNodeFilterer;\n+import com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils;\n+import com.google.common.collect.Sets;\n+\n+public class GetAnomalyDetectorTransportAction extends HandledTransportAction<GetAnomalyDetectorRequest, GetAnomalyDetectorResponse> {\n+\n+    private static final Logger LOG = LogManager.getLogger(StopDetectorTransportAction.class);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUyMjQyNw=="}, "originalCommit": {"oid": "f8e30571a4efb1e59198d02e7e236d9ed6399f5d"}, "originalPosition": 62}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2959, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}