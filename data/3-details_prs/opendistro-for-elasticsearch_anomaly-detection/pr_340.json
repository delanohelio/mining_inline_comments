{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQ0OTkzNDYw", "number": 340, "title": "Fix the profile API returns prematurely.", "bodyText": "Issue #, if available:\n#339\nDescription of changes:\nMultiResponsesDelegateActionListener helps send multiple requests asynchronously and return one final response altogether. While waiting for all inflight requests, the method respondImmediately and failImmediately can stop waiting and return immediately. While these two methods are convenient, it is easy to misuse them and cause bugs (see #339 for example). This PR removes the method respondImmediately and failImmediately and refactor profile runner to avoid using them.\nThis PR also stops printing out the unknown entity state since it is not useful.\nTesting done:\n\nAdded unit tests to verify the bug fix.\nManual tests to run profile calls for single-stream and multi-entity detectors for different phases of the detector lifecycle (disabled, init, running). Verified profile results make sense.\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-23T19:25:04Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340", "merged": true, "mergeCommit": {"oid": "0654957718dc6eb97aee2a6bc3479d5ce1f8e63d"}, "closed": true, "closedAt": "2020-12-28T20:51:22Z", "author": {"login": "kaituo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdpEOpegH2gAyNTQ0OTkzNDYwOjRmYjE3YjA0NzA0ODRjZDE2MWQ0YTk4NWEzYjk1ZWVhYWM1MGMzMjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdqsSUOgFqTU1OTI5NDU5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4fb17b0470484cd161d4a985a3b95eeaac50c321", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/4fb17b0470484cd161d4a985a3b95eeaac50c321", "committedDate": "2020-12-23T19:23:45Z", "message": "Fix the profile API returns prematurely.\n\nMultiResponsesDelegateActionListener helps send multiple requests asynchronously and return one final response altogether. While waiting for all inflight requests, the method respondImmediately and failImmediately can stop waiting and return immediately. While these two methods are convenient, it is easy to misuse them and cause bugs (see https://github.com/opendistro-for-elasticsearch/anomaly-detection/issues/339 for example). This PR removes the method respondImmediately and failImmediately and refactor profile runner to avoid using them.\n\nThis PR also stops printing out the unknown entity state since it is not useful.\n\nTesting done:\n1. Added unit tests to verify the bug fix.\n2. Manual tests to run profile calls for single-stream and multi-entity detectors for different phases of the detector lifecycle (disabled, init, running). Verified profile results make sense."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NzA4Mjk3", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#pullrequestreview-558708297", "createdAt": "2020-12-24T19:44:06Z", "commit": {"oid": "4fb17b0470484cd161d4a985a3b95eeaac50c321"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxOTo0NDowNlrOILT8Pg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNFQxOTo1MToyNVrOILUOlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODczMTk2Ng==", "bodyText": "why use logger.warn instead of logger.error?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#discussion_r548731966", "createdAt": "2020-12-24T19:44:06Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -261,20 +258,19 @@ private void profileEntityStats(MultiResponsesDelegateActionListener<DetectorPro\n                 DetectorProfile.Builder profileBuilder = new DetectorProfile.Builder();\n                 DetectorProfile profile = profileBuilder.totalEntities(value).build();\n                 listener.onResponse(profile);\n-            }, searchException -> { listener.failImmediately(CommonErrorMessages.FAIL_TO_GET_TOTAL_ENTITIES + detector.getDetectorId()); })\n-            );\n+            }, searchException -> {\n+                logger.warn(CommonErrorMessages.FAIL_TO_GET_TOTAL_ENTITIES + detector.getDetectorId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb17b0470484cd161d4a985a3b95eeaac50c321"}, "originalPosition": 140}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODczMjQ3NQ==", "bodyText": "may replace with FAIL_FETCH_ERR_MSG", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#discussion_r548732475", "createdAt": "2020-12-24T19:44:55Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/EntityProfileRunner.java", "diffHunk": "@@ -184,6 +164,25 @@ private void getJob(\n                     ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser);\n                     AnomalyDetectorJob job = AnomalyDetectorJob.parse(parser);\n \n+                    int totalResponsesToWait = 0;\n+                    if (profilesToCollect.contains(EntityProfileName.INIT_PROGRESS)\n+                        || profilesToCollect.contains(EntityProfileName.STATE)) {\n+                        totalResponsesToWait++;\n+                    }\n+                    if (profilesToCollect.contains(EntityProfileName.ENTITY_INFO)) {\n+                        totalResponsesToWait++;\n+                    }\n+                    if (profilesToCollect.contains(EntityProfileName.MODELS)) {\n+                        totalResponsesToWait++;\n+                    }\n+                    MultiResponsesDelegateActionListener<EntityProfile> delegateListener =\n+                        new MultiResponsesDelegateActionListener<EntityProfile>(\n+                            listener,\n+                            totalResponsesToWait,\n+                            \"Fail to fetch profile for \" + entityValue + \" of detector \" + detectorId,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb17b0470484cd161d4a985a3b95eeaac50c321"}, "originalPosition": 91}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODczNjY2MA==", "bodyText": "is it possible for state to be null? Do we still need to keep checking if state is null?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#discussion_r548736660", "createdAt": "2020-12-24T19:51:25Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/EntityProfile.java", "diffHunk": "@@ -214,7 +214,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (modelProfile != null) {\n             builder.field(CommonName.MODEL, modelProfile);\n         }\n-        if (state != null) {\n+        if (state != EntityState.UNKNOWN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4fb17b0470484cd161d4a985a3b95eeaac50c321"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/114c948ec1d1c2f48632725ef98ab45688c43f6e", "committedDate": "2020-12-24T21:14:27Z", "message": "Add back enum null check and replace string with constant"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4NzIyMDQw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#pullrequestreview-558722040", "createdAt": "2020-12-24T22:51:40Z", "commit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODMzMzkz", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#pullrequestreview-558833393", "createdAt": "2020-12-25T19:03:15Z", "commit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTowMzoxNVrOILeXKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTowMzoxNVrOILeXKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwMjY5OA==", "bodyText": "Why not use AnomalyDetectionException here? Same question for other places", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#discussion_r548902698", "createdAt": "2020-12-25T19:03:15Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorProfileRunner.java", "diffHunk": "@@ -118,10 +117,38 @@ private void calculateTotalResponsesToWait(\n                 ) {\n                     ensureExpectedToken(XContentParser.Token.START_OBJECT, xContentParser.nextToken(), xContentParser);\n                     AnomalyDetector detector = AnomalyDetector.parse(xContentParser, detectorId);\n+\n+                    prepareProfile(detector, listener, profilesToCollect);\n+                } catch (Exception e) {\n+                    listener.onFailure(new RuntimeException(CommonErrorMessages.FAIL_TO_FIND_DETECTOR_MSG + detectorId, e));\n+                }\n+            } else {\n+                listener.onFailure(new RuntimeException(CommonErrorMessages.FAIL_TO_FIND_DETECTOR_MSG + detectorId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU4ODMzNTE1", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#pullrequestreview-558833515", "createdAt": "2020-12-25T19:06:43Z", "commit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTowNjo0M1rOILeYWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yNVQxOTowNjo0M1rOILeYWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0ODkwMzAwMw==", "bodyText": "When will the entity state be UNKNOWN ?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#discussion_r548903003", "createdAt": "2020-12-25T19:06:43Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/EntityProfile.java", "diffHunk": "@@ -214,7 +214,7 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         if (modelProfile != null) {\n             builder.field(CommonName.MODEL, modelProfile);\n         }\n-        if (state != null) {\n+        if (state != null && state != EntityState.UNKNOWN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU5Mjk0NTkw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/340#pullrequestreview-559294590", "createdAt": "2020-12-28T20:37:53Z", "commit": {"oid": "114c948ec1d1c2f48632725ef98ab45688c43f6e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1450, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}