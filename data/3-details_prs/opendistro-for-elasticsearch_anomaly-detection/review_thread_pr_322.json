{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTI1MTM0", "number": 322, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0MToyNlrOFAZ5dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0MToyNlrOFAZ5dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM1OTY4NjMxOnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0MToyNlrOH-rmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxOTowNjo0MVrOH-sofA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ4ODExNQ==", "bodyText": "just curious: why readBoolean being true indicates uiMetadata can be read from readMap()", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#discussion_r535488115", "createdAt": "2020-12-03T18:41:26Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -196,23 +195,27 @@ public AnomalyDetector(StreamInput input) throws IOException {\n         }\n         this.indices = indices;\n         featureAttributes = input.readList(Feature::new);\n-        filterQuery = new MatchAllQueryBuilder(input);\n+        filterQuery = input.readNamedWriteable(QueryBuilder.class);\n         detectionInterval = IntervalTimeConfiguration.readFrom(input);\n         windowDelay = IntervalTimeConfiguration.readFrom(input);\n         Integer shingleSize = input.readInt();\n         if (shingleSize != null && shingleSize < 1) {\n             throw new IllegalArgumentException(\"Shingle size must be a positive integer\");\n         }\n         this.shingleSize = shingleSize;\n-        uiMetadata = input.readMap();\n         schemaVersion = input.readInt();\n+        this.categoryFields = input.readOptionalStringList();\n         lastUpdateTime = input.readInstant();\n-        this.categoryFields = input.readStringList();\n         if (input.readBoolean()) {\n             this.user = new User(input);\n         } else {\n             user = null;\n         }\n+        if (input.readBoolean()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTUwNTAyMA==", "bodyText": "We write true if uiMetadata is not null in the writeTo method: check https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322/files#diff-ab4bf6eb04e845b21b1182e30afb84c73b282bae5cc26dbcfef2e846211bcdecR248", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#discussion_r535505020", "createdAt": "2020-12-03T19:06:41Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -196,23 +195,27 @@ public AnomalyDetector(StreamInput input) throws IOException {\n         }\n         this.indices = indices;\n         featureAttributes = input.readList(Feature::new);\n-        filterQuery = new MatchAllQueryBuilder(input);\n+        filterQuery = input.readNamedWriteable(QueryBuilder.class);\n         detectionInterval = IntervalTimeConfiguration.readFrom(input);\n         windowDelay = IntervalTimeConfiguration.readFrom(input);\n         Integer shingleSize = input.readInt();\n         if (shingleSize != null && shingleSize < 1) {\n             throw new IllegalArgumentException(\"Shingle size must be a positive integer\");\n         }\n         this.shingleSize = shingleSize;\n-        uiMetadata = input.readMap();\n         schemaVersion = input.readInt();\n+        this.categoryFields = input.readOptionalStringList();\n         lastUpdateTime = input.readInstant();\n-        this.categoryFields = input.readStringList();\n         if (input.readBoolean()) {\n             this.user = new User(input);\n         } else {\n             user = null;\n         }\n+        if (input.readBoolean()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ4ODExNQ=="}, "originalCommit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2822, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}