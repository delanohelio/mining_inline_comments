{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxOTI1MTM0", "number": 322, "title": "fix detector and feature serialization", "bodyText": "Issue #, if available:\nDescription of changes:\nDetector and feature serialization has issue, see such error:\n[2020-12-03T03:10:00,566][ERROR][c.a.o.a.t.ADTaskManager  ] [node-1] Fail to execute batch task action BYSTJnYBeb-NN24R-TEn\norg.elasticsearch.transport.RemoteTransportException: [node-3][127.0.0.1:9302][cluster:admin/opendistro/ad/detector/batch_run_remotely]\nCaused by: java.lang.IllegalArgumentException: Unknown NamedWriteable [org.elasticsearch.search.aggregations.PipelineAggregationBuilder][value]\n\tat org.elasticsearch.common.io.stream.NamedWriteableRegistry.getReader(NamedWriteableRegistry.java:112) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput.readNamedWriteable(NamedWriteableAwareStreamInput.java:45) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput.readNamedWriteable(NamedWriteableAwareStreamInput.java:39) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.search.aggregations.AggregatorFactories$Builder.<init>(AggregatorFactories.java:258) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.search.aggregations.AbstractAggregationBuilder.<init>(AbstractAggregationBuilder.java:60) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder.<init>(ValuesSourceAggregationBuilder.java:166) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.search.aggregations.support.ValuesSourceAggregationBuilder$LeafOnly.<init>(ValuesSourceAggregationBuilder.java:122) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.search.aggregations.metrics.SumAggregationBuilder.<init>(SumAggregationBuilder.java:75) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput.readNamedWriteable(NamedWriteableAwareStreamInput.java:46) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.common.io.stream.NamedWriteableAwareStreamInput.readNamedWriteable(NamedWriteableAwareStreamInput.java:39) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat com.amazon.opendistroforelasticsearch.ad.model.Feature.<init>(Feature.java:75) ~[?:?]\n\tat org.elasticsearch.common.io.stream.StreamInput.readCollection(StreamInput.java:1220) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.common.io.stream.StreamInput.readList(StreamInput.java:1170) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector.<init>(AnomalyDetector.java:275) ~[?:?]\n\tat com.amazon.opendistroforelasticsearch.ad.model.ADTask.<init>(ADTask.java:89) ~[?:?]\n\tat com.amazon.opendistroforelasticsearch.ad.transport.ADBatchAnomalyResultRequest.<init>(ADBatchAnomalyResultRequest.java:43) ~[?:?]\n\tat org.elasticsearch.transport.RequestHandlerRegistry.newRequest(RequestHandlerRegistry.java:59) ~[elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundHandler.handleRequest(InboundHandler.java:195) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundHandler.messageReceived(InboundHandler.java:107) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundHandler.inboundMessage(InboundHandler.java:89) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.TcpTransport.inboundMessage(TcpTransport.java:700) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundPipeline.forwardFragments(InboundPipeline.java:142) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundPipeline.doHandleBytes(InboundPipeline.java:117) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.InboundPipeline.handleBytes(InboundPipeline.java:82) [elasticsearch-7.10.0.jar:7.10.0]\n\tat org.elasticsearch.transport.netty4.Netty4MessageChannelHandler.channelRead(Netty4MessageChannelHandler.java:74) [transport-netty4-client-7.10.0.jar:7.10.0]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.handler.logging.LoggingHandler.channelRead(LoggingHandler.java:271) [netty-handler-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) ~[netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) ~[netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) ~[netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103) ~[netty-codec-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:357) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:379) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:365) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysPlain(NioEventLoop.java:615) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:578) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493) [netty-transport-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989) [netty-common-4.1.49.Final.jar:4.1.49.Final]\n\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74) [netty-common-4.1.49.Final.jar:4.1.49.Final]\n\tat java.lang.Thread.run(Thread.java:832) [?:?]\n\nChanges\nThis PR fixed serialization of anomaly detector and feature by writing to and reading from stream.\nTest\n1.Add unit test cases for serialization of anomaly detector and feature\n2../gradlew build pass\n3../gradlew run and test\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-03T16:47:21Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322", "merged": true, "mergeCommit": {"oid": "358afe58bf9b7dc9ad1364310800d963cd9c2d93"}, "closed": true, "closedAt": "2020-12-03T19:12:14Z", "author": {"login": "ylwu-amzn"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdil5gzAH2gAyNTMxOTI1MTM0OmUzZDU5OTE3YmE0ZjdkYmZmM2M5ZGMzYzM0YWVkYTI4YzUwODNkOWU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdinvWygFqTU0NDI3MjAzOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e", "committedDate": "2020-12-03T16:39:58Z", "message": "fix detector and feature serialization"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjY2NDc5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#pullrequestreview-544266479", "createdAt": "2020-12-03T18:41:26Z", "commit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0MToyNlrOH-rmcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QxODo0MToyNlrOH-rmcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTQ4ODExNQ==", "bodyText": "just curious: why readBoolean being true indicates uiMetadata can be read from readMap()", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#discussion_r535488115", "createdAt": "2020-12-03T18:41:26Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/model/AnomalyDetector.java", "diffHunk": "@@ -196,23 +195,27 @@ public AnomalyDetector(StreamInput input) throws IOException {\n         }\n         this.indices = indices;\n         featureAttributes = input.readList(Feature::new);\n-        filterQuery = new MatchAllQueryBuilder(input);\n+        filterQuery = input.readNamedWriteable(QueryBuilder.class);\n         detectionInterval = IntervalTimeConfiguration.readFrom(input);\n         windowDelay = IntervalTimeConfiguration.readFrom(input);\n         Integer shingleSize = input.readInt();\n         if (shingleSize != null && shingleSize < 1) {\n             throw new IllegalArgumentException(\"Shingle size must be a positive integer\");\n         }\n         this.shingleSize = shingleSize;\n-        uiMetadata = input.readMap();\n         schemaVersion = input.readInt();\n+        this.categoryFields = input.readOptionalStringList();\n         lastUpdateTime = input.readInstant();\n-        this.categoryFields = input.readStringList();\n         if (input.readBoolean()) {\n             this.user = new User(input);\n         } else {\n             user = null;\n         }\n+        if (input.readBoolean()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "originalPosition": 31}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjY2NTQ4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#pullrequestreview-544266548", "createdAt": "2020-12-03T18:41:30Z", "commit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MjcyMDM5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/322#pullrequestreview-544272039", "createdAt": "2020-12-03T18:48:41Z", "commit": {"oid": "e3d59917ba4f7dbff3c9dc3c34aeda28c5083d9e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1436, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}