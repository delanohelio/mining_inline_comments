{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkxMjQzNzEx", "number": 72, "title": "preview detector on the fly", "bodyText": "*Issue #71\nDescription of changes:\n1.Support previewing detector on the fly. If user pass detector in preview API, will preview the detector directly without saving and retrieving it.\n2.Remove useless fields in detector index mapping\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-03-19T21:21:23Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72", "merged": true, "mergeCommit": {"oid": "cf119d49d9436c93ed57512bfc3c381fdeb7b473"}, "closed": true, "closedAt": "2020-03-24T02:10:23Z", "author": {"login": "ylwu-amzn"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcPsiGegFqTM3ODg4NjYwOA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcQo6loAFqTM3OTk0ODMwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc4ODg2NjA4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#pullrequestreview-378886608", "createdAt": "2020-03-21T02:59:16Z", "commit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMzowMjo1NVrOF5nM4g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yMVQwMzoyMDo1NlrOF5nRLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NTQyNg==", "bodyText": "I removed run since it is the same as executeDetector.  Please rebase .", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#discussion_r395955426", "createdAt": "2020-03-21T03:02:55Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestExecuteAnomalyDetectorAction.java", "diffHunk": "@@ -106,12 +106,27 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n             String rawPath = request.rawPath();\n             String error = validateAdExecutionInput(input);\n             if (error != null) {\n-                channel.sendResponse(new BytesRestResponse(RestStatus.NOT_FOUND, error));\n+                channel.sendResponse(new BytesRestResponse(RestStatus.BAD_REQUEST, error));\n                 return;\n             }\n \n             if (rawPath.endsWith(PREVIEW)) {\n-                preivewAnomalyDetector(client, channel, input);\n+                if (input.getDetector() != null) {\n+                    error = validateDetector(input.getDetector());\n+                    if (error != null) {\n+                        channel.sendResponse(new BytesRestResponse(RestStatus.BAD_REQUEST, error));\n+                        return;\n+                    }\n+                    anomalyDetectorRunner\n+                        .run(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NTQ3MA==", "bodyText": "Do u need to verify other things like index name?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#discussion_r395955470", "createdAt": "2020-03-21T03:03:45Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestExecuteAnomalyDetectorAction.java", "diffHunk": "@@ -123,6 +138,13 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n         };\n     }\n \n+    private String validateDetector(AnomalyDetector detector) {\n+        if (detector.getFeatureAttributes().isEmpty()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NTU0Nw==", "bodyText": "rest status should be internal failure.  I updated and please rebase.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#discussion_r395955547", "createdAt": "2020-03-21T03:04:56Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestExecuteAnomalyDetectorAction.java", "diffHunk": "@@ -184,24 +206,29 @@ protected void processResponse(GetResponse response) throws Exception {\n                 ensureExpectedToken(XContentParser.Token.START_OBJECT, parser.nextToken(), parser::getTokenLocation);\n                 AnomalyDetector detector = AnomalyDetector.parse(parser, response.getId(), response.getVersion());\n \n-                anomalyDetectorRunner.run(detector, input.getPeriodStart(), input.getPeriodEnd(), ActionListener.wrap(anomalyResult -> {\n-                    XContentBuilder builder = channel\n-                        .newBuilder()\n-                        .startObject()\n-                        .field(ANOMALY_RESULT, anomalyResult)\n-                        .field(ANOMALY_DETECTOR, detector)\n-                        .endObject();\n-                    channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder));\n-                }, exception -> {\n-                    logger.error(\"Unexpected error running anomaly detector \" + detector.getDetectorId(), exception);\n-                    try {\n-                        XContentBuilder builder = channel.newBuilder().startObject().field(ANOMALY_DETECTOR, detector).endObject();\n-                        channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder));\n-                    } catch (IOException e) {\n-                        logger.error(\"Fail to send back exception message\" + detector.getDetectorId(), exception);\n-                    }\n-                }));\n+                anomalyDetectorRunner\n+                    .run(detector, input.getPeriodStart(), input.getPeriodEnd(), getPreviewDetectorActionListener(channel, detector));\n             }\n         };\n     }\n+\n+    private ActionListener getPreviewDetectorActionListener(RestChannel channel, AnomalyDetector detector) {\n+        return ActionListener.wrap(anomalyResult -> {\n+            XContentBuilder builder = channel\n+                .newBuilder()\n+                .startObject()\n+                .field(ANOMALY_RESULT, anomalyResult)\n+                .field(ANOMALY_DETECTOR, detector)\n+                .endObject();\n+            channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder));\n+        }, exception -> {\n+            logger.error(\"Unexpected error running anomaly detector \" + detector.getDetectorId(), exception);\n+            try {\n+                XContentBuilder builder = channel.newBuilder().startObject().field(ANOMALY_DETECTOR, detector).endObject();\n+                channel.sendResponse(new BytesRestResponse(RestStatus.OK, builder));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c"}, "originalPosition": 116}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTk1NjUyNg==", "bodyText": "Instead of creating a new AnomalyDetector, why don't we have a setter method for update time and reset anomalyDetector's last update time?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#discussion_r395956526", "createdAt": "2020-03-21T03:20:56Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/handler/IndexAnomalyDetectorActionHandler.java", "diffHunk": "@@ -268,9 +269,24 @@ private void onSearchAdInputIndicesResponse(SearchResponse response, String dete\n     }\n \n     private void indexAnomalyDetector(String detectorId) throws IOException {\n+        AnomalyDetector detector = new AnomalyDetector(\n+            anomalyDetector.getDetectorId(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13847b40d68a47450d0d3c4fe74f93eeb2106f70", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/13847b40d68a47450d0d3c4fe74f93eeb2106f70", "committedDate": "2020-03-22T00:33:59Z", "message": "preview detector on the fly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b9019b18dc4f90c07e61c1f271762b90dd8d851a", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/b9019b18dc4f90c07e61c1f271762b90dd8d851a", "committedDate": "2020-03-22T00:33:59Z", "message": "reset detector last update time when create/update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1", "committedDate": "2020-03-22T04:16:15Z", "message": "resolve merge conflict"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d51b001b9662a7b47c0a99d339d8064270525a7c", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/d51b001b9662a7b47c0a99d339d8064270525a7c", "committedDate": "2020-03-20T00:51:06Z", "message": "reset detector last update time when create/update"}, "afterCommit": {"oid": "0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1", "committedDate": "2020-03-22T04:16:15Z", "message": "resolve merge conflict"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5ODUwMTY0", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#pullrequestreview-379850164", "createdAt": "2020-03-23T21:52:57Z", "commit": {"oid": "0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTo1Mjo1N1rOF6Zeew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yM1QyMTo1Mjo1N1rOF6Zeew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5Njc3OTEzMQ==", "bodyText": "should this validation be the same as the one in indexing detector, line 166 in IndexAnomalyDetectorActionHandler.java ?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#discussion_r396779131", "createdAt": "2020-03-23T21:52:57Z", "author": {"login": "wnbts"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/rest/RestExecuteAnomalyDetectorAction.java", "diffHunk": "@@ -123,6 +138,13 @@ protected RestChannelConsumer prepareRequest(RestRequest request, NodeClient cli\n         };\n     }\n \n+    private String validateDetector(AnomalyDetector detector) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0d9f58fc5fd2ade84e45d442c1c6468aef5cf4d1"}, "originalPosition": 57}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72a4754bfc39ead472d256a9bc814cb63844e4ac", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/72a4754bfc39ead472d256a9bc814cb63844e4ac", "committedDate": "2020-03-24T01:00:05Z", "message": "validate duplicate feature/aggregation name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc5OTQ4MzAw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/72#pullrequestreview-379948300", "createdAt": "2020-03-24T01:49:05Z", "commit": {"oid": "72a4754bfc39ead472d256a9bc814cb63844e4ac"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1640, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}