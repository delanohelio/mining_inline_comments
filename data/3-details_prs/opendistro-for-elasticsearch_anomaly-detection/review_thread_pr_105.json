{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEzMTk5ODEw", "number": 105, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoyODo0OVrOD5MD7w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoyODo0OVrOD5MD7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxMjkzMDM5OnYy", "diffSide": "RIGHT", "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjoyODo0OVrOGQUg1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQyMjozMDozMlrOGQUjFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NjQ4NQ==", "bodyText": "We will set AD plugin as enabled by default. After user disabling it and restart domain, are we able to read the latest configuration and set AD as disabled by defulat?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/105#discussion_r419766485", "createdAt": "2020-05-04T22:28:49Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.settings;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import static java.util.Collections.unmodifiableMap;\n+import static org.elasticsearch.common.settings.Setting.Property.Dynamic;\n+import static org.elasticsearch.common.settings.Setting.Property.NodeScope;\n+\n+public class EnabledSetting {\n+\n+    private static Logger logger = LogManager.getLogger(EnabledSetting.class);\n+\n+    /**\n+     * Singleton instance\n+     */\n+    private static EnabledSetting INSTANCE;\n+\n+    /**\n+     * Settings name\n+     */\n+    public static final String AD_PLUGIN_ENABLED = \"opendistro.anomaly_detection.enabled\";\n+\n+    private final Map<String, Setting<?>> settings = unmodifiableMap(new HashMap<String, Setting<?>>() {\n+        {\n+            /**\n+             * AD plugin enable/disable setting\n+             */\n+            put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7904012d104bcbe9f1a74e795b7904f6e72ca80b"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NzA2Mw==", "bodyText": "It depends on whether they do it in a transient fashion or persistent fashion.  If transient, after reboot,  it would be enabled by default.  If persistent, after reboot, it would disabled by default.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/105#discussion_r419767063", "createdAt": "2020-05-04T22:30:32Z", "author": {"login": "kaituo"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/settings/EnabledSetting.java", "diffHunk": "@@ -0,0 +1,111 @@\n+/*\n+ *   Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ *   Licensed under the Apache License, Version 2.0 (the \"License\").\n+ *   You may not use this file except in compliance with the License.\n+ *   A copy of the License is located at\n+ *\n+ *       http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ *   or in the \"license\" file accompanying this file. This file is distributed\n+ *   on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ *   express or implied. See the License for the specific language governing\n+ *   permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.settings;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.settings.Setting;\n+import org.elasticsearch.common.settings.Settings;\n+\n+import java.util.ArrayList;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.concurrent.ConcurrentHashMap;\n+\n+import static java.util.Collections.unmodifiableMap;\n+import static org.elasticsearch.common.settings.Setting.Property.Dynamic;\n+import static org.elasticsearch.common.settings.Setting.Property.NodeScope;\n+\n+public class EnabledSetting {\n+\n+    private static Logger logger = LogManager.getLogger(EnabledSetting.class);\n+\n+    /**\n+     * Singleton instance\n+     */\n+    private static EnabledSetting INSTANCE;\n+\n+    /**\n+     * Settings name\n+     */\n+    public static final String AD_PLUGIN_ENABLED = \"opendistro.anomaly_detection.enabled\";\n+\n+    private final Map<String, Setting<?>> settings = unmodifiableMap(new HashMap<String, Setting<?>>() {\n+        {\n+            /**\n+             * AD plugin enable/disable setting\n+             */\n+            put(AD_PLUGIN_ENABLED, Setting.boolSetting(AD_PLUGIN_ENABLED, true, NodeScope, Dynamic));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTc2NjQ4NQ=="}, "originalCommit": {"oid": "7904012d104bcbe9f1a74e795b7904f6e72ca80b"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3035, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}