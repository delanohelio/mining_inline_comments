{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4MDcwNDM2", "number": 286, "title": "Adding new Search Detector Info API ", "bodyText": "*Issue #195 *\nDescription of changes:\nAdding new Search Detector Info API to query total number of detectors and match name with existing detectors.\nThis API will search across all the detectors in detector index irrespective of User context.\nCount Request:\nGET _opendistro/_anomaly_detection/detectors/count\nResponse:\n{ \"count\" : 4, \"match\" : false }\nMatch Request:\nGET _opendistro/_anomaly_detection/detectors/match?name=opendistro_ad\nResponse:\n{ \"count\" : 0, \"match\" : false }\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-22T07:08:58Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286", "merged": true, "mergeCommit": {"oid": "6138f78662ad0c72f5e7f1626c2dde634bada226"}, "closed": true, "closedAt": "2020-10-22T23:27:09Z", "author": {"login": "saratvemulapalli"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU8aPOgH2gAyNTA4MDcwNDM2OmQ4ZmNjMDgwNzc2OWY0NjEyMGIzZDNlYzkyYjU3NDU2NTZhMTE2Yjc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVKg9pAFqTUxNTE4NDYxMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d8fcc0807769f46120b3d3ec92b5745656a116b7", "author": {"user": {"login": "saratvemulapalli", "name": "Sarat Vemulapalli"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/d8fcc0807769f46120b3d3ec92b5745656a116b7", "committedDate": "2020-10-22T06:58:41Z", "message": "Adding new Search Info API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c", "author": {"user": {"login": "saratvemulapalli", "name": "Sarat Vemulapalli"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/5703091e27b329bd983d469aab0785efcbd6b44c", "committedDate": "2020-10-22T07:06:29Z", "message": "Adding Spotless changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODM3OTI4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-514837928", "createdAt": "2020-10-22T15:12:09Z", "commit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNToxMjowOVrOHmmvCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNToxMjowOVrOHmmvCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDI0MjU3MA==", "bodyText": "minor: could condense this into one line: boolean nameExists = searchResponse.getHits().getTotalHits().value > 0", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#discussion_r510242570", "createdAt": "2020-10-22T15:12:09Z", "author": {"login": "ohltyler"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/SearchAnomalyDetectorInfoTransportAction.java", "diffHunk": "@@ -0,0 +1,117 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import static com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector.ANOMALY_DETECTORS_INDEX;\n+\n+import org.apache.logging.log4j.LogManager;\n+import org.apache.logging.log4j.Logger;\n+import org.elasticsearch.action.ActionListener;\n+import org.elasticsearch.action.search.SearchRequest;\n+import org.elasticsearch.action.search.SearchResponse;\n+import org.elasticsearch.action.support.ActionFilters;\n+import org.elasticsearch.action.support.HandledTransportAction;\n+import org.elasticsearch.client.Client;\n+import org.elasticsearch.cluster.service.ClusterService;\n+import org.elasticsearch.common.inject.Inject;\n+import org.elasticsearch.common.util.concurrent.ThreadContext;\n+import org.elasticsearch.index.query.QueryBuilders;\n+import org.elasticsearch.index.query.TermsQueryBuilder;\n+import org.elasticsearch.search.builder.SearchSourceBuilder;\n+import org.elasticsearch.tasks.Task;\n+import org.elasticsearch.transport.TransportService;\n+\n+import com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils;\n+\n+public class SearchAnomalyDetectorInfoTransportAction extends\n+    HandledTransportAction<SearchAnomalyDetectorInfoRequest, SearchAnomalyDetectorInfoResponse> {\n+    private static final Logger LOG = LogManager.getLogger(SearchAnomalyDetectorInfoTransportAction.class);\n+    private final Client client;\n+    private final ClusterService clusterService;\n+\n+    @Inject\n+    public SearchAnomalyDetectorInfoTransportAction(\n+        TransportService transportService,\n+        ActionFilters actionFilters,\n+        Client client,\n+        ClusterService clusterService\n+    ) {\n+        super(SearchAnomalyDetectorInfoAction.NAME, transportService, actionFilters, SearchAnomalyDetectorInfoRequest::new);\n+        this.client = client;\n+        this.clusterService = clusterService;\n+    }\n+\n+    @Override\n+    protected void doExecute(\n+        Task task,\n+        SearchAnomalyDetectorInfoRequest request,\n+        ActionListener<SearchAnomalyDetectorInfoResponse> listener\n+    ) {\n+        String name = request.getName();\n+        String rawPath = request.getRawPath();\n+        try (ThreadContext.StoredContext context = client.threadPool().getThreadContext().stashContext()) {\n+            SearchRequest searchRequest = new SearchRequest().indices(ANOMALY_DETECTORS_INDEX);\n+            if (rawPath.endsWith(RestHandlerUtils.COUNT)) {\n+                // Count detectors\n+                SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder();\n+                searchRequest.source(searchSourceBuilder);\n+                client.search(searchRequest, new ActionListener<SearchResponse>() {\n+\n+                    @Override\n+                    public void onResponse(SearchResponse searchResponse) {\n+                        SearchAnomalyDetectorInfoResponse response = new SearchAnomalyDetectorInfoResponse(\n+                            searchResponse.getHits().getTotalHits().value,\n+                            false\n+                        );\n+                        listener.onResponse(response);\n+                    }\n+\n+                    @Override\n+                    public void onFailure(Exception e) {\n+                        listener.onFailure(e);\n+                    }\n+                });\n+            } else {\n+                // Match name with existing detectors\n+                TermsQueryBuilder query = QueryBuilders.termsQuery(\"name.keyword\", name);\n+                SearchSourceBuilder searchSourceBuilder = new SearchSourceBuilder().query(query);\n+                searchRequest.source(searchSourceBuilder);\n+                client.search(searchRequest, new ActionListener<SearchResponse>() {\n+\n+                    @Override\n+                    public void onResponse(SearchResponse searchResponse) {\n+                        boolean nameExists = false;\n+                        if (searchResponse.getHits().getTotalHits().value > 0) {\n+                            nameExists = true;\n+                        } else {\n+                            nameExists = false;\n+                        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "originalPosition": 101}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0ODk5NjY5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-514899669", "createdAt": "2020-10-22T16:14:40Z", "commit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTQxMzg0", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-515141384", "createdAt": "2020-10-22T21:42:35Z", "commit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo0MjozNVrOHm07tg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo0MjozNVrOHm07tg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NTE5MA==", "bodyText": "I see you switched NAME and INSTANCE sequence in this PR #284 , why we need to do that? Should we do the same thing here?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#discussion_r510475190", "createdAt": "2020-10-22T21:42:35Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/SearchAnomalyDetectorInfoAction.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import org.elasticsearch.action.ActionType;\n+\n+public class SearchAnomalyDetectorInfoAction extends ActionType<SearchAnomalyDetectorInfoResponse> {\n+    public static final SearchAnomalyDetectorInfoAction INSTANCE = new SearchAnomalyDetectorInfoAction();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTQyMTY2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-515142166", "createdAt": "2020-10-22T21:44:04Z", "commit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo0NDowNVrOHm0-HA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQyMTo0NDowNVrOHm0-HA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDQ3NTgwNA==", "bodyText": "I see PR #284 merged,  change to use CommonValue.EXTERNAL_ACTION_PREFIX ?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#discussion_r510475804", "createdAt": "2020-10-22T21:44:05Z", "author": {"login": "ylwu-amzn"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/SearchAnomalyDetectorInfoAction.java", "diffHunk": "@@ -0,0 +1,28 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import org.elasticsearch.action.ActionType;\n+\n+public class SearchAnomalyDetectorInfoAction extends ActionType<SearchAnomalyDetectorInfoResponse> {\n+    public static final SearchAnomalyDetectorInfoAction INSTANCE = new SearchAnomalyDetectorInfoAction();\n+    public static final String NAME = \"cluster:admin/opendistro/ad/detector/info\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5703091e27b329bd983d469aab0785efcbd6b44c"}, "originalPosition": 22}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6bee879a480e8d575418664435b38125c67b1f0c", "author": {"user": {"login": "saratvemulapalli", "name": "Sarat Vemulapalli"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/6bee879a480e8d575418664435b38125c67b1f0c", "committedDate": "2020-10-22T22:26:18Z", "message": "Merge branch 'master' of https://github.com/opendistro-for-elasticsearch/anomaly-detection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed371e431e654faf022665029be60015e0f30e83", "author": {"user": {"login": "saratvemulapalli", "name": "Sarat Vemulapalli"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/ed371e431e654faf022665029be60015e0f30e83", "committedDate": "2020-10-22T22:27:03Z", "message": "Merge branch 'master' into fgac-info-api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ce23c7fe3c6e61a5d3ae554bd38a8aade4621c1", "author": {"user": {"login": "saratvemulapalli", "name": "Sarat Vemulapalli"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9ce23c7fe3c6e61a5d3ae554bd38a8aade4621c1", "committedDate": "2020-10-22T23:07:08Z", "message": "Rebasing changes and addressing comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTgyMTE4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-515182118", "createdAt": "2020-10-22T23:17:25Z", "commit": {"oid": "9ce23c7fe3c6e61a5d3ae554bd38a8aade4621c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTg0NjEw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/286#pullrequestreview-515184610", "createdAt": "2020-10-22T23:24:42Z", "commit": {"oid": "9ce23c7fe3c6e61a5d3ae554bd38a8aade4621c1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1398, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}