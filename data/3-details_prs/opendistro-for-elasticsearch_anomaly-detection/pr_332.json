{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDk2MzI3", "number": 332, "title": "add ad task stats", "bodyText": "Issue #, if available:\nDescription of changes:\nAdd AD task stats for historical detector\nTest\n1../gradlew build\n2../gradlew integTest -PnumNodes=3\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-12-16T23:18:05Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332", "merged": true, "mergeCommit": {"oid": "e0dcaec6a8ba704f92be1dbc404bbf10bcc38881"}, "closed": true, "closedAt": "2020-12-17T04:52:15Z", "author": {"login": "ylwu-amzn"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm3VY_AH2gAyNTQxNDk2MzI3OjIzNzUzMGFjYTk4YzQxMWJmMWNiYjc3YjVjZjEzNDFmZjk2NDNiYzU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdm79wwgH2gAyNTQxNDk2MzI3OmY2ZjcwNDU1NTkzZTgwYzNiMjRhNDkwNTY3NzJiMzJmNGI2YmI5NDk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/237530aca98c411bf1cbb77b5cf1341ff9643bc5", "committedDate": "2020-12-16T23:14:30Z", "message": "add ad task stats"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTY2NzA1", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#pullrequestreview-554166705", "createdAt": "2020-12-16T23:25:39Z", "commit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzoyNTozOVrOIHdodA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzoyNTozOVrOIHdodA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5NjQzNg==", "bodyText": "these metrics will be added later?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544696436", "createdAt": "2020-12-16T23:25:39Z", "author": {"login": "yizheliu-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/AnomalyDetectorPlugin.java", "diffHunk": "@@ -460,6 +460,12 @@ private static Void initGson() {\n                 new ADStat<>(true, new IndexStatusSupplier(indexUtils, DetectorInternalState.DETECTOR_STATE_INDEX))\n             )\n             .put(StatNames.DETECTOR_COUNT.getName(), new ADStat<>(true, new SettableSupplier()))\n+            .put(StatNames.JVM_HEAP_USAGE.getName(), new ADStat<>(false, new SettableSupplier()))\n+            .put(StatNames.HISTORICAL_DETECTOR_COUNT.getName(), new ADStat<>(true, new SettableSupplier()))\n+            .put(StatNames.AD_EXECUTING_BATCH_TASK_COUNT.getName(), new ADStat<>(false, new CounterSupplier()))\n+            .put(StatNames.AD_CANCELED_BATCH_TASK_COUNT.getName(), new ADStat<>(false, new CounterSupplier()))\n+            .put(StatNames.AD_TOTAL_BATCH_TASK_EXECUTION_COUNT.getName(), new ADStat<>(false, new CounterSupplier()))\n+            .put(StatNames.AD_BATCH_TASK_FAILURE_COUNT.getName(), new ADStat<>(false, new CounterSupplier()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTY3NDQ2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#pullrequestreview-554167446", "createdAt": "2020-12-16T23:27:14Z", "commit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzoyNzoxNFrOIHdq3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMzo0NjoxN1rOIHeIfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5NzA1NA==", "bodyText": "is it current heap usage? if yes, what's the purpose to have this?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544697054", "createdAt": "2020-12-16T23:27:14Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/ADStatsNodesTransportAction.java", "diffHunk": "@@ -99,6 +104,12 @@ private ADStatsNodeResponse createADStatsNodeResponse(ADStatsRequest adStatsRequ\n         Map<String, Object> statValues = new HashMap<>();\n         Set<String> statsToBeRetrieved = adStatsRequest.getStatsToBeRetrieved();\n \n+        if (statsToBeRetrieved.contains(StatNames.JVM_HEAP_USAGE.getName())) {\n+            long heapUsedPercent = jvmService.stats().getMem().getHeapUsedPercent();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY5Nzg4Mg==", "bodyText": "I see it's only for testing. Is protected method good enough?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544697882", "createdAt": "2020-12-16T23:29:21Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/StatsAnomalyDetectorResponse.java", "diffHunk": "@@ -47,4 +47,8 @@ public XContentBuilder toXContent(XContentBuilder builder, Params params) throws\n         adStatsResponse.toXContent(builder, params);\n         return builder;\n     }\n+\n+    public ADStatsResponse getAdStatsResponse() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMjQwMw==", "bodyText": "why is prefix used here?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544702403", "createdAt": "2020-12-16T23:40:27Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/StatsAnomalyDetectorTransportAction.java", "diffHunk": "@@ -120,23 +127,34 @@ private void getClusterStats(\n         ADStatsRequest adStatsRequest\n     ) {\n         ADStatsResponse adStatsResponse = new ADStatsResponse();\n-        if (adStatsRequest.getStatsToBeRetrieved().contains(StatNames.DETECTOR_COUNT.getName())) {\n-            if (clusterService.state().getRoutingTable().hasIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX)) {\n-                final SearchRequest request = client\n-                    .prepareSearch(AnomalyDetector.ANOMALY_DETECTORS_INDEX)\n-                    .setSize(0)\n-                    .setTrackTotalHits(true)\n-                    .request();\n-                client.search(request, ActionListener.wrap(indicesStatsResponse -> {\n-                    adStats.getStat(StatNames.DETECTOR_COUNT.getName()).setValue(indicesStatsResponse.getHits().getTotalHits().value);\n-                    adStatsResponse.setClusterStats(getClusterStatsMap(adStatsRequest));\n-                    listener.onResponse(adStatsResponse);\n-                }, e -> listener.onFailure(new RuntimeException(\"Failed to get AD cluster stats\", e))));\n-            } else {\n-                adStats.getStat(StatNames.DETECTOR_COUNT.getName()).setValue(0L);\n+        if ((adStatsRequest.getStatsToBeRetrieved().contains(StatNames.DETECTOR_COUNT.getName())\n+            || adStatsRequest.getStatsToBeRetrieved().contains(StatNames.HISTORICAL_DETECTOR_COUNT.getName()))\n+            && clusterService.state().getRoutingTable().hasIndex(AnomalyDetector.ANOMALY_DETECTORS_INDEX)) {\n+\n+            TermsAggregationBuilder termsAgg = AggregationBuilders.terms(DETECTOR_TYPE_AGG).field(AnomalyDetector.DETECTOR_TYPE_FIELD);\n+            SearchRequest request = new SearchRequest()\n+                .indices(AnomalyDetector.ANOMALY_DETECTORS_INDEX)\n+                .source(new SearchSourceBuilder().aggregation(termsAgg).size(0).trackTotalHits(true));\n+\n+            client.search(request, ActionListener.wrap(r -> {\n+                StringTerms aggregation = r.getAggregations().get(DETECTOR_TYPE_AGG);\n+                List<StringTerms.Bucket> buckets = aggregation.getBuckets();\n+                long totalDetectors = r.getHits().getTotalHits().value;\n+                long totalHistoricalDetectors = 0;\n+                for (StringTerms.Bucket b : buckets) {\n+                    if (b.getKeyAsString().contains(HISTORICAL_DETECTOR_TYPE_PREFIX)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwMzcyOQ==", "bodyText": "do we need realtime detector count?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544703729", "createdAt": "2020-12-16T23:43:45Z", "author": {"login": "weicongs-amazon"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/stats/StatNames.java", "diffHunk": "@@ -32,7 +32,13 @@\n     MODELS_CHECKPOINT_INDEX_STATUS(\"models_checkpoint_index_status\"),\n     ANOMALY_DETECTION_JOB_INDEX_STATUS(\"anomaly_detection_job_index_status\"),\n     ANOMALY_DETECTION_STATE_STATUS(\"anomaly_detection_state_status\"),\n-    MODEL_INFORMATION(\"models\");\n+    MODEL_INFORMATION(\"models\"),\n+    JVM_HEAP_USAGE(\"jvm_heap_usage\"),\n+    HISTORICAL_DETECTOR_COUNT(\"historical_detector_count\"),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcwNDYzOA==", "bodyText": "btw, how to run this test case? Is it included in the \"build\" command?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#discussion_r544704638", "createdAt": "2020-12-16T23:46:17Z", "author": {"login": "weicongs-amazon"}, "path": "src/test/java/com/amazon/opendistroforelasticsearch/ad/transport/StatsAnomalyDetectorTransportActionTests.java", "diffHunk": "@@ -0,0 +1,150 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ *\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package com.amazon.opendistroforelasticsearch.ad.transport;\n+\n+import static com.amazon.opendistroforelasticsearch.ad.util.RestHandlerUtils.XCONTENT_WITH_TYPE;\n+\n+import java.io.IOException;\n+import java.time.Instant;\n+import java.util.Collection;\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import org.elasticsearch.action.admin.indices.create.CreateIndexResponse;\n+import org.elasticsearch.action.index.IndexRequest;\n+import org.elasticsearch.action.index.IndexResponse;\n+import org.elasticsearch.action.support.WriteRequest;\n+import org.elasticsearch.common.xcontent.XContentFactory;\n+import org.elasticsearch.plugins.Plugin;\n+import org.elasticsearch.rest.RestStatus;\n+import org.elasticsearch.test.ESIntegTestCase;\n+import org.junit.Before;\n+\n+import com.amazon.opendistroforelasticsearch.ad.AnomalyDetectorPlugin;\n+import com.amazon.opendistroforelasticsearch.ad.TestHelpers;\n+import com.amazon.opendistroforelasticsearch.ad.indices.AnomalyDetectionIndices;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetector;\n+import com.amazon.opendistroforelasticsearch.ad.model.AnomalyDetectorType;\n+import com.amazon.opendistroforelasticsearch.ad.stats.StatNames;\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+\n+public class StatsAnomalyDetectorTransportActionTests extends ESIntegTestCase {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "237530aca98c411bf1cbb77b5cf1341ff9643bc5"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8561acccb0b1d06ef13d29d151b9fffcd65ad87a", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/8561acccb0b1d06ef13d29d151b9fffcd65ad87a", "committedDate": "2020-12-17T01:43:29Z", "message": "change historical detector stats name to historical single entity detector;change getAdStatsResponse as protected method"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MjY1Mzg1", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/332#pullrequestreview-554265385", "createdAt": "2020-12-17T04:06:02Z", "commit": {"oid": "8561acccb0b1d06ef13d29d151b9fffcd65ad87a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6f70455593e80c3b24a49056772b32f4b6bb949", "author": {"user": {"login": "ylwu-amzn", "name": "Yaliang"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/f6f70455593e80c3b24a49056772b32f4b6bb949", "committedDate": "2020-12-17T04:38:13Z", "message": "change historical detector stats name to historical single entity detector;change getAdStatsResponse as protected method"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1445, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}