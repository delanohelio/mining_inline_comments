{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2MDMzMDMx", "number": 229, "title": "CLI: Download Detector Configuration as File", "bodyText": "Download configuration as files helps users to save it in source code control and maintains it.\nThis will also let users to share detector configuration across users.\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-09-12T21:42:43Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229", "merged": true, "mergeCommit": {"oid": "7d780a8bd93f9076c20b7d43e888ac6e6d4b7f23"}, "closed": true, "closedAt": "2020-09-17T17:37:09Z", "author": {"login": "VijayanB"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdIRJzBgH2gAyNDg2MDMzMDMxOjBmMzkyNzhlMDdlNTI5NTI4YjY1YmEwYzUwYzMzODRlMzBmYTE0OTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ0e6fgFqTQ5MDgzMzE0OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "0f39278e07e529528b65ba0c50c3384e30fa1497", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/0f39278e07e529528b65ba0c50c3384e30fa1497", "committedDate": "2020-09-12T21:47:43Z", "message": "Refactor cat command\n\nGo provides an abstraction to support writing on file\nand stdout as same interface, refactor cat to accept\nfunc as input. Later, download will pass writeInfile as parameter"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7251608a6ed7efdbb48bed81260a0514af5f8544", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/7251608a6ed7efdbb48bed81260a0514af5f8544", "committedDate": "2020-09-12T21:29:31Z", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder"}, "afterCommit": {"oid": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "committedDate": "2020-09-12T21:49:40Z", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4MjM3NjE2", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-488237616", "createdAt": "2020-09-15T00:14:25Z", "commit": {"oid": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxNDoyNVrOHRr4QA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwMDoxNDoyNVrOHRr4QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODMwNjc1Mg==", "bodyText": "return?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r488306752", "createdAt": "2020-09-15T00:14:25Z", "author": {"login": "wnbts"}, "path": "cli/cmd/cat.go", "diffHunk": "@@ -38,25 +40,30 @@ var catCmd = &cobra.Command{\n \t\t\t}\n \t\t\treturn\n \t\t}\n-\t\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n-\t\tcommandHandler, err := getCommandHandler()\n-\t\tif err != nil {\n-\t\t\tfmt.Println(err)\n-\t\t}\n-\t\t// default is name\n-\t\taction := ad.GetAnomalyDetectorsByNamePattern\n-\t\tif idStatus {\n-\t\t\taction = getDetectorsByID\n-\t\t}\n-\t\tresults, err := getDetectors(commandHandler, args, action)\n-\t\tif err != nil {\n-\t\t\tfmt.Println(err)\n-\t\t\treturn\n-\t\t}\n-\t\tprintDetectors(results)\n+\t\tprintDetectors(Println, cmd, args)\n \t},\n }\n \n+//printDetectors print detectors\n+func printDetectors(f func(*entity.DetectorOutput), cmd *cobra.Command, detectors []string) {\n+\tidStatus, _ := cmd.Flags().GetBool(\"id\")\n+\tcommandHandler, err := getCommandHandler()\n+\tif err != nil {\n+\t\tfmt.Println(err)\n+\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780"}, "originalPosition": 39}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fd5f7820e5bdef0b1dbafa6312e421d25cd3a7d2", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/fd5f7820e5bdef0b1dbafa6312e421d25cd3a7d2", "committedDate": "2020-09-15T02:24:37Z", "message": "CLI: Refactor command to display error\n\nPrinting error on console is added everywhere.\nCreate a function to check error and print."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9f6437fe80238d4a5c1b35e50f422382d9ee0293", "committedDate": "2020-09-15T02:34:09Z", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/10ab1db1fabef1e0e851a0e47f87f76e75b2f780", "committedDate": "2020-09-12T21:49:40Z", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder"}, "afterCommit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/9f6437fe80238d4a5c1b35e50f422382d9ee0293", "committedDate": "2020-09-15T02:34:09Z", "message": "Add Download command\n\nDownload is similar to cat, excepts it download the configuration and\nsave it as file with detector name as file name on current folder"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MDMzNDY3", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-489033467", "createdAt": "2020-09-15T20:10:34Z", "commit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5Mjc3MDg0", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-489277084", "createdAt": "2020-09-16T05:05:14Z", "commit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTowNToxNFrOHSgQ_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNTowNToxNFrOHSgQ_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2NTA1Mg==", "bodyText": "Add file extension?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489165052", "createdAt": "2020-09-16T05:05:14Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tfilePath := filepath.Join(cwd, d.Name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjgwNzIw", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-489280720", "createdAt": "2020-09-16T05:16:17Z", "commit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToxNjoxN1rOHSgc3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToxNjoxN1rOHSgc3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE2ODA5Mw==", "bodyText": "If the filePath exists, will os.Create override the existing file?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489168093", "createdAt": "2020-09-16T05:16:17Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()\n+\tif err != nil {\n+\t\treturn err\n+\t}\n+\tfilePath := filepath.Join(cwd, d.Name)\n+\tf, err := os.Create(filePath)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MjgzOTAz", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-489283903", "createdAt": "2020-09-16T05:25:38Z", "commit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToyNTozOVrOHSgnig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQwNToyNTozOVrOHSgnig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTE3MDgyNg==", "bodyText": "Is it possible to output detector into a different directory other than current directory?  Can user specify the absolute file path? For example, user want to download detector and output it into \"/tmp/my_detectors.json\".\nIf user query detector with name pattern and return multiple detectors, we will write detectors into separate files. Seems not very easy for user to share if they have hundreds of such small detector configuration files.  By specifying an absolute file path and output all detectors' configuration into one file will be easier for user to share, bulk recreate etc.", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#discussion_r489170826", "createdAt": "2020-09-16T05:25:39Z", "author": {"login": "ylwu-amzn"}, "path": "cli/cmd/download.go", "diffHunk": "@@ -0,0 +1,67 @@\n+/*\n+ * Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n+ * Licensed under the Apache License, Version 2.0 (the \"License\").\n+ * You may not use this file except in compliance with the License.\n+ * A copy of the License is located at\n+ *     http://www.apache.org/licenses/LICENSE-2.0\n+ * or in the \"license\" file accompanying this file. This file is distributed\n+ * on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either\n+ * express or implied. See the License for the specific language governing\n+ * permissions and limitations under the License.\n+ */\n+\n+package cmd\n+\n+import (\n+\tentity \"esad/internal/entity/ad\"\n+\t\"fmt\"\n+\t\"os\"\n+\t\"path/filepath\"\n+\n+\t\"github.com/spf13/cobra\"\n+)\n+\n+const commandDownload = \"download\"\n+\n+//downloadCmd downloads detectors configuration on current working directory\n+//based on detector id or name patter\n+var downloadCmd = &cobra.Command{\n+\tUse:   commandDownload + \" [flags] [list of detectors]\",\n+\tShort: \"Downloads detectors configurations based on id or name pattern\",\n+\tLong: fmt.Sprintf(\"Description:\\n  \" +\n+\t\t`Downloads detectors configurations based on id or name pattern, use \"\" to make sure the name is not matched with pwd lists'`),\n+\tRun: func(cmd *cobra.Command, args []string) {\n+\t\t//If no args, display usage\n+\t\tif len(args) < 1 {\n+\t\t\tdisplayError(cmd.Usage(), commandDownload)\n+\t\t\treturn\n+\t\t}\n+\t\terr := printDetectors(WriteInFile, cmd, args)\n+\t\tdisplayError(err, commandDownload)\n+\t},\n+}\n+\n+//WriteInFile writes detector's configuration on file\n+//file will be created inside current working directory,\n+//with detector name as file name\n+func WriteInFile(d *entity.DetectorOutput) error {\n+\tcwd, err := os.Getwd()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f6437fe80238d4a5c1b35e50f422382d9ee0293"}, "originalPosition": 48}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29f835f7fd12e50d0dbc14d025ed1c573e872ff", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/c29f835f7fd12e50d0dbc14d025ed1c573e872ff", "committedDate": "2020-09-16T22:32:37Z", "message": "CLI: Add interactive to prompt for overwriting files\n\nSimilar to cp from linux, add interactive to allow user to decide\nwhether to overwrite file or not"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ad5d68473814120f0e1c5d93bf6637525dace9", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/41ad5d68473814120f0e1c5d93bf6637525dace9", "committedDate": "2020-09-17T03:49:14Z", "message": "CLI: Allow user to specify output folder path\n\nAdded flag to allow user to specify target location where\ndetectors will be downloaded."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "363e8c78db0c22a91d1b1fac24610def415ab21c", "author": {"user": {"login": "VijayanB", "name": "Vijayan Balasubramanian"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/363e8c78db0c22a91d1b1fac24610def415ab21c", "committedDate": "2020-09-17T17:09:00Z", "message": "CLI: Make download prompt as default\n\nDownload detector will always prompt if there is file\nexists in output directory."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODMzMTQ5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/229#pullrequestreview-490833149", "createdAt": "2020-09-17T17:31:23Z", "commit": {"oid": "363e8c78db0c22a91d1b1fac24610def415ab21c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1540, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}