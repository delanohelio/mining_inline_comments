{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NDE5Nzg0", "number": 287, "title": "Fix for stats API", "bodyText": "Issue #, if available:\nDescription of changes:\nThis PR fixes two issues for the stats API.\nFirst, we didn't propagate multi-entity detectors' models execution exceptions for the remote invocation. \u00a0This problem may impact stats' API ability to report the total failures count and thus hide an issue we should have reported during monitoring. \u00a0This PR fixes the issue by collecting model host nodes' exceptions from coordinating nodes.\nSecond, we didn't show active multi-entity detectors' models information on stats API. \u00a0This PR places this information into stats API output.\nThis PR also adds unit tests for ModelManager.\nTesting done:\n\nadded unit tests\nmanually verified the two issues are resolved.\n\nStats API output after my changes:\n{\n\t\"anomaly_detectors_index_status\": \"green\",\n\t\"anomaly_detection_state_status\": \"green\",\n\t\"detector_count\": 2,\n\t\"anomaly_detection_job_index_status\": \"green\",\n\t\"models_checkpoint_index_status\": \"green\",\n\t\"anomaly_results_index_status\": \"green\",\n\t\"nodes\": {\n\t\t\"-7UJxzZjRbSJ3cKrpd-zoA\": {\n\t\t\t\"ad_execute_request_count\": 0,\n\t\t\t\"ad_execute_failure_count\": 0,\n\t\t\t\"models\": [{\n\t\t\t\t\t\"detector_id\": \"zQ2xTXUBNp5PN4GLXMXm\",\n\t\t\t\t\t\"model_type\": \"rcf\",\n\t\t\t\t\t\"model_id\": \"zQ2xTXUBNp5PN4GLXMXm_model_rcf_2\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_0\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_5\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"9TrCJH8IT5u79LHWJ4QrBQ\": {\n\t\t\t\"ad_execute_request_count\": 0,\n\t\t\t\"ad_execute_failure_count\": 0,\n\t\t\t\"models\": [{\n\t\t\t\t\t\"detector_id\": \"zQ2xTXUBNp5PN4GLXMXm\",\n\t\t\t\t\t\"model_type\": \"rcf\",\n\t\t\t\t\t\"model_id\": \"zQ2xTXUBNp5PN4GLXMXm_model_rcf_1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"zQ2xTXUBNp5PN4GLXMXm\",\n\t\t\t\t\t\"model_type\": \"threshold\",\n\t\t\t\t\t\"model_id\": \"zQ2xTXUBNp5PN4GLXMXm_model_threshold\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_1\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_3\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_2\"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"6y6coqbUSQWyDca3e1mGkw\": {\n\t\t\t\"ad_execute_request_count\": 60,\n\t\t\t\"models\": [{\n\t\t\t\t\t\"detector_id\": \"zQ2xTXUBNp5PN4GLXMXm\",\n\t\t\t\t\t\"model_type\": \"rcf\",\n\t\t\t\t\t\"model_id\": \"zQ2xTXUBNp5PN4GLXMXm_model_rcf_0\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_4\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"detector_id\": \"kw2nTXUBNp5PN4GLucVB\",\n\t\t\t\t\t\"model_type\": \"entity\",\n\t\t\t\t\t\"model_id\": \"kw2nTXUBNp5PN4GLucVB_entity_app_6\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"ad_execute_failure_count\": 1\n\t\t}\n\t}\n}\n\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.", "createdAt": "2020-10-22T16:35:54Z", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287", "merged": true, "mergeCommit": {"oid": "2f182316036f6ee206edd7d6c482f830784f0bff"}, "closed": true, "closedAt": "2020-10-22T22:54:53Z", "author": {"login": "kaituo"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdU5wspAH2gAyNTA4NDE5Nzg0OjI1MWEwZmNmOWYwZjllNWFlNDYxZWQ1YmRkNjIwNGY2ZjM0MWQwZjI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdVKDBoAFqTUxNTE3MzE2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "251a0fcf9f0f9e5ae461ed5bdd6204f6f341d0f2", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/251a0fcf9f0f9e5ae461ed5bdd6204f6f341d0f2", "committedDate": "2020-10-22T03:53:30Z", "message": "Add more tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa50ad5c739e6dc7053429ff4be975fa9db0e577", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/aa50ad5c739e6dc7053429ff4be975fa9db0e577", "committedDate": "2020-10-22T03:53:30Z", "message": "Fix for stats API\n\nThis PR fixes two issues for the stats API.\n\nFirst, we didn't propagate multi-entity detectors' models execution exceptions for the remote invocation. \u00a0This problem may impact stats' API ability to report the total failures count and thus hide an issue we should have reported during monitoring. \u00a0This PR fixes the issue by collecting model host nodes' exceptions from coordinating nodes.\n\nSecond, we didn't show active multi-entity detectors' models information on stats API.\u00a0 This PR places this information into stats API output.\n\nThis PR also adds unit tests for ModelManager.\n\nTesting done:\n1. added unit tests\n2. manually verified the two issues are resolved."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0OTUwMTEx", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287#pullrequestreview-514950111", "createdAt": "2020-10-22T17:14:35Z", "commit": {"oid": "aa50ad5c739e6dc7053429ff4be975fa9db0e577"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoxNDozNVrOHmr6fA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMlQxNzoxNTo1OVrOHmr9yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyNzQyMA==", "bodyText": "Clarification: why does this need to be called if nodeCount = responseCount.incrementAndGet?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287#discussion_r510327420", "createdAt": "2020-10-22T17:14:35Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/transport/AnomalyResultTransportAction.java", "diffHunk": "@@ -1015,18 +1022,47 @@ private void coldStart(AnomalyDetector detector) {\n     class EntityResultListener implements ActionListener<AcknowledgedResponse> {\n         private String nodeId;\n         private final String adID;\n+        private AtomicInteger responseCount;\n+        private int nodeCount;\n+        private ActionListener<AnomalyResultResponse> listener;\n+        private ClientException clientException;\n+        private List<AcknowledgedResponse> ackResponses;\n+        private AtomicReference<AnomalyDetectionException> failure;\n \n-        EntityResultListener(String nodeId, String adID) {\n+        EntityResultListener(\n+            String nodeId,\n+            String adID,\n+            AtomicInteger responseCount,\n+            int nodeCount,\n+            AtomicReference<AnomalyDetectionException> failure,\n+            ActionListener<AnomalyResultResponse> listener\n+        ) {\n             this.nodeId = nodeId;\n             this.adID = adID;\n+            this.responseCount = responseCount;\n+            this.nodeCount = nodeCount;\n+            this.failure = failure;\n+            this.listener = listener;\n+            this.clientException = null;\n+            this.ackResponses = new ArrayList<>();\n         }\n \n         @Override\n         public void onResponse(AcknowledgedResponse response) {\n-            stateManager.resetBackpressureCounter(nodeId);\n-            if (response.isAcknowledged() == false) {\n-                LOG.error(\"Cannot send entities' features to {} for {}\", nodeId, adID);\n-                stateManager.addPressure(nodeId);\n+            try {\n+                stateManager.resetBackpressureCounter(nodeId);\n+                if (response.isAcknowledged() == false) {\n+                    LOG.error(\"Cannot send entities' features to {} for {}\", nodeId, adID);\n+                    stateManager.addPressure(nodeId);\n+                } else {\n+                    ackResponses.add(response);\n+                }\n+            } catch (Exception ex) {\n+                LOG.error(\"Unexpected exception: {} for {}\", ex, adID);\n+            } finally {\n+                if (nodeCount == responseCount.incrementAndGet()) {\n+                    handleEntityException();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa50ad5c739e6dc7053429ff4be975fa9db0e577"}, "originalPosition": 184}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMDMyODI2Nw==", "bodyText": "Just want to confirm: this wont lead to the same model being printed twice correct? Like a model returned from modelManager wont also be returned but the cache, correct?", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287#discussion_r510328267", "createdAt": "2020-10-22T17:15:59Z", "author": {"login": "jmazanec15"}, "path": "src/main/java/com/amazon/opendistroforelasticsearch/ad/stats/suppliers/ModelsOnNodeSupplier.java", "diffHunk": "@@ -45,16 +48,18 @@\n      * Constructor\n      *\n      * @param modelManager object that manages the model partitions hosted on the node\n+     * @param cache object that manages multi-entity detectors' models\n      */\n-    public ModelsOnNodeSupplier(ModelManager modelManager) {\n+    public ModelsOnNodeSupplier(ModelManager modelManager, CacheProvider cache) {\n         this.modelManager = modelManager;\n+        this.cache = cache;\n     }\n \n     @Override\n     public List<Map<String, Object>> get() {\n         List<Map<String, Object>> values = new ArrayList<>();\n-        modelManager\n-            .getAllModels()\n+        Stream\n+            .concat(modelManager.getAllModels().stream(), cache.get().getAllModels().stream())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aa50ad5c739e6dc7053429ff4be975fa9db0e577"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0OTYyMjQ4", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287#pullrequestreview-514962248", "createdAt": "2020-10-22T17:29:48Z", "commit": {"oid": "aa50ad5c739e6dc7053429ff4be975fa9db0e577"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21a8a54623a533ffefa72c72ca110e8368f04ff1", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/21a8a54623a533ffefa72c72ca110e8368f04ff1", "committedDate": "2020-10-22T19:10:28Z", "message": "Rename function"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d27bfb04e9438de9cdf2f330cfce921691bf57c", "author": {"user": {"login": "kaituo", "name": "Kaituo Li"}}, "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/commit/5d27bfb04e9438de9cdf2f330cfce921691bf57c", "committedDate": "2020-10-22T20:33:12Z", "message": "remove unused variable"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE1MTczMTY5", "url": "https://github.com/opendistro-for-elasticsearch/anomaly-detection/pull/287#pullrequestreview-515173169", "createdAt": "2020-10-22T22:52:00Z", "commit": {"oid": "5d27bfb04e9438de9cdf2f330cfce921691bf57c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1401, "cost": 1, "resetAt": "2021-11-01T16:19:10Z"}}}