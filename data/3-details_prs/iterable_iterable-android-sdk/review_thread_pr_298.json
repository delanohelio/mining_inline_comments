{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxMzMzNjcx", "number": 298, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MDo1MFrOFGXWPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNTowMjozMFrOFHBQkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjE4MzAwOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MDo1MFrOIHWEEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MDo1MFrOIHWEEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3MjQzNQ==", "bodyText": "I think this is confusing.. setRequestProcessor(true, context) - for a setter, I'd expect it to take some kind of a RequestProcessor class.. What true means in this case isn't clear. And do we need to pass a Context here?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544572435", "createdAt": "2020-12-16T19:40:50Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -306,6 +306,9 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n             sharedInstance.inAppManager = new IterableInAppManager(sharedInstance, sharedInstance.config.inAppHandler,\n                     sharedInstance.config.inAppDisplayInterval);\n         }\n+        if(sharedInstance.config.offlineProcessing) {\n+            apiClient.setRequestProcessor(true, context);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e174aba83af38daa5b947715de70adfd6084f46"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjE5MjAxOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConfig.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MjozOVrOIHWJLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0MjozOVrOIHWJLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3Mzc0MA==", "bodyText": "This should be package-private for now, since it's not ready for production use yet.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544573740", "createdAt": "2020-12-16T19:42:39Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConfig.java", "diffHunk": "@@ -218,6 +224,16 @@ public Builder setExpiringAuthTokenRefreshPeriod(@NonNull Long period) {\n             return this;\n         }\n \n+        /**\n+         * When set to true, the SDK will capture events when the device goes offline.\n+         * @param offlineProcessing Auth handler provided by the app\n+         */\n+        @NonNull\n+        public Builder setOfflineProcessing(@NonNull boolean offlineProcessing) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e174aba83af38daa5b947715de70adfd6084f46"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjE5NjcyOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo0Mzo1MlrOIHWMBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxOTo1Mzo1MFrOIHWjkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3NDQ3MA==", "bodyText": "Do we need to make this static?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544574470", "createdAt": "2020-12-16T19:43:52Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -48,7 +48,7 @@\n     private String _deviceId;\n     private boolean _firstForegroundHandled;\n \n-    IterableApiClient apiClient = new IterableApiClient(new IterableApiAuthProvider());\n+    static IterableApiClient apiClient = new IterableApiClient(new IterableApiAuthProvider());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3e174aba83af38daa5b947715de70adfd6084f46"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU4MDQ5Ng==", "bodyText": "Couldn't figure out a way around! \ud83d\ude15\nBecause initialize was a good place to setRequestProcessor; and because initialize was static, it was asking to make apiClient as static as well.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544580496", "createdAt": "2020-12-16T19:53:50Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -48,7 +48,7 @@\n     private String _deviceId;\n     private boolean _firstForegroundHandled;\n \n-    IterableApiClient apiClient = new IterableApiClient(new IterableApiAuthProvider());\n+    static IterableApiClient apiClient = new IterableApiClient(new IterableApiAuthProvider());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDU3NDQ3MA=="}, "originalCommit": {"oid": "3e174aba83af38daa5b947715de70adfd6084f46"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMjgyNjE4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjoyNzoxMFrOIHb5wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjoyNzoxMFrOIHb5wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY2ODA5OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        this.requestProcessor = new OfflineRequestProcessor(IterableApi.getInstance().getMainActivityContext());\n          \n          \n            \n                        this.requestProcessor = new OfflineRequestProcessor(authProvider.getContext());", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544668098", "createdAt": "2020-12-16T22:27:10Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "diffHunk": "@@ -46,6 +46,13 @@ private RequestProcessor getRequestProcessor() {\n         return requestProcessor;\n     }\n \n+    void enableOfflineProcessing(boolean offlineMode) {\n+        if (offlineMode) {\n+            this.requestProcessor = new OfflineRequestProcessor(IterableApi.getInstance().getMainActivityContext());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f9118d3b98af774d858aea05a5fc6b6004ece5"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzE5NTY4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyODoxMlrOIHfIEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyODoxMlrOIHfIEg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMDkxNA==", "bodyText": "We don't need to reset apiClient on logout", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544720914", "createdAt": "2020-12-17T00:28:12Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "diffHunk": "@@ -46,6 +46,13 @@ private RequestProcessor getRequestProcessor() {\n         return requestProcessor;\n     }\n \n+    void enableOfflineProcessing(boolean offlineMode) {\n+        if (offlineMode) {\n+            this.requestProcessor = new OfflineRequestProcessor(IterableApi.getInstance().getMainActivityContext());\n+        }\n+        //TODO: if api has to reinitialize, say after logout -> login, should apiClient also reset? In that case, there should be an else here. Or ApiClient should be reset on logout or some place", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f9118d3b98af774d858aea05a5fc6b6004ece5"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzE5NzIzOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyODo1MlrOIHfI9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDoyODo1MlrOIHfI9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMTE0MA==", "bodyText": "setOfflineProcessingEnabled?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544721140", "createdAt": "2020-12-17T00:28:52Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApiClient.java", "diffHunk": "@@ -46,6 +46,13 @@ private RequestProcessor getRequestProcessor() {\n         return requestProcessor;\n     }\n \n+    void enableOfflineProcessing(boolean offlineMode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f9118d3b98af774d858aea05a5fc6b6004ece5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyMzIwMTE4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDozMDoxM1rOIHfLBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDozMDoxM1rOIHfLBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMTY2OQ==", "bodyText": "The condition check is both here and inside enableOfflineProcessing. I think either the method should not have parameters, or we don't need the check here.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r544721669", "createdAt": "2020-12-17T00:30:13Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -306,6 +306,9 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n             sharedInstance.inAppManager = new IterableInAppManager(sharedInstance, sharedInstance.config.inAppHandler,\n                     sharedInstance.config.inAppDisplayInterval);\n         }\n+        if (sharedInstance.config.offlineProcessing) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "07f9118d3b98af774d858aea05a5fc6b6004ece5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQyOTA0OTc3OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableApiTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwNTowMjozMFrOIITOMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwODozODo1N1rOIIYW9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU3NDQ0OQ==", "bodyText": "The test now checks for two things at the same time: that setOfflineProcessingEnabled was called and that no API requests are being made. I think ideally it shouldn't be explicitly checking for setOfflineProcessingEnabled.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r545574449", "createdAt": "2020-12-18T05:02:30Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableApiTest.java", "diffHunk": "@@ -81,9 +82,10 @@ private void reInitIterableApi() {\n \n     @Test\n     public void testSdkInitializedWithoutEmailOrUserId() throws Exception {\n-        IterableApi.initialize(getContext(), \"apiKey\");\n-        IterableApi.getInstance().setEmail(null);\n+        IterableApi.initialize(getContext(), \"testApiKey\");\n+        verify(mockApiClient, times(1)).setOfflineProcessingEnabled(anyBoolean());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9564b3d7c0ed563ab9523cabca6036247a9cc55d"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTY1ODYxMw==", "bodyText": "Using clearInvocation \ud83d\udc4d", "url": "https://github.com/Iterable/iterable-android-sdk/pull/298#discussion_r545658613", "createdAt": "2020-12-18T08:38:57Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableApiTest.java", "diffHunk": "@@ -81,9 +82,10 @@ private void reInitIterableApi() {\n \n     @Test\n     public void testSdkInitializedWithoutEmailOrUserId() throws Exception {\n-        IterableApi.initialize(getContext(), \"apiKey\");\n-        IterableApi.getInstance().setEmail(null);\n+        IterableApi.initialize(getContext(), \"testApiKey\");\n+        verify(mockApiClient, times(1)).setOfflineProcessingEnabled(anyBoolean());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU3NDQ0OQ=="}, "originalCommit": {"oid": "9564b3d7c0ed563ab9523cabca6036247a9cc55d"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2230, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}