{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NTE5ODQ3", "number": 265, "title": "Feature/mob 2006 jwt mobile auth management", "bodyText": "READY\nJwt auth management: https://iterable.quip.com/ZtIfAqGabyXT/Mobile-Auth-Management-Updates", "createdAt": "2020-09-15T19:41:32Z", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265", "merged": true, "mergeCommit": {"oid": "c4c8ef4fee972351fc8eae963ebc291b3ea5bb8d"}, "closed": true, "closedAt": "2020-10-01T00:40:35Z", "author": {"login": "davidtruong"}, "timelineItems": {"totalCount": 58, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdFVv4rAH2gAyNDg3NTE5ODQ3OjQyOWFkZWJhMWE3YjkzYjcwNDA1ZGFhYjdjOWE0MmNhMGRmNzA4Njg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdQrD4jgFqTUwNTI2NzY3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "429adeba1a7b93b70405daab7c9a42ca0df70868", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/429adeba1a7b93b70405daab7c9a42ca0df70868", "committedDate": "2020-09-03T19:27:10Z", "message": "first commit for authManager"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2222dbd6b051f2a0616a9d19f4100c2b0efdd22e", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/2222dbd6b051f2a0616a9d19f4100c2b0efdd22e", "committedDate": "2020-09-03T21:27:27Z", "message": "updated auth token refresh logic"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55ec736006f05ec4822ac52b9b1f767e89e7aa3a", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/55ec736006f05ec4822ac52b9b1f767e89e7aa3a", "committedDate": "2020-09-03T22:14:37Z", "message": "re-request messages on auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e8e896e7f6fc9c7a67210ad002b8e56c6489d172", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e8e896e7f6fc9c7a67210ad002b8e56c6489d172", "committedDate": "2020-09-09T18:41:44Z", "message": "Added stuff for JWT"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "331ab66076fcf2f360dae26273c466bc67a9b878", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/331ab66076fcf2f360dae26273c466bc67a9b878", "committedDate": "2020-09-09T20:18:17Z", "message": "adds authHandler to config and updates for 401 errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8f0e1db73969c56157cff3be2e4f804b53f58609", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/8f0e1db73969c56157cff3be2e4f804b53f58609", "committedDate": "2020-09-09T21:17:34Z", "message": "updated authHandler for tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "116518fb0f50a3ff033121a0e85da7a730352415", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/116518fb0f50a3ff033121a0e85da7a730352415", "committedDate": "2020-09-11T19:56:27Z", "message": "updates the auth manager callbacks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a2c35091502c101e79bfca2391dbfdf39b7c4c4", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/5a2c35091502c101e79bfca2391dbfdf39b7c4c4", "committedDate": "2020-09-14T16:35:26Z", "message": "updated tests for mobile auth management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0874d8993b07776a34b3e4a7317969db79a7425", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/b0874d8993b07776a34b3e4a7317969db79a7425", "committedDate": "2020-09-14T16:44:56Z", "message": "fixed up tests apiAuth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dddac11c0e957945c8bcfb9961444773ee8fe1ce", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/dddac11c0e957945c8bcfb9961444773ee8fe1ce", "committedDate": "2020-09-14T16:50:47Z", "message": "updated case to remove token from test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "57db662db7d00ece8676f258d447302eeb0fe107", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/57db662db7d00ece8676f258d447302eeb0fe107", "committedDate": "2020-09-14T17:23:29Z", "message": "Added test for 401 auth failure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ad748a9c1fd5a13abc9cef7feddf3cbd5721c4", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/04ad748a9c1fd5a13abc9cef7feddf3cbd5721c4", "committedDate": "2020-09-15T18:01:28Z", "message": "Fixes expiration time jwt bug."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "70c47c196345d2cfb21bfdf886f2cda19e0787af", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/70c47c196345d2cfb21bfdf886f2cda19e0787af", "committedDate": "2020-09-16T18:12:34Z", "message": "clean up"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60485386a2a65e1055b8d8d3a7cf752be5af4380", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/60485386a2a65e1055b8d8d3a7cf752be5af4380", "committedDate": "2020-09-16T18:57:16Z", "message": "added queue auth refresh to the initialization of the SDK"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7b0bfc7c3c95232e76a9f09680853317c734ed61", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/7b0bfc7c3c95232e76a9f09680853317c734ed61", "committedDate": "2020-09-16T19:52:53Z", "message": "updated error code for jwt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e58beb52634eec75f5b19a5be6abeaf9f5498433", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e58beb52634eec75f5b19a5be6abeaf9f5498433", "committedDate": "2020-09-16T20:20:06Z", "message": "updated error message for jwt"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed39147f9365d4a7d9120a66919bb4fc14f6fcf3", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/ed39147f9365d4a7d9120a66919bb4fc14f6fcf3", "committedDate": "2020-09-17T19:57:41Z", "message": "updated comments for authHandler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1e0a2ec50e77bdb59ea83fe88494a8f2376e21bd", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/1e0a2ec50e77bdb59ea83fe88494a8f2376e21bd", "committedDate": "2020-09-17T20:02:01Z", "message": "always log in after retrieving a new authToken"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "451615bf5d37d6263e840e69050bc9b6e3463dd3", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/451615bf5d37d6263e840e69050bc9b6e3463dd3", "committedDate": "2020-09-17T20:51:52Z", "message": "MOB-2059 - fixed disableDevice issue to store a reference to the prior auth so the disable request contains the correct auth token since it could be updated in a different thread."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4c5bf3898c3af0995d70fc5508f98c7c051a551d", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/4c5bf3898c3af0995d70fc5508f98c7c051a551d", "committedDate": "2020-09-17T20:58:21Z", "message": "Adds in configurable auth expiration refresh period."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "071a6f53a75a2c39a63197e670400b6f239c5fce", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/071a6f53a75a2c39a63197e670400b6f239c5fce", "committedDate": "2020-09-20T21:36:09Z", "message": "[MOB-2101] - Adding Tests to JWT Auth implementation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ed96a63c2eb77d17dfbae91632c9e5e9ecac921", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/0ed96a63c2eb77d17dfbae91632c9e5e9ecac921", "committedDate": "2020-09-21T21:31:34Z", "message": "updated the tokenRequest call to be async"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1", "committedDate": "2020-09-21T21:32:20Z", "message": "updated tests for async fetch of the token"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTAzMDc4", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-494903078", "createdAt": "2020-09-23T17:48:18Z", "commit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0OTgzNjEw", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-494983610", "createdAt": "2020-09-23T19:30:59Z", "commit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxOTozMDo1OVrOHW93gQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QyMDoxMzoyOFrOHW_RWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0NDM1Mw==", "bodyText": "setAuthToken? I think on* doesn't apply here because it's not an even we do side effects on, but a direct call to set the token.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493844353", "createdAt": "2020-09-23T19:30:59Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -205,6 +219,12 @@ void setNotificationData(IterableNotificationData data) {\n         }\n     }\n \n+    void onSetAuthToken(String authToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0NDU1Nw==", "bodyText": "Do we need to do this if the token is the same as the one we already had?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493844557", "createdAt": "2020-09-23T19:31:24Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -205,6 +219,12 @@ void setNotificationData(IterableNotificationData data) {\n         }\n     }\n \n+    void onSetAuthToken(String authToken) {\n+        _authToken = authToken;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg0NTE0OA==", "bodyText": "Why did you remove this?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493845148", "createdAt": "2020-09-23T19:32:33Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -276,54 +296,21 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n-        setEmail(email, null);\n-    }\n-\n-    /**\n-     * Set user email used for API calls\n-     * Calling this or {@link #setUserId(String)} is required before making any API calls.\n-     *\n-     * Note: This clears userId and persists the user email so you only need to call this once when the user logs in.\n-     * @param email User email\n-     * @param authToken Authorization token\n-     */\n-    void setEmail(@Nullable String email, @Nullable String authToken) {\n-        if (_email != null && _email.equals(email)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg1NDYzOQ==", "bodyText": "Hmm, if we always do the same thing in SuccessAuthHandler, maybe we don't need it, the auth manager could call the method on IterableApi directly to pass the token.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493854639", "createdAt": "2020-09-23T19:49:52Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -332,34 +319,23 @@ public void setUserId(@Nullable String userId) {\n      *\n      * Note: This clears user email and persists the user ID so you only need to call this once when the user logs in.\n      * @param userId User ID\n-     * @param authToken Authorization token\n      */\n-    void setUserId(@Nullable String userId, @Nullable String authToken) {\n-        if (_userId != null && _userId.equals(userId)) {\n-            if (_authToken == null && authToken == null) {\n-                return;\n-            }\n-\n-            if (_authToken != null && _authToken.equals(authToken)) {\n-                return;\n-            }\n-\n-            _authToken = authToken;\n-            storeAuthData();\n-\n-            return;\n-        }\n-\n-        if (_email == null && _userId == null && userId == null) {\n-            return;\n-        }\n-\n+    public void setUserId(@Nullable String userId) {\n         onLogOut();\n         _email = null;\n         _userId = userId;\n-        _authToken = authToken;\n         storeAuthData();\n-        onLogIn();\n+\n+        if (userId != null) {\n+            getAuthManager().requestNewAuthToken(false, new IterableHelper.SuccessAuthHandler() {\n+                @Override\n+                public void onSuccess(@NonNull String authToken) {\n+                    onSetAuthToken(authToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2MTc3NA==", "bodyText": "I think we should just store authToken with email and userId everywhere in this class, to keep it more consistent. Basically, if we're being passed email and userId, authToken should also be there, because it is tightly coupled with email and userId.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493861774", "createdAt": "2020-09-23T20:03:01Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterablePushRegistration.java", "diffHunk": "@@ -41,9 +41,13 @@ protected Void doInBackground(IterablePushRegistrationData... params) {\n                     IterableApi.sharedInstance.disableToken(\n                             iterablePushRegistrationData.email,\n                             iterablePushRegistrationData.userId,\n-                            pushRegistrationObject.token);\n+                            pushRegistrationObject.token,\n+                            null,\n+                            null,\n+                            iterablePushRegistrationData.priorAuthToken", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Mzg2NzM1NQ==", "bodyText": "We're using iterablePushRegistrationData to get the email/userId. Passing priorAuthToken should not be necessary since it's also available in iterablePushRegistrationData.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r493867355", "createdAt": "2020-09-23T20:13:28Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterablePushRegistration.java", "diffHunk": "@@ -97,7 +101,7 @@ private void disableOldDeviceIfNeeded() {\n                             public void onSuccess(@NonNull JSONObject data) {\n                                 sharedPref.edit().putBoolean(IterableConstants.SHARED_PREFS_FCM_MIGRATION_DONE_KEY, true).apply();\n                             }\n-                        }, null);\n+                        }, null, priorAuthToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9c87f7dda9e6994e4a2ede6c1ae1f96ab03891f1"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a16ff86dd1460af0bdb6ae200aaae829b4a16481", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a16ff86dd1460af0bdb6ae200aaae829b4a16481", "committedDate": "2020-09-25T15:14:45Z", "message": "PR fixes for setting the authToken"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5bb3beccabcb0aec45ab2e3a71b869571cafdaf1", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/5bb3beccabcb0aec45ab2e3a71b869571cafdaf1", "committedDate": "2020-09-25T16:13:25Z", "message": "Refactors IterablePushRegistration to always include an authToken for register and disable."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7915b1cd40c9d646d5fff79897df976635d888e5", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/7915b1cd40c9d646d5fff79897df976635d888e5", "committedDate": "2020-09-25T19:04:37Z", "message": "fixed up 401 text for api"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9a85d096311abf3864d527026c502a5bea2d394f", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9a85d096311abf3864d527026c502a5bea2d394f", "committedDate": "2020-09-25T19:24:30Z", "message": "Clear the hasPriorAuth flag on successful api calls."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3acd9067879b5c7cd78fb09d34847778faf72dee", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/3acd9067879b5c7cd78fb09d34847778faf72dee", "committedDate": "2020-09-28T05:59:44Z", "message": "Ignoring test methods to pass the CI\n\nTeam to come up with a new plan for testing auth functionality as idling functions are not helping in auth methods. Have to do research in the meantime."}, "afterCommit": {"oid": "9ec2c7c0d3c52a06f7945d295a1bc384e5dba5b5", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ec2c7c0d3c52a06f7945d295a1bc384e5dba5b5", "committedDate": "2020-09-28T06:12:46Z", "message": "Ignoring test methods to pass the CI\n\n- Team to come up with a new plan for testing auth functionality as idling functions are not helping in auth methods. Have to do research in the meantime.\n- CheckStyle Fix."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/510883b7c8c86d72d8ffa9ff22ae88e3c834536a", "committedDate": "2020-09-28T06:21:01Z", "message": "Ignoring test methods to pass the CI\n\n- Team to come up with a new plan for testing auth functionality as idling functions are not helping in auth methods. Have to do research in the meantime.\n- CheckStyle Fix."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9ec2c7c0d3c52a06f7945d295a1bc384e5dba5b5", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ec2c7c0d3c52a06f7945d295a1bc384e5dba5b5", "committedDate": "2020-09-28T06:12:46Z", "message": "Ignoring test methods to pass the CI\n\n- Team to come up with a new plan for testing auth functionality as idling functions are not helping in auth methods. Have to do research in the meantime.\n- CheckStyle Fix."}, "afterCommit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/510883b7c8c86d72d8ffa9ff22ae88e3c834536a", "committedDate": "2020-09-28T06:21:01Z", "message": "Ignoring test methods to pass the CI\n\n- Team to come up with a new plan for testing auth functionality as idling functions are not helping in auth methods. Have to do research in the meantime.\n- CheckStyle Fix."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MjE0ODU2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-497214856", "createdAt": "2020-09-28T06:23:37Z", "commit": {"oid": "9ec2c7c0d3c52a06f7945d295a1bc384e5dba5b5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjoyMzo1NFrOHYv4cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQwNjoyMzo1NFrOHYv4cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTcxMjM3MQ==", "bodyText": "Note: this code will run in a background thread vs. other places where requestNewAuthToken is generally called from the main thread.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r495712371", "createdAt": "2020-09-28T06:23:54Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableAuthManager.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.iterable.iterableapi;\n+\n+import android.util.Base64;\n+\n+import androidx.annotation.VisibleForTesting;\n+\n+import com.iterable.iterableapi.util.Future;\n+\n+import org.json.JSONObject;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.concurrent.Callable;\n+\n+public class IterableAuthManager {\n+    private static final String TAG = \"IterableAuth\";\n+    private static final String expirationString = \"exp\";\n+\n+    private final IterableApi api;\n+    private final IterableAuthHandler authHandler;\n+    private final long authRefreshPeriod;\n+\n+    @VisibleForTesting\n+    Timer timer;\n+    private boolean hasFailedPriorAuth;\n+\n+    IterableAuthManager(IterableApi api, IterableAuthHandler authHandler, long authRefreshPeriod) {\n+        timer = new Timer(true);\n+        this.api = api;\n+        this.authHandler = authHandler;\n+        this.authRefreshPeriod = authRefreshPeriod;\n+    }\n+\n+    public void requestNewAuthToken(boolean hasFailedPriorAuth) {\n+        if (!this.hasFailedPriorAuth || !hasFailedPriorAuth) {\n+            this.hasFailedPriorAuth = hasFailedPriorAuth;\n+            if (authHandler != null) {\n+                Future.runAsync(new Callable<String>() {\n+                    @Override\n+                    public String call() throws Exception {\n+                        return authHandler.onAuthTokenRequested();\n+                    }\n+                })\n+                .onSuccess(new Future.SuccessCallback<String>() {\n+                    @Override\n+                    public void onSuccess(String authToken) {\n+                        if (authToken != null) {\n+                            queueExpirationRefresh(authToken);\n+                        }\n+                        IterableApi.getInstance().setAuthToken(authToken);\n+                    }\n+                })\n+                .onFailure(new Future.FailureCallback() {\n+                    @Override\n+                    public void onFailure(Throwable throwable) {\n+                        IterableLogger.e(TAG, \"Error while requesting Auth Token\", throwable);\n+                    }\n+                });\n+            } else {\n+                IterableApi.getInstance().setAuthToken(null);\n+            }\n+        }\n+    }\n+\n+    public void queueExpirationRefresh(String encodedJWT) {\n+        long expirationTimeSeconds = decodedExpiration(encodedJWT);\n+        long triggerExpirationRefreshTime = expirationTimeSeconds * 1000L - authRefreshPeriod - IterableUtil.currentTimeMillis();\n+        if (triggerExpirationRefreshTime > 0) {\n+            scheduleAuthTokenRefresh(triggerExpirationRefreshTime);\n+        }\n+    }\n+\n+    void resetFailedAuth() {\n+        hasFailedPriorAuth = false;\n+    }\n+\n+    private void scheduleAuthTokenRefresh(long timeDuration) {\n+        timer.cancel();\n+        timer = new Timer(true);\n+        try {\n+            timer.schedule(new TimerTask() {\n+                @Override\n+                public void run() {\n+                    api.getAuthManager().requestNewAuthToken(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a"}, "originalPosition": 85}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzQyNTk3", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-497742597", "createdAt": "2020-09-28T17:20:37Z", "commit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMDozOFrOHZIUmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMDozOFrOHZIUmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExMjc5NQ==", "bodyText": "@davidtruong It seems like it will request a new token multiple times in parallel if multiple network calls fail in sequence. I think it should only request once and wait until it completes before spawning new requests.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r496112795", "createdAt": "2020-09-28T17:20:38Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableAuthManager.java", "diffHunk": "@@ -0,0 +1,111 @@\n+package com.iterable.iterableapi;\n+\n+import android.util.Base64;\n+\n+import androidx.annotation.VisibleForTesting;\n+\n+import com.iterable.iterableapi.util.Future;\n+\n+import org.json.JSONObject;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.concurrent.Callable;\n+\n+public class IterableAuthManager {\n+    private static final String TAG = \"IterableAuth\";\n+    private static final String expirationString = \"exp\";\n+\n+    private final IterableApi api;\n+    private final IterableAuthHandler authHandler;\n+    private final long authRefreshPeriod;\n+\n+    @VisibleForTesting\n+    Timer timer;\n+    private boolean hasFailedPriorAuth;\n+\n+    IterableAuthManager(IterableApi api, IterableAuthHandler authHandler, long authRefreshPeriod) {\n+        timer = new Timer(true);\n+        this.api = api;\n+        this.authHandler = authHandler;\n+        this.authRefreshPeriod = authRefreshPeriod;\n+    }\n+\n+    public void requestNewAuthToken(boolean hasFailedPriorAuth) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3NzQ0MjY4", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-497744268", "createdAt": "2020-09-28T17:22:55Z", "commit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMjo1NVrOHZIZsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNzoyMjo1NVrOHZIZsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjExNDA5OA==", "bodyText": "What is this line for? Looks like it's only going to be executed if error == null and requestResult.length < 0, which will never be true.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r496114098", "createdAt": "2020-09-28T17:22:55Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -187,6 +192,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                         handleFailure(\"No data received\", jsonResponse);\n                     } else if (error != null) {\n                         handleFailure(error, null);\n+                    } else {\n+                        IterableApi.getInstance().getAuthManager().resetFailedAuth();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "510883b7c8c86d72d8ffa9ff22ae88e3c834536a"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9abbe71e1c8736c1bb92a969ea1cb05da2291ee9", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9abbe71e1c8736c1bb92a969ea1cb05da2291ee9", "committedDate": "2020-09-28T18:55:13Z", "message": "Fix success handler for resetting the authToken failed flag."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7e258718cc104ebb949a52eb8b974d4f1999dd2", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a7e258718cc104ebb949a52eb8b974d4f1999dd2", "committedDate": "2020-09-28T18:56:34Z", "message": "Merge branch 'feature/MOB-2006-jwt-mobile-auth-management' of https://github.com/Iterable/iterable-android-sdk into feature/MOB-2006-jwt-mobile-auth-management"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b19c17de22d0938ffb1c3f3faced83189070de5", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/6b19c17de22d0938ffb1c3f3faced83189070de5", "committedDate": "2020-09-28T20:58:46Z", "message": "pr fixes for jwt pending auth"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b188332ea97ed5287e92b9abd208ecd4ab24375", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/6b188332ea97ed5287e92b9abd208ecd4ab24375", "committedDate": "2020-09-28T21:16:57Z", "message": "Adds in logic to resync the auth token if a new auth request gets triggered while an auth request is in progress"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dbbd307ee3dcee79f59418fbebb735f938e87121", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/dbbd307ee3dcee79f59418fbebb735f938e87121", "committedDate": "2020-09-29T03:12:12Z", "message": "removes extra line call to set authToken"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8aa81e98fe12c501d9c2298243834ca56565574c", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/8aa81e98fe12c501d9c2298243834ca56565574c", "committedDate": "2020-09-29T12:56:56Z", "message": "Minor fix for null checks on the userId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "521d1460555dbc0290dee5d292b3d5fe25da9420", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/521d1460555dbc0290dee5d292b3d5fe25da9420", "committedDate": "2020-09-29T15:07:29Z", "message": "updates decoding for jwt exp to handle errors more clearly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26f3fd2b833115cbe0875e936b3c2d4504073ae6", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/26f3fd2b833115cbe0875e936b3c2d4504073ae6", "committedDate": "2020-09-29T15:08:20Z", "message": "Adds logic to only reAuth automatically if the last pending request was not also a 401."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b4678a0dc24bf59090a6e3b9d34a53f803ea6c8", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/6b4678a0dc24bf59090a6e3b9d34a53f803ea6c8", "committedDate": "2020-09-29T19:18:19Z", "message": "Requests a new Auth token when setEmail/UserId is called."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "090bff97fa9215f6460d4f4f0c347aa6ab0e1d73", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/090bff97fa9215f6460d4f4f0c347aa6ab0e1d73", "committedDate": "2020-09-29T19:57:25Z", "message": "Added in configurable expiringAuthTokenRefreshPeriod to the config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56e195f7b41799381b1bd91560e4a5127b9046c7", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/56e195f7b41799381b1bd91560e4a5127b9046c7", "committedDate": "2020-09-29T20:38:29Z", "message": "Fixes up the auth tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4ODgwMDM2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-498880036", "createdAt": "2020-09-29T20:47:18Z", "commit": {"oid": "56e195f7b41799381b1bd91560e4a5127b9046c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDo0NzoxOFrOHaA-oA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQyMDo0NzoxOFrOHaA-oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzA0MTA1Ng==", "bodyText": "Do we need to request a new token if the email stays the same?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r497041056", "createdAt": "2020-09-29T20:47:18Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -276,30 +298,8 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n-        setEmail(email, null);\n-    }\n-\n-    /**\n-     * Set user email used for API calls\n-     * Calling this or {@link #setUserId(String)} is required before making any API calls.\n-     *\n-     * Note: This clears userId and persists the user email so you only need to call this once when the user logs in.\n-     * @param email User email\n-     * @param authToken Authorization token\n-     */\n-    void setEmail(@Nullable String email, @Nullable String authToken) {\n         if (_email != null && _email.equals(email)) {\n-            if (_authToken == null && authToken == null) {\n-                return;\n-            }\n-\n-            if (_authToken != null && _authToken.equals(authToken)) {\n-                return;\n-            }\n-\n-            _authToken = authToken;\n-            storeAuthData();\n-\n+            getAuthManager().requestNewAuthToken(false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "56e195f7b41799381b1bd91560e4a5127b9046c7"}, "originalPosition": 71}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f661573ebbe5fd64ea9853270d4bd79d784586ab", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f661573ebbe5fd64ea9853270d4bd79d784586ab", "committedDate": "2020-09-29T21:21:00Z", "message": "Does not retrieve a new authToken if the email or userId remains the same."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b62239e0ce9eaf768352328a3ace4b4f7965e7ec", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/b62239e0ce9eaf768352328a3ace4b4f7965e7ec", "committedDate": "2020-09-29T23:36:22Z", "message": "removing flaky test for auth logout"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5MDEwNTM2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-499010536", "createdAt": "2020-09-30T00:23:54Z", "commit": {"oid": "f661573ebbe5fd64ea9853270d4bd79d784586ab"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDoyMzo1NFrOHaJOOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0zMFQwMDoyMzo1NFrOHaJOOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NzE3NjEyMA==", "bodyText": "Thinking if checking email/userId exists can help before assigning the authToken can avoid situation where\n\nValid setEmail was called with email xyz.\nsetEmail (null) got called before getting response to previous one.\n\nBy the time we get response, email could be set to null and we would have received a auth token.\nSaw the test failure and thought could this be a case?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r497176120", "createdAt": "2020-09-30T00:23:54Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableAuthManager.java", "diffHunk": "@@ -0,0 +1,132 @@\n+package com.iterable.iterableapi;\n+\n+import android.util.Base64;\n+\n+import androidx.annotation.VisibleForTesting;\n+\n+import com.iterable.iterableapi.util.Future;\n+\n+import org.json.JSONObject;\n+\n+import java.io.UnsupportedEncodingException;\n+import java.util.Timer;\n+import java.util.TimerTask;\n+import java.util.concurrent.Callable;\n+\n+public class IterableAuthManager {\n+    private static final String TAG = \"IterableAuth\";\n+    private static final String expirationString = \"exp\";\n+\n+    private final IterableApi api;\n+    private final IterableAuthHandler authHandler;\n+    private final long expiringAuthTokenRefreshPeriod;\n+\n+    @VisibleForTesting\n+    Timer timer;\n+    private boolean hasFailedPriorAuth;\n+    private boolean pendingAuth;\n+    private boolean requiresAuthRefresh;\n+\n+    IterableAuthManager(IterableApi api, IterableAuthHandler authHandler, long expiringAuthTokenRefreshPeriod) {\n+        timer = new Timer(true);\n+        this.api = api;\n+        this.authHandler = authHandler;\n+        this.expiringAuthTokenRefreshPeriod = expiringAuthTokenRefreshPeriod;\n+    }\n+\n+    public synchronized void requestNewAuthToken(boolean hasFailedPriorAuth) {\n+        if (authHandler != null) {\n+            if (!pendingAuth) {\n+                if (!(this.hasFailedPriorAuth && hasFailedPriorAuth)) {\n+                    this.hasFailedPriorAuth = hasFailedPriorAuth;\n+                    pendingAuth = true;\n+                    Future.runAsync(new Callable<String>() {\n+                        @Override\n+                        public String call() throws Exception {\n+                            return authHandler.onAuthTokenRequested();\n+                        }\n+                    }).onSuccess(new Future.SuccessCallback<String>() {\n+                        @Override\n+                        public void onSuccess(String authToken) {\n+                            if (authToken != null) {\n+                                queueExpirationRefresh(authToken);\n+                            }\n+                            IterableApi.getInstance().setAuthToken(authToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f661573ebbe5fd64ea9853270d4bd79d784586ab"}, "originalPosition": 54}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65a10fe8d6102b182faf37c251b26dfe989737ce", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/65a10fe8d6102b182faf37c251b26dfe989737ce", "committedDate": "2020-09-30T14:09:09Z", "message": "Explicitly clears the old auth expiration refresh timer. Even if the new JWT is invalid."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1109bab0332c46b13aa1b29e6122841fcf1ceaf", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a1109bab0332c46b13aa1b29e6122841fcf1ceaf", "committedDate": "2020-09-30T14:21:18Z", "message": "Adds additional check not store a retrieved authToken if the current user is not initialized."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "138b3f2dd2e11f7aa1dbf724279bf8dc32f43dfa", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/138b3f2dd2e11f7aa1dbf724279bf8dc32f43dfa", "committedDate": "2020-09-30T14:38:13Z", "message": "skip the flaky api request test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8c0d5c67473e0cf14c0f8aa33d4f93bb3928b55d", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/8c0d5c67473e0cf14c0f8aa33d4f93bb3928b55d", "committedDate": "2020-09-30T20:06:06Z", "message": "Changing config for setExpiringAuthTokenRefreshPeriod to be in seconds."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0", "author": {"user": {"login": "davidtruong", "name": "David Truong"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/2cc5f98008821dde997f4732f692588b8c490ab0", "committedDate": "2020-09-30T20:23:51Z", "message": "Updating style check"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk5ODA1NzU0", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-499805754", "createdAt": "2020-09-30T20:57:10Z", "commit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MjY2NDQz", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-505266443", "createdAt": "2020-10-09T00:29:28Z", "commit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDoyOToyOFrOHe1WqA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDoyOToyOFrOHe1WqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA5MzQ4MA==", "bodyText": "We should not be calling onLogIn() if it's just a token refresh and the email/userId did not change.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r502093480", "createdAt": "2020-10-09T00:29:28Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -205,6 +219,16 @@ void setNotificationData(IterableNotificationData data) {\n         }\n     }\n \n+    void setAuthToken(String authToken) {\n+        if (isInitialized()) {\n+            if (_authToken != authToken) {\n+                _authToken = authToken;\n+                storeAuthData();\n+            }\n+            onLogIn();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MjY3Njc1", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#pullrequestreview-505267675", "createdAt": "2020-10-09T00:30:11Z", "commit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDozMDoxMVrOHe1XZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQwMDozMDoxMVrOHe1XZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA5MzY2OQ==", "bodyText": "This is doing object comparison instead of string comparison, this will be false for identical strings if they're not the same object.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/265#discussion_r502093669", "createdAt": "2020-10-09T00:30:11Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -205,6 +219,16 @@ void setNotificationData(IterableNotificationData data) {\n         }\n     }\n \n+    void setAuthToken(String authToken) {\n+        if (isInitialized()) {\n+            if (_authToken != authToken) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2cc5f98008821dde997f4732f692588b8c490ab0"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 526, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}