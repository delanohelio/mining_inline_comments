{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMzAzODI4", "number": 244, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozNTo0NVrOELElJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozOTowM1rOELEnmA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ0ODM5OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozNTo0NVrOGseyiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNjo0ODowNFrOGtfUaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NDk4Nw==", "bodyText": "Even after login if we haven't initialized, shouldn\u2019t we attempt to initialize??", "url": "https://github.com/Iterable/iterable-android-sdk/pull/244#discussion_r449294987", "createdAt": "2020-07-02T22:35:45Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -1328,13 +1328,22 @@ private void retrieveEmailAndUserId() {\n     }\n \n     private void onLogOut() {\n-        if (config.autoPushRegistration && isInitialized()) {\n+        if (!isInitialized()) {\n+            return;\n+        }\n+\n+        if (config.autoPushRegistration) {\n             disablePush();\n         }\n+        getInAppManager().reset();\n     }\n \n     private void onLogIn() {\n-        if (config.autoPushRegistration && isInitialized()) {\n+        if (!isInitialized()) {\n+            return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb02c1699670800de502e3eccdde6149be7ea840"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM1MjIzNQ==", "bodyText": "Here is the code for isInitialized():\n    private boolean isInitialized() {\n        return _apiKey != null && (_email != null || _userId != null);\n    }\n\nBasically, if there is no email or userId, there is no user to operate with.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/244#discussion_r450352235", "createdAt": "2020-07-06T16:48:04Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -1328,13 +1328,22 @@ private void retrieveEmailAndUserId() {\n     }\n \n     private void onLogOut() {\n-        if (config.autoPushRegistration && isInitialized()) {\n+        if (!isInitialized()) {\n+            return;\n+        }\n+\n+        if (config.autoPushRegistration) {\n             disablePush();\n         }\n+        getInAppManager().reset();\n     }\n \n     private void onLogIn() {\n-        if (config.autoPushRegistration && isInitialized()) {\n+        if (!isInitialized()) {\n+            return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NDk4Nw=="}, "originalCommit": {"oid": "fb02c1699670800de502e3eccdde6149be7ea840"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ1Mjg3OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozNzo0MVrOGse0-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzowODo1MVrOGtgB4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NTYxMQ==", "bodyText": "Feels like reset name should be for something which is resetting everything...\nMay be more specific name like clearAllMessagesFromLocalStorage()", "url": "https://github.com/Iterable/iterable-android-sdk/pull/244#discussion_r449295611", "createdAt": "2020-07-02T22:37:41Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java", "diffHunk": "@@ -167,6 +167,20 @@ public void execute(String payload) {\n         });\n     }\n \n+    /**\n+     * Clear all in-app messages.\n+     * Should be called on user logout.\n+     */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb02c1699670800de502e3eccdde6149be7ea840"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM2Mzg3NQ==", "bodyText": "I'm mirroring the name in iOS for consistency.. Technically it does reset everything in the in-app manager.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/244#discussion_r450363875", "createdAt": "2020-07-06T17:08:51Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppManager.java", "diffHunk": "@@ -167,6 +167,20 @@ public void execute(String payload) {\n         });\n     }\n \n+    /**\n+     * Clear all in-app messages.\n+     * Should be called on user logout.\n+     */", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NTYxMQ=="}, "originalCommit": {"oid": "fb02c1699670800de502e3eccdde6149be7ea840"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMDQ1NDY0OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableInAppManagerTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozOTowM1rOGse2Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozOTowM1rOGse2Kg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5NTkxNA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Iterable/iterable-android-sdk/pull/244#discussion_r449295914", "createdAt": "2020-07-02T22:39:03Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableInAppManagerTest.java", "diffHunk": "@@ -150,6 +150,20 @@ public void testSyncInApp() throws Exception {\n         assertEquals(\"Q19mD2NlQUnxnmSGuQu9ujzkKR6c12TogeaGA29\", inAppManager.getMessages().get(0).getMessageId());\n     }\n \n+    @Test\n+    public void testReset() throws Exception {\n+        dispatcher.enqueueResponse(\"/inApp/getMessages\", new MockResponse().setBody(IterableTestUtils.getResourceString(\"inapp_payload_single.json\")));\n+        IterableInAppManager inAppManager = IterableApi.getInstance().getInAppManager();\n+        assertEquals(0, inAppManager.getMessages().size());\n+\n+        inAppManager.syncInApp();\n+        Robolectric.flushBackgroundThreadScheduler();\n+        Robolectric.flushForegroundThreadScheduler();\n+        assertEquals(1, inAppManager.getMessages().size());\n+        inAppManager.reset();\n+        assertEquals(0, inAppManager.getMessages().size());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fb02c1699670800de502e3eccdde6149be7ea840"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2287, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}