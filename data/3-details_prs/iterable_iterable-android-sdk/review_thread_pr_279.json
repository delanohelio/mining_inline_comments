{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1ODEwODc1", "number": 279, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxMjoyMVrOE3xZZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0Nzo0M1rOE3yWbw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTE2NDU0OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjoxMjoyMVrOHxT6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQwNToyODozM1rOH2NToA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2ODQ5Nw==", "bodyText": "indentation", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r521468497", "createdAt": "2020-11-11T16:12:21Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -62,13 +59,20 @@\n \n //region Constructor\n //---------------------------------------------------------------------------------------\n-    IterableApi() {\n+IterableApi() {\n+    config = new IterableConfig.Builder().build();\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNjYwMzE2OA==", "bodyText": "Huh.. looks like an IntelliJ/Android Studio formatter bug.. It forced this indentation until I added an empty line above.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r526603168", "createdAt": "2020-11-19T05:28:33Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -62,13 +59,20 @@\n \n //region Constructor\n //---------------------------------------------------------------------------------------\n-    IterableApi() {\n+IterableApi() {\n+    config = new IterableConfig.Builder().build();\n+}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ2ODQ5Nw=="}, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTMyMDY5OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0Nzo0MVrOHxVdGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNDoxNTo0OVrOHyZQOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5Mzc4Nw==", "bodyText": "Can checkSDKInitialization be also refactored somehow?\nIts been called at start of many Api calls...", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r521493787", "createdAt": "2020-11-11T16:47:41Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -474,23 +481,7 @@ public void track(@NonNull String eventName, int campaignId, int templateId, @Nu\n             return;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 75}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjYwNDYwMg==", "bodyText": "Hmm, I don't think so... short of doing OOP shenanigans with an interface and 'initialized' and 'non-initialized' implementations.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r522604602", "createdAt": "2020-11-13T04:15:49Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -474,23 +481,7 @@ public void track(@NonNull String eventName, int campaignId, int templateId, @Nu\n             return;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5Mzc4Nw=="}, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 75}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTMyMDc5OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxNjo0Nzo0M1rOHxVdLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xM1QwNDoxMzozN1rOHyZIyA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MzgwNQ==", "bodyText": "Wondering what would be a good case where IterableApi itself is initializing and IterableInAppManager wont be null? \ud83e\udd14", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r521493805", "createdAt": "2020-11-11T16:47:43Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -296,7 +301,9 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n         sharedInstance.checkForDeferredDeeplink();\n         IterableActivityMonitor.getInstance().registerLifecycleCallbacks(context);\n         IterableActivityMonitor.getInstance().addCallback(sharedInstance.activityMonitorListener);\n-        sharedInstance.inAppManager = new IterableInAppManager(sharedInstance, sharedInstance.config.inAppHandler, sharedInstance.config.inAppDisplayInterval);\n+        if (sharedInstance.inAppManager == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMjYwMjY5Ng==", "bodyText": "There is a special constructor for tests where you can inject an inAppManager instance.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/279#discussion_r522602696", "createdAt": "2020-11-13T04:13:37Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -296,7 +301,9 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n         sharedInstance.checkForDeferredDeeplink();\n         IterableActivityMonitor.getInstance().registerLifecycleCallbacks(context);\n         IterableActivityMonitor.getInstance().addCallback(sharedInstance.activityMonitorListener);\n-        sharedInstance.inAppManager = new IterableInAppManager(sharedInstance, sharedInstance.config.inAppHandler, sharedInstance.config.inAppDisplayInterval);\n+        if (sharedInstance.inAppManager == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTQ5MzgwNQ=="}, "originalCommit": {"oid": "05838e96feb4fda9c95865f78d9cccbc7171518f"}, "originalPosition": 68}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2204, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}