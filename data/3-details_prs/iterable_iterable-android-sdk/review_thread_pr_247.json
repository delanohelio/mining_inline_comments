{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ3NDgwMjAw", "number": 247, "reviewThreads": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToxMVrOENcuPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo0NjoxN1rOERkoww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTM1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/androidTest/java/com/iterable/iterableapi/IterableApiResponseTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToxMVrOGwI05Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMTozMDo1NVrOGw6nOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ0NQ==", "bodyText": "For now we just made the test pass by adding null. Actual test for authToken is missing.\nIf not in this ticket, we can have a seperate ticket for adding tests to this method.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129445", "createdAt": "2020-07-11T00:19:11Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/androidTest/java/com/iterable/iterableapi/IterableApiResponseTest.java", "diffHunk": "@@ -220,7 +220,7 @@ public void testConnectionError() throws Exception {\n         MockResponse response = new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_DURING_REQUEST_BODY);\n         server.enqueue(response);\n \n-        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, new IterableHelper.FailureHandler() {\n+        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, null, new IterableHelper.FailureHandler() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0NTE0NA==", "bodyText": "Ticket created", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453945144", "createdAt": "2020-07-13T21:30:55Z", "author": {"login": "roninopf"}, "path": "iterableapi/src/androidTest/java/com/iterable/iterableapi/IterableApiResponseTest.java", "diffHunk": "@@ -220,7 +220,7 @@ public void testConnectionError() throws Exception {\n         MockResponse response = new MockResponse().setSocketPolicy(SocketPolicy.DISCONNECT_DURING_REQUEST_BODY);\n         server.enqueue(response);\n \n-        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, new IterableHelper.FailureHandler() {\n+        IterableApiRequest request = new IterableApiRequest(\"fake_key\", \"\", new JSONObject(), IterableApiRequest.POST, null, null, new IterableHelper.FailureHandler() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ0NQ=="}, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTUxOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToyMlrOGwI0_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToyMlrOGwI0_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ2OA==", "bodyText": "authToken instead of token", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129468", "createdAt": "2020-07-11T00:19:22Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -275,6 +276,18 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n+        setEmail(email, null);\n+    }\n+\n+    /**\n+     * Set user email used for API calls\n+     * Calling this or `setUserId:` is required before making any API calls.\n+     *\n+     * Note: This clears userId and persists the user email so you only need to call this once when the user logs in.\n+     * @param email User email\n+     * @param authToken Authorization token\n+     */\n+    public void setEmail(@Nullable String email, @Nullable String token) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 23}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTU4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToyNlrOGwI1Bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOToyNlrOGwI1Bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ3OQ==", "bodyText": "authToken instead of token", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129479", "createdAt": "2020-07-11T00:19:26Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -298,6 +312,18 @@ public void setEmail(@Nullable String email) {\n      * @param userId User ID\n      */\n     public void setUserId(@Nullable String userId) {\n+        setUserId(userId, null);\n+    }\n+\n+    /**\n+     * Set user ID used for API calls\n+     * Calling this or `setEmail:` is required before making any API calls.\n+     *\n+     * Note: This clears user email and persists the user ID so you only need to call this once when the user logs in.\n+     * @param userId User ID\n+     * @param authToken Authorization token\n+     */\n+    public void setUserId(@Nullable String userId, @Nullable String token) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTY2OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTozM1rOGwI1FA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMToyNjoyNVrOGw6ezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ5Mg==", "bodyText": "Never saw space in constant before. If its intentional, we just need to be aware of this.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129492", "createdAt": "2020-07-11T00:19:33Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -18,6 +18,8 @@\n     public static final String HEADER_API_KEY           = \"Api-Key\";\n     public static final String HEADER_SDK_PLATFORM      = \"SDK-Platform\";\n     public static final String HEADER_SDK_VERSION       = \"SDK-Version\";\n+    public static final String HEADER_SDK_AUTHORIZATION = \"Authorization\";\n+    public static final String HEADER_SDK_AUTH_FORMAT   = \"Bearer \";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk0Mjk4OQ==", "bodyText": "Yep, it's intentional", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453942989", "createdAt": "2020-07-13T21:26:25Z", "author": {"login": "roninopf"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -18,6 +18,8 @@\n     public static final String HEADER_API_KEY           = \"Api-Key\";\n     public static final String HEADER_SDK_PLATFORM      = \"SDK-Platform\";\n     public static final String HEADER_SDK_VERSION       = \"SDK-Version\";\n+    public static final String HEADER_SDK_AUTHORIZATION = \"Authorization\";\n+    public static final String HEADER_SDK_AUTH_FORMAT   = \"Bearer \";", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTQ5Mg=="}, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTc0OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTozNlrOGwI1Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTozNlrOGwI1Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwMg==", "bodyText": "authToken instead of token in method Signature", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129502", "createdAt": "2020-07-11T00:19:36Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTc1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTozN1rOGwI1IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTozN1rOGwI1IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwNQ==", "bodyText": "authToken instead of token in the method signature.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129505", "createdAt": "2020-07-11T00:19:37Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = baseUrl;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgyNTM3NTc3OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTo0MVrOGwI1JA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xMVQwMDoxOTo0MVrOGwI1JA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MzEyOTUwOA==", "bodyText": "At several places, method signature have token while others have authToken. authToken everywhere will be great", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453129508", "createdAt": "2020-07-11T00:19:41Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -287,37 +291,41 @@ protected void setRetryCount(int count) {\n     final String resourcePath;\n     final JSONObject json;\n     final String requestType;\n+    final String authToken;\n \n     IterableHelper.IterableActionHandler legacyCallback;\n     IterableHelper.SuccessHandler successCallback;\n     IterableHelper.FailureHandler failureCallback;\n \n-    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String baseUrl, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = baseUrl;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, IterableHelper.SuccessHandler onSuccess, IterableHelper.FailureHandler onFailure) {\n         this.apiKey = apiKey;\n         this.baseUrl = null;\n         this.resourcePath = resourcePath;\n         this.json = json;\n         this.requestType = requestType;\n+        this.authToken = token;\n         this.successCallback = onSuccess;\n         this.failureCallback = onFailure;\n     }\n \n-    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, final IterableHelper.IterableActionHandler callback) {\n+    IterableApiRequest(String apiKey, String resourcePath, JSONObject json, String requestType, String token, final IterableHelper.IterableActionHandler callback) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7935107e18976c2534bb51d003cec2bb49cc7fc6"}, "originalPosition": 53}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzMTQ1NDQ1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMjo0MDo0NFrOGw9Ojw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xM1QyMjo0MDo0NFrOGw9Ojw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1Mzk4Nzk4Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r453987983", "createdAt": "2020-07-13T22:40:44Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -376,15 +403,15 @@ public boolean isIterableIntent(@Nullable Intent intent) {\n      * Make sure {@link IterableConfig#pushIntegrationName} is set before calling this.\n      * @param token Push token obtained from GCM or FCM\n      */\n-    public void registerDeviceToken(@NonNull String token) {\n-        registerDeviceToken(_email, _userId, getPushIntegrationName(), token, deviceAttributes);\n+    public void registerDeviceToken(@NonNull String deviceToken) {\n+        registerDeviceToken(_email, _userId, getPushIntegrationName(), deviceToken, deviceAttributes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80f6681d90bbfb69fa7fd61f2a263e253ded3651"}, "originalPosition": 73}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgzNTA0Njk4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowMzo0OVrOGxfL1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xNFQxODowMzo0OVrOGxfL1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NDU0NDM0MA==", "bodyText": "@roninopf Can you verify this with a test api call?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r454544340", "createdAt": "2020-07-14T18:03:49Z", "author": {"login": "davidtruong"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -83,6 +83,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "80f6681d90bbfb69fa7fd61f2a263e253ded3651"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIwMzU4OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowODowMlrOG0Xb-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowODowMlrOG0Xb-w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2MzEzMQ==", "bodyText": "setUserId: is an iOS syntax.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457563131", "createdAt": "2020-07-20T17:08:02Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -275,6 +276,18 @@ public static void initialize(@NonNull Context context, @NonNull String apiKey,\n      * @param email User email\n      */\n     public void setEmail(@Nullable String email) {\n+        setEmail(email, null);\n+    }\n+\n+    /**\n+     * Set user email used for API calls\n+     * Calling this or `setUserId:` is required before making any API calls.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIwNzEyOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowOTowOFrOG0XePw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzowOTowOFrOG0XePw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2MzcxMQ==", "bodyText": "Same as above", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457563711", "createdAt": "2020-07-20T17:09:08Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -298,6 +312,18 @@ public void setEmail(@Nullable String email) {\n      * @param userId User ID\n      */\n     public void setUserId(@Nullable String userId) {\n+        setUserId(userId, null);\n+    }\n+\n+    /**\n+     * Set user ID used for API calls\n+     * Calling this or `setEmail:` is required before making any API calls.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIxNTE0OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMToxOFrOG0Xi_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMToxOFrOG0Xi_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NDkyNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);\n          \n          \n            \n                                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT + iterableApiRequest.authToken);", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457564924", "createdAt": "2020-07-20T17:11:18Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -84,6 +84,10 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n \n+                    if (iterableApiRequest.authToken != null) {\n+                        urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIxNjM1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMTozM1rOG0Xjpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMTozM1rOG0Xjpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTA5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);\n          \n          \n            \n                                urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT + iterableApiRequest.authToken);", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457565095", "createdAt": "2020-07-20T17:11:33Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -100,6 +104,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken\n+                    urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_AUTHORIZATION, IterableConstants.HEADER_SDK_AUTH_FORMAT+iterableApiRequest.authToken);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIxOTMyOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMjoxOVrOG0XlUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODowNToyNFrOG0Zctw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTUyMg==", "bodyText": "I think it is better to insert it conditionally, like above for GET, otherwise it looks like the request is trying to authenticate and passes an empty token.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457565522", "createdAt": "2020-07-20T17:12:19Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -100,6 +104,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU5NjA4Nw==", "bodyText": "Whoops! I forgot this. Will add.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457596087", "createdAt": "2020-07-20T18:05:24Z", "author": {"login": "roninopf"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableRequest.java", "diffHunk": "@@ -100,6 +104,8 @@ protected String doInBackground(IterableApiRequest... params) {\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_API_KEY, iterableApiRequest.apiKey);\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_PLATFORM, \"Android\");\n                     urlConnection.setRequestProperty(IterableConstants.HEADER_SDK_VERSION, IterableConstants.ITBL_KEY_SDK_VERSION_NUMBER);\n+                    //TODO: check if this is okay to pass in a null value to the authToken", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NTUyMg=="}, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTIyNDUzOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMzo0OVrOG0Xohw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzoxMzo0OVrOG0Xohw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU2NjM0Mw==", "bodyText": "What do you think about SHARED_PREFS_AUTH_TOKEN_KEY? AUTHTOKEN seems a bit hard to read to me.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457566343", "createdAt": "2020-07-20T17:13:49Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -95,6 +97,7 @@\n     public static final String SHARED_PREFS_EMAIL_KEY = \"itbl_email\";\n     public static final String SHARED_PREFS_USERID_KEY = \"itbl_userid\";\n     public static final String SHARED_PREFS_DEVICEID_KEY = \"itbl_deviceid\";\n+    public static final String SHARED_PREFS_AUTHTOKEN_KEY = \"itbl_authtoken\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "019a4939bdabee4c08bbd8fe098a81098b95ea38"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTYwNzg1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTowMToxM1rOG0bVgA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxOTo1OTo0MFrOG0dN0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAwOA==", "bodyText": "lol", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457627008", "createdAt": "2020-07-20T19:01:13Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -309,15 +335,16 @@ public void setUserId(@Nullable String userId) {\n         onLogOut();\n         _email = null;\n         _userId = userId;\n-        storeEmailAndUserId();\n+        _authToken = authToken;\n+        storeAuthData();\n         onLogIn();\n     }\n \n     /**\n      * Tracks a click on the uri if it is an iterable link.\n      * @param uri the\n      * @param onCallback Calls the callback handler with the destination location\n-     *                   or the original url if it is not a interable link.\n+     *                   or the original url if it is not a Iterable link.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1d8fc647f2eeb604c110973a30a64162ef229c9"}, "originalPosition": 83}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY1NzgwOA==", "bodyText": "I realized I missed an \"an\" in there too ;)", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r457657808", "createdAt": "2020-07-20T19:59:40Z", "author": {"login": "roninopf"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -309,15 +335,16 @@ public void setUserId(@Nullable String userId) {\n         onLogOut();\n         _email = null;\n         _userId = userId;\n-        storeEmailAndUserId();\n+        _authToken = authToken;\n+        storeAuthData();\n         onLogIn();\n     }\n \n     /**\n      * Tracks a click on the uri if it is an iterable link.\n      * @param uri the\n      * @param onCallback Calls the callback handler with the destination location\n-     *                   or the original url if it is not a interable link.\n+     *                   or the original url if it is not a Iterable link.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYyNzAwOA=="}, "originalCommit": {"oid": "a1d8fc647f2eeb604c110973a30a64162ef229c9"}, "originalPosition": 83}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg2ODYxNTA3OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo0NjoxN1rOG2XLXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yM1QxODo1MDoyOFrOG2XUig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NjAyOA==", "bodyText": "@davidtruong @Ayyanchira @roninopf Looks like this breaks the public API. We should fix this before shipping a release.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r459656028", "createdAt": "2020-07-23T18:46:17Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -499,17 +526,28 @@ public void trackPurchase(double total, @NonNull List<CommerceItem> items, @Null\n      * @param newEmail New email\n      */\n     public void updateEmail(final @NonNull String newEmail) {\n-        updateEmail(newEmail, null, null);\n+        updateEmail(newEmail, null, null, null);\n     }\n \n     /**\n      * Updates the current user's email.\n-     * Also updates the current email in this IterableAPI instance if the API call was successful.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n+     * @param newEmail New email\n+     * @param authToken Authorization token\n+     */\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken) {\n+        updateEmail(newEmail, authToken, null, null);\n+    }\n+\n+    /**\n+     * Updates the current user's email.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n      * @param newEmail New email\n+     * @param authToken\n      * @param successHandler Success handler. Called when the server returns a success code.\n      * @param failureHandler Failure handler. Called when the server call failed.\n      */\n-    public void updateEmail(final @NonNull String newEmail, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70daeeb860779876ed1fc861b517689d77ea920c"}, "originalPosition": 136}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1ODM3OA==", "bodyText": "We'll need to include another updateEmail overload with (new email, on success, on failure) for backwards compatability.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/247#discussion_r459658378", "createdAt": "2020-07-23T18:50:28Z", "author": {"login": "davidtruong"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableApi.java", "diffHunk": "@@ -499,17 +526,28 @@ public void trackPurchase(double total, @NonNull List<CommerceItem> items, @Null\n      * @param newEmail New email\n      */\n     public void updateEmail(final @NonNull String newEmail) {\n-        updateEmail(newEmail, null, null);\n+        updateEmail(newEmail, null, null, null);\n     }\n \n     /**\n      * Updates the current user's email.\n-     * Also updates the current email in this IterableAPI instance if the API call was successful.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n+     * @param newEmail New email\n+     * @param authToken Authorization token\n+     */\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken) {\n+        updateEmail(newEmail, authToken, null, null);\n+    }\n+\n+    /**\n+     * Updates the current user's email.\n+     * Also updates the current email and authToken in this IterableAPI instance if the API call was successful.\n      * @param newEmail New email\n+     * @param authToken\n      * @param successHandler Success handler. Called when the server returns a success code.\n      * @param failureHandler Failure handler. Called when the server call failed.\n      */\n-    public void updateEmail(final @NonNull String newEmail, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {\n+    public void updateEmail(final @NonNull String newEmail, final @Nullable String authToken, final @Nullable IterableHelper.SuccessHandler successHandler, @Nullable IterableHelper.FailureHandler failureHandler) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1OTY1NjAyOA=="}, "originalCommit": {"oid": "70daeeb860779876ed1fc861b517689d77ea920c"}, "originalPosition": 136}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2292, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}