{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQxNDAxNjkw", "number": 299, "title": "[MOB-2446] - Online vs Offline handling", "bodyText": "\ud83d\udd39 Jira Ticket(s) if any\nhttps://iterable.atlassian.net/browse/MOB-2446\n\u270f\ufe0f Description\n\nAdded hashset of strings for all offline api\nPassing request to task schedular only if requests are there in hashset\nadded a constructor for testing purpose.\nAdded test method to check if api's are handled correctly", "createdAt": "2020-12-16T19:51:22Z", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299", "merged": true, "mergeCommit": {"oid": "dbe17bf930c556551d3cd7a27cc92b4af17880f9"}, "closed": true, "closedAt": "2020-12-19T01:01:29Z", "author": {"login": "Ayyanchira"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdm0193AH2gAyNTQxNDAxNjkwOmY3OWJkM2Q0NzY4OTQwNDE4ZWQzZmY2YjM1Y2E5ZWEyY2U3NGZhZTk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdnhd6IgFqTU1NTg5MTUwMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "committedDate": "2020-12-16T20:20:22Z", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b218d7ca2d4a0fd57dfc5451fe8df531efd5a1e0", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/b218d7ca2d4a0fd57dfc5451fe8df531efd5a1e0", "committedDate": "2020-12-16T19:49:49Z", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly"}, "afterCommit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9", "committedDate": "2020-12-16T20:20:22Z", "message": "[MOB-2446] - Online vs Offline handling\n\n1. Added hashset of strings for all offline api\n2. Passing request to task schedular only if requests are there in hashset\n3. added a constructor for testing purpose.\n4. Added test method to check if api's are handled correctly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTIyODcz", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-554122873", "createdAt": "2020-12-16T22:05:56Z", "commit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjowNTo1NlrOIHbNOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjowNTo1NlrOIHbNOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY1NjY5Nw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n          \n          \n            \n                private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544656697", "createdAt": "2020-12-16T22:05:56Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    Set<String> offlineApiSet = new HashSet<>(Arrays.asList(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9"}, "originalPosition": 17}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c5edd95583b8e82456f6a692ff11983a015fded8", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/c5edd95583b8e82456f6a692ff11983a015fded8", "committedDate": "2020-12-16T22:36:55Z", "message": "Update iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTQ2NzEx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-554146711", "createdAt": "2020-12-16T22:46:29Z", "commit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjo0NjoyOVrOIHchkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQyMjo0NjoyOVrOIHchkg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDY3ODI5MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public void testAllOfflineApisUseTaskSchedular() {\n          \n          \n            \n                public void testAllOfflineApisUseTaskScheduler() {", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544678290", "createdAt": "2020-12-16T22:46:29Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.times;\n+import static org.mockito.Mockito.verify;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private IterableTaskStorage mockTaskStorage;\n+\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskStorage = mock(IterableTaskStorage.class);\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(getContext(), mockTaskStorage, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(1)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskStorage, times(0)).createTask(IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, IterableTaskType.API, request.toJSONObject().toString());\n+    }\n+\n+    @Test\n+    public void testAllOfflineApisUseTaskSchedular() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f79bd3d4768940418ed3ff6b35ca9ea2ce74fae9"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU0MTkzMjcx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-554193271", "createdAt": "2020-12-17T00:31:27Z", "commit": {"oid": "c5edd95583b8e82456f6a692ff11983a015fded8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDozMToyOFrOIHfMsg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xN1QwMDozMToyOFrOIHfMsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDcyMjA5OA==", "bodyText": "You can inject just taskRunner and taskScheduler as dependencies, skipping storage.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r544722098", "createdAt": "2020-12-17T00:31:28Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -5,22 +5,42 @@\n import androidx.annotation.MainThread;\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n+import androidx.annotation.VisibleForTesting;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n+import java.util.Arrays;\n import java.util.HashMap;\n+import java.util.HashSet;\n+import java.util.Set;\n \n class OfflineRequestProcessor implements RequestProcessor {\n     private TaskScheduler taskScheduler;\n     private IterableTaskRunner taskRunner;\n+    private static final Set<String> offlineApiSet = new HashSet<>(Arrays.asList(\n+            IterableConstants.ENDPOINT_TRACK,\n+            IterableConstants.ENDPOINT_TRACK_PUSH_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_PURCHASE,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_OPEN,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLICK,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_CLOSE,\n+            IterableConstants.ENDPOINT_TRACK_INBOX_SESSION,\n+            IterableConstants.ENDPOINT_TRACK_INAPP_DELIVERY,\n+            IterableConstants.ENDPOINT_INAPP_CONSUME));\n \n     OfflineRequestProcessor(Context context) {\n         IterableTaskStorage taskStorage = IterableTaskStorage.sharedInstance(context);\n         taskRunner = new IterableTaskRunner(taskStorage, IterableActivityMonitor.getInstance());\n         taskScheduler = new TaskScheduler(taskStorage, taskRunner);\n     }\n \n+    @VisibleForTesting\n+    OfflineRequestProcessor(Context context, IterableTaskStorage storage, IterableTaskRunner iterableTaskRunner) {\n+        taskRunner = iterableTaskRunner;\n+        taskScheduler = new TaskScheduler(storage, taskRunner);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c5edd95583b8e82456f6a692ff11983a015fded8"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1MTUzMjUx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-555153251", "createdAt": "2020-12-18T03:42:13Z", "commit": {"oid": "984190b63fa5eff5960af379cead01e038198f03"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzo0MjoxM1rOIIR9Xw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQwMzo0NDowM1rOIIR_Qw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1Mzc1OQ==", "bodyText": "What are these logging lines for? It seems like they are not part of the test logic.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545553759", "createdAt": "2020-12-18T03:42:13Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984190b63fa5eff5960af379cead01e038198f03"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NTU1NDI0Mw==", "bodyText": "Why PUSH_DISABLE_AFTER_REGISTRATION? Non-offline endpoint constant would fit better here I think..", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r545554243", "createdAt": "2020-12-18T03:44:03Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,73 @@\n+package com.iterable.iterableapi;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.Nullable;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONException;\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, new IterableHelper.SuccessHandler() {\n+            @Override\n+            public void onSuccess(@NonNull JSONObject data) {\n+                IterableLogger.v(\"OfflineRequestProcessorTest\", \"OnSuccess callback executed\");\n+            }\n+        }, new IterableHelper.FailureHandler() {\n+            @Override\n+            public void onFailure(@NonNull String reason, @Nullable JSONObject data) {\n+                IterableLogger.e(\"OfflineRequestProcessorTest\", \"OnFailure callback executed\");\n+            }\n+        });\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), any(IterableHelper.SuccessHandler.class), any(IterableHelper.FailureHandler.class));\n+    }\n+\n+    @Test\n+    public void testNonOfflineRequestIsNotStored() throws JSONException {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.PUSH_DISABLE_AFTER_REGISTRATION, new JSONObject(), \"POST\", null, null, null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984190b63fa5eff5960af379cead01e038198f03"}, "originalPosition": 52}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "984190b63fa5eff5960af379cead01e038198f03", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/984190b63fa5eff5960af379cead01e038198f03", "committedDate": "2020-12-17T23:55:53Z", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly"}, "afterCommit": {"oid": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "committedDate": "2020-12-18T08:54:50Z", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "committedDate": "2020-12-18T08:58:43Z", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/3cd6cb1ab1a3f9cb754ad6a5e67689a03b003769", "committedDate": "2020-12-18T08:54:50Z", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers"}, "afterCommit": {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a6b8d8d546465ef7275a43d24a0fa0b27de7bd08", "committedDate": "2020-12-18T08:58:43Z", "message": "Revision 1\n\n1. Constructor made for test now takes Schedular instead of Storage class.\n2. Updated the test methods accordingly\n3. Updated test method to have more compact logic and appropriate argumentsMatchers"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODg0MTI5", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-555884129", "createdAt": "2020-12-18T23:46:20Z", "commit": {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzo0NjoyMFrOII2UVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xOFQyMzo0NjoyMFrOII2UVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NjE0OTQ2Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());\n          \n          \n            \n                    verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), isNull(IterableHelper.SuccessHandler.class), isNull(IterableHelper.FailureHandler.class));", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#discussion_r546149462", "createdAt": "2020-12-18T23:46:20Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package com.iterable.iterableapi;\n+\n+import com.iterable.iterableapi.unit.TestRunner;\n+\n+import org.json.JSONObject;\n+import org.junit.Before;\n+import org.junit.Test;\n+import org.junit.runner.RunWith;\n+\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.ArgumentMatchers.any;\n+import static org.mockito.ArgumentMatchers.isNull;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.verifyNoInteractions;\n+\n+@RunWith(TestRunner.class)\n+public class OfflineRequestProcessorTest extends BaseTest {\n+    private OfflineRequestProcessor offlineRequestProcessor;\n+    private IterableTaskRunner mockTaskRunner;\n+    private TaskScheduler mockTaskScheduler;\n+\n+    @Before\n+    public void setUp() {\n+        mockTaskRunner = mock(IterableTaskRunner.class);\n+        mockTaskScheduler = mock(TaskScheduler.class);\n+        offlineRequestProcessor = new OfflineRequestProcessor(mockTaskScheduler, mockTaskRunner);\n+    }\n+\n+    @Test\n+    public void testOfflineRequestIsStored() {\n+        IterableApiRequest request = new IterableApiRequest(\"apiKey\", IterableConstants.ENDPOINT_TRACK_INAPP_CLICK, new JSONObject(), \"POST\", null, null, null);\n+        offlineRequestProcessor.processPostRequest(request.apiKey, request.resourcePath, request.json, request.authToken, request.successCallback, request.failureCallback);\n+        verify(mockTaskScheduler).scheduleTask(any(IterableApiRequest.class), (IterableHelper.SuccessHandler) isNull(), (IterableHelper.FailureHandler) isNull());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a6b8d8d546465ef7275a43d24a0fa0b27de7bd08"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ef2b682b1efde952ad97f728336043423bdb7ab", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/9ef2b682b1efde952ad97f728336043423bdb7ab", "committedDate": "2020-12-18T23:51:38Z", "message": "Update iterableapi/src/test/java/com/iterable/iterableapi/OfflineRequestProcessorTest.java\n\nCo-authored-by: Victor Babenko <victor@iterable.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTU1ODkxNTAx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/299#pullrequestreview-555891501", "createdAt": "2020-12-19T00:19:49Z", "commit": {"oid": "9ef2b682b1efde952ad97f728336043423bdb7ab"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 576, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}