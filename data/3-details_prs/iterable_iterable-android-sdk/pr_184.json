{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NjI5MzEy", "number": 184, "title": "[MOB-1003] Inbox Customization", "bodyText": "", "createdAt": "2020-01-24T00:20:39Z", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184", "merged": true, "mergeCommit": {"oid": "77783252ee6c3dd2187098cb61d71fbe017b3bcc"}, "closed": true, "closedAt": "2020-01-31T00:43:58Z", "author": {"login": "vbabenkoru"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb9mGh3AFqTM0ODI0Mzc4Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_g7K6gFqTM1MTEzNDA3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjQzNzgy", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-348243782", "createdAt": "2020-01-24T21:47:50Z", "commit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0Nzo1MFrOFhrU_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMTo0Nzo1MFrOFhrU_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg1NzIxNQ==", "bodyText": "filter.filter is very confusing.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r370857215", "createdAt": "2020-01-24T21:47:50Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxAdapter.java", "diffHunk": "@@ -178,8 +193,16 @@ public int hashCode() {\n     private List<InboxRow> inboxRowListFromInboxMessages(List<IterableInAppMessage> messages) {\n         ArrayList<InboxRow> inboxRows = new ArrayList<>(messages.size());\n         for (IterableInAppMessage message : messages) {\n-            inboxRows.add(new InboxRow(message));\n+            if (filter.filter(message)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "originalPosition": 96}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4MjUxOTY2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-348251966", "createdAt": "2020-01-24T22:06:04Z", "commit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNjowNFrOFhrt0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yNFQyMjowNjowNFrOFhrt0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MDg2MzU2OA==", "bodyText": "Just a thought : A filter applies per message while a comparator is something which needs to be set only once for entire set of messages.\nHow would it look like if we then pass the comparator to IterableInboxFragment and not have interface approach there? may be like this.setComparator(comparator)?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r370863568", "createdAt": "2020-01-24T22:06:04Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxAdapter.java", "diffHunk": "@@ -178,8 +193,16 @@ public int hashCode() {\n     private List<InboxRow> inboxRowListFromInboxMessages(List<IterableInAppMessage> messages) {\n         ArrayList<InboxRow> inboxRows = new ArrayList<>(messages.size());\n         for (IterableInAppMessage message : messages) {\n-            inboxRows.add(new InboxRow(message));\n+            if (filter.filter(message)) {\n+                inboxRows.add(new InboxRow(message));\n+            }\n         }\n+        Collections.sort(inboxRows, new Comparator<InboxRow>() {\n+            @Override\n+            public int compare(InboxRow o1, InboxRow o2) {\n+                return comparator.compare(o1.message, o2.message);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "originalPosition": 103}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTE3NjMy", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-348917632", "createdAt": "2020-01-27T19:29:12Z", "commit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyOToxMlrOFiOt8A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOToyOToxMlrOFiOt8A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQzNzA0MA==", "bodyText": "Does Android support @FunctionalInterface?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r371437040", "createdAt": "2020-01-27T19:29:12Z", "author": {"login": "tapashmajumder"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxFilter.java", "diffHunk": "@@ -0,0 +1,9 @@\n+package com.iterable.iterableapi.ui.inbox;\n+\n+import android.support.annotation.NonNull;\n+\n+import com.iterable.iterableapi.IterableInAppMessage;\n+\n+public interface IterableInboxFilter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4OTIxNTM5", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-348921539", "createdAt": "2020-01-27T19:35:29Z", "commit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTozNToyOVrOFiO6ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxOTozNToyOVrOFiO6ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTQ0MDI1MQ==", "bodyText": "Just curious. Not a comment. This seems to be too verbose. Does Android support lambda expressions.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r371440251", "createdAt": "2020-01-27T19:35:29Z", "author": {"login": "tapashmajumder"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxAdapter.java", "diffHunk": "@@ -178,8 +193,16 @@ public int hashCode() {\n     private List<InboxRow> inboxRowListFromInboxMessages(List<IterableInAppMessage> messages) {\n         ArrayList<InboxRow> inboxRows = new ArrayList<>(messages.size());\n         for (IterableInAppMessage message : messages) {\n-            inboxRows.add(new InboxRow(message));\n+            if (filter.filter(message)) {\n+                inboxRows.add(new InboxRow(message));\n+            }\n         }\n+        Collections.sort(inboxRows, new Comparator<InboxRow>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024"}, "originalPosition": 100}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5c86cdb3e81b1848d1161b4399a1aecec0f6a024", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/5c86cdb3e81b1848d1161b4399a1aecec0f6a024", "committedDate": "2020-01-24T00:19:25Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}, "afterCommit": {"oid": "d205c8f680c468eb8d7433d108b2b672c8e2fbd6", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/d205c8f680c468eb8d7433d108b2b672c8e2fbd6", "committedDate": "2020-01-29T20:39:59Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d205c8f680c468eb8d7433d108b2b672c8e2fbd6", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/d205c8f680c468eb8d7433d108b2b672c8e2fbd6", "committedDate": "2020-01-29T20:39:59Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}, "afterCommit": {"oid": "23eaf1cf7cc20616736af73002d0a8b0def197ca", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/23eaf1cf7cc20616736af73002d0a8b0def197ca", "committedDate": "2020-01-30T00:18:55Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/b0921c06e5dea38b817bd5d96ee5a7002203842b", "committedDate": "2020-01-30T00:43:56Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "23eaf1cf7cc20616736af73002d0a8b0def197ca", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/23eaf1cf7cc20616736af73002d0a8b0def197ca", "committedDate": "2020-01-30T00:18:55Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}, "afterCommit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/b0921c06e5dea38b817bd5d96ee5a7002203842b", "committedDate": "2020-01-30T00:43:56Z", "message": "Add an adapter extension, comparator and filter to customize Inbox"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDQzMzg5", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-351043389", "createdAt": "2020-01-30T18:26:02Z", "commit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoyNjowM1rOFj1OIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODoyNjowM1rOFj1OIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzExNjQ1MA==", "bodyText": "Not sure, but will there be scenario where adaptor values need to be changed without destroying it?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r373116450", "createdAt": "2020-01-30T18:26:03Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxAdapter.java", "diffHunk": "@@ -19,21 +19,28 @@\n \n import java.text.DateFormat;\n import java.util.ArrayList;\n+import java.util.Collections;\n+import java.util.Comparator;\n import java.util.Date;\n import java.util.List;\n \n public class IterableInboxAdapter extends RecyclerView.Adapter<IterableInboxAdapter.ViewHolder> {\n \n     private static final String TAG = \"IterableInboxAdapter\";\n-    private final @LayoutRes int itemLayoutId;\n+\n+    private final @NonNull OnListInteractionListener listener;\n+    private final @NonNull IterableInboxAdapterExtension extension;\n+    private final @NonNull IterableInboxComparator comparator;\n+    private final @NonNull IterableInboxFilter filter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMDYzMjYy", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-351063262", "createdAt": "2020-01-30T18:57:03Z", "commit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo1NzowM1rOFj2LPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQxODo1NzowM1rOFj2LPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzEzMjA5NQ==", "bodyText": "Now I second on moving to Kotlin \ud83d\ude01", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r373132095", "createdAt": "2020-01-30T18:57:03Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxAdapter.java", "diffHunk": "@@ -44,28 +51,50 @@ public void onClick(View v) {\n         }\n     };\n \n+    @Override\n+    public int getItemViewType(int position) {\n+        return extension.getItemViewType(inboxItems.get(position).message);\n+    }\n+\n     @NonNull\n     @Override\n     public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\n-        View view = LayoutInflater.from(parent.getContext()).inflate(itemLayoutId, parent, false);\n-        return new ViewHolder(view);\n+        View view = LayoutInflater.from(parent.getContext()).inflate(extension.getLayoutForViewType(viewType), parent, false);\n+        return new ViewHolder(view, extension.createViewHolderExtension(view, viewType));\n     }\n \n     @Override\n     public void onBindViewHolder(@NonNull ViewHolder holder, int position) {\n         InboxRow inboxRow = inboxItems.get(position);\n         IterableInAppMessage.InboxMetadata inboxMetadata = inboxRow.inboxMetadata;\n-        holder.title.setText(inboxMetadata.title);\n-        holder.subtitle.setText(inboxMetadata.subtitle);\n-        BitmapLoader.loadBitmap(holder.icon, Uri.parse(inboxMetadata.icon));\n-        if (inboxRow.isRead) {\n-            holder.unreadIndicator.setVisibility(View.INVISIBLE);\n-        } else {\n-            holder.unreadIndicator.setVisibility(View.VISIBLE);\n+\n+        if (holder.title != null) {\n+            holder.title.setText(inboxMetadata.title);\n+        }\n+\n+        if (holder.subtitle != null) {\n+            holder.subtitle.setText(inboxMetadata.subtitle);\n         }\n-        holder.date.setText(formatDate(inboxRow.createdAt));\n+\n+        if (holder.icon != null) {\n+            BitmapLoader.loadBitmap(holder.icon, Uri.parse(inboxMetadata.icon));\n+        }\n+\n+        if (holder.unreadIndicator != null) {\n+            if (inboxRow.isRead) {\n+                holder.unreadIndicator.setVisibility(View.INVISIBLE);\n+            } else {\n+                holder.unreadIndicator.setVisibility(View.VISIBLE);\n+            }\n+        }\n+\n+        if (holder.date != null) {\n+            holder.date.setText(formatDate(inboxRow.createdAt));\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "originalPosition": 97}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTAzOTc1", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-351103975", "createdAt": "2020-01-30T20:00:52Z", "commit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDowMDo1MlrOFj4JfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMFQyMDowMDo1MlrOFj4JfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzE2NDQxMg==", "bodyText": "message2 compareTo message1 can help us get rid of the minus(-) prefix", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#discussion_r373164412", "createdAt": "2020-01-30T20:00:52Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi-ui/src/main/java/com/iterable/iterableapi/ui/inbox/IterableInboxFragment.java", "diffHunk": "@@ -148,35 +193,65 @@ public void onListItemTapped(IterableInAppMessage message) {\n     }\n \n     @Override\n-    public void onListItemDeleted(IterableInAppMessage message, IterableInAppDeleteActionType source) {\n+    public void onListItemDeleted(@NonNull IterableInAppMessage message, @NonNull IterableInAppDeleteActionType source) {\n         IterableApi.getInstance().getInAppManager().removeMessage(message, source, IterableInAppLocation.INBOX);\n     }\n \n     @Override\n-    public void onListItemImpressionStarted(IterableInAppMessage message) {\n+    public void onListItemImpressionStarted(@NonNull IterableInAppMessage message) {\n         sessionManager.onMessageImpressionStarted(message);\n     }\n \n     @Override\n-    public void onListItemImpressionEnded(IterableInAppMessage message) {\n+    public void onListItemImpressionEnded(@NonNull IterableInAppMessage message) {\n         sessionManager.onMessageImpressionEnded(message);\n     }\n \n-    public InboxMode getInboxMode() {\n-        return inboxMode;\n+    /**\n+     * Default implementation of the adapter extension. Does nothing other than returning\n+     * the value of {@link IterableInboxFragment#itemLayoutId} for the view layout\n+     */\n+    private class DefaultAdapterExtension implements IterableInboxAdapterExtension<Object> {\n+        @Override\n+        public int getItemViewType(@NonNull IterableInAppMessage message) {\n+            return 0;\n+        }\n+\n+        @Override\n+        public int getLayoutForViewType(int viewType) {\n+            return itemLayoutId;\n+        }\n+\n+        @Nullable\n+        @Override\n+        public Object createViewHolderExtension(@NonNull View view, int viewType) {\n+            return null;\n+        }\n+\n+        @Override\n+        public void onBindViewHolder(@NonNull IterableInboxAdapter.ViewHolder viewHolder, @Nullable Object holderExtension, @NonNull IterableInAppMessage message) {\n+\n+        }\n     }\n \n-    public void setInboxMode(InboxMode inboxMode) {\n-        this.inboxMode = inboxMode;\n+    /**\n+     * Default implementation of the comparator: descending by creation date\n+     */\n+    private static class DefaultInboxComparator implements IterableInboxComparator {\n+        @Override\n+        public int compare(@NonNull IterableInAppMessage message1, @NonNull IterableInAppMessage message2) {\n+            return -message1.getCreatedAt().compareTo(message2.getCreatedAt());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "originalPosition": 151}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUxMTM0MDcx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/184#pullrequestreview-351134071", "createdAt": "2020-01-30T20:53:45Z", "commit": {"oid": "b0921c06e5dea38b817bd5d96ee5a7002203842b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 590, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}