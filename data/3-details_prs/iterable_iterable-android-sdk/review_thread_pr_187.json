{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY4ODAzNzE1", "number": 187, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDo0NjoxOFrODcGzuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDo0NjoxOFrODcGzuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMwNzk4MjY3OnYy", "diffSide": "RIGHT", "path": "app/src/androidTest/java/com/iterable/iterableapi/MainActivityTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMDo0NjoxOFrOFj-i_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0zMVQwMTowMjowOFrOFj-yXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2OTI0Nw==", "bodyText": "Do we need the commented out lines for the TODO work?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/187#discussion_r373269247", "createdAt": "2020-01-31T00:46:18Z", "author": {"login": "vbabenkoru"}, "path": "app/src/androidTest/java/com/iterable/iterableapi/MainActivityTest.java", "diffHunk": "@@ -200,6 +206,32 @@ public void checkIfMessageShownAsPopUp() throws Exception {\n         onWebView().withElement(findElement(Locator.XPATH, \"//*[contains(text(),'Ok, got it')]\"));\n     }\n \n+    @Test\n+    public void testSwipeToDeleteInApp() throws Exception {\n+        //TODO: Add check to see if removeMessage method was triggered using spy objects. Somehow it(the commented code below) is failing in Travis environment. Mostly because the espresso continues before the background tasks are completed.\n+        JSONObject payload = new JSONObject(IterableTestUtils.getResourceString(\"editable_get_messages_response.json\"));\n+        getTwoValidOneExpiredMessage(payload);\n+        dispatcher.enqueueResponse(\"/inApp/getMessages\", new MockResponse().setBody(payload.toString()));\n+        //IterableInAppManager spyInAppManager = Mockito.spy(IterableApi.getInstance().getInAppManager());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a045c624d7d64a6211a7e19c3feee79d54c5c459"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI3MzE4MQ==", "bodyText": "For quick look during test day. We can remove it too...", "url": "https://github.com/Iterable/iterable-android-sdk/pull/187#discussion_r373273181", "createdAt": "2020-01-31T01:02:08Z", "author": {"login": "Ayyanchira"}, "path": "app/src/androidTest/java/com/iterable/iterableapi/MainActivityTest.java", "diffHunk": "@@ -200,6 +206,32 @@ public void checkIfMessageShownAsPopUp() throws Exception {\n         onWebView().withElement(findElement(Locator.XPATH, \"//*[contains(text(),'Ok, got it')]\"));\n     }\n \n+    @Test\n+    public void testSwipeToDeleteInApp() throws Exception {\n+        //TODO: Add check to see if removeMessage method was triggered using spy objects. Somehow it(the commented code below) is failing in Travis environment. Mostly because the espresso continues before the background tasks are completed.\n+        JSONObject payload = new JSONObject(IterableTestUtils.getResourceString(\"editable_get_messages_response.json\"));\n+        getTwoValidOneExpiredMessage(payload);\n+        dispatcher.enqueueResponse(\"/inApp/getMessages\", new MockResponse().setBody(payload.toString()));\n+        //IterableInAppManager spyInAppManager = Mockito.spy(IterableApi.getInstance().getInAppManager());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MzI2OTI0Nw=="}, "originalCommit": {"oid": "a045c624d7d64a6211a7e19c3feee79d54c5c459"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2246, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}