{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4NDk3NTkz", "number": 296, "title": "[MOB-2372][2] Implement IterableTaskRunner", "bodyText": "\ud83d\udd39 Jira Ticket(s) if any\n\nMOB-2372\n\n\u270f\ufe0f Description\nPart 2 of MOB-2372. Implements IterableTaskRunner that doesn't detect network yet, but runs in a background thread and executes all requests directly.\nFor next steps, needs:\n\ncallback handling (unless we only send requests that don't need callbacks)\nnetwork detection", "createdAt": "2020-12-12T21:35:29Z", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296", "merged": true, "mergeCommit": {"oid": "065fa813f8ff84c9f69b0d4db31b28b15ef84bd2"}, "closed": true, "closedAt": "2020-12-15T19:57:07Z", "author": {"login": "vbabenkoru"}, "timelineItems": {"totalCount": 17, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdljsLhABqjQxMDQ5Mzk0ODc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmdc9RAFqTU1MjY3NjI4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e6818d72a2e81c3068f1b150d46574997a5fd984", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e6818d72a2e81c3068f1b150d46574997a5fd984", "committedDate": "2020-12-12T21:33:20Z", "message": "Implement lazy instantiation for RequestProcessor"}, "afterCommit": {"oid": "ab338c3e6b490c103e1d66a88d9df07758809f3e", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/ab338c3e6b490c103e1d66a88d9df07758809f3e", "committedDate": "2020-12-12T21:47:13Z", "message": "Implement lazy instantiation for RequestProcessor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "710ab7e5fb356f15becb4f68aa27917685461a8e", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/710ab7e5fb356f15becb4f68aa27917685461a8e", "committedDate": "2020-12-13T03:52:41Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}, "afterCommit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/003bf4ebf3a62749d5efac801b31366c1edb2532", "committedDate": "2020-12-13T03:54:45Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwOTQ2NzQ3", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-550946747", "createdAt": "2020-12-13T18:31:23Z", "commit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozMToyNFrOIE3wig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozMToyNFrOIE3wig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3ODc2Mg==", "bodyText": "Yeah.. this is the delete I was initially talking about.\nShould the delete operation happen here? Or should we move it to taskCompletion handler?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#discussion_r541978762", "createdAt": "2020-12-13T18:31:24Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.iterable.iterableapi;\n+\n+import android.os.Handler;\n+import android.os.HandlerThread;\n+import android.os.Message;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import org.json.JSONObject;\n+\n+class IterableTaskRunner implements IterableTaskStorage.TaskCreatedListener, Handler.Callback {\n+    private static final String TAG = \"IterableTaskRunner\";\n+    private IterableTaskStorage taskStorage;\n+    private IterableActivityMonitor activityMonitor;\n+\n+    private static final int OPERATION_PROCESS_TASKS = 100;\n+\n+    private final HandlerThread networkThread = new HandlerThread(\"NetworkThread\");\n+    Handler handler;\n+\n+    IterableTaskRunner(IterableTaskStorage taskStorage, IterableActivityMonitor activityMonitor) {\n+        this.taskStorage = taskStorage;\n+        this.activityMonitor = activityMonitor;\n+\n+        networkThread.start();\n+        handler = new Handler(networkThread.getLooper(), this);\n+        taskStorage.addTaskCreatedListener(this);\n+    }\n+\n+    @Override\n+    public void onTaskCreated(IterableTask iterableTask) {\n+        runNow();\n+    }\n+\n+    private void runNow() {\n+        handler.removeCallbacksAndMessages(this);\n+        handler.sendEmptyMessage(OPERATION_PROCESS_TASKS);\n+    }\n+\n+    @WorkerThread\n+    @Override\n+    public boolean handleMessage(@NonNull Message msg) {\n+        if (msg.what == OPERATION_PROCESS_TASKS) {\n+            processTasks();\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @WorkerThread\n+    private void processTasks() {\n+        while (true) {\n+            boolean proceed = processNextTask();\n+            if (!proceed) {\n+                break;\n+            }\n+        }\n+    }\n+\n+    @WorkerThread\n+    private boolean processNextTask() {\n+        IterableTask task = taskStorage.nextTask();\n+\n+        if (task == null) {\n+            return false;\n+        }\n+\n+        if (task.taskType == IterableTaskType.API) {\n+            try {\n+                IterableApiRequest request = IterableApiRequest.fromJSON(new JSONObject(task.data), null, null);\n+                IterableApiResponse response = IterableRequestTask.executeApiRequest(request);\n+            } catch (Exception e) {\n+                IterableLogger.e(TAG, \"Error while processing request task\", e);\n+            }\n+            taskStorage.deleteTask(task.id);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532"}, "originalPosition": 76}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwOTQ2ODY4", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-550946868", "createdAt": "2020-12-13T18:32:48Z", "commit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozMjo0OFrOIE3xpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozMjo0OFrOIE3xpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3OTA0Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#discussion_r541979046", "createdAt": "2020-12-13T18:32:48Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -1,38 +1,50 @@\n package com.iterable.iterableapi;\n \n+import android.content.Context;\n+\n import androidx.annotation.NonNull;\n import androidx.annotation.Nullable;\n \n import org.json.JSONException;\n import org.json.JSONObject;\n \n-import java.util.ArrayList;\n import java.util.HashMap;\n \n class OfflineRequestProcessor implements RequestProcessor {\n+    private TaskScheduler taskScheduler;\n+    private IterableTaskRunner taskRunner;\n \n+    OfflineRequestProcessor(Context context) {\n+        IterableTaskStorage taskStorage = IterableTaskStorage.sharedInstance(context);\n+        taskScheduler = new TaskScheduler(taskStorage);\n+        taskRunner = new IterableTaskRunner(taskStorage, IterableActivityMonitor.getInstance());\n+    }\n \n     @Override\n     public void processGetRequest(@Nullable String apiKey, @NonNull String resourcePath, @NonNull JSONObject json, String authToken, @Nullable IterableHelper.IterableActionHandler onCallback) {\n-        //Invoke taskScheduler and add task to database\n+        // Call GET requests directly, without using the queue\n+        IterableApiRequest request = new IterableApiRequest(apiKey, resourcePath, json, IterableApiRequest.GET, authToken, onCallback);\n+        new IterableRequestTask().execute(request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwOTQ2OTM3", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-550946937", "createdAt": "2020-12-13T18:33:36Z", "commit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f66eba7583582c21b7b230ba3e213bbacc49ad37", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f66eba7583582c21b7b230ba3e213bbacc49ad37", "committedDate": "2020-12-15T04:50:32Z", "message": "Inject dependencies into TaskScheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "303b430224285664cd98cfb75050ade172fb3892", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/303b430224285664cd98cfb75050ade172fb3892", "committedDate": "2020-12-15T04:50:32Z", "message": "Add TaskCreatedListener to subscribe to new tasks"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d55698a7c5d4c2d84bfaffcd7f67d1a40d3eecca", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/d55698a7c5d4c2d84bfaffcd7f67d1a40d3eecca", "committedDate": "2020-12-15T04:50:32Z", "message": "Execute GET requests directly, without using the queue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c753dc0e57702993391d09ef16c21aa4c16bcb76", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/c753dc0e57702993391d09ef16c21aa4c16bcb76", "committedDate": "2020-12-15T04:51:20Z", "message": "Implement IterableTaskRunner\n\nCurrently no network detection, just direct execution on a background thread"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c63566589a19f951ed86a5ac5451dfc7ba63fe4e", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/c63566589a19f951ed86a5ac5451dfc7ba63fe4e", "committedDate": "2020-12-15T04:51:20Z", "message": "Implement lazy instantiation for RequestProcessor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "003bf4ebf3a62749d5efac801b31366c1edb2532", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/003bf4ebf3a62749d5efac801b31366c1edb2532", "committedDate": "2020-12-13T03:54:45Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}, "afterCommit": {"oid": "22c23540ee1066c905be49ba498232a267d89e59", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/22c23540ee1066c905be49ba498232a267d89e59", "committedDate": "2020-12-15T04:51:20Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "22c23540ee1066c905be49ba498232a267d89e59", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/22c23540ee1066c905be49ba498232a267d89e59", "committedDate": "2020-12-15T04:51:20Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}, "afterCommit": {"oid": "f82435906aa2fa803436b8c35b65eaee2f984f48", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f82435906aa2fa803436b8c35b65eaee2f984f48", "committedDate": "2020-12-15T04:53:31Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f9a8208cb556781ad784bab12a3c4d12a0b53b87", "committedDate": "2020-12-15T04:54:23Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f82435906aa2fa803436b8c35b65eaee2f984f48", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f82435906aa2fa803436b8c35b65eaee2f984f48", "committedDate": "2020-12-15T04:53:31Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}, "afterCommit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87", "author": {"user": {"login": "vbabenkoru", "name": "Victor Babenko"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f9a8208cb556781ad784bab12a3c4d12a0b53b87", "committedDate": "2020-12-15T04:54:23Z", "message": "Add tests for IterableTaskRunner and TaskScheduler"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjU1NTA3", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-552655507", "createdAt": "2020-12-15T16:43:45Z", "commit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0Mzo0NlrOIGVA0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0Mzo0NlrOIGVA0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNjY0MA==", "bodyText": "May be we can also think of some name for this method too...\nnotifyTaskListener/ notifyHandler/ handleCallBackAndMessage", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#discussion_r543506640", "createdAt": "2020-12-15T16:43:46Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.iterable.iterableapi;\n+\n+import android.os.Handler;\n+import android.os.HandlerThread;\n+import android.os.Message;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import org.json.JSONObject;\n+\n+class IterableTaskRunner implements IterableTaskStorage.TaskCreatedListener, Handler.Callback {\n+    private static final String TAG = \"IterableTaskRunner\";\n+    private IterableTaskStorage taskStorage;\n+    private IterableActivityMonitor activityMonitor;\n+\n+    private static final int OPERATION_PROCESS_TASKS = 100;\n+\n+    private final HandlerThread networkThread = new HandlerThread(\"NetworkThread\");\n+    Handler handler;\n+\n+    IterableTaskRunner(IterableTaskStorage taskStorage, IterableActivityMonitor activityMonitor) {\n+        this.taskStorage = taskStorage;\n+        this.activityMonitor = activityMonitor;\n+\n+        networkThread.start();\n+        handler = new Handler(networkThread.getLooper(), this);\n+        taskStorage.addTaskCreatedListener(this);\n+    }\n+\n+    @Override\n+    public void onTaskCreated(IterableTask iterableTask) {\n+        runNow();\n+    }\n+\n+    private void runNow() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjc0NjI3", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-552674627", "createdAt": "2020-12-15T17:03:27Z", "commit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowMzoyN1rOIGWBIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzowMzoyN1rOIGWBIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyMzEwNA==", "bodyText": "Thinking of a condition here... If in some case, our getNextScheduledTask fails to create a Task (because of improper data) and returns null, other entries in DB wont get a chance to run at all and we might not delete the one causing problem.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#discussion_r543523104", "createdAt": "2020-12-15T17:03:27Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.iterable.iterableapi;\n+\n+import android.os.Handler;\n+import android.os.HandlerThread;\n+import android.os.Message;\n+\n+import androidx.annotation.NonNull;\n+import androidx.annotation.WorkerThread;\n+\n+import org.json.JSONObject;\n+\n+class IterableTaskRunner implements IterableTaskStorage.TaskCreatedListener, Handler.Callback {\n+    private static final String TAG = \"IterableTaskRunner\";\n+    private IterableTaskStorage taskStorage;\n+    private IterableActivityMonitor activityMonitor;\n+\n+    private static final int OPERATION_PROCESS_TASKS = 100;\n+\n+    private final HandlerThread networkThread = new HandlerThread(\"NetworkThread\");\n+    Handler handler;\n+\n+    IterableTaskRunner(IterableTaskStorage taskStorage, IterableActivityMonitor activityMonitor) {\n+        this.taskStorage = taskStorage;\n+        this.activityMonitor = activityMonitor;\n+\n+        networkThread.start();\n+        handler = new Handler(networkThread.getLooper(), this);\n+        taskStorage.addTaskCreatedListener(this);\n+    }\n+\n+    @Override\n+    public void onTaskCreated(IterableTask iterableTask) {\n+        runNow();\n+    }\n+\n+    private void runNow() {\n+        handler.removeCallbacksAndMessages(this);\n+        handler.sendEmptyMessage(OPERATION_PROCESS_TASKS);\n+    }\n+\n+    @WorkerThread\n+    @Override\n+    public boolean handleMessage(@NonNull Message msg) {\n+        if (msg.what == OPERATION_PROCESS_TASKS) {\n+            processTasks();\n+            return true;\n+        }\n+        return false;\n+    }\n+\n+    @WorkerThread\n+    private void processTasks() {\n+        while (true) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87"}, "originalPosition": 53}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjc2Mjg0", "url": "https://github.com/Iterable/iterable-android-sdk/pull/296#pullrequestreview-552676284", "createdAt": "2020-12-15T17:05:14Z", "commit": {"oid": "f9a8208cb556781ad784bab12a3c4d12a0b53b87"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 567, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}