{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMzYyMjc4", "number": 268, "title": "Feature/mob 2054 in app animation poc", "bodyText": "", "createdAt": "2020-10-09T05:54:27Z", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268", "merged": true, "mergeCommit": {"oid": "c02410f17ccab9c6976762768d68506599e47437"}, "closed": true, "closedAt": "2020-10-22T16:01:25Z", "author": {"login": "Ayyanchira"}, "timelineItems": {"totalCount": 36, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSMBBdgFqTUwNjg4MTc1MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdU4c8SgFqTUxNDMxNDI5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2ODgxNzUx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-506881751", "createdAt": "2020-10-12T20:00:32Z", "commit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQyMDowMDozM1rOHgLibA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzoyNjozOFrOHgxzig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwNTUxNg==", "bodyText": "Why is it on webViewClient? It's probably better to have everything related to animation in one place, either in IterableInAppFragmentHTMLNotification or a separate class.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r503505516", "createdAt": "2020-10-12T20:00:33Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -138,7 +156,18 @@ public Dialog onCreateDialog(Bundle savedInstanceState) {\n             @Override\n             public void onBackPressed() {\n                 IterableInAppFragmentHTMLNotification.this.onBackPressed();\n-                super.onBackPressed();\n+                Runnable dismissFragmentRunnable = new Runnable() {\n+                    @Override\n+                    public void run() {\n+                        getInstance().dismiss();\n+                    }\n+                };\n+\n+                if (webView != null && webView.webViewClient != null) {\n+                    webView.webViewClient.animateClose(webView, dismissFragmentRunnable);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUwOTg1Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                public static final String ITERABLE_IN_APP_DEFAULT_ANIMATION         = \"shouldAnimate\";\n          \n          \n            \n                public static final String ITERABLE_IN_APP_SHOULD_ANIMATE         = \"shouldAnimate\";", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r503509853", "createdAt": "2020-10-12T20:11:17Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -204,6 +207,7 @@\n     public static final String ITERABLE_INBOX_IMPRESSIONS                = \"impressions\";\n     public static final String ITERABLE_INBOX_IMP_DISPLAY_COUNT          = \"displayCount\";\n     public static final String ITERABLE_INBOX_IMP_DISPLAY_DURATION       = \"displayDuration\";\n+    public static final String ITERABLE_IN_APP_DEFAULT_ANIMATION         = \"shouldAnimate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzUxNDg2MA==", "bodyText": "webView.webViewClient.htmlView is the same as webView. To understand why this code is checking this state, you'd have to read WebViewClient code. This is generally fragile, I'd rely on more explicit checks.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r503514860", "createdAt": "2020-10-12T20:23:26Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -213,11 +245,15 @@ public void run() {\n \n     private void showDialogView() {\n         try {\n-            getDialog().getWindow().getDecorView().setAlpha(1.0f);\n+            webView.setAlpha(1.0f);\n+            if (webView.webViewClient.htmlView == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 127}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyNjQyNg==", "bodyText": "Formatting is different in this value (starts with a lowercase letter).", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504126426", "createdAt": "2020-10-13T17:16:19Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -40,6 +40,9 @@\n     private static final String CALLBACK_ON_CANCEL = \"CallbackOnCancel\";\n     private static final String MESSAGE_ID = \"MessageId\";\n     private static final String INAPP_OPEN_TRACKED = \"InAppOpenTracked\";\n+    private static final String INAPP_BGALPHA = \"InAppBgAlpha\";\n+    private static final String INAPP_BGCOLOR = \"InAppBgColor\";\n+    private static final String INAPP_SHOULD_ANIMATE = \"shouldAnimate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyNzk4Mw==", "bodyText": "Use IterableConstants.* instead of importing every constant statically.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504127983", "createdAt": "2020-10-13T17:19:04Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -12,6 +12,11 @@\n \n import java.util.Date;\n \n+import static com.iterable.iterableapi.IterableConstants.ITERABLE_IN_APP_BGCOLOR;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyODQ3NQ==", "bodyText": "The field is called inAppDisplaySettings (plural).", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504128475", "createdAt": "2020-10-13T17:19:50Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -142,6 +149,26 @@ public int hashCode() {\n         }\n     }\n \n+    public static class InAppDisplaySetting {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyOTA1NQ==", "bodyText": "Looks like something temporary.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504129055", "createdAt": "2020-10-13T17:20:50Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -303,11 +330,22 @@ static IterableInAppMessage fromJSONObject(@NonNull JSONObject messageJson, @Nul\n         Date expiresAt = expiresAtLong != 0 ? new Date(expiresAtLong) : null;\n \n         String html = contentJson.optString(IterableConstants.ITERABLE_IN_APP_HTML, null);\n-\n-        JSONObject paddingOptions = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n-        Rect padding = getPaddingFromPayload(paddingOptions);\n+        JSONObject inAppDisplaySettingsJson = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n+        Rect padding = getPaddingFromPayload(inAppDisplaySettingsJson);\n         double backgroundAlpha = contentJson.optDouble(IterableConstants.ITERABLE_IN_APP_BACKGROUND_ALPHA, 0);\n+        boolean shouldAnimate = inAppDisplaySettingsJson.optBoolean(ITERABLE_IN_APP_DEFAULT_ANIMATION, true);\n+        JSONObject bgColorSetting = inAppDisplaySettingsJson.optJSONObject(ITERABLE_IN_APP_BGCOLOR);\n+\n+//        String bgColorInHex = \"#00D3D3D3\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyOTM1Mg==", "bodyText": "To match the convention used in this method, I'd name it bgColorJson.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504129352", "createdAt": "2020-10-13T17:21:20Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -303,11 +330,22 @@ static IterableInAppMessage fromJSONObject(@NonNull JSONObject messageJson, @Nul\n         Date expiresAt = expiresAtLong != 0 ? new Date(expiresAtLong) : null;\n \n         String html = contentJson.optString(IterableConstants.ITERABLE_IN_APP_HTML, null);\n-\n-        JSONObject paddingOptions = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n-        Rect padding = getPaddingFromPayload(paddingOptions);\n+        JSONObject inAppDisplaySettingsJson = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n+        Rect padding = getPaddingFromPayload(inAppDisplaySettingsJson);\n         double backgroundAlpha = contentJson.optDouble(IterableConstants.ITERABLE_IN_APP_BACKGROUND_ALPHA, 0);\n+        boolean shouldAnimate = inAppDisplaySettingsJson.optBoolean(ITERABLE_IN_APP_DEFAULT_ANIMATION, true);\n+        JSONObject bgColorSetting = inAppDisplaySettingsJson.optJSONObject(ITERABLE_IN_APP_BGCOLOR);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 65}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMDAwNQ==", "bodyText": "If there is no bgColor in the payload, do we want to create an InAppBgColor with null values? It might be better to not create one and just pass null.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504130005", "createdAt": "2020-10-13T17:22:31Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -303,11 +330,22 @@ static IterableInAppMessage fromJSONObject(@NonNull JSONObject messageJson, @Nul\n         Date expiresAt = expiresAtLong != 0 ? new Date(expiresAtLong) : null;\n \n         String html = contentJson.optString(IterableConstants.ITERABLE_IN_APP_HTML, null);\n-\n-        JSONObject paddingOptions = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n-        Rect padding = getPaddingFromPayload(paddingOptions);\n+        JSONObject inAppDisplaySettingsJson = contentJson.optJSONObject(IterableConstants.ITERABLE_IN_APP_DISPLAY_SETTINGS);\n+        Rect padding = getPaddingFromPayload(inAppDisplaySettingsJson);\n         double backgroundAlpha = contentJson.optDouble(IterableConstants.ITERABLE_IN_APP_BACKGROUND_ALPHA, 0);\n+        boolean shouldAnimate = inAppDisplaySettingsJson.optBoolean(ITERABLE_IN_APP_DEFAULT_ANIMATION, true);\n+        JSONObject bgColorSetting = inAppDisplaySettingsJson.optJSONObject(ITERABLE_IN_APP_BGCOLOR);\n+\n+//        String bgColorInHex = \"#00D3D3D3\";\n+//        double bgAlpha = 0.3f;\n+        String bgColorInHex = null;\n+        double bgAlpha = 0.0f;\n+        if (bgColorSetting != null) {\n+            bgColorInHex = bgColorSetting.optString(ITERABLE_IN_APP_BGCOLOR_HEX);\n+            bgAlpha = bgColorSetting.optDouble(ITERABLE_IN_APP_BGCOLOR_ALPHA);\n+        }\n \n+        InAppDisplaySetting inAppDisplaySetting = new InAppDisplaySetting(shouldAnimate, new InAppBgColor(bgColorInHex, bgAlpha));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMTQ0MQ==", "bodyText": "A WebViewClient ideally should not know anything about the view hierarchy.. As I mentioned in an earlier comment, it is probably better to move it up to the *HTMLNotification class.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504131441", "createdAt": "2020-10-13T17:24:53Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableWebViewClient.java", "diffHunk": "@@ -34,12 +45,87 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {\n      */\n     @Override\n     public void onPageFinished(WebView view, String url) {\n+        htmlView = view;\n         inAppHTMLNotification.setLoaded(true);\n         view.loadUrl(RESIZE_SCRIPT);\n     }\n \n+    void showWebView() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMTg3OQ==", "bodyText": "\ud83d\udc4d\nI'd also move this up to the in-app html notification class since that is where we manage the layout.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504131879", "createdAt": "2020-10-13T17:25:37Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableWebViewClient.java", "diffHunk": "@@ -34,12 +45,87 @@ public boolean shouldOverrideUrlLoading(WebView view, String url) {\n      */\n     @Override\n     public void onPageFinished(WebView view, String url) {\n+        htmlView = view;\n         inAppHTMLNotification.setLoaded(true);\n         view.loadUrl(RESIZE_SCRIPT);\n     }\n \n+    void showWebView() {\n+        if (htmlView != null) {\n+            if (shouldAnimate) {\n+                animate(htmlView);\n+            } else {\n+                htmlView.setVisibility(View.VISIBLE);\n+            }\n+            //Might need this line.\n+            htmlView.setVisibility(View.VISIBLE);\n+        }\n+    }\n+\n+    private void animate(final WebView view) {\n+        int animationResource;\n+        switch (inAppLayout) {\n+            case TOP:\n+                animationResource = R.anim.slide_down_custom;\n+                break;\n+            case CENTER:\n+            case FULLSCREEN:\n+                animationResource = R.anim.fade_in_custom;\n+                break;\n+            case BOTTOM:\n+                animationResource = R.anim.slide_up_custom;\n+                break;\n+            default:\n+                animationResource = R.anim.fade_in_custom;\n+        }\n+        Animation anim = AnimationUtils.loadAnimation(IterableApi.getInstance().getMainActivityContext(),\n+                animationResource);\n+        view.startAnimation(anim);\n+    }\n+\n+    public void animateClose(final WebView view, Runnable parentViewDismissRunnable) {\n+        if (!shouldAnimate) {\n+            parentViewDismissRunnable.run();\n+            return;\n+        }\n+\n+        int animationResource;\n+        switch (inAppLayout) {\n+            case TOP:\n+                animationResource = R.anim.top_exit;\n+                break;\n+            case CENTER:\n+            case FULLSCREEN:\n+                animationResource = R.anim.fade_out_custom;\n+                break;\n+            case BOTTOM:\n+                animationResource = R.anim.bottom_exit;\n+                break;\n+            default:\n+                animationResource = R.anim.fade_out_custom;\n+        }\n+        Animation anim = AnimationUtils.loadAnimation(IterableApi.getInstance().getMainActivityContext(),\n+                animationResource);\n+        view.startAnimation(anim);\n+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n+            view.postOnAnimationDelayed(parentViewDismissRunnable, 400);\n+        } else {\n+            parentViewDismissRunnable.run();\n+        }\n+    }\n+\n     interface HTMLNotificationCallbacks {\n         void onUrlClicked(String url);\n+\n         void setLoaded(boolean loaded);\n     }\n+\n }\n+\n+enum InAppLayout {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 120}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzMjQ5MA==", "bodyText": "Let's extract the duration to an xml value so we can define it in one place for all animations.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504132490", "createdAt": "2020-10-13T17:26:38Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/res/anim/bottom_exit.xml", "diffHunk": "@@ -0,0 +1,5 @@\n+<?xml version=\"1.0\" encoding=\"utf-8\"?>\n+<translate xmlns:android=\"http://schemas.android.com/apk/res/android\"\n+    android:fromYDelta=\"0%p\"\n+    android:toYDelta=\"100%p\"\n+    android:duration=\"500\" />", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NzExOTA1", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-507711905", "createdAt": "2020-10-13T18:17:26Z", "commit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNzoyNlrOHgzvXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxODoxNzoyNlrOHgzvXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDE2NDE5MQ==", "bodyText": "InAppBgColor isn't actually used yet for background color, right?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r504164191", "createdAt": "2020-10-13T18:17:26Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -142,6 +149,26 @@ public int hashCode() {\n         }\n     }\n \n+    public static class InAppDisplaySetting {\n+        boolean shouldAnimate;\n+        InAppBgColor inAppBgColor;\n+\n+        public InAppDisplaySetting(boolean shouldAnimate, InAppBgColor inAppBgColor) {\n+            this.shouldAnimate = shouldAnimate;\n+            this.inAppBgColor = inAppBgColor;\n+        }\n+    }\n+\n+    public static class InAppBgColor {\n+        String bgHexColor;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODQ1MjEy", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-508845212", "createdAt": "2020-10-14T23:46:14Z", "commit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMzo0NjoxNFrOHhrehQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQyMzo0NjoxNFrOHhrehQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTA3NzM4MQ==", "bodyText": "We'll get a IllegalArgumentException if the color string is invalid here.. Can it possibly be invalid?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r505077381", "createdAt": "2020-10-14T23:46:14Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -297,27 +333,20 @@ public void run() {\n                     if (insetPadding.bottom == 0 && insetPadding.top == 0) {\n                         //Handle full screen\n                         window.setLayout(webViewWidth, webViewHeight);\n-\n                         getDialog().getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n                     } else {\n-                        // Calculates the dialog size\n-                        double notificationWidth = 100 - (insetPadding.left + insetPadding.right);\n-                        float widthPercentage = (float) notificationWidth / 100;\n-                        int maxHeight = Math.min((int) (height * displayMetrics.scaledDensity), webViewHeight);\n-                        int maxWidth = Math.min(webViewWidth, (int) (webViewWidth * widthPercentage));\n-                        window.setLayout(maxWidth, maxHeight);\n-\n-                        //Calculates the horizontal position based on the dialog size\n-                        double center = (insetPadding.left + notificationWidth / 2f);\n-                        int offset = (int) ((center - 50) / 100f * webViewWidth);\n-\n-                        //Set the window properties\n-                        WindowManager.LayoutParams wlp = window.getAttributes();\n-                        wlp.x = offset;\n-                        wlp.gravity = getVerticalLocation(insetPadding);\n-                        wlp.dimAmount = (float) notification.backgroundAlpha;\n-                        wlp.flags = WindowManager.LayoutParams.FLAG_DIM_BEHIND;\n-                        window.setAttributes(wlp);\n+                        //Set background window fading if animation and backgroundAlpha/opacity configured\n+                        if (shouldAnimate && (inAppBackgroundColor != null)) {\n+                            window.setBackgroundDrawable(new ColorDrawable(Color.parseColor(inAppBackgroundColor)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6eb309fed268f35cfb3603ac3353056080349361"}, "originalPosition": 165}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa6bebe0a6493870cee456e50801b5d11abdf42a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/fa6bebe0a6493870cee456e50801b5d11abdf42a", "committedDate": "2020-10-15T12:06:19Z", "message": "Made Recommended Changes"}, "afterCommit": {"oid": "897b4815d8a865586e1e01b080aaabfab8deec87", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/897b4815d8a865586e1e01b080aaabfab8deec87", "committedDate": "2020-10-15T12:14:05Z", "message": "Made Recommended Changes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTA2ODcw", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512106870", "createdAt": "2020-10-19T19:50:00Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MDowMFrOHkfJew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MDowMFrOHkfJew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMTExNQ==", "bodyText": "Hmm wondering if it's possible to replace these delays with something else..", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508021115", "createdAt": "2020-10-19T19:50:00Z", "author": {"login": "vbabenkoru"}, "path": "app/src/androidTest/java/com/iterable/iterableapi/MainActivityTest.java", "diffHunk": "@@ -143,6 +143,7 @@ public void checkIfMessageShownAsPopUpForImproperIntent() throws Exception {\n         rule.launchActivity(intent);\n \n         onView(withText(\"Tips and tricks 2\")).perform(click());\n+        waitFor(500);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTA3MzM0", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512107334", "createdAt": "2020-10-19T19:50:39Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MDozOVrOHkfLAw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MDozOVrOHkfLAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMTUwNw==", "bodyText": "Do you want to keep the duration here or move to xml? I think either option is valid.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508021507", "createdAt": "2020-10-19T19:50:39Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableConstants.java", "diffHunk": "@@ -204,6 +207,8 @@\n     public static final String ITERABLE_INBOX_IMPRESSIONS                = \"impressions\";\n     public static final String ITERABLE_INBOX_IMP_DISPLAY_COUNT          = \"displayCount\";\n     public static final String ITERABLE_INBOX_IMP_DISPLAY_DURATION       = \"displayDuration\";\n+    public static final String ITERABLE_IN_APP_SHOULD_ANIMATE            = \"shouldAnimate\";\n+    public static final int ITERABLE_IN_APP_ANIMATION_DURATION           = 500;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTA3ODQz", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512107843", "createdAt": "2020-10-19T19:51:25Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MToyNVrOHkfMrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1MToyNVrOHkfMrQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMTkzMw==", "bodyText": "Is anything preventing us from removing it now? (Not necessarily in this PR)", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508021933", "createdAt": "2020-10-19T19:51:25Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -53,8 +61,13 @@\n     private boolean callbackOnCancel = false;\n     private String htmlString;\n     private String messageId;\n+\n+    //TODO: To delete this variable in future iterations", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTA5Njky", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512109692", "createdAt": "2020-10-19T19:54:10Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NDoxMFrOHkfSKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NDoxMFrOHkfSKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMzMzOA==", "bodyText": "If we're converting padding to InAppLayout here anyway, I think it's better to also replace the condition 2 lines above that is still using insetPadding.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508023338", "createdAt": "2020-10-19T19:54:10Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -151,6 +155,8 @@ public void onBackPressed() {\n         dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n         if (insetPadding.bottom == 0 && insetPadding.top == 0) {\n             dialog.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        } else if (getInAppLayout(insetPadding) != InAppLayout.TOP) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 124}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTEwMjg4", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512110288", "createdAt": "2020-10-19T19:55:02Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NTowMlrOHkfT_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NTowMlrOHkfT_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyMzgwNg==", "bodyText": "Why are we only setting this if it's centered or bottom?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508023806", "createdAt": "2020-10-19T19:55:02Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -151,6 +155,8 @@ public void onBackPressed() {\n         dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);\n         if (insetPadding.bottom == 0 && insetPadding.top == 0) {\n             dialog.getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);\n+        } else if (getInAppLayout(insetPadding) != InAppLayout.TOP) {\n+            dialog.getWindow().setFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS, WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTExMzUy", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512111352", "createdAt": "2020-10-19T19:56:29Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NjozMFrOHkfXeA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1NjozMFrOHkfXeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNDY5Ng==", "bodyText": "Background color is dependent on shouldAnimate being enabled. Is that what we want?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508024696", "createdAt": "2020-10-19T19:56:30Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -254,6 +261,108 @@ public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n     }\n \n+    private void prepareToShowWebView() {\n+        try {\n+            webView.setAlpha(0.0f);\n+            webView.postDelayed(new Runnable() {\n+                @Override\n+                public void run() {\n+                    showAndAnimateWebView();\n+                }\n+            }, DELAY_THRESHOLD_MS);\n+            loadBackground();\n+        } catch (NullPointerException e) {\n+            IterableLogger.e(TAG, \"View not present. Failed to hide before resizing inapp\");\n+        }\n+    }\n+\n+    private void loadBackground() {\n+        if (shouldAnimate && (inAppBackgroundColor != null)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 221}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTEyNzk2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512112796", "createdAt": "2020-10-19T19:58:34Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1ODozNFrOHkfcEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOTo1ODozNFrOHkfcEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyNTg3Mg==", "bodyText": "Does this mean we don't animate on Android 4.2 and lower?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508025872", "createdAt": "2020-10-19T19:58:34Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -254,6 +261,108 @@ public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n     }\n \n+    private void prepareToShowWebView() {\n+        try {\n+            webView.setAlpha(0.0f);\n+            webView.postDelayed(new Runnable() {\n+                @Override\n+                public void run() {\n+                    showAndAnimateWebView();\n+                }\n+            }, DELAY_THRESHOLD_MS);\n+            loadBackground();\n+        } catch (NullPointerException e) {\n+            IterableLogger.e(TAG, \"View not present. Failed to hide before resizing inapp\");\n+        }\n+    }\n+\n+    private void loadBackground() {\n+        if (shouldAnimate && (inAppBackgroundColor != null)) {\n+            ColorDrawable transparentDrawable = new ColorDrawable(Color.TRANSPARENT);\n+            int backgroundColorWithAlpha;\n+            try {\n+                backgroundColorWithAlpha = ColorUtils.setAlphaComponent(Color.parseColor(inAppBackgroundColor), (int) (inAppBackgroundAlpha * 255));\n+            } catch (IllegalArgumentException e) {\n+                IterableLogger.e(TAG, \"Background color could not be identified for input string \\\"\" + inAppBackgroundColor + \"\\\". Failed to animate background.\");\n+                return;\n+            }\n+\n+            ColorDrawable backgroundColorDrawable = new ColorDrawable(backgroundColorWithAlpha);\n+            Drawable[] layers = new Drawable[2];\n+            layers[0] = transparentDrawable;\n+            layers[1] = backgroundColorDrawable;\n+            TransitionDrawable transitionDrawable = new TransitionDrawable(layers);\n+            getDialog().getWindow().setBackgroundDrawable(transitionDrawable);\n+            transitionDrawable.startTransition(300);\n+        }\n+    }\n+\n+    private void showAndAnimateWebView() {\n+        webView.setAlpha(1.0f);\n+        webView.setVisibility(View.VISIBLE);\n+        if (shouldAnimate) {\n+            int animationResource;\n+            InAppLayout inAppLayout = getInAppLayout(insetPadding);\n+            switch (inAppLayout) {\n+                case TOP:\n+                    animationResource = R.anim.slide_down_custom;\n+                    break;\n+                case CENTER:\n+                case FULLSCREEN:\n+                    animationResource = R.anim.fade_in_custom;\n+                    break;\n+                case BOTTOM:\n+                    animationResource = R.anim.slide_up_custom;\n+                    break;\n+                default:\n+                    animationResource = R.anim.fade_in_custom;\n+            }\n+            Animation anim = AnimationUtils.loadAnimation(getContext(), animationResource);\n+            anim.setDuration(IterableConstants.ITERABLE_IN_APP_ANIMATION_DURATION);\n+            webView.startAnimation(anim);\n+        }\n+    }\n+\n+    private void hideWebView() {\n+        if (shouldAnimate) {\n+            int animationResource;\n+            InAppLayout inAppLayout = getInAppLayout(insetPadding);\n+\n+            switch (inAppLayout) {\n+                case TOP:\n+                    animationResource = R.anim.top_exit;\n+                    break;\n+                case CENTER:\n+                case FULLSCREEN:\n+                    animationResource = R.anim.fade_out_custom;\n+                    break;\n+                case BOTTOM:\n+                    animationResource = R.anim.bottom_exit;\n+                    break;\n+                default:\n+                    animationResource = R.anim.fade_out_custom;\n+            }\n+            Animation anim = AnimationUtils.loadAnimation(getContext(),\n+                    animationResource);\n+            anim.setDuration(IterableConstants.ITERABLE_IN_APP_ANIMATION_DURATION);\n+            webView.startAnimation(anim);\n+        }\n+\n+        Runnable dismissWebviewRunnable = new Runnable() {\n+            @Override\n+            public void run() {\n+                IterableInAppFragmentHTMLNotification.super.dismiss();\n+            }\n+        };\n+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 299}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTE1NjQ2", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512115646", "createdAt": "2020-10-19T20:02:25Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMjoyNlrOHkfk1A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowMjoyNlrOHkfk1A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAyODExNg==", "bodyText": "Hmm, if we store padding values within inAppDisplaySettings, maybe it makes sense to move the padding values here as well? (Not necessarily within this PR)", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508028116", "createdAt": "2020-10-19T20:02:26Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppMessage.java", "diffHunk": "@@ -142,6 +144,26 @@ public int hashCode() {\n         }\n     }\n \n+    public static class InAppDisplaySettings {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTE4OTgx", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512118981", "createdAt": "2020-10-19T20:07:17Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowNzoxN1rOHkfu0A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowNzoxN1rOHkfu0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzMDY3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        dismissWebviewRunnable.run();\n          \n          \n            \n                        webView.postDelayed(dismissWebviewRunnable, 400);", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508030672", "createdAt": "2020-10-19T20:07:17Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -254,6 +261,108 @@ public void onBackPressed() {\n         IterableApi.sharedInstance.trackInAppClose(messageId, BACK_BUTTON, IterableInAppCloseAction.BACK, location);\n     }\n \n+    private void prepareToShowWebView() {\n+        try {\n+            webView.setAlpha(0.0f);\n+            webView.postDelayed(new Runnable() {\n+                @Override\n+                public void run() {\n+                    showAndAnimateWebView();\n+                }\n+            }, DELAY_THRESHOLD_MS);\n+            loadBackground();\n+        } catch (NullPointerException e) {\n+            IterableLogger.e(TAG, \"View not present. Failed to hide before resizing inapp\");\n+        }\n+    }\n+\n+    private void loadBackground() {\n+        if (shouldAnimate && (inAppBackgroundColor != null)) {\n+            ColorDrawable transparentDrawable = new ColorDrawable(Color.TRANSPARENT);\n+            int backgroundColorWithAlpha;\n+            try {\n+                backgroundColorWithAlpha = ColorUtils.setAlphaComponent(Color.parseColor(inAppBackgroundColor), (int) (inAppBackgroundAlpha * 255));\n+            } catch (IllegalArgumentException e) {\n+                IterableLogger.e(TAG, \"Background color could not be identified for input string \\\"\" + inAppBackgroundColor + \"\\\". Failed to animate background.\");\n+                return;\n+            }\n+\n+            ColorDrawable backgroundColorDrawable = new ColorDrawable(backgroundColorWithAlpha);\n+            Drawable[] layers = new Drawable[2];\n+            layers[0] = transparentDrawable;\n+            layers[1] = backgroundColorDrawable;\n+            TransitionDrawable transitionDrawable = new TransitionDrawable(layers);\n+            getDialog().getWindow().setBackgroundDrawable(transitionDrawable);\n+            transitionDrawable.startTransition(300);\n+        }\n+    }\n+\n+    private void showAndAnimateWebView() {\n+        webView.setAlpha(1.0f);\n+        webView.setVisibility(View.VISIBLE);\n+        if (shouldAnimate) {\n+            int animationResource;\n+            InAppLayout inAppLayout = getInAppLayout(insetPadding);\n+            switch (inAppLayout) {\n+                case TOP:\n+                    animationResource = R.anim.slide_down_custom;\n+                    break;\n+                case CENTER:\n+                case FULLSCREEN:\n+                    animationResource = R.anim.fade_in_custom;\n+                    break;\n+                case BOTTOM:\n+                    animationResource = R.anim.slide_up_custom;\n+                    break;\n+                default:\n+                    animationResource = R.anim.fade_in_custom;\n+            }\n+            Animation anim = AnimationUtils.loadAnimation(getContext(), animationResource);\n+            anim.setDuration(IterableConstants.ITERABLE_IN_APP_ANIMATION_DURATION);\n+            webView.startAnimation(anim);\n+        }\n+    }\n+\n+    private void hideWebView() {\n+        if (shouldAnimate) {\n+            int animationResource;\n+            InAppLayout inAppLayout = getInAppLayout(insetPadding);\n+\n+            switch (inAppLayout) {\n+                case TOP:\n+                    animationResource = R.anim.top_exit;\n+                    break;\n+                case CENTER:\n+                case FULLSCREEN:\n+                    animationResource = R.anim.fade_out_custom;\n+                    break;\n+                case BOTTOM:\n+                    animationResource = R.anim.bottom_exit;\n+                    break;\n+                default:\n+                    animationResource = R.anim.fade_out_custom;\n+            }\n+            Animation anim = AnimationUtils.loadAnimation(getContext(),\n+                    animationResource);\n+            anim.setDuration(IterableConstants.ITERABLE_IN_APP_ANIMATION_DURATION);\n+            webView.startAnimation(anim);\n+        }\n+\n+        Runnable dismissWebviewRunnable = new Runnable() {\n+            @Override\n+            public void run() {\n+                IterableInAppFragmentHTMLNotification.super.dismiss();\n+            }\n+        };\n+\n+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.JELLY_BEAN) {\n+            webView.postOnAnimationDelayed(dismissWebviewRunnable, 400);\n+        } else {\n+            dismissWebviewRunnable.run();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 302}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyMTIwNzI5", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512120729", "createdAt": "2020-10-19T20:09:21Z", "commit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowOToyMVrOHkfz2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMDowOToyMVrOHkfz2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAzMTk2MA==", "bodyText": "assertTrue?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508031960", "createdAt": "2020-10-19T20:09:21Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/test/java/com/iterable/iterableapi/IterableInAppMessageTest.java", "diffHunk": "@@ -37,11 +37,19 @@ public void testInAppMessageDeserialization() throws Exception {\n                 //Stripping out HTML content from the copy\n                 JSONObject messageJsonHTMLStripped = new JSONObject(messageJson.toString());\n                 JSONObject content = (JSONObject) messageJsonHTMLStripped.get(\"content\");\n+                JSONObject inAppDisplaySettings = content.getJSONObject(\"inAppDisplaySettings\");\n+                assertEquals((Boolean) inAppDisplaySettings.get(\"shouldAnimate\"), true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cea9fbd82be4659a8cda72eb4e09a2d12cc317d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64ee11ec10c10a40f9c79a42e8fc92d584db8a07", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/64ee11ec10c10a40f9c79a42e8fc92d584db8a07", "committedDate": "2020-10-19T22:50:36Z", "message": "[MOB-2054] - POC in-App Animation\n\nNot tested on real device, but it fails to show the smooth animation the very first time. But the consequent inapps have the animation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5187880ad056671420e87d043edc87e08e2aee28", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/5187880ad056671420e87d043edc87e08e2aee28", "committedDate": "2020-10-19T22:50:36Z", "message": "[MOB-2047] - In-App animation\n\nAdded parameter to message content - shouldAnimate\nThis should be sent by the backend.\nBased on the flag, the animation will be shown/not shown"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6f60a138393d9894d2e654453d6b3d146d01c2e", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e6f60a138393d9894d2e654453d6b3d146d01c2e", "committedDate": "2020-10-19T22:50:36Z", "message": "Resize WebView\n\nUse relative layout gravity instead to place the in-app in desired location.\nResizing logic indirectly moved to webview instead of its holding parent fragment.\nTODO: Need to delete out the commented code and Log comments before merging it to master.\nKept it for direct reference for changes to come.\nenum Layout is introduced for webviewClient to understand and animate accordingly. Changes will be added in next commits"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "273902f3aea5b9c565fc5f83995472b9cd8d1c33", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/273902f3aea5b9c565fc5f83995472b9cd8d1c33", "committedDate": "2020-10-19T22:50:36Z", "message": "passing hide/show functionality to webview\n\nInstead of parent fragment hiding and showing itself, making webview do it. This way, parent fragment can be free to just do the alpha transition.\nYes.. uncommented the alpha transition line to parent dimAmount"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed2cdf53a5730afe09db2a474d428610309fbc0a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/ed2cdf53a5730afe09db2a474d428610309fbc0a", "committedDate": "2020-10-19T22:50:36Z", "message": "Conditional animation\n\n1. Adjusted the magic numbers which worked on most of the cases on emulator and actual device.\n2. Added sliding animations to top and bottom type in-apps.\n3. Added new animations to the suite as mentioned in the Figma doc.\n4. Adjusted the parent view dismissal roughly almost after the animation is performed."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45fbd2c11f342ac078d1ae8f264c377c38d350e4", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/45fbd2c11f342ac078d1ae8f264c377c38d350e4", "committedDate": "2020-10-19T22:50:36Z", "message": "Incorporated proposed parameters for inapp settings\n\n1. Removed unnecessary debug print codes\n2. Refactored some code\n3. Introduced InAppDisplaySetting inside Content field in Message. Although accurate JSON mapping is still not implemented\n4. Background Color implemented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20a6114597d569bd96501f605e0140ee4de5799b", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/20a6114597d569bd96501f605e0140ee4de5799b", "committedDate": "2020-10-19T22:50:36Z", "message": "Made Recommended Changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c79d28949bdc40a9bada721bb43917899f67b32", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/0c79d28949bdc40a9bada721bb43917899f67b32", "committedDate": "2020-10-19T22:51:12Z", "message": "Some more refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "825563d90d5f24d5c19174463b08561aee4f0f6d", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/825563d90d5f24d5c19174463b08561aee4f0f6d", "committedDate": "2020-10-19T22:51:12Z", "message": "Incorporated Alpha value correctly"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "422c3edad98d83a20c10af1923c07454ea83dcff", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/422c3edad98d83a20c10af1923c07454ea83dcff", "committedDate": "2020-10-19T22:51:12Z", "message": "Added wait for inapp tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e40d7d1724a225219b20729d51ac6660042527fd", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e40d7d1724a225219b20729d51ac6660042527fd", "committedDate": "2020-10-19T22:51:12Z", "message": "Found the real culprit hiding"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "99dab8904e72342efade5e400bc550727695315a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/99dab8904e72342efade5e400bc550727695315a", "committedDate": "2020-10-19T22:51:12Z", "message": "Using colorutils to set alpha value"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0687cac64d24f4a8c23b6b5a29d2b7150816db8", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e0687cac64d24f4a8c23b6b5a29d2b7150816db8", "committedDate": "2020-10-19T22:51:12Z", "message": "Review Revision 3\n\n1. Removed changes in test method as it is covered by the existing code already.\n2. Used getInAppLayout across the class there fullscreen condition using insetpadding was manually checked\n3. Added comments to why we do not show translucent status bar for TOP in-app\n4. Dismiss animation will now be triggered on in-app click\n5. Background will animate regardless of shouldAnimate variable\n6. Dismiss animation will work on older versions as well. Thanks for the commit suggestion"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6133574331ce46a954209e9c90b39dcf445702d", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e6133574331ce46a954209e9c90b39dcf445702d", "committedDate": "2020-10-19T22:57:06Z", "message": "Resolving merge conflict with master branch"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae64eb4046ed77216be71d2fe460e0a1122f089f", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/ae64eb4046ed77216be71d2fe460e0a1122f089f", "committedDate": "2020-10-19T23:01:47Z", "message": "Resolving merge conflict"}, "afterCommit": {"oid": "e0687cac64d24f4a8c23b6b5a29d2b7150816db8", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/e0687cac64d24f4a8c23b6b5a29d2b7150816db8", "committedDate": "2020-10-19T22:51:12Z", "message": "Review Revision 3\n\n1. Removed changes in test method as it is covered by the existing code already.\n2. Used getInAppLayout across the class there fullscreen condition using insetpadding was manually checked\n3. Added comments to why we do not show translucent status bar for TOP in-app\n4. Dismiss animation will now be triggered on in-app click\n5. Background will animate regardless of shouldAnimate variable\n6. Dismiss animation will work on older versions as well. Thanks for the commit suggestion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEyOTc1Nzc0", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-512975774", "createdAt": "2020-10-20T17:34:51Z", "commit": {"oid": "f375965e2500b4d788967a66ba26fd93a98f46e3"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNDo1MlrOHlJcZg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNzozNDo1MlrOHlJcZg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODcxNDA4Ng==", "bodyText": "Why do we set it to GONE here?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508714086", "createdAt": "2020-10-20T17:34:52Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableWebViewClient.java", "diffHunk": "@@ -24,6 +25,7 @@\n     @Override\n     public boolean shouldOverrideUrlLoading(WebView view, String url) {\n         inAppHTMLNotification.onUrlClicked(url);\n+        view.setVisibility(View.GONE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f375965e2500b4d788967a66ba26fd93a98f46e3"}, "originalPosition": 11}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f375965e2500b4d788967a66ba26fd93a98f46e3", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/f375965e2500b4d788967a66ba26fd93a98f46e3", "committedDate": "2020-10-20T17:07:09Z", "message": "Removing wait 500ms\n\nThe default state for message is to not show animation. And hence these test pass"}, "afterCommit": {"oid": "a603586b2aa7e058679d2e759ecc9f418fe5aa1c", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a603586b2aa7e058679d2e759ecc9f418fe5aa1c", "committedDate": "2020-10-20T17:53:39Z", "message": "Removing wait 500ms and unneccessary code\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a603586b2aa7e058679d2e759ecc9f418fe5aa1c", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/a603586b2aa7e058679d2e759ecc9f418fe5aa1c", "committedDate": "2020-10-20T17:53:39Z", "message": "Removing wait 500ms and unneccessary code\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient"}, "afterCommit": {"oid": "c9a10acae7adb88aac443cd1ece8c44812285b60", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/c9a10acae7adb88aac443cd1ece8c44812285b60", "committedDate": "2020-10-20T18:06:01Z", "message": "Removing wait 500ms and unneccessary code\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTEzMDA0MDYz", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-513004063", "createdAt": "2020-10-20T18:10:41Z", "commit": {"oid": "c9a10acae7adb88aac443cd1ece8c44812285b60"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODoxMDo0MlrOHlKznw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxODoxMDo0MlrOHlKznw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODczNjQxNQ==", "bodyText": "You can also revert this, since we don't use webViewClient field externally anymore.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#discussion_r508736415", "createdAt": "2020-10-20T18:10:42Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableWebView.java", "diffHunk": "@@ -24,7 +25,7 @@\n      * @param html\n      */\n     void createWithHtml(IterableWebViewClient.HTMLNotificationCallbacks notificationDialog, String html) {\n-        IterableWebViewClient webViewClient = new IterableWebViewClient(notificationDialog);\n+        webViewClient = new IterableWebViewClient(notificationDialog);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c9a10acae7adb88aac443cd1ece8c44812285b60"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49a1462a5f700deef2a69aa706f7adc23b31be6a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/49a1462a5f700deef2a69aa706f7adc23b31be6a", "committedDate": "2020-10-20T18:23:19Z", "message": "Review Revision 3\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient\n3. Removed code from Iterable WebView to have global variable access to IterableWebViewClient"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c9a10acae7adb88aac443cd1ece8c44812285b60", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/c9a10acae7adb88aac443cd1ece8c44812285b60", "committedDate": "2020-10-20T18:06:01Z", "message": "Removing wait 500ms and unneccessary code\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient"}, "afterCommit": {"oid": "49a1462a5f700deef2a69aa706f7adc23b31be6a", "author": {"user": {"login": "Ayyanchira", "name": "Akshay Ayyanchira"}}, "url": "https://github.com/Iterable/iterable-android-sdk/commit/49a1462a5f700deef2a69aa706f7adc23b31be6a", "committedDate": "2020-10-20T18:23:19Z", "message": "Review Revision 3\n\n1. The default state for message is to not show animation. And hence these test pass without needing to wait\n2. Removed unnecessary code: setting of webview visibility to GONE in shouldOverrideUrlLoading method in IterableWebViewClient\n3. Removed code from Iterable WebView to have global variable access to IterableWebViewClient"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MzE0Mjkz", "url": "https://github.com/Iterable/iterable-android-sdk/pull/268#pullrequestreview-514314293", "createdAt": "2020-10-22T02:22:01Z", "commit": {"oid": "49a1462a5f700deef2a69aa706f7adc23b31be6a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 534, "cost": 1, "resetAt": "2021-11-01T14:51:55Z"}}}