{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4NzE0Mjcz", "number": 297, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNToxN1rOFEsu9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNzowN1rOFEswAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDcxNTQwOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNToxN1rOIE3zMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNToxN1rOIE3zMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3OTQ0MA==", "bodyText": "Wow!!! I didn't know we have this feature in java!", "url": "https://github.com/Iterable/iterable-android-sdk/pull/297#discussion_r541979440", "createdAt": "2020-12-13T18:35:17Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -67,15 +90,33 @@ private boolean processNextTask() {\n         }\n \n         if (task.taskType == IterableTaskType.API) {\n+            IterableApiResponse response = null;\n+            TaskResult result = TaskResult.FAILURE;\n             try {\n                 IterableApiRequest request = IterableApiRequest.fromJSON(new JSONObject(task.data), null, null);\n-                IterableApiResponse response = IterableRequestTask.executeApiRequest(request);\n+                response = IterableRequestTask.executeApiRequest(request);\n             } catch (Exception e) {\n                 IterableLogger.e(TAG, \"Error while processing request task\", e);\n             }\n+            if (response != null) {\n+                result = response.success ? TaskResult.SUCCESS : TaskResult.FAILURE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca497aeae0c6ace9220f66dc024a0250b3d2315"}, "originalPosition": 65}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDcxNjUyOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNjowN1rOIE3zqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQwNDo1MjoxNlrOIF41wA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3OTU2Mw==", "bodyText": "reiterating form previous PR, if the delete task should happen here regardless of success or failure.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/297#discussion_r541979563", "createdAt": "2020-12-13T18:36:07Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -67,15 +90,33 @@ private boolean processNextTask() {\n         }\n \n         if (task.taskType == IterableTaskType.API) {\n+            IterableApiResponse response = null;\n+            TaskResult result = TaskResult.FAILURE;\n             try {\n                 IterableApiRequest request = IterableApiRequest.fromJSON(new JSONObject(task.data), null, null);\n-                IterableApiResponse response = IterableRequestTask.executeApiRequest(request);\n+                response = IterableRequestTask.executeApiRequest(request);\n             } catch (Exception e) {\n                 IterableLogger.e(TAG, \"Error while processing request task\", e);\n             }\n+            if (response != null) {\n+                result = response.success ? TaskResult.SUCCESS : TaskResult.FAILURE;\n+            }\n+            callTaskCompletedListeners(task.id, result, response);\n             taskStorage.deleteTask(task.id);\n             return true;\n         }\n         return false;\n     }\n+\n+    @WorkerThread\n+    private void callTaskCompletedListeners(final String taskId, final TaskResult result, final IterableApiResponse response) {\n+        for (final TaskCompletedListener listener : taskCompletedListeners) {\n+            new Handler(Looper.getMainLooper()).post(new Runnable() {\n+                @Override\n+                public void run() {\n+                    listener.onTaskCompleted(taskId, result, response);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca497aeae0c6ace9220f66dc024a0250b3d2315"}, "originalPosition": 80}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzA0NTA1Ng==", "bodyText": "Responded in the previous PR.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/297#discussion_r543045056", "createdAt": "2020-12-15T04:52:16Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableTaskRunner.java", "diffHunk": "@@ -67,15 +90,33 @@ private boolean processNextTask() {\n         }\n \n         if (task.taskType == IterableTaskType.API) {\n+            IterableApiResponse response = null;\n+            TaskResult result = TaskResult.FAILURE;\n             try {\n                 IterableApiRequest request = IterableApiRequest.fromJSON(new JSONObject(task.data), null, null);\n-                IterableApiResponse response = IterableRequestTask.executeApiRequest(request);\n+                response = IterableRequestTask.executeApiRequest(request);\n             } catch (Exception e) {\n                 IterableLogger.e(TAG, \"Error while processing request task\", e);\n             }\n+            if (response != null) {\n+                result = response.success ? TaskResult.SUCCESS : TaskResult.FAILURE;\n+            }\n+            callTaskCompletedListeners(task.id, result, response);\n             taskStorage.deleteTask(task.id);\n             return true;\n         }\n         return false;\n     }\n+\n+    @WorkerThread\n+    private void callTaskCompletedListeners(final String taskId, final TaskResult result, final IterableApiResponse response) {\n+        for (final TaskCompletedListener listener : taskCompletedListeners) {\n+            new Handler(Looper.getMainLooper()).post(new Runnable() {\n+                @Override\n+                public void run() {\n+                    listener.onTaskCompleted(taskId, result, response);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3OTU2Mw=="}, "originalCommit": {"oid": "1ca497aeae0c6ace9220f66dc024a0250b3d2315"}, "originalPosition": 80}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQwNDcxODExOnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNzowN1rOIE30Wg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xM1QxODozNzowN1rOIE30Wg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTk3OTczOA==", "bodyText": "or should the delete task happen here? \ud83e\udd37\u200d\u2642\ufe0f", "url": "https://github.com/Iterable/iterable-android-sdk/pull/297#discussion_r541979738", "createdAt": "2020-12-13T18:37:07Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/OfflineRequestProcessor.java", "diffHunk": "@@ -59,4 +63,18 @@ void scheduleTask(IterableApiRequest request, @Nullable IterableHelper.SuccessHa\n         successCallbackMap.put(taskId, onSuccess);\n         failureCallbackMap.put(taskId, onFailure);\n     }\n+\n+    @MainThread\n+    @Override\n+    public void onTaskCompleted(String taskId, IterableTaskRunner.TaskResult result, IterableApiResponse response) {\n+        IterableHelper.SuccessHandler onSuccess = successCallbackMap.get(taskId);\n+        IterableHelper.FailureHandler onFailure = failureCallbackMap.get(taskId);\n+        successCallbackMap.remove(taskId);\n+        failureCallbackMap.remove(taskId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ca497aeae0c6ace9220f66dc024a0250b3d2315"}, "originalPosition": 48}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2227, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}