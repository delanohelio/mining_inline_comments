{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NDIyOTY3", "number": 229, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMjo0MVrOD6It3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMzowNVrOD6Iufg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjg2ODE1OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMjo0MVrOGRy__A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMjo0MVrOGRy__A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU1Ng==", "bodyText": "\ud83d\udc4c", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421314556", "createdAt": "2020-05-07T08:02:41Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);\n+            webView.postDelayed(new Runnable() {\n+                @Override\n+                public void run() {\n+                    showDialogView();\n+                }\n+            }, DELAY_THRESHOLD_MS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 43}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjg2ODI3OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMjo0M1rOGRzAEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QyMjo1MTowMlrOGSS_ig==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA==", "bodyText": "Just a suggestion. With this approach the status bar on API 29 device seems to flash before hiding and showing.\ngetDialog().getWindow().getDecorView().setAlpha(0);\ncan be a good alternative and more closer to what we had achieved previously.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421314578", "createdAt": "2020-05-07T08:02:43Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgyOTYyNg==", "bodyText": "If Android suspends everything when DecorView is invisible, I'm wondering if they might also do that for opacity 0 at some point..", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421829626", "createdAt": "2020-05-07T22:25:04Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA=="}, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzMjIxNA==", "bodyText": "I dont think so...\nAs opacity is more of cosmetic property (which can be used to animate). It also means that the space will be acquired by the view even if it's not visible because it is present.\nWhile invisibility (with reference to iOS framework) actually has potential to remove the object. (Like for e.g A Button when hidden is actually removed from view hierarchy)", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421832214", "createdAt": "2020-05-07T22:32:11Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA=="}, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzMzk3Ng==", "bodyText": "View.INVISIBLE is supposed to be like that: it makes it invisible without removing it from the layout (unlike what View.GONE does).", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421833976", "createdAt": "2020-05-07T22:37:32Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA=="}, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzNDY2OA==", "bodyText": "Thats true too \ud83e\udd37\u200d\u2642\ufe0f", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421834668", "createdAt": "2020-05-07T22:39:34Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA=="}, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTgzODczMA==", "bodyText": "Yeah, alpha looks better, changed to that.", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421838730", "createdAt": "2020-05-07T22:51:02Z", "author": {"login": "vbabenkoru"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDU3OA=="}, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYyMjg2OTc0OnYy", "diffSide": "RIGHT", "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMzowNVrOGRzA5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QwODowMzowNVrOGRzA5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTMxNDc5MQ==", "bodyText": "getDialog().getWindow().getDecorView().setAlpha(1);\n?", "url": "https://github.com/Iterable/iterable-android-sdk/pull/229#discussion_r421314791", "createdAt": "2020-05-07T08:03:05Z", "author": {"login": "Ayyanchira"}, "path": "iterableapi/src/main/java/com/iterable/iterableapi/IterableInAppFragmentHTMLNotification.java", "diffHunk": "@@ -190,20 +192,27 @@ public void run() {\n         if (savedInstanceState == null || !savedInstanceState.getBoolean(INAPP_OPEN_TRACKED, false)) {\n             IterableApi.sharedInstance.trackInAppOpen(messageId, location);\n         }\n+        hideDialogView();\n         return relativeLayout;\n     }\n \n-    private void hideDialogView(Dialog dialog) {\n+    private void hideDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.INVISIBLE);\n+            webView.setVisibility(View.INVISIBLE);\n+            webView.postDelayed(new Runnable() {\n+                @Override\n+                public void run() {\n+                    showDialogView();\n+                }\n+            }, DELAY_THRESHOLD_MS);\n         } catch (NullPointerException e) {\n             IterableLogger.e(TAG, \"View not present. Failed to hide before resizing inapp\");\n         }\n     }\n \n-    private void showDialogView(Dialog dialog) {\n+    private void showDialogView() {\n         try {\n-            dialog.getWindow().getDecorView().setVisibility(View.VISIBLE);\n+            webView.setVisibility(View.VISIBLE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3bfd4a7d6845785284d72f15ad63e62528b26f4"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2274, "cost": 1, "resetAt": "2021-11-12T19:05:54Z"}}}