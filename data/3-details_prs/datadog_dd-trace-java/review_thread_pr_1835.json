{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc5NzE2NDgx", "number": 1835, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNTo1Njo1MVrOEgcOWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNTo1Njo1MVrOEgcOWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNDUyMzE1OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNTo1Njo1MVrOHNTajw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNFQxNjoyMjoxNlrOHNULyg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ==", "bodyText": "Should we assert that only random is used if the writer is DDAgentWriter?\nPerhaps we could even automatically set it to sequential if the ListWriter is used?", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483711631", "createdAt": "2020-09-04T15:56:51Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMzk2OA==", "bodyText": "I actually want the system property for benchmarking", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483713968", "createdAt": "2020-09-04T16:01:21Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxNjU3Mg==", "bodyText": "I'm not opposed to having that as an option.  I'm just saying it doesn't make sense to use non-random IDs for DDAgentWriter, so maybe we shouldn't allow it.  Are you using the agent writer for the benchmark?", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483716572", "createdAt": "2020-09-04T16:06:33Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxOTc4MA==", "bodyText": "Yes, sequential ids take up a lot less space because messagepack is good at stripping leading zeros. There is a WARN message in Config, stating if you don't use RANDOM, you're in uncharted territory and are alone. If you/anyone else would prefer that I remove the config option, I'll remove it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483719780", "createdAt": "2020-09-04T16:13:09Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyMjQ1NQ==", "bodyText": "another idea to consider is separating out the trace id and span id settings.  I think I'd be less concerned about spanid being sequential, but traceid has a much greater responsibility to be random in my mind.\n(I would even suggest that sequential should be the default span id generator when using list writer.)", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483722455", "createdAt": "2020-09-04T16:18:40Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcyNDIzNA==", "bodyText": "OK, that makes sense. Since it's labour day on Monday and I want this for testing purposes (i.e. I have tests I want to write which depend on being able to do this), I will make changes along those lines next week but won't wait for approval.\nIf anyone wants the config property removed, please speak up, and I will remove it, but don't block the PR from being merged.", "url": "https://github.com/DataDog/dd-trace-java/pull/1835#discussion_r483724234", "createdAt": "2020-09-04T16:22:16Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -189,6 +193,10 @@ private CoreTracer(\n     this.defaultSpanTags = defaultSpanTags;\n     this.serviceNameMappings = serviceNameMappings;\n     this.partialFlushMinSpans = partialFlushMinSpans;\n+    this.idGenerationStrategy =\n+        null == idGenerationStrategy\n+            ? Config.get().getIdGenerationStrategy()\n+            : idGenerationStrategy;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MzcxMTYzMQ=="}, "originalCommit": {"oid": "c6b8d5e6a0c8219715847926781bad88f3c6b31f"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4925, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}