{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3MTMyNTcx", "number": 1866, "title": "Replace Thread CpuTime JMX access to a generic one", "bodyText": "Instead of an interface for accessing just ThreadCpuTime from JMX,\nwe have a generic one, where we can add as many method we need when\naccessing JMX.\nHere we have added also getCurrentPid, but we could add access to\nother JMX features like Thread dumps...", "createdAt": "2020-09-15T08:35:59Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1866", "merged": true, "mergeCommit": {"oid": "e4331fbee5d99b3d7ce51695cc4e8078f1a5f299"}, "closed": true, "closedAt": "2020-09-16T07:47:10Z", "author": {"login": "jpbempel"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJD0LuAH2gAyNDg3MTMyNTcxOjdlZWZjYzA0NDIwMmI3MDhkZTU4MTI4MTNiZmMyZDQxN2EyZDFiYzc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJXUOuAFqTQ4OTM0OTQzOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7eefcc044202b708de5812813bfc2d417a2d1bc7", "committedDate": "2020-09-15T08:49:16Z", "message": "Replace Thread CpuTime JMX access to a generic one\n\nInstead of an interface for accessing just ThreadCpuTime from JMX,\nwe have a generic one, where we can add as many method we need when\naccessing JMX.\nHere we have added also getCurrentPid, but we could add access to\nother JMX features like Thread dumps..."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d197de5c7a3743852744b99f4e87f93cc68a7457", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d197de5c7a3743852744b99f4e87f93cc68a7457", "committedDate": "2020-09-15T08:30:12Z", "message": "Replace Thread CpuTime JMX access to a generic one\n\nInstead of an interface for accessing just ThreadCpuTime from JMX,\nwe have a generic one, where we can add as many method we need when\naccessing JMX.\nHere we have added also getCurrentPid, but we could add access to\nother JMX features like Thread dumps..."}, "afterCommit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7eefcc044202b708de5812813bfc2d417a2d1bc7", "committedDate": "2020-09-15T08:49:16Z", "message": "Replace Thread CpuTime JMX access to a generic one\n\nInstead of an interface for accessing just ThreadCpuTime from JMX,\nwe have a generic one, where we can add as many method we need when\naccessing JMX.\nHere we have added also getCurrentPid, but we could add access to\nother JMX features like Thread dumps..."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NDkxMzcx", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#pullrequestreview-488491371", "createdAt": "2020-09-15T09:22:21Z", "commit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToyMjoyMVrOHR4viw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNVQwOToyNzo1M1rOHR49oA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxNzUxNQ==", "bodyText": "A nit - would be good to have the specific implementations being final to encourage composition over inheritance (and make the whole API more evolvable by providing fewer potentially moving parts).", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#discussion_r488517515", "createdAt": "2020-09-15T09:22:21Z", "author": {"login": "jbachorik"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/JmxSystemProvider.java", "diffHunk": "@@ -0,0 +1,40 @@\n+package datadog.trace.core.util;\n+\n+import java.lang.management.ManagementFactory;\n+import java.lang.management.RuntimeMXBean;\n+import java.lang.management.ThreadMXBean;\n+\n+/** System provider based on JMX MXbeans */\n+public class JmxSystemProvider implements SystemProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxODI5MA==", "bodyText": "This one should really be final. It is an API entry point and we don't really want its subclasses floating around when we keep on evolving this entry point.", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#discussion_r488518290", "createdAt": "2020-09-15T09:23:31Z", "author": {"login": "jbachorik"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SystemAccess.java", "diffHunk": "@@ -3,47 +3,43 @@\n import datadog.trace.api.Config;\n import lombok.extern.slf4j.Slf4j;\n \n-/**\n- * Thread CPU time accessor.<br>\n- * This class abstracts away the actual method used to get the current thread CPU time.\n- */\n @Slf4j\n-public final class ThreadCpuTimeAccess {\n-  private static volatile ThreadCpuTimeProvider cpuTimeProvider = ThreadCpuTimeProvider.NONE;\n+public class SystemAccess {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUxOTQ5Ng==", "bodyText": "This makes me wonder - do we really need the SystemAccess tied to profiling?\nNot critical request but would be good to think about it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#discussion_r488519496", "createdAt": "2020-09-15T09:25:22Z", "author": {"login": "jbachorik"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SystemAccess.java", "diffHunk": "@@ -3,47 +3,43 @@\n import datadog.trace.api.Config;\n import lombok.extern.slf4j.Slf4j;\n \n-/**\n- * Thread CPU time accessor.<br>\n- * This class abstracts away the actual method used to get the current thread CPU time.\n- */\n @Slf4j\n-public final class ThreadCpuTimeAccess {\n-  private static volatile ThreadCpuTimeProvider cpuTimeProvider = ThreadCpuTimeProvider.NONE;\n+public class SystemAccess {\n+  private static volatile SystemProvider systemProvider = SystemProvider.NONE;\n \n   /**\n-   * Disable JMX based thread CPU time. Will flip back to the {@linkplain\n-   * ThreadCpuTimeProvider#NONE} implementation.\n+   * Disable JMX based thread CPU time. Will flip back to the {@linkplain SystemProvider#NONE}\n+   * implementation.\n    */\n   public static void disableJmx() {\n     log.debug(\"Disabling JMX thread CPU time provider\");\n-    cpuTimeProvider = ThreadCpuTimeProvider.NONE;\n+    systemProvider = SystemProvider.NONE;\n   }\n \n-  /** Enable JMX based thread CPU time */\n+  /** Enable JMX accesses */\n   public static void enableJmx() {\n     if (!Config.get().isProfilingEnabled()) {\n-      log.info(\"Will not enable thread CPU time access. Profiling is disabled.\");\n+      log.info(\"Will not enable JMX access. Profiling is disabled.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODUyMTEyMA==", "bodyText": "This provider is providing for SystemAccess - hence SystemAccessProvider would convey the intention better, IMO.\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            public interface SystemProvider {\n          \n          \n            \n            public interface SystemAccessProvider {", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#discussion_r488521120", "createdAt": "2020-09-15T09:27:53Z", "author": {"login": "jbachorik"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SystemProvider.java", "diffHunk": "@@ -0,0 +1,18 @@\n+package datadog.trace.core.util;\n+\n+/**\n+ * A pluggable system provider used by {@linkplain SystemAccess}. {@linkplain SystemAccess} may not\n+ * use JMX classes (even via transitive dependencies) due to potential race in j.u.l initialization.\n+ * Therefore it uses an abstract {@linkplain SystemProvider} type to hold the actual implementation\n+ * which may be switched between the {@linkplain SystemProvider#NONE} and {@linkplain\n+ * JmxSystemProvider} on-the-fly once JMX is safe to use.\n+ */\n+public interface SystemProvider {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7eefcc044202b708de5812813bfc2d417a2d1bc7"}, "originalPosition": 10}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6b64636cc65ab36c443a3d8139e47efa0c1a75e1", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6b64636cc65ab36c443a3d8139e47efa0c1a75e1", "committedDate": "2020-09-15T09:39:36Z", "message": "add revapi exception"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fa6e1d45c7068dd79b3fc73cd387314fb7b6c3b1", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fa6e1d45c7068dd79b3fc73cd387314fb7b6c3b1", "committedDate": "2020-09-15T10:11:23Z", "message": "Rename SystemProvider"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0a4cd832a635a527faed5ba0fdce41097c128cc5", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0a4cd832a635a527faed5ba0fdce41097c128cc5", "committedDate": "2020-09-15T09:43:21Z", "message": "Update dd-trace-core/src/main/java/datadog/trace/core/util/SystemProvider.java\n\nCo-authored-by: Jaroslav Bachorik <j.bachorik@gmail.com>"}, "afterCommit": {"oid": "fa6e1d45c7068dd79b3fc73cd387314fb7b6c3b1", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fa6e1d45c7068dd79b3fc73cd387314fb7b6c3b1", "committedDate": "2020-09-15T10:11:23Z", "message": "Rename SystemProvider"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4NTg2OTk4", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#pullrequestreview-488586998", "createdAt": "2020-09-15T11:30:37Z", "commit": {"oid": "fa6e1d45c7068dd79b3fc73cd387314fb7b6c3b1"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a040919b63fc2bd872de2d161ff83a51950c3923", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a040919b63fc2bd872de2d161ff83a51950c3923", "committedDate": "2020-09-15T12:10:50Z", "message": "fix class name loaded by agent"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "837def6182b7d839c2bb2c693b1c7b7403b72111", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/837def6182b7d839c2bb2c693b1c7b7403b72111", "committedDate": "2020-09-15T12:30:22Z", "message": "fix formatting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg4ODczMDcw", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#pullrequestreview-488873070", "createdAt": "2020-09-15T16:44:40Z", "commit": {"oid": "837def6182b7d839c2bb2c693b1c7b7403b72111"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "28c5f2371a7acbd82cd238846332de1edde1f5ef", "author": {"user": {"login": "jpbempel", "name": "Jean-Philippe Bempel"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/28c5f2371a7acbd82cd238846332de1edde1f5ef", "committedDate": "2020-09-15T17:21:11Z", "message": "Add final for class & change visibility"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg5MzQ5NDM4", "url": "https://github.com/DataDog/dd-trace-java/pull/1866#pullrequestreview-489349438", "createdAt": "2020-09-16T07:32:28Z", "commit": {"oid": "28c5f2371a7acbd82cd238846332de1edde1f5ef"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3106, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}