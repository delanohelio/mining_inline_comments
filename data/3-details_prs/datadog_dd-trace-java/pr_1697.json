{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUzODIyOTcz", "number": 1697, "title": "MLT - Collect initial (\"base\") stacktrace for each MLT Scope.", "bodyText": "This will allow for better root stack frame analysis.", "createdAt": "2020-07-20T20:46:33Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1697", "merged": true, "mergeCommit": {"oid": "d695c13a8adca36914983ec99df126be7d7663ef"}, "closed": true, "closedAt": "2020-07-21T21:19:47Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc24Zw2gFqTQ1MTk2ODA0MQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc4-qSugFqTQ1NTYzMzM3NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUxOTY4MDQx", "url": "https://github.com/DataDog/dd-trace-java/pull/1697#pullrequestreview-451968041", "createdAt": "2020-07-20T21:20:48Z", "commit": {"oid": "8f365a2935859f0a7f7bb4a25ef5e7aa3ee6e51f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToyMDo0OVrOG0ftCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQyMToyMDo0OVrOG0ftCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzY5ODU3MA==", "bodyText": "From what I've read, Exception.fillInStackTrace might actually be faster", "url": "https://github.com/DataDog/dd-trace-java/pull/1697#discussion_r457698570", "createdAt": "2020-07-20T21:20:49Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ScopeStackCollector.java", "diffHunk": "@@ -59,6 +59,9 @@\n     this.threadStacktraceCollector = threadStacktraceCollector;\n     this.startTime = startTimeEpoch;\n     this.startTimeNs = startTimeNs;\n+\n+    // Capture the base stacktrace:\n+    collect(Thread.currentThread().getStackTrace());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f365a2935859f0a7f7bb4a25ef5e7aa3ee6e51f"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "680591b6f6ddf913050358eda8b8bd50bd05db89", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/680591b6f6ddf913050358eda8b8bd50bd05db89", "committedDate": "2020-07-21T14:14:59Z", "message": "Collect initial (\"base\") stacktrace for each MLT Scope.\n\nThis will allow for better root stack frame analysis."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bec45793e71c46608494423e852e11aab33b543e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bec45793e71c46608494423e852e11aab33b543e", "committedDate": "2020-07-21T14:14:59Z", "message": "Use Throwable.getStackTrace() instead."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2efe8226b82bdeb730fc78201da2a0f78c57c881", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2efe8226b82bdeb730fc78201da2a0f78c57c881", "committedDate": "2020-07-20T21:42:08Z", "message": "Use Throwable.getStackTrace() instead."}, "afterCommit": {"oid": "bec45793e71c46608494423e852e11aab33b543e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bec45793e71c46608494423e852e11aab33b543e", "committedDate": "2020-07-21T14:14:59Z", "message": "Use Throwable.getStackTrace() instead."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDUyODM2MTIx", "url": "https://github.com/DataDog/dd-trace-java/pull/1697#pullrequestreview-452836121", "createdAt": "2020-07-21T21:17:43Z", "commit": {"oid": "bec45793e71c46608494423e852e11aab33b543e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU1NjMzMzc0", "url": "https://github.com/DataDog/dd-trace-java/pull/1697#pullrequestreview-455633374", "createdAt": "2020-07-27T09:46:08Z", "commit": {"oid": "bec45793e71c46608494423e852e11aab33b543e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0NjowOVrOG3bXDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QwOTo0NjowOVrOG3bXDg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDc3MzEzNA==", "bodyText": "Hm, won't this trigger an infinite loop? scopeStackCollector is not updated inside the loop so once it is non-null and not-equal to target it will stay that forever ...", "url": "https://github.com/DataDog/dd-trace-java/pull/1697#discussion_r460773134", "createdAt": "2020-07-27T09:46:09Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ScopeManager.java", "diffHunk": "@@ -55,6 +55,7 @@ public ScopeStackCollector getCurrentScope() {\n \n   IMLTChunk endScope(ScopeStackCollector target) {\n     ScopeStackCollector scopeStackCollector = scopeCollectorQueue.removeLast();\n+    // FIXME: this seems dangerous:\n     while (scopeStackCollector != null && !target.equals(scopeStackCollector)) {\n       scopeCollectorQueue.removeLast();\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bec45793e71c46608494423e852e11aab33b543e"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2019, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}