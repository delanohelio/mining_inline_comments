{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjE2MjA4", "number": 1421, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxMDowMlrOD46HPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxMDowMlrOD46HPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwOTk4OTczOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQwOToxMDowMlrOGP4QpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNFQxNToxODozNlrOGQFL0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ==", "bodyText": "For OOME usually it is not really good to try and and log exception - the memory is stretched already and the logging statement can throw its own OOME and propagate the exception we are trying to mask to the caller.\nI would suggest handling OOME differently and just silently ignore it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419303589", "createdAt": "2020-05-04T09:10:02Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java", "diffHunk": "@@ -199,8 +199,13 @@ public void run() {\n       } catch (final Exception e) {\n         log.error(\"Exception in profiling thread, continuing\", e);\n       } catch (final Throwable t) {\n-        log.error(\"Fatal exception in profiling thread, exiting\", t);\n-        throw t;\n+        /*\n+        Try to continue even after fatal exception. It seems to be useful to attempt to store profile when this happens.\n+        For example JVM maybe out of heap and throwing OutOfMemoryError - we probably still would want to continue and", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "014cb92dc7ab745869bd2104b0ec077eed8dda02"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTM2MjU4MQ==", "bodyText": "good point, I'll just wrap the whole logging statement in try/catch", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419362581", "createdAt": "2020-05-04T11:12:21Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java", "diffHunk": "@@ -199,8 +199,13 @@ public void run() {\n       } catch (final Exception e) {\n         log.error(\"Exception in profiling thread, continuing\", e);\n       } catch (final Throwable t) {\n-        log.error(\"Fatal exception in profiling thread, exiting\", t);\n-        throw t;\n+        /*\n+        Try to continue even after fatal exception. It seems to be useful to attempt to store profile when this happens.\n+        For example JVM maybe out of heap and throwing OutOfMemoryError - we probably still would want to continue and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ=="}, "originalCommit": {"oid": "014cb92dc7ab745869bd2104b0ec077eed8dda02"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTUxNTM0NQ==", "bodyText": "Good idea to try the log if possible!", "url": "https://github.com/DataDog/dd-trace-java/pull/1421#discussion_r419515345", "createdAt": "2020-05-04T15:18:36Z", "author": {"login": "dbenamydd"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/controller/ProfilingSystem.java", "diffHunk": "@@ -199,8 +199,13 @@ public void run() {\n       } catch (final Exception e) {\n         log.error(\"Exception in profiling thread, continuing\", e);\n       } catch (final Throwable t) {\n-        log.error(\"Fatal exception in profiling thread, exiting\", t);\n-        throw t;\n+        /*\n+        Try to continue even after fatal exception. It seems to be useful to attempt to store profile when this happens.\n+        For example JVM maybe out of heap and throwing OutOfMemoryError - we probably still would want to continue and", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxOTMwMzU4OQ=="}, "originalCommit": {"oid": "014cb92dc7ab745869bd2104b0ec077eed8dda02"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 283, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}