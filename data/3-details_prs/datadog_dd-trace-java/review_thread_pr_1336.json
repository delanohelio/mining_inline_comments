{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkyODg1MDI3", "number": 1336, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowMDo1OVrODq7gTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNDo0NVrODq7lNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzQxNzEwOnYy", "diffSide": "RIGHT", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpanContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowMDo1OVrOF6-5jA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozMzo0MVrOF7IIJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5MjI2OA==", "bodyText": "I'd prefer to avoid double-brace initialization, since it will create another class.\nI think we could just addAll the default metrics.  That would also avoid repeating a bit code.", "url": "https://github.com/DataDog/dd-trace-java/pull/1336#discussion_r397392268", "createdAt": "2020-03-24T19:00:59Z", "author": {"login": "dougqh"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpanContext.java", "diffHunk": "@@ -308,12 +311,18 @@ public DDTracer getTracer() {\n \n   public Map<String, Number> getMetrics() {\n     final Map<String, Number> metrics = this.metrics.get();\n-    return metrics == null ? EMPTY_METRICS : metrics;\n+    return metrics == null ? DEFAULT_METRICS : metrics;\n   }\n \n   public void setMetric(final String key, final Number value) {\n     if (metrics.get() == null) {\n-      metrics.compareAndSet(null, new ConcurrentHashMap<String, Number>());\n+      metrics.compareAndSet(\n+          null,\n+          new ConcurrentHashMap<String, Number>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ae50004e82b248e9579d7c808d194396b5387d"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0MzQ2Mg==", "bodyText": "agree", "url": "https://github.com/DataDog/dd-trace-java/pull/1336#discussion_r397543462", "createdAt": "2020-03-25T00:33:41Z", "author": {"login": "lpriima"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpanContext.java", "diffHunk": "@@ -308,12 +311,18 @@ public DDTracer getTracer() {\n \n   public Map<String, Number> getMetrics() {\n     final Map<String, Number> metrics = this.metrics.get();\n-    return metrics == null ? EMPTY_METRICS : metrics;\n+    return metrics == null ? DEFAULT_METRICS : metrics;\n   }\n \n   public void setMetric(final String key, final Number value) {\n     if (metrics.get() == null) {\n-      metrics.compareAndSet(null, new ConcurrentHashMap<String, Number>());\n+      metrics.compareAndSet(\n+          null,\n+          new ConcurrentHashMap<String, Number>() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5MjI2OA=="}, "originalCommit": {"oid": "d0ae50004e82b248e9579d7c808d194396b5387d"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ2MzQyOTY3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/OpenTracing32.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNFQxOTowNDo0NVrOF6_Bnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yNVQwMDozMzozMlrOF7IH3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDMzNQ==", "bodyText": "Generally, I think this bit of clean-up is good.\nHowever, we're working on changing the OpenTelemetry split right now, so this might create merge conflicts.", "url": "https://github.com/DataDog/dd-trace-java/pull/1336#discussion_r397394335", "createdAt": "2020-03-24T19:04:45Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/OpenTracing32.java", "diffHunk": "@@ -34,6 +34,10 @@\n \n   private final OT32Span NOOP_SPAN = new OT32Span(\"\", NoopSpan.INSTANCE);\n \n+  private Tracer.SpanBuilder buildSpan(final String spanName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0ae50004e82b248e9579d7c808d194396b5387d"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzU0MzM5MA==", "bodyText": "reverted", "url": "https://github.com/DataDog/dd-trace-java/pull/1336#discussion_r397543390", "createdAt": "2020-03-25T00:33:32Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/OpenTracing32.java", "diffHunk": "@@ -34,6 +34,10 @@\n \n   private final OT32Span NOOP_SPAN = new OT32Span(\"\", NoopSpan.INSTANCE);\n \n+  private Tracer.SpanBuilder buildSpan(final String spanName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NzM5NDMzNQ=="}, "originalCommit": {"oid": "d0ae50004e82b248e9579d7c808d194396b5387d"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 420, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}