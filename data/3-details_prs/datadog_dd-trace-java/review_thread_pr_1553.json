{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI4NTcwMDk4", "number": 1553, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0NToxM1rOEDjukA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo0MDoyMVrOEETLiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTY2NTQ0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0NToxM1rOGgpSVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjo0NDo0NFrOGhzAXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDA1Mg==", "bodyText": "Why do we want the isJavaBefore9()?", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r436884052", "createdAt": "2020-06-08T17:45:13Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -100,6 +101,17 @@ public static void start(final Instrumentation inst, final URL bootstrapURL) {\n     } else {\n       startProfilingAgent(bootstrapURL, false);\n     }\n+\n+    /*\n+     * And yet another block for method-level tracer which is using JMX behind the scenes and\n+     * can mess with LogManager.\n+     */\n+    if (isJavaBefore9() && appUsingCustomLogManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NTc3NA==", "bodyText": "Probably we don't. My copy-paste mistake.", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r437955774", "createdAt": "2020-06-10T08:35:27Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -100,6 +101,17 @@ public static void start(final Instrumentation inst, final URL bootstrapURL) {\n     } else {\n       startProfilingAgent(bootstrapURL, false);\n     }\n+\n+    /*\n+     * And yet another block for method-level tracer which is using JMX behind the scenes and\n+     * can mess with LogManager.\n+     */\n+    if (isJavaBefore9() && appUsingCustomLogManager) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDA1Mg=="}, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5MTg3MA==", "bodyText": "The whole init section is not necessary. Removed.", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r438091870", "createdAt": "2020-06-10T12:44:44Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -100,6 +101,17 @@ public static void start(final Instrumentation inst, final URL bootstrapURL) {\n     } else {\n       startProfilingAgent(bootstrapURL, false);\n     }\n+\n+    /*\n+     * And yet another block for method-level tracer which is using JMX behind the scenes and\n+     * can mess with LogManager.\n+     */\n+    if (isJavaBefore9() && appUsingCustomLogManager) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NDA1Mg=="}, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMjI0NzI3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-mlt/agent-mlt.gradle", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQyMDoyMzoyMlrOGgvA9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMjo0MzoyMlrOGhy9LA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NzkxMA==", "bodyText": "I tried it locally and this doesn't actually work because dd-trace-core isn't accessible to this classloader.  Can the required classes be extracted out of dd-trace-core or do we need to move dd-trace-core to the shared classloader?", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r436977910", "createdAt": "2020-06-08T20:23:22Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-mlt/agent-mlt.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+plugins {\n+  id \"com.github.johnrengelman.shadow\"\n+}\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {\n+  compile deps.slf4j\n+  compile project(':dd-trace-core')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk4MTk5Ng==", "bodyText": "This problem isn't super visible because there isn't any exception handling in com.datadog.mlt.sampler.JMXSampler#sample, so the java.lang.NoClassDefFoundError: datadog/trace/core/util/ThreadStackAccess was silent.", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r436981996", "createdAt": "2020-06-08T20:31:05Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-mlt/agent-mlt.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+plugins {\n+  id \"com.github.johnrengelman.shadow\"\n+}\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {\n+  compile deps.slf4j\n+  compile project(':dd-trace-core')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NzkxMA=="}, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzk1NTE1NA==", "bodyText": "Argh. I forgot that the smoke tests are not working from JARs ... and was happy seeing them working ....\nWill fix this.", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r437955154", "createdAt": "2020-06-10T08:34:34Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-mlt/agent-mlt.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+plugins {\n+  id \"com.github.johnrengelman.shadow\"\n+}\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {\n+  compile deps.slf4j\n+  compile project(':dd-trace-core')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NzkxMA=="}, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA5MTA1Mg==", "bodyText": "Reshuffled the code to avoid this problem.", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r438091052", "createdAt": "2020-06-10T12:43:22Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-mlt/agent-mlt.gradle", "diffHunk": "@@ -0,0 +1,30 @@\n+plugins {\n+  id \"com.github.johnrengelman.shadow\"\n+}\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {\n+  compile deps.slf4j\n+  compile project(':dd-trace-core')", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjk3NzkxMA=="}, "originalCommit": {"oid": "2ac4516732250870bc23fd889612dfe19d060576"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyOTQ0MDExOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ThreadStackAccess.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo0MDoyMVrOGh1U3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMzo0MDoyMVrOGh1U3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODEyOTg4NQ==", "bodyText": "final useless here", "url": "https://github.com/DataDog/dd-trace-java/pull/1553#discussion_r438129885", "createdAt": "2020-06-10T13:40:21Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-mlt/src/main/java/com/datadog/mlt/sampler/ThreadStackAccess.java", "diffHunk": "@@ -1,9 +1,9 @@\n-package datadog.trace.core.util;\n+package com.datadog.mlt.sampler;\n \n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n-public class ThreadStackAccess {\n+public final class ThreadStackAccess {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b54dd07f45099928af1d9879346ace53cf287db8"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 218, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}