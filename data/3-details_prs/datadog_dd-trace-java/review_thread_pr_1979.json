{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAyMTMyNDMy", "number": 1979, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDo0MDoyMVrOEtEuNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDowMVrOEtI7jA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1Njk4NzQwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDo0MDoyMVrOHgqO7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNDo0MDoyMVrOHgqO7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDAwODQzMA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504008430", "createdAt": "2020-10-13T14:40:21Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -58,7 +59,7 @@ public boolean matches(TypeDescription target) {\n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>(4);\n-    transformers.put(isMethod().and(named(\"exec\")), getClass().getName() + \"$Exec\");\n+    transformers.put(isMethod().and(namedOneOf(\"doExec\", \"exec\")), getClass().getName() + \"$Exec\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3a5bb55353904ec4e80b11bfe566cd2b1a09bcba"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY2NTAyOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowMDo0MVrOHgw2EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNFQwNjo1NTowOFrOHhEu5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw==", "bodyText": "This shouldn't be needed...", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504116753", "createdAt": "2020-10-13T17:00:41Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODEwMg==", "bodyText": "This enables the filter provider", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118102", "createdAt": "2020-10-13T17:03:00Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEzNDAyMw==", "bodyText": "shoot... so confusing. sorry about that.", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504134023", "createdAt": "2020-10-13T17:29:18Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDQ0MjU5Ng==", "bodyText": "So the reason this was there in the first place was to be able to have different behavior depending on if the instrumentation was enabled or not (in effect reverting to the old behavior for CompletableFuture), but it seems that we are way beyond that point anyway, so I'll just remove this method and the corresponding check altogether.", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504442596", "createdAt": "2020-10-14T06:55:08Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNjc1Mw=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY2NzA1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowMToxMlrOHgw3YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowMzowOFrOHgw7og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNzA4OQ==", "bodyText": "or this", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504117089", "createdAt": "2020-10-13T17:01:12Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -58,12 +65,28 @@ public boolean matches(TypeDescription target) {\n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>(4);\n-    transformers.put(isMethod().and(named(\"exec\")), getClass().getName() + \"$Exec\");\n+    transformers.put(isMethod().and(namedOneOf(\"doExec\", \"exec\")), getClass().getName() + \"$Exec\");\n     transformers.put(isMethod().and(named(\"fork\")), getClass().getName() + \"$Fork\");\n     transformers.put(isMethod().and(named(\"cancel\")), getClass().getName() + \"$Cancel\");\n     return Collections.unmodifiableMap(transformers);\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODE3OA==", "bodyText": "and this", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118178", "createdAt": "2020-10-13T17:03:08Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/JavaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -58,12 +65,28 @@ public boolean matches(TypeDescription target) {\n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     Map<ElementMatcher<MethodDescription>, String> transformers = new HashMap<>(4);\n-    transformers.put(isMethod().and(named(\"exec\")), getClass().getName() + \"$Exec\");\n+    transformers.put(isMethod().and(namedOneOf(\"doExec\", \"exec\")), getClass().getName() + \"$Exec\");\n     transformers.put(isMethod().and(named(\"fork\")), getClass().getName() + \"$Fork\");\n     transformers.put(isMethod().and(named(\"cancel\")), getClass().getName() + \"$Cancel\");\n     return Collections.unmodifiableMap(transformers);\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExNzA4OQ=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 52}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE1NzY3NjkyOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowNDowMVrOHgw9sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xM1QxNzowODoxMFrOHgxHGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA==", "bodyText": "Is there are reason we don't want enabling/disabling to work like every other instrumentation?", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504118704", "createdAt": "2020-10-13T17:04:01Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDMyNA==", "bodyText": "This is a misleading named method from ExcludeFilterProvider - I blame @bantonsson. Perhaps we should call it isFilterEnabled. It means that the filter returned by excludedClasses should be respected.", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504120324", "createdAt": "2020-10-13T17:06:51Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMDU3Ng==", "bodyText": "NVM.  Name confusion", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504120576", "createdAt": "2020-10-13T17:07:19Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDEyMTExMw==", "bodyText": "@tylerbenson read it the same way, as did I the first time I saw it. Maybe we should change it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1979#discussion_r504121113", "createdAt": "2020-10-13T17:08:10Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/akka-concurrent/src/main/java/datadog/trace/instrumentation/akka/concurrent/AkkaForkJoinTaskInstrumentation.java", "diffHunk": "@@ -44,6 +52,22 @@ public AkkaForkJoinTaskInstrumentation() {\n     return named(\"akka.dispatch.forkjoin.ForkJoinTask\");\n   }\n \n+  @Override\n+  public boolean isEnabled() {\n+    return true;\n+  }\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNDExODcwNA=="}, "originalCommit": {"oid": "a5c68876b30da76e83f3599c0632c88575593b60"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4702, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}