{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNjc3NTk0", "number": 1741, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo0ODowNlrOEU9qXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo0ODowNlrOEU9qXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNDE3MjQ2OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMTo0ODowNlrOG7c2rQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQxMjoxNjozOFrOG7dwHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MTkxNw==", "bodyText": "Nice. Didn't know about this one.", "url": "https://github.com/DataDog/dd-trace-java/pull/1741#discussion_r464991917", "createdAt": "2020-08-04T11:48:06Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "diffHunk": "@@ -68,7 +68,7 @@ public boolean hasLoadedClass(final String className) {\n \n   Class<?> loadFromPackage(String packageName, String name) throws ClassNotFoundException {\n     if (internalJarURLHandler.getPackages().contains(packageName)) {\n-      synchronized (this) {\n+      synchronized (getClassLoadingLock(name)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2e16c19583599fa1f8c2d529fd5fb83c38bca807"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5NTYwNA==", "bodyText": "I'm tempted to do it at package level though. What do you think?", "url": "https://github.com/DataDog/dd-trace-java/pull/1741#discussion_r464995604", "createdAt": "2020-08-04T11:54:54Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "diffHunk": "@@ -68,7 +68,7 @@ public boolean hasLoadedClass(final String className) {\n \n   Class<?> loadFromPackage(String packageName, String name) throws ClassNotFoundException {\n     if (internalJarURLHandler.getPackages().contains(packageName)) {\n-      synchronized (this) {\n+      synchronized (getClassLoadingLock(name)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MTkxNw=="}, "originalCommit": {"oid": "2e16c19583599fa1f8c2d529fd5fb83c38bca807"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwNDkyMQ==", "bodyText": "Is it to try to avoid entries in the parallelLockMap?", "url": "https://github.com/DataDog/dd-trace-java/pull/1741#discussion_r465004921", "createdAt": "2020-08-04T12:13:24Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "diffHunk": "@@ -68,7 +68,7 @@ public boolean hasLoadedClass(final String className) {\n \n   Class<?> loadFromPackage(String packageName, String name) throws ClassNotFoundException {\n     if (internalJarURLHandler.getPackages().contains(packageName)) {\n-      synchronized (this) {\n+      synchronized (getClassLoadingLock(name)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MTkxNw=="}, "originalCommit": {"oid": "2e16c19583599fa1f8c2d529fd5fb83c38bca807"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTAwNjYyMg==", "bodyText": "yes, exactly, we already have the package names in InternalJarURLHandler and we could probably just key the locks against those. Fewer strings, smaller map, negligible or zero size increase over what we already have.", "url": "https://github.com/DataDog/dd-trace-java/pull/1741#discussion_r465006622", "createdAt": "2020-08-04T12:16:38Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/DatadogClassLoader.java", "diffHunk": "@@ -68,7 +68,7 @@ public boolean hasLoadedClass(final String className) {\n \n   Class<?> loadFromPackage(String packageName, String name) throws ClassNotFoundException {\n     if (internalJarURLHandler.getPackages().contains(packageName)) {\n-      synchronized (this) {\n+      synchronized (getClassLoadingLock(name)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NDk5MTkxNw=="}, "originalCommit": {"oid": "2e16c19583599fa1f8c2d529fd5fb83c38bca807"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4989, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}