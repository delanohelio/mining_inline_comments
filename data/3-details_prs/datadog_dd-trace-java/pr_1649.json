{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMzUyNDYw", "number": 1649, "title": "Automatic service naming", "bodyText": "As first approach, it will be consider either the JAR name or the main class name as substitute of the current unnamed-java-service, in case that this info could be calculated.\nThis PR has two parts:\n\nModification of the Config: Added a new step in the getSettingFromEnvironment to check if the requested property was set in the CapturedEnvironment properties.\nCreation of the CapturedEnvironment: This class should keep all environment properties which are platform dependant. In this particular case, the Java System Property sun.java.command will be used to obtain the JAR/Main Class information.\nBesides this property is not a standard, all main JDKs has set this property.\nTested on: OracleJDK, OpenJDK, AdoptOpenJDK, IBM JDK, Azul Zulu JDK, Amazon Coretto JDK\n\nExample:\nIf the property sun.java.command returns user/app/user-app.jar arg1 arg2 arg3 should set user-app as service.name.\nFinally, it is needed to clean CapturedEnvironment properties at DDSpecification startup to avoid polluting Config settings with platform dependant properties which may affect instrumentation tests that assert service.name == \"unnamed-java-service\".", "createdAt": "2020-07-02T08:14:36Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1649", "merged": true, "mergeCommit": {"oid": "3581c4e9d66e327aa7cfeccf310e443023939df7"}, "closed": true, "closedAt": "2020-07-08T13:56:47Z", "author": {"login": "drodriguezhdez"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcw6U7aAH2gAyNDQzMzUyNDYwOjFlOTU1ZWE2MDk2ZGIxZTc2MTA4Mjg0NDNjYWJmNzc0OTkyYjlmYTE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcy6yNhAFqTQ0NDc4NTU1Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "1e955ea6096db1e7610828443cabf774992b9fa1", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1e955ea6096db1e7610828443cabf774992b9fa1", "committedDate": "2020-07-02T08:11:48Z", "message": "Modified Config.java to include service name autodetection for Oracle JDKs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQxNDU5MDQ1", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-441459045", "createdAt": "2020-07-02T08:26:37Z", "commit": {"oid": "1e955ea6096db1e7610828443cabf774992b9fa1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODoyNjozN1rOGsCrBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwODoyNjozN1rOGsCrBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODgzNDMwOQ==", "bodyText": "Then I think we should change those tests rather than introduce test-aware behaviour here.", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#discussion_r448834309", "createdAt": "2020-07-02T08:26:37Z", "author": {"login": "richardstartin"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -1469,6 +1470,53 @@ private static String getHostName() {\n     return null;\n   }\n \n+  /**\n+   * Returns autodetected service name based on the java process command line. Tipically, the\n+   * autodetection will return either the JAR filename or the java main class.\n+   */\n+  private static String autodetectServiceName(final String defaultValue) {\n+    /*\n+     Testing purposes\n+     Automatic detection breaks the tests that assert default values.\n+     To fix that, it is checked if the method is executed from a DDSpecification\n+    */\n+    if (System.getProperty(\"DDSpecification\") != null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e955ea6096db1e7610828443cabf774992b9fa1"}, "originalPosition": 24}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aa075c884823088d2ab40b1c46eafdb85a42f4d5", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aa075c884823088d2ab40b1c46eafdb85a42f4d5", "committedDate": "2020-07-03T08:01:47Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}, "afterCommit": {"oid": "a716daf622a2312a5b3467ca301b7eba4f978d86", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a716daf622a2312a5b3467ca301b7eba4f978d86", "committedDate": "2020-07-03T08:42:50Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a716daf622a2312a5b3467ca301b7eba4f978d86", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a716daf622a2312a5b3467ca301b7eba4f978d86", "committedDate": "2020-07-03T08:42:50Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}, "afterCommit": {"oid": "e702a9493c6cae0780a3bc69c14931c8cd811c54", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e702a9493c6cae0780a3bc69c14931c8cd811c54", "committedDate": "2020-07-03T10:52:23Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e702a9493c6cae0780a3bc69c14931c8cd811c54", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e702a9493c6cae0780a3bc69c14931c8cd811c54", "committedDate": "2020-07-03T10:52:23Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}, "afterCommit": {"oid": "1defdb76d6f1058cd93488c43663a9bb0338b1a5", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1defdb76d6f1058cd93488c43663a9bb0338b1a5", "committedDate": "2020-07-03T13:28:12Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1defdb76d6f1058cd93488c43663a9bb0338b1a5", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1defdb76d6f1058cd93488c43663a9bb0338b1a5", "committedDate": "2020-07-03T13:28:12Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}, "afterCommit": {"oid": "64e8c88577baaaaac3dd08801e3bf8175673a215", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/64e8c88577baaaaac3dd08801e3bf8175673a215", "committedDate": "2020-07-03T13:31:59Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "418f4a1bb6288f4043dbfe1070dca22969e56e62", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/418f4a1bb6288f4043dbfe1070dca22969e56e62", "committedDate": "2020-07-03T13:44:42Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64e8c88577baaaaac3dd08801e3bf8175673a215", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/64e8c88577baaaaac3dd08801e3bf8175673a215", "committedDate": "2020-07-03T13:31:59Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}, "afterCommit": {"oid": "418f4a1bb6288f4043dbfe1070dca22969e56e62", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/418f4a1bb6288f4043dbfe1070dca22969e56e62", "committedDate": "2020-07-03T13:44:42Z", "message": "Use CaptureEnvironment instance to encapsulate platform dependant config settings."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "db1a04ddbad0d454f747772bd87b0e0366fd2daa", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/db1a04ddbad0d454f747772bd87b0e0366fd2daa", "committedDate": "2020-07-03T14:36:34Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}, "afterCommit": {"oid": "1f2e4767df6f9b3247a34a550e35dbc0df39d398", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1f2e4767df6f9b3247a34a550e35dbc0df39d398", "committedDate": "2020-07-03T15:14:50Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f2e4767df6f9b3247a34a550e35dbc0df39d398", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1f2e4767df6f9b3247a34a550e35dbc0df39d398", "committedDate": "2020-07-03T15:14:50Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}, "afterCommit": {"oid": "a5786748479b828d5d70a5a505d82dbd8f29711e", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a5786748479b828d5d70a5a505d82dbd8f29711e", "committedDate": "2020-07-06T07:13:29Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5786748479b828d5d70a5a505d82dbd8f29711e", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a5786748479b828d5d70a5a505d82dbd8f29711e", "committedDate": "2020-07-06T07:13:29Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}, "afterCommit": {"oid": "98f882b16efee534a55bcf2cf1e9f8213b60da98", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/98f882b16efee534a55bcf2cf1e9f8213b60da98", "committedDate": "2020-07-06T07:47:47Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c0693ee32f760233c20f1b8ca59bea348372d856", "committedDate": "2020-07-06T07:54:59Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "98f882b16efee534a55bcf2cf1e9f8213b60da98", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/98f882b16efee534a55bcf2cf1e9f8213b60da98", "committedDate": "2020-07-06T07:47:47Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}, "afterCommit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c0693ee32f760233c20f1b8ca59bea348372d856", "committedDate": "2020-07-06T07:54:59Z", "message": "Use 'sun.java.command' sysprop as main info to extract java process command line."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTEwNDYx", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-442910461", "createdAt": "2020-07-06T09:19:38Z", "commit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTExNTM5", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-442911539", "createdAt": "2020-07-06T09:21:07Z", "commit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyMTowN1rOGtPjng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQwOToyMjoyNlrOGtPmqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5Mzk4Mg==", "bodyText": "redundant check, extractJarOrClass is already testing against null command", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#discussion_r450093982", "createdAt": "2020-07-06T09:21:07Z", "author": {"login": "jpbempel"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/env/CapturedEnvironment.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package datadog.trace.api.env;\n+\n+import datadog.trace.api.config.GeneralConfig;\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * The {@code CapturedEnvironment} instance keeps those {@code Config} values which are platform\n+ * dependant.\n+ */\n+@Slf4j\n+public class CapturedEnvironment {\n+\n+  private static final CapturedEnvironment INSTANCE = new CapturedEnvironment();\n+\n+  @Getter private final Map<String, String> properties;\n+\n+  CapturedEnvironment() {\n+    properties = new HashMap<>();\n+    properties.put(GeneralConfig.SERVICE_NAME, autodetectServiceName());\n+  }\n+\n+  // Testing purposes\n+  static void useFixedEnv(final Map<String, String> props) {\n+    INSTANCE.properties.clear();\n+\n+    for (final Map.Entry<String, String> entry : props.entrySet()) {\n+      INSTANCE.properties.put(entry.getKey(), entry.getValue());\n+    }\n+  }\n+\n+  /**\n+   * Returns autodetected service name based on the java process command line. Typically, the\n+   * autodetection will return either the JAR filename or the java main class.\n+   */\n+  private String autodetectServiceName() {\n+    // Besides \"sun.java.command\" property is not an standard, all main JDKs has set this property.\n+    // Tested on:\n+    // - OracleJDK, OpenJDK, AdoptOpenJDK, IBM JDK, Azul Zulu JDK, Amazon Coretto JDK\n+    if (System.getProperty(\"sun.java.command\") != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDA5NDc2Mw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (split.length < 1 || split[0].equals(\"\")) {\n          \n          \n            \n                if (split.length == 0 || split[0].equals(\"\")) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#discussion_r450094763", "createdAt": "2020-07-06T09:22:26Z", "author": {"login": "jpbempel"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/env/CapturedEnvironment.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package datadog.trace.api.env;\n+\n+import datadog.trace.api.config.GeneralConfig;\n+import java.io.File;\n+import java.util.HashMap;\n+import java.util.Map;\n+import lombok.Getter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * The {@code CapturedEnvironment} instance keeps those {@code Config} values which are platform\n+ * dependant.\n+ */\n+@Slf4j\n+public class CapturedEnvironment {\n+\n+  private static final CapturedEnvironment INSTANCE = new CapturedEnvironment();\n+\n+  @Getter private final Map<String, String> properties;\n+\n+  CapturedEnvironment() {\n+    properties = new HashMap<>();\n+    properties.put(GeneralConfig.SERVICE_NAME, autodetectServiceName());\n+  }\n+\n+  // Testing purposes\n+  static void useFixedEnv(final Map<String, String> props) {\n+    INSTANCE.properties.clear();\n+\n+    for (final Map.Entry<String, String> entry : props.entrySet()) {\n+      INSTANCE.properties.put(entry.getKey(), entry.getValue());\n+    }\n+  }\n+\n+  /**\n+   * Returns autodetected service name based on the java process command line. Typically, the\n+   * autodetection will return either the JAR filename or the java main class.\n+   */\n+  private String autodetectServiceName() {\n+    // Besides \"sun.java.command\" property is not an standard, all main JDKs has set this property.\n+    // Tested on:\n+    // - OracleJDK, OpenJDK, AdoptOpenJDK, IBM JDK, Azul Zulu JDK, Amazon Coretto JDK\n+    if (System.getProperty(\"sun.java.command\") != null) {\n+      return extractJarOrClass(System.getProperty(\"sun.java.command\"));\n+    }\n+\n+    return null;\n+  }\n+\n+  private String extractJarOrClass(final String command) {\n+    if (command == null || command.equals(\"\")) {\n+      return null;\n+    }\n+\n+    final String[] split = command.trim().split(\" \");\n+    if (split.length < 1 || split[0].equals(\"\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c0693ee32f760233c20f1b8ca59bea348372d856"}, "originalPosition": 56}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d602aaa713d942c24ffa4f16e3af8128ecb444", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f5d602aaa713d942c24ffa4f16e3af8128ecb444", "committedDate": "2020-07-06T10:03:39Z", "message": "Apply suggestions from PR feedback."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQyOTQ0ODI2", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-442944826", "createdAt": "2020-07-06T10:07:51Z", "commit": {"oid": "f5d602aaa713d942c24ffa4f16e3af8128ecb444"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjkzNTg2", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-443293586", "createdAt": "2020-07-06T17:57:07Z", "commit": {"oid": "f5d602aaa713d942c24ffa4f16e3af8128ecb444"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNzo1NzowN1rOGthjmA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODowMTo1MVrOGthtXQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM4ODg4OA==", "bodyText": "Should the service name be example instead of example.jar?", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#discussion_r450388888", "createdAt": "2020-07-06T17:57:07Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/test/groovy/datadog/trace/api/env/CapturedEnvironmentTest.groovy", "diffHunk": "@@ -0,0 +1,82 @@\n+package datadog.trace.api.env\n+\n+import datadog.trace.api.config.GeneralConfig\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Rule\n+import org.junit.contrib.java.lang.system.RestoreSystemProperties\n+\n+class CapturedEnvironmentTest extends DDSpecification {\n+\n+  @Rule\n+  public final RestoreSystemProperties restoreSystemProperties = new RestoreSystemProperties()\n+\n+  def \"non autodetected service.name with null command\"() {\n+    setup:\n+    System.clearProperty(\"sun.java.command\")\n+\n+    when:\n+    def capturedEnv = new CapturedEnvironment()\n+\n+    then:\n+    def props = capturedEnv.properties\n+    props.get(GeneralConfig.SERVICE_NAME) == null\n+  }\n+\n+  def \"non autodetected service.name with empty command\"() {\n+    setup:\n+    System.setProperty(\"sun.java.command\", \"\")\n+\n+    when:\n+    def capturedEnv = new CapturedEnvironment()\n+\n+    then:\n+    def props = capturedEnv.properties\n+    props.get(GeneralConfig.SERVICE_NAME) == null\n+  }\n+\n+  def \"non autodetected service.name with all blanks command\"() {\n+    setup:\n+    System.setProperty(\"sun.java.command\", \" \")\n+\n+    when:\n+    def capturedEnv = new CapturedEnvironment()\n+\n+    then:\n+    def props = capturedEnv.properties\n+    props.get(GeneralConfig.SERVICE_NAME) == null\n+  }\n+\n+  def \"set service.name by sysprop 'sun.java.command' with class\"() {\n+    setup:\n+    System.setProperty(\"sun.java.command\", \"org.example.App -Dfoo=bar arg2 arg3\")\n+\n+    when:\n+    def capturedEnv = new CapturedEnvironment()\n+\n+    then:\n+    def props = capturedEnv.properties\n+    props.get(GeneralConfig.SERVICE_NAME) == \"org.example.App\"\n+  }\n+\n+  def \"set service.name by sysprop 'sun.java.command' with jar\"() {\n+    setup:\n+    System.setProperty(\"sun.java.command\", \"foo/bar/example.jar -Dfoo=bar arg2 arg3\")\n+\n+    when:\n+    def capturedEnv = new CapturedEnvironment()\n+\n+    then:\n+    def props = capturedEnv.properties\n+    props.get(GeneralConfig.SERVICE_NAME) == \"example.jar\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d602aaa713d942c24ffa4f16e3af8128ecb444"}, "originalPosition": 70}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDM5MTM4OQ==", "bodyText": "I would like to see a test with both this and the service name set to demonstrate the manually configured name takes priority.", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#discussion_r450391389", "createdAt": "2020-07-06T18:01:51Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/test/groovy/datadog/trace/api/ConfigTest.groovy", "diffHunk": "@@ -645,6 +649,19 @@ class ConfigTest extends DDSpecification {\n     config.writerType == \"DDAgentWriter\"\n   }\n \n+  def \"captured env props override default props\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f5d602aaa713d942c24ffa4f16e3af8128ecb444"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49baa00573b7f41a80a88a0341bd47aebd828a4f", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/49baa00573b7f41a80a88a0341bd47aebd828a4f", "committedDate": "2020-07-07T07:11:09Z", "message": "Added tests to demonstrate the manually configured properties have prevalence over captured env props."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8d7fdf22a045e532a706dab2aca06aa92ed61dc9", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8d7fdf22a045e532a706dab2aca06aa92ed61dc9", "committedDate": "2020-07-08T12:14:13Z", "message": "Remove .jar suffix to service name based on JAR name"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQ0Nzg1NTUy", "url": "https://github.com/DataDog/dd-trace-java/pull/1649#pullrequestreview-444785552", "createdAt": "2020-07-08T13:51:38Z", "commit": {"oid": "8d7fdf22a045e532a706dab2aca06aa92ed61dc9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2231, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}