{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMDE4OTEy", "number": 1729, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDoyNTo1MVrOEUE9Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDoyNTo1MVrOEUE9Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NDg4MjMwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/hystrix-1.4/src/main/java/datadog/trace/instrumentation/hystrix/HystrixDecorator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDoyNTo1MVrOG6Kg9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQxNDozODoxM1rOG6K8fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0Mjg3MA==", "bodyText": "This seems reasonable for a size, is there a reason for this specific number?", "url": "https://github.com/DataDog/dd-trace-java/pull/1729#discussion_r463642870", "createdAt": "2020-07-31T14:25:51Z", "author": {"login": "devinsba"}, "path": "dd-java-agent/instrumentation/hystrix-1.4/src/main/java/datadog/trace/instrumentation/hystrix/HystrixDecorator.java", "diffHunk": "@@ -1,13 +1,56 @@\n package datadog.trace.instrumentation.hystrix;\n \n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_CIRCUIT_OPEN;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_COMMAND;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_GROUP;\n+\n import com.netflix.hystrix.HystrixInvokableInfo;\n import datadog.trace.api.DDTags;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.FixedSizeCache;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.util.Objects;\n \n public class HystrixDecorator extends BaseDecorator {\n   public static HystrixDecorator DECORATE = new HystrixDecorator();\n \n+  private static final FixedSizeCache<ResourceNameCacheKey, String> RESOURCE_NAME_CACHE =\n+      new FixedSizeCache<>(64);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d318fe9759c32acb1ec5f4a804d7adef770c4db"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0ODI2Mg==", "bodyText": "It's a guess, we can't really know what the right size is, but I guess most users only have a single (default) group and there are probably around 10-20 commands in a typical application, and there is probably a 1:1 correspondence between command and method name. If it's too small, it will churn, but we can't use unbounded memory. It could be configurable, but I doubt anyone cares enough to configure it. The main thing I expect to get from this, once the dictionary encoding is merged, is that the resource name almost always has its hash code calculated by the time it's encoded.", "url": "https://github.com/DataDog/dd-trace-java/pull/1729#discussion_r463648262", "createdAt": "2020-07-31T14:35:28Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/hystrix-1.4/src/main/java/datadog/trace/instrumentation/hystrix/HystrixDecorator.java", "diffHunk": "@@ -1,13 +1,56 @@\n package datadog.trace.instrumentation.hystrix;\n \n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_CIRCUIT_OPEN;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_COMMAND;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_GROUP;\n+\n import com.netflix.hystrix.HystrixInvokableInfo;\n import datadog.trace.api.DDTags;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.FixedSizeCache;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.util.Objects;\n \n public class HystrixDecorator extends BaseDecorator {\n   public static HystrixDecorator DECORATE = new HystrixDecorator();\n \n+  private static final FixedSizeCache<ResourceNameCacheKey, String> RESOURCE_NAME_CACHE =\n+      new FixedSizeCache<>(64);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0Mjg3MA=="}, "originalCommit": {"oid": "3d318fe9759c32acb1ec5f4a804d7adef770c4db"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0OTkxOA==", "bodyText": "Cool works for me", "url": "https://github.com/DataDog/dd-trace-java/pull/1729#discussion_r463649918", "createdAt": "2020-07-31T14:38:13Z", "author": {"login": "devinsba"}, "path": "dd-java-agent/instrumentation/hystrix-1.4/src/main/java/datadog/trace/instrumentation/hystrix/HystrixDecorator.java", "diffHunk": "@@ -1,13 +1,56 @@\n package datadog.trace.instrumentation.hystrix;\n \n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_CIRCUIT_OPEN;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_COMMAND;\n+import static datadog.trace.bootstrap.instrumentation.api.InstrumentationTags.HYSTRIX_GROUP;\n+\n import com.netflix.hystrix.HystrixInvokableInfo;\n import datadog.trace.api.DDTags;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.FixedSizeCache;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.util.Objects;\n \n public class HystrixDecorator extends BaseDecorator {\n   public static HystrixDecorator DECORATE = new HystrixDecorator();\n \n+  private static final FixedSizeCache<ResourceNameCacheKey, String> RESOURCE_NAME_CACHE =\n+      new FixedSizeCache<>(64);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzY0Mjg3MA=="}, "originalCommit": {"oid": "3d318fe9759c32acb1ec5f4a804d7adef770c4db"}, "originalPosition": 18}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4974, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}