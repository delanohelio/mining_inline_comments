{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxNjE5NDEx", "number": 1562, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1NzozOFrOEDzTjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo0ODo1MlrOED8sPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNDIxNzc1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/test/groovy/datadog/trace/bootstrap/instrumentation/decorator/BaseDecoratorTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1NzozOFrOGhCBgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQwOTo1ODo1M1rOGhCEsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4OTM0Ng==", "bodyText": "I'm wondering if this really is desirable, since the method names will be attributed to the enclosing class instead of where they are actually defined, which could lead to confusion.", "url": "https://github.com/DataDog/dd-trace-java/pull/1562#discussion_r437289346", "createdAt": "2020-06-09T09:57:38Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-bootstrap/src/test/groovy/datadog/trace/bootstrap/instrumentation/decorator/BaseDecoratorTest.groovy", "diffHunk": "@@ -198,7 +198,8 @@ class BaseDecoratorTest extends DDSpecification {\n     target                         | name\n     SomeInnerClass                 | \"SomeInnerClass\"\n     SomeNestedClass                | \"SomeNestedClass\"\n-    SampleJavaClass.anonymousClass | \"SampleJavaClass\\$1\"\n+    SampleJavaClass                | \"SampleJavaClass\"\n+    SampleJavaClass.anonymousClass | \"SampleJavaClass\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb2f6366042c92c4180c92a280c5b33f931b048e"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI5MDE2MQ==", "bodyText": "Indeed, but it also reduces resource name cardinality, so may be worth considering.", "url": "https://github.com/DataDog/dd-trace-java/pull/1562#discussion_r437290161", "createdAt": "2020-06-09T09:58:53Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-bootstrap/src/test/groovy/datadog/trace/bootstrap/instrumentation/decorator/BaseDecoratorTest.groovy", "diffHunk": "@@ -198,7 +198,8 @@ class BaseDecoratorTest extends DDSpecification {\n     target                         | name\n     SomeInnerClass                 | \"SomeInnerClass\"\n     SomeNestedClass                | \"SomeNestedClass\"\n-    SampleJavaClass.anonymousClass | \"SampleJavaClass\\$1\"\n+    SampleJavaClass                | \"SampleJavaClass\"\n+    SampleJavaClass.anonymousClass | \"SampleJavaClass\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzI4OTM0Ng=="}, "originalCommit": {"oid": "bb2f6366042c92c4180c92a280c5b33f931b048e"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyNTc1NTQ4OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/BaseDecorator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo0ODo1MlrOGhRFvg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOVQxNTo0ODo1MlrOGhRFvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNzUzNjE5MA==", "bodyText": "Nice use of ClassValue again.", "url": "https://github.com/DataDog/dd-trace-java/pull/1562#discussion_r437536190", "createdAt": "2020-06-09T15:48:52Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/BaseDecorator.java", "diffHunk": "@@ -12,10 +12,19 @@\n import java.net.InetSocketAddress;\n import java.util.Arrays;\n import java.util.TreeSet;\n+import java.util.concurrent.ConcurrentHashMap;\n import java.util.concurrent.ExecutionException;\n \n public abstract class BaseDecorator {\n \n+  private static final ClassValue<ClassName> CLASS_NAMES =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d098ae3704d2d8bb89952a715e7f2d2a3acf2c6d"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 225, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}