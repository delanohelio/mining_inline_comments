{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0MTA2NzMy", "number": 1655, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0MDoxN1rOELSOYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNjo0NFrOELzPSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwMjY4Mzg1OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0MDoxN1rOGszxcQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wM1QxNTo0MzoxOFrOGsz1RQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzODc2OQ==", "bodyText": "camelCase?", "url": "https://github.com/DataDog/dd-trace-java/pull/1655#discussion_r449638769", "createdAt": "2020-07-03T15:40:17Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -45,7 +47,7 @@\n   private final DDId parentId;\n \n   /** Tags are associated to the current span, they will not propagate to the children span */\n-  private final Map<String, Object> tags = new ConcurrentHashMap<>();\n+  private final Map<String, Object> unsafe_tags;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "183c78b7a50d6cc8becbb61a88b516778fc8775b"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzOTc0OQ==", "bodyText": "Yeah, I'm a bit Rusty at times...", "url": "https://github.com/DataDog/dd-trace-java/pull/1655#discussion_r449639749", "createdAt": "2020-07-03T15:43:18Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -45,7 +47,7 @@\n   private final DDId parentId;\n \n   /** Tags are associated to the current span, they will not propagate to the children span */\n-  private final Map<String, Object> tags = new ConcurrentHashMap<>();\n+  private final Map<String, Object> unsafe_tags;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTYzODc2OQ=="}, "originalCommit": {"oid": "183c78b7a50d6cc8becbb61a88b516778fc8775b"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwODA5Mjg4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxODozNjo0NFrOGtizQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQxMzozMDoyNVrOG5jFww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwOTI4Mw==", "bodyText": "Can you add a comment rationalizing why you went with HashMap + synchronization vs ConcurrentHashMap?", "url": "https://github.com/DataDog/dd-trace-java/pull/1655#discussion_r450409283", "createdAt": "2020-07-06T18:36:44Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -110,9 +108,10 @@ public DDSpanContext(\n       this.baggageItems = new ConcurrentHashMap<>(baggageItems);\n     }\n \n-    if (tags != null) {\n-      this.tags.putAll(tags);\n-    }\n+    // Three is the magic number from the tags below that we set at the end,\n+    // and \"* 4 / 3\" is to make sure that we don't resize immediately\n+    int capacity = ((tagsSize <= 0 ? 3 : tagsSize + 3) * 4) / 3;\n+    this.unsafeTags = new HashMap<>(capacity);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "42bd262d16a549df21da698845914b6d2d73fbc0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjM2NTMxOQ==", "bodyText": "Absolutely. I'll do that.", "url": "https://github.com/DataDog/dd-trace-java/pull/1655#discussion_r462365319", "createdAt": "2020-07-29T14:57:17Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -110,9 +108,10 @@ public DDSpanContext(\n       this.baggageItems = new ConcurrentHashMap<>(baggageItems);\n     }\n \n-    if (tags != null) {\n-      this.tags.putAll(tags);\n-    }\n+    // Three is the magic number from the tags below that we set at the end,\n+    // and \"* 4 / 3\" is to make sure that we don't resize immediately\n+    int capacity = ((tagsSize <= 0 ? 3 : tagsSize + 3) * 4) / 3;\n+    this.unsafeTags = new HashMap<>(capacity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwOTI4Mw=="}, "originalCommit": {"oid": "42bd262d16a549df21da698845914b6d2d73fbc0"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mjk5NjkzMQ==", "bodyText": "A comment has been added to the unsafeTags field.", "url": "https://github.com/DataDog/dd-trace-java/pull/1655#discussion_r462996931", "createdAt": "2020-07-30T13:30:25Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -110,9 +108,10 @@ public DDSpanContext(\n       this.baggageItems = new ConcurrentHashMap<>(baggageItems);\n     }\n \n-    if (tags != null) {\n-      this.tags.putAll(tags);\n-    }\n+    // Three is the magic number from the tags below that we set at the end,\n+    // and \"* 4 / 3\" is to make sure that we don't resize immediately\n+    int capacity = ((tagsSize <= 0 ? 3 : tagsSize + 3) * 4) / 3;\n+    this.unsafeTags = new HashMap<>(capacity);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDQwOTI4Mw=="}, "originalCommit": {"oid": "42bd262d16a549df21da698845914b6d2d73fbc0"}, "originalPosition": 53}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 115, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}