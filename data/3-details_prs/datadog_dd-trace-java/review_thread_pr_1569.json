{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMyNTU2NDE0", "number": 1569, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyMzoyNFrOEFChbA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxOToyMVrOEFGNEQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzE5NjYwOnYy", "diffSide": "RIGHT", "path": "utils/container-utils/src/test/groovy/ContainerInfoTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyMzoyNFrOGjCATg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyNzowOVrOGjCGtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NjE5MA==", "bodyText": "Unless I'm very much mistaken this will not get called.\nYou may want to consider moving these things into cleanup: block", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439386190", "createdAt": "2020-06-12T12:23:24Z", "author": {"login": "mar-kolya"}, "path": "utils/container-utils/src/test/groovy/ContainerInfoTest.groovy", "diffHunk": "@@ -144,4 +149,46 @@ class ContainerInfoTest extends DDSpecification {\n 2:memory:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\n 1:name=systemd:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\"\"\"\n   }\n+\n+  def \"ContainerInfo from empty file is empty\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-empty-file\")\n+    f.deleteOnExit()\n+    Path p = Paths.get(f.path)\n+    ContainerInfo containerInfo = ContainerInfo.fromProcFile(p)\n+\n+\n+    then:\n+    containerInfo.getContainerId() == null\n+    containerInfo.getPodId() == null\n+    containerInfo.getCGroups().size() == 0\n+  }\n+\n+  def \"ContainerInfo throws java.text.ParseException when given malformed procfile\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-malformed-file\")\n+    f.deleteOnExit()\n+    f.write(\"This is not valid\")\n+    Path p = Paths.get(f.path)\n+    ContainerInfo.fromProcFile(p)\n+    f.deleteOnExit()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NzgyOQ==", "bodyText": "Actually, on second thought - it looks like you do not need this line at all...", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439387829", "createdAt": "2020-06-12T12:27:09Z", "author": {"login": "mar-kolya"}, "path": "utils/container-utils/src/test/groovy/ContainerInfoTest.groovy", "diffHunk": "@@ -144,4 +149,46 @@ class ContainerInfoTest extends DDSpecification {\n 2:memory:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\n 1:name=systemd:/ecs/55091c13-b8cf-4801-b527-f4601742204d/432624d2150b349fe35ba397284dea788c2bf66b885d14dfc1569b01890ca7da\"\"\"\n   }\n+\n+  def \"ContainerInfo from empty file is empty\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-empty-file\")\n+    f.deleteOnExit()\n+    Path p = Paths.get(f.path)\n+    ContainerInfo containerInfo = ContainerInfo.fromProcFile(p)\n+\n+\n+    then:\n+    containerInfo.getContainerId() == null\n+    containerInfo.getPodId() == null\n+    containerInfo.getCGroups().size() == 0\n+  }\n+\n+  def \"ContainerInfo throws java.text.ParseException when given malformed procfile\"() {\n+    when:\n+    File f = File.createTempFile(\"container-info-test-\", \"-malformed-file\")\n+    f.deleteOnExit()\n+    f.write(\"This is not valid\")\n+    Path p = Paths.get(f.path)\n+    ContainerInfo.fromProcFile(p)\n+    f.deleteOnExit()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NjE5MA=="}, "originalCommit": {"oid": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzIxNTM2OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMDoyNlrOGjCMLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMDoyNlrOGjCMLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTIzMA==", "bodyText": "Would you be able to use a constant for header name here?", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439389230", "createdAt": "2020-06-12T12:30:26Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -192,6 +192,30 @@ public void testRequestParameters(final String compression)\n     assertArrayEquals(expectedBytes, uploadedBytes);\n   }\n \n+  @Test\n+  public void testRequestWithoutContainerID() throws IOException, InterruptedException {\n+    uploader = new ProfileUploader(config, null);\n+\n+    server.enqueue(new MockResponse().setResponseCode(200));\n+    uploader.upload(RECORDING_TYPE, mockRecordingData(RECORDING_RESOURCE));\n+\n+    final RecordedRequest request = server.takeRequest(5, TimeUnit.SECONDS);\n+    assertNotNull(request);\n+    assertNull(request.getHeader(\"Datadog-Container-ID\"));\n+  }\n+\n+  @Test\n+  public void testRequestWithContainerId() throws IOException, InterruptedException {\n+    uploader = new ProfileUploader(config, \"container-id\");\n+\n+    server.enqueue(new MockResponse().setResponseCode(200));\n+    uploader.upload(RECORDING_TYPE, mockRecordingData(RECORDING_RESOURCE));\n+\n+    final RecordedRequest request = server.takeRequest(5, TimeUnit.SECONDS);\n+    assertNotNull(request);\n+    assertEquals(request.getHeader(\"Datadog-Container-ID\"), \"container-id\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzIxNjg1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMDo1NFrOGjCNDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjozMDo1NFrOGjCNDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4OTQ1Mw==", "bodyText": "I think you can fold one of these tests into testRequestParameters - which is sort of our 'happy path' test.", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439389453", "createdAt": "2020-06-12T12:30:54Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -192,6 +192,30 @@ public void testRequestParameters(final String compression)\n     assertArrayEquals(expectedBytes, uploadedBytes);\n   }\n \n+  @Test\n+  public void testRequestWithoutContainerID() throws IOException, InterruptedException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b2f4b20207da4b61fffa71419f9c84c2c9d47ec8"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczNzc5OTg1OnYy", "diffSide": "RIGHT", "path": ".palantir/revapi.yml", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxOToyMVrOGjH8bQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxNToxOToyMVrOGjH8bQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTQ4MzUwMQ==", "bodyText": "This is an indication of a problem... The new module needs to be bundled in with dd-trace-ot like was done here: https://github.com/DataDog/dd-trace-java/blob/master/dd-trace-ot/dd-trace-ot.gradle#L89.\nThat should make the revapi break go away.", "url": "https://github.com/DataDog/dd-trace-java/pull/1569#discussion_r439483501", "createdAt": "2020-06-12T15:19:21Z", "author": {"login": "tylerbenson"}, "path": ".palantir/revapi.yml", "diffHunk": "@@ -420,6 +420,9 @@ acceptedBreaks:\n       justification: \"Builder constructor was never meant to be public\"\n   \"0.54.0\":\n     com.datadoghq:dd-trace-ot:\n+    - code: \"java.class.removed\"\n+      old: \"class datadog.trace.core.ContainerInfo\"\n+      justification: \"ContainerInfo was moved to a shared module\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee8974aac6ef5f59cd3caf1a6a8c491e3ab23497"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 231, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}