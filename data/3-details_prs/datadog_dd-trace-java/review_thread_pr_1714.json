{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU3MjU4NTAw", "number": 1714, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoxMDoyOVrOESdO1Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoxMDoyOVrOESdO1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3Nzg4NzU3OnYy", "diffSide": "RIGHT", "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoxMDoyOVrOG3pcHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yN1QxNjoxODo1NVrOG3pxjg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwMzgwNg==", "bodyText": "for me it needs to be volatile here\ncollect will be called by JMXSampler thread", "url": "https://github.com/DataDog/dd-trace-java/pull/1714#discussion_r461003806", "createdAt": "2020-07-27T16:10:29Z", "author": {"login": "jpbempel"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "diffHunk": "@@ -17,6 +17,12 @@\n   private static final boolean USE_SUBTREE_COMPRESSION =\n       Boolean.getBoolean(\"mlt.subtree_compression\");\n \n+  /**\n+   * Base stacktrace to add the first time collect is called. This is done to avoid the cost of\n+   * converting in the main thread (especially if no additional stacktraces are collected).\n+   */\n+  private StackTraceElement[] baseStack;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df420124b20b53982671246d172b82638e9a062e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwNTk5NA==", "bodyText": "but it's initialized in the constructor, so visibility should be guaranteed, right?", "url": "https://github.com/DataDog/dd-trace-java/pull/1714#discussion_r461005994", "createdAt": "2020-07-27T16:13:49Z", "author": {"login": "tylerbenson"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "diffHunk": "@@ -17,6 +17,12 @@\n   private static final boolean USE_SUBTREE_COMPRESSION =\n       Boolean.getBoolean(\"mlt.subtree_compression\");\n \n+  /**\n+   * Base stacktrace to add the first time collect is called. This is done to avoid the cost of\n+   * converting in the main thread (especially if no additional stacktraces are collected).\n+   */\n+  private StackTraceElement[] baseStack;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwMzgwNg=="}, "originalCommit": {"oid": "df420124b20b53982671246d172b82638e9a062e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwODEwNg==", "bodyText": "only for final fields\nhttps://shipilev.net/blog/2014/all-fields-are-final/", "url": "https://github.com/DataDog/dd-trace-java/pull/1714#discussion_r461008106", "createdAt": "2020-07-27T16:17:07Z", "author": {"login": "jpbempel"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "diffHunk": "@@ -17,6 +17,12 @@\n   private static final boolean USE_SUBTREE_COMPRESSION =\n       Boolean.getBoolean(\"mlt.subtree_compression\");\n \n+  /**\n+   * Base stacktrace to add the first time collect is called. This is done to avoid the cost of\n+   * converting in the main thread (especially if no additional stacktraces are collected).\n+   */\n+  private StackTraceElement[] baseStack;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwMzgwNg=="}, "originalCommit": {"oid": "df420124b20b53982671246d172b82638e9a062e"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwOTI5NA==", "bodyText": "Right, any fields set in constructor should be visible once initialized instance is released.", "url": "https://github.com/DataDog/dd-trace-java/pull/1714#discussion_r461009294", "createdAt": "2020-07-27T16:18:55Z", "author": {"login": "jbachorik"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "diffHunk": "@@ -17,6 +17,12 @@\n   private static final boolean USE_SUBTREE_COMPRESSION =\n       Boolean.getBoolean(\"mlt.subtree_compression\");\n \n+  /**\n+   * Base stacktrace to add the first time collect is called. This is done to avoid the cost of\n+   * converting in the main thread (especially if no additional stacktraces are collected).\n+   */\n+  private StackTraceElement[] baseStack;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MTAwMzgwNg=="}, "originalCommit": {"oid": "df420124b20b53982671246d172b82638e9a062e"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4956, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}