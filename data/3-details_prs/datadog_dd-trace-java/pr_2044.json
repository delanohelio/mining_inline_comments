{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzMTQwNTQ2", "number": 2044, "title": "Replace Guava caches", "bodyText": "This pull request removes the last Guava dependency for non-testing code \ud83c\udf89\nFor weak caches:\nJava 7: Use a combination of WeakLockFree and ConcurrentLinkedHashMap (CLHM was written by the same guy that went on to write Caffeine and is the recommended solution for < jdk8).  Entries are expunged when put or computeIfAbsent might hit capacity\nJava 8+: Use Caffeine\nFor other FIFO caches\nUse ConcurrentLinkedHashMap.  I looked at our DDCache implementations and they don't support this use case.\nAdditionally, I did a small cleanup on the WeakCache and WeakMap interfaces\nFor reference, the maps/caches in use after this PR:\n\n\n\n\nUnbounded\nBounded (random removal)\nBounded (FIFO)\n\n\n\n\nWeak Keys\nWeakLockFree or synchronized java.util.WeakHashMap\n--\nWeakLockFree+CLHM (jdk7) / Caffeine (jdk8+)\n\n\nStrong Keys\ndatadog.trace.api.CHMCache\ndatadog.trace.api.FixedSizeCache\nConcurrentLinkedHashMap", "createdAt": "2020-10-30T16:57:09Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2044", "merged": true, "mergeCommit": {"oid": "f76fd6b1681ee3f6bfed28c1099523440e684cab"}, "closed": true, "closedAt": "2020-11-24T20:03:55Z", "author": {"login": "randomanderson"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdXpypJgFqTUyMDg1OTg5Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdfolBuAFqTUzNzQyNTY0NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODU5ODky", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-520859892", "createdAt": "2020-10-30T16:58:54Z", "commit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo1ODo1NVrOHrX3JQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNjo1ODo1NVrOHrX3JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0MTc2NQ==", "bodyText": "There is no basis for this number.  The alternative is removing newWeakCache() and forcing callers to specify a capacity.", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r515241765", "createdAt": "2020-10-30T16:58:55Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTooling.java", "diffHunk": "@@ -27,27 +27,38 @@ static void registerWeakMapProvider() {\n     }\n   }\n \n-  private static <K, V> Provider loadWeakCacheProvider() {\n-    final Iterator<Provider> providers =\n-        ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n-    if (providers.hasNext()) {\n-      final Provider provider = providers.next();\n-      if (providers.hasNext()) {\n-        throw new IllegalStateException(\n-            \"Only one implementation of WeakCache.Provider suppose to be in classpath\");\n+  private static Provider loadWeakCacheProvider() {\n+    ClassLoader classLoader = AgentInstaller.class.getClassLoader();\n+    Class<Provider> providerClass;\n+\n+    String version = System.getProperty(\"java.version\");\n+    try {\n+      if (version == null || version.startsWith(\"1.7\")) {\n+        providerClass =\n+            (Class<Provider>)\n+                classLoader.loadClass(\"datadog.trace.agent.tooling.CLHMWeakCache$Provider\");\n+        log.debug(\"Using CLHMWeakCache Provider\");\n+      } else {\n+        providerClass =\n+            (Class<Provider>)\n+                classLoader.loadClass(\"datadog.trace.agent.tooling.CaffeineWeakCache$Provider\");\n+        log.debug(\"Using CaffeineWeakCache Provider\");\n       }\n-      return provider;\n+\n+      return providerClass.getDeclaredConstructor().newInstance();\n+    } catch (ReflectiveOperationException e) {\n+      throw new IllegalStateException(\"Can't load implementation of WeakCache.Provider\", e);\n     }\n-    throw new IllegalStateException(\"Can't load implementation of WeakCache.Provider\");\n   }\n \n+  private static final long DEFAULT_CACHE_CAPACITY = 32;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "originalPosition": 55}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODY0NTM5", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-520864539", "createdAt": "2020-10-30T17:03:58Z", "commit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzowMzo1OVrOHrYEBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzowMzo1OVrOHrYEBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0NTA2MQ==", "bodyText": "I think this assumes that the function is pure (which is a realistic expectation)", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r515245061", "createdAt": "2020-10-30T17:03:59Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/CaffeineWeakCache.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package datadog.trace.agent.tooling;\n+\n+import com.github.benmanes.caffeine.cache.Cache;\n+import com.github.benmanes.caffeine.cache.Caffeine;\n+import datadog.trace.api.Function;\n+import datadog.trace.bootstrap.WeakCache;\n+import java.util.concurrent.TimeUnit;\n+\n+public class CaffeineWeakCache<K, V> implements WeakCache<K, V> {\n+  public static final class Provider implements WeakCache.Provider {\n+    @Override\n+    public <K, V> WeakCache<K, V> newWeakCache(long maxSize) {\n+      return new CaffeineWeakCache<>(maxSize);\n+    }\n+  }\n+\n+  private final Cache<K, V> cache;\n+\n+  public CaffeineWeakCache(long maxSize) {\n+    cache =\n+        Caffeine.newBuilder()\n+            .weakKeys()\n+            .maximumSize(maxSize)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)\n+            .build();\n+  }\n+\n+  @Override\n+  public V getIfPresent(K key) {\n+    return cache.getIfPresent(key);\n+  }\n+\n+  @Override\n+  public V computeIfAbsent(K key, Function<? super K, ? extends V> mappingFunction) {\n+    // Unable to use cache.get() directly because it relies on java.util.function.Function which is", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODY5NTc3", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-520869577", "createdAt": "2020-10-30T17:10:07Z", "commit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxMDowN1rOHrYStA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxMDowN1rOHrYStA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0ODgyMA==", "bodyText": "@devinsba mentioned encapsulating this in a Platform class before, I think there are probably enough instances of this to do it now", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r515248820", "createdAt": "2020-10-30T17:10:07Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTooling.java", "diffHunk": "@@ -27,27 +27,38 @@ static void registerWeakMapProvider() {\n     }\n   }\n \n-  private static <K, V> Provider loadWeakCacheProvider() {\n-    final Iterator<Provider> providers =\n-        ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n-    if (providers.hasNext()) {\n-      final Provider provider = providers.next();\n-      if (providers.hasNext()) {\n-        throw new IllegalStateException(\n-            \"Only one implementation of WeakCache.Provider suppose to be in classpath\");\n+  private static Provider loadWeakCacheProvider() {\n+    ClassLoader classLoader = AgentInstaller.class.getClassLoader();\n+    Class<Provider> providerClass;\n+\n+    String version = System.getProperty(\"java.version\");\n+    try {\n+      if (version == null || version.startsWith(\"1.7\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODY4NTYz", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-520868563", "createdAt": "2020-10-30T17:08:53Z", "commit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzowODo1NFrOHrYPkQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzowODo1NFrOHrYPkQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI0ODAxNw==", "bodyText": "How does this still provide cache semantics with a max size?", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r515248017", "createdAt": "2020-10-30T17:08:54Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.java", "diffHunk": "@@ -56,23 +59,16 @@\n    *   <li>Allow for quick fast path equivalence check of composite keys\n    * </ul>\n    */\n-  final Cache<ClassLoader, WeakReference<ClassLoader>> loaderRefCache =\n-      CacheBuilder.newBuilder()\n-          .weakKeys()\n-          .concurrencyLevel(CONCURRENCY_LEVEL)\n-          .initialCapacity(LOADER_CAPACITY / 2)\n-          .maximumSize(LOADER_CAPACITY)\n-          .build();\n+  final WeakCache<ClassLoader, WeakReference<ClassLoader>> loaderRefCache =\n+      AgentTooling.newWeakCache(LOADER_CAPACITY);\n \n   /**\n    * Single shared Type.Resolution cache -- uses a composite key -- conceptually of loader & name\n    */\n-  final Cache<TypeCacheKey, TypePool.Resolution> sharedResolutionCache =\n-      CacheBuilder.newBuilder()\n-          .softValues()\n+  final ConcurrentMap<TypeCacheKey, TypePool.Resolution> sharedResolutionCache =\n+      new ConcurrentLinkedHashMap.Builder<TypeCacheKey, TypePool.Resolution>()\n+          .maximumWeightedCapacity(TYPE_CAPACITY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwODc1MDI4", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-520875028", "createdAt": "2020-10-30T17:15:57Z", "commit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxNTo1OFrOHrYjSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0zMFQxNzoxNTo1OFrOHrYjSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTI1MzA2Nw==", "bodyText": "Why do we need this at all if we have the dependencies below? Based partially on seeing the huge benefits from removing WeakMap wherever possible, I don't feel good about the weak-map-as-a-cache approach.", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r515253067", "createdAt": "2020-10-30T17:15:58Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/agent-tooling.gradle", "diffHunk": "@@ -12,13 +12,11 @@ dependencies {\n   compile(project(':dd-java-agent:agent-bootstrap')) {\n     exclude group: 'com.datadoghq', module: 'agent-logging'\n   }\n-  compile group: 'com.blogspot.mydailyjava', name: 'weak-lock-free', version: '0.15'\n+  compile group: 'com.blogspot.mydailyjava', name: 'weak-lock-free', version: '0.17'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "037ebf90ad0752a937c6824f6926e8ee6bc62277"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIxNDMxODMw", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-521431830", "createdAt": "2020-11-02T08:53:02Z", "commit": {"oid": "1252b4eddf62a572a9da1916f43b722e9549d67b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI4NDY4Mzg2", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-528468386", "createdAt": "2020-11-11T19:23:40Z", "commit": {"oid": "1252b4eddf62a572a9da1916f43b722e9549d67b"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOToyMzo0MVrOHxbFZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOToyMzo0MVrOHxbFZw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTU4NjAyMw==", "bodyText": "Worth doing a perf test before/after this change?", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#discussion_r521586023", "createdAt": "2020-11-11T19:23:41Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/DDCachingPoolStrategy.java", "diffHunk": "@@ -56,23 +59,16 @@\n    *   <li>Allow for quick fast path equivalence check of composite keys\n    * </ul>\n    */\n-  final Cache<ClassLoader, WeakReference<ClassLoader>> loaderRefCache =\n-      CacheBuilder.newBuilder()\n-          .weakKeys()\n-          .concurrencyLevel(CONCURRENCY_LEVEL)\n-          .initialCapacity(LOADER_CAPACITY / 2)\n-          .maximumSize(LOADER_CAPACITY)\n-          .build();\n+  final WeakCache<ClassLoader, WeakReference<ClassLoader>> loaderRefCache =\n+      AgentTooling.newWeakCache(LOADER_CAPACITY);\n \n   /**\n    * Single shared Type.Resolution cache -- uses a composite key -- conceptually of loader & name\n    */\n-  final Cache<TypeCacheKey, TypePool.Resolution> sharedResolutionCache =\n-      CacheBuilder.newBuilder()\n-          .softValues()\n+  final ConcurrentMap<TypeCacheKey, TypePool.Resolution> sharedResolutionCache =\n+      new ConcurrentLinkedHashMap.Builder<TypeCacheKey, TypePool.Resolution>()\n+          .maximumWeightedCapacity(TYPE_CAPACITY)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1252b4eddf62a572a9da1916f43b722e9549d67b"}, "originalPosition": 37}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a34ba17b27293131d65a2fff433748bca99a9b66", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a34ba17b27293131d65a2fff433748bca99a9b66", "committedDate": "2020-11-23T17:22:43Z", "message": "Use datadog.trace.api.Function in WeakMap"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a07215492aac5f6b7d21c8199ebc6f8d3b0481f", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2a07215492aac5f6b7d21c8199ebc6f8d3b0481f", "committedDate": "2020-11-23T17:22:43Z", "message": "Simplify WeakCache interface"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "95e08a9bcd98c84355df0515e946521b6d507ed0", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/95e08a9bcd98c84355df0515e946521b6d507ed0", "committedDate": "2020-11-23T17:22:43Z", "message": "Add CLHMWeakCache and CaffeineWeakCache"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aa06610445147b08eb33f93ab064cea7a6400ab6", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aa06610445147b08eb33f93ab064cea7a6400ab6", "committedDate": "2020-11-23T17:22:43Z", "message": "Replace Guava caches in DDCachingPoolStrategy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e8c864b6eadf0211a112249fe7ef959a548cddc", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2e8c864b6eadf0211a112249fe7ef959a548cddc", "committedDate": "2020-11-23T17:22:43Z", "message": "Datastax cassandra instrumentation had a guava dep"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e583356b8372f331557e01d5a5f33197e9a5c4b0", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e583356b8372f331557e01d5a5f33197e9a5c4b0", "committedDate": "2020-11-23T17:22:43Z", "message": "Update test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54629fc18377c8572e2d3378241be550fca9e0d0", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/54629fc18377c8572e2d3378241be550fca9e0d0", "committedDate": "2020-11-23T17:22:43Z", "message": "Add some debug logging"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21c547254aaeb4c9e96fef83342c7d16b4d8f4e9", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/21c547254aaeb4c9e96fef83342c7d16b4d8f4e9", "committedDate": "2020-11-23T17:22:43Z", "message": "approximateSize() was being used by tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3f33f0f7a817a638edea77e1bbb7801685c4a08", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c3f33f0f7a817a638edea77e1bbb7801685c4a08", "committedDate": "2020-11-23T17:22:43Z", "message": "ShadowPackageRenamingTest relied on guava being used"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a979b8fe7ed931678b66585edbfd9ae76cea1c09", "author": {"user": {"login": "mcculls", "name": "Stuart McCulloch"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a979b8fe7ed931678b66585edbfd9ae76cea1c09", "committedDate": "2020-11-23T17:23:51Z", "message": "Use AgentTaskScheduler.INSTANCE for background cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4798688ffe95d80eb692c2c8fba6a473cbbb8b66", "author": {"user": {"login": "mcculls", "name": "Stuart McCulloch"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4798688ffe95d80eb692c2c8fba6a473cbbb8b66", "committedDate": "2020-11-23T17:25:04Z", "message": "Patch Caffeine's BoundedLocalCache.PerformCleanupTask to avoid loading ForkJoinTask before instrumentation is ready"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1252b4eddf62a572a9da1916f43b722e9549d67b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1252b4eddf62a572a9da1916f43b722e9549d67b", "committedDate": "2020-10-30T21:18:14Z", "message": "ShadowPackageRenamingTest relied on guava being used"}, "afterCommit": {"oid": "4798688ffe95d80eb692c2c8fba6a473cbbb8b66", "author": {"user": {"login": "mcculls", "name": "Stuart McCulloch"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4798688ffe95d80eb692c2c8fba6a473cbbb8b66", "committedDate": "2020-11-23T17:25:04Z", "message": "Patch Caffeine's BoundedLocalCache.PerformCleanupTask to avoid loading ForkJoinTask before instrumentation is ready"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaf51897cf34d6e83d6bbeec1ceb3d3d91f95e0c", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/eaf51897cf34d6e83d6bbeec1ceb3d3d91f95e0c", "committedDate": "2020-11-23T17:47:44Z", "message": "Use Platform class to check Java version"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM2NzUyMjcy", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-536752272", "createdAt": "2020-11-23T18:45:38Z", "commit": {"oid": "eaf51897cf34d6e83d6bbeec1ceb3d3d91f95e0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM3NDI1NjQ0", "url": "https://github.com/DataDog/dd-trace-java/pull/2044#pullrequestreview-537425644", "createdAt": "2020-11-24T12:05:33Z", "commit": {"oid": "eaf51897cf34d6e83d6bbeec1ceb3d3d91f95e0c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3070, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}