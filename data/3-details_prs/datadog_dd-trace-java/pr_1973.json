{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxNTY1MjUz", "number": 1973, "title": "Instrument RunnableFuture and RejectedExecutionHandler", "bodyText": "Removes the deprecation of AgentTracer.activeScope - we use this method a lot and there is no other way to do what it does.\nRemoves all ExecutorService instrumentation for API not inherited from Executor\nRemoves ScheduledExecutorService instrumentation\nPrevents the need to instrument Callable or Future at all\nNot quite enough to prevent from instrumenting Runnable and Executor - this will need wrapping and I haven't got that working yet - so this won't dramatically improve our clojure story yet.\nAdds more testing for executor services in general, adding test dependencies on some of the libraries we instrument executors from into java-concurrent\ninstruments RejectedExecutionHandler to capture rejected work which doesn't result in an exception being thrown. Because we're now lenient about continuation reference counts, this can't cause any problems, but this allows rejected execution to be handled in a timely fashion.\n\nRebased on top of #1972", "createdAt": "2020-10-12T13:06:03Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1973", "merged": true, "mergeCommit": {"oid": "b9cd37ad3e9866eb7e6f7c9f0e0eaeaac9ab5e82"}, "closed": true, "closedAt": "2020-10-12T16:27:36Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdRwpFcAH2gAyNTAxNTY1MjUzOjYyYzU4OTBiYzIyOWM0ODI2Y2JkYmI4NDIwODY5NDU0YjQ4ODQxOGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdR0x2wABqjM4NjY4OTA1NTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "62c5890bc229c4826cbdbb8420869454b488418e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/62c5890bc229c4826cbdbb8420869454b488418e", "committedDate": "2020-10-12T09:34:16Z", "message": "add more testing for java executors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a64da6d9f80d3e26d0e95c423c77d713bb4ba19c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a64da6d9f80d3e26d0e95c423c77d713bb4ba19c", "committedDate": "2020-10-12T09:47:46Z", "message": "AgentTracer.activeScope no longer deprecated"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1854b51ddb0b5e065a94957f84b2f760ad53aeee", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1854b51ddb0b5e065a94957f84b2f760ad53aeee", "committedDate": "2020-10-12T11:25:04Z", "message": "replace instrumentation of Callable, Future, and ExecutorService methods returning a future with instrumentation of RunnableFuture"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjU1Mjc3", "url": "https://github.com/DataDog/dd-trace-java/pull/1973#pullrequestreview-506655277", "createdAt": "2020-10-12T14:11:06Z", "commit": {"oid": "d00a767f31d264f179a109210bbd3ecc379faf84"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxMTowNlrOHgAaOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxMTowNlrOHgAaOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyMzE5Mw==", "bodyText": "println?", "url": "https://github.com/DataDog/dd-trace-java/pull/1973#discussion_r503323193", "createdAt": "2020-10-12T14:11:06Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/test/java/SwallowingRejectedExecutionHandler.java", "diffHunk": "@@ -0,0 +1,9 @@\n+import java.util.concurrent.RejectedExecutionHandler;\n+import java.util.concurrent.ThreadPoolExecutor;\n+\n+public class SwallowingRejectedExecutionHandler implements RejectedExecutionHandler {\n+  @Override\n+  public void rejectedExecution(Runnable r, ThreadPoolExecutor executor) {\n+    System.out.println(executor + \" rejected \" + r);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d00a767f31d264f179a109210bbd3ecc379faf84"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjYxMzI1", "url": "https://github.com/DataDog/dd-trace-java/pull/1973#pullrequestreview-506661325", "createdAt": "2020-10-12T14:18:19Z", "commit": {"oid": "1c339813ba2a9000b026c816e9fec1ad444c8205"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxODoxOVrOHgAr4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxNDoxODoxOVrOHgAr4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzMyNzcxNQ==", "bodyText": "the async variable only appears to be used in the test name - is this right?", "url": "https://github.com/DataDog/dd-trace-java/pull/1973#discussion_r503327715", "createdAt": "2020-10-12T14:18:19Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/test/groovy/ForkJoinPoolPropagationTest.groovy", "diffHunk": "@@ -4,7 +4,7 @@ import datadog.trace.core.DDSpan\n import java.util.concurrent.ForkJoinPool\n \n class ForkJoinPoolPropagationTest extends AgentTestRunner {\n-  def \"test imbalanced recursive task propagation #parallelism FJP threads\" () {\n+  def \"test imbalanced recursive task propagation #parallelism FJP threads (async #async)\" () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1c339813ba2a9000b026c816e9fec1ad444c8205"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NjYyMzgw", "url": "https://github.com/DataDog/dd-trace-java/pull/1973#pullrequestreview-506662380", "createdAt": "2020-10-12T14:19:38Z", "commit": {"oid": "1c339813ba2a9000b026c816e9fec1ad444c8205"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "792ad8b8b70065f073ece75ab07f72a1d62deac8", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/792ad8b8b70065f073ece75ab07f72a1d62deac8", "committedDate": "2020-10-12T14:23:17Z", "message": "resilience to rejected tasks in FJP and thread pools with RejectedExecutionHandlers"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9abc6bdd917757a8fad40003323012356d402859", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9abc6bdd917757a8fad40003323012356d402859", "committedDate": "2020-10-12T14:23:17Z", "message": "add rejection tolerance to akka and scla FJP instrumentations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1c339813ba2a9000b026c816e9fec1ad444c8205", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1c339813ba2a9000b026c816e9fec1ad444c8205", "committedDate": "2020-10-12T13:17:54Z", "message": "add rejection tolerance to akka and scla FJP instrumentations"}, "afterCommit": {"oid": "9abc6bdd917757a8fad40003323012356d402859", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9abc6bdd917757a8fad40003323012356d402859", "committedDate": "2020-10-12T14:23:17Z", "message": "add rejection tolerance to akka and scla FJP instrumentations"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2955, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}