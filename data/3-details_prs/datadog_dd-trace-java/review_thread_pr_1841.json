{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgxNDc3NjIy", "number": 1841, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0NzowOVrOEg-p4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToyODoyNFrOEhTS9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDE2NDE2OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0NzowOVrOHODk7Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNjoxMzoxN1rOHOEI8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMDcxNw==", "bodyText": "If you rebase off master there is a configProvider.getEnum which would clean this up I think. The configuration parameter would be defined by the enum values themselves.", "url": "https://github.com/DataDog/dd-trace-java/pull/1841#discussion_r484500717", "createdAt": "2020-09-07T15:47:09Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -537,8 +539,20 @@ private static Writer createWriter(\n             TimeUnit.SECONDS.toMillis(config.getAgentTimeout()),\n             Config.get().isTraceAgentV05Enabled());\n \n+    final String prioritizationType = config.getPrioritizationType();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e86396e8cb79e9bbc9533c451f5817fff915516"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwOTkzNw==", "bodyText": "As we commented offline, there is no a configProvider instance in CoreTracer yet. This will be refactored in the future.", "url": "https://github.com/DataDog/dd-trace-java/pull/1841#discussion_r484509937", "createdAt": "2020-09-07T16:13:17Z", "author": {"login": "drodriguezhdez"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -537,8 +539,20 @@ private static Writer createWriter(\n             TimeUnit.SECONDS.toMillis(config.getAgentTimeout()),\n             Config.get().isTraceAgentV05Enabled());\n \n+    final String prioritizationType = config.getPrioritizationType();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMDcxNw=="}, "originalCommit": {"oid": "6e86396e8cb79e9bbc9533c451f5817fff915516"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMDE2NzA1OnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/PrioritizationConstants.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0ODoyMFrOHODmrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wN1QxNTo0ODoyMFrOHODmrg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDUwMTE2Ng==", "bodyText": "Please use the enum instead", "url": "https://github.com/DataDog/dd-trace-java/pull/1841#discussion_r484501166", "createdAt": "2020-09-07T15:48:20Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/PrioritizationConstants.java", "diffHunk": "@@ -0,0 +1,8 @@\n+package datadog.trace.bootstrap.instrumentation.api;\n+\n+public final class PrioritizationConstants {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e86396e8cb79e9bbc9533c451f5817fff915516"}, "originalPosition": 3}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzMzU0NjE0OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Prioritization.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNToyODoyNFrOHOiqbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOFQxNjowMDo1OVrOHOkAsg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAxMDAzMA==", "bodyText": "I think rather than Queue; this should either be...\n create(Queue primary, Queue secondary)\nOR\ncreate(Queue<List> primary, Queue<List> secondary)", "url": "https://github.com/DataDog/dd-trace-java/pull/1841#discussion_r485010030", "createdAt": "2020-09-08T15:28:24Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Prioritization.java", "diffHunk": "@@ -10,33 +10,87 @@\n import java.util.concurrent.TimeUnit;\n \n public enum Prioritization {\n+  ENSURE_TRACE {\n+    @Override\n+    public PrioritizationStrategy create(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35716c71a702db06b6b394d2bf15b56d29412472"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAzMjExNA==", "bodyText": "There was a discussion about this at the time. Accepting Object allows the flush messages and avoids allocating wrappers, but it has downsides, so we don't want this ever escaping the package.", "url": "https://github.com/DataDog/dd-trace-java/pull/1841#discussion_r485032114", "createdAt": "2020-09-08T16:00:59Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Prioritization.java", "diffHunk": "@@ -10,33 +10,87 @@\n import java.util.concurrent.TimeUnit;\n \n public enum Prioritization {\n+  ENSURE_TRACE {\n+    @Override\n+    public PrioritizationStrategy create(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTAxMDAzMA=="}, "originalCommit": {"oid": "35716c71a702db06b6b394d2bf15b56d29412472"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4932, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}