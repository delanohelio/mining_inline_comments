{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTM0ODcy", "number": 1878, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxNjo1MlrOEkd3VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzoxNTozMFrOEkpULQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjczNDkyOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxNjo1MlrOHTbTFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTowNzozMFrOHTc5Cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjI0Nw==", "bodyText": "There are a few places where this is necessary in the tests", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490132247", "createdAt": "2020-09-17T10:16:52Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "diffHunk": "@@ -120,8 +120,8 @@ abstract class AbstractCouchbaseTest extends AgentTestRunner {\n     TEST_WRITER.each {\n       it.sort({\n         a, b ->\n-          boolean aIsCouchbaseOperation = a.operationName == \"couchbase.call\"\n-          boolean bIsCouchbaseOperation = b.operationName == \"couchbase.call\"\n+          boolean aIsCouchbaseOperation = a.operationName.toString() == \"couchbase.call\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0Njk2Nw==", "bodyText": "a.operationName as String == \"couchbase.call\" should also work in groovy (just FYI, no need to change this)", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490146967", "createdAt": "2020-09-17T10:44:31Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "diffHunk": "@@ -120,8 +120,8 @@ abstract class AbstractCouchbaseTest extends AgentTestRunner {\n     TEST_WRITER.each {\n       it.sort({\n         a, b ->\n-          boolean aIsCouchbaseOperation = a.operationName == \"couchbase.call\"\n-          boolean bIsCouchbaseOperation = b.operationName == \"couchbase.call\"\n+          boolean aIsCouchbaseOperation = a.operationName.toString() == \"couchbase.call\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjI0Nw=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NzQ0Mg==", "bodyText": "Is it better?", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490147442", "createdAt": "2020-09-17T10:45:29Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "diffHunk": "@@ -120,8 +120,8 @@ abstract class AbstractCouchbaseTest extends AgentTestRunner {\n     TEST_WRITER.each {\n       it.sort({\n         a, b ->\n-          boolean aIsCouchbaseOperation = a.operationName == \"couchbase.call\"\n-          boolean bIsCouchbaseOperation = b.operationName == \"couchbase.call\"\n+          boolean aIsCouchbaseOperation = a.operationName.toString() == \"couchbase.call\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjI0Nw=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NTEzNA==", "bodyText": "it's syntactic sugar - there is a subtle difference, toString() on a null reference in groovy returns \"null\" while as String returns null, but that's all", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490155134", "createdAt": "2020-09-17T11:00:59Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "diffHunk": "@@ -120,8 +120,8 @@ abstract class AbstractCouchbaseTest extends AgentTestRunner {\n     TEST_WRITER.each {\n       it.sort({\n         a, b ->\n-          boolean aIsCouchbaseOperation = a.operationName == \"couchbase.call\"\n-          boolean bIsCouchbaseOperation = b.operationName == \"couchbase.call\"\n+          boolean aIsCouchbaseOperation = a.operationName.toString() == \"couchbase.call\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjI0Nw=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1ODM0Nw==", "bodyText": "Good to know, thanks.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490158347", "createdAt": "2020-09-17T11:07:30Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/couchbase-2.0/src/test/groovy/util/AbstractCouchbaseTest.groovy", "diffHunk": "@@ -120,8 +120,8 @@ abstract class AbstractCouchbaseTest extends AgentTestRunner {\n     TEST_WRITER.each {\n       it.sort({\n         a, b ->\n-          boolean aIsCouchbaseOperation = a.operationName == \"couchbase.call\"\n-          boolean bIsCouchbaseOperation = b.operationName == \"couchbase.call\"\n+          boolean aIsCouchbaseOperation = a.operationName.toString() == \"couchbase.call\"", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMjI0Nw=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njc0MzAwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxOToxOFrOHTbYGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxOToxOFrOHTbYGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzUzMA==", "bodyText": "Added some caching here to capture \"servlet.\" + method and ensure the UTF-8 encoding is only done once.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490133530", "createdAt": "2020-09-17T10:19:18Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njc0NTkxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherInstrumentation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoxOTo1MlrOHTbZwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzoxMzo0NFrOHTtOpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzk1NA==", "bodyText": "Use of the cache here (method is very low cardinality)", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490133954", "createdAt": "2020-09-17T10:19:52Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -99,7 +101,8 @@ public static AgentScope start(\n         parent = servletSpan.context();\n       }\n \n-      final AgentSpan span = startSpan(\"servlet.\" + method, parent);\n+      final AgentSpan span =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNjAyMg==", "bodyText": "nice change!", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490426022", "createdAt": "2020-09-17T17:13:44Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -99,7 +101,8 @@ public static AgentScope start(\n         parent = servletSpan.context();\n       }\n \n-      final AgentSpan span = startSpan(\"servlet.\" + method, parent);\n+      final AgentSpan span =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzMzk1NA=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njc0Njg3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoyMDoxMVrOHTbaXw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTowMTowNVrOHTcsqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ==", "bodyText": "Same caching here", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490134111", "createdAt": "2020-09-17T10:20:11Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.http;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1MTA4Mw==", "bodyText": "could the servlet and request decorators share the same cache since they're in the same module?", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490151083", "createdAt": "2020-09-17T10:53:07Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.http;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1MjcyNg==", "bodyText": "I actually hadn't paid it that much attention - that's a good point.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490152726", "createdAt": "2020-09-17T10:56:22Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.http;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NTE3Ng==", "bodyText": "Done here", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490155176", "createdAt": "2020-09-17T11:01:05Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletDecorator.java", "diffHunk": "@@ -1,8 +1,16 @@\n package datadog.trace.instrumentation.servlet.http;\n \n+import datadog.trace.api.Function;\n+import datadog.trace.api.Functions;\n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n \n public class HttpServletDecorator extends BaseDecorator {\n+  public static final DDCache<CharSequence, CharSequence> SPAN_NAME_CACHE =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNDExMQ=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njc1NDMwOnYy", "diffSide": "LEFT", "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/DDSpanNames.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoyMjoyNFrOHTbe2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoyMjoyNFrOHTbe2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNTI1OA==", "bodyText": "Don't need this any more.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490135258", "createdAt": "2020-09-17T10:22:24Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/DDSpanNames.java", "diffHunk": "@@ -1,8 +0,0 @@\n-package datadog.trace.bootstrap.instrumentation.api;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2Njc1NjYyOnYy", "diffSide": "LEFT", "path": "dd-trace-core/src/main/java/datadog/trace/core/StringTables.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoyMzowOVrOHTbgUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDoyMzowOVrOHTbgUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDEzNTYzMg==", "bodyText": "The idea is to use CharSequence in more places until we can completely remove this entire class. This means users only pay for \"interning\" what they need.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490135632", "createdAt": "2020-09-17T10:23:09Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/StringTables.java", "diffHunk": "@@ -48,7 +47,6 @@\n     internConstantsUTF8(InstrumentationTags.class, UTF8_INTERN_KEYS_TABLE, null);\n     internConstantsUTF8(DDSpanTypes.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);\n     internConstantsUTF8(DDComponents.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);\n-    internConstantsUTF8(DDSpanNames.class, UTF8_INTERN_TAGS_TABLE, TAGS_FIRST_CHAR_IS_PRESENT);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NjgxNjE0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDo0MDozMFrOHTcEaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMDo0Mzo0NFrOHTcK-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg==", "bodyText": "should this be AWS_HTTP to match the other constant naming?", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490144872", "createdAt": "2020-09-17T10:40:30Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java", "diffHunk": "@@ -29,7 +32,7 @@ public AmazonWebServiceRequest beforeMarshalling(final AmazonWebServiceRequest r\n \n   @Override\n   public void beforeRequest(final Request<?> request) {\n-    final AgentSpan span = startSpan(\"aws.http\");\n+    final AgentSpan span = startSpan(SPAN_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NjEwOQ==", "bodyText": "Yes, but to save you looking at the rest, this was the first one I did, before I adopted the naming convention.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490146109", "createdAt": "2020-09-17T10:42:52Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java", "diffHunk": "@@ -29,7 +32,7 @@ public AmazonWebServiceRequest beforeMarshalling(final AmazonWebServiceRequest r\n \n   @Override\n   public void beforeRequest(final Request<?> request) {\n-    final AgentSpan span = startSpan(\"aws.http\");\n+    final AgentSpan span = startSpan(SPAN_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NjU1NA==", "bodyText": "Changed in a forced push", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490146554", "createdAt": "2020-09-17T10:43:44Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/TracingRequestHandler.java", "diffHunk": "@@ -29,7 +32,7 @@ public AmazonWebServiceRequest beforeMarshalling(final AmazonWebServiceRequest r\n \n   @Override\n   public void beforeRequest(final Request<?> request) {\n-    final AgentSpan span = startSpan(\"aws.http\");\n+    final AgentSpan span = startSpan(SPAN_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE0NDg3Mg=="}, "originalCommit": {"oid": "e3f9c9f6f370d4b81485be31c8869d2a710a3cbb"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODYxMTAxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzoxNTozMFrOHTtSwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNzoyODoxOFrOHTtwPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNzA3Mg==", "bodyText": "I wonder if we should take this a step further and require UTF8BytesString instead...  This would push the need to cache this to the OT/OTel instrumentation, which has its' own tradeoffs.", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490427072", "createdAt": "2020-09-17T17:15:30Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -319,28 +319,28 @@ private void registerClassLoader(final ClassLoader classLoader) {\n   }\n \n   @Override\n-  public CoreSpanBuilder buildSpan(final String operationName) {\n+  public CoreSpanBuilder buildSpan(final CharSequence operationName) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "60e419f233d5333a50bb4829d6bf310f79c6f4fc"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQzNDYyMg==", "bodyText": "I wanted to leave the test integrations alone for now", "url": "https://github.com/DataDog/dd-trace-java/pull/1878#discussion_r490434622", "createdAt": "2020-09-17T17:28:18Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -319,28 +319,28 @@ private void registerClassLoader(final ClassLoader classLoader) {\n   }\n \n   @Override\n-  public CoreSpanBuilder buildSpan(final String operationName) {\n+  public CoreSpanBuilder buildSpan(final CharSequence operationName) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQyNzA3Mg=="}, "originalCommit": {"oid": "60e419f233d5333a50bb4829d6bf310f79c6f4fc"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4825, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}