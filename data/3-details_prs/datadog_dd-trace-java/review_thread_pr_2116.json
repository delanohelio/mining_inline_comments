{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI2Njc1MDkz", "number": 2116, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozNTowNVrOE9wRxw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozOTo0NFrOE9wVCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTg5NTc1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozNTowNVrOH6m43A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozNTowNVrOH6m43A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNjYwNA==", "bodyText": "Can you inject this flag instead and capture it from config as far up as possible please?", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531216604", "createdAt": "2020-11-26T20:35:05Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldInjectionVisitor.java", "diffHunk": "@@ -82,6 +87,11 @@ public void visit(\n         final Set<String> set = new LinkedHashSet<>(Arrays.asList(interfaces));\n         set.add(INJECTED_FIELDS_MARKER_CLASS_NAME);\n         set.add(interfaceType.getInternalName());\n+        if (Config.get().isSerialVersionUIDFieldInjection()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTkwMTA1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozODoxMVrOH6m7ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMjowNjowMVrOH6oI0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw==", "bodyText": "Don't we have a dependency on ASM with this class in it?", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531217347", "createdAt": "2020-11-26T20:38:11Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.java", "diffHunk": "@@ -0,0 +1,493 @@\n+// ASM: a very small and fast Java bytecode manipulation framework", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIyNTUxMg==", "bodyText": "Byte-Buddy's copy of ASM doesn't contain this particular type, only a subset of asm-commons.\nWe do currently have an unshaded version of this class under 'shared' thanks to a transitive dependency of:\ndogstatsd-> jnr-unixsocket -> jnr-ffi->asm-commons\nIt is technically possible to use this because none of the visitor methods currently have ASM types as parameters. However I was reluctant to depend on something that is an implementation detail of an unrelated feature - at the moment the versions are compatible, but that could change or it could be dropped at some point.\nI also ran into test issues because the transitive dependency is unshaded - certain tests bring in other dependencies that also pull in ASM but at a different version. In the end it was easier to just shade in a copy of this one file and keep it nicely isolated.", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531225512", "createdAt": "2020-11-26T21:12:14Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.java", "diffHunk": "@@ -0,0 +1,493 @@\n+// ASM: a very small and fast Java bytecode manipulation framework", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw=="}, "originalCommit": {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIzNzA3NA==", "bodyText": "Seems fair enough", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531237074", "createdAt": "2020-11-26T22:06:01Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/asm/SerialVersionUIDAdder.java", "diffHunk": "@@ -0,0 +1,493 @@\n+// ASM: a very small and fast Java bytecode manipulation framework", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzM0Nw=="}, "originalCommit": {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzMzMTkwNDA5OnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozOTo0NFrOH6m9UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yNlQyMDozOTo0NFrOH6m9UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTIxNzc0NA==", "bodyText": "I know this is an existing pattern, but I'm struggling to see the benefit of it. Can't we just static import  TraceInstrumentationConfig.SERIALVERSIONUID_FIELD_INJECTION?", "url": "https://github.com/DataDog/dd-trace-java/pull/2116#discussion_r531217744", "createdAt": "2020-11-26T20:39:44Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -181,6 +182,8 @@\n   public static final String PARTIAL_FLUSH_MIN_SPANS = TracerConfig.PARTIAL_FLUSH_MIN_SPANS;\n   public static final String RUNTIME_CONTEXT_FIELD_INJECTION =\n       TraceInstrumentationConfig.RUNTIME_CONTEXT_FIELD_INJECTION;\n+  public static final String SERIALVERSIONUID_FIELD_INJECTION =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f97b7e1eb0575eb8355ace873270c43df6a49f00"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4625, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}