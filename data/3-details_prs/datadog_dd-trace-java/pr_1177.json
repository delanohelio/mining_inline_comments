{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYzMzA5OTgx", "number": 1177, "title": "Add limit to trace scope depth", "bodyText": "When limit is exceeded, a NoopScope is returned.\nAllow custom ScopeManager to be provided, with the plan to remove ScopeContext customization in the future.", "createdAt": "2020-01-15T19:53:50Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1177", "merged": true, "mergeCommit": {"oid": "5c6f74fd5e84e8be521a31b54eb53b786d2245cf"}, "closed": true, "closedAt": "2020-01-22T20:13:24Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb6rCbBAH2gAyMzYzMzA5OTgxOmJjZjgxODIzYjMxMTBjNmE2ZTgzYmFlZGU3ZjU3MGQ3NTk1ZGRhY2Q=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb85rNNAFqTM0Njc5MDM3OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bcf81823b3110c6a6e83baede7f570d7595ddacd", "committedDate": "2020-01-15T19:51:06Z", "message": "Add limit to trace scope depth\n\nWhen limit is exceeded, a NoopScope is returned.\nAllow custom ScopeManager to be provided, with the plan to remove `ScopeContext` customization in the future."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNDkwOTk1", "url": "https://github.com/DataDog/dd-trace-java/pull/1177#pullrequestreview-343490995", "createdAt": "2020-01-15T20:12:16Z", "commit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDoxMjoxNlrOFeFBAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDoxMjoxNlrOFeFBAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4Mzc3Nw==", "bodyText": "Why do we need to cast?\nI assuming because the Nop variant doesn't have addScopeListener.\nI think it would be cleaner to addScopeListener to the Nop variant.", "url": "https://github.com/DataDog/dd-trace-java/pull/1177#discussion_r367083777", "createdAt": "2020-01-15T20:12:16Z", "author": {"login": "dougqh"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -510,7 +516,9 @@ public boolean addTraceInterceptor(final TraceInterceptor interceptor) {\n \n   @Override\n   public void addScopeListener(final ScopeListener listener) {\n-    scopeManager.addScopeListener(listener);\n+    if (scopeManager instanceof ContextualScopeManager) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQzNDkyMTcy", "url": "https://github.com/DataDog/dd-trace-java/pull/1177#pullrequestreview-343492172", "createdAt": "2020-01-15T20:14:24Z", "commit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDoxNDoyNVrOFeFEww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNVQyMDoxNDoyNVrOFeFEww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NzA4NDczOQ==", "bodyText": "Should this be debug or error?", "url": "https://github.com/DataDog/dd-trace-java/pull/1177#discussion_r367084739", "createdAt": "2020-01-15T20:14:25Z", "author": {"login": "dougqh"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/scopemanager/ContextualScopeManager.java", "diffHunk": "@@ -5,18 +5,35 @@\n import io.opentracing.Scope;\n import io.opentracing.ScopeManager;\n import io.opentracing.Span;\n+import io.opentracing.noop.NoopScopeManager;\n import java.util.Deque;\n import java.util.List;\n import java.util.concurrent.ConcurrentLinkedDeque;\n import java.util.concurrent.CopyOnWriteArrayList;\n+import lombok.extern.slf4j.Slf4j;\n \n+@Slf4j\n public class ContextualScopeManager implements ScopeManager {\n   static final ThreadLocal<DDScope> tlsScope = new ThreadLocal<>();\n   final Deque<ScopeContext> scopeContexts = new ConcurrentLinkedDeque<>();\n   final List<ScopeListener> scopeListeners = new CopyOnWriteArrayList<>();\n \n+  private final int depthLimit;\n+\n+  public ContextualScopeManager(final int depthLimit) {\n+    this.depthLimit = depthLimit;\n+  }\n+\n   @Override\n   public Scope activate(final Span span, final boolean finishOnClose) {\n+    final Scope active = active();\n+    if (active instanceof DDScope) {\n+      final int currentDepth = ((DDScope) active).depth();\n+      if (depthLimit <= currentDepth) {\n+        log.debug(\"Scope depth limit exceeded ({}).  Returning NoopScope.\", currentDepth);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd"}, "originalPosition": 29}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ2NzkwMzc4", "url": "https://github.com/DataDog/dd-trace-java/pull/1177#pullrequestreview-346790378", "createdAt": "2020-01-22T18:02:10Z", "commit": {"oid": "bcf81823b3110c6a6e83baede7f570d7595ddacd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2677, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}