{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3NDE2ODQ0", "number": 1867, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzo0MjozNlrOEkD8Lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNjowNlrOEmCE7w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjQ4NzUxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzo0MjozNlrOHSxf7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTozNDo0NFrOHS2uXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0NzQwNg==", "bodyText": "This is somewhat unclear:\n\nWhat's the problem with having logback dependency in test dependencies?\nThe failure mode here is odd: if I understand this correctly it will not change the log level which will not fail test but will fail coverage reports. Whoever sees this in the future will be puzzled.", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489447406", "createdAt": "2020-09-16T13:42:36Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");\n+    test500Response();\n+  }\n+\n+  private static void changeLogLevel(String logLevel) {\n+    Logger logger = LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);\n+    try {\n+      // Use of reflection to avoid relying statically on the logback\n+      // implementation as dependency", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzMzAyMw==", "bodyText": "Reference directly logback to change log level now", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489533023", "createdAt": "2020-09-16T15:34:44Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");\n+    test500Response();\n+  }\n+\n+  private static void changeLogLevel(String logLevel) {\n+    Logger logger = LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);\n+    try {\n+      // Use of reflection to avoid relying statically on the logback\n+      // implementation as dependency", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0NzQwNg=="}, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjQ4ODc3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzo0Mjo1NVrOHSxgvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTozMzo1OVrOHS2sMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0NzYxMw==", "bodyText": "Should there be test for debug branch?", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489447613", "createdAt": "2020-09-16T13:42:55Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzMjQ2Nw==", "bodyText": "by default, logging is DEBUG", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489532467", "createdAt": "2020-09-16T15:33:59Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0NzYxMw=="}, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MjUwMDQ1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxMzo0NToxN1rOHSxntw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTozMzozOFrOHS2rJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0OTM5OQ==", "bodyText": "It would be nice to actually check expected behaviour, at least some of it. Maybe using custom appender would be helpful: https://stackoverflow.com/questions/29076981/how-to-intercept-slf4j-with-logback-logging-via-a-junit-test", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489449399", "createdAt": "2020-09-16T13:45:17Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");\n+    test500Response();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzMjE5OQ==", "bodyText": "done", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489532199", "createdAt": "2020-09-16T15:33:38Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +497,37 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    changeLogLevel(\"INFO\");\n+    test500Response();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTQ0OTM5OQ=="}, "originalCommit": {"oid": "ce15d5fa9b16b20c6ab99252b842ba7ad31e272c"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzA1NjU1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0MTo1OFrOHS3DGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo1OToyMlrOHTeo7Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzODMzMA==", "bodyText": "Generally speaking this is not a good style - if this is not run then there will be no failure... so this test will not fail if appander is not applied or if things a logged with wrong level...\nInstead would you consider saving message in a variable and then assering later in the test? Also maybe mocks could be used for this.", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489538330", "createdAt": "2020-09-16T15:41:58Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +499,58 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    AssertingAppender appender =\n+        new AssertingAppender(\n+            loggingEvent -> {\n+              if (loggingEvent.getLevel() == Level.WARN) {\n+                assertEquals(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8028cea732292351dca1eaff296f335b045cc9ad"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4Njk4OQ==", "bodyText": "done", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r490186989", "createdAt": "2020-09-17T11:59:22Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +499,58 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    AssertingAppender appender =\n+        new AssertingAppender(\n+            loggingEvent -> {\n+              if (loggingEvent.getLevel() == Level.WARN) {\n+                assertEquals(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzODMzMA=="}, "originalCommit": {"oid": "8028cea732292351dca1eaff296f335b045cc9ad"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2MzA2MjUwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNlQxNTo0MzoyMlrOHS3G6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTo1OToxNVrOHTeomQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzOTMwNw==", "bodyText": "Maybe you would consider making setupLogger return current log level and using that instead of hardcoding debug here...", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r489539307", "createdAt": "2020-09-16T15:43:22Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +499,58 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    AssertingAppender appender =\n+        new AssertingAppender(\n+            loggingEvent -> {\n+              if (loggingEvent.getLevel() == Level.WARN) {\n+                assertEquals(\n+                    \"Failed to upload profile: unexpected response code Server Error 500\",\n+                    loggingEvent.getFormattedMessage());\n+              }\n+            });\n+    setupLogger(\"INFO\", appender);\n+    try {\n+      test500Response();\n+    } finally {\n+      cleanupLogger(\"DEBUG\", appender);\n+    }\n+  }\n+\n+  private static ch.qos.logback.classic.Logger getLogBackLogger() {\n+    Logger logger = LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);\n+    return (ch.qos.logback.classic.Logger) logger;\n+  }\n+\n+  private static void setupLogger(String logLevel, AppenderBase<ILoggingEvent> appender) {\n+    ch.qos.logback.classic.Logger logBackLogger = getLogBackLogger();\n+    appender.start();\n+    logBackLogger.addAppender(appender);\n+    logBackLogger.setLevel(Level.toLevel(logLevel));\n+  }\n+\n+  private static void cleanupLogger(String logLevel, AppenderBase<ILoggingEvent> appender) {\n+    ch.qos.logback.classic.Logger logBackLogger = getLogBackLogger();\n+    appender.stop();\n+    logBackLogger.detachAppender(appender);\n+    logBackLogger.setLevel(Level.toLevel(logLevel));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8028cea732292351dca1eaff296f335b045cc9ad"}, "originalPosition": 66}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE4NjkwNQ==", "bodyText": "done", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r490186905", "createdAt": "2020-09-17T11:59:15Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/ProfileUploaderTest.java", "diffHunk": "@@ -493,6 +499,58 @@ public void testShutdown() throws IOException, InterruptedException {\n     verify(recording).release();\n   }\n \n+  @Test\n+  public void testLogLevelInfoFailedUpload() throws IOException, InterruptedException {\n+    AssertingAppender appender =\n+        new AssertingAppender(\n+            loggingEvent -> {\n+              if (loggingEvent.getLevel() == Level.WARN) {\n+                assertEquals(\n+                    \"Failed to upload profile: unexpected response code Server Error 500\",\n+                    loggingEvent.getFormattedMessage());\n+              }\n+            });\n+    setupLogger(\"INFO\", appender);\n+    try {\n+      test500Response();\n+    } finally {\n+      cleanupLogger(\"DEBUG\", appender);\n+    }\n+  }\n+\n+  private static ch.qos.logback.classic.Logger getLogBackLogger() {\n+    Logger logger = LoggerFactory.getLogger(Logger.ROOT_LOGGER_NAME);\n+    return (ch.qos.logback.classic.Logger) logger;\n+  }\n+\n+  private static void setupLogger(String logLevel, AppenderBase<ILoggingEvent> appender) {\n+    ch.qos.logback.classic.Logger logBackLogger = getLogBackLogger();\n+    appender.start();\n+    logBackLogger.addAppender(appender);\n+    logBackLogger.setLevel(Level.toLevel(logLevel));\n+  }\n+\n+  private static void cleanupLogger(String logLevel, AppenderBase<ILoggingEvent> appender) {\n+    ch.qos.logback.classic.Logger logBackLogger = getLogBackLogger();\n+    appender.stop();\n+    logBackLogger.detachAppender(appender);\n+    logBackLogger.setLevel(Level.toLevel(logLevel));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4OTUzOTMwNw=="}, "originalCommit": {"oid": "8028cea732292351dca1eaff296f335b045cc9ad"}, "originalPosition": 66}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2NzU5NjI1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/profiling-uploader.gradle", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMzo1NDozM1rOHTjZhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxNTozMDo0MlrOHToTAw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2NDk2NQ==", "bodyText": "Please consider this: 3bf39c1\nit splits logger logic into separate class which makes upload simpler and allows for simpler testing", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r490264965", "createdAt": "2020-09-17T13:54:33Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/profiling-uploader.gradle", "diffHunk": "@@ -5,7 +5,7 @@ ext {\n \n apply from: \"$rootDir/gradle/java.gradle\"\n \n-minimumBranchCoverage = 0.8\n+minimumBranchCoverage = 0.75", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe9ba5b017ab902735b5702c9b6911506e180b00"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDM0NTIxOQ==", "bodyText": "ok thanks", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r490345219", "createdAt": "2020-09-17T15:30:42Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/profiling-uploader.gradle", "diffHunk": "@@ -5,7 +5,7 @@ ext {\n \n apply from: \"$rootDir/gradle/java.gradle\"\n \n-minimumBranchCoverage = 0.8\n+minimumBranchCoverage = 0.75", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDI2NDk2NQ=="}, "originalCommit": {"oid": "fe9ba5b017ab902735b5702c9b6911506e180b00"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA2ODgxODU5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/util/RatelimitedLogger.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODoxMjo1NVrOHTvWVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQxNTowMjozNlrOHUQ7mA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDc1Nw==", "bodyText": "+1.  I suggest moving this and sharing it with tracing's DDAgentApi class which has similar logging behavior.", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r490460757", "createdAt": "2020-09-17T18:12:55Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/util/RatelimitedLogger.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.datadog.profiling.uploader.util;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.function.Supplier;\n+import org.slf4j.Logger;\n+\n+/**\n+ * Logger that logs message once per given delay if debugging is disabled. If debugging is enabled\n+ * then it logs every time.\n+ */\n+// FIXME: move this to a place where it can be reused", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3bf39c1839da481d8e0828767ae2b7330143bb22"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTAxMDk2OA==", "bodyText": "done", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r491010968", "createdAt": "2020-09-18T15:02:36Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/util/RatelimitedLogger.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package com.datadog.profiling.uploader.util;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+import java.util.function.Supplier;\n+import org.slf4j.Logger;\n+\n+/**\n+ * Logger that logs message once per given delay if debugging is disabled. If debugging is enabled\n+ * then it logs every time.\n+ */\n+// FIXME: move this to a place where it can be reused", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ2MDc1Nw=="}, "originalCommit": {"oid": "3bf39c1839da481d8e0828767ae2b7330143bb22"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzE1Mzc1OnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/api/RatelimitedLogger.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNjowNlrOHV07Ag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMTowNjowNlrOHV07Ag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjY0OTIxOA==", "bodyText": "I think this can be removed", "url": "https://github.com/DataDog/dd-trace-java/pull/1867#discussion_r492649218", "createdAt": "2020-09-22T11:06:06Z", "author": {"login": "mar-kolya"}, "path": "internal-api/src/main/java/datadog/trace/api/RatelimitedLogger.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package datadog.trace.api;\n+\n+import java.util.concurrent.atomic.AtomicLong;\n+import org.slf4j.Logger;\n+\n+/**\n+ * Logger that logs message once per given delay if debugging is disabled. If debugging is enabled\n+ * then it logs every time.\n+ */\n+// FIXME: move this to a place where it can be reused", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "97f033b994fda1984c024b4ab32b48f9fa7503bf"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4810, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}