{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY3MjI0ODUx", "number": 1769, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMzoyNFrOEYAnzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozMToxOFrOEYAxAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjExNDY4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMzoyNFrOHAHQYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyMzoyNFrOHAHQYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MDkzMQ==", "bodyText": "import static org.msgpack.core.MessageFormat.*?", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469880931", "createdAt": "2020-08-13T11:23:24Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "diffHunk": "@@ -0,0 +1,224 @@\n+package datadog.trace.common.writer.ddagent\n+\n+\n+import datadog.trace.core.DDSpanData\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Assert\n+import org.msgpack.core.MessageFormat\n+import org.msgpack.core.MessagePack\n+import org.msgpack.core.MessageUnpacker\n+\n+import java.nio.BufferOverflowException\n+import java.nio.ByteBuffer\n+import java.nio.channels.WritableByteChannel\n+\n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n+import static org.junit.Assert.assertEquals\n+import static org.msgpack.core.MessageFormat.FLOAT32\n+import static org.msgpack.core.MessageFormat.FLOAT64\n+import static org.msgpack.core.MessageFormat.INT16\n+import static org.msgpack.core.MessageFormat.INT32\n+import static org.msgpack.core.MessageFormat.INT64\n+import static org.msgpack.core.MessageFormat.INT8\n+import static org.msgpack.core.MessageFormat.NEGFIXINT\n+import static org.msgpack.core.MessageFormat.POSFIXINT\n+import static org.msgpack.core.MessageFormat.UINT16\n+import static org.msgpack.core.MessageFormat.UINT32\n+import static org.msgpack.core.MessageFormat.UINT64\n+import static org.msgpack.core.MessageFormat.UINT8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjExNzgzOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyNDozMVrOHAHSTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo0MDoyOVrOHAHvfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTQyMg==", "bodyText": "Why change this?", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469881422", "createdAt": "2020-08-13T11:24:31Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -13,22 +12,30 @@ import org.msgpack.core.MessageUnpacker\n \n import java.nio.ByteBuffer\n import java.nio.channels.WritableByteChannel\n-import java.util.concurrent.ThreadLocalRandom\n-import java.util.concurrent.TimeUnit\n \n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n import static org.junit.Assert.assertEquals\n-\n-import static org.msgpack.core.MessageFormat.*\n+import static org.msgpack.core.MessageFormat.FLOAT32", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODg5Mw==", "bodyText": "automatic change", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888893", "createdAt": "2020-08-13T11:40:29Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -13,22 +12,30 @@ import org.msgpack.core.MessageUnpacker\n \n import java.nio.ByteBuffer\n import java.nio.channels.WritableByteChannel\n-import java.util.concurrent.ThreadLocalRandom\n-import java.util.concurrent.TimeUnit\n \n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n import static org.junit.Assert.assertEquals\n-\n-import static org.msgpack.core.MessageFormat.*\n+import static org.msgpack.core.MessageFormat.FLOAT32", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTQyMg=="}, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjEyMTU4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMToyNTozN1rOHAHUdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTo0MDoyMVrOHAHvTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTk3Mg==", "bodyText": "Wrong test name?", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469881972", "createdAt": "2020-08-13T11:25:37Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "diffHunk": "@@ -0,0 +1,224 @@\n+package datadog.trace.common.writer.ddagent\n+\n+\n+import datadog.trace.core.DDSpanData\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Assert\n+import org.msgpack.core.MessageFormat\n+import org.msgpack.core.MessagePack\n+import org.msgpack.core.MessageUnpacker\n+\n+import java.nio.BufferOverflowException\n+import java.nio.ByteBuffer\n+import java.nio.channels.WritableByteChannel\n+\n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n+import static org.junit.Assert.assertEquals\n+import static org.msgpack.core.MessageFormat.FLOAT32\n+import static org.msgpack.core.MessageFormat.FLOAT64\n+import static org.msgpack.core.MessageFormat.INT16\n+import static org.msgpack.core.MessageFormat.INT32\n+import static org.msgpack.core.MessageFormat.INT64\n+import static org.msgpack.core.MessageFormat.INT8\n+import static org.msgpack.core.MessageFormat.NEGFIXINT\n+import static org.msgpack.core.MessageFormat.POSFIXINT\n+import static org.msgpack.core.MessageFormat.UINT16\n+import static org.msgpack.core.MessageFormat.UINT32\n+import static org.msgpack.core.MessageFormat.UINT64\n+import static org.msgpack.core.MessageFormat.UINT8\n+\n+class TraceMapperV04PayloadTest extends DDSpecification {\n+\n+  def \"test dictionary compressed traces written correctly\" () {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODg0NQ==", "bodyText": "yes", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888845", "createdAt": "2020-08-13T11:40:21Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV04PayloadTest.groovy", "diffHunk": "@@ -0,0 +1,224 @@\n+package datadog.trace.common.writer.ddagent\n+\n+\n+import datadog.trace.core.DDSpanData\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import org.junit.Assert\n+import org.msgpack.core.MessageFormat\n+import org.msgpack.core.MessagePack\n+import org.msgpack.core.MessageUnpacker\n+\n+import java.nio.BufferOverflowException\n+import java.nio.ByteBuffer\n+import java.nio.channels.WritableByteChannel\n+\n+import static datadog.trace.common.writer.ddagent.TraceGenerator.generateRandomTraces\n+import static org.junit.Assert.assertEquals\n+import static org.msgpack.core.MessageFormat.FLOAT32\n+import static org.msgpack.core.MessageFormat.FLOAT64\n+import static org.msgpack.core.MessageFormat.INT16\n+import static org.msgpack.core.MessageFormat.INT32\n+import static org.msgpack.core.MessageFormat.INT64\n+import static org.msgpack.core.MessageFormat.INT8\n+import static org.msgpack.core.MessageFormat.NEGFIXINT\n+import static org.msgpack.core.MessageFormat.POSFIXINT\n+import static org.msgpack.core.MessageFormat.UINT16\n+import static org.msgpack.core.MessageFormat.UINT32\n+import static org.msgpack.core.MessageFormat.UINT64\n+import static org.msgpack.core.MessageFormat.UINT8\n+\n+class TraceMapperV04PayloadTest extends DDSpecification {\n+\n+  def \"test dictionary compressed traces written correctly\" () {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4MTk3Mg=="}, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzNjEzODI1OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMTozMToxOFrOHAHe3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xM1QxMjowNDoyNFrOHAIeOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA==", "bodyText": "Why the shifts here? I don't get them.", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469884638", "createdAt": "2020-08-13T11:31:18Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -39,15 +46,42 @@ class TraceMapperV05PayloadTest extends DDSpecification {\n     verifier.verifyTracesConsumed()\n \n     where:\n-    bufferSize    |   traceCount\n-    100 << 10     |       0\n-    100 << 10     |       1\n-    100 << 10     |       10\n-    100 << 10     |       100\n+    bufferSize    | dictionarySize |   traceCount   | lowCardinality\n+    10 << 10      |   10 << 10     |       0        | true", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4ODc2OQ==", "bodyText": "<< 10 turns the number on the left into kilobytes", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469888769", "createdAt": "2020-08-13T11:40:12Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -39,15 +46,42 @@ class TraceMapperV05PayloadTest extends DDSpecification {\n     verifier.verifyTracesConsumed()\n \n     where:\n-    bufferSize    |   traceCount\n-    100 << 10     |       0\n-    100 << 10     |       1\n-    100 << 10     |       10\n-    100 << 10     |       100\n+    bufferSize    | dictionarySize |   traceCount   | lowCardinality\n+    10 << 10      |   10 << 10     |       0        | true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg5OTc1Nw==", "bodyText": "So this is your fancy way of writing * 1024. I see.", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469899757", "createdAt": "2020-08-13T12:02:17Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -39,15 +46,42 @@ class TraceMapperV05PayloadTest extends DDSpecification {\n     verifier.verifyTracesConsumed()\n \n     where:\n-    bufferSize    |   traceCount\n-    100 << 10     |       0\n-    100 << 10     |       1\n-    100 << 10     |       10\n-    100 << 10     |       100\n+    bufferSize    | dictionarySize |   traceCount   | lowCardinality\n+    10 << 10      |   10 << 10     |       0        | true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTkwMDg1OA==", "bodyText": "Well, if you want to write MB it's << 20 which is less of a mouthful than * 1024 * 1024", "url": "https://github.com/DataDog/dd-trace-java/pull/1769#discussion_r469900858", "createdAt": "2020-08-13T12:04:24Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/ddagent/TraceMapperV05PayloadTest.groovy", "diffHunk": "@@ -39,15 +46,42 @@ class TraceMapperV05PayloadTest extends DDSpecification {\n     verifier.verifyTracesConsumed()\n \n     where:\n-    bufferSize    |   traceCount\n-    100 << 10     |       0\n-    100 << 10     |       1\n-    100 << 10     |       10\n-    100 << 10     |       100\n+    bufferSize    | dictionarySize |   traceCount   | lowCardinality\n+    10 << 10      |   10 << 10     |       0        | true", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTg4NDYzOA=="}, "originalCommit": {"oid": "a4273a5a23d69112067b75d1dbace3fc6120a5b3"}, "originalPosition": 58}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 23, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}