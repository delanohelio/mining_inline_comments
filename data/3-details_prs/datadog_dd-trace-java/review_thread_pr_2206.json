{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwMzYwNDc5", "number": 2206, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozNDoyMFrOFFr_IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0OTowN1rOFFsezQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTA3ODczOnYy", "diffSide": "LEFT", "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjozNDoyMFrOIGUipg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQyMTowMzoxMlrOIGf21g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODkxOA==", "bodyText": "@richardstartin removing this is what helped make things pass locally for me, but I also only ran the servlet tests.  It may still fail on other tests.", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543498918", "createdAt": "2020-12-15T16:34:20Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "diffHunk": "@@ -318,11 +318,6 @@ class TomcatServlet3TestInclude extends TomcatServlet3Test {\n     return false\n   }\n \n-  boolean hasResponseSpan(ServerEndpoint endpoint) {\n-    // No response spans for include because response spans are only for the dispatching servlet\n-    return false\n-  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUwNzQxNw==", "bodyText": "I'm not sure I understand how changing an implementation detail should change what the instrumentation does, but if this is a case of removing a workaround in the tests then maybe it's ok?", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543507417", "createdAt": "2020-12-15T16:44:46Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "diffHunk": "@@ -318,11 +318,6 @@ class TomcatServlet3TestInclude extends TomcatServlet3Test {\n     return false\n   }\n \n-  boolean hasResponseSpan(ServerEndpoint endpoint) {\n-    // No response spans for include because response spans are only for the dispatching servlet\n-    return false\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODkxOA=="}, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzU4MzY2NA==", "bodyText": "Yes, it is worrying to me that we don't seem to understand why this helped.", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543583664", "createdAt": "2020-12-15T18:27:26Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "diffHunk": "@@ -318,11 +318,6 @@ class TomcatServlet3TestInclude extends TomcatServlet3Test {\n     return false\n   }\n \n-  boolean hasResponseSpan(ServerEndpoint endpoint) {\n-    // No response spans for include because response spans are only for the dispatching servlet\n-    return false\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODkxOA=="}, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzYwMDAwMg==", "bodyText": "I think it's understood why this helps - the context store check suppressed the response span. When it's removed, the response span is no longer suppressed, so the tests fail. What I'm confused about is whether this is acceptable - was the response span supposed to be suppressed and is this a breaking change? Or was not testing the response span a workaround, and is this improving the instrumentation? It's not possible to infer from the code base.", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543600002", "createdAt": "2020-12-15T18:51:19Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "diffHunk": "@@ -318,11 +318,6 @@ class TomcatServlet3TestInclude extends TomcatServlet3Test {\n     return false\n   }\n \n-  boolean hasResponseSpan(ServerEndpoint endpoint) {\n-    // No response spans for include because response spans are only for the dispatching servlet\n-    return false\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODkxOA=="}, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzY4NDMxMA==", "bodyText": "Thinking about it logically, I also think it makes sense that the response spans would be generated and connected to the trace, so I would say the test was previously working around an instrumentation problem rather than representing what should be the actual result.", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543684310", "createdAt": "2020-12-15T21:03:12Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/test/groovy/TomcatServlet3Test.groovy", "diffHunk": "@@ -318,11 +318,6 @@ class TomcatServlet3TestInclude extends TomcatServlet3Test {\n     return false\n   }\n \n-  boolean hasResponseSpan(ServerEndpoint endpoint) {\n-    // No response spans for include because response spans are only for the dispatching servlet\n-    return false\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzQ5ODkxOA=="}, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxNTE1OTgxOnYy", "diffSide": "LEFT", "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletResponseInstrumentation.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNjo0OTowN1rOIGVR3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzoxMjozMFrOIGWbHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxMTAwNQ==", "bodyText": "Shouldn't the context store definition also be removed?", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543511005", "createdAt": "2020-12-15T16:49:07Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletResponseInstrumentation.java", "diffHunk": "@@ -73,14 +71,6 @@ public static AgentScope start(\n         // Don't want to generate a new top-level span\n         return null;\n       }\n-      ContextStore<HttpServletResponse, Boolean> contextStore =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUyOTc1OA==", "bodyText": "good catch.", "url": "https://github.com/DataDog/dd-trace-java/pull/2206#discussion_r543529758", "createdAt": "2020-12-15T17:12:30Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/http/HttpServletResponseInstrumentation.java", "diffHunk": "@@ -73,14 +71,6 @@ public static AgentScope start(\n         // Don't want to generate a new top-level span\n         return null;\n       }\n-      ContextStore<HttpServletResponse, Boolean> contextStore =", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUxMTAwNQ=="}, "originalCommit": {"oid": "057152277e1b6b2aed39c8f128ee87c2fa16126a"}, "originalPosition": 13}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4547, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}