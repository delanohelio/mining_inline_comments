{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAxNTg5NDY1", "number": 1360, "title": "Add instrumentation to detect the route at the beginning of the spring request", "bodyText": "Instead of waiting till the handler is called, otherwise if a response is returned by a filter then the proper name wouldn't be set and would fall back to the URL.\nI tried to add comments for the parts that are interdependent.  Let me know if it's insufficient.", "createdAt": "2020-04-09T18:55:07Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1360", "merged": true, "mergeCommit": {"oid": "d313d710affc50aeb8fa8db31035e8ecc3ac3f53"}, "closed": true, "closedAt": "2020-04-14T20:30:49Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcWBtSLgFqTM5MTA3MTYzNw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXopAcABqjMyMzI1ODM5Mzc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDcxNjM3", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#pullrequestreview-391071637", "createdAt": "2020-04-09T19:28:23Z", "commit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyODoyM1rOGDmYYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOToyODoyM1rOGDmYYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQyNzc0Nw==", "bodyText": "I guess this doesn't have to implement Filter since it's not being used as one, but since we don't have access to the functional interfaces there doesn't really seem to be a better type in my mind", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#discussion_r406427747", "createdAt": "2020-04-09T19:28:23Z", "author": {"login": "devinsba"}, "path": "dd-java-agent/instrumentation/spring-webmvc-3.1/src/main/java/datadog/trace/instrumentation/springweb/HandlerMappingResourceNameFilter.java", "diffHunk": "@@ -0,0 +1,65 @@\n+package datadog.trace.instrumentation.springweb;\n+\n+import static datadog.trace.bootstrap.instrumentation.decorator.HttpServerDecorator.DD_SPAN_ATTRIBUTE;\n+import static datadog.trace.instrumentation.springweb.SpringWebHttpServerDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import java.util.List;\n+import javax.servlet.Filter;\n+import javax.servlet.FilterChain;\n+import javax.servlet.FilterConfig;\n+import javax.servlet.ServletRequest;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletRequest;\n+import org.springframework.web.servlet.HandlerExecutionChain;\n+import org.springframework.web.servlet.HandlerMapping;\n+\n+public class HandlerMappingResourceNameFilter implements Filter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTg1NTUz", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#pullrequestreview-391585553", "createdAt": "2020-04-10T18:13:34Z", "commit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODoxMzozNVrOGEB4_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODoxMzozNVrOGEB4_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3ODQ2Mg==", "bodyText": "Do we want log here?  Add a health metric?", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#discussion_r406878462", "createdAt": "2020-04-10T18:13:35Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/main/java/datadog/trace/instrumentation/servlet3/Servlet3Decorator.java", "diffHunk": "@@ -58,12 +61,32 @@ protected Integer status(final HttpServletResponse httpServletResponse) {\n   public AgentSpan onRequest(final AgentSpan span, final HttpServletRequest request) {\n     assert span != null;\n     if (request != null) {\n-      span.setTag(\"servlet.context\", request.getContextPath());\n       span.setTag(\"servlet.path\", request.getServletPath());\n+      span.setTag(\"servlet.context\", request.getContextPath());\n+      onContext(span, request, request.getServletContext());\n     }\n     return super.onRequest(span, request);\n   }\n \n+  /**\n+   * This method executes the filter created by\n+   * datadog.trace.instrumentation.springweb.DispatcherServletInstrumentation$HandlerMappingAdvice.\n+   * This was easier and less \"hacky\" than other ways to add the filter to the front of the filter\n+   * chain.\n+   */\n+  private void onContext(\n+      final AgentSpan span, final HttpServletRequest request, final ServletContext context) {\n+    final Object attribute = context.getAttribute(\"dd.dispatcher-filter\");\n+    if (attribute instanceof Filter) {\n+      final Filter filter = (Filter) attribute;\n+      try {\n+        request.setAttribute(DD_SPAN_ATTRIBUTE, span);\n+        filter.doFilter(request, null, null);\n+      } catch (final IOException | ServletException e) {\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjE2Njc0", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#pullrequestreview-391616674", "createdAt": "2020-04-10T19:21:06Z", "commit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMTowNlrOGEDgaw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMTowNlrOGEDgaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwNDkzOQ==", "bodyText": "This seems completely unrelated.  While it is small, generally, I'd prefer to keep clean-up to what is relevant to the change at hand.", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#discussion_r406904939", "createdAt": "2020-04-10T19:21:06Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/RunnableInstrumentation.java", "diffHunk": "@@ -37,9 +37,7 @@ public RunnableInstrumentation() {\n \n   @Override\n   public Map<String, String> contextStore() {\n-    final Map<String, String> map = new HashMap<>();\n-    map.put(Runnable.class.getName(), State.class.getName());\n-    return Collections.unmodifiableMap(map);\n+    return singletonMap(Runnable.class.getName(), State.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNjE3NTAw", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#pullrequestreview-391617500", "createdAt": "2020-04-10T19:22:57Z", "commit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMjo1N1rOGEDjKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxOToyMjo1N1rOGEDjKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjkwNTY0MQ==", "bodyText": "Should setAttribute be inside the try?", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#discussion_r406905641", "createdAt": "2020-04-10T19:22:57Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/servlet/request-3/src/main/java/datadog/trace/instrumentation/servlet3/Servlet3Decorator.java", "diffHunk": "@@ -58,12 +61,32 @@ protected Integer status(final HttpServletResponse httpServletResponse) {\n   public AgentSpan onRequest(final AgentSpan span, final HttpServletRequest request) {\n     assert span != null;\n     if (request != null) {\n-      span.setTag(\"servlet.context\", request.getContextPath());\n       span.setTag(\"servlet.path\", request.getServletPath());\n+      span.setTag(\"servlet.context\", request.getContextPath());\n+      onContext(span, request, request.getServletContext());\n     }\n     return super.onRequest(span, request);\n   }\n \n+  /**\n+   * This method executes the filter created by\n+   * datadog.trace.instrumentation.springweb.DispatcherServletInstrumentation$HandlerMappingAdvice.\n+   * This was easier and less \"hacky\" than other ways to add the filter to the front of the filter\n+   * chain.\n+   */\n+  private void onContext(\n+      final AgentSpan span, final HttpServletRequest request, final ServletContext context) {\n+    final Object attribute = context.getAttribute(\"dd.dispatcher-filter\");\n+    if (attribute instanceof Filter) {\n+      final Filter filter = (Filter) attribute;\n+      try {\n+        request.setAttribute(DD_SPAN_ATTRIBUTE, span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMzc4Njc4", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#pullrequestreview-392378678", "createdAt": "2020-04-13T19:30:50Z", "commit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTozMDo1MFrOGEyRSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxOTozMDo1MFrOGEyRSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzY3MTExNA==", "bodyText": "I realize this didn't change in this PR, but I'll ask anyway.\nI'd expect scope.close to be inside of a finally block, but usually, it is not.\nI'd actually expect XDecorator.beforeFinish to be inside a finally block as well.\nMaybe, the first two lines don't typically raise exceptions; however, we might not know because of the suppress=Throwable.\nBasically, I'm concerned that this code is not obviously correct.  From looking around, this seems to be a general problem with our resource handling.", "url": "https://github.com/DataDog/dd-trace-java/pull/1360#discussion_r407671114", "createdAt": "2020-04-13T19:30:50Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/spring-webmvc-3.1/src/main/java/datadog/trace/instrumentation/springweb/DispatcherServletInstrumentation.java", "diffHunk": "@@ -79,11 +132,6 @@ public static void stopSpan(\n       DECORATE_RENDER.beforeFinish(scope);\n       scope.close();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e"}, "originalPosition": 114}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "64161d93c9c9ea1ecd95ee77ef72baccd6bd996f", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/64161d93c9c9ea1ecd95ee77ef72baccd6bd996f", "committedDate": "2020-04-14T18:19:14Z", "message": "Add instrumentation to detect the route at the beginning of the spring request\n\nInstead of waiting till the handler is called, otherwise if a response is returned by a filter then the proper name wouldn't be set and would fall back to the URL."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2db1e17140ed7e2a3eed91200d0fc2b3e4120a0e", "committedDate": "2020-04-09T18:26:33Z", "message": "Add instrumentation to detect the route at the beginning of the spring request\n\nInstead of waiting till the handler is called, otherwise if a response is returned by a filter then the proper name wouldn't be set and would fall back to the URL."}, "afterCommit": {"oid": "ada2fdf62944a26451998c5c4a83a9397cee9040", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ada2fdf62944a26451998c5c4a83a9397cee9040", "committedDate": "2020-04-14T18:31:46Z", "message": "Ensure RequestDispatcher span is part of expected trace"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce006e14056443ee856e888fe313844e7563d4c1", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ce006e14056443ee856e888fe313844e7563d4c1", "committedDate": "2020-04-14T18:56:16Z", "message": "Ensure RequestDispatcher span is part of expected trace"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ada2fdf62944a26451998c5c4a83a9397cee9040", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ada2fdf62944a26451998c5c4a83a9397cee9040", "committedDate": "2020-04-14T18:31:46Z", "message": "Ensure RequestDispatcher span is part of expected trace"}, "afterCommit": {"oid": "ce006e14056443ee856e888fe313844e7563d4c1", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ce006e14056443ee856e888fe313844e7563d4c1", "committedDate": "2020-04-14T18:56:16Z", "message": "Ensure RequestDispatcher span is part of expected trace"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2639, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}