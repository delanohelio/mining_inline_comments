{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyOTkxODk3", "number": 1747, "title": "Move some things around", "bodyText": "Also split up and added some tests.\nPulls out some of the currently useful changes from #1693.", "createdAt": "2020-08-04T20:30:31Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1747", "merged": true, "mergeCommit": {"oid": "80deb16ef832c6cd9da5cec337ae4d89a11522ea"}, "closed": true, "closedAt": "2020-08-05T21:25:56Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc7s2l8AFqTQ2MTE1MTMxNQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7_NBBgFqTQ2MTkwMzEzMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMTUxMzE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461151315", "createdAt": "2020-08-04T20:31:33Z", "commit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDozMTozM1rOG7wcDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMDo0MDo1NFrOG7wuHg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMjc4Mw==", "bodyText": "@richardstartin I wrote this test before your latest set of changes.  I tried to update it but I may have missed something.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465312783", "createdAt": "2020-08-04T20:31:33Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/TraceProcessingDisruptorTest.groovy", "diffHunk": "@@ -0,0 +1,300 @@\n+package datadog.trace.common.writer\n+\n+import datadog.trace.common.writer.ddagent.DDAgentApi\n+import datadog.trace.common.writer.ddagent.Payload\n+import datadog.trace.common.writer.ddagent.TraceMapper\n+import datadog.trace.common.writer.ddagent.TraceMapperV0_4\n+import datadog.trace.common.writer.ddagent.TraceProcessingDisruptor\n+import datadog.trace.core.DDSpan\n+import datadog.trace.core.monitor.Monitor\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import spock.lang.Ignore\n+import spock.lang.Retry\n+\n+import java.nio.ByteBuffer\n+import java.util.concurrent.Phaser\n+import java.util.concurrent.atomic.AtomicInteger\n+\n+import static datadog.trace.common.writer.DDAgentWriter.DISRUPTOR_BUFFER_SIZE\n+import static datadog.trace.core.SpanFactory.newSpanOf\n+import static java.util.concurrent.TimeUnit.SECONDS\n+\n+@Retry\n+// TODO: these tests should be reworked with the latest \"Payload\" changes.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzIwNw==", "bodyText": "Since we're not returning a response here, I think 0.3 api is more appropriate.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465313207", "createdAt": "2020-08-04T20:32:24Z", "author": {"login": "tylerbenson"}, "path": "dd-smoke-tests/src/main/groovy/datadog/smoketest/AbstractSmokeTest.groovy", "diffHunk": "@@ -48,20 +48,11 @@ abstract class AbstractSmokeTest extends Specification {\n   @AutoCleanup\n   protected TestHttpServer server = httpServer {\n     handlers {\n-      prefix(\"/v0.4/traces\") {\n+      prefix(\"/v0.3/traces\") {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxMzg5MQ==", "bodyText": "Allow mocking of TraceProcessingDisruptor.  With Dagger, this would be an @Inject annotated method.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465313891", "createdAt": "2020-08-04T20:33:49Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/DDAgentWriter.java", "diffHunk": "@@ -81,6 +81,15 @@ private DDAgentWriter(\n             flushFrequencySeconds > 0);\n   }\n \n+  private DDAgentWriter(\n+      final DDAgentApi agentApi,\n+      final Monitor monitor,\n+      final TraceProcessingDisruptor traceProcessingDisruptor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNDIyOA==", "bodyText": "I moved these since it's only relevant to the ddagent api.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465314228", "createdAt": "2020-08-04T20:34:29Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/unixdomainsockets/TunnelingUnixSocket.java", "diffHunk": "@@ -1,4 +1,4 @@\n-package datadog.trace.common.writer.unixdomainsockets;\n+package datadog.trace.common.writer.ddagent.unixdomainsockets;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 2}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNTQ2Mw==", "bodyText": "I wrote this test because the previous test was very large and was exercising behavior of the dependencies which seemed better handled in tests specific to those dependencies.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465315463", "createdAt": "2020-08-04T20:37:02Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/DDAgentWriterTest.groovy", "diffHunk": "@@ -0,0 +1,127 @@\n+package datadog.trace.common.writer\n+\n+import datadog.trace.common.writer.ddagent.DDAgentApi\n+import datadog.trace.common.writer.ddagent.TraceProcessingDisruptor\n+import datadog.trace.core.monitor.Monitor\n+import datadog.trace.util.test.DDSpecification\n+import spock.lang.Subject\n+\n+import java.util.concurrent.TimeUnit\n+\n+import static datadog.trace.core.SpanFactory.newSpanOf\n+\n+class DDAgentWriterTest extends DDSpecification {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNjg5Mg==", "bodyText": "I tried to incorporate many of the test cases from the old DDAgentWriterTest without being concerned with the behavior of the dependencies.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465316892", "createdAt": "2020-08-04T20:39:55Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/TraceProcessingDisruptorTest.groovy", "diffHunk": "@@ -0,0 +1,300 @@\n+package datadog.trace.common.writer\n+\n+import datadog.trace.common.writer.ddagent.DDAgentApi\n+import datadog.trace.common.writer.ddagent.Payload\n+import datadog.trace.common.writer.ddagent.TraceMapper\n+import datadog.trace.common.writer.ddagent.TraceMapperV0_4\n+import datadog.trace.common.writer.ddagent.TraceProcessingDisruptor\n+import datadog.trace.core.DDSpan\n+import datadog.trace.core.monitor.Monitor\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import spock.lang.Ignore\n+import spock.lang.Retry\n+\n+import java.nio.ByteBuffer\n+import java.util.concurrent.Phaser\n+import java.util.concurrent.atomic.AtomicInteger\n+\n+import static datadog.trace.common.writer.DDAgentWriter.DISRUPTOR_BUFFER_SIZE\n+import static datadog.trace.core.SpanFactory.newSpanOf\n+import static java.util.concurrent.TimeUnit.SECONDS\n+\n+@Retry\n+// TODO: these tests should be reworked with the latest \"Payload\" changes.\n+class TraceProcessingDisruptorTest extends DDSpecification {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTMxNzQwNg==", "bodyText": "Monitor previously had no direct unit tests.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465317406", "createdAt": "2020-08-04T20:40:54Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/monitor/MonitorTest.groovy", "diffHunk": "@@ -0,0 +1,159 @@\n+package datadog.trace.core.monitor\n+\n+import com.timgroup.statsd.StatsDClient\n+import datadog.trace.common.writer.DDAgentWriter\n+import datadog.trace.common.writer.ddagent.DDAgentApi\n+import datadog.trace.util.test.DDSpecification\n+import spock.lang.Ignore\n+import spock.lang.Subject\n+\n+import java.util.concurrent.ThreadLocalRandom\n+\n+class MonitorTest extends DDSpecification {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5237d4d3c47252947c99b84bb7de1747ce6426f5"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "87ef9b596137de6405198d7db160e3f0bde2ccc4", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/87ef9b596137de6405198d7db160e3f0bde2ccc4", "committedDate": "2020-08-04T20:49:16Z", "message": "cleanup imports"}, "afterCommit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832", "committedDate": "2020-08-04T21:27:16Z", "message": "cleanup imports\n\nupdate ignores"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxMjAwMzE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461200315", "createdAt": "2020-08-04T21:52:34Z", "commit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo1MjozNFrOG7yyWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMTo1MjozNFrOG7yyWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM1MTI1Ng==", "bodyText": "I don't think tests like this are helpful. They inhibit change and it's not clear what's being asserted here except that the current implementation is the current implementation.", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465351256", "createdAt": "2020-08-04T21:52:34Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/TraceProcessingDisruptorTest.groovy", "diffHunk": "@@ -0,0 +1,300 @@\n+package datadog.trace.common.writer\n+\n+import datadog.trace.common.writer.ddagent.DDAgentApi\n+import datadog.trace.common.writer.ddagent.Payload\n+import datadog.trace.common.writer.ddagent.TraceMapper\n+import datadog.trace.common.writer.ddagent.TraceMapperV0_4\n+import datadog.trace.common.writer.ddagent.TraceProcessingDisruptor\n+import datadog.trace.core.DDSpan\n+import datadog.trace.core.monitor.Monitor\n+import datadog.trace.core.serialization.msgpack.ByteBufferConsumer\n+import datadog.trace.core.serialization.msgpack.Packer\n+import datadog.trace.util.test.DDSpecification\n+import spock.lang.Ignore\n+import spock.lang.Retry\n+\n+import java.nio.ByteBuffer\n+import java.util.concurrent.Phaser\n+import java.util.concurrent.atomic.AtomicInteger\n+\n+import static datadog.trace.common.writer.DDAgentWriter.DISRUPTOR_BUFFER_SIZE\n+import static datadog.trace.core.SpanFactory.newSpanOf\n+import static java.util.concurrent.TimeUnit.SECONDS\n+\n+@Retry\n+// TODO: these tests should be reworked with the latest \"Payload\" changes.\n+class TraceProcessingDisruptorTest extends DDSpecification {\n+\n+  def phaser = new Phaser()\n+  def api = Mock(DDAgentApi) {\n+    sendSerializedTraces(_, _, _) >> DDAgentApi.Response.success(200)\n+  }\n+  def traceMapper = Mock(TraceMapper)\n+  def payload = Mock(Payload)\n+  def monitor = Mock(Monitor)\n+\n+  def setup() {\n+    // Register for two threads.\n+    phaser.register()\n+    phaser.register()\n+  }\n+\n+  def \"test happy path\"() {\n+    setup:\n+    def disruptor = new TraceProcessingDisruptor(\n+      2,\n+      monitor,\n+      api,\n+      -1,\n+      SECONDS,\n+      false)\n+    disruptor.start()\n+\n+    when:\n+    disruptor.flush(1, SECONDS)\n+\n+    then:\n+    0 * _\n+\n+    when:\n+    assert disruptor.publish(trace, 1)\n+    assert disruptor.publish(trace, 1)\n+    assert disruptor.flush(1, SECONDS)\n+\n+    then:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "originalPosition": 64}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNTExOTQ1", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461511945", "createdAt": "2020-08-05T09:53:43Z", "commit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxNjg4NzM3", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461688737", "createdAt": "2020-08-05T13:56:19Z", "commit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo1NjoxOVrOG8K0YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxMzo1NjoxOVrOG8K0YQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTc0NDk5Mw==", "bodyText": "To me this highlights that revapi isn't giving us any benefit at the moment. These classes aren't part of the API and should never have been used by consumers anyway", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#discussion_r465744993", "createdAt": "2020-08-05T13:56:19Z", "author": {"login": "devinsba"}, "path": ".palantir/revapi.yml", "diffHunk": "@@ -532,6 +532,12 @@ acceptedBreaks:\n       justification: \"internal api\"\n   \"0.58.0\":\n     com.datadoghq:dd-trace-ot:\n+    - code: \"java.class.removed\"\n+      old: \"class datadog.trace.common.writer.ddagent.Monitor\"\n+      justification: \"moving classes around\"\n+    - code: \"java.class.removed\"\n+      old: \"class datadog.trace.common.writer.unixdomainsockets.UnixDomainSocketFactory\"\n+      justification: \"moving classes around\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7b0979406e1590746eaf17d758b6cceb43cda1e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b7b0979406e1590746eaf17d758b6cceb43cda1e", "committedDate": "2020-08-05T17:54:26Z", "message": "Move some things around\n\nAlso split up and added some tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "be40842a2f9b09df7c3fc9f2cb22cbecc0209174", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/be40842a2f9b09df7c3fc9f2cb22cbecc0209174", "committedDate": "2020-08-05T17:54:26Z", "message": "cleanup imports\n\nupdate ignores"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxODk3MjE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461897215", "createdAt": "2020-08-05T17:57:32Z", "commit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43d4a652ae7aea592164a40e4f14372d43e8f541", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/43d4a652ae7aea592164a40e4f14372d43e8f541", "committedDate": "2020-08-05T18:03:00Z", "message": "fix haystack test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5cce2ed741b1d6d6a4c68ebdd6d467eaf93a6832", "committedDate": "2020-08-04T21:27:16Z", "message": "cleanup imports\n\nupdate ignores"}, "afterCommit": {"oid": "43d4a652ae7aea592164a40e4f14372d43e8f541", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/43d4a652ae7aea592164a40e4f14372d43e8f541", "committedDate": "2020-08-05T18:03:00Z", "message": "fix haystack test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYxOTAzMTMz", "url": "https://github.com/DataDog/dd-trace-java/pull/1747#pullrequestreview-461903133", "createdAt": "2020-08-05T18:05:51Z", "commit": {"oid": "43d4a652ae7aea592164a40e4f14372d43e8f541"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2088, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}