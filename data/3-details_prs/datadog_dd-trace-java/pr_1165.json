{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNjM3MzY2", "number": 1165, "title": "Add servlet integrations for request and response dispatch back in.", "bodyText": "This PR adds back instrumentation that was previously reverted and enables some by default that are less likely to change the trace size significantly.\nOriginal PR: #1050\nRevert PR: #1085\nI also adjusted the instrumentation for servlet forward/include to remove the span from the request so the resource name doesn't get stomped on by subsequent child calls.", "createdAt": "2020-01-10T21:54:41Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1165", "merged": true, "mergeCommit": {"oid": "a52a1420dbc2d90276d9070432986ba3f96c2d2c"}, "closed": true, "closedAt": "2020-01-13T21:17:30Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5E7qaAH2gAyMzYxNjM3MzY2OjQzZmJmMjgwMzVlMDYyNTAxYWIyYTg4ODgxZWIyYWQ3ZDYwMTU4Y2M=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb6DEMdAFqTM0MjE0NDMyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "43fbf28035e062501ab2a88881eb2ad7d60158cc", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/43fbf28035e062501ab2a88881eb2ad7d60158cc", "committedDate": "2020-01-10T20:53:24Z", "message": "Revert \"Remove experimental jdbc and servlet integrations until further evaluation\"\n\nThis reverts commit 2432a92230db759af80c8c8702485cf3df692766."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e440eba9a19f7476f08a84949b00c2c9ad05e43e", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e440eba9a19f7476f08a84949b00c2c9ad05e43e", "committedDate": "2020-01-10T21:51:21Z", "message": "Enable Servlet request and response dispatcher instrumentation by default.\n\nChange config for Servlet Filter and Service and JDBC DataSource instrumentation so it must be explicitly enabled (won't be enabled by accident if all of servlet is enabled)."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNDQzMzU3", "url": "https://github.com/DataDog/dd-trace-java/pull/1165#pullrequestreview-341443357", "createdAt": "2020-01-10T21:55:46Z", "commit": {"oid": "e440eba9a19f7476f08a84949b00c2c9ad05e43e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo1NTo0NlrOFchDwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMFQyMTo1NTo0NlrOFchDwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTQ0NjA4MA==", "bodyText": "This change fixed the resource naming issue with the sample hybris application.", "url": "https://github.com/DataDog/dd-trace-java/pull/1165#discussion_r365446080", "createdAt": "2020-01-10T21:55:46Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherInstrumentation.java", "diffHunk": "@@ -0,0 +1,113 @@\n+package datadog.trace.instrumentation.servlet.dispatcher;\n+\n+import static datadog.trace.agent.decorator.HttpServerDecorator.DD_SPAN_ATTRIBUTE;\n+import static datadog.trace.agent.tooling.ByteBuddyElementMatchers.safeHasSuperType;\n+import static datadog.trace.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.instrumentation.api.AgentTracer.activeSpan;\n+import static datadog.trace.instrumentation.api.AgentTracer.propagate;\n+import static datadog.trace.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.servlet.ServletRequestSetter.SETTER;\n+import static datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherDecorator.DECORATE;\n+import static java.util.Collections.singletonMap;\n+import static net.bytebuddy.matcher.ElementMatchers.isInterface;\n+import static net.bytebuddy.matcher.ElementMatchers.isPublic;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+import static net.bytebuddy.matcher.ElementMatchers.not;\n+import static net.bytebuddy.matcher.ElementMatchers.takesArgument;\n+\n+import com.google.auto.service.AutoService;\n+import datadog.trace.agent.tooling.Instrumenter;\n+import datadog.trace.api.DDTags;\n+import datadog.trace.bootstrap.InstrumentationContext;\n+import datadog.trace.instrumentation.api.AgentScope;\n+import datadog.trace.instrumentation.api.AgentSpan;\n+import java.util.Map;\n+import javax.servlet.RequestDispatcher;\n+import javax.servlet.ServletRequest;\n+import net.bytebuddy.asm.Advice;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+@AutoService(Instrumenter.class)\n+public final class RequestDispatcherInstrumentation extends Instrumenter.Default {\n+  public RequestDispatcherInstrumentation() {\n+    super(\"servlet\", \"servlet-dispatcher\");\n+  }\n+\n+  @Override\n+  public String[] helperClassNames() {\n+    return new String[] {\n+      \"datadog.trace.instrumentation.servlet.ServletRequestSetter\",\n+      \"datadog.trace.agent.decorator.BaseDecorator\",\n+      packageName + \".RequestDispatcherDecorator\",\n+    };\n+  }\n+\n+  @Override\n+  public ElementMatcher<TypeDescription> typeMatcher() {\n+    return not(isInterface()).and(safeHasSuperType(named(\"javax.servlet.RequestDispatcher\")));\n+  }\n+\n+  @Override\n+  public Map<String, String> contextStore() {\n+    return singletonMap(\"javax.servlet.RequestDispatcher\", String.class.getName());\n+  }\n+\n+  @Override\n+  public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n+    return singletonMap(\n+        named(\"forward\")\n+            .or(named(\"include\"))\n+            .and(takesArgument(0, named(\"javax.servlet.ServletRequest\")))\n+            .and(takesArgument(1, named(\"javax.servlet.ServletResponse\")))\n+            .and(isPublic()),\n+        RequestDispatcherAdvice.class.getName());\n+  }\n+\n+  public static class RequestDispatcherAdvice {\n+\n+    @Advice.OnMethodEnter(suppress = Throwable.class)\n+    public static AgentScope start(\n+        @Advice.Origin(\"#m\") final String method,\n+        @Advice.This final RequestDispatcher dispatcher,\n+        @Advice.Argument(0) final ServletRequest request) {\n+      if (activeSpan() == null) {\n+        // Don't want to generate a new top-level span\n+        return null;\n+      }\n+\n+      final AgentSpan span = startSpan(\"servlet.\" + method);\n+      DECORATE.afterStart(span);\n+\n+      final String target =\n+          InstrumentationContext.get(RequestDispatcher.class, String.class).get(dispatcher);\n+      span.setTag(DDTags.RESOURCE_NAME, target);\n+\n+      // In case we lose context, inject trace into to the request.\n+      propagate().inject(span, request, SETTER);\n+\n+      // temporarily remove from request to avoid spring resource name bubbling up:\n+      request.removeAttribute(DD_SPAN_ATTRIBUTE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e440eba9a19f7476f08a84949b00c2c9ad05e43e"}, "originalPosition": 91}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "49425e9963decb7e33de7cf9083a594a8746d553", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/49425e9963decb7e33de7cf9083a594a8746d553", "committedDate": "2020-01-13T18:48:35Z", "message": "Move request-response linking to main servlet advice\n\nservlet-service is off by default, so we can't rely on it being called there."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQyMTQ0MzI5", "url": "https://github.com/DataDog/dd-trace-java/pull/1165#pullrequestreview-342144329", "createdAt": "2020-01-13T21:16:50Z", "commit": {"oid": "49425e9963decb7e33de7cf9083a594a8746d553"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2663, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}