{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEyMjg4MzA5", "number": 1424, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozOToyMlrOD5gmzQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNjo1MFrOD5h7sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjI5NjQ1OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScope.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozOToyMlrOGQ0bog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxNzozOToyMlrOGQ0bog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDI4OTQ0Mg==", "bodyText": "Is this code exposed by dd-trace-api to our users?", "url": "https://github.com/DataDog/dd-trace-java/pull/1424#discussion_r420289442", "createdAt": "2020-05-05T17:39:22Z", "author": {"login": "devinsba"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScope.java", "diffHunk": "@@ -183,11 +183,24 @@ public ContinuableScope activate() {\n       }\n     }\n \n+    public void cancel() {\n+      assert !finishOnClose : \"cancel() should not be used with finishOnClose=true\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4958fbffd6ea1f6054dea6ccf583987b769464a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYxNjUxMzc5OnYy", "diffSide": "RIGHT", "path": "dd-trace-api/src/main/java/datadog/trace/context/TraceScope.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxODozNjo1MFrOGQ2kCA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wNVQxOTo1ODo1NlrOGQ5W1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNDM2MA==", "bodyText": "@devinsba yes... right here.", "url": "https://github.com/DataDog/dd-trace-java/pull/1424#discussion_r420324360", "createdAt": "2020-05-05T18:36:50Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/main/java/datadog/trace/context/TraceScope.java", "diffHunk": "@@ -26,28 +26,40 @@\n    */\n   void setAsyncPropagation(boolean value);\n \n-  /** Used to pass async context between workers. */\n+  /**\n+   * Used to pass async context between workers. Either activate or cancel must be called on each\n+   * continuation instance to allow the trace to be reported.\n+   */\n   interface Continuation {\n+\n     /**\n      * Activate the continuation.\n      *\n      * <p>Should be called on the child thread.\n+     *\n+     * <p>Consider calling this in a try-with-resources initialization block to ensure the returned\n+     * scope is closed properly.\n      */\n     TraceScope activate();\n \n+    /** Allow trace to stop waiting on this continuation for reporting. */\n+    void cancel();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c4958fbffd6ea1f6054dea6ccf583987b769464a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNjU1Mw==", "bodyText": "whoops, I meant dd-trace-ot. Anyway, I'm not sure we want to expose an assertion to users even if it would be ignored nearly all of the time, maybe a warn log would be better", "url": "https://github.com/DataDog/dd-trace-java/pull/1424#discussion_r420326553", "createdAt": "2020-05-05T18:40:40Z", "author": {"login": "devinsba"}, "path": "dd-trace-api/src/main/java/datadog/trace/context/TraceScope.java", "diffHunk": "@@ -26,28 +26,40 @@\n    */\n   void setAsyncPropagation(boolean value);\n \n-  /** Used to pass async context between workers. */\n+  /**\n+   * Used to pass async context between workers. Either activate or cancel must be called on each\n+   * continuation instance to allow the trace to be reported.\n+   */\n   interface Continuation {\n+\n     /**\n      * Activate the continuation.\n      *\n      * <p>Should be called on the child thread.\n+     *\n+     * <p>Consider calling this in a try-with-resources initialization block to ensure the returned\n+     * scope is closed properly.\n      */\n     TraceScope activate();\n \n+    /** Allow trace to stop waiting on this continuation for reporting. */\n+    void cancel();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNDM2MA=="}, "originalCommit": {"oid": "c4958fbffd6ea1f6054dea6ccf583987b769464a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM2Njk1Nw==", "bodyText": "Normally I would agree with you, but this is a new method, not something that would be called in existing code.  I think we should have it for this first version, but we will remove it with the deprecated methods.", "url": "https://github.com/DataDog/dd-trace-java/pull/1424#discussion_r420366957", "createdAt": "2020-05-05T19:52:59Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/main/java/datadog/trace/context/TraceScope.java", "diffHunk": "@@ -26,28 +26,40 @@\n    */\n   void setAsyncPropagation(boolean value);\n \n-  /** Used to pass async context between workers. */\n+  /**\n+   * Used to pass async context between workers. Either activate or cancel must be called on each\n+   * continuation instance to allow the trace to be reported.\n+   */\n   interface Continuation {\n+\n     /**\n      * Activate the continuation.\n      *\n      * <p>Should be called on the child thread.\n+     *\n+     * <p>Consider calling this in a try-with-resources initialization block to ensure the returned\n+     * scope is closed properly.\n      */\n     TraceScope activate();\n \n+    /** Allow trace to stop waiting on this continuation for reporting. */\n+    void cancel();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNDM2MA=="}, "originalCommit": {"oid": "c4958fbffd6ea1f6054dea6ccf583987b769464a"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDM3MDEzNA==", "bodyText": "Works for me", "url": "https://github.com/DataDog/dd-trace-java/pull/1424#discussion_r420370134", "createdAt": "2020-05-05T19:58:56Z", "author": {"login": "devinsba"}, "path": "dd-trace-api/src/main/java/datadog/trace/context/TraceScope.java", "diffHunk": "@@ -26,28 +26,40 @@\n    */\n   void setAsyncPropagation(boolean value);\n \n-  /** Used to pass async context between workers. */\n+  /**\n+   * Used to pass async context between workers. Either activate or cancel must be called on each\n+   * continuation instance to allow the trace to be reported.\n+   */\n   interface Continuation {\n+\n     /**\n      * Activate the continuation.\n      *\n      * <p>Should be called on the child thread.\n+     *\n+     * <p>Consider calling this in a try-with-resources initialization block to ensure the returned\n+     * scope is closed properly.\n      */\n     TraceScope activate();\n \n+    /** Allow trace to stop waiting on this continuation for reporting. */\n+    void cancel();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMDMyNDM2MA=="}, "originalCommit": {"oid": "c4958fbffd6ea1f6054dea6ccf583987b769464a"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 288, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}