{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3NzQ2MDc1", "number": 1533, "title": "Cache byte[] for the last 64 tags", "bodyText": "This removes roughly 30% of all byte[] allocations and 70% of all sun.nio.cs.UTF_8$Encoder allocations during a pet-clinic run.\nNot sure about the cache size.", "createdAt": "2020-06-04T10:40:17Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1533", "merged": true, "mergeCommit": {"oid": "313aaf93dc8c741e160b3467ea303e8a68e0ff76"}, "closed": true, "closedAt": "2020-06-04T13:41:09Z", "author": {"login": "bantonsson"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcn7b0ngH2gAyNDI3NzQ2MDc1OjkyMjE0NTAyZjYxZmY0MDEyZmNjZDEzZWE3ZDU1NThlOTBhNDEzNTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcn_4UoAFqTQyNDU3NzQ0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/92214502f61ff4012fccd13ea7d5558e90a41357", "committedDate": "2020-06-04T10:23:55Z", "message": "Cache byte[] for the last 64 tags"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0MzU3OTEx", "url": "https://github.com/DataDog/dd-trace-java/pull/1533#pullrequestreview-424357911", "createdAt": "2020-06-04T11:42:29Z", "commit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NDU4MzA0", "url": "https://github.com/DataDog/dd-trace-java/pull/1533#pullrequestreview-424458304", "createdAt": "2020-06-04T13:38:52Z", "commit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzozODo1M1rOGfGNhA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxMzozODo1M1rOGfGNhA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTI2MDgwNA==", "bodyText": "Oops, I see misunderstood.  This is covering the value.  Nice.", "url": "https://github.com/DataDog/dd-trace-java/pull/1533#discussion_r435260804", "createdAt": "2020-06-04T13:38:53Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -107,7 +126,21 @@ private static void writeUTF8Tag(final String value, final MessagePacker destina\n         destination.packRawStringHeader(interned.length);\n         destination.addPayload(interned);\n       } else {\n-        destination.packString(value);\n+        byte[] bytes = null;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI0NTc3NDQy", "url": "https://github.com/DataDog/dd-trace-java/pull/1533#pullrequestreview-424577442", "createdAt": "2020-06-04T15:34:40Z", "commit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNDo0MFrOGfLzZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNTozNDo0MFrOGfLzZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTM1MjQyMA==", "bodyText": "When would this ever be null?", "url": "https://github.com/DataDog/dd-trace-java/pull/1533#discussion_r435352420", "createdAt": "2020-06-04T15:34:40Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -107,7 +126,21 @@ private static void writeUTF8Tag(final String value, final MessagePacker destina\n         destination.packRawStringHeader(interned.length);\n         destination.addPayload(interned);\n       } else {\n-        destination.packString(value);\n+        byte[] bytes = null;\n+        if (value.length() > 0) {\n+          try {\n+            bytes = tagCache.get(value);\n+\n+          } catch (ExecutionException e) {\n+            // Something went wrong. We will write out the string the normal way.\n+          }\n+        }\n+        if (bytes != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "92214502f61ff4012fccd13ea7d5558e90a41357"}, "originalPosition": 51}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2350, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}