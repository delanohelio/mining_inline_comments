{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTA0MjYw", "number": 1216, "title": "profiling lz4", "bodyText": "Add support for lz4 compression in profiles and make it default.", "createdAt": "2020-02-12T20:02:35Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1216", "merged": true, "mergeCommit": {"oid": "adac20a08e6542ac685dccf22e0b4e680ee6f699"}, "closed": true, "closedAt": "2020-03-02T16:12:25Z", "author": {"login": "mar-kolya"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcDr8qdAH2gAyMzc0NTA0MjYwOmNhOWY2MjNkMDUzZDgyNWU1M2Y1Zjg3MWI0YzBkOTEwOGYwOGE0Njc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcJya9XAFqTM2NzQ0Mzg0Mg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ca9f623d053d825e53f5f871b4c0d9108f08a467", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ca9f623d053d825e53f5f871b4c0d9108f08a467", "committedDate": "2020-02-12T20:00:02Z", "message": "Add profiling lz4 compression support\n\nGzip is still the default"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ef9ebffc54c73206ea49235f413d88bffadb430f", "committedDate": "2020-02-12T20:08:25Z", "message": "Simplify unknown compression handling"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3328b5b55b6d99ce63978f33579de40bdaab7ff2", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3328b5b55b6d99ce63978f33579de40bdaab7ff2", "committedDate": "2020-02-12T20:00:08Z", "message": "Simplify unknown compression handling"}, "afterCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ef9ebffc54c73206ea49235f413d88bffadb430f", "committedDate": "2020-02-12T20:08:25Z", "message": "Simplify unknown compression handling"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzYwNDQ5MDk4", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#pullrequestreview-360449098", "createdAt": "2020-02-18T15:46:37Z", "commit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3MTY0NTA0", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#pullrequestreview-367164504", "createdAt": "2020-03-02T12:34:47Z", "commit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozNDo0N1rOFwd7iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0OTozM1rOFweUuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2NjM0Nw==", "bodyText": "If we are reducing the levels I would propose just OFF, ON (lz4) and GZIP -  these values better correspond to a type  while values like high, low, medium etc. really resemble level.", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386366347", "createdAt": "2020-03-02T12:34:47Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;\n \n-  static CompressionType of(final String type) {\n+  static CompressionType of(String type) {\n     if (type == null) {\n-      return UNKNOWN;\n+      type = \"\";\n     }\n \n     switch (type.toLowerCase()) {\n       case \"off\":\n         return OFF;\n       case \"on\":\n         return ON;\n+      case \"low\":\n+        return LOW;\n+      case \"medium\":\n+        return MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2ODk3NA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              MEDIUM;\n          \n          \n            \n            GZIP;", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386368974", "createdAt": "2020-03-02T12:40:43Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTM1MA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case \"low\":\n          \n          \n            \n                    return LOW;\n          \n          \n            \n                  case \"medium\":\n          \n          \n            \n                    return MEDIUM;\n          \n          \n            \n                  case \"gzip\":\n          \n          \n            \n                    return GZIP;", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386369350", "createdAt": "2020-03-02T12:41:35Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;\n \n-  static CompressionType of(final String type) {\n+  static CompressionType of(String type) {\n     if (type == null) {\n-      return UNKNOWN;\n+      type = \"\";\n     }\n \n     switch (type.toLowerCase()) {\n       case \"off\":\n         return OFF;\n       case \"on\":\n         return ON;\n+      case \"low\":\n+        return LOW;\n+      case \"medium\":\n+        return MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDMzMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case ON:\n          \n          \n            \n                  case MEDIUM:\n          \n          \n            \n                  default:\n          \n          \n            \n                  case GZIP:", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386370330", "createdAt": "2020-03-02T12:43:53Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "diffHunk": "@@ -245,19 +245,21 @@ private Compression getCompression(final CompressionType type) {\n     // this needs to be updated once more compression types are added\n     switch (type) {\n       case ON:\n+      case MEDIUM:\n+      default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDg3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case OFF:\n          \n          \n            \n                  case LOW:\n          \n          \n            \n                  case ON:\n          \n          \n            \n                  default:", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386370872", "createdAt": "2020-03-02T12:45:10Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "diffHunk": "@@ -245,19 +245,21 @@ private Compression getCompression(final CompressionType type) {\n     // this needs to be updated once more compression types are added\n     switch (type) {\n       case ON:\n+      case MEDIUM:\n+      default:\n         {\n           compression = (is, expectedSize) -> StreamUtils.gzipStream(is, expectedSize, consumer);\n           break;\n         }\n-      case OFF:\n+      case LOW:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTYyMA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @ValueSource(strings = {\"on\", \"low\", \"medium\", \"off\", \"invalid\"})\n          \n          \n            \n              @ValueSource(strings = {\"on\", \"gzip\", \"off\", \"invalid\"})", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371620", "createdAt": "2020-03-02T12:46:50Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -138,7 +139,7 @@ public void tearDown() throws IOException {\n   }\n \n   @ParameterizedTest\n-  @ValueSource(strings = {\"on\", \"off\", \"invalid\"})\n+  @ValueSource(strings = {\"on\", \"low\", \"medium\", \"off\", \"invalid\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTg0NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {\n          \n          \n            \n                if (compression.equals(\"gzip\") || compression.equals(\"invalid\")) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371845", "createdAt": "2020-03-02T12:47:25Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -184,8 +185,10 @@ public void testRequestParameters(final String compression)\n \n     byte[] uploadedBytes =\n         (byte[]) Iterables.getFirst(parameters.get(RecordingUploader.DATA_PARAM), new byte[] {});\n-    if (compression.equals(\"on\") || compression.equals(\"invalid\")) {\n+    if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTkwMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } else if (compression.equals(\"low\")) {\n          \n          \n            \n                } else if (compression.equals(\"on\")) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371901", "createdAt": "2020-03-02T12:47:34Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -184,8 +185,10 @@ public void testRequestParameters(final String compression)\n \n     byte[] uploadedBytes =\n         (byte[]) Iterables.getFirst(parameters.get(RecordingUploader.DATA_PARAM), new byte[] {});\n-    if (compression.equals(\"on\") || compression.equals(\"invalid\")) {\n+    if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {\n       uploadedBytes = unGzip(uploadedBytes);\n+    } else if (compression.equals(\"low\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3Mjc5NQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                IItemCollection events = JfrLoaderToolkit.loadEvents(new GZIPInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))\n          \n          \n            \n                IItemCollection events = JfrLoaderToolkit.loadEvents(new LZ4FrameInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386372795", "createdAt": "2020-03-02T12:49:33Z", "author": {"login": "jbachorik"}, "path": "dd-smoke-tests/profiling-integration-tests/src/test/groovy/datadog/smoketest/ProfilingIntegrationContinuousProfilesTest.groovy", "diffHunk": "@@ -96,7 +97,7 @@ class ProfilingIntegrationContinuousProfilesTest extends AbstractSmokeTest {\n \n     firstRequestParameters.get(\"chunk-data\").get(0) != null\n \n-    IItemCollection events = JfrLoaderToolkit.loadEvents(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0)))\n+    IItemCollection events = JfrLoaderToolkit.loadEvents(new GZIPInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b3d81281f617bbc440c2367222b3d6f4408810da", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b3d81281f617bbc440c2367222b3d6f4408810da", "committedDate": "2020-03-02T15:02:09Z", "message": "Merge branch 'master' into mar-kolya/profiling-lz4"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a1f6ca1ee7c49a086bcff7543d5dd4f68b694469", "committedDate": "2020-03-02T15:12:47Z", "message": "Make lz4 default compression\n\nAlso do some renaming in compression settings"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3Mjk1MDYz", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#pullrequestreview-367295063", "createdAt": "2020-03-02T15:36:26Z", "commit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY3NDQzODQy", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#pullrequestreview-367443842", "createdAt": "2020-03-02T18:56:06Z", "commit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODo1NjowNlrOFwrOpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODo1NjowNlrOFwrOpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ==", "bodyText": "Nit- looks like the comments are swapped.", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386584231", "createdAt": "2020-03-02T18:56:06Z", "author": {"login": "dbenamydd"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2710, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}