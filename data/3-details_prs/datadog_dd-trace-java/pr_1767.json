{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjY0NjE1", "number": 1767, "title": "avoid unnecessary allocation in handoff between PendingTrace and CoreTracer ", "bodyText": "This prevents copying the trace twice when partial spans occur", "createdAt": "2020-08-12T10:09:42Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1767", "merged": true, "mergeCommit": {"oid": "61bdc4e6008a18a84f65d801e4f1651bacc42a8f"}, "closed": true, "closedAt": "2020-08-12T15:36:27Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-JANvAH2gAyNDY2NjY0NjE1OjNjY2RhOTMxNmVlYjE1YWVjNWYwODdmMDk2ODFiMTM5YjhiMzA4ZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc-NBvLgFqTQ2NjAyMTIwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3ccda9316eeb15aec5f087f09681b139b8b308d9", "committedDate": "2020-08-12T10:38:46Z", "message": "simplify handoff between PendingTrace and CoreTracer which avoids an unnecessary ArrayList allocation"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a7f4640613886630ca1c50818b36069b9fcccac", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6a7f4640613886630ca1c50818b36069b9fcccac", "committedDate": "2020-08-12T10:07:01Z", "message": "simplify handoff between PendingTrace and CoreTracer which avoids an unnecessary ArrayList allocation"}, "afterCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3ccda9316eeb15aec5f087f09681b139b8b308d9", "committedDate": "2020-08-12T10:38:46Z", "message": "simplify handoff between PendingTrace and CoreTracer which avoids an unnecessary ArrayList allocation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY1OTk1NjEx", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#pullrequestreview-465995611", "createdAt": "2020-08-12T14:52:42Z", "commit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1Mjo0MlrOG_k_cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1Mjo0MlrOG_k_cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxOTUzNw==", "bodyText": "I don't understand why sending a new ArrayList is better than sending this.", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469319537", "createdAt": "2020-08-12T14:52:42Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -248,8 +253,18 @@ private synchronized void write() {\n     if (isWritten.compareAndSet(false, true)) {\n       removePendingTrace();\n       if (!isEmpty()) {\n-        log.debug(\"Writing {} spans to {}.\", size(), tracer.writer);\n-        tracer.write(this);\n+        int size = size();\n+        if (log.isDebugEnabled()) {\n+          log.debug(\"Writing {} spans to {}.\", size, tracer.writer);\n+        }\n+        List<DDSpan> trace = new ArrayList<>(size);\n+        trace.addAll(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDEzMzg0", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#pullrequestreview-466013384", "createdAt": "2020-08-12T15:11:22Z", "commit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMToyMlrOG_l1dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMToyMlrOG_l1dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMzM2NA==", "bodyText": "@tylerbenson this is the important bit", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469333364", "createdAt": "2020-08-12T15:11:22Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -381,14 +381,12 @@ public AgentSpan noopSpan() {\n    *\n    * @param trace a list of the spans related to the same trace\n    */\n-  void write(final Collection<DDSpan> trace) {\n+  void write(final List<DDSpan> trace) {\n     if (trace.isEmpty()) {\n       return;\n     }\n-    final ArrayList<DDSpan> writtenTrace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY2MDIxMjAw", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#pullrequestreview-466021200", "createdAt": "2020-08-12T15:20:03Z", "commit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2121, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}