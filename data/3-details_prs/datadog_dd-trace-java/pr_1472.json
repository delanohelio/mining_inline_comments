{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE5NzcwMzQ2", "number": 1472, "title": "avoid materialising meta (baggage + tags) during serialisation", "bodyText": "Creating the meta map is a minor CPU bottleneck in serialisation, this change avoids allocating a new map or any map resizing.", "createdAt": "2020-05-18T22:18:24Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1472", "merged": true, "mergeCommit": {"oid": "2c5ba5b27ae8d8ed04dea62a28801134dc07e0ed"}, "closed": true, "closedAt": "2020-05-19T17:05:35Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcingSIAFqTQxMzk3NzE3OQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABci3ic7gFqTQxNDY0ODExNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTc3MTc5", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-413977179", "createdAt": "2020-05-18T22:21:04Z", "commit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyMTowNFrOGXJXNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyMTowNFrOGXJXNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyMzgzMQ==", "bodyText": "I haven't measured it, but I expect this to get hot and there will only be one implementation at runtime, so the MapAcceptor might not actually get allocated (inlined => scalarised), but it's still smaller than a hashmap and doesn't need resizing if it doesn't work out like that.", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r426923831", "createdAt": "2020-05-18T22:21:04Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/FormatWriter.java", "diffHunk": "@@ -119,10 +110,13 @@ public void writeDDSpan(final DDSpan span, final DEST destination) throws IOExce\n     /* 9  */ writeTag(TYPE, span.getType(), destination);\n     /* 10 */ writeInt(ERROR, span.getError(), destination);\n     /* 11 */ writeNumberMap(METRICS, span.getMetrics(), destination);\n-    /* 12 */ writeStringMap(META, span.getMeta(), destination);\n+    /* 12 */ writeMeta(span, destination);\n     writeMapFooter(destination);\n   }\n \n+  /** A destination to serialize the span's meta into */\n+  protected abstract MapAcceptor<String> getMetaAcceptor(DEST destination);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 41}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTc3NDkz", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-413977493", "createdAt": "2020-05-18T22:21:52Z", "commit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyMTo1MlrOGXJYLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyMTo1MlrOGXJYLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNDA3Ng==", "bodyText": "This got backed out in a bad merge (my bad) :(", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r426924076", "createdAt": "2020-05-18T22:21:52Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -40,6 +41,12 @@ public void writeString(byte[] key, String value, MessagePacker destination) thr\n     }\n   }\n \n+  @Override\n+  public void writeTag(byte[] key, String value, MessagePacker destination) throws IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTc4NjI5", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-413978629", "createdAt": "2020-05-18T22:24:33Z", "commit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNDozM1rOGXJb_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNDozM1rOGXJb_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTA1Mg==", "bodyText": "Move the wrapping here so it can be used without wrapping.", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r426925052", "createdAt": "2020-05-18T22:24:33Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java", "diffHunk": "@@ -354,7 +356,7 @@ public String getSpanType() {\n \n   @Override\n   public Map<String, Object> getTags() {\n-    return context.getTags();\n+    return Collections.unmodifiableMap(context.getTags());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDEzOTc5Mzkz", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-413979393", "createdAt": "2020-05-18T22:26:19Z", "commit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNjoyMFrOGXJejg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMjoyNjoyMFrOGXJejg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTcxMA==", "bodyText": "Wasn't sure what synchronized was achieving here. Collections.unmodifiableMap doesn't mutate the map, and prevented it from being mutated. The only caller of this method, DDSpan does not mutate the map. Should the visibility be reduced to package?", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r426925710", "createdAt": "2020-05-18T22:26:20Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -349,8 +349,8 @@ public synchronized void setTag(final String tag, final Object value) {\n     }\n   }\n \n-  public synchronized Map<String, Object> getTags() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "486aa06000e3b17f8489e012a9d3b725cb2b66b9", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/486aa06000e3b17f8489e012a9d3b725cb2b66b9", "committedDate": "2020-05-19T06:56:14Z", "message": "avoid materialising meta (baggage + tags) as map and write it into serialising acceptor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3734b896fced69ce8d4cefbebde8f5690ceaf742", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3734b896fced69ce8d4cefbebde8f5690ceaf742", "committedDate": "2020-05-19T06:56:19Z", "message": "make revapi happy"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c21f6d9b012f809a6fb62c24a75e681825b0b145", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c21f6d9b012f809a6fb62c24a75e681825b0b145", "committedDate": "2020-05-18T22:34:25Z", "message": "make revapi happy"}, "afterCommit": {"oid": "3734b896fced69ce8d4cefbebde8f5690ceaf742", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3734b896fced69ce8d4cefbebde8f5690ceaf742", "committedDate": "2020-05-19T06:56:19Z", "message": "make revapi happy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0MTU0MzU5", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-414154359", "createdAt": "2020-05-19T07:02:28Z", "commit": {"oid": "3734b896fced69ce8d4cefbebde8f5690ceaf742"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowMjoyOVrOGXSe-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQwNzowMzo1MlrOGXShUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3MzI3NQ==", "bodyText": "Yes, the getMeta show up in the memory overhead as well, and is creating a lot of unnecessary HashMapNode and HashMapNode[].", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r427073275", "createdAt": "2020-05-19T07:02:29Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpan.java", "diffHunk": "@@ -261,19 +261,21 @@ public final DDSpan setSpanType(final String type) {\n   // Getters\n \n   /**\n-   * Meta merges baggage and tags (stringified values)\n+   * Meta merges baggage and tags (stringified values) into a writable destination\n    *\n-   * @return merged context baggage and tags\n+   * @return\n    */\n-  public Map<String, String> getMeta() {\n-    final Map<String, String> meta = new HashMap<>();\n-    for (final Map.Entry<String, String> entry : context.getBaggageItems().entrySet()) {\n-      meta.put(entry.getKey(), entry.getValue());\n+  public void transferMeta(MapAcceptor<String> acceptor) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3734b896fced69ce8d4cefbebde8f5690ceaf742"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzA3Mzg3Mg==", "bodyText": "Yeah, it would be interesting to see, but I think it is a win either way.", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r427073872", "createdAt": "2020-05-19T07:03:52Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/FormatWriter.java", "diffHunk": "@@ -119,10 +110,13 @@ public void writeDDSpan(final DDSpan span, final DEST destination) throws IOExce\n     /* 9  */ writeTag(TYPE, span.getType(), destination);\n     /* 10 */ writeInt(ERROR, span.getError(), destination);\n     /* 11 */ writeNumberMap(METRICS, span.getMetrics(), destination);\n-    /* 12 */ writeStringMap(META, span.getMeta(), destination);\n+    /* 12 */ writeMeta(span, destination);\n     writeMapFooter(destination);\n   }\n \n+  /** A destination to serialize the span's meta into */\n+  protected abstract MapAcceptor<String> getMetaAcceptor(DEST destination);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyMzgzMQ=="}, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "41ff80b15eb370c2b0ef74f6b41a111ae2d36303", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/41ff80b15eb370c2b0ef74f6b41a111ae2d36303", "committedDate": "2020-05-19T14:06:16Z", "message": "simplify merging of tags and baggage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDkzNTE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-414493515", "createdAt": "2020-05-19T14:19:19Z", "commit": {"oid": "41ff80b15eb370c2b0ef74f6b41a111ae2d36303"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxOToxOVrOGXirrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoxOToxOVrOGXirrA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzMzODY2OA==", "bodyText": "As determined by our Idea settings, these finals get automatically added when we save the file: https://github.com/DataDog/dd-trace-java/blob/master/CONTRIBUTING.md\nI'd suggest not trying to change them back, otherwise the next time it gets saved will redo the change.", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r427338668", "createdAt": "2020-05-19T14:19:19Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -41,50 +41,49 @@ public void writeString(final byte[] key, final String value, final MessagePacke\n   }\n \n   @Override\n-  public void writeShort(final byte[] key, final short value, final MessagePacker destination)\n-      throws IOException {\n+  public void writeTag(byte[] key, String value, MessagePacker destination) throws IOException {\n+    writeKey(key, destination);\n+    writeStringUTF8(value, destination);\n+  }\n+\n+  @Override\n+  public void writeShort(byte[] key, short value, MessagePacker destination) throws IOException {\n     writeKey(key, destination);\n     destination.packShort(value);\n   }\n \n   @Override\n-  public void writeByte(final byte[] key, final byte value, final MessagePacker destination)\n-      throws IOException {\n+  public void writeByte(byte[] key, byte value, MessagePacker destination) throws IOException {\n     writeKey(key, destination);\n     destination.packByte(value);\n   }\n \n   @Override\n-  public void writeInt(final byte[] key, final int value, final MessagePacker destination)\n-      throws IOException {\n+  public void writeInt(byte[] key, int value, MessagePacker destination) throws IOException {\n     writeKey(key, destination);\n     destination.packInt(value);\n   }\n \n   @Override\n-  public void writeLong(final byte[] key, final long value, final MessagePacker destination)\n-      throws IOException {\n+  public void writeLong(byte[] key, long value, MessagePacker destination) throws IOException {\n     writeKey(key, destination);\n     destination.packLong(value);\n   }\n \n   @Override\n-  public void writeFloat(final byte[] key, final float value, final MessagePacker destination)\n-      throws IOException {\n+  public void writeFloat(byte[] key, float value, MessagePacker destination) throws IOException {\n     writeKey(key, destination);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "41ff80b15eb370c2b0ef74f6b41a111ae2d36303"}, "originalPosition": 71}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NDk4NDg2", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-414498486", "createdAt": "2020-05-19T14:23:25Z", "commit": {"oid": "c479e49a5f659ec875d686ef1e7293526878d855"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyMzoyNVrOGXi5VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNDoyMzoyNVrOGXi5VA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM0MjE2NA==", "bodyText": "Odd... why aren't these added to the 0.52.0 section below?", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r427342164", "createdAt": "2020-05-19T14:23:25Z", "author": {"login": "tylerbenson"}, "path": ".palantir/revapi.yml", "diffHunk": "@@ -299,6 +299,9 @@ acceptedBreaks:\n       old: \"method datadog.trace.bootstrap.instrumentation.api.AgentScope datadog.trace.core.scopemanager.DDScopeManager::activate(datadog.trace.bootstrap.instrumentation.api.AgentSpan,\\\n         \\ boolean)\"\n       justification: \"Removed deprecated APIs preventing refactoring\"\n+    - code: \"java.method.removed\"\n+      old: \"method java.util.Map<java.lang.String, java.lang.String> datadog.trace.core.DDSpan::getMeta()\"\n+      justification: \"internal api\"", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c479e49a5f659ec875d686ef1e7293526878d855"}, "originalPosition": 6}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86dade1ae8772855bd6d77cbcc36a0822fa993d7", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/86dade1ae8772855bd6d77cbcc36a0822fa993d7", "committedDate": "2020-05-19T14:40:06Z", "message": "even parameters and variables which don't change must be declared final"}, "afterCommit": {"oid": "aed4bccc95d800c1f54d8b18a2f2a9f93096a76c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aed4bccc95d800c1f54d8b18a2f2a9f93096a76c", "committedDate": "2020-05-19T14:41:46Z", "message": "even parameters and variables which don't change must be declared final"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f9878defd4b6f3307f9fc565d5c7994def4b3081", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f9878defd4b6f3307f9fc565d5c7994def4b3081", "committedDate": "2020-05-19T14:56:14Z", "message": "tag should overwrite baggage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aed4bccc95d800c1f54d8b18a2f2a9f93096a76c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aed4bccc95d800c1f54d8b18a2f2a9f93096a76c", "committedDate": "2020-05-19T14:41:46Z", "message": "even parameters and variables which don't change must be declared final"}, "afterCommit": {"oid": "f9878defd4b6f3307f9fc565d5c7994def4b3081", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f9878defd4b6f3307f9fc565d5c7994def4b3081", "committedDate": "2020-05-19T14:56:14Z", "message": "tag should overwrite baggage"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NTQ0Mjky", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-414544292", "createdAt": "2020-05-19T15:06:16Z", "commit": {"oid": "f9878defd4b6f3307f9fc565d5c7994def4b3081"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowNjoxNlrOGXlB4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOVQxNTowNjoxNlrOGXlB4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNzM3NzEyMA==", "bodyText": "This is a new module. I would make it package private if possible", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#discussion_r427377120", "createdAt": "2020-05-19T15:06:16Z", "author": {"login": "devinsba"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -349,8 +349,8 @@ public synchronized void setTag(final String tag, final Object value) {\n     }\n   }\n \n-  public synchronized Map<String, Object> getTags() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkyNTcxMA=="}, "originalCommit": {"oid": "d92df4fd7f41d21f834e1cada163497302f30ba8"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE0NjQ4MTE2", "url": "https://github.com/DataDog/dd-trace-java/pull/1472#pullrequestreview-414648116", "createdAt": "2020-05-19T17:01:55Z", "commit": {"oid": "f9878defd4b6f3307f9fc565d5c7994def4b3081"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2270, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}