{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc0NTA0MjYw", "number": 1216, "reviewThreads": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozNDo0N1rODkQBGw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODo1NjowNlrODkYjZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM3NzU1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozNDo0N1rOFwd7iw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjozNDo0N1rOFwd7iw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2NjM0Nw==", "bodyText": "If we are reducing the levels I would propose just OFF, ON (lz4) and GZIP -  these values better correspond to a type  while values like high, low, medium etc. really resemble level.", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386366347", "createdAt": "2020-03-02T12:34:47Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;\n \n-  static CompressionType of(final String type) {\n+  static CompressionType of(String type) {\n     if (type == null) {\n-      return UNKNOWN;\n+      type = \"\";\n     }\n \n     switch (type.toLowerCase()) {\n       case \"off\":\n         return OFF;\n       case \"on\":\n         return ON;\n+      case \"low\":\n+        return LOW;\n+      case \"medium\":\n+        return MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM5NTE2OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0MDo0M1rOFweFzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0MDo0M1rOFweFzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2ODk3NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              MEDIUM;\n          \n          \n            \n            GZIP;", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386368974", "createdAt": "2020-03-02T12:40:43Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzM5NzcxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0MTozNVrOFweHRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0MTozNVrOFweHRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM2OTM1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case \"low\":\n          \n          \n            \n                    return LOW;\n          \n          \n            \n                  case \"medium\":\n          \n          \n            \n                    return MEDIUM;\n          \n          \n            \n                  case \"gzip\":\n          \n          \n            \n                    return GZIP;", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386369350", "createdAt": "2020-03-02T12:41:35Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LOW,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  MEDIUM;\n \n-  static CompressionType of(final String type) {\n+  static CompressionType of(String type) {\n     if (type == null) {\n-      return UNKNOWN;\n+      type = \"\";\n     }\n \n     switch (type.toLowerCase()) {\n       case \"off\":\n         return OFF;\n       case \"on\":\n         return ON;\n+      case \"low\":\n+        return LOW;\n+      case \"medium\":\n+        return MEDIUM;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQwMzk0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0Mzo1M1rOFweLGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0Mzo1M1rOFweLGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDMzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case ON:\n          \n          \n            \n                  case MEDIUM:\n          \n          \n            \n                  default:\n          \n          \n            \n                  case GZIP:", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386370330", "createdAt": "2020-03-02T12:43:53Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "diffHunk": "@@ -245,19 +245,21 @@ private Compression getCompression(final CompressionType type) {\n     // this needs to be updated once more compression types are added\n     switch (type) {\n       case ON:\n+      case MEDIUM:\n+      default:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQwNzQxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NToxMFrOFweNOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NToxMFrOFweNOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MDg3Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                  case OFF:\n          \n          \n            \n                  case LOW:\n          \n          \n            \n                  case ON:\n          \n          \n            \n                  default:", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386370872", "createdAt": "2020-03-02T12:45:10Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/RecordingUploader.java", "diffHunk": "@@ -245,19 +245,21 @@ private Compression getCompression(final CompressionType type) {\n     // this needs to be updated once more compression types are added\n     switch (type) {\n       case ON:\n+      case MEDIUM:\n+      default:\n         {\n           compression = (is, expectedSize) -> StreamUtils.gzipStream(is, expectedSize, consumer);\n           break;\n         }\n-      case OFF:\n+      case LOW:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQxMjM5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0Njo1MFrOFweQJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0Njo1MFrOFweQJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTYyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              @ValueSource(strings = {\"on\", \"low\", \"medium\", \"off\", \"invalid\"})\n          \n          \n            \n              @ValueSource(strings = {\"on\", \"gzip\", \"off\", \"invalid\"})", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371620", "createdAt": "2020-03-02T12:46:50Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -138,7 +139,7 @@ public void tearDown() throws IOException {\n   }\n \n   @ParameterizedTest\n-  @ValueSource(strings = {\"on\", \"off\", \"invalid\"})\n+  @ValueSource(strings = {\"on\", \"low\", \"medium\", \"off\", \"invalid\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQxMzkzOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NzoyNVrOFweRBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NzoyNVrOFweRBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTg0NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {\n          \n          \n            \n                if (compression.equals(\"gzip\") || compression.equals(\"invalid\")) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371845", "createdAt": "2020-03-02T12:47:25Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -184,8 +185,10 @@ public void testRequestParameters(final String compression)\n \n     byte[] uploadedBytes =\n         (byte[]) Iterables.getFirst(parameters.get(RecordingUploader.DATA_PARAM), new byte[] {});\n-    if (compression.equals(\"on\") || compression.equals(\"invalid\")) {\n+    if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQxNDMyOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NzozNFrOFweRPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0NzozNFrOFweRPQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3MTkwMQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                } else if (compression.equals(\"low\")) {\n          \n          \n            \n                } else if (compression.equals(\"on\")) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386371901", "createdAt": "2020-03-02T12:47:34Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/test/java/com/datadog/profiling/uploader/RecordingUploaderTest.java", "diffHunk": "@@ -184,8 +185,10 @@ public void testRequestParameters(final String compression)\n \n     byte[] uploadedBytes =\n         (byte[]) Iterables.getFirst(parameters.get(RecordingUploader.DATA_PARAM), new byte[] {});\n-    if (compression.equals(\"on\") || compression.equals(\"invalid\")) {\n+    if (compression.equals(\"on\") || compression.equals(\"medium\") || compression.equals(\"invalid\")) {\n       uploadedBytes = unGzip(uploadedBytes);\n+    } else if (compression.equals(\"low\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MzQyMDE4OnYy", "diffSide": "RIGHT", "path": "dd-smoke-tests/profiling-integration-tests/src/test/groovy/datadog/smoketest/ProfilingIntegrationContinuousProfilesTest.groovy", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0OTozM1rOFweUuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxMjo0OTozM1rOFweUuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjM3Mjc5NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                IItemCollection events = JfrLoaderToolkit.loadEvents(new GZIPInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))\n          \n          \n            \n                IItemCollection events = JfrLoaderToolkit.loadEvents(new LZ4FrameInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386372795", "createdAt": "2020-03-02T12:49:33Z", "author": {"login": "jbachorik"}, "path": "dd-smoke-tests/profiling-integration-tests/src/test/groovy/datadog/smoketest/ProfilingIntegrationContinuousProfilesTest.groovy", "diffHunk": "@@ -96,7 +97,7 @@ class ProfilingIntegrationContinuousProfilesTest extends AbstractSmokeTest {\n \n     firstRequestParameters.get(\"chunk-data\").get(0) != null\n \n-    IItemCollection events = JfrLoaderToolkit.loadEvents(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0)))\n+    IItemCollection events = JfrLoaderToolkit.loadEvents(new GZIPInputStream(new ByteArrayInputStream(secondRequestParameters.get(\"chunk-data\").get(0))))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef9ebffc54c73206ea49235f413d88bffadb430f"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5NDc3NjA1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wMlQxODo1NjowNlrOFwrOpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNToyOTowN1rOFxKmhg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ==", "bodyText": "Nit- looks like the comments are swapped.", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386584231", "createdAt": "2020-03-02T18:56:06Z", "author": {"login": "dbenamydd"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU5ODgxNw==", "bodyText": "@jbachorik isn't this correct, or am I missing something? does lz4 have better ratio than gzip?", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386598817", "createdAt": "2020-03-02T19:22:37Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ=="}, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4Njg2MzE5MA==", "bodyText": "No it's fine by me. LZ4 is focused on speed, the ratio is worse than zlib/gzip.\nhttps://en.wikipedia.org/wiki/LZ4_(compression_algorithm)\nBTW, something that people tands to forgot is that Gzip has compression levels which gives opportunity to trade cpu with ratio...", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386863190", "createdAt": "2020-03-03T08:32:25Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ=="}, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjkxMzU5NQ==", "bodyText": "This is correct - LZ4 has slightly worse compression ration while it has overwhelmingly higher throughput.\nAs for the levels - the comparisons were done with OOTB config provided for the Java libs. Perhaps, it would be possible to fine-tune both GZIP and LZ4 to provide either better compression ratio or throughput. But the difference in GZIP vs. LZ4 in throughput is much bigger than the difference in the compression ratio so it is rather improbable that it could beat LZ4 in both terms of throughput and compression ...", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r386913595", "createdAt": "2020-03-03T10:04:10Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ=="}, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzA5ODI0Ng==", "bodyText": "Whoops! Thanks.", "url": "https://github.com/DataDog/dd-trace-java/pull/1216#discussion_r387098246", "createdAt": "2020-03-03T15:29:07Z", "author": {"login": "dbenamydd"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/CompressionType.java", "diffHunk": "@@ -1,25 +1,35 @@\n package com.datadog.profiling.uploader;\n \n+import lombok.extern.slf4j.Slf4j;\n+\n+@Slf4j\n enum CompressionType {\n   /** No compression */\n   OFF,\n   /** Default compression */\n   ON,\n-  /** Unknown compression config value */\n-  UNKNOWN;\n+  /** Lower compression ratio with less CPU overhead * */\n+  LZ4,\n+  /** Better compression ratio for the price of higher CPU usage * */\n+  GZIP;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjU4NDIzMQ=="}, "originalCommit": {"oid": "a1f6ca1ee7c49a086bcff7543d5dd4f68b694469"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 509, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}