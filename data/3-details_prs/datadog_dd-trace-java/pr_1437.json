{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE0NzU0OTcw", "number": 1437, "title": "Reduce copy/allocation in trace serialization pipeline", "bodyText": "Introduces TraceBuffer which may contain one or many traces, encapsulating the data buffer to avoid copying.\nIntroduces StatefulSerializer which decouples the process of serializing traces from getting a buffer. This makes it possible to serialize several traces into the same buffer, though the responsibilities between the trace processor and batch processor are maintained for the time being.\nThe MsgPackStatefulSerializer implementation has an adaptive buffer sizing algorithm based on a moving average of recently serialised traces and the number of traces last serialised into the buffer, which aims to minimise allocation.\nThis allows reuse of a MessagePacker which prevents excessive allocation of UTF_8$Encoder objects.\nDead code in DDAgentApi.sendTraces was removed and corresponding tests were updated.\n\nThese changes reduce allocation of byte[] by over 34MB/s (2GB over 60s) and `UTF_8.Encoder$ by 17MB/s (1GB over 60s) in a spring pet-clinic based benchmark. These changes are intended as a stepping stone towards different buffer reuse strategies.", "createdAt": "2020-05-07T15:19:52Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1437", "merged": true, "mergeCommit": {"oid": "a2bcec4355158bdfbe9c8b9a394854593b29afb5"}, "closed": true, "closedAt": "2020-05-11T19:16:41Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABce-3XgAH2gAyNDE0NzU0OTcwOjg0NGJlMzgzZDE5YWY3ZmQ2MzE0YjgxMWNmZTE0ZTc3Yzg2YTM1ZWM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcgT6_GgBqjMzMjQyMDk2NjM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "844be383d19af7fd6314b811cfe14e77c86a35ec", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/844be383d19af7fd6314b811cfe14e77c86a35ec", "committedDate": "2020-05-07T15:18:24Z", "message": "replace byte[] with ByteBuffer to reduce copy/allocation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "894b1e303a558e7cee3b0d12e31e49a859060d9b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/894b1e303a558e7cee3b0d12e31e49a859060d9b", "committedDate": "2020-05-08T06:57:17Z", "message": "return null from StringTables when no entry is present"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7da77bc24e2fbf245f9c1dbeaa3bd02c0236aeb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a7da77bc24e2fbf245f9c1dbeaa3bd02c0236aeb", "committedDate": "2020-05-08T07:00:44Z", "message": "Merge branch 'master' into richardstartin/bytebuff-events"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4MTYzMDEw", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#pullrequestreview-408163010", "createdAt": "2020-05-08T11:02:45Z", "commit": {"oid": "a7da77bc24e2fbf245f9c1dbeaa3bd02c0236aeb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA4Mjc1MzEx", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#pullrequestreview-408275311", "createdAt": "2020-05-08T14:23:24Z", "commit": {"oid": "a7da77bc24e2fbf245f9c1dbeaa3bd02c0236aeb"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyMzoyNFrOGSnXIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wOFQxNDoyMzoyNFrOGSnXIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMjE3MjQ0OQ==", "bodyText": "For the sake of seeing the difference between this and the next check, it might make sense to change the 16 to 0x100", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#discussion_r422172449", "createdAt": "2020-05-08T14:23:24Z", "author": {"login": "devinsba"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -147,14 +151,18 @@ public long contentLength() {\n \n             @Override\n             public void writeTo(final BufferedSink sink) throws IOException {\n-              final OutputStream out = sink.outputStream();\n-              final MessagePacker packer = MessagePack.newDefaultPacker(out);\n-              packer.packArrayHeader(traces.size());\n-              for (final byte[] trace : traces) {\n-                packer.writePayload(trace);\n+              if (traces.size() < 16) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7da77bc24e2fbf245f9c1dbeaa3bd02c0236aeb"}, "originalPosition": 66}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA3NTgxNjI3", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#pullrequestreview-407581627", "createdAt": "2020-05-07T15:22:12Z", "commit": {"oid": "844be383d19af7fd6314b811cfe14e77c86a35ec"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyMjoxMlrOGSDzHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wN1QxNToyNDowNVrOGSD4ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU4OTc5MA==", "bodyText": "This is where the primary benefit is, right?  Perhaps you could update the PR description to describe how this change achieves its' benefits.", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#discussion_r421589790", "createdAt": "2020-05-07T15:22:12Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -141,14 +145,18 @@ public long contentLength() {\n \n             @Override\n             public void writeTo(final BufferedSink sink) throws IOException {\n-              final OutputStream out = sink.outputStream();\n-              final MessagePacker packer = MessagePack.newDefaultPacker(out);\n-              packer.packArrayHeader(traces.size());\n-              for (final byte[] trace : traces) {\n-                packer.writePayload(trace);\n+              if (traces.size() < 16) {\n+                sink.writeByte((byte) (traces.size() | FIXARRAY_PREFIX));\n+              } else if (traces.size() < 0x10000) {\n+                sink.writeByte(ARRAY16);\n+                sink.writeShort(traces.size());\n+              } else {\n+                sink.writeByte(ARRAY32);\n+                sink.writeInt(traces.size());\n+              }\n+              for (ByteBuffer trace : traces) {\n+                sink.write(trace);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844be383d19af7fd6314b811cfe14e77c86a35ec"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMTU5MTE0MQ==", "bodyText": "Perhaps a comment here that you are inlining the MessagePacker.packArrayHeader behavior?", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#discussion_r421591141", "createdAt": "2020-05-07T15:24:05Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -141,14 +145,18 @@ public long contentLength() {\n \n             @Override\n             public void writeTo(final BufferedSink sink) throws IOException {\n-              final OutputStream out = sink.outputStream();\n-              final MessagePacker packer = MessagePack.newDefaultPacker(out);\n-              packer.packArrayHeader(traces.size());\n-              for (final byte[] trace : traces) {\n-                packer.writePayload(trace);\n+              if (traces.size() < 16) {\n+                sink.writeByte((byte) (traces.size() | FIXARRAY_PREFIX));\n+              } else if (traces.size() < 0x10000) {\n+                sink.writeByte(ARRAY16);\n+                sink.writeShort(traces.size());\n+              } else {\n+                sink.writeByte(ARRAY32);\n+                sink.writeInt(traces.size());\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "844be383d19af7fd6314b811cfe14e77c86a35ec"}, "originalPosition": 74}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2f2d51696d514de3d0f1cfc90c2348cae40a238e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2f2d51696d514de3d0f1cfc90c2348cae40a238e", "committedDate": "2020-05-11T08:58:18Z", "message": "allow adapative sizing of message buffers based on moving average, allow buffer to be shared between multiple traces (without enabling batching yet)."}, "afterCommit": {"oid": "de740e62f3eabad366003518e2882e9dca641773", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/de740e62f3eabad366003518e2882e9dca641773", "committedDate": "2020-05-11T09:26:12Z", "message": "allow adapative sizing of message buffers based on moving average, allow buffer to be shared between multiple traces (without enabling batching yet)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "241df213867a6f6ce3059670ae502780eead5e4f", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/241df213867a6f6ce3059670ae502780eead5e4f", "committedDate": "2020-05-11T09:45:20Z", "message": "update ddagent api integration test"}, "afterCommit": {"oid": "e76e0ed817260e518250bb280157e3d400fa0121", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e76e0ed817260e518250bb280157e3d400fa0121", "committedDate": "2020-05-11T10:00:38Z", "message": "update ddagent api integration test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6", "committedDate": "2020-05-11T10:10:23Z", "message": "allow adapative sizing of message buffers based on moving average, allow buffer to be shared between multiple traces (without enabling batching yet)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e76e0ed817260e518250bb280157e3d400fa0121", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e76e0ed817260e518250bb280157e3d400fa0121", "committedDate": "2020-05-11T10:00:38Z", "message": "update ddagent api integration test"}, "afterCommit": {"oid": "310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6", "committedDate": "2020-05-11T10:10:23Z", "message": "allow adapative sizing of message buffers based on moving average, allow buffer to be shared between multiple traces (without enabling batching yet)."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3a2f3d4b90640dbf52b37f75ed1632981e4e3910", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3a2f3d4b90640dbf52b37f75ed1632981e4e3910", "committedDate": "2020-05-11T18:00:15Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}, "afterCommit": {"oid": "e55175329d6b93fc6cf4b6c91c695ea413c1c394", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e55175329d6b93fc6cf4b6c91c695ea413c1c394", "committedDate": "2020-05-11T18:13:56Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDA5MzY4Mzgx", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#pullrequestreview-409368381", "createdAt": "2020-05-11T17:13:41Z", "commit": {"oid": "310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzoxMzo0MVrOGTlnrA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xMVQxNzozNTo0M1rOGTmbqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzE5MjQ5Mg==", "bodyText": "Can you add a comment here giving insight on the future direction of this?", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#discussion_r423192492", "createdAt": "2020-05-11T17:13:41Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/BatchWritingDisruptor.java", "diffHunk": "@@ -83,10 +84,11 @@ private BatchWritingHandler(\n     // TODO: reduce byte[] garbage by keeping the byte[] on the event and copy before returning.\n     @Override\n     public void onEvent(\n-        final DisruptorEvent<byte[]> event, final long sequence, final boolean endOfBatch) {\n+        final DisruptorEvent<TraceBuffer> event, final long sequence, final boolean endOfBatch) {\n       try {\n         if (event.data != null) {\n-          sizeInBytes += event.data.length;\n+          sizeInBytes += event.data.sizeInBytes();\n+          traceCount += event.data.traceCount();\n           serializedTraces.add(event.data);\n         }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyMzIwNTgwMw==", "bodyText": "A little insight on future direction would also be nice here.", "url": "https://github.com/DataDog/dd-trace-java/pull/1437#discussion_r423205803", "createdAt": "2020-05-11T17:35:43Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/TraceProcessingDisruptor.java", "diffHunk": "@@ -66,9 +68,11 @@ public void onEvent(\n           // TODO populate `_sample_rate` metric in a way that accounts for lost/dropped traces\n           try {\n             event.data = processor.onTraceComplete(event.data);\n-            final byte[] serializedTrace = api.serializeTrace(event.data);\n+            serializer.serialize(event.data);\n+            TraceBuffer serializedTrace = serializer.getBuffer();\n+            int sizeInBytes = serializedTrace.sizeInBytes();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "310fae50d50422fa7c0df6c8ba65eb6aa3cd5cc6"}, "originalPosition": 50}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e55175329d6b93fc6cf4b6c91c695ea413c1c394", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e55175329d6b93fc6cf4b6c91c695ea413c1c394", "committedDate": "2020-05-11T18:13:56Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}, "afterCommit": {"oid": "fe75c087f2da4ffb8c5566add53fff393f01673a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fe75c087f2da4ffb8c5566add53fff393f01673a", "committedDate": "2020-05-11T18:21:04Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "90a3d234ac183541ca8aba62a6f7b83d6f12ceaa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/90a3d234ac183541ca8aba62a6f7b83d6f12ceaa", "committedDate": "2020-05-11T18:24:08Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fe75c087f2da4ffb8c5566add53fff393f01673a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fe75c087f2da4ffb8c5566add53fff393f01673a", "committedDate": "2020-05-11T18:21:04Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}, "afterCommit": {"oid": "90a3d234ac183541ca8aba62a6f7b83d6f12ceaa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/90a3d234ac183541ca8aba62a6f7b83d6f12ceaa", "committedDate": "2020-05-11T18:24:08Z", "message": "don't read tags from the string table because we don't know many of their values, add some documentation about the intent behind TraceBuffer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2481, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}