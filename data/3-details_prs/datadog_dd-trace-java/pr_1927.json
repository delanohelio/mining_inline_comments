{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0NzYxMDc2", "number": 1927, "title": "Field inject sql into PreparedStatement, avoid WeakMap in JDBCMaps", "bodyText": "Killing off more background cleanup", "createdAt": "2020-09-29T11:29:03Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1927", "merged": true, "mergeCommit": {"oid": "2cc3d3ee28ac95f6c0fd94801d7ebd3c1b4ef317"}, "closed": true, "closedAt": "2020-09-29T14:23:19Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdNlpAuAH2gAyNDk0NzYxMDc2OjM5NDliMjk0NTFjOTE0NmUxNDJkNzJmOWM1YjZmNWVlMWEyOTg5ZTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNo7VqAFqTQ5ODUyMjI5MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3949b29451c9146e142d72f9c5b6f5ee1a2989e8", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3949b29451c9146e142d72f9c5b6f5ee1a2989e8", "committedDate": "2020-09-29T10:29:32Z", "message": "bounded cache for UTF-8 sql, move connection weakmap cleanup inline"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "276660f005d29611dfb88f43bee55d007e45e358", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/276660f005d29611dfb88f43bee55d007e45e358", "committedDate": "2020-09-29T11:28:08Z", "message": "use field injection to store sql in preparedstatement, which avoids an unbounded collection and background cleanup"}, "afterCommit": {"oid": "432faed553d152f557215d720c7c265eca57755c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/432faed553d152f557215d720c7c265eca57755c", "committedDate": "2020-09-29T11:30:45Z", "message": "use field injection to store sql in preparedstatement, which avoids an unbounded collection and background cleanup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4Mzc2Nzkw", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#pullrequestreview-498376790", "createdAt": "2020-09-29T11:38:07Z", "commit": {"oid": "432faed553d152f557215d720c7c265eca57755c"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f3199e4f7bf593d628c3614a028c1acea6b0863c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f3199e4f7bf593d628c3614a028c1acea6b0863c", "committedDate": "2020-09-29T11:46:50Z", "message": "avoid lookup and reinjection if prepared statement is reused"}, "afterCommit": {"oid": "712525a93ef614f8f27c863a9a654181e1456b69", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/712525a93ef614f8f27c863a9a654181e1456b69", "committedDate": "2020-09-29T11:58:52Z", "message": "avoid lookup and reinjection if prepared statement is reused"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MzkyNzIy", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#pullrequestreview-498392722", "createdAt": "2020-09-29T12:01:16Z", "commit": {"oid": "712525a93ef614f8f27c863a9a654181e1456b69"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowMToxN1rOHZpsTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowMToxN1rOHZpsTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1OTUzMw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#discussion_r496659533", "createdAt": "2020-09-29T12:01:17Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/ConnectionInstrumentation.java", "diffHunk": "@@ -58,11 +59,14 @@ public ConnectionInstrumentation() {\n     @Advice.OnMethodExit(suppress = Throwable.class)\n     public static void addDBInfo(\n         @Advice.Argument(0) final String sql, @Advice.Return final PreparedStatement statement) {\n-      // Sometimes the prepared statement is not reused, but the underlying String is reused, so\n-      // check if we have seen this String before\n-      UTF8BytesString utf8Sql = JDBCMaps.preparedStatementsSql.computeIfAbsent(sql, UTF8_ENCODE);\n-      InstrumentationContext.get(PreparedStatement.class, UTF8BytesString.class)\n-          .put(statement, utf8Sql);\n+      ContextStore<PreparedStatement, UTF8BytesString> contextStore =\n+          InstrumentationContext.get(PreparedStatement.class, UTF8BytesString.class);\n+      if (null == contextStore.get(statement)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "712525a93ef614f8f27c863a9a654181e1456b69"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39a14eba6b7e3e1034fd0b126cd75e363fb898f7", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/39a14eba6b7e3e1034fd0b126cd75e363fb898f7", "committedDate": "2020-09-29T12:23:17Z", "message": "use field injection to store sql in preparedstatement, which avoids an unbounded collection and background cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1bbaef815e0c41bc63cc1e0a184b22015ac98926", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1bbaef815e0c41bc63cc1e0a184b22015ac98926", "committedDate": "2020-09-29T12:23:17Z", "message": "avoid lookup and reinjection if prepared statement is reused"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "712525a93ef614f8f27c863a9a654181e1456b69", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/712525a93ef614f8f27c863a9a654181e1456b69", "committedDate": "2020-09-29T11:58:52Z", "message": "avoid lookup and reinjection if prepared statement is reused"}, "afterCommit": {"oid": "1bbaef815e0c41bc63cc1e0a184b22015ac98926", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1bbaef815e0c41bc63cc1e0a184b22015ac98926", "committedDate": "2020-09-29T12:23:17Z", "message": "avoid lookup and reinjection if prepared statement is reused"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3baf8b84b0a60b26c618d56954939cfb2ae9ace5", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3baf8b84b0a60b26c618d56954939cfb2ae9ace5", "committedDate": "2020-09-29T12:31:03Z", "message": "move JDBCMaps into JDBCDecorator to save a class load"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTIxNDUy", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#pullrequestreview-498521452", "createdAt": "2020-09-29T14:18:33Z", "commit": {"oid": "3baf8b84b0a60b26c618d56954939cfb2ae9ace5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxODozM1rOHZvlWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxODozM1rOHZvlWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1NjA1OQ==", "bodyText": "Should we add a computeIfAbsent to contextStore instead?", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#discussion_r496756059", "createdAt": "2020-09-29T14:18:33Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/ConnectionInstrumentation.java", "diffHunk": "@@ -57,14 +60,14 @@ public ConnectionInstrumentation() {\n     @Advice.OnMethodExit(suppress = Throwable.class)\n     public static void addDBInfo(\n         @Advice.Argument(0) final String sql, @Advice.Return final PreparedStatement statement) {\n-      // Sometimes the prepared statement is not reused, but the underlying String is reused, so\n-      // check if we have seen this String before\n-      UTF8BytesString utf8Sql = JDBCMaps.preparedStatementsSql.get(sql);\n-      if (utf8Sql == null) {\n-        utf8Sql = UTF8BytesString.createWeak(sql);\n-        JDBCMaps.preparedStatementsSql.put(sql, utf8Sql);\n+      ContextStore<PreparedStatement, UTF8BytesString> contextStore =\n+          InstrumentationContext.get(PreparedStatement.class, UTF8BytesString.class);\n+      if (null == contextStore.get(statement)) {\n+        // Sometimes the prepared statement is not reused, but the underlying String is reused, so\n+        // check if we have seen this String before\n+        UTF8BytesString utf8Sql = PREPARED_STATEMENTS_SQL.computeIfAbsent(sql, UTF8_ENCODE);\n+        contextStore.putIfAbsent(statement, utf8Sql);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3baf8b84b0a60b26c618d56954939cfb2ae9ace5"}, "originalPosition": 56}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTIyMjkx", "url": "https://github.com/DataDog/dd-trace-java/pull/1927#pullrequestreview-498522291", "createdAt": "2020-09-29T14:19:16Z", "commit": {"oid": "3baf8b84b0a60b26c618d56954939cfb2ae9ace5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3175, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}