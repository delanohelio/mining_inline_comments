{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkyMDU0ODk4", "number": 1907, "title": "Cleanup dependency on Guava", "bodyText": "Removes the inadvertent dependencies on Guava because of the lines:\n\nannotationProcessor deps.autoservice\nimplementation deps.autoservice\n\n\nRemoves unneeded uses of Guava\nImplements a simple rate limiter that doesn't have all of the features of the guava version (smoothing, acquiring multiple tokens, etc) but gets the job done\n\nAfter this pull request, the uses of Guava are:\n\nGuavaWeakCache in agent-tooling\nDDCachingPoolStrategy in agent-tooling\nInstrumentations on Guava interfaces ( ListenableFuture, Ratpack, Twilio, datastax-cassandra-3)\nTests (I left these untouched)", "createdAt": "2020-09-23T21:39:39Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1907", "merged": true, "mergeCommit": {"oid": "36af5b341c60290655d552969a341ae264910504"}, "closed": true, "closedAt": "2020-09-29T15:59:37Z", "author": {"login": "randomanderson"}, "timelineItems": {"totalCount": 26, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdMHN-0ABqjM4MDQ5NjY0MjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNp2gxAH2gAyNDkyMDU0ODk4OjQyNzk3NTFlYTY1OTE2MTM2NGQyNWQ1YzY1Njc0MjA0ODU4NjY0MjU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6f7e3beac4fc1c32d132682fb1a0d3a8337ddd6", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d6f7e3beac4fc1c32d132682fb1a0d3a8337ddd6", "committedDate": "2020-09-24T20:00:49Z", "message": "Remove guava from core with RateLimiter impl"}, "afterCommit": {"oid": "4a80b3715bd3070374e26e1d9544d772be25df52", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4a80b3715bd3070374e26e1d9544d772be25df52", "committedDate": "2020-09-24T20:28:44Z", "message": "Remove guava from core with RateLimiter impl"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDA3NzIz", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496407723", "createdAt": "2020-09-25T13:15:21Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoxNToyMVrOHYDH6g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoxNToyMVrOHYDH6g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk3OTA1MA==", "bodyText": "Can we extract this somewhere it can be reused? This is a good practice we should build on for testability.", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494979050", "createdAt": "2020-09-25T13:15:21Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SimpleRateLimiter.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package datadog.trace.core.util;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Rate limiter that only supports non-blocking retrieval of a single token */\n+public class SimpleRateLimiter {\n+  private final long capacity;\n+  private long tokens;\n+  private long lastRefillTime;\n+  private final long refillIntervalInNanos;\n+  private final TimeSource timeSource;\n+\n+  public SimpleRateLimiter(long rate, TimeUnit unit) {\n+    this(rate, unit, new SystemNanoTimeSource());\n+  }\n+\n+  protected SimpleRateLimiter(long rate, TimeUnit unit, TimeSource timeSource) {\n+    refillIntervalInNanos = unit.toNanos(1) / rate;\n+    capacity = rate;\n+    tokens = rate;\n+    this.timeSource = timeSource;\n+    lastRefillTime = timeSource.getTime();\n+  }\n+\n+  public synchronized boolean tryAcquire() {\n+    fill();\n+\n+    if (tokens > 0) {\n+      tokens--;\n+      return true;\n+    } else {\n+      return false;\n+    }\n+  }\n+\n+  private void fill() {\n+    long timeElapsedSinceLastRefill = timeSource.getTime() - lastRefillTime;\n+    long intervals = timeElapsedSinceLastRefill / refillIntervalInNanos;\n+    tokens = Math.min(capacity, tokens + intervals);\n+\n+    lastRefillTime += intervals * refillIntervalInNanos;\n+  }\n+\n+  // This can probably be extracted to be more generic\n+  interface TimeSource {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDA4MjA0", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496408204", "createdAt": "2020-09-25T13:16:00Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoxNjowMFrOHYDJYg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoxNjowMFrOHYDJYg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk3OTQyNg==", "bodyText": "Does this really need to be unmodifiable if we're making a copy anyway?", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494979426", "createdAt": "2020-09-25T13:16:00Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -407,7 +406,7 @@ Object unsafeGetAndRemoveTag(final String tag) {\n \n   public Map<String, Object> getTags() {\n     synchronized (unsafeTags) {\n-      return ImmutableMap.copyOf(unsafeTags);\n+      return Collections.unmodifiableMap(new HashMap<>(unsafeTags));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDEyODc0", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496412874", "createdAt": "2020-09-25T13:21:38Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyMTozOVrOHYDXbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyMTozOVrOHYDXbg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4MzAyMg==", "bodyText": "This is called from application threads and could easily create contention. Could we use something based on atomics and check if after decrementing the atomic is still positive, giving an approximate result?\nAlternatively, do we really need this class? Can we just delete it? Sampling rate can be controlled probabilistically without contention by adjusting/controlling distribution parameters", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494983022", "createdAt": "2020-09-25T13:21:39Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SimpleRateLimiter.java", "diffHunk": "@@ -0,0 +1,55 @@\n+package datadog.trace.core.util;\n+\n+import java.util.concurrent.TimeUnit;\n+\n+/** Rate limiter that only supports non-blocking retrieval of a single token */\n+public class SimpleRateLimiter {\n+  private final long capacity;\n+  private long tokens;\n+  private long lastRefillTime;\n+  private final long refillIntervalInNanos;\n+  private final TimeSource timeSource;\n+\n+  public SimpleRateLimiter(long rate, TimeUnit unit) {\n+    this(rate, unit, new SystemNanoTimeSource());\n+  }\n+\n+  protected SimpleRateLimiter(long rate, TimeUnit unit, TimeSource timeSource) {\n+    refillIntervalInNanos = unit.toNanos(1) / rate;\n+    capacity = rate;\n+    tokens = rate;\n+    this.timeSource = timeSource;\n+    lastRefillTime = timeSource.getTime();\n+  }\n+\n+  public synchronized boolean tryAcquire() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 25}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDEzMjUz", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496413253", "createdAt": "2020-09-25T13:22:08Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyMjowOFrOHYDYjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyMjowOFrOHYDYjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4MzMwOA==", "bodyText": "This is a nice unit test \ud83e\udd47", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494983308", "createdAt": "2020-09-25T13:22:08Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/util/SimpleRateLimiterTest.groovy", "diffHunk": "@@ -0,0 +1,117 @@\n+package datadog.trace.core.util\n+\n+import datadog.trace.util.test.DDSpecification\n+\n+import java.util.concurrent.TimeUnit\n+\n+class SimpleRateLimiterTest extends DDSpecification {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDE1NTkx", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496415591", "createdAt": "2020-09-25T13:24:58Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNDo1OFrOHYDfYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNDo1OFrOHYDfYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4NTA1Ng==", "bodyText": "Unrelated to this PR, probably not too important, can we move this one line down and use the classMethods to get an estimate for the size?", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494985056", "createdAt": "2020-09-25T13:24:58Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceConfigInstrumentation.java", "diffHunk": "@@ -68,7 +68,7 @@ public TraceConfigInstrumentation() {\n       classMethodsToTrace = Collections.emptyMap();\n \n     } else {\n-      final Map<String, Set<String>> toTrace = Maps.newHashMap();\n+      final Map<String, Set<String>> toTrace = new HashMap<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDE2MjAx", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496416201", "createdAt": "2020-09-25T13:25:41Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNTo0MVrOHYDhMA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxMzoyNTo0MVrOHYDhMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NDk4NTUyMA==", "bodyText": "I think we could size this one accurately too", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r494985520", "createdAt": "2020-09-25T13:25:41Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/trace-annotation/src/main/java/datadog/trace/instrumentation/trace_annotation/TraceAnnotationsInstrumentation.java", "diffHunk": "@@ -60,7 +60,7 @@ public TraceAnnotationsInstrumentation() {\n           configString);\n       additionalTraceAnnotations = Collections.emptySet();\n     } else {\n-      final Set<String> annotations = Sets.newHashSet();\n+      final Set<String> annotations = new HashSet<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDE4Mzkz", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496418393", "createdAt": "2020-09-25T13:28:21Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2NDg2NDUy", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496486452", "createdAt": "2020-09-25T14:41:22Z", "commit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0MToyM1rOHYGk8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQxNDo0MToyM1rOHYGk8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTAzNTYzMw==", "bodyText": "What is this still being used for?  The cache?", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r495035633", "createdAt": "2020-09-25T14:41:23Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/agent-tooling.gradle", "diffHunk": "@@ -15,8 +15,10 @@ dependencies {\n   compile group: 'com.blogspot.mydailyjava', name: 'weak-lock-free', version: '0.15'\n   compile deps.bytebuddy\n   compile deps.bytebuddyagent\n-  annotationProcessor deps.autoservice\n-  implementation deps.autoservice\n+  compile deps.guava", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48993be05430e17ad3cc939d9abe4389aa983338"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk2OTEwODU1", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-496910855", "createdAt": "2020-09-25T23:24:01Z", "commit": {"oid": "03874dc503a9723ae7ee93722b58963d4faca7c0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzoyNDowMVrOHYXjvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yNVQyMzoyNDowMVrOHYXjvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTMxMzg1NQ==", "bodyText": "I suggest giving this method a better name that represents the intended precision and clock type (time vs ticks).  Perhaps it could also be combined with datadog.trace.core.util.Clock?", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r495313855", "createdAt": "2020-09-25T23:24:01Z", "author": {"login": "tylerbenson"}, "path": "internal-api/src/main/java/datadog/trace/api/time/TimeSource.java", "diffHunk": "@@ -0,0 +1,5 @@\n+package datadog.trace.api.time;\n+\n+public interface TimeSource {\n+  long get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03874dc503a9723ae7ee93722b58963d4faca7c0"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71fd172059137c114505463b5015533b41e4ea43", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/71fd172059137c114505463b5015533b41e4ea43", "committedDate": "2020-09-28T17:15:54Z", "message": "Fix annotation processing not to pull in guava"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e0ee130a0bb5ee5fd392bfdf0049a56704d1ce53", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e0ee130a0bb5ee5fd392bfdf0049a56704d1ce53", "committedDate": "2020-09-28T17:15:54Z", "message": "Remove guava where its unneeded"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff1705ebc5bb7c3a29361b43252835245a7f4b73", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ff1705ebc5bb7c3a29361b43252835245a7f4b73", "committedDate": "2020-09-28T17:15:55Z", "message": "Glassfish brings in the wrong Guava version"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8129ec24aefa553ab6bf629de25e136092e30d7a", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8129ec24aefa553ab6bf629de25e136092e30d7a", "committedDate": "2020-09-28T17:15:55Z", "message": "Remove guava from core with RateLimiter impl"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "123bebee7b02dc9fbce61e2d5e36dc572756514d", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/123bebee7b02dc9fbce61e2d5e36dc572756514d", "committedDate": "2020-09-28T17:15:55Z", "message": "Remove some direct dependencies on agent-tooling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14803e80469fd7038b7e49072a3ed9afb4882d1b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/14803e80469fd7038b7e49072a3ed9afb4882d1b", "committedDate": "2020-09-28T17:15:55Z", "message": "presize maps"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7f01d7e136bce1d96119a0eefe50577aee5c073", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7f01d7e136bce1d96119a0eefe50577aee5c073", "committedDate": "2020-09-28T17:15:55Z", "message": "Extract time source.  Use synchronized-free limiter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4487c58f7e5c928bae4e09fb36ac1482ce434ef4", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4487c58f7e5c928bae4e09fb36ac1482ce434ef4", "committedDate": "2020-09-28T17:15:55Z", "message": "Change get() to getNanoTime()"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "03874dc503a9723ae7ee93722b58963d4faca7c0", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/03874dc503a9723ae7ee93722b58963d4faca7c0", "committedDate": "2020-09-25T22:04:07Z", "message": "Extract time source.  Use synchronized-free limiter"}, "afterCommit": {"oid": "4487c58f7e5c928bae4e09fb36ac1482ce434ef4", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4487c58f7e5c928bae4e09fb36ac1482ce434ef4", "committedDate": "2020-09-28T17:15:55Z", "message": "Change get() to getNanoTime()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "86ab0401edf6a015de932c3dcd4031ecd653eebf", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/86ab0401edf6a015de932c3dcd4031ecd653eebf", "committedDate": "2020-09-28T19:03:00Z", "message": "add math utils test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/78e5db55a2c53e423bf4087f005e63a4e7ff43be", "committedDate": "2020-09-28T20:33:28Z", "message": "Add ControllableTimeSource test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b9fe42d822564a72576e43e00213d0ff25ba21c1", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b9fe42d822564a72576e43e00213d0ff25ba21c1", "committedDate": "2020-09-28T19:26:37Z", "message": "Add ControllableTimeSource test"}, "afterCommit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/78e5db55a2c53e423bf4087f005e63a4e7ff43be", "committedDate": "2020-09-28T20:33:28Z", "message": "Add ControllableTimeSource test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTYxODE2", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-498161816", "createdAt": "2020-09-29T07:20:00Z", "commit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyMDowMFrOHZeM6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzoyMDowMFrOHZeM6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ3MTI3Mw==", "bodyText": "timeSource.getNanoTime() - localRefill is the same as now - localRefill", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#discussion_r496471273", "createdAt": "2020-09-29T07:20:00Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/util/SimpleRateLimiter.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package datadog.trace.core.util;\n+\n+import datadog.trace.api.time.SystemTimeSource;\n+import datadog.trace.api.time.TimeSource;\n+import datadog.trace.api.utils.MathUtils;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicLong;\n+\n+/**\n+ * Rate limiter that only supports non-blocking retrieval of a single token at a minimum rate of 1\n+ * per second. Tokens are not smoothed across the second\n+ */\n+public class SimpleRateLimiter {\n+  private static final long REFILL_INTERVAL = TimeUnit.SECONDS.toNanos(1);\n+  private final long capacity;\n+  private final AtomicLong tokens;\n+  private final AtomicLong lastRefillTime;\n+  private final TimeSource timeSource;\n+\n+  public SimpleRateLimiter(long rate) {\n+    this(rate, SystemTimeSource.INSTANCE);\n+  }\n+\n+  protected SimpleRateLimiter(long rate, TimeSource timeSource) {\n+    this.timeSource = timeSource;\n+\n+    capacity = Math.max(1, rate);\n+\n+    tokens = new AtomicLong(capacity);\n+\n+    lastRefillTime = new AtomicLong(timeSource.getNanoTime());\n+  }\n+\n+  public boolean tryAcquire() {\n+    long now = timeSource.getNanoTime();\n+    long localRefill = lastRefillTime.get();\n+    long timeElapsedSinceLastRefill = timeSource.getNanoTime() - localRefill;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4MTg3NTkx", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-498187591", "createdAt": "2020-09-29T07:49:26Z", "commit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk4NTQ3MTM1", "url": "https://github.com/DataDog/dd-trace-java/pull/1907#pullrequestreview-498547135", "createdAt": "2020-09-29T14:41:57Z", "commit": {"oid": "78e5db55a2c53e423bf4087f005e63a4e7ff43be"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4279751ea659161364d25d5c6567420485866425", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4279751ea659161364d25d5c6567420485866425", "committedDate": "2020-09-29T15:23:54Z", "message": "review comments"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3151, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}