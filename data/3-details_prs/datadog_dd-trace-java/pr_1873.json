{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg3ODc5NzIw", "number": 1873, "title": "instrument spring scheduling @Async", "bodyText": "This works by instrumenting the @ Async interceptor and wrapping the MethodInvocation to capture the active context, if it exists.", "createdAt": "2020-09-16T10:11:04Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1873", "merged": true, "mergeCommit": {"oid": "f2ae36b6937d1668c56417fa6cab460a97db1660"}, "closed": true, "closedAt": "2020-09-18T08:23:14Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdJbkR2gBqjM3NzI5NDEzNjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdJ18RGgBqjM3Nzk1MTUwMTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eae92f3b0e40cf6f1582ace7a04ff0cc2cc07621", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/eae92f3b0e40cf6f1582ace7a04ff0cc2cc07621", "committedDate": "2020-09-16T12:16:03Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}, "afterCommit": {"oid": "02cc033b346af36101557080fbe11bec94797506", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02cc033b346af36101557080fbe11bec94797506", "committedDate": "2020-09-16T12:29:27Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02cc033b346af36101557080fbe11bec94797506", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02cc033b346af36101557080fbe11bec94797506", "committedDate": "2020-09-16T12:29:27Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}, "afterCommit": {"oid": "8b62b3ab054fcbd55cefc105ca641f7dbd023e92", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8b62b3ab054fcbd55cefc105ca641f7dbd023e92", "committedDate": "2020-09-16T12:32:26Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8b62b3ab054fcbd55cefc105ca641f7dbd023e92", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8b62b3ab054fcbd55cefc105ca641f7dbd023e92", "committedDate": "2020-09-16T12:32:26Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}, "afterCommit": {"oid": "b1b1f2e6075575663b2d63329c08a4bb57d95382", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b1b1f2e6075575663b2d63329c08a4bb57d95382", "committedDate": "2020-09-16T12:56:56Z", "message": "add MethodInvocation wrapper for spanning @Async invocations"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "78f781a9f098a3519a77dd2bb98adca303809b7f", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/78f781a9f098a3519a77dd2bb98adca303809b7f", "committedDate": "2020-09-16T13:03:14Z", "message": "add a smoke test for spring webmvc -> async -> grpc"}, "afterCommit": {"oid": "251215ea71593c7785fca40dde2d0206eeeb18fb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/251215ea71593c7785fca40dde2d0206eeeb18fb", "committedDate": "2020-09-16T13:22:49Z", "message": "add a smoke test for spring webmvc -> async -> grpc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "251215ea71593c7785fca40dde2d0206eeeb18fb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/251215ea71593c7785fca40dde2d0206eeeb18fb", "committedDate": "2020-09-16T13:22:49Z", "message": "add a smoke test for spring webmvc -> async -> grpc"}, "afterCommit": {"oid": "daebf6a97b8f4c0511df6f5067d10284fc8fe45e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/daebf6a97b8f4c0511df6f5067d10284fc8fe45e", "committedDate": "2020-09-16T13:40:02Z", "message": "add a smoke test for spring webmvc -> async -> grpc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ae16131601484ca2a1b76a91bea0ba26606ac742", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ae16131601484ca2a1b76a91bea0ba26606ac742", "committedDate": "2020-09-16T13:44:43Z", "message": "cleanup"}, "afterCommit": {"oid": "b739ddeb0c4a8b16c1392217cc6cdc6471d5a3a3", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b739ddeb0c4a8b16c1392217cc6cdc6471d5a3a3", "committedDate": "2020-09-16T13:46:20Z", "message": "cleanup"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7ea557e6dd4bff1116d98a23dbb7cbbbad63d7fe", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7ea557e6dd4bff1116d98a23dbb7cbbbad63d7fe", "committedDate": "2020-09-16T14:39:43Z", "message": "close contexts in spring scdheduling tests"}, "afterCommit": {"oid": "4893d7f860abe5e74513cf2d0385c8b583ade661", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4893d7f860abe5e74513cf2d0385c8b583ade661", "committedDate": "2020-09-16T14:47:48Z", "message": "close contexts in spring scdheduling tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4893d7f860abe5e74513cf2d0385c8b583ade661", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4893d7f860abe5e74513cf2d0385c8b583ade661", "committedDate": "2020-09-16T14:47:48Z", "message": "close contexts in spring scdheduling tests"}, "afterCommit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a9f2d81e70eeff0d9e93a7a66cad0d615892209e", "committedDate": "2020-09-17T09:45:09Z", "message": "close contexts in spring scdheduling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDU5MDI1", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490459025", "createdAt": "2020-09-17T10:33:30Z", "commit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDc4NzE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490478715", "createdAt": "2020-09-17T11:03:04Z", "commit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTowMzowNFrOHTcwsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxMTowMzowNFrOHTcwsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDE1NjIwOA==", "bodyText": "If I can merge #1878 first, we can use already cached UTF-8 string here", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490156208", "createdAt": "2020-09-17T11:03:04Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/main/java/datadog/trace/instrumentation/springscheduling/SpannedMethodInvocation.java", "diffHunk": "@@ -0,0 +1,62 @@\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.springscheduling.SpringSchedulingDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import java.lang.reflect.AccessibleObject;\n+import java.lang.reflect.Method;\n+import org.aopalliance.intercept.MethodInvocation;\n+\n+public class SpannedMethodInvocation implements MethodInvocation {\n+\n+  private final AgentSpan parent;\n+  private final MethodInvocation delegate;\n+\n+  public SpannedMethodInvocation(AgentSpan parent, MethodInvocation delegate) {\n+    this.parent = parent;\n+    this.delegate = delegate;\n+  }\n+\n+  @Override\n+  public Method getMethod() {\n+    return delegate.getMethod();\n+  }\n+\n+  @Override\n+  public Object[] getArguments() {\n+    return delegate.getArguments();\n+  }\n+\n+  @Override\n+  public Object proceed() throws Throwable {\n+    CharSequence spanName = DECORATE.spanNameForMethod(delegate.getMethod());\n+    // TODO kill all APIs requiring String parameters with fire\n+    final AgentSpan span =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNDg5ODE2", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490489816", "createdAt": "2020-09-17T11:20:11Z", "commit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwNzg0NTYy", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490784562", "createdAt": "2020-09-17T16:30:39Z", "commit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7ca3fedf0d1558c7dbc197186f9c4c37e683a5f8", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7ca3fedf0d1558c7dbc197186f9c4c37e683a5f8", "committedDate": "2020-09-17T17:39:10Z", "message": "demonstrate spring Async breaks lineage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a9f2d81e70eeff0d9e93a7a66cad0d615892209e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a9f2d81e70eeff0d9e93a7a66cad0d615892209e", "committedDate": "2020-09-17T09:45:09Z", "message": "close contexts in spring scdheduling tests"}, "afterCommit": {"oid": "a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6", "committedDate": "2020-09-17T17:39:19Z", "message": "close contexts in spring scheduling tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "447581de9b6d2b82c9024d2a709a982c534d8728", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/447581de9b6d2b82c9024d2a709a982c534d8728", "committedDate": "2020-09-17T18:36:41Z", "message": "add MethodInvocation wrapper for spanning spring Async invocations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01109f90e4ed105a460a32d75bb8463a3ff857ec", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/01109f90e4ed105a460a32d75bb8463a3ff857ec", "committedDate": "2020-09-17T18:36:41Z", "message": "add a smoke test for spring webmvc -> async -> grpc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81a425841f25602f9f6fda904c3a7bc890b98cbb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81a425841f25602f9f6fda904c3a7bc890b98cbb", "committedDate": "2020-09-17T18:36:42Z", "message": "cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bc2fb5e86582413e7e192c6905d0c3524fc91a20", "committedDate": "2020-09-17T18:36:42Z", "message": "close contexts in spring scheduling tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6", "committedDate": "2020-09-17T17:39:19Z", "message": "close contexts in spring scheduling tests"}, "afterCommit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bc2fb5e86582413e7e192c6905d0c3524fc91a20", "committedDate": "2020-09-17T18:36:42Z", "message": "close contexts in spring scheduling tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODc4OTM3", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490878937", "createdAt": "2020-09-17T18:33:38Z", "commit": {"oid": "a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODozMzozOFrOHTwC6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxODo1MzoxMFrOHTwstQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3MjE2OQ==", "bodyText": "I don't think this comment applies since we updated the version and the test doesn't test with 7.", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490472169", "createdAt": "2020-09-17T18:33:38Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/spring-scheduling-3.1.gradle", "diffHunk": "@@ -22,11 +22,16 @@ testSets {\n }\n \n dependencies {\n-  // 3.2.3 is the first version with which the tests will run. Lower versions require other\n-  // classes and packages to be imported. Versions 3.1.0+ work with the instrumentation.\n-  compileOnly group: 'org.springframework', name: 'spring-context', version: '3.1.0.RELEASE'\n-  testCompile group: 'org.springframework', name: 'spring-context', version: '3.2.3.RELEASE'\n+  // choose a recent version so that we can test both lambdas (JDK8)\n+  // @Async requires proxying and older versions can't read classfile versions > 51\n+  // we muzzle older versions of spring anyway\n+  compileOnly group: 'org.springframework', name: 'spring-context', version: '5.0.0.RELEASE'\n+  testCompile group: 'org.springframework', name: 'spring-context', version: '5.0.0.RELEASE'\n+\n+  // for a test case with CompletableFuture\n+  testCompile project(':dd-java-agent:instrumentation:java-concurrent')\n+  testCompile project(':dd-java-agent:instrumentation:trace-annotation')\n \n   // this is the latest version that supports Java 7", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ3Mzk0Mw==", "bodyText": "I'm a little concerned about adding instrumentation for a class that seems relatively unrelated to scheduling in the module for spring-scheduling.  Is @Async used for anything besides spring scheduling?", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490473943", "createdAt": "2020-09-17T18:36:50Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringAsyncInstrumentation.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.isMethod;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+import com.google.auto.service.AutoService;\n+import datadog.trace.agent.tooling.Instrumenter;\n+import java.util.Collections;\n+import java.util.Map;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import net.bytebuddy.matcher.ElementMatchers;\n+\n+@AutoService(Instrumenter.class)\n+public class SpringAsyncInstrumentation extends Instrumenter.Default {\n+\n+  public SpringAsyncInstrumentation() {\n+    super(\"spring-async\");\n+  }\n+\n+  @Override\n+  public ElementMatcher<? super TypeDescription> typeMatcher() {\n+    return named(\"org.springframework.aop.interceptor.AsyncExecutionInterceptor\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7d7f2506f0b01fdc3ec2bb884dc80e9219820d6"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4MjczNQ==", "bodyText": "There's a fair bit of history here, but I can't find any original sources. I think these summarize the problem well:\nopentracing/opentracing-java#361 (comment)\nhttps://github.com/Nike-Inc/wingtips#warning-about-error-handling-when-using-try-with-resources-to-autoclose-spans", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490482735", "createdAt": "2020-09-17T18:52:54Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/main/java/datadog/trace/instrumentation/springscheduling/SpannedMethodInvocation.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.springscheduling.SpringSchedulingDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import java.lang.reflect.AccessibleObject;\n+import java.lang.reflect.Method;\n+import org.aopalliance.intercept.MethodInvocation;\n+\n+public class SpannedMethodInvocation implements MethodInvocation {\n+\n+  private final AgentSpan parent;\n+  private final MethodInvocation delegate;\n+\n+  public SpannedMethodInvocation(AgentSpan parent, MethodInvocation delegate) {\n+    this.parent = parent;\n+    this.delegate = delegate;\n+  }\n+\n+  @Override\n+  public Method getMethod() {\n+    return delegate.getMethod();\n+  }\n+\n+  @Override\n+  public Object[] getArguments() {\n+    return delegate.getArguments();\n+  }\n+\n+  @Override\n+  public Object proceed() throws Throwable {\n+    CharSequence spanName = DECORATE.spanNameForMethod(delegate.getMethod());\n+    final AgentSpan span =\n+        parent == null ? startSpan(spanName) : startSpan(spanName, parent.context());\n+    try (AgentScope scope = activateSpan(span)) {\n+      // question: is this necessary? What does it do?\n+      // if the delegate does async work is everything OK because of this?\n+      // if the delegate does async work, should I need to worry about it here?\n+      scope.setAsyncPropagation(true);\n+      return delegate.proceed();\n+    } finally {\n+      // question: Why can't this just be AutoCloseable? Dogma?", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4Mjg2OQ==", "bodyText": "This will hopefully be unnecessary with the planned changes to PendingTrace.", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490482869", "createdAt": "2020-09-17T18:53:10Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/main/java/datadog/trace/instrumentation/springscheduling/SpannedMethodInvocation.java", "diffHunk": "@@ -0,0 +1,59 @@\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.springscheduling.SpringSchedulingDecorator.DECORATE;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import java.lang.reflect.AccessibleObject;\n+import java.lang.reflect.Method;\n+import org.aopalliance.intercept.MethodInvocation;\n+\n+public class SpannedMethodInvocation implements MethodInvocation {\n+\n+  private final AgentSpan parent;\n+  private final MethodInvocation delegate;\n+\n+  public SpannedMethodInvocation(AgentSpan parent, MethodInvocation delegate) {\n+    this.parent = parent;\n+    this.delegate = delegate;\n+  }\n+\n+  @Override\n+  public Method getMethod() {\n+    return delegate.getMethod();\n+  }\n+\n+  @Override\n+  public Object[] getArguments() {\n+    return delegate.getArguments();\n+  }\n+\n+  @Override\n+  public Object proceed() throws Throwable {\n+    CharSequence spanName = DECORATE.spanNameForMethod(delegate.getMethod());\n+    final AgentSpan span =\n+        parent == null ? startSpan(spanName) : startSpan(spanName, parent.context());\n+    try (AgentScope scope = activateSpan(span)) {\n+      // question: is this necessary? What does it do?\n+      // if the delegate does async work is everything OK because of this?\n+      // if the delegate does async work, should I need to worry about it here?\n+      scope.setAsyncPropagation(true);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDkwODk5MTIx", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#pullrequestreview-490899121", "createdAt": "2020-09-17T19:02:12Z", "commit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTowMjoxMlrOHTxAXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xN1QxOTowMjoxMlrOHTxAXg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MDQ4NzkwMg==", "bodyText": "One other thing to mention is that currently this will result in the span likely being reported as a separate trace since you're not using continuations to force the trace to stick around.", "url": "https://github.com/DataDog/dd-trace-java/pull/1873#discussion_r490487902", "createdAt": "2020-09-17T19:02:12Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-scheduling-3.1/src/main/java/datadog/trace/instrumentation/springscheduling/SpringAsyncAdvice.java", "diffHunk": "@@ -0,0 +1,15 @@\n+package datadog.trace.instrumentation.springscheduling;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activeSpan;\n+\n+import net.bytebuddy.asm.Advice;\n+import org.aopalliance.intercept.MethodInvocation;\n+\n+public class SpringAsyncAdvice {\n+\n+  @Advice.OnMethodEnter(suppress = Throwable.class)\n+  public static void scheduleAsync(\n+      @Advice.Argument(value = 0, readOnly = false) MethodInvocation invocation) {\n+    invocation = new SpannedMethodInvocation(activeSpan(), invocation);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bc2fb5e86582413e7e192c6905d0c3524fc91a20"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd7bd80fd378041cd787b5762e5bfa2922c43890", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/cd7bd80fd378041cd787b5762e5bfa2922c43890", "committedDate": "2020-09-17T19:13:11Z", "message": "remove comment about the last version of spring scheduling to support JDK7"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cb4317df1cdf4bfac16e07020d03c4dc5270d8bf", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/cb4317df1cdf4bfac16e07020d03c4dc5270d8bf", "committedDate": "2020-09-17T19:01:40Z", "message": "remove comment about the last version of spring scheduling to support JDK7"}, "afterCommit": {"oid": "cd7bd80fd378041cd787b5762e5bfa2922c43890", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/cd7bd80fd378041cd787b5762e5bfa2922c43890", "committedDate": "2020-09-17T19:13:11Z", "message": "remove comment about the last version of spring scheduling to support JDK7"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3119, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}