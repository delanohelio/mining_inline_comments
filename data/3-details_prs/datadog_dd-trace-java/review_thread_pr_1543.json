{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI3OTQ3OTYw", "number": 1543, "reviewThreads": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxOTowNFrOECqFyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1NzoxN1rOEEslmQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjIyMjE3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxOTowNFrOGfQACw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoxOTowNFrOGfQACw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyMTE5NQ==", "bodyText": "Thanks for fixing all the typos! :)", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r435421195", "createdAt": "2020-06-04T17:19:04Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "diffHunk": "@@ -128,7 +128,7 @@ public ProfileUploader(final Config config) {\n     * PID (see PidHelper for details),\n     * Profiler version\n     Since Config returns unmodifiable map we have to do copy here.\n-    Ideally we should improve this logic and avoid copy, but performace impact is very limtied\n+    Ideally we should improve this logic and avoid copy, but performance impact is very limited", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33af4c388e14b6510116e9a5c0e306a0518d4e0a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjIzMDQyOnYy", "diffSide": "RIGHT", "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoyMToyOFrOGfQFhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoyMToyOFrOGfQFhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyMjU5Nw==", "bodyText": "You probably would want to return profilingUrl if it was configured... in fact regardless of apiKey status if user forced profilingUrl that is probably what should be used.", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r435422597", "createdAt": "2020-06-04T17:21:28Z", "author": {"login": "mar-kolya"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -848,10 +849,20 @@ public float getInstrumentationAnalyticsSampleRate(final String... aliases) {\n   }\n \n   public String getFinalProfilingUrl() {\n-    if (profilingUrl == null) {\n-      return String.format(PROFILING_URL_TEMPLATE, site);\n+    // TODO: how does precedence work?\n+    //  we have the profilingUrl configuration, the local trace agent default and the apiKey\n+    // if there's no API key we return the local trace agent\n+    // if there's an API key we check the profile URL setting\n+    // OR\n+    // we check if there's a URL\n+    if (apiKey != null) {\n+      if (profilingUrl == null) {\n+        return String.format(PROFILING_REMOTE_URL_TEMPLATE, site);\n+      } else {\n+        return profilingUrl;\n+      }\n     } else {\n-      return profilingUrl;\n+      return String.format(PROFILING_LOCAL_URL_TEMPLATE, agentHost, agentPort);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33af4c388e14b6510116e9a5c0e306a0518d4e0a"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcxMjIzMTM0OnYy", "diffSide": "RIGHT", "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wNFQxNzoyMTo0NlrOGfQGKQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxNzo0ODo0MVrOGgpaOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyMjc2MQ==", "bodyText": "I think there is logic that disables profiling completely if there is no key...", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r435422761", "createdAt": "2020-06-04T17:21:46Z", "author": {"login": "mar-kolya"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -848,10 +849,20 @@ public float getInstrumentationAnalyticsSampleRate(final String... aliases) {\n   }\n \n   public String getFinalProfilingUrl() {\n-    if (profilingUrl == null) {\n-      return String.format(PROFILING_URL_TEMPLATE, site);\n+    // TODO: how does precedence work?\n+    //  we have the profilingUrl configuration, the local trace agent default and the apiKey\n+    // if there's no API key we return the local trace agent\n+    // if there's an API key we check the profile URL setting\n+    // OR\n+    // we check if there's a URL\n+    if (apiKey != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "33af4c388e14b6510116e9a5c0e306a0518d4e0a"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjg4NjA3Mg==", "bodyText": "I searched the code for apiKey and did some random browsing but I couldn't find where we do this, I only found the api key being set in config depending on files being present and some test configuration.\nI haven't checked the test suites yet and I've not deployed to my devenv without a key yet, I assume that will show me what the existing behaviour is \ud83d\ude04", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r436886072", "createdAt": "2020-06-08T17:48:41Z", "author": {"login": "cimi"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -848,10 +849,20 @@ public float getInstrumentationAnalyticsSampleRate(final String... aliases) {\n   }\n \n   public String getFinalProfilingUrl() {\n-    if (profilingUrl == null) {\n-      return String.format(PROFILING_URL_TEMPLATE, site);\n+    // TODO: how does precedence work?\n+    //  we have the profilingUrl configuration, the local trace agent default and the apiKey\n+    // if there's no API key we return the local trace agent\n+    // if there's an API key we check the profile URL setting\n+    // OR\n+    // we check if there's a URL\n+    if (apiKey != null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNTQyMjc2MQ=="}, "originalCommit": {"oid": "33af4c388e14b6510116e9a5c0e306a0518d4e0a"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODkzMDE0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToyMDowNVrOGhwUgg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1ODoyMVrOGh7uhw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0Nzg3NA==", "bodyText": "Tests should be updated for these changes", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438047874", "createdAt": "2020-06-10T11:20:05Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "diffHunk": "@@ -301,16 +302,20 @@ private void makeUploadRequest(final RecordingType type, final RecordingData dat\n     bodyBuilder.addPart(DATA_HEADERS, body);\n     final RequestBody requestBody = bodyBuilder.build();\n \n-    final Request request =\n+    final Request.Builder requestBuilder =\n         new Request.Builder()\n             .url(url)\n-            .addHeader(HEADER_DD_API_KEY, apiKey)\n             // Note: this header is used to disable tracing of profiling requests\n             .addHeader(DATADOG_META_LANG, JAVA_LANG)\n-            .post(requestBody)\n-            .build();\n-\n-    client.newCall(request).enqueue(RESPONSE_CALLBACK);\n+            .post(requestBody);\n+    if (apiKey != null) {\n+      requestBuilder.addHeader(HEADER_DD_API_KEY, apiKey);\n+    }\n+    final String containerId = ContainerInfo.get().getContainerId();\n+    if (containerId != null) {\n+      requestBuilder.addHeader(HEADER_DD_CONTAINER_ID, containerId);\n+    }\n+    client.newCall(requestBuilder.build()).enqueue(RESPONSE_CALLBACK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 49}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzNDc1OQ==", "bodyText": "I've removed the container id changes from here and I've added a test for computing the URL when no API key is present.\nThe only change missing a test in this PR is checking that when we don't have an API key, no API key header is added to the http request - I thought it's trivial, but I'm happy to add it if you disagree.", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438234759", "createdAt": "2020-06-10T15:58:21Z", "author": {"login": "cimi"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "diffHunk": "@@ -301,16 +302,20 @@ private void makeUploadRequest(final RecordingType type, final RecordingData dat\n     bodyBuilder.addPart(DATA_HEADERS, body);\n     final RequestBody requestBody = bodyBuilder.build();\n \n-    final Request request =\n+    final Request.Builder requestBuilder =\n         new Request.Builder()\n             .url(url)\n-            .addHeader(HEADER_DD_API_KEY, apiKey)\n             // Note: this header is used to disable tracing of profiling requests\n             .addHeader(DATADOG_META_LANG, JAVA_LANG)\n-            .post(requestBody)\n-            .build();\n-\n-    client.newCall(request).enqueue(RESPONSE_CALLBACK);\n+            .post(requestBody);\n+    if (apiKey != null) {\n+      requestBuilder.addHeader(HEADER_DD_API_KEY, apiKey);\n+    }\n+    final String containerId = ContainerInfo.get().getContainerId();\n+    if (containerId != null) {\n+      requestBuilder.addHeader(HEADER_DD_CONTAINER_ID, containerId);\n+    }\n+    client.newCall(requestBuilder.build()).enqueue(RESPONSE_CALLBACK);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0Nzg3NA=="}, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 49}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyODkzMjUzOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ContainerInfo.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxMToyMDo1NFrOGhwWEg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMFQxNTo1MzoxM1rOGh7fvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODI3NA==", "bodyText": "Do we have to do copy-pasting?", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438048274", "createdAt": "2020-06-10T11:20:54Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ContainerInfo.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.datadog.profiling.uploader;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Parses container information from /proc/self/cgroup.\n+ *\n+ * <p>Copied from dd-trace-core/src/main/java/datadog/trace/core/ContainerInfo.java", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODY0MQ==", "bodyText": "Also, it seems to me that container-related stuff can go in separate PR just to simplify review", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438048641", "createdAt": "2020-06-10T11:21:38Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ContainerInfo.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.datadog.profiling.uploader;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Parses container information from /proc/self/cgroup.\n+ *\n+ * <p>Copied from dd-trace-core/src/main/java/datadog/trace/core/ContainerInfo.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODI3NA=="}, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA1MDQ3NA==", "bodyText": "Seems like easiest solution here would be to move ContainerInfo to new package in utils and use it from there in both places. @tylerbenson any objections to this?", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438050474", "createdAt": "2020-06-10T11:25:22Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ContainerInfo.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.datadog.profiling.uploader;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Parses container information from /proc/self/cgroup.\n+ *\n+ * <p>Copied from dd-trace-core/src/main/java/datadog/trace/core/ContainerInfo.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODI3NA=="}, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODIzMDk3Mg==", "bodyText": "\ud83d\udc4d I'll open another PR for the container ID changes.", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438230972", "createdAt": "2020-06-10T15:53:13Z", "author": {"login": "cimi"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ContainerInfo.java", "diffHunk": "@@ -0,0 +1,133 @@\n+package com.datadog.profiling.uploader;\n+\n+import java.io.IOException;\n+import java.nio.file.Files;\n+import java.nio.file.Path;\n+import java.nio.file.Paths;\n+import java.text.ParseException;\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.regex.Matcher;\n+import java.util.regex.Pattern;\n+import lombok.Getter;\n+import lombok.Setter;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * Parses container information from /proc/self/cgroup.\n+ *\n+ * <p>Copied from dd-trace-core/src/main/java/datadog/trace/core/ContainerInfo.java", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODA0ODI3NA=="}, "originalCommit": {"oid": "aaa8512d85c7d743c8f24c563e3949c895bddf76"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjU1NTU2OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/src/main/java/com/datadog/profiling/agent/ProfilingAgent.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo0ODowMFrOGiUPPA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQwODo0ODowMFrOGiUPPA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODYzNjM0OA==", "bodyText": "Nit: Given that this will become the default, I'm not sure this log line is very useful", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438636348", "createdAt": "2020-06-11T08:48:00Z", "author": {"login": "AlexJF"}, "path": "dd-java-agent/agent-profiling/src/main/java/com/datadog/profiling/agent/ProfilingAgent.java", "diffHunk": "@@ -40,10 +40,9 @@ public static synchronized void run(final boolean isStartingFirst)\n         return;\n       }\n       if (config.getApiKey() == null) {\n-        log.info(\"Profiling: no API key. Profiling is disabled.\");\n-        return;\n-      }\n-      if (!API_KEY_REGEX.test(config.getApiKey())) {\n+        log.info(\n+            \"Profiling: no API key configured. An API key is not required for profiling when sending data to the local datadog-agent.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1253cce0bb965a101c7322fea397cad8ebf13106"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMjgyNDQ3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowODozN1rOGiW8tQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowODozN1rOGiW8tQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY4MDc1Nw==", "bodyText": "Can we add a helpful message in case we're hitting the agent and the response is 404?\nLike dd-trace-go is doing here: https://github.com/DataDog/dd-trace-go/blob/v1/profiler/upload.go#L113\nWhich looks like this in logs:\n2020/06/11 10:06:21 Datadog Tracer v1.25.0 ERROR: Failed to upload profile: Datadog Agent is not accepting profiles. Agent-based profiling deployments require Datadog Agent >= 7.20", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438680757", "createdAt": "2020-06-11T10:08:37Z", "author": {"login": "AlexJF"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "diffHunk": "@@ -301,16 +301,17 @@ private void makeUploadRequest(final RecordingType type, final RecordingData dat\n     bodyBuilder.addPart(DATA_HEADERS, body);\n     final RequestBody requestBody = bodyBuilder.build();\n \n-    final Request request =\n+    final Request.Builder requestBuilder =\n         new Request.Builder()\n             .url(url)\n-            .addHeader(HEADER_DD_API_KEY, apiKey)\n             // Note: this header is used to disable tracing of profiling requests\n             .addHeader(DATADOG_META_LANG, JAVA_LANG)\n-            .post(requestBody)\n-            .build();\n+            .post(requestBody);\n+    if (apiKey != null) {\n+      requestBuilder.addHeader(HEADER_DD_API_KEY, apiKey);\n+    }\n \n-    client.newCall(request).enqueue(RESPONSE_CALLBACK);\n+    client.newCall(requestBuilder.build()).enqueue(RESPONSE_CALLBACK);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1253cce0bb965a101c7322fea397cad8ebf13106"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjczMzYwMjgxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1NzoxN1rOGieoog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMzo1NzoxN1rOGieoog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODgwNjY5MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                      } else {\n          \n          \n            \n                      } else if (config.getApiKey() == null && response.getStatusCode() == 404) {\n          \n      \n    \n    \n  \n\nOr whatever is the equivalent code to get to the statuscode.\nIf it is deemed to help with readability we could also add a config.isProfilingAgentless() function that basically returns the result of config.apiKey != null", "url": "https://github.com/DataDog/dd-trace-java/pull/1543#discussion_r438806690", "createdAt": "2020-06-11T13:57:17Z", "author": {"login": "AlexJF"}, "path": "dd-java-agent/agent-profiling/profiling-uploader/src/main/java/com/datadog/profiling/uploader/ProfileUploader.java", "diffHunk": "@@ -90,14 +91,16 @@\n       new Callback() {\n         @Override\n         public void onFailure(final Call call, final IOException e) {\n-          log.warn(\"Failed to upload profile\", e);\n+          HttpUrl url = call.request().url();\n+          log.warn(\"Failed to upload profile to {}\", url, e);\n         }\n \n         @Override\n         public void onResponse(final Call call, final Response response) {\n           if (response.isSuccessful()) {\n             log.debug(\"Upload done\");\n           } else {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "edcf34808e5f4a4a60bdbb4e04b0f2682224c663"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 208, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}