{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMxMjg1MDAy", "number": 2155, "title": "Add Muzzle reference creation for interfaces", "bodyText": "This will allow muzzle to fail if an implemented interface is missing.  Additional work should be done in the future to ensure the implementation satisfies the interfaces and abstract types. (open-telemetry/opentelemetry-java-instrumentation#1357)", "createdAt": "2020-12-02T20:56:39Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2155", "merged": true, "mergeCommit": {"oid": "cfd7f944facb14119db0dcfe429281c0198c7027"}, "closed": true, "closedAt": "2020-12-03T21:05:25Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 13, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiU_c2ABqjQwNjQzNTQ1NzM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiqVpXgFqTU0NDQ4MjIyNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "f489ebda39e6957719914327e38f6e3cdd03eca2", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f489ebda39e6957719914327e38f6e3cdd03eca2", "committedDate": "2020-12-02T20:51:30Z", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing."}, "afterCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bf7f42bdb40196b64fd3d83e29c90fead2c01433", "committedDate": "2020-12-02T20:57:53Z", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjM5NTc2", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543239576", "createdAt": "2020-12-02T21:10:49Z", "commit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxMDo0OVrOH9uSkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxMDo0OVrOH9uSkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4MzYwMA==", "bodyText": "Seems like an unrelated change and a net negative.", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534483600", "createdAt": "2020-12-02T21:10:49Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java", "diffHunk": "@@ -129,11 +131,6 @@ public Reference merge(final Reference anotherReference) {\n     return merged;\n   }\n \n-  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQxMTc4", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543241178", "createdAt": "2020-12-02T21:13:15Z", "commit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxMzoxNlrOH9uXlw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxMzoxNlrOH9uXlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NDg4Nw==", "bodyText": "Doesn't produce the same result as before. In fact, I can't see and therefore reason about what it does produce any more. We have an annotation from a library which messes with IDE integrations so we can avoid a one liner.", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534484887", "createdAt": "2020-12-02T21:13:16Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/Reference.java", "diffHunk": "@@ -9,10 +9,12 @@\n import java.util.LinkedHashSet;\n import java.util.List;\n import java.util.Set;\n+import lombok.ToString;\n import net.bytebuddy.jar.asm.Opcodes;\n import net.bytebuddy.jar.asm.Type;\n \n /** An immutable reference to a jvm class. */\n+@ToString", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQyNjQ3", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543242647", "createdAt": "2020-12-02T21:15:30Z", "commit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNTozMFrOH9ucHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNTozMFrOH9ucHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjA0NQ==", "bodyText": "this is inconsistent with behaviour elsewhere in the class where the value -1 is used when no line number is known.", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534486045", "createdAt": "2020-12-02T21:15:30Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java", "diffHunk": "@@ -180,9 +180,16 @@ public void visit(\n     refSourceClassName = Utils.getClassName(name);\n     refSourceType = Type.getType(\"L\" + name + \";\");\n     refSourceTypeInternalName = refSourceType.getInternalName();\n-    // Additional references we could check\n-    // - supertype of class and visible from this package\n-    // - interfaces of class and visible from this package\n+\n+    // Add references to each of the interfaces.\n+    for (String iface : interfaces) {\n+      addReference(\n+          new Reference.Builder(iface)\n+              .withSource(refSourceClassName, 0) // We don't have a specific line number to use.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQzNTA3", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543243507", "createdAt": "2020-12-02T21:16:43Z", "commit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNjo0NFrOH9uexw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNjo0NFrOH9uexw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NjcyNw==", "bodyText": "This is also an unrelated change... I uncommented it to verify it still worked and found it didn't, so I updated it here.", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534486727", "createdAt": "2020-12-02T21:16:44Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/testing/src/test/java/muzzle/TestClasses.java", "diffHunk": "@@ -95,10 +95,9 @@ public static boolean instanceofMethod(final Object a) {\n \n   // Can't test this until java 7 is dropped.\n   public static class InDyAdvice {\n-    //    public static MethodBodyAdvice.SomeInterface indyMethod(\n-    //        final MethodBodyAdvice.SomeImplementation a) {\n+    //    public static MethodBodyAdvice.HasMethod indyMethod(final MethodBodyAdvice.HasMethod a) {\n     //      Runnable aStaticMethod = MethodBodyAdvice.B::aStaticMethod;\n-    //      return a::someMethod;\n+    //      return a::requiredMethod;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjQzOTcw", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543243970", "createdAt": "2020-12-02T21:17:25Z", "commit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNzoyNVrOH9ugJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMlQyMToxNzoyNVrOH9ugJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDQ4NzA3Ng==", "bodyText": "I didn't mean to check this test in... I'll remove it.", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r534487076", "createdAt": "2020-12-02T21:17:25Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/testing/src/test/groovy/muzzle/ReferenceCreatorTest.groovy", "diffHunk": "@@ -49,6 +49,19 @@ class ReferenceCreatorTest extends AgentTestRunner {\n     aFieldRefs.size() == 2\n   }\n \n+  def \"ref test\"() {\n+    setup:\n+    Map<String, Reference> references = ReferenceCreator.createReferencesFrom(MethodBodyAdvice.A.getName(), this.getClass().getClassLoader())\n+    def a = references.get('muzzle.TestClasses$MethodBodyAdvice$A')\n+    def b = references.get('muzzle.TestClasses$MethodBodyAdvice$B')\n+\n+    expect:\n+    references.keySet() == ['muzzle.TestClasses$MethodBodyAdvice$A', 'muzzle.TestClasses$MethodBodyAdvice$B'].toSet()\n+\n+    and: \"doesn't need to reference self\"\n+    !(a.getSources().any { it.name == 'muzzle.TestClasses$MethodBodyAdvice$A' })\n+  }\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "committedDate": "2020-12-02T21:23:29Z", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bf7f42bdb40196b64fd3d83e29c90fead2c01433", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bf7f42bdb40196b64fd3d83e29c90fead2c01433", "committedDate": "2020-12-02T20:57:53Z", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing."}, "afterCommit": {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8ce765872ba5533d2bf2c2dcfb667503cdccff2a", "committedDate": "2020-12-02T21:23:29Z", "message": "Add Muzzle reference creation for interfaces\n\nThis will allow muzzle to fail if an implemented interface is missing."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMjYwMjk0", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543260294", "createdAt": "2020-12-02T21:41:38Z", "commit": {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjQ2Nzkx", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-543646791", "createdAt": "2020-12-03T06:49:01Z", "commit": {"oid": "8ce765872ba5533d2bf2c2dcfb667503cdccff2a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d9ca5faecad6dcdefef3e85d15a69816715c761", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5d9ca5faecad6dcdefef3e85d15a69816715c761", "committedDate": "2020-12-03T20:10:53Z", "message": "Add root to log"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDcwNDY4", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-544470468", "createdAt": "2020-12-03T21:39:02Z", "commit": {"oid": "5d9ca5faecad6dcdefef3e85d15a69816715c761"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTozOTowM1rOH-1iuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QyMTozOTowM1rOH-1iuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTY1MTAwMA==", "bodyText": "Why was this committed with this PR?", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#discussion_r535651000", "createdAt": "2020-12-03T21:39:03Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -240,7 +240,8 @@ private void decrementRefAndMaybeWrite(boolean isRootSpan) {\n       }\n     }\n     if (log.isDebugEnabled()) {\n-      log.debug(\"t_id={} -> expired reference. pending count={}\", traceId, count);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d9ca5faecad6dcdefef3e85d15a69816715c761"}, "originalPosition": 4}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0NDgyMjI2", "url": "https://github.com/DataDog/dd-trace-java/pull/2155#pullrequestreview-544482226", "createdAt": "2020-12-03T21:50:19Z", "commit": {"oid": "5d9ca5faecad6dcdefef3e85d15a69816715c761"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2921, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}