{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzA0Mjk5", "number": 1656, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0MjoyOVrOELt3nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0MjoyOVrOELt3nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjgwNzIxMzExOnYy", "diffSide": "RIGHT", "path": "dd-trace-api/src/main/java/datadog/trace/api/DDId.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0MjoyOVrOGtaUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0ODoxNVrOGtakDQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3MDMwMA==", "bodyText": "I'm just wondering if considering this is a special case, we should add this catch block to the place that extracts the  headers into a context, perhaps by creating a second TextMapExtractAdapter to handle the failure case", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#discussion_r450270300", "createdAt": "2020-07-06T14:42:29Z", "author": {"login": "devinsba"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/DDId.java", "diffHunk": "@@ -54,7 +60,26 @@ public static DDId from(long id) {\n    * @throws NumberFormatException\n    */\n   public static DDId from(String s) throws NumberFormatException {\n-    return DDId.create(parseUnsignedLong(s), s);\n+    try {\n+      return DDId.create(parseUnsignedLong(s), s);\n+    } catch (NumberFormatException e) {\n+      // we have reports of Kakfa mirror maker base64 encoding record headers\n+      // attempting to base64 decode the ids here rather than in the Kafka instrumentation\n+      // helps users understand they have a problem without making other users pay for it\n+      if (null != s) {\n+        try {\n+          String decoded = new String(BASE64.decode(s), StandardCharsets.ISO_8859_1);\n+          log.debug(\n+              \"id {} was base 64 encoded to {}, it was decoded but this indicates there is a problem elsewhere in your system\",\n+              decoded,\n+              s);\n+          return DDId.create(parseUnsignedLong(decoded), decoded);\n+        } catch (Exception ignored) {\n+\n+        }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3NDMxNw==", "bodyText": "I addressed that in the description of the PR.", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#discussion_r450274317", "createdAt": "2020-07-06T14:48:15Z", "author": {"login": "richardstartin"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/DDId.java", "diffHunk": "@@ -54,7 +60,26 @@ public static DDId from(long id) {\n    * @throws NumberFormatException\n    */\n   public static DDId from(String s) throws NumberFormatException {\n-    return DDId.create(parseUnsignedLong(s), s);\n+    try {\n+      return DDId.create(parseUnsignedLong(s), s);\n+    } catch (NumberFormatException e) {\n+      // we have reports of Kakfa mirror maker base64 encoding record headers\n+      // attempting to base64 decode the ids here rather than in the Kafka instrumentation\n+      // helps users understand they have a problem without making other users pay for it\n+      if (null != s) {\n+        try {\n+          String decoded = new String(BASE64.decode(s), StandardCharsets.ISO_8859_1);\n+          log.debug(\n+              \"id {} was base 64 encoded to {}, it was decoded but this indicates there is a problem elsewhere in your system\",\n+              decoded,\n+              s);\n+          return DDId.create(parseUnsignedLong(decoded), decoded);\n+        } catch (Exception ignored) {\n+\n+        }\n+      }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3MDMwMA=="}, "originalCommit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 117, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}