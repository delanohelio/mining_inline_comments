{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc5ODQzMzMz", "number": 1256, "title": "WeakCache instead of WeakMap", "bodyText": "The intention of this change is to replace (not change) our concurrent WeakMap abstraction.\nOur concurrent WeakMap abstraction has a few problems\u2026 :\n\nunbounded size\nprimary eviction policy isn\u2019t size\nalways uses synchronized even around ConcurrentMaps like Guava\nencourages computation under a lock\nneeds better setting for concurrency level\n\nNew abstraction should be a \u201cWeakCache\u201d not for a \u201cWeakMap\u201d.  Maps may need to be unbounded, but caches should be bounded.\nAbstraction should be quite minimal.\nIt doesn\u2019t need to be as complex as our current WeakMap.Provider scheme.\nJust a simple factory function that returns a Guava Cache object with reasonable defaults.", "createdAt": "2020-02-25T22:35:00Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1256", "merged": true, "mergeCommit": {"oid": "a5a5743f7c2cdee37b2c9be1951e03405308bbf3"}, "closed": true, "closedAt": "2020-03-20T07:23:08Z", "author": {"login": "lpriima"}, "timelineItems": {"totalCount": 66, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcH8uzvgFqTM2NDU3NDg3OA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcPTO5kgBqjMxNDc0Mjc0MDc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY0NTc0ODc4", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-364574878", "createdAt": "2020-02-26T01:48:59Z", "commit": {"oid": "81c53e54cd7ce1c96d2393108469855af9412e03"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTo0ODo1OVrOFubxvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yNlQwMTo0ODo1OVrOFubxvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NDIzMzkxNw==", "bodyText": "This will need to be removed...  Can't put guava on the bootstrap.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r384233917", "createdAt": "2020-02-26T01:48:59Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/agent-bootstrap.gradle", "diffHunk": "@@ -13,6 +13,7 @@ dependencies {\n   compile project(':dd-trace-api')\n   compile deps.opentracing\n   compile deps.slf4j\n+  compile group: 'com.google.guava', name: 'guava', version: versions.guava", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81c53e54cd7ce1c96d2393108469855af9412e03"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81c53e54cd7ce1c96d2393108469855af9412e03", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81c53e54cd7ce1c96d2393108469855af9412e03", "committedDate": "2020-02-25T08:46:48Z", "message": "WeakCache intstead of WeakMap step 1 out of 2"}, "afterCommit": {"oid": "00ddcd1b1475bd63fcca63d73579a56d2bebe650", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/00ddcd1b1475bd63fcca63d73579a56d2bebe650", "committedDate": "2020-02-28T01:56:15Z", "message": "WeakCache intstead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "00ddcd1b1475bd63fcca63d73579a56d2bebe650", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/00ddcd1b1475bd63fcca63d73579a56d2bebe650", "committedDate": "2020-02-28T01:56:15Z", "message": "WeakCache intstead of WeakMap"}, "afterCommit": {"oid": "eeada1a1f8869bba647c97ef0cfc3be5fd06ae5d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/eeada1a1f8869bba647c97ef0cfc3be5fd06ae5d", "committedDate": "2020-02-28T02:08:46Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "eeada1a1f8869bba647c97ef0cfc3be5fd06ae5d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/eeada1a1f8869bba647c97ef0cfc3be5fd06ae5d", "committedDate": "2020-02-28T02:08:46Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "294748d5499029f5a3a67e405221807de160cdca", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/294748d5499029f5a3a67e405221807de160cdca", "committedDate": "2020-02-29T08:43:13Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "294748d5499029f5a3a67e405221807de160cdca", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/294748d5499029f5a3a67e405221807de160cdca", "committedDate": "2020-02-29T08:43:13Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "1f9f0e0b1caaa9f55cf9bd206408c1e9f101a0cd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1f9f0e0b1caaa9f55cf9bd206408c1e9f101a0cd", "committedDate": "2020-03-02T05:04:49Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1f9f0e0b1caaa9f55cf9bd206408c1e9f101a0cd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1f9f0e0b1caaa9f55cf9bd206408c1e9f101a0cd", "committedDate": "2020-03-02T05:04:49Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "a336d6b6d573e2d84123f07dabc50b9a7e568959", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a336d6b6d573e2d84123f07dabc50b9a7e568959", "committedDate": "2020-03-02T05:28:26Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a336d6b6d573e2d84123f07dabc50b9a7e568959", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a336d6b6d573e2d84123f07dabc50b9a7e568959", "committedDate": "2020-03-02T05:28:26Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "6a0e333638e69bd3aa22e2323507ef7578ee9da7", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6a0e333638e69bd3aa22e2323507ef7578ee9da7", "committedDate": "2020-03-02T05:34:35Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6a0e333638e69bd3aa22e2323507ef7578ee9da7", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6a0e333638e69bd3aa22e2323507ef7578ee9da7", "committedDate": "2020-03-02T05:34:35Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "fbb3800c5f485457978eb60e844e8b239533e8c7", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fbb3800c5f485457978eb60e844e8b239533e8c7", "committedDate": "2020-03-02T05:35:10Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fbb3800c5f485457978eb60e844e8b239533e8c7", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fbb3800c5f485457978eb60e844e8b239533e8c7", "committedDate": "2020-03-02T05:35:10Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "53d423fb73704baa1ec7cb9e37220c7a8e8d2742", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/53d423fb73704baa1ec7cb9e37220c7a8e8d2742", "committedDate": "2020-03-02T16:07:07Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "53d423fb73704baa1ec7cb9e37220c7a8e8d2742", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/53d423fb73704baa1ec7cb9e37220c7a8e8d2742", "committedDate": "2020-03-02T16:07:07Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "ce801661692af034b15cedc8474c8fb44d3e00ad", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ce801661692af034b15cedc8474c8fb44d3e00ad", "committedDate": "2020-03-04T08:21:26Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ce801661692af034b15cedc8474c8fb44d3e00ad", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ce801661692af034b15cedc8474c8fb44d3e00ad", "committedDate": "2020-03-04T08:21:26Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "51a9e65101824248211a999c50cd8afcb937d010", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/51a9e65101824248211a999c50cd8afcb937d010", "committedDate": "2020-03-04T08:47:57Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "51a9e65101824248211a999c50cd8afcb937d010", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/51a9e65101824248211a999c50cd8afcb937d010", "committedDate": "2020-03-04T08:47:57Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479", "committedDate": "2020-03-04T16:06:36Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5Nzg4MzIw", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-369788320", "createdAt": "2020-03-05T17:56:02Z", "commit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1NjowMlrOFyd3ew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1NjowMlrOFyd3ew==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2MjQ1OQ==", "bodyText": "I'm not sure this one can be a cache, since we cannot necessarily recompute whether we've already injected.\nIf we can safely detection prior failed injection, then we could use a cache.\nHowever, I think a WeakMap is probably the better choice here.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r388462459", "createdAt": "2020-03-05T17:56:02Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/HelperInjector.java", "diffHunk": "@@ -36,7 +34,7 @@\n   private final Set<String> helperClassNames;\n   private final Map<String, byte[]> dynamicTypeMap = new LinkedHashMap<>();\n \n-  private final WeakMap<ClassLoader, Boolean> injectedClassLoaders = newWeakMap();\n+  private final WeakCache<ClassLoader, Boolean> injectedClassLoaders = WeakCache.newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzkwNjM5", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-369790639", "createdAt": "2020-03-05T17:58:30Z", "commit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1ODozMFrOFyd-4Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1ODozMFrOFyd-4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NDM1Mw==", "bodyText": "Since the Callable allocation is only down the slow-path, I think this is fine.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r388464353", "createdAt": "2020-03-05T17:58:30Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceMatcher.java", "diffHunk": "@@ -50,12 +50,18 @@ public boolean matches(ClassLoader loader) {\n     if (loader == BOOTSTRAP_LOADER) {\n       loader = Utils.getBootstrapProxy();\n     }\n-\n-    return mismatchCache.computeIfAbsent(loader, this);\n+    final ClassLoader cl = loader;\n+    return mismatchCache.getIfPresentOrCompute(\n+        loader,\n+        new Callable<Boolean>() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5NzkxMjU3", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-369791257", "createdAt": "2020-03-05T17:59:22Z", "commit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1OToyMlrOFyeA0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxNzo1OToyMlrOFyeA0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ2NDg1MA==", "bodyText": "new / new looks odd.  Can this just be WeakCache.newWeakCache.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r388464850", "createdAt": "2020-03-05T17:59:22Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/test/groovy/datadog/trace/agent/tooling/WeakCacheTest.groovy", "diffHunk": "@@ -0,0 +1,54 @@\n+package datadog.trace.agent.tooling\n+\n+import spock.lang.Specification\n+\n+import java.util.concurrent.Callable\n+\n+class WeakCacheTest  extends Specification  {\n+  def supplier = new CounterSupplier()\n+\n+  def sut = new WeakCache().newWeakCache()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzY5ODA0ODQz", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-369804843", "createdAt": "2020-03-05T18:19:56Z", "commit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoxOTo1NlrOFyep-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNVQxODoxOTo1NlrOFyep-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4ODQ3NTM4NA==", "bodyText": "Personally, I'm not found of initialisms for variables or single letter variables -- other e, t for Exception and Throwable.  I'm assuming this stands for subject under test, but I'd prefer something like \"cache\".", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r388475384", "createdAt": "2020-03-05T18:19:56Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/test/groovy/datadog/trace/agent/tooling/WeakCacheTest.groovy", "diffHunk": "@@ -0,0 +1,54 @@\n+package datadog.trace.agent.tooling\n+\n+import spock.lang.Specification\n+\n+import java.util.concurrent.Callable\n+\n+class WeakCacheTest  extends Specification  {\n+  def supplier = new CounterSupplier()\n+\n+  def sut = new WeakCache().newWeakCache()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479"}, "originalPosition": 10}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/86c1b10f7d7d813a4fed9b17b85e56f4fdd1b479", "committedDate": "2020-03-04T16:06:36Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "75ea96f1c27ca92b5bab2ddda14426e5d41d5c5f", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/75ea96f1c27ca92b5bab2ddda14426e5d41d5c5f", "committedDate": "2020-03-06T07:56:15Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "75ea96f1c27ca92b5bab2ddda14426e5d41d5c5f", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/75ea96f1c27ca92b5bab2ddda14426e5d41d5c5f", "committedDate": "2020-03-06T07:56:15Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "b1ff3e7d9cbaaf6094881b74dcdeeb3086a21e4d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b1ff3e7d9cbaaf6094881b74dcdeeb3086a21e4d", "committedDate": "2020-03-06T08:14:56Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1ff3e7d9cbaaf6094881b74dcdeeb3086a21e4d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b1ff3e7d9cbaaf6094881b74dcdeeb3086a21e4d", "committedDate": "2020-03-06T08:14:56Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "02900fe435fa2da2166b871049c42e49ed859ab4", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02900fe435fa2da2166b871049c42e49ed859ab4", "committedDate": "2020-03-06T08:33:44Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02900fe435fa2da2166b871049c42e49ed859ab4", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02900fe435fa2da2166b871049c42e49ed859ab4", "committedDate": "2020-03-06T08:33:44Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "c2403cda7a75f579001325e8c9a6dab40bb4def1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c2403cda7a75f579001325e8c9a6dab40bb4def1", "committedDate": "2020-03-07T01:51:06Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c2403cda7a75f579001325e8c9a6dab40bb4def1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c2403cda7a75f579001325e8c9a6dab40bb4def1", "committedDate": "2020-03-07T01:51:06Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "a80f6d0932afa060631d6faae44e52926019ad54", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a80f6d0932afa060631d6faae44e52926019ad54", "committedDate": "2020-03-07T01:52:41Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a80f6d0932afa060631d6faae44e52926019ad54", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a80f6d0932afa060631d6faae44e52926019ad54", "committedDate": "2020-03-07T01:52:41Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "c492b30619cf65ffe8ec3f1bde59cd36d96cea41", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c492b30619cf65ffe8ec3f1bde59cd36d96cea41", "committedDate": "2020-03-07T06:53:21Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c492b30619cf65ffe8ec3f1bde59cd36d96cea41", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c492b30619cf65ffe8ec3f1bde59cd36d96cea41", "committedDate": "2020-03-07T06:53:21Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7f5acc2bc9d02d3421dea262117a89bb9f1b549", "committedDate": "2020-03-07T07:17:38Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxMzM1Mzk3", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371335397", "createdAt": "2020-03-09T16:27:51Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjoyNzo1MlrOFzv65w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNjo0Mzo1OFrOFzwjFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwNjgyMw==", "bodyText": "Why remove this interface and switch to passing the Callable in?  Seems like an unnecessary tradeoff.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389806823", "createdAt": "2020-03-09T16:27:52Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceMatcher.java", "diffHunk": "@@ -22,8 +22,8 @@\n \n /** Matches a set of references against a classloader. */\n @Slf4j\n-public final class ReferenceMatcher implements WeakMap.ValueSupplier<ClassLoader, Boolean> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgwOTMyNA==", "bodyText": "did you figure this out?", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389809324", "createdAt": "2020-03-09T16:31:33Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-2/src/main/java/datadog/trace/instrumentation/jaxrs2/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -82,11 +80,11 @@ private void updateParent(AgentSpan span, final String resourceName) {\n    * @return The result can be an empty string but will never be {@code null}.\n    */\n   private String getPathResourceName(final Class target, final Method method) {\n-    Map<Method, String> classMap = resourceNames.get(target);\n-\n+    Map<Method, String> classMap = resourceNames.getIfPresent(target);\n+    // tests are failing if put is inside critical section here", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTgxNzExMQ==", "bodyText": "This class is referenced directly by instrumentation so it needs to be in the bootstrap project.  Guava should not be though, this is why we have WeakMap.Provider.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389817111", "createdAt": "2020-03-09T16:43:58Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/WeakCache.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package datadog.trace.agent.tooling;\n+\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * no null keys nor null values are permitted\n+ *\n+ * @param <K>\n+ * @param <V>\n+ */\n+@Slf4j\n+public final class WeakCache<K, V> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDA0OTY3", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371404967", "createdAt": "2020-03-09T17:56:36Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1NjozNlrOFzzVtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1NjozNlrOFzzVtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MjgzNw==", "bodyText": "I'm wondering a general 10 min expiration works; I think it does.\nOur main cache control should be size -- and we're forcing all callers to specify, so I think this is fine.\nMaybe we should also provide an option to specify initialSize, but I think this is reasonable starting point.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389862837", "createdAt": "2020-03-09T17:56:36Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/WeakCache.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package datadog.trace.agent.tooling;\n+\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * no null keys nor null values are permitted\n+ *\n+ * @param <K>\n+ * @param <V>\n+ */\n+@Slf4j\n+public final class WeakCache<K, V> {\n+  public static final int CACHE_CONCURRENCY =\n+      Math.max(8, Runtime.getRuntime().availableProcessors());\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache() {\n+    return new WeakCache(\n+        CacheBuilder.newBuilder()\n+            .weakKeys()\n+            .concurrencyLevel(CACHE_CONCURRENCY)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)\n+            .build());\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache(final long maxSize) {\n+    return new WeakCache(\n+        CacheBuilder.newBuilder()\n+            .weakKeys()\n+            .maximumSize(maxSize)\n+            .concurrencyLevel(CACHE_CONCURRENCY)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 36}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDA1NzUx", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371405751", "createdAt": "2020-03-09T17:57:28Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1NzoyOFrOFzzYIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1NzoyOFrOFzzYIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2MzQ1Ng==", "bodyText": "I assuming we still need to run this through googleJavaFormat, since I think it would make most of these parameters final.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389863456", "createdAt": "2020-03-09T17:57:28Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/WeakCache.java", "diffHunk": "@@ -0,0 +1,71 @@\n+package datadog.trace.agent.tooling;\n+\n+import com.google.common.cache.Cache;\n+import com.google.common.cache.CacheBuilder;\n+import java.util.concurrent.Callable;\n+import java.util.concurrent.ExecutionException;\n+import java.util.concurrent.TimeUnit;\n+import lombok.extern.slf4j.Slf4j;\n+\n+/**\n+ * no null keys nor null values are permitted\n+ *\n+ * @param <K>\n+ * @param <V>\n+ */\n+@Slf4j\n+public final class WeakCache<K, V> {\n+  public static final int CACHE_CONCURRENCY =\n+      Math.max(8, Runtime.getRuntime().availableProcessors());\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache() {\n+    return new WeakCache(\n+        CacheBuilder.newBuilder()\n+            .weakKeys()\n+            .concurrencyLevel(CACHE_CONCURRENCY)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)\n+            .build());\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache(final long maxSize) {\n+    return new WeakCache(\n+        CacheBuilder.newBuilder()\n+            .weakKeys()\n+            .maximumSize(maxSize)\n+            .concurrencyLevel(CACHE_CONCURRENCY)\n+            .expireAfterAccess(10, TimeUnit.MINUTES)\n+            .build());\n+  }\n+\n+  private final Cache<K, V> cache;\n+\n+  private WeakCache(Cache<K, V> cache) {\n+    this.cache = cache;\n+  }\n+\n+  /** @return null if key is not present */\n+  public V getIfPresent(Object key) {\n+    return cache.getIfPresent(key);\n+  }\n+\n+  public V getIfPresentOrCompute(K key, Callable<? extends V> loader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 51}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDA2ODE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371406815", "createdAt": "2020-03-09T17:58:51Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1ODo1MVrOFzzbSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1ODo1MVrOFzzbSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDI2Nw==", "bodyText": "I assume in this case that we can recompute, so this should be fine.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389864267", "createdAt": "2020-03-09T17:58:51Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-1/src/main/java/datadog/trace/instrumentation/jaxrs1/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -19,7 +17,7 @@\n public class JaxRsAnnotationsDecorator extends BaseDecorator {\n   public static JaxRsAnnotationsDecorator DECORATE = new JaxRsAnnotationsDecorator();\n \n-  private final WeakMap<Class, Map<Method, String>> resourceNames = newWeakMap();\n+  private final WeakCache<Class, Map<Method, String>> resourceNames = WeakCache.newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDA3NDY1", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371407465", "createdAt": "2020-03-09T17:59:41Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1OTo0MVrOFzzdHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxNzo1OTo0MVrOFzzdHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NDczMg==", "bodyText": "I'm not sure we should have a newWeakCache that doesn't require specifying size.\nBasically, I'm not sure there's a one size fits all or most for this, but maybe, there is.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389864732", "createdAt": "2020-03-09T17:59:41Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-1/src/main/java/datadog/trace/instrumentation/jaxrs1/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -19,7 +17,7 @@\n public class JaxRsAnnotationsDecorator extends BaseDecorator {\n   public static JaxRsAnnotationsDecorator DECORATE = new JaxRsAnnotationsDecorator();\n \n-  private final WeakMap<Class, Map<Method, String>> resourceNames = newWeakMap();\n+  private final WeakCache<Class, Map<Method, String>> resourceNames = WeakCache.newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDA4MjA1", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371408205", "createdAt": "2020-03-09T18:00:42Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMDo0MlrOFzzfiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowMDo0MlrOFzzfiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2NTM1Mg==", "bodyText": "Is this effectively another cache?\nI guess don't yet a notion of a non-weak cache, but maybe, we should.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389865352", "createdAt": "2020-03-09T18:00:42Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-1/src/main/java/datadog/trace/instrumentation/jaxrs1/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -71,11 +69,10 @@ private void updateParent(AgentSpan span, final String resourceName) {\n    * @return The result can be an empty string but will never be {@code null}.\n    */\n   private String getPathResourceName(final Class target, final Method method) {\n-    Map<Method, String> classMap = resourceNames.get(target);\n-\n+    Map<Method, String> classMap = resourceNames.getIfPresent(target);\n     if (classMap == null) {\n-      resourceNames.putIfAbsent(target, new ConcurrentHashMap<Method, String>());\n-      classMap = resourceNames.get(target);\n+      resourceNames.put(target, new ConcurrentHashMap<Method, String>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzcxNDExNDA2", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-371411406", "createdAt": "2020-03-09T18:05:26Z", "commit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowNToyOFrOFzzppA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wOVQxODowNToyOFrOFzzppA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4OTg2Nzk0MA==", "bodyText": "I know this is pre-existing and a bit subjective.\nHowever, I would prefer to see ConcurrentMap rather than Map here to make the thread coordination a bit more clear.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r389867940", "createdAt": "2020-03-09T18:05:28Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/netty-4.1/src/main/java/datadog/trace/instrumentation/netty41/AttributeKeys.java", "diffHunk": "@@ -1,27 +1,26 @@\n package datadog.trace.instrumentation.netty41;\n \n-import datadog.trace.bootstrap.WeakMap;\n+import datadog.trace.agent.tooling.WeakCache;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.context.TraceScope;\n import datadog.trace.instrumentation.netty41.client.HttpClientTracingHandler;\n import datadog.trace.instrumentation.netty41.server.HttpServerTracingHandler;\n import io.netty.util.AttributeKey;\n import java.util.Map;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n \n public class AttributeKeys {\n \n-  private static final WeakMap<ClassLoader, Map<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-\n-  private static final WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>() {\n-            @Override\n-            public Map<String, AttributeKey<?>> get(final ClassLoader ignored) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n+  private static final WeakCache<ClassLoader, Map<String, AttributeKey<?>>> map =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549"}, "originalPosition": 27}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c7f5acc2bc9d02d3421dea262117a89bb9f1b549", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7f5acc2bc9d02d3421dea262117a89bb9f1b549", "committedDate": "2020-03-07T07:17:38Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "200eab0c3db26e92668d32a6caf5bcee9bbe4ca3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/200eab0c3db26e92668d32a6caf5bcee9bbe4ca3", "committedDate": "2020-03-10T09:52:25Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "200eab0c3db26e92668d32a6caf5bcee9bbe4ca3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/200eab0c3db26e92668d32a6caf5bcee9bbe4ca3", "committedDate": "2020-03-10T09:52:25Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "02706bb65c513117ab52cbc7a12fb90174745f7d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02706bb65c513117ab52cbc7a12fb90174745f7d", "committedDate": "2020-03-10T10:05:49Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "02706bb65c513117ab52cbc7a12fb90174745f7d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/02706bb65c513117ab52cbc7a12fb90174745f7d", "committedDate": "2020-03-10T10:05:49Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "a86e839eef7c6e871310b6f12563c5ee8ab6998b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a86e839eef7c6e871310b6f12563c5ee8ab6998b", "committedDate": "2020-03-11T08:29:47Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a86e839eef7c6e871310b6f12563c5ee8ab6998b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a86e839eef7c6e871310b6f12563c5ee8ab6998b", "committedDate": "2020-03-11T08:29:47Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "9768bf7dc971383a78a25a402d7e6b90c25aaa5f", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9768bf7dc971383a78a25a402d7e6b90c25aaa5f", "committedDate": "2020-03-11T10:30:06Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9768bf7dc971383a78a25a402d7e6b90c25aaa5f", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9768bf7dc971383a78a25a402d7e6b90c25aaa5f", "committedDate": "2020-03-11T10:30:06Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "5ab050e980f71d50550a974a2210aa3c45a08b40", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5ab050e980f71d50550a974a2210aa3c45a08b40", "committedDate": "2020-03-11T10:30:53Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5ab050e980f71d50550a974a2210aa3c45a08b40", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5ab050e980f71d50550a974a2210aa3c45a08b40", "committedDate": "2020-03-11T10:30:53Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2", "committedDate": "2020-03-11T11:08:45Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzczMTY0ODEx", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-373164811", "createdAt": "2020-03-11T22:16:17Z", "commit": {"oid": "b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoxNjoxOFrOF1LGcg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xMVQyMjoxNjoxOFrOF1LGcg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MTMwMDcyMg==", "bodyText": "PreparedStatements can be reused forever.  These entries can't expire.  I believe this needs to be a WeakMap.  Connections can also be reused but I think that codepath rebuilds DBInfo if its not in the map.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r391300722", "createdAt": "2020-03-11T22:16:18Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCMaps.java", "diffHunk": "@@ -13,6 +11,7 @@\n  * <p>Should be injected into the bootstrap classpath.\n  */\n public class JDBCMaps {\n-  public static final WeakMap<Connection, DBInfo> connectionInfo = newWeakMap();\n-  public static final WeakMap<PreparedStatement, String> preparedStatements = newWeakMap();\n+  public static final WeakCache<Connection, DBInfo> connectionInfo = WeakCache.newWeakCache();\n+  public static final WeakCache<PreparedStatement, String> preparedStatements =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2"}, "originalPosition": 17}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b1b988ff476bbe3ab4cf8e54cfe042c710a5b4b2", "committedDate": "2020-03-11T11:08:45Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "9383c4b1717a1dd6e44dd4acc794f216208c6978", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9383c4b1717a1dd6e44dd4acc794f216208c6978", "committedDate": "2020-03-11T23:22:06Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9383c4b1717a1dd6e44dd4acc794f216208c6978", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9383c4b1717a1dd6e44dd4acc794f216208c6978", "committedDate": "2020-03-11T23:22:06Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "af7d2a44c806369518abaf8d76d32f1b7484a196", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/af7d2a44c806369518abaf8d76d32f1b7484a196", "committedDate": "2020-03-12T08:29:26Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "af7d2a44c806369518abaf8d76d32f1b7484a196", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/af7d2a44c806369518abaf8d76d32f1b7484a196", "committedDate": "2020-03-12T08:29:26Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "a5be8fa7c6ebf957b218c9cf2ced583d02d8bef0", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a5be8fa7c6ebf957b218c9cf2ced583d02d8bef0", "committedDate": "2020-03-12T20:45:09Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a5be8fa7c6ebf957b218c9cf2ced583d02d8bef0", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a5be8fa7c6ebf957b218c9cf2ced583d02d8bef0", "committedDate": "2020-03-12T20:45:09Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "821af18bc90b50d0d7a175535ddfa7cf043b6854", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/821af18bc90b50d0d7a175535ddfa7cf043b6854", "committedDate": "2020-03-12T21:37:49Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "821af18bc90b50d0d7a175535ddfa7cf043b6854", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/821af18bc90b50d0d7a175535ddfa7cf043b6854", "committedDate": "2020-03-12T21:37:49Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "fa0de92b0819745ec82c19940689f51f1f6ad6b1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fa0de92b0819745ec82c19940689f51f1f6ad6b1", "committedDate": "2020-03-17T02:46:32Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "fa0de92b0819745ec82c19940689f51f1f6ad6b1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fa0de92b0819745ec82c19940689f51f1f6ad6b1", "committedDate": "2020-03-17T02:46:32Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "940ad33b4c427397469e6322b6276746e05cc37e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/940ad33b4c427397469e6322b6276746e05cc37e", "committedDate": "2020-03-17T03:05:02Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "940ad33b4c427397469e6322b6276746e05cc37e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/940ad33b4c427397469e6322b6276746e05cc37e", "committedDate": "2020-03-17T03:05:02Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "6c84c0a85f3c1b16795cbcc0d07352fe815b1bd3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6c84c0a85f3c1b16795cbcc0d07352fe815b1bd3", "committedDate": "2020-03-17T04:26:22Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6c84c0a85f3c1b16795cbcc0d07352fe815b1bd3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6c84c0a85f3c1b16795cbcc0d07352fe815b1bd3", "committedDate": "2020-03-17T04:26:22Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "68c11786e6bcfa4a6cbb4ba7c89d15c84e80b928", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/68c11786e6bcfa4a6cbb4ba7c89d15c84e80b928", "committedDate": "2020-03-17T05:15:55Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "68c11786e6bcfa4a6cbb4ba7c89d15c84e80b928", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/68c11786e6bcfa4a6cbb4ba7c89d15c84e80b928", "committedDate": "2020-03-17T05:15:55Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "aac32a43a67c36976b3911e98b5df70340c88142", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aac32a43a67c36976b3911e98b5df70340c88142", "committedDate": "2020-03-17T05:42:35Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MTA3Njcy", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376107672", "createdAt": "2020-03-17T14:50:04Z", "commit": {"oid": "aac32a43a67c36976b3911e98b5df70340c88142"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MDowNVrOF3fv2Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxNDo1MDowNVrOF3fv2Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzczNjE1Mw==", "bodyText": "Why Object key rather than K key?", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393736153", "createdAt": "2020-03-17T14:50:05Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/WeakCache.java", "diffHunk": "@@ -0,0 +1,51 @@\n+package datadog.trace.bootstrap;\n+\n+import java.util.concurrent.Callable;\n+import lombok.extern.slf4j.Slf4j;\n+\n+public interface WeakCache<K, V> {\n+  interface Provider<K, V> {\n+    WeakCache<K, V> newWeakCache();\n+\n+    WeakCache<K, V> newWeakCache(final long maxSize);\n+  }\n+\n+  V getIfPresent(final Object key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "aac32a43a67c36976b3911e98b5df70340c88142"}, "originalPosition": 13}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "aac32a43a67c36976b3911e98b5df70340c88142", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/aac32a43a67c36976b3911e98b5df70340c88142", "committedDate": "2020-03-17T05:42:35Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "420b3d09d6a6e6824c3e0da26cd8747d59ac454c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/420b3d09d6a6e6824c3e0da26cd8747d59ac454c", "committedDate": "2020-03-17T16:06:01Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "420b3d09d6a6e6824c3e0da26cd8747d59ac454c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/420b3d09d6a6e6824c3e0da26cd8747d59ac454c", "committedDate": "2020-03-17T16:06:01Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1acde595dade750a7bb6f8101211c877441586cd", "committedDate": "2020-03-17T18:51:06Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzUwMDE0", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376350014", "createdAt": "2020-03-17T19:42:36Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0MjozNlrOF3rU9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0MjozNlrOF3rU9Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNTg3Nw==", "bodyText": "We should probably treat having more that one supplier as an IllegalState.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393925877", "createdAt": "2020-03-17T19:42:36Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTooling.java", "diffHunk": "@@ -16,6 +20,26 @@\n     registerWeakMapProvider();\n   }\n \n+  private static <K, V> Iterator<Provider> loadServiceProviders() {\n+    return ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache() {\n+    Iterator<Provider> providers = loadServiceProviders();\n+    if (providers.hasNext()) {\n+      return providers.next().newWeakCache();\n+    }\n+    return new WeakCache.NoOpCache<>();\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache(final long maxSize) {\n+    Iterator<Provider> providers = loadServiceProviders();\n+    if (providers.hasNext()) {\n+      return providers.next().newWeakCache(maxSize);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzUwNTcy", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376350572", "createdAt": "2020-03-17T19:43:29Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0MzozMFrOF3rWtg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0MzozMFrOF3rWtg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNjMyNg==", "bodyText": "Do we need the NoOp?  Or, would it better to just raise an IllegalStateException immediately?\nI'm usually in favor of failing fast when possible.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393926326", "createdAt": "2020-03-17T19:43:30Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTooling.java", "diffHunk": "@@ -16,6 +20,26 @@\n     registerWeakMapProvider();\n   }\n \n+  private static <K, V> Iterator<Provider> loadServiceProviders() {\n+    return ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache() {\n+    Iterator<Provider> providers = loadServiceProviders();\n+    if (providers.hasNext()) {\n+      return providers.next().newWeakCache();\n+    }\n+    return new WeakCache.NoOpCache<>();\n+  }\n+\n+  public static <K, V> WeakCache<K, V> newWeakCache(final long maxSize) {\n+    Iterator<Provider> providers = loadServiceProviders();\n+    if (providers.hasNext()) {\n+      return providers.next().newWeakCache(maxSize);\n+    }\n+    return new WeakCache.NoOpCache<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzUxMjY4", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376351268", "createdAt": "2020-03-17T19:44:33Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0NDozNFrOF3rY0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0NDozNFrOF3rY0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyNjg2Nw==", "bodyText": "I like the moving of the factory onto AgentTooling.  I think that's a good call given the inherent coupling.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393926867", "createdAt": "2020-03-17T19:44:34Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/ClassLoaderMatcher.java", "diffHunk": "@@ -39,10 +35,9 @@ private ClassLoaderMatcher() {\n       extends ElementMatcher.Junction.AbstractBase<ClassLoader> {\n     public static final SkipClassLoaderMatcher INSTANCE = new SkipClassLoaderMatcher();\n     /* Cache of classloader-instance -> (true|false). True = skip instrumentation. False = safe to instrument. */\n-    private static final Cache<ClassLoader, Boolean> skipCache =\n-        CacheBuilder.newBuilder().weakKeys().concurrencyLevel(CACHE_CONCURRENCY).build();\n     private static final String DATADOG_CLASSLOADER_NAME =\n         \"datadog.trace.bootstrap.DatadogClassLoader\";\n+    private static final WeakCache<ClassLoader, Boolean> skipCache = AgentTooling.newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU0Mzk3", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376354397", "createdAt": "2020-03-17T19:49:22Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0OToyM1rOF3ri0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo0OToyM1rOF3ri0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkyOTQyNw==", "bodyText": "Thanks for doing that clean-up", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393929427", "createdAt": "2020-03-17T19:49:23Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-1/src/main/java/datadog/trace/instrumentation/jaxrs1/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -19,7 +19,7 @@\n public class JaxRsAnnotationsDecorator extends BaseDecorator {\n   public static JaxRsAnnotationsDecorator DECORATE = new JaxRsAnnotationsDecorator();\n \n-  private final WeakMap<Class, Map<Method, String>> resourceNames = newWeakMap();\n+  private final WeakMap<Class<?>, Map<Method, String>> resourceNames = newWeakMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU1NjQy", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376355642", "createdAt": "2020-03-17T19:51:15Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MToxNlrOF3rmwQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MToxNlrOF3rmwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzMDQzMw==", "bodyText": "So accessing the Provider directly inside the Instrumentation?  I think I like that.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393930433", "createdAt": "2020-03-17T19:51:16Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-2/src/main/java/datadog/trace/instrumentation/jaxrs2/JaxRsAnnotationsDecorator.java", "diffHunk": "@@ -27,7 +25,8 @@\n \n   public static final JaxRsAnnotationsDecorator DECORATE = new JaxRsAnnotationsDecorator();\n \n-  private final WeakMap<Class, Map<Method, String>> resourceNames = newWeakMap();\n+  private final WeakMap<Class<?>, Map<Method, String>> resourceNames =\n+      WeakMap.Provider.newWeakMap();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU2MTgw", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376356180", "createdAt": "2020-03-17T19:52:02Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MjowMlrOF3roUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MjowMlrOF3roUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzMDgzMg==", "bodyText": "I see removed the duplication.  Nice.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393930832", "createdAt": "2020-03-17T19:52:02Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jax-rs-annotations-2/src/test/groovy/JaxRsAnnotations2InstrumentationTest.groovy", "diffHunk": "@@ -193,18 +193,4 @@ class JaxRsAnnotationsInstrumentationTest extends AgentTestRunner {\n     void call() {\n     }\n   }\n-\n-  def getName(Class clazz) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU2OTU2", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376356956", "createdAt": "2020-03-17T19:53:09Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MzowOVrOF3rqvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1MzowOVrOF3rqvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzMTQ1Mw==", "bodyText": "I think I'd prefer that encapsulated a bit more.  As is, that ServiceLoader look-up is a lot to process.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393931453", "createdAt": "2020-03-17T19:53:09Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/netty-4.0/src/main/java/datadog/trace/instrumentation/netty40/AttributeKeys.java", "diffHunk": "@@ -1,27 +1,27 @@\n package datadog.trace.instrumentation.netty40;\n \n-import datadog.trace.bootstrap.WeakMap;\n+import datadog.trace.bootstrap.WeakCache;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.context.TraceScope;\n import datadog.trace.instrumentation.netty40.client.HttpClientTracingHandler;\n import datadog.trace.instrumentation.netty40.server.HttpServerTracingHandler;\n import io.netty.util.AttributeKey;\n-import java.util.Map;\n+import java.util.ServiceLoader;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n \n-  private static final WeakMap<ClassLoader, Map<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-\n-  private static final WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>() {\n-            @Override\n-            public Map<String, AttributeKey<?>> get(final ClassLoader ignored) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n+  private static final WeakCache<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n+      ServiceLoader.load(WeakCache.Provider.class, null).iterator().next().newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc2MzU3Mzgz", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-376357383", "createdAt": "2020-03-17T19:53:48Z", "commit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1Mzo0OFrOF3rsGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xN1QxOTo1Mzo0OFrOF3rsGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5MzkzMTgwMQ==", "bodyText": "Yes, I'd prefer to create a static factory to wrap the look-up, so we don't have to repeat this.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r393931801", "createdAt": "2020-03-17T19:53:48Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/netty-4.1/src/main/java/datadog/trace/instrumentation/netty41/AttributeKeys.java", "diffHunk": "@@ -1,27 +1,27 @@\n package datadog.trace.instrumentation.netty41;\n \n-import datadog.trace.bootstrap.WeakMap;\n+import datadog.trace.bootstrap.WeakCache;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.context.TraceScope;\n import datadog.trace.instrumentation.netty41.client.HttpClientTracingHandler;\n import datadog.trace.instrumentation.netty41.server.HttpServerTracingHandler;\n import io.netty.util.AttributeKey;\n-import java.util.Map;\n+import java.util.ServiceLoader;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n \n-  private static final WeakMap<ClassLoader, Map<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-\n-  private static final WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>() {\n-            @Override\n-            public Map<String, AttributeKey<?>> get(final ClassLoader ignored) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n+  private static final WeakCache<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =\n+      ServiceLoader.load(WeakCache.Provider.class, null).iterator().next().newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd"}, "originalPosition": 30}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1acde595dade750a7bb6f8101211c877441586cd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1acde595dade750a7bb6f8101211c877441586cd", "committedDate": "2020-03-17T18:51:06Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "6923ea3382dc8b242fb2accb2b071359191fc844", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6923ea3382dc8b242fb2accb2b071359191fc844", "committedDate": "2020-03-18T06:44:53Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6923ea3382dc8b242fb2accb2b071359191fc844", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6923ea3382dc8b242fb2accb2b071359191fc844", "committedDate": "2020-03-18T06:44:53Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "ffbc7522cbb2a2bf1b825e44285ff5452d679c2c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ffbc7522cbb2a2bf1b825e44285ff5452d679c2c", "committedDate": "2020-03-18T07:24:13Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3MDEzMDk3", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-377013097", "createdAt": "2020-03-18T16:05:21Z", "commit": {"oid": "ffbc7522cbb2a2bf1b825e44285ff5452d679c2c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjowNToyMVrOF4MI9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQxNjowNTozNFrOF4MJsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ2MzQ3OQ==", "bodyText": "I don't think this class can use a cache semantic.  The reason this exists is because netty will throw an error if an attribute of the same name is created more than once.  (See the comment in the class.)", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r394463479", "createdAt": "2020-03-18T16:05:21Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/netty-4.0/src/main/java/datadog/trace/instrumentation/netty40/AttributeKeys.java", "diffHunk": "@@ -1,27 +1,41 @@\n package datadog.trace.instrumentation.netty40;\n \n-import datadog.trace.bootstrap.WeakMap;\n+import datadog.trace.bootstrap.WeakCache;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.context.TraceScope;\n import datadog.trace.instrumentation.netty40.client.HttpClientTracingHandler;\n import datadog.trace.instrumentation.netty40.server.HttpServerTracingHandler;\n import io.netty.util.AttributeKey;\n-import java.util.Map;\n+import java.util.Iterator;\n+import java.util.ServiceLoader;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n+  private static WeakCache<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> newWeakCache() {\n+    final Iterator<WeakCache.Provider> providers =\n+        ServiceLoader.load(WeakCache.Provider.class, null).iterator();\n+    if (providers.hasNext()) {\n+      final WeakCache.Provider provider = providers.next();\n+      if (providers.hasNext()) {\n+        throw new IllegalStateException(\n+            \"Only one implementation of WeakCache.Provider suppose to be in classpath\");\n+      }\n+      return provider.newWeakCache();\n+    }\n+    throw new IllegalStateException(\"Can't load implementation of WeakCache.Provider\");\n+  }\n \n-  private static final WeakMap<ClassLoader, Map<String, AttributeKey<?>>> map =\n-      WeakMap.Implementation.DEFAULT.get();\n-\n-  private static final WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>\n-      mapSupplier =\n-          new WeakMap.ValueSupplier<ClassLoader, Map<String, AttributeKey<?>>>() {\n-            @Override\n-            public Map<String, AttributeKey<?>> get(final ClassLoader ignored) {\n-              return new ConcurrentHashMap<>();\n-            }\n-          };\n+  private static final WeakCache<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> map =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffbc7522cbb2a2bf1b825e44285ff5452d679c2c"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDQ2MzY2NA==", "bodyText": "Same problem here...", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r394463664", "createdAt": "2020-03-18T16:05:34Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/netty-4.1/src/main/java/datadog/trace/instrumentation/netty41/AttributeKeys.java", "diffHunk": "@@ -1,27 +1,41 @@\n package datadog.trace.instrumentation.netty41;\n \n-import datadog.trace.bootstrap.WeakMap;\n+import datadog.trace.bootstrap.WeakCache;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.context.TraceScope;\n import datadog.trace.instrumentation.netty41.client.HttpClientTracingHandler;\n import datadog.trace.instrumentation.netty41.server.HttpServerTracingHandler;\n import io.netty.util.AttributeKey;\n-import java.util.Map;\n+import java.util.Iterator;\n+import java.util.ServiceLoader;\n+import java.util.concurrent.Callable;\n import java.util.concurrent.ConcurrentHashMap;\n+import java.util.concurrent.ConcurrentMap;\n \n public class AttributeKeys {\n+  private static WeakCache<ClassLoader, ConcurrentMap<String, AttributeKey<?>>> newWeakCache() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ffbc7522cbb2a2bf1b825e44285ff5452d679c2c"}, "originalPosition": 18}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ffbc7522cbb2a2bf1b825e44285ff5452d679c2c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ffbc7522cbb2a2bf1b825e44285ff5452d679c2c", "committedDate": "2020-03-18T07:24:13Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "519b4ad68ab893d88449e638be997374540fca91", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/519b4ad68ab893d88449e638be997374540fca91", "committedDate": "2020-03-19T09:00:43Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "519b4ad68ab893d88449e638be997374540fca91", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/519b4ad68ab893d88449e638be997374540fca91", "committedDate": "2020-03-19T09:00:43Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "623f9bf907b33b894806ab8fc2e95556974e8cde", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/623f9bf907b33b894806ab8fc2e95556974e8cde", "committedDate": "2020-03-19T09:47:48Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "623f9bf907b33b894806ab8fc2e95556974e8cde", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/623f9bf907b33b894806ab8fc2e95556974e8cde", "committedDate": "2020-03-19T09:47:48Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3aed00d0de92cf4fa7c773ec71292dd1e4e70e84", "committedDate": "2020-03-19T15:16:50Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzc3OTQ4NTI4", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#pullrequestreview-377948528", "createdAt": "2020-03-19T17:37:52Z", "commit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzozNzo1M1rOF45YXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOVQxNzo0NToxOFrOF45rfg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwNDcwMQ==", "bodyText": "This is implied for fields on an interface, so this doesn't change anything.", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r395204701", "createdAt": "2020-03-19T17:37:53Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/WeakMap.java", "diffHunk": "@@ -45,7 +45,7 @@ public static boolean isProviderRegistered() {\n   interface Implementation {\n     <K, V> WeakMap<K, V> get();\n \n-    Implementation DEFAULT = new Default();\n+    public static final Implementation DEFAULT = new Default();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwNTk3OA==", "bodyText": "How expensive is loadWeakCacheProvider()?  Is this something we should be concerned about?", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r395205978", "createdAt": "2020-03-19T17:39:48Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentTooling.java", "diffHunk": "@@ -16,22 +20,44 @@\n     registerWeakMapProvider();\n   }\n \n+  private static void registerWeakMapProvider() {\n+    if (!WeakMap.Provider.isProviderRegistered()) {\n+      WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.WeakConcurrent(new Cleaner()));\n+      //    WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.WeakConcurrent.Inline());\n+      //    WeakMap.Provider.registerIfAbsent(new WeakMapSuppliers.Guava());\n+    }\n+  }\n+\n+  private static <K, V> Provider loadWeakCacheProvider() {\n+    final Iterator<Provider> providers =\n+        ServiceLoader.load(Provider.class, AgentInstaller.class.getClassLoader()).iterator();\n+    if (providers.hasNext()) {\n+      final Provider provider = providers.next();\n+      if (providers.hasNext()) {\n+        throw new IllegalStateException(\n+            \"Only one implementation of WeakCache.Provider suppose to be in classpath\");\n+      }\n+      return provider;\n+    }\n+    throw new IllegalStateException(\"Can't load implementation of WeakCache.Provider\");\n+  }\n+\n   private static final DDLocationStrategy LOCATION_STRATEGY = new DDLocationStrategy();\n   private static final DDCachingPoolStrategy POOL_STRATEGY = new DDCachingPoolStrategy();\n \n+  public static <K, V> WeakCache<K, V> newWeakCache() {\n+    return loadWeakCacheProvider().newWeakCache();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NTIwOTU5OA==", "bodyText": "since you're returning a boolean and not a count, maybe doesMatch/matches/evaluateMatch instead?", "url": "https://github.com/DataDog/dd-trace-java/pull/1256#discussion_r395209598", "createdAt": "2020-03-19T17:45:18Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceMatcher.java", "diffHunk": "@@ -50,12 +50,18 @@ public boolean matches(ClassLoader loader) {\n     if (loader == BOOTSTRAP_LOADER) {\n       loader = Utils.getBootstrapProxy();\n     }\n-\n-    return mismatchCache.computeIfAbsent(loader, this);\n+    final ClassLoader cl = loader;\n+    return mismatchCache.getIfPresentOrCompute(\n+        loader,\n+        new Callable<Boolean>() {\n+          @Override\n+          public Boolean call() {\n+            return countMismatch(cl);\n+          }\n+        });\n   }\n \n-  @Override\n-  public Boolean get(final ClassLoader loader) {\n+  private boolean countMismatch(final ClassLoader loader) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84"}, "originalPosition": 52}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e2937bc9f44c47e5d9729f1f304961d270f3fae6", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e2937bc9f44c47e5d9729f1f304961d270f3fae6", "committedDate": "2020-03-19T21:59:10Z", "message": "WeakCache instead of WeakMap"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3aed00d0de92cf4fa7c773ec71292dd1e4e70e84", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3aed00d0de92cf4fa7c773ec71292dd1e4e70e84", "committedDate": "2020-03-19T15:16:50Z", "message": "WeakCache instead of WeakMap"}, "afterCommit": {"oid": "e2937bc9f44c47e5d9729f1f304961d270f3fae6", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e2937bc9f44c47e5d9729f1f304961d270f3fae6", "committedDate": "2020-03-19T21:59:10Z", "message": "WeakCache instead of WeakMap"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2521, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}