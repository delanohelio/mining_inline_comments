{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1NDQ1NDc4", "number": 1760, "title": "Rework string handling", "bodyText": "This makes a few changes to the way we serialise strings\n\nUTF8ByteString no longer leaks its byte[] allowing it to hide the way the bytes are stored\nThere was an optimisation for detecting ASCII text which almost always works, but fails on a few Chinese, Japanese, and Korean strings. On balance, I think we're unlikely to encounter the kinds of characters which are corrupted by this optimisation, but it's removed in the third commit. This optimisation also works misleadingly well when string lengths are close to multiples of 8, and much worse when close to the odd multiples of 4.\nString.getBytes is quite a lot faster in JDK11 than it was in JDK8, and allocates a lot less than it used to. Since we've removed a lot of allocation elsewhere, I think we have created a budget to use it for short strings on newer JDKs.\nI plan to move all constants which end up being serialised and guaranteed low cardinality tags to UTF8ByteString (which makes calling String.getBytes a much rarer event), which would avoid things like StringTables, and allow tying pre-computation to the instrumentations, but it's going to be a big and rippling change. If we can make this change, it would be good to have all of that UTF8 data consolidated in a dense page list where we store virtually all of the contextual data we send to the agent.", "createdAt": "2020-08-10T11:36:44Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1760", "merged": true, "mergeCommit": {"oid": "51f66005d0441276961e0c1c086d7b92708edc2a"}, "closed": true, "closedAt": "2020-08-11T12:03:37Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc9g4wWgH2gAyNDY1NDQ1NDc4OjNlNTE3M2FmN2ZiNTY2ZGYxNzQxN2NmMDMxNzI1NGU4OWUyNmFiNDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc91Gp7AFqTQ2NDk3NjA2OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3e5173af7fb566df17417cf0317254e89e26ab48", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3e5173af7fb566df17417cf0317254e89e26ab48", "committedDate": "2020-08-10T11:54:25Z", "message": "abstract UTF8ByteString data"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4dec856c89d7436a822dcfd30a369937aedb69b3", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4dec856c89d7436a822dcfd30a369937aedb69b3", "committedDate": "2020-08-10T11:54:25Z", "message": "failing test with some Chinese characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "363f7c2125fc8740c10fdee468d71451385858da", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/363f7c2125fc8740c10fdee468d71451385858da", "committedDate": "2020-08-10T11:54:25Z", "message": "fix flawed ASCII detection which fails on some CJK characters"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "adb4cdde516ed237a60695c888e4de647b15c9df", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/adb4cdde516ed237a60695c888e4de647b15c9df", "committedDate": "2020-08-10T11:54:25Z", "message": "use String.getBytes for short strings on newer JVMs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9116ca69f0959cfb195f0c61eadaf87a7ac897a8", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9116ca69f0959cfb195f0c61eadaf87a7ac897a8", "committedDate": "2020-08-10T11:54:25Z", "message": "consolidate UTF8ByteString data in a page list"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "10666d7fd2c5c14ee7f8708835a3f12f2e284f9a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/10666d7fd2c5c14ee7f8708835a3f12f2e284f9a", "committedDate": "2020-08-10T10:57:08Z", "message": "consolidate UTF8ByteString data in a page list"}, "afterCommit": {"oid": "9116ca69f0959cfb195f0c61eadaf87a7ac897a8", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9116ca69f0959cfb195f0c61eadaf87a7ac897a8", "committedDate": "2020-08-10T11:54:25Z", "message": "consolidate UTF8ByteString data in a page list"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1549c6d639ea5d82885b3e081f331d06aed3156", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e1549c6d639ea5d82885b3e081f331d06aed3156", "committedDate": "2020-08-10T12:18:29Z", "message": "justifying changes to revapi"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fefae769d7f2f1d8b9240aef622226890a5983e2", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fefae769d7f2f1d8b9240aef622226890a5983e2", "committedDate": "2020-08-10T13:56:10Z", "message": "test exceptional path"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4141b5bacdae70e6317bec24c85733778fb6543d", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4141b5bacdae70e6317bec24c85733778fb6543d", "committedDate": "2020-08-10T13:44:42Z", "message": "test exceptional path"}, "afterCommit": {"oid": "fefae769d7f2f1d8b9240aef622226890a5983e2", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fefae769d7f2f1d8b9240aef622226890a5983e2", "committedDate": "2020-08-10T13:56:10Z", "message": "test exceptional path"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c7f7a18a359c22e365269fb5459e9758190a49e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6c7f7a18a359c22e365269fb5459e9758190a49e", "committedDate": "2020-08-10T14:23:39Z", "message": "reinstate usage of cache for string encoding for the sake of coverage metrics until it can be removed entirely"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0Nzg5MTk4", "url": "https://github.com/DataDog/dd-trace-java/pull/1760#pullrequestreview-464789198", "createdAt": "2020-08-11T06:45:34Z", "commit": {"oid": "6c7f7a18a359c22e365269fb5459e9758190a49e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNjo0NTozNFrOG-qeVA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMVQwNzo1MDo0NlrOG-sXpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM2MDc4OA==", "bodyText": "Nice change", "url": "https://github.com/DataDog/dd-trace-java/pull/1760#discussion_r468360788", "createdAt": "2020-08-11T06:45:34Z", "author": {"login": "bantonsson"}, "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/UTF8BytesString.java", "diffHunk": "@@ -29,28 +36,25 @@ public static UTF8BytesString create(CharSequence chars) {\n     }\n   }\n \n+  private static final Allocator ALLOCATOR = new Allocator();\n+\n   private final String string;\n   private byte[] utf8Bytes = null;\n+  private int offset;\n+  private int length;\n \n   private UTF8BytesString(String string) {\n     this.string = string;\n+    ALLOCATOR.allocate(string, this);\n   }\n \n-  /**\n-   * Returns a <code>byte[]</code> representing the UTF8 encoding of the wrapped {@code String}.\n-   * Please note that the same <code>byte[]</code> will be returned on each call, and the caller is\n-   * bound by honor, and the fear of purgatory, to not modify the <code>byte[]</code>.\n-   *\n-   * @return the byte array of the UTF8 encode string\n-   */\n-  public byte[] getUtf8Bytes() {\n-    byte[] bytes = this.utf8Bytes;\n-    // This race condition is intentional and benign.\n-    // The worst that can happen is that an identical value is produced and written into the field.\n-    if (bytes == null) {\n-      this.utf8Bytes = bytes = this.string.getBytes(StandardCharsets.UTF_8);\n-    }\n-    return bytes;\n+  /** Writes the UTF8 encoding of the wrapped {@code String}. */\n+  public void transferTo(ByteBuffer buffer) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7f7a18a359c22e365269fb5459e9758190a49e"}, "originalPosition": 60}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM4OTk1NA==", "bodyText": "So this no longer matches up to the comment on the line above it. We cache UTF8BytesStringin a WeakMap in datadog.trace.instrumentation.jdbc.JDBCMaps, and as far as I can tell from running some experiments, only the key is treated as a weak reference, and if we don't make a copy String here, nothing will ever be removed from that map.", "url": "https://github.com/DataDog/dd-trace-java/pull/1760#discussion_r468389954", "createdAt": "2020-08-11T07:47:06Z", "author": {"login": "bantonsson"}, "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/UTF8BytesString.java", "diffHunk": "@@ -13,7 +20,7 @@ public static UTF8BytesString create(String string) {\n     } else {\n       // To make sure that we don't get an infinite circle in weak caches that are indexed on this\n       // very String, we create a new wrapper String that we hold on to instead.\n-      return new UTF8BytesString(new String(string));\n+      return new UTF8BytesString(string);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7f7a18a359c22e365269fb5459e9758190a49e"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2ODM5MTg0NA==", "bodyText": "I'm a bit afraid that we might leak things here if this gets used from the wrong place. Should there be a more ominous name for creating a UTF8BytesString that is allocated this way?", "url": "https://github.com/DataDog/dd-trace-java/pull/1760#discussion_r468391844", "createdAt": "2020-08-11T07:50:46Z", "author": {"login": "bantonsson"}, "path": "internal-api/src/main/java/datadog/trace/bootstrap/instrumentation/api/UTF8BytesString.java", "diffHunk": "@@ -29,28 +36,25 @@ public static UTF8BytesString create(CharSequence chars) {\n     }\n   }\n \n+  private static final Allocator ALLOCATOR = new Allocator();\n+\n   private final String string;\n   private byte[] utf8Bytes = null;\n+  private int offset;\n+  private int length;\n \n   private UTF8BytesString(String string) {\n     this.string = string;\n+    ALLOCATOR.allocate(string, this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c7f7a18a359c22e365269fb5459e9758190a49e"}, "originalPosition": 41}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8c83db2414ccd349dd3fd1f5e320ef8043f40fed", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8c83db2414ccd349dd3fd1f5e320ef8043f40fed", "committedDate": "2020-08-11T10:39:08Z", "message": "differentiate between constant and non-constant UTF8ByteString instances"}, "afterCommit": {"oid": "be9e50ec5153b4919509b6ebb899956e7b11c059", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/be9e50ec5153b4919509b6ebb899956e7b11c059", "committedDate": "2020-08-11T10:54:54Z", "message": "differentiate between constant and non-constant UTF8ByteString instances"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3a40488800590b618867b142e14cd74ae909c29e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3a40488800590b618867b142e14cd74ae909c29e", "committedDate": "2020-08-11T11:12:07Z", "message": "differentiate between constant and non-constant UTF8ByteString instances"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "be9e50ec5153b4919509b6ebb899956e7b11c059", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/be9e50ec5153b4919509b6ebb899956e7b11c059", "committedDate": "2020-08-11T10:54:54Z", "message": "differentiate between constant and non-constant UTF8ByteString instances"}, "afterCommit": {"oid": "3a40488800590b618867b142e14cd74ae909c29e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3a40488800590b618867b142e14cd74ae909c29e", "committedDate": "2020-08-11T11:12:07Z", "message": "differentiate between constant and non-constant UTF8ByteString instances"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY0OTc2MDY4", "url": "https://github.com/DataDog/dd-trace-java/pull/1760#pullrequestreview-464976068", "createdAt": "2020-08-11T11:27:42Z", "commit": {"oid": "3a40488800590b618867b142e14cd74ae909c29e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2108, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}