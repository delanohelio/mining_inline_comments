{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU5OTY0MzAw", "number": 1728, "title": "haystack/datadog context propagation", "bodyText": "This resolves the merge conflict in #1691 but otherwise uses the same baggage-based context propagation mechanism, and maintains the DD/haystack id conversion.\n/cc @aantono", "createdAt": "2020-07-31T09:30:48Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1728", "merged": true, "mergeCommit": {"oid": "671695c794ba6730cf88907d38f011aee5f94c4a"}, "closed": true, "closedAt": "2020-08-05T16:21:56Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc2gYm7AH2gAyNDU5OTY0MzAwOmZkNTU2Zjc1OTRhZGUyYTg4ZjBkYmRmZTkzYzRhYzJiYTcwYjdmNDA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc6fFSFgFqTQ1OTU0MTg0Ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "fd556f7594ade2a88f0dbdfe93c4ac2ba70b7f40", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fd556f7594ade2a88f0dbdfe93c4ac2ba70b7f40", "committedDate": "2020-07-19T17:21:50Z", "message": "Converted Haystack support to use UUID/Hex ID format"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d74b73310469d1f55291132185fff01f826ccb37", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d74b73310469d1f55291132185fff01f826ccb37", "committedDate": "2020-07-19T17:23:58Z", "message": "Added support for Haystack ID extraction from Baggage on proxy calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2161fccf267acceed1d84bb4fffebdbb8b3071ac", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2161fccf267acceed1d84bb4fffebdbb8b3071ac", "committedDate": "2020-07-19T17:24:57Z", "message": "Added debug logging of the injected codec platform trace id"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bfdba3ac3dc2aec38a4f409216b627bb47cbd0da", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bfdba3ac3dc2aec38a4f409216b627bb47cbd0da", "committedDate": "2020-07-19T17:24:57Z", "message": "Added Haystack-Trace-ID tag to outbound calls"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c08d5795bcdfe0a9570561c84324f43e3ae6614c", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c08d5795bcdfe0a9570561c84324f43e3ae6614c", "committedDate": "2020-07-19T18:01:31Z", "message": "Converted Haystack tests & codec to use DDId"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ce60ff8e8dcdfcf26e54cf7e7024af90e43068c5", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ce60ff8e8dcdfcf26e54cf7e7024af90e43068c5", "committedDate": "2020-07-20T13:36:57Z", "message": "Added parent id check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e7d84447eb4e52278cafb03a724b25141a68526", "author": {"user": {"login": "aantono", "name": "Alex Antonov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6e7d84447eb4e52278cafb03a724b25141a68526", "committedDate": "2020-07-20T13:51:34Z", "message": "Applied spotlessApply ;)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a4440019677dbd43e93c51b61c9f32f76746429a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a4440019677dbd43e93c51b61c9f32f76746429a", "committedDate": "2020-07-31T09:27:13Z", "message": "Merge branch 'master' into haystack"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb", "committedDate": "2020-07-31T09:28:13Z", "message": "fix up small differences post merge"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5MzQzNjg3", "url": "https://github.com/DataDog/dd-trace-java/pull/1728#pullrequestreview-459343687", "createdAt": "2020-07-31T17:32:55Z", "commit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTQxODQ2", "url": "https://github.com/DataDog/dd-trace-java/pull/1728#pullrequestreview-459541846", "createdAt": "2020-08-01T02:00:11Z", "commit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMjowMDoxMVrOG6anGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMjowMzo0NVrOG6aoeg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjU4Ng==", "bodyText": "Given this no longer deals with BigInteger, should we rename to convertDDIdToUUID?", "url": "https://github.com/DataDog/dd-trace-java/pull/1728#discussion_r463906586", "createdAt": "2020-08-01T02:00:11Z", "author": {"login": "aantono"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/propagation/HaystackHttpCodec.java", "diffHunk": "@@ -139,9 +199,52 @@ public boolean accept(String key, String value) {\n       return true;\n     }\n \n+    private void addBaggageItem(String key, String value) {\n+      if (baggage.isEmpty()) {\n+        baggage = new TreeMap<>();\n+      }\n+      baggage.put(key, HttpCodec.decode(value));\n+    }\n+\n     @Override\n     protected int defaultSamplingPriority() {\n       return PrioritySampling.SAMPLER_KEEP;\n     }\n   }\n+\n+  private static String convertBigIntToUUID(DDId id) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb"}, "originalPosition": 156}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjY5Mg==", "bodyText": "Given this no longer deals with BigInteger, should we rename to convertUUIDToDDId?", "url": "https://github.com/DataDog/dd-trace-java/pull/1728#discussion_r463906692", "createdAt": "2020-08-01T02:01:13Z", "author": {"login": "aantono"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/propagation/HaystackHttpCodec.java", "diffHunk": "@@ -139,9 +199,52 @@ public boolean accept(String key, String value) {\n       return true;\n     }\n \n+    private void addBaggageItem(String key, String value) {\n+      if (baggage.isEmpty()) {\n+        baggage = new TreeMap<>();\n+      }\n+      baggage.put(key, HttpCodec.decode(value));\n+    }\n+\n     @Override\n     protected int defaultSamplingPriority() {\n       return PrioritySampling.SAMPLER_KEEP;\n     }\n   }\n+\n+  private static String convertBigIntToUUID(DDId id) {\n+    // This is not a true/real UUID, as we don't care about the version and variant markers\n+    //  the creation is just taking the least significant bits and doing static most significant\n+    // ones.\n+    //  this is done for the purpose of being able to maintain cardinality and idempotence of the\n+    // conversion\n+    String idHex = String.format(\"%016x\", id.toLong());\n+    return DATADOG + \"-\" + idHex.substring(0, 4) + \"-\" + idHex.substring(4);\n+  }\n+\n+  private static DDId convertUUIDToBigInt(String value) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb"}, "originalPosition": 166}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzkwNjkzOA==", "bodyText": "Is there a particular appropriate convention for tag names that\u2019s used within DD ecosystem, to make sure the tag names are compliant here and in other places?\n(Also, do we want to add the same tags of original ids in Zipkin codec as well?)", "url": "https://github.com/DataDog/dd-trace-java/pull/1728#discussion_r463906938", "createdAt": "2020-08-01T02:03:45Z", "author": {"login": "aantono"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/propagation/HaystackHttpCodec.java", "diffHunk": "@@ -32,14 +44,54 @@ private HaystackHttpCodec() {\n     @Override\n     public <C> void inject(\n         final DDSpanContext context, final C carrier, final AgentPropagation.Setter<C> setter) {\n-      setter.set(carrier, TRACE_ID_KEY, context.getTraceId().toString());\n-      setter.set(carrier, SPAN_ID_KEY, context.getSpanId().toString());\n-      setter.set(carrier, PARENT_ID_KEY, context.getParentId().toString());\n+      try {\n+        // Given that Haystack uses a 128-bit UUID/GUID for all ID representations, need to convert\n+        // from 64-bit BigInteger\n+        //  also record the original DataDog IDs into Baggage payload\n+        //\n+        // If the original trace has originated within Haystack system and we have it saved in\n+        // Baggage, and it is equal\n+        //  to the converted value in BigInteger, use that instead.\n+        //  this will preserve the complete UUID/GUID without losing the most significant bit part\n+        String originalHaystackTraceId =\n+            getBaggageItemIgnoreCase(context.getBaggageItems(), HAYSTACK_TRACE_ID_BAGGAGE_KEY);\n+        String injectedTraceId;\n+        if (originalHaystackTraceId != null\n+            && convertUUIDToBigInt(originalHaystackTraceId).equals(context.getTraceId())) {\n+          injectedTraceId = originalHaystackTraceId;\n+        } else {\n+          injectedTraceId = convertBigIntToUUID(context.getTraceId());\n+        }\n+        setter.set(carrier, TRACE_ID_KEY, injectedTraceId);\n+        context.setTag(HAYSTACK_TRACE_ID_BAGGAGE_KEY, injectedTraceId);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6302ccd6f5084e0340ec106f36fc42ceb5d8f3eb"}, "originalPosition": 50}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2062, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}