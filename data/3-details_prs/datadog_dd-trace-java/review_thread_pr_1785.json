{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMTQzOTQy", "number": 1785, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoxMTo0MVrOEaDEJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNjoxNDowOVrOEamzlw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzQ4NjQ1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoxMTo0MVrOHDOjvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoxMTo0MVrOHDOjvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0NjMwMw==", "bodyText": "Nice.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473146303", "createdAt": "2020-08-19T16:11:41Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzQ4Nzk1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoxMjowOFrOHDOkyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQwNjo1MjozOVrOHDuJZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0NjU3MA==", "bodyText": "It's not new but this bugs me, I think we could implement a trie without much effort and probably do better here.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473146570", "createdAt": "2020-08-19T16:12:08Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.java", "diffHunk": "@@ -122,27 +122,20 @@ public boolean matches(final T target) {\n \n       if (name.startsWith(\"org.springframework.context.\")) {\n         // More runnables to deal with\n-        if (name.startsWith(\"org.springframework.context.support.AbstractApplicationContext$\")\n-            || name.equals(\"org.springframework.context.support.ContextTypeMatchClassLoader\")) {\n+        if (name.startsWith(\"org.springframework.context.support.AbstractApplicationContext$\")) {\n           return false;\n         }\n         return true;\n       }\n \n       if (name.startsWith(\"org.springframework.core.\")) {\n-        if (name.startsWith(\"org.springframework.core.task.\")\n-            || name.equals(\"org.springframework.core.DecoratingClassLoader\")\n-            || name.equals(\"org.springframework.core.OverridingClassLoader\")) {\n+        if (name.startsWith(\"org.springframework.core.task.\")) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2Mzg0NA==", "bodyText": "Yes I completely agree.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473663844", "createdAt": "2020-08-20T06:52:39Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/AdditionalLibraryIgnoresMatcher.java", "diffHunk": "@@ -122,27 +122,20 @@ public boolean matches(final T target) {\n \n       if (name.startsWith(\"org.springframework.context.\")) {\n         // More runnables to deal with\n-        if (name.startsWith(\"org.springframework.context.support.AbstractApplicationContext$\")\n-            || name.equals(\"org.springframework.context.support.ContextTypeMatchClassLoader\")) {\n+        if (name.startsWith(\"org.springframework.context.support.AbstractApplicationContext$\")) {\n           return false;\n         }\n         return true;\n       }\n \n       if (name.startsWith(\"org.springframework.core.\")) {\n-        if (name.startsWith(\"org.springframework.core.task.\")\n-            || name.equals(\"org.springframework.core.DecoratingClassLoader\")\n-            || name.equals(\"org.springframework.core.OverridingClassLoader\")) {\n+        if (name.startsWith(\"org.springframework.core.task.\")) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE0NjU3MA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk1NzUzNzI1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "isResolved": false, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxNjoyMjoyNFrOHDPD_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxMzoxODo1NFrOHEAWcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA==", "bodyText": "datadog.trace.bootstrap.AgentClassLoader no longer exists. I wonder how long this has been like this for?", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473154558", "createdAt": "2020-08-19T16:22:24Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE2OTM1NA==", "bodyText": "I think it should be updated to this: datadog.trace.bootstrap.DatadogClassLoader", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473169354", "createdAt": "2020-08-19T16:36:44Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE5OTY4Ng==", "bodyText": "Also datadog.trace.bootstrap.DatadogClassLoader$DelegateClassLoader", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473199686", "createdAt": "2020-08-19T17:20:58Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzY2NDA4OQ==", "bodyText": "Wonderful", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473664089", "createdAt": "2020-08-20T06:52:57Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzc0NDg0MQ==", "bodyText": "Can we change this before merging?", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473744841", "createdAt": "2020-08-20T08:12:07Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzgzODQwNA==", "bodyText": "Absolutely", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473838404", "createdAt": "2020-08-20T10:00:58Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkyMTA1MA==", "bodyText": "Turns out that they are already taken care of by datadog.trace.agent.tooling.ClassLoaderMatcher.SkipClassLoaderMatcher.canSkipClassLoaderByName.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473921050", "createdAt": "2020-08-20T12:08:57Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzkzMjI0Nw==", "bodyText": "Do we need to rationalise this logic? We seem to match classloaders in so many places.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473932247", "createdAt": "2020-08-20T12:28:53Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3Mzk2MjA5OQ==", "bodyText": "I only count to 3 right now \ud83d\ude09", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r473962099", "createdAt": "2020-08-20T13:18:54Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,12 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"datadog.trace.bootstrap.AgentClassLoader\",", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzE1NDU1OA=="}, "originalCommit": {"oid": "d2bfb3a6820bbeea790b6bb13a585e87b6c4788a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MjczNzU3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "isResolved": true, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDowMToyMlrOHEDEZw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNDo1ODo1OFrOHEFquw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ==", "bodyText": "Isn't it generally more efficient to ignore the class before it's loaded by byte buddy?", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474006631", "createdAt": "2020-08-20T14:01:22Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAxMTE2OQ==", "bodyText": "I bet it is. So should these be added to the global ignores matcher instead?", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474011169", "createdAt": "2020-08-20T14:07:49Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ=="}, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAyMjUzMw==", "bodyText": "Probably, unless we want to apply other instrumentation to them.  I was just surprised that you moved them as that seems like it would be less efficient.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474022533", "createdAt": "2020-08-20T14:23:43Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ=="}, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAzMzEzOA==", "bodyText": "So the whole weird dance that happens is that they were not in the GlobalIgnoresMatcher, but explicitly enabled for instrumentation in the weird AdditionalLibraryIgnoresMatcher, which I changed. So far so good. The thing is that the AdditionalLibraryIgnoresMatcher is disabled during tests, so they end up being instrumented in tests, and the tests fail, since we check the instrumented classes against the AdditionalLibraryIgnoresMatcher, so even though they won't be instrumented during normal execution, we need to disable them from being instrumented somewhere else for the tests to pass.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474033138", "createdAt": "2020-08-20T14:37:34Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ=="}, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAzNzMwNQ==", "bodyText": "ah, ok.  so maybe put them in both places is best?", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474037305", "createdAt": "2020-08-20T14:43:12Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ=="}, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDA0OTIxMQ==", "bodyText": "I've moved the Spring classloader checks to the GlobalIgnoresMatcher", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474049211", "createdAt": "2020-08-20T14:58:58Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/classloading/src/main/java/datadog/trace/instrumentation/classloading/ClassloadingInstrumentation.java", "diffHunk": "@@ -45,7 +45,11 @@ public ClassloadingInstrumentation() {\n     return namedNoneOf(\n             \"java.lang.ClassLoader\",\n             \"com.ibm.oti.vm.BootstrapClassLoader\",\n-            \"datadog.trace.bootstrap.AgentClassLoader\")\n+            \"org.springframework.context.support.ContextTypeMatchClassLoader\",\n+            \"org.springframework.core.OverridingClassLoader\",\n+            \"org.springframework.core.DecoratingClassLoader\",\n+            \"org.springframework.instrument.classloading.SimpleThrowawayClassLoader\",\n+            \"org.springframework.instrument.classloading.ShadowingClassLoader\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDAwNjYzMQ=="}, "originalCommit": {"oid": "fdb54828d60a5a4cc7dc3add17f29c343b857317"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk2MzM0MjMxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNjoxNDowOVrOHEJC5g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMVQwNjo1MToxNFrOHEdqnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEwNDU1MA==", "bodyText": "Can we not do this just because we'll want to take the entire strings and build a trie from them at some point, and the painstaking deconstruction will make that migration harder.\n(I actually tried it before and didn't observe a positive effect)", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474104550", "createdAt": "2020-08-20T16:14:09Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.java", "diffHunk": "@@ -143,19 +147,39 @@ public boolean matches(final T target) {\n         break;\n       case 'o' - 'a':\n         if (name.startsWith(\"org.\")) {\n-          if (name.startsWith(\"org.aspectj.\") || name.startsWith(\"org.jinspired.\")) {\n+          int oOffset = \"org.\".length();\n+          if (name.startsWith(\"aspectj.\", oOffset) || name.startsWith(\"jinspired.\", oOffset)) {\n             return true;\n           }\n           // groovy\n-          if (name.startsWith(\"org.groovy.\") || name.startsWith(\"org.apache.groovy.\")) {\n+          if (name.startsWith(\"groovy.\", oOffset) || name.startsWith(\"apache.groovy.\", oOffset)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6c6b7b51a1356b8d7be2ef68ccf753d873e84865"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDExOTA5MQ==", "bodyText": "To be clear, this made no effect on negative matches (I was trying to improve a clojure application which wouldn't ever have got inside this block).", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474119091", "createdAt": "2020-08-20T16:36:44Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.java", "diffHunk": "@@ -143,19 +147,39 @@ public boolean matches(final T target) {\n         break;\n       case 'o' - 'a':\n         if (name.startsWith(\"org.\")) {\n-          if (name.startsWith(\"org.aspectj.\") || name.startsWith(\"org.jinspired.\")) {\n+          int oOffset = \"org.\".length();\n+          if (name.startsWith(\"aspectj.\", oOffset) || name.startsWith(\"jinspired.\", oOffset)) {\n             return true;\n           }\n           // groovy\n-          if (name.startsWith(\"org.groovy.\") || name.startsWith(\"org.apache.groovy.\")) {\n+          if (name.startsWith(\"groovy.\", oOffset) || name.startsWith(\"apache.groovy.\", oOffset)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEwNDU1MA=="}, "originalCommit": {"oid": "6c6b7b51a1356b8d7be2ef68ccf753d873e84865"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDQ0MjM5OQ==", "bodyText": "Interesting that it didn't make an effect. I agree with the trie comment. I'll change this back.", "url": "https://github.com/DataDog/dd-trace-java/pull/1785#discussion_r474442399", "createdAt": "2020-08-21T06:51:14Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/bytebuddy/matcher/GlobalIgnoresMatcher.java", "diffHunk": "@@ -143,19 +147,39 @@ public boolean matches(final T target) {\n         break;\n       case 'o' - 'a':\n         if (name.startsWith(\"org.\")) {\n-          if (name.startsWith(\"org.aspectj.\") || name.startsWith(\"org.jinspired.\")) {\n+          int oOffset = \"org.\".length();\n+          if (name.startsWith(\"aspectj.\", oOffset) || name.startsWith(\"jinspired.\", oOffset)) {\n             return true;\n           }\n           // groovy\n-          if (name.startsWith(\"org.groovy.\") || name.startsWith(\"org.apache.groovy.\")) {\n+          if (name.startsWith(\"groovy.\", oOffset) || name.startsWith(\"apache.groovy.\", oOffset)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDEwNDU1MA=="}, "originalCommit": {"oid": "6c6b7b51a1356b8d7be2ef68ccf753d873e84865"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 43, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}