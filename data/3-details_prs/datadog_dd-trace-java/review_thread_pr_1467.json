{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDE4ODQ5NzEx", "number": 1467, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxNzoyMDo0OVrOD9LxDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToyNDoxMVrOD9jrVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1NDgyNTA4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/DelegateScopeInterceptor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxNzoyMDo0OVrOGWiWAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xN1QxNzoyMDo0OVrOGWiWAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjI4NDU0Ng==", "bodyText": "Is this essentially for chaining and not really for 'delegate' in a 'wrap and change behaviour'? It would be nice to have some comments into intent of this design.", "url": "https://github.com/DataDog/dd-trace-java/pull/1467#discussion_r426284546", "createdAt": "2020-05-17T17:20:49Z", "author": {"login": "mar-kolya"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/DelegateScopeInterceptor.java", "diffHunk": "@@ -0,0 +1,52 @@\n+package datadog.trace.core.scopemanager;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.context.TraceScope;\n+\n+abstract class DelegateScopeInterceptor implements ScopeInterceptor {\n+  protected final ScopeInterceptor delegate;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ef4b34ff9f6a921527c3a42c2f9e6e57b1b145ea"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODcwNDcxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToxMDoyM1rOGXHm5Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToxMDoyM1rOGXHm5Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NTA3Nw==", "bodyText": "Isn't this assuming a continuable scope? depth() isn't on DDScope anymore.", "url": "https://github.com/DataDog/dd-trace-java/pull/1467#discussion_r426895077", "createdAt": "2020-05-18T21:10:23Z", "author": {"login": "randomanderson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "diffHunk": "@@ -138,11 +138,11 @@ class ScopeManagerTest extends DDSpecification {\n     for (int i = 0; i <= depth; i++) {\n       def span = tracer.buildSpan(\"test\").start()\n       scope = tracer.activateSpan(span)\n-      assert scope instanceof ContinuableScope\n+      assert scope instanceof DDScope\n     }\n \n     then: \"last scope is still valid\"\n-    (scope as ContinuableScope).depth() == depth\n+    (scope as DDScope).depth() == depth", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c007f18bdd32bfc244efe56292ed0160b8fa63"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODcwNTg5OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToxMDo0N1rOGXHnsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToxMDo0N1rOGXHnsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjg5NTI4MQ==", "bodyText": "See previous comment about depth()", "url": "https://github.com/DataDog/dd-trace-java/pull/1467#discussion_r426895281", "createdAt": "2020-05-18T21:10:47Z", "author": {"login": "randomanderson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/scopemanager/ScopeManagerTest.groovy", "diffHunk": "@@ -157,16 +157,16 @@ class ScopeManagerTest extends DDSpecification {\n     scope instanceof NoopAgentScope\n \n     and: \"scope stack not effected.\"\n-    (scopeManager.active() as ContinuableScope).depth() == depth\n+    (scopeManager.active() as DDScope).depth() == depth", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c007f18bdd32bfc244efe56292ed0160b8fa63"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjY1ODc0MjYwOnYy", "diffSide": "LEFT", "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMToyNDoxMVrOGXH-Vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0xOFQyMTo1Nzo0NlrOGXI1UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMTA3OQ==", "bodyText": "This whole file seems unrelated to the PR", "url": "https://github.com/DataDog/dd-trace-java/pull/1467#discussion_r426901079", "createdAt": "2020-05-18T21:24:11Z", "author": {"login": "randomanderson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -86,16 +93,4 @@ public void writeBigInteger(byte[] key, BigInteger value, MessagePacker destinat\n       destination.packBigInteger(value);\n     }\n   }\n-\n-  private static void writeStringUTF8(String value, MessagePacker destination) throws IOException {\n-    if (value.length() < 256) {\n-      byte[] interned = StringTables.getBytesUTF8(value);\n-      if (null != interned) {\n-        destination.packRawStringHeader(interned.length);\n-        destination.addPayload(interned);\n-        return;\n-      }\n-    }\n-    destination.packString(value);\n-  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d6c007f18bdd32bfc244efe56292ed0160b8fa63"}, "originalPosition": 99}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkxNTE1Mw==", "bodyText": "nvm.  I see the commit comment", "url": "https://github.com/DataDog/dd-trace-java/pull/1467#discussion_r426915153", "createdAt": "2020-05-18T21:57:46Z", "author": {"login": "randomanderson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/serialization/MsgpackFormatWriter.java", "diffHunk": "@@ -86,16 +93,4 @@ public void writeBigInteger(byte[] key, BigInteger value, MessagePacker destinat\n       destination.packBigInteger(value);\n     }\n   }\n-\n-  private static void writeStringUTF8(String value, MessagePacker destination) throws IOException {\n-    if (value.length() < 256) {\n-      byte[] interned = StringTables.getBytesUTF8(value);\n-      if (null != interned) {\n-        destination.packRawStringHeader(interned.length);\n-        destination.addPayload(interned);\n-        return;\n-      }\n-    }\n-    destination.packString(value);\n-  }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyNjkwMTA3OQ=="}, "originalCommit": {"oid": "d6c007f18bdd32bfc244efe56292ed0160b8fa63"}, "originalPosition": 99}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 330, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}