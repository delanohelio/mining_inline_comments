{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzc3NDQwMDc5", "number": 1233, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoxNjoyNFrODhgKJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoxNjoyNFrODhgKJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM2NDU2NDg0OnYy", "diffSide": "LEFT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxMjoxNjoyNFrOFsRLRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yMFQxNDozMDo1NFrOFsVhLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk2MzA3Nw==", "bodyText": "It is really-really surprising that these are slow - by the looks is it they should just be doing an & on two ints.", "url": "https://github.com/DataDog/dd-trace-java/pull/1233#discussion_r381963077", "createdAt": "2020-02-20T12:16:24Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java", "diffHunk": "@@ -68,10 +66,11 @@ public static ResettableClassFileTransformer installBytebuddyAgent(\n             // https://github.com/raphw/byte-buddy/issues/558\n             // .with(AgentBuilder.LambdaInstrumentationStrategy.ENABLED)\n             .ignore(any(), skipClassLoader())\n-            // Unlikely to ever need to instrument an annotation:\n-            .or(ElementMatchers.<TypeDescription>isAnnotation())\n-            // Unlikely to ever need to instrument an enum:\n-            .or(ElementMatchers.<TypeDescription>isEnum())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e4b55304e34a32d357757fbd204b2b855b34b04"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MjAzNDIyMg==", "bodyText": "Yes, it is a bit counter intuitive, but I think understand why.\nMy suspicion is that name checks don't actually require materializing the TypeDescription from the underlying class file, since the name is known ahead of time.\nOn the other hand, the enum & annotation flag are only present in the class file, so ByteBuddy probably has to load the class file to do the check.\nIf the TypeDescription were already loaded then I have no doubt that isEnum & isAnnotation would be cheaper than the name check.", "url": "https://github.com/DataDog/dd-trace-java/pull/1233#discussion_r382034222", "createdAt": "2020-02-20T14:30:54Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/AgentInstaller.java", "diffHunk": "@@ -68,10 +66,11 @@ public static ResettableClassFileTransformer installBytebuddyAgent(\n             // https://github.com/raphw/byte-buddy/issues/558\n             // .with(AgentBuilder.LambdaInstrumentationStrategy.ENABLED)\n             .ignore(any(), skipClassLoader())\n-            // Unlikely to ever need to instrument an annotation:\n-            .or(ElementMatchers.<TypeDescription>isAnnotation())\n-            // Unlikely to ever need to instrument an enum:\n-            .or(ElementMatchers.<TypeDescription>isEnum())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4MTk2MzA3Nw=="}, "originalCommit": {"oid": "6e4b55304e34a32d357757fbd204b2b855b34b04"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 525, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}