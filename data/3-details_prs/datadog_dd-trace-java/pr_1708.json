{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU1ODgyMDc1", "number": 1708, "title": "Add the various MLT io classes - Used for serializing collected stacktraces", "bodyText": "Binary format described in https://docs.google.com/document/d/1GQFRVWi8oVKWAk2XvoEGW1_PceSKTuJld8BaVOnshaE\nCo-authored-by: Jean-Philippe Bempel jean-philippe.bempel@datadoghq.com\nCo-authored-by: Jaroslav Bachorik jaroslav.bachorik@datadoghq.com\nCo-authored-by: Laplie Anderson laplie.anderson@datadoghq.com", "createdAt": "2020-07-23T18:28:42Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1708", "merged": true, "mergeCommit": {"oid": "d6324d9d50ad6edc86e69c5de99994a65b8fe191"}, "closed": true, "closedAt": "2020-08-03T15:07:00Z", "author": {"login": "tylerbenson"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc3zuDvgH2gAyNDU1ODgyMDc1OjRjZTRlZGFjMTgwNTNkNTA3MGQxNDc0NDY5YjdmZTRiYzBjODI1ZWE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABc7S1ejgH2gAyNDU1ODgyMDc1OmM4Yjg0MWQ1M2ZhY2ZlMzI5NjFiOTMyNDM2Y2UxNzg3ZDAwMGNjODk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea", "author": {"user": {"login": "tylerbenson", "name": "Tyler Benson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4ce4edac18053d5070d1474469b7fe4bc0c825ea", "committedDate": "2020-07-23T18:27:23Z", "message": "Add the various MLT io classes - Used for serializing collected stacktraces\n\nCo-authored-by: Jean-Philippe Bempel <jean-philippe.bempel@datadoghq.com>\nCo-authored-by: Jaroslav Bachorik <jaroslav.bachorik@datadoghq.com>\nCo-authored-by: Laplie Anderson <laplie.anderson@datadoghq.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjU2MDY1", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-457656065", "createdAt": "2020-07-29T15:48:23Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo0ODoyM1rOG4-0UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNTo0ODoyM1rOG4-0UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQwMjY0MQ==", "bodyText": "Java uses int as index of array and we can't create array more than Integer.MAX_VALUE .\nI don't understand why we are using long as offset in this interface and then we have to convert it to int anyway in  many places in implementation:\nhttps://github.com/DataDog/dd-trace-java/pull/1708/files#diff-d12c79eb0010a77cc4ca68b1b31d4225R43", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462402641", "createdAt": "2020-07-29T15:48:23Z", "author": {"login": "lpriima"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/LEB128Writer.java", "diffHunk": "@@ -0,0 +1,355 @@\n+package com.datadog.mlt.io;\n+\n+import java.nio.ByteBuffer;\n+import java.util.function.Consumer;\n+\n+public interface LEB128Writer {\n+  int EXT_BIT = 0x80;\n+  long COMPRESSED_INT_MASK = -EXT_BIT;\n+\n+  /**\n+   * Get a default {@linkplain LEB128Writer} instance\n+   *\n+   * @return a new instance of {@linkplain LEB128Writer}\n+   */\n+  static LEB128Writer getInstance() {\n+    return new LEB128ByteBufferWriter();\n+  }\n+\n+  /** Reset the writer. Discard any collected data and set position to 0. */\n+  void reset();\n+\n+  /**\n+   * Write {@linkplain Character} data in LEB128 encoding\n+   *\n+   * @param data the data\n+   * @return the writer instance for chaining\n+   */\n+  LEB128Writer writeChar(char data);\n+\n+  /**\n+   * Write {@linkplain Character} data in LEB128 encoding at the given offset\n+   *\n+   * @param offset the offset from which to start writing the data\n+   * @param data the data\n+   * @return the writer position after the data has been written\n+   */\n+  long writeChar(long offset, char data);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 37}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NjcyOTk0", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-457672994", "createdAt": "2020-07-29T16:07:05Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3Njc4ODE3", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-457678817", "createdAt": "2020-07-29T16:14:09Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxNDowOVrOG4_6nw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxNjoxNDowOVrOG4_6nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjQyMDYzOQ==", "bodyText": "Do we need dd. prefix and/or ENV var support, Config and etc ... for this one ?", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462420639", "createdAt": "2020-07-29T16:14:09Z", "author": {"login": "lpriima"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTChunkCollector.java", "diffHunk": "@@ -0,0 +1,150 @@\n+package com.datadog.mlt.io;\n+\n+import it.unimi.dsi.fastutil.ints.IntArrayList;\n+import it.unimi.dsi.fastutil.ints.IntIterator;\n+import it.unimi.dsi.fastutil.ints.IntList;\n+import java.nio.ByteBuffer;\n+import java.util.function.Consumer;\n+import java.util.stream.IntStream;\n+import java.util.stream.Stream;\n+import lombok.Getter;\n+\n+public abstract class MLTChunkCollector implements IMLTChunk {\n+  /*\n+   * TODO seems like subtree compression is worse than plain full-tree deduplication\n+   *  when the subtree compression is finally removed this flag should go as well + subtree support in FrameSequence\n+   */\n+  private static final boolean USE_SUBTREE_COMPRESSION =\n+      Boolean.getBoolean(\"mlt.subtree_compression\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NzkzODg1", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-457793885", "createdAt": "2020-07-29T18:45:21Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToyMVrOG5FeNw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToyMVrOG5FeNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTY3MQ==", "bodyText": "class without state? Should we mark all methods as static and add private constructor ?", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462511671", "createdAt": "2020-07-29T18:45:21Z", "author": {"login": "lpriima"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTReader.java", "diffHunk": "@@ -0,0 +1,151 @@\n+package com.datadog.mlt.io;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/** The MLT binary format reader */\n+public final class MLTReader {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 8}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU3NzkzOTY5", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-457793969", "createdAt": "2020-07-29T18:45:29Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToyOVrOG5FeeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yOVQxODo0NToyOVrOG5FeeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTczNw==", "bodyText": "class without state? Should we mark all methods as static and add private constructor ?", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462511737", "createdAt": "2020-07-29T18:45:29Z", "author": {"login": "lpriima"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTWriter.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package com.datadog.mlt.io;\n+\n+import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n+import it.unimi.dsi.fastutil.ints.IntSet;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.function.Consumer;\n+import java.util.function.IntConsumer;\n+\n+/** The MLT binary format writer */\n+public final class MLTWriter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 11}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU4MTcwNDAx", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-458170401", "createdAt": "2020-07-30T07:59:50Z", "commit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwNzo1OTo1MFrOG5YPxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMFQwODoxMjozMlrOG5YqtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgxOTI3MA==", "bodyText": "So since this is not the full code, I couldn't figure out exactly how this is used, but I think that it would be good to mention that this data structure is not thread safe, to set expectations and avoid misuse.", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462819270", "createdAt": "2020-07-30T07:59:50Z", "author": {"login": "bantonsson"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/ConstantPool.java", "diffHunk": "@@ -0,0 +1,81 @@\n+package com.datadog.mlt.io;\n+\n+import it.unimi.dsi.fastutil.ints.Int2ObjectMap;\n+import it.unimi.dsi.fastutil.ints.Int2ObjectOpenHashMap;\n+import it.unimi.dsi.fastutil.objects.Object2IntMap;\n+import it.unimi.dsi.fastutil.objects.Object2IntOpenHashMap;\n+\n+/**\n+ * A generic constant pool implementation.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNTUwOA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462825508", "createdAt": "2020-07-30T08:11:23Z", "author": {"login": "bantonsson"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTReader.java", "diffHunk": "@@ -0,0 +1,151 @@\n+package com.datadog.mlt.io;\n+\n+import java.util.ArrayList;\n+import java.util.Arrays;\n+import java.util.List;\n+\n+/** The MLT binary format reader */\n+public final class MLTReader {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTY3MQ=="}, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjgyNjE2NQ==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#discussion_r462826165", "createdAt": "2020-07-30T08:12:32Z", "author": {"login": "bantonsson"}, "path": "utils/mlt-support/src/main/java/com/datadog/mlt/io/MLTWriter.java", "diffHunk": "@@ -0,0 +1,195 @@\n+package com.datadog.mlt.io;\n+\n+import it.unimi.dsi.fastutil.ints.IntOpenHashSet;\n+import it.unimi.dsi.fastutil.ints.IntSet;\n+import java.nio.ByteBuffer;\n+import java.nio.charset.StandardCharsets;\n+import java.util.function.Consumer;\n+import java.util.function.IntConsumer;\n+\n+/** The MLT binary format writer */\n+public final class MLTWriter {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MjUxMTczNw=="}, "originalCommit": {"oid": "4ce4edac18053d5070d1474469b7fe4bc0c825ea"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddc4158491efd9588ba6a1747aa49f98e8139500", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ddc4158491efd9588ba6a1747aa49f98e8139500", "committedDate": "2020-08-03T07:28:07Z", "message": "Make MLTReader/Writer all static classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29b41952fc7a585e7626a24e8c93d393fae636aa", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/29b41952fc7a585e7626a24e8c93d393fae636aa", "committedDate": "2020-08-03T07:28:31Z", "message": "Use 'int' offsets rather than 'long' ones."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5765725d2abba18b96ed1ecbadf8dbd2badbc59c", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5765725d2abba18b96ed1ecbadf8dbd2badbc59c", "committedDate": "2020-08-03T07:32:41Z", "message": "Remove subtree compression"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7c5eda88369732cf120f0956242a793ed8a2f4f3", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7c5eda88369732cf120f0956242a793ed8a2f4f3", "committedDate": "2020-08-03T07:37:46Z", "message": "Add note about ConstantPool not being thread safe."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "63ced687e9400acb1ee7b7db307d1df6b228d339", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/63ced687e9400acb1ee7b7db307d1df6b228d339", "committedDate": "2020-08-03T09:44:13Z", "message": "Add rudimentary tests for MLTWriter and MLTReader"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71bdd7516e9a4ee1ed86a480594f0433ff65499b", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/71bdd7516e9a4ee1ed86a480594f0433ff65499b", "committedDate": "2020-08-03T09:44:43Z", "message": "Update formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a199cc3cc7ccf387990a663e13016eb453f53c71", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a199cc3cc7ccf387990a663e13016eb453f53c71", "committedDate": "2020-08-03T09:52:18Z", "message": "Forbid instantiation of MLTReader and MLTWriter"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46004b459083e8c2738c5784a5f4d03e0c66b32f", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/46004b459083e8c2738c5784a5f4d03e0c66b32f", "committedDate": "2020-08-03T10:26:24Z", "message": "Attempt at fixing the intermittently failing test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9e70249d7d0628e07da798019a2c00383916679a", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9e70249d7d0628e07da798019a2c00383916679a", "committedDate": "2020-08-03T10:38:51Z", "message": "Add debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "227442f76a618143fc78948a666b71500d7c3e98", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/227442f76a618143fc78948a666b71500d7c3e98", "committedDate": "2020-08-03T10:46:55Z", "message": "Add even more debug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b6d69534f5b56cadf4d472870925d89ce218add", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2b6d69534f5b56cadf4d472870925d89ce218add", "committedDate": "2020-08-03T10:59:08Z", "message": "Fix format. Seems to prevent running up-to-date tests on CI."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDYwMDE1NTMw", "url": "https://github.com/DataDog/dd-trace-java/pull/1708#pullrequestreview-460015530", "createdAt": "2020-08-03T13:15:08Z", "commit": {"oid": "2b6d69534f5b56cadf4d472870925d89ce218add"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9ad92c302184d5773a0bd4a3577f707393b8e628", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9ad92c302184d5773a0bd4a3577f707393b8e628", "committedDate": "2020-08-03T13:34:04Z", "message": "The tests must be fixed!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c8b841d53facfe32961b932436ce1787d000cc89", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c8b841d53facfe32961b932436ce1787d000cc89", "committedDate": "2020-08-03T14:24:19Z", "message": "One more attempt to fix handling of LEB128Writer"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2030, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}