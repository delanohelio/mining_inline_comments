{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc0NDY5MzIw", "number": 1809, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxOTowNjoyMlrOEdWeAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxOTowNjoyMlrOEdWeAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjEyMjg5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/java/concurrent/State.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxOTowNjoyMlrOHIdi-w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yOFQxMzo0NjoxMlrOHJGg7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNDc0Nw==", "bodyText": "This never seems to trip in our tests, after over 100 full runs. This means we don't know what happens after this happens.", "url": "https://github.com/DataDog/dd-trace-java/pull/1809#discussion_r478634747", "createdAt": "2020-08-27T19:06:22Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/java/concurrent/State.java", "diffHunk": "@@ -23,6 +23,11 @@ private State() {}\n \n   public boolean setContinuation(final TraceScope.Continuation continuation) {\n     final boolean result = continuationRef.compareAndSet(null, continuation);\n+    assert result", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b0ff031d4124c1c20b202ac7fa623cca5222c7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwMjQ1Mw==", "bodyText": "So are regular Java assert statements enabled in tests by default in gradle?", "url": "https://github.com/DataDog/dd-trace-java/pull/1809#discussion_r479302453", "createdAt": "2020-08-28T13:42:33Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/java/concurrent/State.java", "diffHunk": "@@ -23,6 +23,11 @@ private State() {}\n \n   public boolean setContinuation(final TraceScope.Continuation continuation) {\n     final boolean result = continuationRef.compareAndSet(null, continuation);\n+    assert result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNDc0Nw=="}, "originalCommit": {"oid": "7b0ff031d4124c1c20b202ac7fa623cca5222c7c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTMwNTk2Ng==", "bodyText": "yes", "url": "https://github.com/DataDog/dd-trace-java/pull/1809#discussion_r479305966", "createdAt": "2020-08-28T13:46:12Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/java/concurrent/State.java", "diffHunk": "@@ -23,6 +23,11 @@ private State() {}\n \n   public boolean setContinuation(final TraceScope.Continuation continuation) {\n     final boolean result = continuationRef.compareAndSet(null, continuation);\n+    assert result", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODYzNDc0Nw=="}, "originalCommit": {"oid": "7b0ff031d4124c1c20b202ac7fa623cca5222c7c"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4907, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}