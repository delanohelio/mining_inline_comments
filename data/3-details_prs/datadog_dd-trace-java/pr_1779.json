{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY4ODc0Mjgx", "number": 1779, "title": "Replace SLF4J SimpleLogger with own compatible implementation", "bodyText": "This is the first step towards better logging.\nIt adds our own Logger implementation, using the shaded SLf4J API. This first logger is a drop in replacement for the SimpleLogger in both configuration and behavior so there should be no noticeable difference for the end user.\nGoing forward we can start to support markers, and runtime switchable log levels.", "createdAt": "2020-08-17T14:38:19Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1779", "merged": true, "mergeCommit": {"oid": "685ba6ef52257c1c999a9c4740299d12e711c19d"}, "closed": true, "closedAt": "2020-08-19T09:28:05Z", "author": {"login": "bantonsson"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc_zXCdAH2gAyNDY4ODc0MjgxOmM2ZmE3ZWJiZDA5MGNjNTIyMTM4NjAzYzQxYzc1NmRmY2E2ZjljNDQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdAJqWHAFqTQ2OTYyODkxMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c6fa7ebbd090cc522138603c41c756dfca6f9c44", "committedDate": "2020-08-17T14:33:38Z", "message": "Replace SLF4J SimpleLogger with own compatible implementation"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTI1MDEz", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-468525013", "createdAt": "2020-08-17T14:40:38Z", "commit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo0MDozOFrOHBrq3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNDo0MDozOFrOHBrq3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTUyNjExMA==", "bodyText": "Just to confirm this supports markers?", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#discussion_r471526110", "createdAt": "2020-08-17T14:40:38Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/DDLogger.java", "diffHunk": "@@ -0,0 +1,362 @@\n+package datadog.trace.logging;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "originalPosition": 1}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjIwMTIz", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-468620123", "createdAt": "2020-08-17T16:34:07Z", "commit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNDowOFrOHBwJng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNDowOFrOHBwJng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU5OTUxOA==", "bodyText": "What's the worst case of making this threadlocal? Or perhaps trying to use java.time through method handles, falling back to the legacy API?", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#discussion_r471599518", "createdAt": "2020-08-17T16:34:08Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/simplelogger/SLCompatHelper.java", "diffHunk": "@@ -0,0 +1,107 @@\n+package datadog.trace.logging.simplelogger;\n+\n+import datadog.trace.logging.LogLevel;\n+import datadog.trace.logging.LoggerHelper;\n+import java.util.Date;\n+import org.slf4j.Marker;\n+\n+/**\n+ * A {@link LoggerHelper} that logs in a way compatible with the {@code SimpleLogger} from SLF4J.\n+ */\n+class SLCompatHelper extends LoggerHelper {\n+  private final String logName;\n+  private final LogLevel logLevel;\n+  private final SLCompatSettings settings;\n+\n+  SLCompatHelper(String name, SLCompatSettings settings) {\n+    this(settings.logNameForName(name), settings.logLevelForName(name), settings);\n+  }\n+\n+  SLCompatHelper(String logName, LogLevel logLevel, SLCompatSettings settings) {\n+    this.logName = logName;\n+    this.logLevel = logLevel;\n+    this.settings = settings;\n+  }\n+\n+  private void appendFormattedDate(StringBuilder builder, long timeMillis, long startTimeMillis) {\n+    if (settings.dateTimeFormatter != null) {\n+      Date date = new Date(timeMillis);\n+      String dateString;\n+      synchronized (settings.dateTimeFormatter) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjIxMTUy", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-468621152", "createdAt": "2020-08-17T16:35:32Z", "commit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNTozMlrOHBwM3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNTozMlrOHBwM3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwMDM1MA==", "bodyText": "try with resources?", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#discussion_r471600350", "createdAt": "2020-08-17T16:35:32Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/simplelogger/SLCompatSettings.java", "diffHunk": "@@ -0,0 +1,243 @@\n+package datadog.trace.logging.simplelogger;\n+\n+import datadog.trace.logging.LogLevel;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.PrintStream;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Properties;\n+\n+/** Settings that provide the same configurable options as {@code SimpleLogger} from SLF4J. */\n+public class SLCompatSettings {\n+\n+  public static final class Keys {\n+    // This is the package name that the shaded SimpleLogger had before. Use that for compatibility.\n+    private static final String PREFIX = \"datadog.slf4j.simpleLogger.\";\n+\n+    public static final String LOG_KEY_PREFIX = PREFIX + \"log.\";\n+    // This setting does not change anything in the behavior as of slf4j 1.7.30 so we ignore it\n+    // public static final String CACHE_OUTPUT_STREAM = PREFIX + \"cacheOutputStream\";\n+    public static final String WARN_LEVEL_STRING = PREFIX + \"warnLevelString\";\n+    public static final String LEVEL_IN_BRACKETS = PREFIX + \"levelInBrackets\";\n+    public static final String LOG_FILE = PREFIX + \"logFile\";\n+    public static final String SHOW_SHORT_LOG_NAME = PREFIX + \"showShortLogName\";\n+    public static final String SHOW_LOG_NAME = PREFIX + \"showLogName\";\n+    public static final String SHOW_THREAD_NAME = PREFIX + \"showThreadName\";\n+    public static final String DATE_TIME_FORMAT = PREFIX + \"dateTimeFormat\";\n+    public static final String SHOW_DATE_TIME = PREFIX + \"showDateTime\";\n+    public static final String DEFAULT_LOG_LEVEL = PREFIX + \"defaultLogLevel\";\n+\n+    // This is not available in SimpleLogger, but added here to simplify testing.\n+    static final String CONFIGURATION_FILE = PREFIX + \"configurationFile\";\n+  }\n+\n+  public static final class Defaults {\n+    // This setting does not change anything in the behavior as of slf4j 1.7.30 so we ignore it\n+    // static final boolean CACHE_OUTPUT_STREAM = false;\n+    public static final boolean LEVEL_IN_BRACKETS = false;\n+    public static final String LOG_FILE = \"System.err\";\n+    public static final boolean SHOW_SHORT_LOG_NAME = false;\n+    public static final boolean SHOW_LOG_NAME = true;\n+    public static final boolean SHOW_THREAD_NAME = true;\n+    public static final String DATE_TIME_FORMAT = null;\n+    public static final boolean SHOW_DATE_TIME = false;\n+    public static final String DEFAULT_LOG_LEVEL = \"INFO\";\n+\n+    public static final String CONFIGURATION_FILE = \"simplelogger.properties\";\n+  }\n+\n+  static PrintStream getPrintStream(String logFile) {\n+    switch (logFile.toLowerCase()) {\n+      case \"system.err\":\n+        return System.err;\n+      case \"system.out\":\n+        return System.out;\n+      default:\n+        try {\n+          FileOutputStream outputStream = new FileOutputStream(logFile);\n+          PrintStream printStream = new PrintStream(outputStream);\n+          return printStream;\n+        } catch (FileNotFoundException | SecurityException e) {\n+          // TODO maybe have support for delayed logging of early failures?\n+          return System.err;\n+        }\n+    }\n+  }\n+\n+  private static final class ResourceStreamPrivilegedAction\n+      implements PrivilegedAction<InputStream> {\n+    private final String fileName;\n+\n+    public ResourceStreamPrivilegedAction(String fileName) {\n+      this.fileName = fileName;\n+    }\n+\n+    @Override\n+    public InputStream run() {\n+      ClassLoader threadCL = Thread.currentThread().getContextClassLoader();\n+      if (threadCL != null) {\n+        return threadCL.getResourceAsStream(fileName);\n+      } else {\n+        return ClassLoader.getSystemResourceAsStream(fileName);\n+      }\n+    }\n+  }\n+\n+  static Properties loadProperties(final String fileName) {\n+    Properties fileProperties = null;\n+    // Load properties in the same way that SimpleLogger does\n+    InputStream inputStream =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "originalPosition": 93}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NjIyNTE5", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-468622519", "createdAt": "2020-08-17T16:37:27Z", "commit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNzoyN1rOHBwRKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjozNzoyN1rOHBwRKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwMTQ1MA==", "bodyText": "Is this ever closed? E.g. when the program shuts down? Does it need closing? It would be hard to know whose responsibility it is to close the stream if it could by System.err or System.out.", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#discussion_r471601450", "createdAt": "2020-08-17T16:37:27Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-logging/src/main/java/datadog/trace/logging/simplelogger/SLCompatSettings.java", "diffHunk": "@@ -0,0 +1,243 @@\n+package datadog.trace.logging.simplelogger;\n+\n+import datadog.trace.logging.LogLevel;\n+import java.io.FileNotFoundException;\n+import java.io.FileOutputStream;\n+import java.io.InputStream;\n+import java.io.PrintStream;\n+import java.security.AccessController;\n+import java.security.PrivilegedAction;\n+import java.text.DateFormat;\n+import java.text.SimpleDateFormat;\n+import java.util.Properties;\n+\n+/** Settings that provide the same configurable options as {@code SimpleLogger} from SLF4J. */\n+public class SLCompatSettings {\n+\n+  public static final class Keys {\n+    // This is the package name that the shaded SimpleLogger had before. Use that for compatibility.\n+    private static final String PREFIX = \"datadog.slf4j.simpleLogger.\";\n+\n+    public static final String LOG_KEY_PREFIX = PREFIX + \"log.\";\n+    // This setting does not change anything in the behavior as of slf4j 1.7.30 so we ignore it\n+    // public static final String CACHE_OUTPUT_STREAM = PREFIX + \"cacheOutputStream\";\n+    public static final String WARN_LEVEL_STRING = PREFIX + \"warnLevelString\";\n+    public static final String LEVEL_IN_BRACKETS = PREFIX + \"levelInBrackets\";\n+    public static final String LOG_FILE = PREFIX + \"logFile\";\n+    public static final String SHOW_SHORT_LOG_NAME = PREFIX + \"showShortLogName\";\n+    public static final String SHOW_LOG_NAME = PREFIX + \"showLogName\";\n+    public static final String SHOW_THREAD_NAME = PREFIX + \"showThreadName\";\n+    public static final String DATE_TIME_FORMAT = PREFIX + \"dateTimeFormat\";\n+    public static final String SHOW_DATE_TIME = PREFIX + \"showDateTime\";\n+    public static final String DEFAULT_LOG_LEVEL = PREFIX + \"defaultLogLevel\";\n+\n+    // This is not available in SimpleLogger, but added here to simplify testing.\n+    static final String CONFIGURATION_FILE = PREFIX + \"configurationFile\";\n+  }\n+\n+  public static final class Defaults {\n+    // This setting does not change anything in the behavior as of slf4j 1.7.30 so we ignore it\n+    // static final boolean CACHE_OUTPUT_STREAM = false;\n+    public static final boolean LEVEL_IN_BRACKETS = false;\n+    public static final String LOG_FILE = \"System.err\";\n+    public static final boolean SHOW_SHORT_LOG_NAME = false;\n+    public static final boolean SHOW_LOG_NAME = true;\n+    public static final boolean SHOW_THREAD_NAME = true;\n+    public static final String DATE_TIME_FORMAT = null;\n+    public static final boolean SHOW_DATE_TIME = false;\n+    public static final String DEFAULT_LOG_LEVEL = \"INFO\";\n+\n+    public static final String CONFIGURATION_FILE = \"simplelogger.properties\";\n+  }\n+\n+  static PrintStream getPrintStream(String logFile) {\n+    switch (logFile.toLowerCase()) {\n+      case \"system.err\":\n+        return System.err;\n+      case \"system.out\":\n+        return System.out;\n+      default:\n+        try {\n+          FileOutputStream outputStream = new FileOutputStream(logFile);\n+          PrintStream printStream = new PrintStream(outputStream);\n+          return printStream;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c6fa7ebbd090cc522138603c41c756dfca6f9c44"}, "originalPosition": 63}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14319a3810bd45c1d6956c76eef647c558594123", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/14319a3810bd45c1d6956c76eef647c558594123", "committedDate": "2020-08-18T12:05:57Z", "message": "Use java.time via MethodHandles when possible"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjA0MzE3", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-469604317", "createdAt": "2020-08-18T16:03:49Z", "commit": {"oid": "14319a3810bd45c1d6956c76eef647c558594123"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY5NjI4OTEz", "url": "https://github.com/DataDog/dd-trace-java/pull/1779#pullrequestreview-469628913", "createdAt": "2020-08-18T16:32:38Z", "commit": {"oid": "14319a3810bd45c1d6956c76eef647c558594123"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2133, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}