{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMDY5MDU2", "number": 1799, "title": "CI-App: Set CI and git tags in test spans", "bodyText": "Description\n\nSet CI and Git tags in test spans related to Jenkins.\nSet CI and Git tags in test spans related to GitLab Pipelines.\n\nThe datadog.trace.bootstrap.instrumentation.decorator.TestDecorator class is modified to obtain the CI and Git information available in the environment variables for the following CI providers:\n\nJenkins\nGitLab Pipelines", "createdAt": "2020-08-25T09:29:33Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1799", "merged": true, "mergeCommit": {"oid": "9850ca9b52a83f8c1f05c6d728e26cf39a63e9f6"}, "closed": true, "closedAt": "2020-08-27T15:45:54Z", "author": {"login": "drodriguezhdez"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdC8jTggFqTQ3NjUyMDQyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDCHjUAH2gAyNDczMDY5MDU2OjQ1NGQyNTJkZTYzY2I2ZTEyNDM2YmQ3MzYwMzk4OGQzMGNmOTUxYTQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NTIwNDIw", "url": "https://github.com/DataDog/dd-trace-java/pull/1799#pullrequestreview-476520420", "createdAt": "2020-08-27T08:57:57Z", "commit": {"oid": "7d7ea796685f958598b4ee571430619261c7bfc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1Nzo1N1rOHIG9PQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QwODo1Nzo1N1rOHIG9PQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODI2NDYzNw==", "bodyText": "Have you considered introducing a \"CISpanDecorator\" interface or similar which has method(s) this decorator could call to add CI tags to a span? Then you could have Jenkins and Gitlab implementations of that interface (and a shared abstract class with common code) and select the appropriate implementation in the TestDecorator constructor. It should also let you re-use the selected span decorator in TestFrameworkTest rather than have to repeat all those methods and constants everywhere.\nThis would avoid mixing all these different constants and methods in the same class and make clear which are specific to Jenkins/Gitlab. Also makes it easier to add other CI pipelines in the future.", "url": "https://github.com/DataDog/dd-trace-java/pull/1799#discussion_r478264637", "createdAt": "2020-08-27T08:57:57Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/instrumentation/decorator/TestDecorator.java", "diffHunk": "@@ -2,19 +2,68 @@\n \n import datadog.trace.api.DDSpanTypes;\n import datadog.trace.api.DDTags;\n+import datadog.trace.api.sampling.PrioritySampling;\n import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n import datadog.trace.bootstrap.instrumentation.api.Tags;\n import java.lang.annotation.Annotation;\n import java.lang.reflect.Method;\n import java.util.ArrayList;\n import java.util.List;\n+import lombok.Getter;\n import lombok.extern.slf4j.Slf4j;\n \n @Slf4j\n public abstract class TestDecorator extends BaseDecorator {\n-  public static final String TEST_PASS = \"PASS\";\n-  public static final String TEST_FAIL = \"FAIL\";\n-  public static final String TEST_SKIP = \"SKIP\";\n+\n+  public static final String TEST_PASS = \"pass\";\n+  public static final String TEST_FAIL = \"fail\";\n+  public static final String TEST_SKIP = \"skip\";\n+\n+  public static final String JENKINS = \"JENKINS_URL\";\n+  static final String JENKINS_PROVIDER_NAME = \"jenkins\";\n+  static final String JENKINS_PIPELINE_ID = \"BUILD_TAG\";\n+  static final String JENKINS_PIPELINE_NUMBER = \"BUILD_NUMBER\";\n+  static final String JENKINS_PIPELINE_URL = \"BUILD_URL\";\n+  static final String JENKINS_JOB_URL = \"JOB_URL\";\n+  static final String JENKINS_WORKSPACE_PATH = \"WORKSPACE\";\n+  static final String JENKINS_GIT_REPOSITORY_URL = \"GIT_URL\";\n+  static final String JENKINS_GIT_COMMIT = \"GIT_COMMIT\";\n+  static final String JENKINS_GIT_BRANCH = \"GIT_BRANCH\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7d7ea796685f958598b4ee571430619261c7bfc0"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NTc5MTgz", "url": "https://github.com/DataDog/dd-trace-java/pull/1799#pullrequestreview-476579183", "createdAt": "2020-08-27T10:15:56Z", "commit": {"oid": "c703f3b042864be0b052a1d4de4af001b0aa33e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NzI1NjQ5", "url": "https://github.com/DataDog/dd-trace-java/pull/1799#pullrequestreview-476725649", "createdAt": "2020-08-27T13:34:41Z", "commit": {"oid": "c703f3b042864be0b052a1d4de4af001b0aa33e2"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "258c1df38951d03618340b33b8e2a9272d452a3f", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/258c1df38951d03618340b33b8e2a9272d452a3f", "committedDate": "2020-08-27T14:55:44Z", "message": "Set SamplingPriority to SAMPLER_KEEP"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f1f7831b9546f17d3d34aaee34d5afb2f690ac5", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6f1f7831b9546f17d3d34aaee34d5afb2f690ac5", "committedDate": "2020-08-27T14:56:40Z", "message": "Added CI and Git tags to Test traces"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ae3aeaca1685606db7a63f701907257996a91ed9", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ae3aeaca1685606db7a63f701907257996a91ed9", "committedDate": "2020-08-27T14:56:52Z", "message": "Added comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "227fb5128566806ffe97fd62705e84c9092b2541", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/227fb5128566806ffe97fd62705e84c9092b2541", "committedDate": "2020-08-27T14:56:52Z", "message": "Reverting sampling priority forcing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "683029afb0acbaaf70d1e54a170a025e69f51603", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/683029afb0acbaaf70d1e54a170a025e69f51603", "committedDate": "2020-08-27T15:03:39Z", "message": "Added CI and Git tags to JUnit5 instrumentation."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c703f3b042864be0b052a1d4de4af001b0aa33e2", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c703f3b042864be0b052a1d4de4af001b0aa33e2", "committedDate": "2020-08-27T09:01:15Z", "message": "Reverting sampling priority forcing"}, "afterCommit": {"oid": "683029afb0acbaaf70d1e54a170a025e69f51603", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/683029afb0acbaaf70d1e54a170a025e69f51603", "committedDate": "2020-08-27T15:03:39Z", "message": "Added CI and Git tags to JUnit5 instrumentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "454d252de63cb6e12436bd73603988d30cf951a4", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/454d252de63cb6e12436bd73603988d30cf951a4", "committedDate": "2020-08-27T15:27:04Z", "message": "Add skip_reason tag to JUnit4 and TestNG test traces"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1947, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}