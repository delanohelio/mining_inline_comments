{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQ0NzA0Mjk5", "number": 1656, "title": "attempt to base64 decode invalid DDIds ", "bodyText": "This one comes from a support issue where Kafka Mirrormaker was reportedly base64 encoding Kafka headers, and the user was complaining that we wouldn't parse the trace IDs. I've investigated and there is no way to detect that this has happened, except trying to base64 decode the headers. Doing this \"just in case\" in the Kafka instrumentation would give other users a significant performance regression so we don't want to do this unless absolutely necessary. This isn't really the tracer's fault and the user needs to prevent infrastructure from mangling header data, but attempting to base64 decode in a catch block in DDId.from helps the user diagnose and fix their problem, avoids breaking trace lineage if they can't fix it right away, whilst preventing other users from paying for it.", "createdAt": "2020-07-06T11:07:34Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1656", "merged": true, "mergeCommit": {"oid": "1033f9bb487a2632001c5abf1b821fe1b127d3f7"}, "closed": true, "closedAt": "2020-07-06T18:28:08Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcyP76rgH2gAyNDQ0NzA0Mjk5OjZmYjNmMjk2Mjc4NTEyNGI4YjQwNTVkOTM2MWRmYjgwYTRjNTUwZDk=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcyVic-AFqTQ0MzMxMzUyNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "6fb3f2962785124b8b4055d9361dfb80a4c550d9", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6fb3f2962785124b8b4055d9361dfb80a4c550d9", "committedDate": "2020-07-06T11:56:19Z", "message": "attempt to base64 decode invalid DDIds to help users diagnose problems with their infrastructure and avoid breaking the trace lineage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7e047bcb3d073cf4743bc49d087a2766aa209c36", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7e047bcb3d073cf4743bc49d087a2766aa209c36", "committedDate": "2020-07-06T11:01:55Z", "message": "attempt to base64 decode invalid DDIds to help users diagnose problems with their infrastructure and avoid breaking the trace lineage"}, "afterCommit": {"oid": "6fb3f2962785124b8b4055d9361dfb80a4c550d9", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6fb3f2962785124b8b4055d9361dfb80a4c550d9", "committedDate": "2020-07-06T11:56:19Z", "message": "attempt to base64 decode invalid DDIds to help users diagnose problems with their infrastructure and avoid breaking the trace lineage"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0479918f8cf75328daacbae0e823a88029a82f3b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0479918f8cf75328daacbae0e823a88029a82f3b", "committedDate": "2020-07-06T13:00:16Z", "message": "avoid guava causing problems"}, "afterCommit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0", "committedDate": "2020-07-06T13:10:17Z", "message": "avoid guava causing problems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMTQwMjU3", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#pullrequestreview-443140257", "createdAt": "2020-07-06T14:42:29Z", "commit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0MjoyOVrOGtaUXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wNlQxNDo0MjoyOVrOGtaUXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1MDI3MDMwMA==", "bodyText": "I'm just wondering if considering this is a special case, we should add this catch block to the place that extracts the  headers into a context, perhaps by creating a second TextMapExtractAdapter to handle the failure case", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#discussion_r450270300", "createdAt": "2020-07-06T14:42:29Z", "author": {"login": "devinsba"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/DDId.java", "diffHunk": "@@ -54,7 +60,26 @@ public static DDId from(long id) {\n    * @throws NumberFormatException\n    */\n   public static DDId from(String s) throws NumberFormatException {\n-    return DDId.create(parseUnsignedLong(s), s);\n+    try {\n+      return DDId.create(parseUnsignedLong(s), s);\n+    } catch (NumberFormatException e) {\n+      // we have reports of Kakfa mirror maker base64 encoding record headers\n+      // attempting to base64 decode the ids here rather than in the Kafka instrumentation\n+      // helps users understand they have a problem without making other users pay for it\n+      if (null != s) {\n+        try {\n+          String decoded = new String(BASE64.decode(s), StandardCharsets.ISO_8859_1);\n+          log.debug(\n+              \"id {} was base 64 encoded to {}, it was decoded but this indicates there is a problem elsewhere in your system\",\n+              decoded,\n+              s);\n+          return DDId.create(parseUnsignedLong(decoded), decoded);\n+        } catch (Exception ignored) {\n+\n+        }\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0"}, "originalPosition": 47}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMjAyNjkz", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#pullrequestreview-443202693", "createdAt": "2020-07-06T15:53:14Z", "commit": {"oid": "20f65b4e9cd3ee8ce9d2cb2a52f9c073d304dbc0"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "914c76196fc451114de67af0d3d02cc2ec972081", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/914c76196fc451114de67af0d3d02cc2ec972081", "committedDate": "2020-07-06T17:47:14Z", "message": "avoid guava causing problems"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e588dfae72dbae02284f6feadeca42189d92af0f", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e588dfae72dbae02284f6feadeca42189d92af0f", "committedDate": "2020-07-06T17:40:52Z", "message": "exclude Base64Encoder from coverage rules"}, "afterCommit": {"oid": "914c76196fc451114de67af0d3d02cc2ec972081", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/914c76196fc451114de67af0d3d02cc2ec972081", "committedDate": "2020-07-06T17:47:14Z", "message": "avoid guava causing problems"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQzMzEzNTI1", "url": "https://github.com/DataDog/dd-trace-java/pull/1656#pullrequestreview-443313525", "createdAt": "2020-07-06T18:27:56Z", "commit": {"oid": "914c76196fc451114de67af0d3d02cc2ec972081"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2236, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}