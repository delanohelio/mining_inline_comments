{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDkwNTkzOTYx", "number": 1894, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMzowODo1M1rOEl3tmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjo0OTozNlrOEmEUMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MTQ1NTYxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMzowODo1M1rOHVlcUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMVQyMzoxMzoxNVrOHVlhwA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM5NTYwMQ==", "bodyText": "So now, we're reporting even when the ref count isn't zero and the item isn't on top.\nGood, I left that alone originally to keep the change minimal, but I always thought that was wrong.", "url": "https://github.com/DataDog/dd-trace-java/pull/1894#discussion_r492395601", "createdAt": "2020-09-21T23:08:53Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -170,15 +168,16 @@ public void close() {\n         }\n       }\n \n+      final boolean alive = decrementReferences();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e31720153734d25cb33f03d90327a5235ffbce4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM5Njk5Mg==", "bodyText": "Ah, I guess we were doing that in prior change.  This just moves the decrement down.  Good, I think that's more readable.", "url": "https://github.com/DataDog/dd-trace-java/pull/1894#discussion_r492396992", "createdAt": "2020-09-21T23:13:15Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -170,15 +168,16 @@ public void close() {\n         }\n       }\n \n+      final boolean alive = decrementReferences();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjM5NTYwMQ=="}, "originalCommit": {"oid": "7e31720153734d25cb33f03d90327a5235ffbce4"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MjE4NDE1OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjozMTo1MFrOHVr0bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQwNjozMTo1MFrOHVr0bw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjUwMDA3OQ==", "bodyText": "Nice doing the cleanup before we potentially call the code that is not under our control.", "url": "https://github.com/DataDog/dd-trace-java/pull/1894#discussion_r492500079", "createdAt": "2020-09-22T06:31:50Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -170,15 +168,16 @@ public void close() {\n         }\n       }\n \n+      final boolean alive = decrementReferences();\n       if (alive) {\n         return;\n       }\n \n+      scopeStack.cleanup();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e31720153734d25cb33f03d90327a5235ffbce4"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA4MzUyMDUxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjo0OTozNlrOHV4YOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yMlQxMjo0OTozNlrOHV4YOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MjcwNTg0OA==", "bodyText": "+1, hiding all that list management complexity makes every usage of this clearer.", "url": "https://github.com/DataDog/dd-trace-java/pull/1894#discussion_r492705848", "createdAt": "2020-09-22T12:49:36Z", "author": {"login": "arkban"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -258,27 +257,17 @@ public void afterActivated() {\n    * cleanup() is called to ensure the invariant\n    */\n   static final class ScopeStack {\n-    private static final int MIN_STACK_LENGTH = 16;\n-\n-    ContinuableScope[] stack = new ContinuableScope[MIN_STACK_LENGTH];\n-    // The position of the top-most scope guaranteed to be active\n-    // 0 if empty\n-    int topPos = 0;\n+    private final ArrayDeque<ContinuableScope> stack = new ArrayDeque<>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e31720153734d25cb33f03d90327a5235ffbce4"}, "originalPosition": 47}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4837, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}