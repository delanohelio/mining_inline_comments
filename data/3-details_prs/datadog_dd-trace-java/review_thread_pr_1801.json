{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczMjEwMjQ2", "number": 1801, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTowMTo1NFrOEce34A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTowMTo1NFrOEce34A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MzAxNDA4OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQwOTowMTo1NFrOHHCxLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNlQxNjoxNzoyNlrOHHTqxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg==", "bodyText": "I think you need latest dependency expressions here", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477147436", "createdAt": "2020-08-26T09:01:54Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE1MzQwNg==", "bodyText": "Could you explain why, and how it's supposed to be used? I thought that is meant to run the test on the latest deps, and that doesn't seem to be done in all instrumentations.", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477153406", "createdAt": "2020-08-26T09:12:02Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE5NDEyOA==", "bodyText": "The idea is that the library can change and the instrumentation will stop working if it does. Downloading the latest dependency gives an early warning that a library breaking the instrumentation has been released, and that the instrumentation should be amended, or its applicability should be capped via muzzle, and a new instrumentation targeting the new library version should be implemented.", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477194128", "createdAt": "2020-08-26T10:18:45Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIwODUxMg==", "bodyText": "Yes, but I thought that muzzle was supposed to catch changes in APIs, which is what we are instrumenting here.\nAnyway, I can add a latestDeps test section as well. Some other projects reuse the test directory for that, is that ok to do?", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477208512", "createdAt": "2020-08-26T10:47:47Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIxNzgxNA==", "bodyText": "Muzzle verifies that classes and methods we expect to be present are present, it doesn't run any tests though.", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477217814", "createdAt": "2020-08-26T11:06:38Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzIyNTczMA==", "bodyText": "What I meant was add some dependencies to the build file like this from e.g. spring-webflux\n  latestDepTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.0.+'\n  latestDepTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '2.0.+'\n  latestDepTestCompile group: 'org.springframework.boot', name: 'spring-boot-starter-reactor-netty', version: '2.0.+'", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477225730", "createdAt": "2020-08-26T11:22:00Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI0OTA3NA==", "bodyText": "Is that enough? I thought that we needed a new testSet with the org.unbroken-dome.test-sets plugin.", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477249074", "createdAt": "2020-08-26T12:07:26Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzI2OTg0MQ==", "bodyText": "Yes that's necessary, as in the webflux example", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477269841", "createdAt": "2020-08-26T12:43:06Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzQyNDMyNg==", "bodyText": "A latestDepTest have been added...", "url": "https://github.com/DataDog/dd-trace-java/pull/1801#discussion_r477424326", "createdAt": "2020-08-26T16:17:26Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/spring-jms-3.1/spring-jms-3.1.gradle", "diffHunk": "@@ -0,0 +1,24 @@\n+muzzle {\n+  pass {\n+    group = 'org.springframework'\n+    module = 'spring-jms'\n+    versions = \"[3.1.0.RELEASE,]\"\n+    extraDependency 'javax.jms:jms-api:1.1-rev-1'\n+  }\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+dependencies {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NzE0NzQzNg=="}, "originalCommit": {"oid": "bb34ca65753f7facdfdeae300ee45d2bd3776376"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4897, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}