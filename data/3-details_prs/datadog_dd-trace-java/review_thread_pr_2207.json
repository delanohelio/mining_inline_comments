{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTQwNTEyMDU4", "number": 2207, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTowNzozNVrOFGInzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTowNzozNVrOFGInzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQxOTc3MDM2OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTowNzozNVrOIG_6bw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQxMTowOToyM1rOIG_-dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwOTUxOQ==", "bodyText": "is this extra debug check still needed now that getMetric is no longer called below?", "url": "https://github.com/DataDog/dd-trace-java/pull/2207#discussion_r544209519", "createdAt": "2020-12-16T11:07:35Z", "author": {"login": "mcculls"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -249,14 +251,18 @@ public boolean setSamplingPriority(final int newPriority) {\n     // sync with lockSamplingPriority\n     synchronized (this) {\n       if (samplingPriorityLocked) {\n-        log.debug(\n-            \"samplingPriority locked at {}. Refusing to set to {}\",\n-            getMetric(PRIORITY_SAMPLING_KEY),\n-            newPriority);\n+        if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96feac163a2b1b08ff02b53fca4aae61e9c2316c"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIxMDU0OQ==", "bodyText": "yes it prevents autoboxing", "url": "https://github.com/DataDog/dd-trace-java/pull/2207#discussion_r544210549", "createdAt": "2020-12-16T11:09:23Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/DDSpanContext.java", "diffHunk": "@@ -249,14 +251,18 @@ public boolean setSamplingPriority(final int newPriority) {\n     // sync with lockSamplingPriority\n     synchronized (this) {\n       if (samplingPriorityLocked) {\n-        log.debug(\n-            \"samplingPriority locked at {}. Refusing to set to {}\",\n-            getMetric(PRIORITY_SAMPLING_KEY),\n-            newPriority);\n+        if (log.isDebugEnabled()) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDIwOTUxOQ=="}, "originalCommit": {"oid": "96feac163a2b1b08ff02b53fca4aae61e9c2316c"}, "originalPosition": 17}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4550, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}