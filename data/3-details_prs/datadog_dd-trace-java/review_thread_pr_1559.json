{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMxMjc3NTgz", "number": 1559, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxOToxMFrOEDkdBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxOToxMFrOEDkdBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcyMTc4NDM3OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java/datadog/exceptions/instrumentation/ExceptionInstrumentation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wOFQxODoxOToxMFrOGgqd9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMVQxMDowMjo0OVrOGiWxAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMzQxNQ==", "bodyText": "The class name should be renamed to match.", "url": "https://github.com/DataDog/dd-trace-java/pull/1559#discussion_r436903415", "createdAt": "2020-06-08T18:19:10Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java/datadog/exceptions/instrumentation/ExceptionInstrumentation.java", "diffHunk": "@@ -13,12 +13,7 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-/**\n- * Provides instrumentation of {@linkplain Exception} constructor. <br>\n- * {@linkplain Exception}, as opposed to {@linkplain Throwable} was deliberately chosen such that we\n- * don't instrument {@linkplain Error} class/subclasses since they are tracked by a native JFR event\n- * already.\n- */\n+/** Provides instrumentation of {@linkplain Throwable} constructor. <br> */\n @AutoService(Instrumenter.class)\n public final class ExceptionInstrumentation extends Instrumenter.Default {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dfb476b3f1a0e734e8038ae67e3e1bc67615bd47"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzODY3Nzc2MA==", "bodyText": "I will rename only the advice and instrumentation classes since they deal with the exact class. The rest of the code is more about 'exceptions' as a concept rather than a concrete Java class and eg. ThrowableSampleEvent sounds strange, at least to me.", "url": "https://github.com/DataDog/dd-trace-java/pull/1559#discussion_r438677760", "createdAt": "2020-06-11T10:02:49Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java/datadog/exceptions/instrumentation/ExceptionInstrumentation.java", "diffHunk": "@@ -13,12 +13,7 @@\n import net.bytebuddy.description.type.TypeDescription;\n import net.bytebuddy.matcher.ElementMatcher;\n \n-/**\n- * Provides instrumentation of {@linkplain Exception} constructor. <br>\n- * {@linkplain Exception}, as opposed to {@linkplain Throwable} was deliberately chosen such that we\n- * don't instrument {@linkplain Error} class/subclasses since they are tracked by a native JFR event\n- * already.\n- */\n+/** Provides instrumentation of {@linkplain Throwable} constructor. <br> */\n @AutoService(Instrumenter.class)\n public final class ExceptionInstrumentation extends Instrumenter.Default {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNjkwMzQxNQ=="}, "originalCommit": {"oid": "dfb476b3f1a0e734e8038ae67e3e1bc67615bd47"}, "originalPosition": 12}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 221, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}