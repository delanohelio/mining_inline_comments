{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk0MTEzMjQ5", "number": 1918, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo1ODozMlrOEoJ6UQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo1ODozMlrOEoJ6UQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTQwODgxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNTo1ODozMlrOHZFMUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwOToxMzo1MVrOHZj2Jw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2MTUyMA==", "bodyText": "it's 3rd place where we use this pattern ( isAppUsingCustomLogManager(), isDebugMode() ) in this file. But I'm still not sure whatever it deserves to be a separate method.\nand here also:\n\n  \n    \n      dd-trace-java/internal-api/src/main/java/datadog/trace/bootstrap/config/provider/EnvironmentConfigSource.java\n    \n    \n         Line 22\n      in\n      c1df100\n    \n    \n    \n    \n\n        \n          \n           private static String propertyNameToEnvironmentVariableName(final String setting) { \n        \n    \n  \n\n\nhttps://github.com/DataDog/dd-trace-java/blob/master/internal-api/src/main/java/datadog/trace/api/Config.java", "url": "https://github.com/DataDog/dd-trace-java/pull/1918#discussion_r496061520", "createdAt": "2020-09-28T15:58:32Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -435,6 +437,21 @@ private static boolean isDebugMode() {\n     return false;\n   }\n \n+  /**\n+   * Determine if we should log startup info messages according to dd.trace.startup.logs\n+   *\n+   * @return true if we should\n+   */\n+  private static boolean isStartupLogsEnabled() {\n+    final String startupLogsSysprop = \"dd.trace.startup.logs\";\n+    String startupLogsEnabled = System.getProperty(startupLogsSysprop);\n+    if (startupLogsEnabled == null) {\n+      startupLogsEnabled = System.getenv(startupLogsSysprop.replace('.', '_').toUpperCase());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "440989a704cfe5de169cd06df4c3f30445941802"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjU2Mzc1MQ==", "bodyText": "yes, I'll have a go at clearing this up in a follow-up PR - I found propertyNameToEnvironmentVariableName prepends \"dd.\" to the property string before converting it to an environment variable, which is subtly different from the direct system-property name to environment variable conversions that don't do this prepend. We also have two implementations of propertyNameToEnvironmentVariableName in the codebase that could be avoided.", "url": "https://github.com/DataDog/dd-trace-java/pull/1918#discussion_r496563751", "createdAt": "2020-09-29T09:13:51Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -435,6 +437,21 @@ private static boolean isDebugMode() {\n     return false;\n   }\n \n+  /**\n+   * Determine if we should log startup info messages according to dd.trace.startup.logs\n+   *\n+   * @return true if we should\n+   */\n+  private static boolean isStartupLogsEnabled() {\n+    final String startupLogsSysprop = \"dd.trace.startup.logs\";\n+    String startupLogsEnabled = System.getProperty(startupLogsSysprop);\n+    if (startupLogsEnabled == null) {\n+      startupLogsEnabled = System.getenv(startupLogsSysprop.replace('.', '_').toUpperCase());\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA2MTUyMA=="}, "originalCommit": {"oid": "440989a704cfe5de169cd06df4c3f30445941802"}, "originalPosition": 23}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4861, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}