{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAzNTA0NzU1", "number": 1990, "title": "RejectedExecutionHandlerInstrumentation tests and fixes", "bodyText": "Ensuring Guava rejected tasks have their continuations closed reliably requires changing the way we instrument Executor.execute so this can be handled later on.", "createdAt": "2020-10-14T16:42:38Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1990", "merged": true, "mergeCommit": {"oid": "15ee2562b42310705dc22d6223dd410c73cf836e"}, "closed": true, "closedAt": "2020-10-15T10:52:33Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdSf35ZgH2gAyNTAzNTA0NzU1OmM2MzVlMjU1NzhhZGM4NzEwNzUwODVkMDBjOThlODZhNGE5YWE4YmI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSu-iogBqjM4ODA3MDk3OTk=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "c635e25578adc871075085d00c98e86a4a9aa8bb", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c635e25578adc871075085d00c98e86a4a9aa8bb", "committedDate": "2020-10-14T16:35:59Z", "message": "add cancel ForkJoinTask variant to test"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c6707e1af1a329a196644279772ef7ebd04c2b55", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c6707e1af1a329a196644279772ef7ebd04c2b55", "committedDate": "2020-10-14T17:36:53Z", "message": "more debugging"}, "afterCommit": {"oid": "93dd207b772f3b302fcd8d7add94cb2505fbdbba", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/93dd207b772f3b302fcd8d7add94cb2505fbdbba", "committedDate": "2020-10-14T19:36:05Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93dd207b772f3b302fcd8d7add94cb2505fbdbba", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/93dd207b772f3b302fcd8d7add94cb2505fbdbba", "committedDate": "2020-10-14T19:36:05Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}, "afterCommit": {"oid": "e8b07b43e2e53a9457e9200e417fa7317dd941e4", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e8b07b43e2e53a9457e9200e417fa7317dd941e4", "committedDate": "2020-10-14T19:39:01Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "e8b07b43e2e53a9457e9200e417fa7317dd941e4", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e8b07b43e2e53a9457e9200e417fa7317dd941e4", "committedDate": "2020-10-14T19:39:01Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}, "afterCommit": {"oid": "2ec43c7bd76c760d15ac397fcbb0b024b4be691d", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2ec43c7bd76c760d15ac397fcbb0b024b4be691d", "committedDate": "2020-10-14T19:41:09Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2ec43c7bd76c760d15ac397fcbb0b024b4be691d", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2ec43c7bd76c760d15ac397fcbb0b024b4be691d", "committedDate": "2020-10-14T19:41:09Z", "message": "only field-inject state into RunnableFuture in leaf level constructor"}, "afterCommit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0ec80b7f172b0f7b761275c3ad530783b0b48e2e", "committedDate": "2020-10-14T21:56:08Z", "message": "make sure ThreadPoolExecutor rejection policies are matched, which fixes ThreadPoolExecutor related test flakiness"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4ODEzOTky", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#pullrequestreview-508813992", "createdAt": "2020-10-14T22:28:37Z", "commit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA4OTY3NDMx", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#pullrequestreview-508967431", "createdAt": "2020-10-15T05:44:14Z", "commit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNTo0NDoxNFrOHhxlog==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNVQwNTo1NTowNVrOHhxzZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE3NzUwNg==", "bodyText": "Not something to change in this PR, but a broader question. This is fine for an interface but would block a class from getting the fields injected by loading the class afaics. Should we try to use String consistently throughout the code?", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#discussion_r505177506", "createdAt": "2020-10-15T05:44:14Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/RejectedExecutionHandlerInstrumentation.java", "diffHunk": "@@ -28,25 +29,27 @@ public RejectedExecutionHandlerInstrumentation() {\n \n   @Override\n   public ElementMatcher<? super TypeDescription> typeMatcher() {\n-    return implementsInterface(named(\"java.util.concurrent.RejectedExecutionHandler\"));\n+    return NameMatchers.<TypeDescription>namedOneOf(\n+            \"java.util.concurrent.ThreadPoolExecutor$AbortPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy\")\n+        .or(implementsInterface(named(RejectedExecutionHandler.class.getName())));\n   }\n \n   @Override\n   public Map<String, String> contextStore() {\n     Map<String, String> contextStore = new HashMap<>(4);\n-    contextStore.put(\"java.util.concurrent.RunnableFuture\", State.class.getName());\n+    contextStore.put(RunnableFuture.class.getName(), State.class.getName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE3OTgwNg==", "bodyText": "So they all implement RejectedExecutionHandler. Why do we need to name them separately?", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#discussion_r505179806", "createdAt": "2020-10-15T05:51:36Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/RejectedExecutionHandlerInstrumentation.java", "diffHunk": "@@ -28,25 +29,27 @@ public RejectedExecutionHandlerInstrumentation() {\n \n   @Override\n   public ElementMatcher<? super TypeDescription> typeMatcher() {\n-    return implementsInterface(named(\"java.util.concurrent.RejectedExecutionHandler\"));\n+    return NameMatchers.<TypeDescription>namedOneOf(\n+            \"java.util.concurrent.ThreadPoolExecutor$AbortPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy\")\n+        .or(implementsInterface(named(RejectedExecutionHandler.class.getName())));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNTE4MTAyOQ==", "bodyText": "The first argument is still a Runnable.", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#discussion_r505181029", "createdAt": "2020-10-15T05:55:05Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/java-concurrent/src/main/java/datadog/trace/instrumentation/java/concurrent/RejectedExecutionHandlerInstrumentation.java", "diffHunk": "@@ -28,25 +29,27 @@ public RejectedExecutionHandlerInstrumentation() {\n \n   @Override\n   public ElementMatcher<? super TypeDescription> typeMatcher() {\n-    return implementsInterface(named(\"java.util.concurrent.RejectedExecutionHandler\"));\n+    return NameMatchers.<TypeDescription>namedOneOf(\n+            \"java.util.concurrent.ThreadPoolExecutor$AbortPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$DiscardOldestPolicy\",\n+            \"java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy\")\n+        .or(implementsInterface(named(RejectedExecutionHandler.class.getName())));\n   }\n \n   @Override\n   public Map<String, String> contextStore() {\n     Map<String, String> contextStore = new HashMap<>(4);\n-    contextStore.put(\"java.util.concurrent.RunnableFuture\", State.class.getName());\n+    contextStore.put(RunnableFuture.class.getName(), State.class.getName());\n     // TODO get rid of this\n-    contextStore.put(\"java.util.concurrent.Runnable\", State.class.getName());\n+    contextStore.put(Runnable.class.getName(), State.class.getName());\n     return Collections.unmodifiableMap(contextStore);\n   }\n \n   @Override\n   public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n     return Collections.singletonMap(\n-        isMethod()\n-            .and(named(\"rejectedExecution\"))\n-            .and(takesArgument(0, named(\"java.util.concurrent.Runnable\"))),\n-        getClass().getName() + \"$Reject\");\n+        isMethod().and(named(\"rejectedExecution\")), getClass().getName() + \"$Reject\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA5MTMxNDMx", "url": "https://github.com/DataDog/dd-trace-java/pull/1990#pullrequestreview-509131431", "createdAt": "2020-10-15T08:20:25Z", "commit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7d147d588382dcc7a03573bd9d6a8e17a3d7b36e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7d147d588382dcc7a03573bd9d6a8e17a3d7b36e", "committedDate": "2020-10-15T09:35:59Z", "message": "make sure ThreadPoolExecutor rejection policies are matched, which fixes ThreadPoolExecutor related test flakiness"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fef1bf28c4afc0d406bc075ebf0c7c16433b1f6a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fef1bf28c4afc0d406bc075ebf0c7c16433b1f6a", "committedDate": "2020-10-15T09:35:59Z", "message": "disable cancellation tests for executors we can't reliably handle rejection from yet"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0ec80b7f172b0f7b761275c3ad530783b0b48e2e", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0ec80b7f172b0f7b761275c3ad530783b0b48e2e", "committedDate": "2020-10-14T21:56:08Z", "message": "make sure ThreadPoolExecutor rejection policies are matched, which fixes ThreadPoolExecutor related test flakiness"}, "afterCommit": {"oid": "a76e545064a05c795d4bdcd751bd05fa507e40a1", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a76e545064a05c795d4bdcd751bd05fa507e40a1", "committedDate": "2020-10-15T09:35:59Z", "message": "more detailed task rejection tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a76e545064a05c795d4bdcd751bd05fa507e40a1", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a76e545064a05c795d4bdcd751bd05fa507e40a1", "committedDate": "2020-10-15T09:35:59Z", "message": "more detailed task rejection tests"}, "afterCommit": {"oid": "5b23cc9d1f62e82de10a0797e2f915e1031702da", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5b23cc9d1f62e82de10a0797e2f915e1031702da", "committedDate": "2020-10-15T09:54:13Z", "message": "more detailed task rejection tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5b23cc9d1f62e82de10a0797e2f915e1031702da", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5b23cc9d1f62e82de10a0797e2f915e1031702da", "committedDate": "2020-10-15T09:54:13Z", "message": "more detailed task rejection tests"}, "afterCommit": {"oid": "5aa3c6e16de4a191f595d36b5ffc662c43ce6c74", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5aa3c6e16de4a191f595d36b5ffc662c43ce6c74", "committedDate": "2020-10-15T09:57:25Z", "message": "more detailed task rejection tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5aa3c6e16de4a191f595d36b5ffc662c43ce6c74", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5aa3c6e16de4a191f595d36b5ffc662c43ce6c74", "committedDate": "2020-10-15T09:57:25Z", "message": "more detailed task rejection tests"}, "afterCommit": {"oid": "88e644d65e6c7fa47d8551afb39fb1974bb4a1ab", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/88e644d65e6c7fa47d8551afb39fb1974bb4a1ab", "committedDate": "2020-10-15T10:09:21Z", "message": "more detailed task rejection tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9fc5cd3f71ccacebe32c2b7e8ca230bd6af2f5aa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9fc5cd3f71ccacebe32c2b7e8ca230bd6af2f5aa", "committedDate": "2020-10-15T10:11:42Z", "message": "more detailed task rejection tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "88e644d65e6c7fa47d8551afb39fb1974bb4a1ab", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/88e644d65e6c7fa47d8551afb39fb1974bb4a1ab", "committedDate": "2020-10-15T10:09:21Z", "message": "more detailed task rejection tests"}, "afterCommit": {"oid": "9fc5cd3f71ccacebe32c2b7e8ca230bd6af2f5aa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9fc5cd3f71ccacebe32c2b7e8ca230bd6af2f5aa", "committedDate": "2020-10-15T10:11:42Z", "message": "more detailed task rejection tests"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2981, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}