{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NDQxMjI1", "number": 2051, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo0MDo0N1rOE1qUpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo0MDo0N1rOE1qUpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NzAzMzk4OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQxMzo0MDo0N1rOHuDvCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wOVQwODoyMDo0N1rOHvjWBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw==", "bodyText": "just curious: will this format be compatible with IntelliJ analyse window?", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r518057737", "createdAt": "2020-11-05T13:40:47Z", "author": {"login": "lb5tr"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODE0MzE0Mg==", "bodyText": "good idea! I'll check and in case try to format in a compatible way", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r518143142", "createdAt": "2020-11-05T15:34:29Z", "author": {"login": "mellon85"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw=="}, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODY1OTU4Mw==", "bodyText": "I had to change the format a bit but it's not compatible, copying anything inside [exception: ... ] will work.", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r518659583", "createdAt": "2020-11-06T10:28:29Z", "author": {"login": "mellon85"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw=="}, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwNzM0Nw==", "bodyText": "If you add a space following exception: and remove the surrounding brackets, would that work?  Seems like simple normalization (without editing the text) would be a useful attribute", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r518807347", "createdAt": "2020-11-06T15:01:54Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw=="}, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODgwODExMA==", "bodyText": "Oh, looks like maybe you fixed it below...", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r518808110", "createdAt": "2020-11-06T15:03:06Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw=="}, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxOTYyNDE5OA==", "bodyText": "Yes, it works by just pasting the whole logline, no additional cleaning needed", "url": "https://github.com/DataDog/dd-trace-java/pull/2051#discussion_r519624198", "createdAt": "2020-11-09T08:20:47Z", "author": {"login": "mellon85"}, "path": "dd-java-agent/agent-logging/src/test/groovy/datadog/trace/logging/simplelogger/SLCompatHelperTest.groovy", "diffHunk": "@@ -97,6 +97,24 @@ class SLCompatHelperTest extends Specification {\n     outputStream.toString() == \"[$thread] ERROR foo - log\\n${NoStackException.getName()}: wrong\\n\"\n   }\n \n+  def \"test logging with an embedded exception in the message\"() {\n+    setup:\n+    def outputStream = new ByteArrayOutputStream()\n+    def printStream = new PrintStream(outputStream, true)\n+    def props = new Properties()\n+    props.setProperty(SLCompatSettings.Keys.EMBED_EXCEPTION, \"true\")\n+    def settings = new SLCompatSettings(props, new Properties(), printStream)\n+    def helper = new SLCompatHelper(\"foo\", settings)\n+    try {\n+      throw new IOException(\"wrong\")\n+    } catch(Exception exception) {\n+      helper.log(LogLevel.ERROR, \"log\", exception)\n+    }\n+\n+    expect:\n+    outputStream.toString() ==~ /^.* ERROR foo - log \\[exception:java\\.io\\.IOException: wrong\\]\\[stack:\\[.*\\]\\]\\n$/", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxODA1NzczNw=="}, "originalCommit": {"oid": "d20a47d23187ce5806387d2742beb1531b6d1f0f"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4782, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}