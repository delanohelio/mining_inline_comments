{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAwMjAxMzg4", "number": 1965, "title": "Servlet RequestDispatcher and Spring MVC 404 fixes", "bodyText": "This started as a fix to the RequestDispatcher commented out tests and ended up as much more.  Lots of changes so I'm being extra detailed with this description\nFunctionality fixes\n\nRequestDispatcher did not set the HTTP_STATUS tag (this required reflection because its only available in servlet 3)\nRequestDispatcher did not properly set 404 resource name when forwarding\nRequestDispatcher did not set 500 status when exception was thrown\nSynchronous RequestDispatcher did not set servlet.dispatch tag (only async dispatch did)\nSpring-mvc instrumentation did not set 404 resource name for 404 response status\nNewer versions of Jetty create multiple response spans on redirect\n\nTesting improvements\nAdded childOfPrevious() to SpanAssert\nThis simplifies span assertion declarations and allow for conditional \"in between\" spans without indexes being incorrect.  I'll update other non-HttpServer tests in another PR\nAdded servlet instrumentation to the servlet:request-3 tests\nThe fact that request-3 was tested without servlet was a big hole in the testing.  Adding it however required many structural changes to how the servlet tests were run\nAdded a conditional responseSpan to HttpServerTest tests\nThe servlet instrumentation creates a \"response span\" for certain conditions.  Derived test classes can specify the conditions in which the extra response span is created.  Along with childOfPrevious, this simplifies trace(){...} blocks in HttpServerTest greatly.\nEnabled Servlet.forward and Servlet.include tests for Jetty and Tomcat\nThis uncovered a few bugs with RequestDispatch\nCreate the dispatch servlets in `AbstractServletTest\nDRY\nEnabled notFound, redirect, exception tests as appropriate\nThese tests were flagged off because it wasn't possible to model before.  Enabling uncovered gaps (eg Spring 404 handling)\nRemoved many cleanAndAssertTraces overrides\nMost of these were removing \"undesirable\" spans.  These spans are now properly modeled in the tests\nSpring Boot tests always ran with the DatadogFilteringClassloader\nThis was a result of the component scan.  The point of having two separate test classes was to run with and without", "createdAt": "2020-10-08T21:32:06Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1965", "merged": true, "mergeCommit": {"oid": "d4cf4dc7e47a9b6a0977e2cec74fa805946ed7e3"}, "closed": true, "closedAt": "2020-10-13T16:48:32Z", "author": {"login": "randomanderson"}, "timelineItems": {"totalCount": 19, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdQo22MAFqTUwNTE5NDA0Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdSJqV6AFqTUwNzUxNDEzNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MTk0MDQz", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-505194043", "createdAt": "2020-10-08T21:56:07Z", "commit": {"oid": "bb687ed5ed9bcc47c397cc94ad72c277e7d13f20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTo1NjowN1rOHexyGQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMTo1NjowN1rOHexyGQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjAzNDk2OQ==", "bodyText": "Could we use a MethodHandle instead here?", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#discussion_r502034969", "createdAt": "2020-10-08T21:56:07Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -1,13 +1,32 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n+import static datadog.trace.api.cache.RadixTreeCache.HTTP_STATUSES;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.Tags;\n import datadog.trace.bootstrap.instrumentation.api.UTF8BytesString;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletResponse;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n   public static final RequestDispatcherDecorator DECORATE = new RequestDispatcherDecorator();\n   public static final CharSequence JAVA_WEB_SERVLET_DISPATCHER =\n       UTF8BytesString.createConstant(\"java-web-servlet-dispatcher\");\n \n+  private static Method STATUS_CODE_METHOD;\n+\n+  static {\n+    try {\n+      STATUS_CODE_METHOD = HttpServletResponse.class.getMethod(\"getStatus\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb687ed5ed9bcc47c397cc94ad72c277e7d13f20"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1MjEzODU2", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-505213856", "createdAt": "2020-10-08T22:38:47Z", "commit": {"oid": "bb687ed5ed9bcc47c397cc94ad72c277e7d13f20"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjozODo0N1rOHeywGg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOFQyMjozODo0N1rOHeywGg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjA1MDg0Mg==", "bodyText": "I think this can be final (assuming proper initialization below).", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#discussion_r502050842", "createdAt": "2020-10-08T22:38:47Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -1,13 +1,32 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n+import static datadog.trace.api.cache.RadixTreeCache.HTTP_STATUSES;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.Tags;\n import datadog.trace.bootstrap.instrumentation.api.UTF8BytesString;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.lang.reflect.InvocationTargetException;\n+import java.lang.reflect.Method;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletResponse;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n   public static final RequestDispatcherDecorator DECORATE = new RequestDispatcherDecorator();\n   public static final CharSequence JAVA_WEB_SERVLET_DISPATCHER =\n       UTF8BytesString.createConstant(\"java-web-servlet-dispatcher\");\n \n+  private static Method STATUS_CODE_METHOD;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bb687ed5ed9bcc47c397cc94ad72c277e7d13f20"}, "originalPosition": 20}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1Nzg4Nzky", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-505788792", "createdAt": "2020-10-09T15:40:38Z", "commit": {"oid": "7bc25e2727f61449851ff989beab5462892d7cc8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo0MDozOFrOHfPMiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wOVQxNTo0MDozOFrOHfPMiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMjUxNjg3Mg==", "bodyText": "I wish the DSL just let us embed child matchers inside of parents,  but until then, I think this is a reasonable step forward.", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#discussion_r502516872", "createdAt": "2020-10-09T15:40:38Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/dropwizard/src/test/groovy/DropwizardTest.groovy", "diffHunk": "@@ -75,14 +74,14 @@ class DropwizardTest extends HttpServerTest<DropwizardTestSupport> {\n   }\n \n   @Override\n-  void handlerSpan(TraceAssert trace, Object parent, ServerEndpoint endpoint = SUCCESS) {\n+  void handlerSpan(TraceAssert trace, ServerEndpoint endpoint = SUCCESS) {\n     trace.span {\n       serviceName expectedServiceName()\n       operationName \"jax-rs.request\"\n       resourceName \"${testResource().simpleName}.${endpoint.name().toLowerCase()}\"\n       spanType DDSpanTypes.HTTP_SERVER\n       errored endpoint == EXCEPTION\n-      childOf(parent as DDSpan)\n+      childOfPrevious()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7bc25e2727f61449851ff989beab5462892d7cc8"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA1OTM4NzA1", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-505938705", "createdAt": "2020-10-09T19:30:20Z", "commit": {"oid": "ed083c6724a7ef3cb50ad07b8fbb9894d329b5cb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e3b05e3c3cd579e8914ba9d122fc0b79c40e2f34", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e3b05e3c3cd579e8914ba9d122fc0b79c40e2f34", "committedDate": "2020-10-09T20:52:07Z", "message": "Add childOfPrevious to spanAssert"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c024ee5a902fec915945c1e7faa1860165fe0597", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c024ee5a902fec915945c1e7faa1860165fe0597", "committedDate": "2020-10-09T20:52:07Z", "message": "Request dispatcher fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "667e9332ecaa37bbda81a98b4d57eeac1e828a51", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/667e9332ecaa37bbda81a98b4d57eeac1e828a51", "committedDate": "2020-10-09T20:52:07Z", "message": "Test fixes and cleanup (tomcat)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1225be176f0f6c4cdf6524a25cf5b2f36c930b66", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1225be176f0f6c4cdf6524a25cf5b2f36c930b66", "committedDate": "2020-10-09T20:52:07Z", "message": "Jetty request-3 tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44e54ad56606c7c3379dc46bff47440567c2cf14", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/44e54ad56606c7c3379dc46bff47440567c2cf14", "committedDate": "2020-10-09T20:52:07Z", "message": "Spring mvc fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7532b8861f15bf0d34cf862d1ea22b3cf4c43e4e", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7532b8861f15bf0d34cf862d1ea22b3cf4c43e4e", "committedDate": "2020-10-09T20:52:07Z", "message": "Change comment wording"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6726b4d0e0df3471959f31d064a91dd5a6f11bf6", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6726b4d0e0df3471959f31d064a91dd5a6f11bf6", "committedDate": "2020-10-09T20:52:07Z", "message": "Small fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "435385b908d720796e790eb2cd073c700f0d3697", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/435385b908d720796e790eb2cd073c700f0d3697", "committedDate": "2020-10-09T20:52:07Z", "message": "Method handle instead of reflection"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a546ccf23bc038e6915b1e42932a36691a5df293", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a546ccf23bc038e6915b1e42932a36691a5df293", "committedDate": "2020-10-09T20:52:07Z", "message": "Fix test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1b40843738144f87219fa3e85290e59f73483993", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1b40843738144f87219fa3e85290e59f73483993", "committedDate": "2020-10-09T20:52:07Z", "message": "Later versions of Jetty create multiple response spans"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "ed083c6724a7ef3cb50ad07b8fbb9894d329b5cb", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ed083c6724a7ef3cb50ad07b8fbb9894d329b5cb", "committedDate": "2020-10-09T15:55:39Z", "message": "Fix test"}, "afterCommit": {"oid": "1b40843738144f87219fa3e85290e59f73483993", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1b40843738144f87219fa3e85290e59f73483993", "committedDate": "2020-10-09T20:52:07Z", "message": "Later versions of Jetty create multiple response spans"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDczNDI3", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-506473427", "createdAt": "2020-10-12T09:58:20Z", "commit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo1ODoyMFrOHf3vRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQwOTo1ODoyMFrOHf3vRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4MTEyNw==", "bodyText": "what about other 2xx and 3xx non-error statuses - should they still be reported unchanged when there's an exception?", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#discussion_r503181127", "createdAt": "2020-10-12T09:58:20Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -22,4 +50,35 @@ protected CharSequence spanType() {\n   protected CharSequence component() {\n     return JAVA_WEB_SERVLET_DISPATCHER;\n   }\n+\n+  @Override\n+  public AgentSpan onError(final AgentSpan span, final Throwable throwable) {\n+    if (throwable instanceof ServletException && throwable.getCause() != null) {\n+      super.onError(span, throwable.getCause());\n+    } else {\n+      super.onError(span, throwable);\n+    }\n+    return span;\n+  }\n+\n+  public AgentSpan onResponse(\n+      final AgentSpan span, final ServletResponse response, Throwable throwable) {\n+    if (response instanceof HttpServletResponse && STATUS_CODE_METHOD != null) {\n+      try {\n+        int status = (int) STATUS_CODE_METHOD.invokeExact((HttpServletResponse) response);\n+\n+        if (throwable != null && status == HttpServletResponse.SC_OK) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "originalPosition": 63}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDgxODQ3", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-506481847", "createdAt": "2020-10-12T10:09:34Z", "commit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowOTozNFrOHf4JNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xMlQxMDowOTozNFrOHf4JNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMzE4Nzc2NA==", "bodyText": "I sometimes widen catch blocks like this to Exception | LinkageError just to be absolutely sure...", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#discussion_r503187764", "createdAt": "2020-10-12T10:09:34Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/servlet/src/main/java/datadog/trace/instrumentation/servlet/dispatcher/RequestDispatcherDecorator.java", "diffHunk": "@@ -1,13 +1,41 @@\n package datadog.trace.instrumentation.servlet.dispatcher;\n \n+import static datadog.trace.api.cache.RadixTreeCache.HTTP_STATUSES;\n+\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.api.Tags;\n import datadog.trace.bootstrap.instrumentation.api.UTF8BytesString;\n import datadog.trace.bootstrap.instrumentation.decorator.BaseDecorator;\n+import java.lang.invoke.MethodHandle;\n+import java.lang.invoke.MethodHandles;\n+import java.lang.invoke.MethodType;\n+import javax.servlet.ServletException;\n+import javax.servlet.ServletResponse;\n+import javax.servlet.http.HttpServletResponse;\n \n public class RequestDispatcherDecorator extends BaseDecorator {\n   public static final RequestDispatcherDecorator DECORATE = new RequestDispatcherDecorator();\n   public static final CharSequence JAVA_WEB_SERVLET_DISPATCHER =\n       UTF8BytesString.createConstant(\"java-web-servlet-dispatcher\");\n \n+  private static final MethodHandle STATUS_CODE_METHOD;\n+\n+  static {\n+    // to satisfy the compiler that STATUS_CODE_METHOD is only assigned once\n+    // use a local variable\n+    MethodHandle local = null;\n+    try {\n+      local =\n+          MethodHandles.publicLookup()\n+              .findVirtual(\n+                  HttpServletResponse.class, \"getStatus\", MethodType.methodType(int.class));\n+    } catch (NoSuchMethodException | IllegalAccessException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA2NDgzOTc5", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-506483979", "createdAt": "2020-10-12T10:12:36Z", "commit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTA3NTE0MTM1", "url": "https://github.com/DataDog/dd-trace-java/pull/1965#pullrequestreview-507514135", "createdAt": "2020-10-13T14:43:16Z", "commit": {"oid": "1b40843738144f87219fa3e85290e59f73483993"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2948, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}