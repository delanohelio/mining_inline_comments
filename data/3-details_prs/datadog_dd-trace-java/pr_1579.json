{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDMzNjI1MDE4", "number": 1579, "title": "Inject dd.{service|version|env} in logs", "bodyText": "Injecting 3 new tags :\n\ndd.service\ndd.version\ndd.env\n\nin MDC of every thread for 3 supported logger interfaces .\nLogger instrumentation is disabled by default. It can be enabled by -Ddd.logs.injection=true .", "createdAt": "2020-06-12T11:25:51Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1579", "merged": true, "mergeCommit": {"oid": "b7b26451c239e4af65d72fcf993a1e3c2a5024f7"}, "closed": true, "closedAt": "2020-06-18T23:30:00Z", "author": {"login": "lpriima"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcqh9oOgFqTQyOTY5NzQzMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcwrFgpgFqTQ0MDkyMDM2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5Njk3NDMw", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-429697430", "createdAt": "2020-06-12T12:25:04Z", "commit": {"oid": "cf327f8784cceb657f9df6899f0bc815840e7ded"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyNTowNVrOGjCDMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xMlQxMjoyNTowNVrOGjCDMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzOTM4NjkyOQ==", "bodyText": "It's better not to separate Map.containsKey from Map.get because it involves two lookups. Instead it's better to get the value and check if it's not null. If this happens quite a lot the difference will add up - how often will this get called? If once per span, please make the change, otherwise don't worry about it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#discussion_r439386929", "createdAt": "2020-06-12T12:25:05Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/log/LogContextScopeListener.java", "diffHunk": "@@ -50,4 +54,22 @@ public void afterScopeClosed() {\n       log.debug(\"Exception removing log context context\", e);\n     }\n   }\n+\n+  public static void addDDTagsToMDC(final Method putMethod)\n+      throws InvocationTargetException, IllegalAccessException {\n+    putMethod.invoke(null, Tags.DD_SERVICE, Config.get().getServiceName());\n+    {\n+      final Map<String, String> mergedSpanTags = Config.get().getMergedSpanTags();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cf327f8784cceb657f9df6899f0bc815840e7ded"}, "originalPosition": 23}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODQzODEw", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-429843810", "createdAt": "2020-06-12T15:39:21Z", "commit": {"oid": "439d3083fbd457b89aaccf9aa1df82f0e8645255"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5ODQ3OTYz", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-429847963", "createdAt": "2020-06-12T15:45:12Z", "commit": {"oid": "439d3083fbd457b89aaccf9aa1df82f0e8645255"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDI5OTYwNzIy", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-429960722", "createdAt": "2020-06-12T18:39:11Z", "commit": {"oid": "439d3083fbd457b89aaccf9aa1df82f0e8645255"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a46e59d52f8fe5bdc102046b33a6e2f5e78ea24", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2a46e59d52f8fe5bdc102046b33a6e2f5e78ea24", "committedDate": "2020-06-17T22:27:14Z", "message": "Inject dd.{service|version|env} in logs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7250dcced7d5d47c8790b7f800c3e78294d7e96", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7250dcced7d5d47c8790b7f800c3e78294d7e96", "committedDate": "2020-06-17T22:27:14Z", "message": "get from map instead of containsKey"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/14b30bf72889adb9349c3869385f1edd75ca810a", "committedDate": "2020-06-17T22:59:48Z", "message": "replace ThreadLocal field in logges which not inherrit context"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "b8bee9ee1d59f4fbba0c49ca2618b54c4857cba8", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b8bee9ee1d59f4fbba0c49ca2618b54c4857cba8", "committedDate": "2020-06-17T22:05:51Z", "message": "replace ThreadLocal field in logges which not inherrit context"}, "afterCommit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/14b30bf72889adb9349c3869385f1edd75ca810a", "committedDate": "2020-06-17T22:59:48Z", "message": "replace ThreadLocal field in logges which not inherrit context"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzMDYxMjc3", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-433061277", "createdAt": "2020-06-18T08:36:03Z", "commit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDMzNjI2MzA0", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-433626304", "createdAt": "2020-06-18T20:33:26Z", "commit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozMzoyNlrOGl_O9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOFQyMDozMzoyNlrOGl_O9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MjQ4NjUxOA==", "bodyText": "It would be nice if we could avoid all this reflection, but I don't think we can because of our shadow rename for SLF4j.", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#discussion_r442486518", "createdAt": "2020-06-18T20:33:26Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/slf4j-mdc/src/main/java/datadog/trace/instrumentation/slf4j/mdc/MDCInjectionInstrumentation.java", "diffHunk": "@@ -70,17 +73,28 @@ public boolean matches(final MethodDescription target) {\n \n   @Override\n   public String[] helperClassNames() {\n-    return new String[] {LogContextScopeListener.class.getName()};\n+    return new String[] {\n+      LogContextScopeListener.class.getName(), ThreadLocalWithDDTagsInitValue.class.getName(),\n+    };\n   }\n \n   public static class MDCAdvice {\n     @Advice.OnMethodExit(suppress = Throwable.class)\n-    public static void mdcClassInitialized(@Advice.Origin final Class mdcClass) {\n+    public static void mdcClassInitialized(@Advice.Origin final Class<?> mdcClass) {\n       try {\n         final Method putMethod = mdcClass.getMethod(\"put\", String.class, String.class);\n         final Method removeMethod = mdcClass.getMethod(\"remove\", String.class);\n         GlobalTracer.get().addScopeListener(new LogContextScopeListener(putMethod, removeMethod));\n-      } catch (final NoSuchMethodException e) {\n+\n+        final Field mdcAdapterField = mdcClass.getDeclaredField(\"mdcAdapter\");\n+        mdcAdapterField.setAccessible(true);\n+        final MDCAdapter mdcAdapterInstance = (MDCAdapter) mdcAdapterField.get(null);\n+        final Field copyOnThreadLocalField =\n+            mdcAdapterInstance.getClass().getDeclaredField(\"copyOnThreadLocal\");\n+        copyOnThreadLocalField.setAccessible(true);\n+        copyOnThreadLocalField.set(mdcAdapterInstance, new ThreadLocalWithDDTagsInitValue());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "originalPosition": 45}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTEyNjY2", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-440912666", "createdAt": "2020-07-01T14:17:57Z", "commit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxNzo1OFrOGrn5sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxNzo1OFrOGrn5sw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM5NTY5OQ==", "bodyText": "This creates extra class loads that we don't need.\nWhile annoying it is better to do \"foo.bar.QuuxClass\" instead of QuuxClass.class.getName()", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#discussion_r448395699", "createdAt": "2020-07-01T14:17:58Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/log4j2/src/main/java/datadog/trace/instrumentation/log4j2/ThreadContextInstrumentation.java", "diffHunk": "@@ -42,18 +44,30 @@ protected boolean defaultEnabled() {\n \n   @Override\n   public String[] helperClassNames() {\n-    return new String[] {LogContextScopeListener.class.getName()};\n+    return new String[] {\n+      LogContextScopeListener.class.getName(), ThreadLocalWithDDTagsInitValue.class.getName(),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "originalPosition": 17}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDQwOTIwMzY1", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#pullrequestreview-440920365", "createdAt": "2020-07-01T14:26:22Z", "commit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoyNjoyM1rOGroQJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoyNjoyM1rOGroQJw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODQwMTQ0Nw==", "bodyText": "I noticed this Map is immutable.  Do we end up injecting this Map directly into the MDC?\nIf so, how does this work if the MDC is modified?", "url": "https://github.com/DataDog/dd-trace-java/pull/1579#discussion_r448401447", "createdAt": "2020-07-01T14:26:23Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/log/ThreadLocalWithDDTagsInitValue.java", "diffHunk": "@@ -0,0 +1,10 @@\n+package datadog.trace.agent.tooling.log;\n+\n+import java.util.Map;\n+\n+public class ThreadLocalWithDDTagsInitValue extends ThreadLocal<Map<String, String>> {\n+  @Override\n+  protected Map<String, String> initialValue() {\n+    return LogContextScopeListener.LOG_CONTEXT_DD_TAGS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "14b30bf72889adb9349c3869385f1edd75ca810a"}, "originalPosition": 8}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2155, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}