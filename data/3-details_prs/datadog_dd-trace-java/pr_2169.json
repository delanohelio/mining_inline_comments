{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMzNzE0NjE1", "number": 2169, "title": "Support for pre-defined profiler templates", "bodyText": "Looking for an initial idea validation here.\nThe idea is to provide a quick way to select a pre-configured profiler settings such that a customer can switch to 'minimal impact' config without manually creating an override template file etc.\nThe way to achieve this is to support 'built-in' templates. They are stored as resources in the jar file and can be specified in stead of the override full path.\nCurrently supported built-in templates are:\n\nminimal\ncomprehensive\n\nThe override templates are containing only overrides - so, if anything changes in dd.jfp and is not overridden it will still be applicable.\nThe usage is:\n\n-Ddd.profiling.jfr-template-override-file=minimal for the minimal config\n-Ddd.profiling.jfr-template-override-file=comprehensive for the full config", "createdAt": "2020-12-07T14:27:43Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2169", "merged": true, "mergeCommit": {"oid": "54d68c923f510553623cd2a8f43bd5e9d60b1f05"}, "closed": true, "closedAt": "2020-12-16T10:00:48Z", "author": {"login": "jbachorik"}, "timelineItems": {"totalCount": 16, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdj2s2ngBqjQwODAwMjEyNjU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmrIgbAH2gAyNTMzNzE0NjE1OmU5MmY2ZmY1YzIwOTc3MzBjN2M4MGU3MWZlM2JlYTIyY2ExMDczOWY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "4d1710acc29b179d7e66a6df2957556c433f23de", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4d1710acc29b179d7e66a6df2957556c433f23de", "committedDate": "2020-12-07T14:22:31Z", "message": "Support for pre-defined profiler templates"}, "afterCommit": {"oid": "1eb298a7ce157d68ecc7fe7f2928df90ceec774c", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1eb298a7ce157d68ecc7fe7f2928df90ceec774c", "committedDate": "2020-12-07T14:48:15Z", "message": "Support for pre-defined profiler templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1eb298a7ce157d68ecc7fe7f2928df90ceec774c", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1eb298a7ce157d68ecc7fe7f2928df90ceec774c", "committedDate": "2020-12-07T14:48:15Z", "message": "Support for pre-defined profiler templates"}, "afterCommit": {"oid": "4846d02a934fcd2ea0e538ef0b0a2ba04540dd6b", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4846d02a934fcd2ea0e538ef0b0a2ba04540dd6b", "committedDate": "2020-12-07T15:33:51Z", "message": "Support for pre-defined profiler templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "97d81381b348afdee888c00730cb2c755a356e33", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/97d81381b348afdee888c00730cb2c755a356e33", "committedDate": "2020-12-09T11:15:14Z", "message": "Support for pre-defined profiler templates"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cc16bbcf8e2828f95bc04749c57857047426784b", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/cc16bbcf8e2828f95bc04749c57857047426784b", "committedDate": "2020-12-08T10:20:46Z", "message": "Remove TLAB and OldObject samples from minimal config"}, "afterCommit": {"oid": "97d81381b348afdee888c00730cb2c755a356e33", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/97d81381b348afdee888c00730cb2c755a356e33", "committedDate": "2020-12-09T11:15:14Z", "message": "Support for pre-defined profiler templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "59451a425e687800f3534010b54880b4d4e844b2", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/59451a425e687800f3534010b54880b4d4e844b2", "committedDate": "2020-12-09T11:36:05Z", "message": "OldObjectSample is not enabled in the default config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e293cc883e67bef6a487f30636d3fd96418480b", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4e293cc883e67bef6a487f30636d3fd96418480b", "committedDate": "2020-12-09T12:49:01Z", "message": "Make level information extraction resilient to config formatting errors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "424afc805930e27b623734bb7fef643941b32b81", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/424afc805930e27b623734bb7fef643941b32b81", "committedDate": "2020-12-11T15:47:52Z", "message": "Use predefined templates"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd6a758cf6b0ab36ea4798c43425764476bdae8", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8fd6a758cf6b0ab36ea4798c43425764476bdae8", "committedDate": "2020-12-11T17:03:37Z", "message": "Fix dd.jfp"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMzE2Mzcx", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#pullrequestreview-550316371", "createdAt": "2020-12-11T17:17:18Z", "commit": {"oid": "8fd6a758cf6b0ab36ea4798c43425764476bdae8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzoxNzoxOFrOIECO4w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzoxNzoxOFrOIECO4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMTc5NQ==", "bodyText": "What's the rationale for changing this threshold?", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#discussion_r541101795", "createdAt": "2020-12-11T17:17:18Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-controller-openjdk/src/main/resources/jfr/dd.jfp", "diffHunk": "@@ -152,9 +152,9 @@ jdk.TenuringDistribution#enabled=true\n jdk.G1HeapRegionInformation#enabled=false\n jdk.G1HeapRegionInformation#period=everyChunk\n jdk.G1HeapRegionTypeChange#enabled=false\n-jdk.OldObjectSample#enabled=true\n+jdk.OldObjectSample#enabled=false\n jdk.OldObjectSample#stackTrace=true\n-jdk.OldObjectSample#cutoff=0 ms\n+jdk.OldObjectSample#cutoff=100 ms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd6a758cf6b0ab36ea4798c43425764476bdae8"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwMzE3MTQz", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#pullrequestreview-550317143", "createdAt": "2020-12-11T17:17:52Z", "commit": {"oid": "8fd6a758cf6b0ab36ea4798c43425764476bdae8"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzoxNzo1MlrOIECQNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xMVQxNzoxNzo1MlrOIECQNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MTEwMjEzMw==", "bodyText": "intended to be 510?\n500 or 10?", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#discussion_r541102133", "createdAt": "2020-12-11T17:17:52Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-controller-openjdk/src/main/resources/jfr/overrides/comprehensive.jfp", "diffHunk": "@@ -0,0 +1,18 @@\n+jdk.ThreadSleep#enabled=true\n+jdk.ThreadSleep#stackTrace=true\n+jdk.ThreadSleep#threshold=10 ms\n+jdk.ThreadPark#enabled=true\n+jdk.ThreadPark#stackTrace=true\n+jdk.ThreadPark#threshold=510 ms", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fd6a758cf6b0ab36ea4798c43425764476bdae8"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ddc040b72b94a3584afc012637e97f6b4937365a", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ddc040b72b94a3584afc012637e97f6b4937365a", "committedDate": "2020-12-11T17:23:42Z", "message": "Fix typos"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUwNTYyMTM3", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#pullrequestreview-550562137", "createdAt": "2020-12-11T20:38:49Z", "commit": {"oid": "ddc040b72b94a3584afc012637e97f6b4937365a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f4db6ad7a5aaffff1c48af51baaf55d23c3a1cd4", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f4db6ad7a5aaffff1c48af51baaf55d23c3a1cd4", "committedDate": "2020-12-14T08:38:27Z", "message": "Throw IOExcetpion for an invalid override to be consistent with previous behaviour"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8", "committedDate": "2020-12-15T11:45:35Z", "message": "Allow extension-less definition of built-in template"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUzNDQ1MjM2", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#pullrequestreview-553445236", "createdAt": "2020-12-16T08:17:08Z", "commit": {"oid": "d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODoxNzowOFrOIG4_sw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNlQwODozMDowMVrOIG5ftQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5NjE3OQ==", "bodyText": "forget to delete ?", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#discussion_r544096179", "createdAt": "2020-12-16T08:17:08Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/agent-profiling/profiling-controller-openjdk/src/main/java/com/datadog/profiling/controller/openjdk/OpenJdkController.java", "diffHunk": "@@ -22,12 +22,14 @@\n import java.time.Duration;\n import java.util.Map;\n import jdk.jfr.Recording;\n+import lombok.extern.slf4j.Slf4j;\n \n /**\n  * This is the implementation of the controller for OpenJDK. It should work for JDK 11+ today, and\n  * unmodified for JDK 8+ once JFR has been back-ported. The Oracle JDK implementation will be far\n  * messier... ;)\n  */\n+@Slf4j", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDA5ODgyMA==", "bodyText": "I can suggest to test {\"minimal\", \"minimal\"} to cover path where you add .jfp", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#discussion_r544098820", "createdAt": "2020-12-16T08:21:24Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/agent-profiling/profiling-controller-openjdk/src/test/java/com/datadog/profiling/controller/openjdk/JfpUtilsTest.java", "diffHunk": "@@ -29,4 +40,22 @@ public void testLoadingContinuousConfigWithOverride() throws IOException {\n     assertEquals(\"true\", config.get(CONFIG_ENTRY));\n     assertEquals(\"200\", config.get(CONFIG_OVERRIDE_ENTRY));\n   }\n+\n+  @ParameterizedTest\n+  @ValueSource(strings = {\"minimal\", \"minimal.jfp\"})", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NDEwNDM3Mw==", "bodyText": "These lines don't deal with closable resources, so they can be moved outside/before try {} block and maybe use try-with:\n      if (!overridesFileName.toLowerCase().endsWith(JFP_EXTENSION)) {\n        overridesFileName = overridesFileName + JFP_EXTENSION;\n      }\n      File override = new File(overridesFileName);\n      try (InputStream overrideStream =\n          override.exists()\n              ? new FileInputStream(override)\n              : getNamedResource(OVERRIDES_PATH + overridesFileName)) {\n        result.putAll(readJfpFile(overrideStream));  // `readJfpFile` already has a null check\n      }", "url": "https://github.com/DataDog/dd-trace-java/pull/2169#discussion_r544104373", "createdAt": "2020-12-16T08:30:01Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/agent-profiling/profiling-controller-openjdk/src/main/java/com/datadog/profiling/controller/openjdk/JfpUtils.java", "diffHunk": "@@ -53,15 +57,37 @@ private static InputStream getNamedResource(final String name) {\n   }\n \n   public static Map<String, String> readNamedJfpResource(\n-      final String name, final String overridesFile) throws IOException {\n-    final Map<String, String> result;\n+      final String name, String overridesFileName) throws IOException {\n+    final Map<String, String> result = new HashMap<>();\n+\n     try (final InputStream stream = getNamedResource(name)) {\n-      result = readJfpFile(stream);\n+      result.putAll(readJfpFile(stream));\n     }\n \n-    if (overridesFile != null) {\n-      try (final InputStream stream = new FileInputStream(overridesFile)) {\n-        result.putAll(readJfpFile(stream));\n+    if (overridesFileName != null) {\n+      InputStream overrideStream = null;\n+      try {\n+        if (!overridesFileName.toLowerCase().endsWith(JFP_EXTENSION)) {\n+          overridesFileName = overridesFileName + JFP_EXTENSION;\n+        }\n+        File override = new File(overridesFileName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d5aaf6c9f0dc4519d6d83940c3bcb001b1fc41e8"}, "originalPosition": 41}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e92f6ff5c2097730c7c80e71fe3bea22ca10739f", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e92f6ff5c2097730c7c80e71fe3bea22ca10739f", "committedDate": "2020-12-16T09:01:34Z", "message": "Use try-with-resources"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2703, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}