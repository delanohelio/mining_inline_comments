{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcyNTMyMDc1", "number": 1796, "title": "Better instrumentation support for dynamic Spring HandlerMapping", "bodyText": "Currently, we invoke all of the HandlerMappings from HandlerMappingResourceNameFilter hoping to get the property BEST_MATCHING_PATTERN_ATTRIBUTE set on the request as a side effect. This has other side effects like invoking a HandlerMapping too soon, such as before thread local RequestAttributes have been set in highly customised implementations - hitting the error condition below: in RequestContextHolder:\n\t/**\n\t * Return the RequestAttributes currently bound to the thread.\n\t * <p>Exposes the previously bound RequestAttributes instance, if any.\n\t * Falls back to the current JSF FacesContext, if any.\n\t * @return the RequestAttributes currently bound to the thread\n\t * @throws IllegalStateException if no RequestAttributes object\n\t * is bound to the current thread\n\t * @see #setRequestAttributes\n\t * @see ServletRequestAttributes\n\t * @see FacesRequestAttributes\n\t * @see javax.faces.context.FacesContext#getCurrentInstance()\n\t */\n\tpublic static RequestAttributes currentRequestAttributes() throws IllegalStateException {\n\t\tRequestAttributes attributes = getRequestAttributes();\n\t\tif (attributes == null) {\n\t\t\tif (jsfPresent) {\n\t\t\t\tattributes = FacesRequestAttributesFactory.getFacesRequestAttributes();\n\t\t\t}\n\t\t\tif (attributes == null) {\n\t\t\t\tthrow new IllegalStateException(\"No thread-bound request found: \" +\n\t\t\t\t\t\t\"Are you referring to request attributes outside of an actual web request, \" +\n\t\t\t\t\t\t\"or processing a request outside of the originally receiving thread? \" +\n\t\t\t\t\t\t\"If you are actually operating within a web request and still receive this message, \" +\n\t\t\t\t\t\t\"your code is probably running outside of DispatcherServlet/DispatcherPortlet: \" +\n\t\t\t\t\t\t\"In this case, use RequestContextListener or RequestContextFilter to expose the current request.\");\n\t\t\t}\n\t\t}\n\t\treturn attributes;\n\t}\n\nThis PR changes one thing: since only RequestMappingInfoHandlerMapping actually sets BEST_MATCHING_PATTERN_ATTRIBUTE on the request, only try to invoke it and its subclasses.\nThe rest is a test case for the kind of dynamic handler mapping being done by a customer.", "createdAt": "2020-08-24T13:44:17Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1796", "merged": true, "mergeCommit": {"oid": "4adc64498b8c36ae5bb2f0cc6170ff6ec87d5de7"}, "closed": true, "closedAt": "2020-08-24T15:27:05Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdCDFS7gFqTQ3MzUxNjgzOQ==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdCD2_mAH2gAyNDcyNTMyMDc1OmNhNjk2NGZlMWMxZTljY2JiZjg5YmVjNThhMGMwMzA3MWY0YTJkNDE=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDczNTE2ODM5", "url": "https://github.com/DataDog/dd-trace-java/pull/1796#pullrequestreview-473516839", "createdAt": "2020-08-24T13:59:24Z", "commit": {"oid": "592876fe67d9ee35c698fe5150f00794d3d154be"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMzo1OToyNFrOHFmTiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNFQxMzo1OToyNFrOHFmTiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTYzMjUyMw==", "bodyText": "Not exactly... might also discard if a duplicate.", "url": "https://github.com/DataDog/dd-trace-java/pull/1796#discussion_r475632523", "createdAt": "2020-08-24T13:59:24Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-webmvc-3.1/src/main/java/datadog/trace/instrumentation/springweb/HandlerMappingResourceNameFilter.java", "diffHunk": "@@ -59,7 +63,16 @@ private boolean findMapping(final HttpServletRequest request) throws Exception {\n   }\n \n   public void setHandlerMappings(final List<HandlerMapping> handlerMappings) {\n-    this.handlerMappings = handlerMappings;\n+    for (HandlerMapping handlerMapping : handlerMappings) {\n+      if (handlerMapping instanceof RequestMappingInfoHandlerMapping\n+          && !this.handlerMappings.contains(handlerMapping)) {\n+        this.handlerMappings.add(handlerMapping);\n+      } else {\n+        log.debug(\n+            \"discarding handler mapping {} which won't set BEST_MATCHING_PATTERN_ATTRIBUTE\",\n+            handlerMapping);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "592876fe67d9ee35c698fe5150f00794d3d154be"}, "originalPosition": 45}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "820003eeba7b2e5a026ec0ccb6f0516779f608d0", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/820003eeba7b2e5a026ec0ccb6f0516779f608d0", "committedDate": "2020-08-24T14:12:15Z", "message": "only invoke HandlerMappings which set BEST_MATCHING_PATTERN_ATTRIBUTE from instrumented filter chain, add testing around completely dynamic handler mapping"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "592876fe67d9ee35c698fe5150f00794d3d154be", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/592876fe67d9ee35c698fe5150f00794d3d154be", "committedDate": "2020-08-24T13:37:42Z", "message": "only invoke HandlerMappings which set BEST_MATCHING_PATTERN_ATTRIBUTE from instrumented filter chain, add testing around completely dynamic handler mapping"}, "afterCommit": {"oid": "820003eeba7b2e5a026ec0ccb6f0516779f608d0", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/820003eeba7b2e5a026ec0ccb6f0516779f608d0", "committedDate": "2020-08-24T14:12:15Z", "message": "only invoke HandlerMappings which set BEST_MATCHING_PATTERN_ATTRIBUTE from instrumented filter chain, add testing around completely dynamic handler mapping"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ca6964fe1c1e9ccbbf89bec58a0c03071f4a2d41", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ca6964fe1c1e9ccbbf89bec58a0c03071f4a2d41", "committedDate": "2020-08-24T14:54:52Z", "message": "reproduce issue"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1941, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}