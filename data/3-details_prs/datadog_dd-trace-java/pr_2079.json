{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNjU2MDk1", "number": 2079, "title": "tracing for ListIterator of kafka.ConsumerRecords", "bodyText": "open scope when ConsumerRecord is \"current\" for some iteration pattern (next(), previous() is called)\nclose scope when iteration goes to next item in iteration (eg.: by calling another next() )", "createdAt": "2020-11-16T13:14:20Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2079", "merged": true, "mergeCommit": {"oid": "ad8150459c48599c3b4412f15be7c2d4dff4c788"}, "closed": true, "closedAt": "2020-12-09T16:02:05Z", "author": {"login": "lpriima"}, "timelineItems": {"totalCount": 38, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABddEy2WAFqTUzMTMwODUyNg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdkguAFgFqTU0ODMyMDc3MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzA4NTI2", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-531308526", "createdAt": "2020-11-16T13:16:11Z", "commit": {"oid": "1b9c5b7071720058d3558cd1869d81f0eade1e7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoxNjoxMVrOHz-Pqw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoxNjoxMVrOHz-Pqw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1OTI0Mw==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r524259243", "createdAt": "2020-11-16T13:16:11Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/KafkaConsumerInstrumentation.java", "diffHunk": "@@ -75,7 +75,8 @@ public KafkaConsumerInstrumentation() {\n   public static class IterableAdvice {\n \n     @Advice.OnMethodExit(suppress = Throwable.class)\n-    public static void wrap(@Advice.Return(readOnly = false) Iterable<ConsumerRecord> iterable) {\n+    public static void wrap(\n+        @Advice.Return(readOnly = false) Iterable<ConsumerRecord<?, ?>> iterable) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b9c5b7071720058d3558cd1869d81f0eade1e7c"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMxMzA5MzU0", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-531309354", "createdAt": "2020-11-16T13:17:19Z", "commit": {"oid": "1b9c5b7071720058d3558cd1869d81f0eade1e7c"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoxNzoxOVrOHz-Sag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxMzoxNzoxOVrOHz-Sag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDI1OTk0Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r524259946", "createdAt": "2020-11-16T13:17:19Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/TracingListIterator.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package datadog.trace.instrumentation.kafka_clients;\n+\n+import java.util.ListIterator;\n+import org.apache.kafka.clients.consumer.ConsumerRecord;\n+\n+public class TracingListIterator extends TracingIterator\n+    implements ListIterator<ConsumerRecord<?, ?>> {\n+\n+  private final ListIterator<ConsumerRecord<?, ?>> delegateIterator;\n+\n+  public TracingListIterator(\n+      ListIterator<ConsumerRecord<?, ?>> delegateIterator,\n+      CharSequence operationName,\n+      KafkaDecorator decorator) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1b9c5b7071720058d3558cd1869d81f0eade1e7c"}, "originalPosition": 14}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1b9c5b7071720058d3558cd1869d81f0eade1e7c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1b9c5b7071720058d3558cd1869d81f0eade1e7c", "committedDate": "2020-11-16T13:13:18Z", "message": "tracing by ListIterator for kafka ConsumerRecords"}, "afterCommit": {"oid": "bdef3a48486db9b2c58b5cd595e1ad695355e69a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bdef3a48486db9b2c58b5cd595e1ad695355e69a", "committedDate": "2020-11-16T23:15:03Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bdef3a48486db9b2c58b5cd595e1ad695355e69a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bdef3a48486db9b2c58b5cd595e1ad695355e69a", "committedDate": "2020-11-16T23:15:03Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "42240e96fd9fe1b36863cce950369d9ec5dfed91", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/42240e96fd9fe1b36863cce950369d9ec5dfed91", "committedDate": "2020-11-17T10:45:37Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "42240e96fd9fe1b36863cce950369d9ec5dfed91", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/42240e96fd9fe1b36863cce950369d9ec5dfed91", "committedDate": "2020-11-17T10:45:37Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "362766c1543763138eec076f48edff75d9ea134b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/362766c1543763138eec076f48edff75d9ea134b", "committedDate": "2020-11-17T15:57:56Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "362766c1543763138eec076f48edff75d9ea134b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/362766c1543763138eec076f48edff75d9ea134b", "committedDate": "2020-11-17T15:57:56Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "20f840db42d2ba87761be4ed89b336e42c24f8db", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/20f840db42d2ba87761be4ed89b336e42c24f8db", "committedDate": "2020-11-18T02:36:13Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "20f840db42d2ba87761be4ed89b336e42c24f8db", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/20f840db42d2ba87761be4ed89b336e42c24f8db", "committedDate": "2020-11-18T02:36:13Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "79f94e5bdb73a7232233f6ede3e8aa56ea71309d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/79f94e5bdb73a7232233f6ede3e8aa56ea71309d", "committedDate": "2020-11-19T08:22:17Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "79f94e5bdb73a7232233f6ede3e8aa56ea71309d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/79f94e5bdb73a7232233f6ede3e8aa56ea71309d", "committedDate": "2020-11-19T08:22:17Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "3edca41565dc5be5627491044adb73ed3dad4140", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3edca41565dc5be5627491044adb73ed3dad4140", "committedDate": "2020-11-19T10:09:40Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3edca41565dc5be5627491044adb73ed3dad4140", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3edca41565dc5be5627491044adb73ed3dad4140", "committedDate": "2020-11-19T10:09:40Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "afc5a82a3c7d78ebe263bff98ef430a6a4a4db66", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/afc5a82a3c7d78ebe263bff98ef430a6a4a4db66", "committedDate": "2020-11-20T10:32:30Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "afc5a82a3c7d78ebe263bff98ef430a6a4a4db66", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/afc5a82a3c7d78ebe263bff98ef430a6a4a4db66", "committedDate": "2020-11-20T10:32:30Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "bb14e634f0535cafdd3bf7ed7479f62fa4a41e53", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bb14e634f0535cafdd3bf7ed7479f62fa4a41e53", "committedDate": "2020-11-23T11:33:01Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "bb14e634f0535cafdd3bf7ed7479f62fa4a41e53", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bb14e634f0535cafdd3bf7ed7479f62fa4a41e53", "committedDate": "2020-11-23T11:33:01Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "a91d0c9eb0d1dac7623f0c9faf38cc95b8e10edd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a91d0c9eb0d1dac7623f0c9faf38cc95b8e10edd", "committedDate": "2020-11-30T17:51:29Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a91d0c9eb0d1dac7623f0c9faf38cc95b8e10edd", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a91d0c9eb0d1dac7623f0c9faf38cc95b8e10edd", "committedDate": "2020-11-30T17:51:29Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}, "afterCommit": {"oid": "743049e5453369297208bb062a673f9bb9d06100", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/743049e5453369297208bb062a673f9bb9d06100", "committedDate": "2020-12-01T19:29:41Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8908449c9733bb11f4e6bef89ef59f001a54d803", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8908449c9733bb11f4e6bef89ef59f001a54d803", "committedDate": "2020-12-02T11:20:17Z", "message": "Formatting"}, "afterCommit": {"oid": "6cc871cc49a996c00eac5da4566bfe92c144c4ba", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6cc871cc49a996c00eac5da4566bfe92c144c4ba", "committedDate": "2020-12-03T02:53:49Z", "message": "Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6cc871cc49a996c00eac5da4566bfe92c144c4ba", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6cc871cc49a996c00eac5da4566bfe92c144c4ba", "committedDate": "2020-12-03T02:53:49Z", "message": "Formatting"}, "afterCommit": {"oid": "7eb50115e072539471ddbd8ef5261e0343d0631a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7eb50115e072539471ddbd8ef5261e0343d0631a", "committedDate": "2020-12-03T03:55:03Z", "message": "Formatting"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "8a4193a8e09abe8e12578dc5ac734e26b4ca7681", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8a4193a8e09abe8e12578dc5ac734e26b4ca7681", "committedDate": "2020-12-04T07:32:08Z", "message": "Add 'TracingListIterator' to helper classes"}, "afterCommit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4ae89aafb6f5cfea37b988462aded10259cec6d1", "committedDate": "2020-12-04T08:22:59Z", "message": "Add 'TracingListIterator' to helper classes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODIwNzkx", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-544820791", "createdAt": "2020-12-04T10:09:05Z", "commit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowOTowNVrOH_J4aQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowOTowNVrOH_J4aQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4NDIzMw==", "bodyText": "does this need to be an atomic?", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r535984233", "createdAt": "2020-12-04T10:09:05Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/TracingList.java", "diffHunk": "@@ -1,18 +1,26 @@\n package datadog.trace.instrumentation.kafka_clients;\n \n import java.util.Collection;\n+import java.util.Iterator;\n import java.util.List;\n import java.util.ListIterator;\n import org.apache.kafka.clients.consumer.ConsumerRecord;\n \n-public class TracingList extends TracingIterable implements List<ConsumerRecord> {\n-  private final List<ConsumerRecord> delegate;\n+public class TracingList implements List<ConsumerRecord<?, ?>> {\n+  private final List<ConsumerRecord<?, ?>> delegate;\n+  private final CharSequence operationName;\n+  private final KafkaDecorator decorator;\n+\n+  // TODO: not thread safe wrapping\n+  //  in case of batch consumer and requesting iterator of consumed list from different threads\n+  private boolean firstIteration = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODIxMDgx", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-544821081", "createdAt": "2020-12-04T10:09:26Z", "commit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowOToyNlrOH_J5Xg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDowOToyNlrOH_J5Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk4NDQ3OA==", "bodyText": "should this be a cas?", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r535984478", "createdAt": "2020-12-04T10:09:26Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/TracingList.java", "diffHunk": "@@ -113,25 +126,25 @@ public int lastIndexOf(final Object o) {\n   }\n \n   @Override\n-  public ListIterator<ConsumerRecord> listIterator() {\n-    // TODO: the API for ListIterator is not really good to instrument it in context of Kafka\n-    // Consumer so we will not do that for now\n-    return delegate.listIterator();\n+  public ListIterator<ConsumerRecord<?, ?>> listIterator() {\n+    return listIterator(0);\n   }\n \n   @Override\n-  public ListIterator<ConsumerRecord> listIterator(final int index) {\n-    // TODO: the API for ListIterator is not really good to instrument it in context of Kafka\n-    // Consumer so we will not do that for now\n-    return delegate.listIterator(index);\n+  public ListIterator<ConsumerRecord<?, ?>> listIterator(final int index) {\n+    final ListIterator<ConsumerRecord<?, ?>> maybeTracingListIterator;\n+    if (firstIteration) {\n+      maybeTracingListIterator =\n+          new TracingListIterator(delegate.listIterator(index), operationName, decorator);\n+      firstIteration = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "originalPosition": 80}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODMyNTA0", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-544832504", "createdAt": "2020-12-04T10:24:41Z", "commit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyNDo0MVrOH_KfjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDoyNDo0MVrOH_KfjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5NDI1Mg==", "bodyText": "Shouldn't we only call maybeClosePreviousIterationScope() if delegateIterator.hasNext() returns false? I mean you could call hasNext() and still do some work before you call next().", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r535994252", "createdAt": "2020-12-04T10:24:41Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/TracingIterator.java", "diffHunk": "@@ -36,40 +36,43 @@ public TracingIterator(\n \n   @Override\n   public boolean hasNext() {\n-    if (currentScope != null) {\n-      finish();\n-    }\n+    maybeClosePreviousIterationScope();\n     return delegateIterator.hasNext();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0ODM4MDIw", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-544838020", "createdAt": "2020-12-04T10:32:24Z", "commit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMjoyNFrOH_Kx9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxMDozMjoyNFrOH_Kx9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNTk5ODk2Ng==", "bodyText": "I'm curious why we only do tracing on the first iterator. What is the rationale?", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r535998966", "createdAt": "2020-12-04T10:32:24Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/main/java/datadog/trace/instrumentation/kafka_clients/TracingList.java", "diffHunk": "@@ -113,25 +126,25 @@ public int lastIndexOf(final Object o) {\n   }\n \n   @Override\n-  public ListIterator<ConsumerRecord> listIterator() {\n-    // TODO: the API for ListIterator is not really good to instrument it in context of Kafka\n-    // Consumer so we will not do that for now\n-    return delegate.listIterator();\n+  public ListIterator<ConsumerRecord<?, ?>> listIterator() {\n+    return listIterator(0);\n   }\n \n   @Override\n-  public ListIterator<ConsumerRecord> listIterator(final int index) {\n-    // TODO: the API for ListIterator is not really good to instrument it in context of Kafka\n-    // Consumer so we will not do that for now\n-    return delegate.listIterator(index);\n+  public ListIterator<ConsumerRecord<?, ?>> listIterator(final int index) {\n+    final ListIterator<ConsumerRecord<?, ?>> maybeTracingListIterator;\n+    if (firstIteration) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ae89aafb6f5cfea37b988462aded10259cec6d1"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "872309f8f38fcf6f4e0d79bbd86d8a7a6d71b6a3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/872309f8f38fcf6f4e0d79bbd86d8a7a6d71b6a3", "committedDate": "2020-12-07T06:21:36Z", "message": "make ConsumerRecord Iterator wrapping thread safe"}, "afterCommit": {"oid": "6c4960143d4ecf2536ca33248efd1154f0822b7b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6c4960143d4ecf2536ca33248efd1154f0822b7b", "committedDate": "2020-12-07T06:44:54Z", "message": "make ConsumerRecord Iterator wrapping thread safe"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d6f03032c41fdcd626c84799e9ffea333e7fad80", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d6f03032c41fdcd626c84799e9ffea333e7fad80", "committedDate": "2020-12-08T09:50:39Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}, "afterCommit": {"oid": "1ab19f2abef7c49e408978f0b3b1f11af373408b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1ab19f2abef7c49e408978f0b3b1f11af373408b", "committedDate": "2020-12-08T09:55:42Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ab19f2abef7c49e408978f0b3b1f11af373408b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1ab19f2abef7c49e408978f0b3b1f11af373408b", "committedDate": "2020-12-08T09:55:42Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}, "afterCommit": {"oid": "c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee", "committedDate": "2020-12-08T09:57:20Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3Mzk3MzYx", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-547397361", "createdAt": "2020-12-08T16:19:58Z", "commit": {"oid": "c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NTEwMzU1", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-547510355", "createdAt": "2020-12-08T18:26:44Z", "commit": {"oid": "c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c8a48efcc2fa947d00bb7b0762582bcaeb1c0cee", "committedDate": "2020-12-08T09:57:20Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}, "afterCommit": {"oid": "455272289171a7b62c15f648d392de572ac15bd5", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/455272289171a7b62c15f648d392de572ac15bd5", "committedDate": "2020-12-08T20:56:42Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ3NjI1OTY4", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-547625968", "createdAt": "2020-12-08T20:58:15Z", "commit": {"oid": "455272289171a7b62c15f648d392de572ac15bd5"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDo1ODoxNVrOIB151w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wOFQyMDo1ODoxNVrOIB151w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzODgwMjY0Nw==", "bodyText": "Could you point out which part of this test exercises this new behavior? It's not obvious to me.", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#discussion_r538802647", "createdAt": "2020-12-08T20:58:15Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/kafka-clients-0.11/src/test/groovy/KafkaClientTest.groovy", "diffHunk": "@@ -434,6 +435,167 @@ class KafkaClientTest extends AgentTestRunner {\n \n   }\n \n+  def \"test spring kafka template produce and batch consume\"() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "455272289171a7b62c15f648d392de572ac15bd5"}, "originalPosition": 12}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5f721621bd6317bd4c137c5b08ccacc0157332c2", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5f721621bd6317bd4c137c5b08ccacc0157332c2", "committedDate": "2020-12-09T05:45:33Z", "message": "test iteration backwards over ConsumerRecords"}, "afterCommit": {"oid": "7c7e298a208de0f574a8cbd479ccd78ee9f8c03e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7c7e298a208de0f574a8cbd479ccd78ee9f8c03e", "committedDate": "2020-12-09T09:41:29Z", "message": "test iteration backwards over ConsumerRecords"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f70943504de6faa0a91d6ba84a8bc0510437828", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3f70943504de6faa0a91d6ba84a8bc0510437828", "committedDate": "2020-12-09T09:51:17Z", "message": "tracing for ListIterator of kafka.ConsumerRecords"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b86a6a8b2bb96cf74160f6272bfd53ad7704cb38", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b86a6a8b2bb96cf74160f6272bfd53ad7704cb38", "committedDate": "2020-12-09T09:51:17Z", "message": "bach consumer kafka test improvement"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "36b2a2aa45d304a747fc476271bfb63f31433986", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/36b2a2aa45d304a747fc476271bfb63f31433986", "committedDate": "2020-12-09T09:51:17Z", "message": "Formatting"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d168a6e9e0d11cb6948ced17801544fb1602dfcc", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d168a6e9e0d11cb6948ced17801544fb1602dfcc", "committedDate": "2020-12-09T09:51:17Z", "message": "check batch consumtion out of order"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a539edea2bbd90d245d9f083f1375d63b301686e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a539edea2bbd90d245d9f083f1375d63b301686e", "committedDate": "2020-12-09T09:51:17Z", "message": "Add 'TracingListIterator' to helper classes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6e1b04405ed9a0fb4c43483f2414fe86948885a5", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6e1b04405ed9a0fb4c43483f2414fe86948885a5", "committedDate": "2020-12-09T09:51:17Z", "message": "make ConsumerRecord Iterator wrapping thread safe"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4a2d12c35402507c1e64e568010ab32a14fa308d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4a2d12c35402507c1e64e568010ab32a14fa308d", "committedDate": "2020-12-09T09:51:17Z", "message": "Return tracing iterator every time for ConsumerRecords"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9d87ca9826038870266ba7ee0935e7460e772081", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9d87ca9826038870266ba7ee0935e7460e772081", "committedDate": "2020-12-09T09:51:17Z", "message": "Close scope inside hasNext() and hasPrevious() only for last iteration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3c019b7c56d85c37dd7848f8fdd25dff2fe3f8ad", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3c019b7c56d85c37dd7848f8fdd25dff2fe3f8ad", "committedDate": "2020-12-09T09:51:17Z", "message": "test iteration backwards over ConsumerRecords"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7c7e298a208de0f574a8cbd479ccd78ee9f8c03e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7c7e298a208de0f574a8cbd479ccd78ee9f8c03e", "committedDate": "2020-12-09T09:41:29Z", "message": "test iteration backwards over ConsumerRecords"}, "afterCommit": {"oid": "3c019b7c56d85c37dd7848f8fdd25dff2fe3f8ad", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3c019b7c56d85c37dd7848f8fdd25dff2fe3f8ad", "committedDate": "2020-12-09T09:51:17Z", "message": "test iteration backwards over ConsumerRecords"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ4MzIwNzcx", "url": "https://github.com/DataDog/dd-trace-java/pull/2079#pullrequestreview-548320771", "createdAt": "2020-12-09T15:45:43Z", "commit": {"oid": "3c019b7c56d85c37dd7848f8fdd25dff2fe3f8ad"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2829, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}