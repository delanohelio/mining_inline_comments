{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNzcwNDA4", "number": 2082, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjoyMzowMVrOE5kO3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoxNjoxOVrOE5nbCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4Nzk3OTE5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/src/test/java/jvmbootstraptest/LogManagerSetter.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjoyMzowMVrOH0Gh2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxNjoyMzowMVrOH0Gh2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDM5NDk3MQ==", "bodyText": "It looks like this method's name was lying", "url": "https://github.com/DataDog/dd-trace-java/pull/2082#discussion_r524394971", "createdAt": "2020-11-16T16:23:01Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/src/test/java/jvmbootstraptest/LogManagerSetter.java", "diffHunk": "@@ -211,7 +212,7 @@ private static boolean isTracerInstalled(final boolean wait) {\n   }\n \n   private static boolean isJavaBefore9WithJFR() {\n-    if (!System.getProperty(\"java.version\").startsWith(\"1.\")) {\n+    if (!Platform.isJavaVersionAtLeast(9)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e2ebfa340013348971ed834af223c85b193518fb"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI4ODUwMTg2OnYy", "diffSide": "RIGHT", "path": "internal-api/src/test/groovy/datadog/trace/api/PlatformTest.groovy", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxODoxNjoxOVrOH0Le9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xNlQxOTozMjo1N1rOH0OQVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3NjE1MA==", "bodyText": "duplicate?\nlooks like java version has a lot : https://openjdk.java.net/jeps/223 :\n\"9-ea\" | 9\n\"9\" | 9\n\"9.1.2\" | 9\n\"9.0.1\" | 9", "url": "https://github.com/DataDog/dd-trace-java/pull/2082#discussion_r524476150", "createdAt": "2020-11-16T18:16:19Z", "author": {"login": "lpriima"}, "path": "internal-api/src/test/groovy/datadog/trace/api/PlatformTest.groovy", "diffHunk": "@@ -0,0 +1,45 @@\n+package datadog.trace.api\n+\n+import datadog.trace.test.util.DDSpecification\n+import org.junit.Assume\n+\n+class PlatformTest extends DDSpecification {\n+\n+  def \"is at least java 7\"() {\n+    expect: Platform.isJavaVersionAtLeast(7)\n+  }\n+\n+  def \"is at least java 8 when run on JDK1.8 or later\"() {\n+    Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.\")\n+      || System.getProperty(\"java.version\").startsWith(\"1.8.\"))\n+    expect: Platform.isJavaVersionAtLeast(8) && Platform.isJavaVersionAtLeast(7)\n+  }\n+\n+  def \"is at least java 11 when run on JDK11 or later\"() {\n+    Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.\")\n+    && !(System.getProperty(\"java.version\").startsWith(\"9.\")\n+      || System.getProperty(\"java.version\").startsWith(\"10.\")))\n+    expect: Platform.isJavaVersionAtLeast(11) && Platform.isJavaVersionAtLeast(8)\n+  }\n+\n+  def \"test parse #version\"() {\n+    when:\n+    int parsedVersion = Platform.parseJavaVersion(version)\n+    then:\n+    expected == parsedVersion\n+\n+    where:\n+    version     | expected\n+    \"1.7\"       | 7\n+    \"1.7.0\"     | 7\n+    \"1.8\"       | 8\n+    \"1.8.0\"     | 8\n+    \"1.8.0_212\" | 8\n+    \"1.8.0_212\" | 8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "96956e6c9815e531d27aa682df4134a46fbff1ae"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDUyMTU1Nw==", "bodyText": "Nice, thanks.", "url": "https://github.com/DataDog/dd-trace-java/pull/2082#discussion_r524521557", "createdAt": "2020-11-16T19:32:57Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/test/groovy/datadog/trace/api/PlatformTest.groovy", "diffHunk": "@@ -0,0 +1,45 @@\n+package datadog.trace.api\n+\n+import datadog.trace.test.util.DDSpecification\n+import org.junit.Assume\n+\n+class PlatformTest extends DDSpecification {\n+\n+  def \"is at least java 7\"() {\n+    expect: Platform.isJavaVersionAtLeast(7)\n+  }\n+\n+  def \"is at least java 8 when run on JDK1.8 or later\"() {\n+    Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.\")\n+      || System.getProperty(\"java.version\").startsWith(\"1.8.\"))\n+    expect: Platform.isJavaVersionAtLeast(8) && Platform.isJavaVersionAtLeast(7)\n+  }\n+\n+  def \"is at least java 11 when run on JDK11 or later\"() {\n+    Assume.assumeTrue(!System.getProperty(\"java.version\").startsWith(\"1.\")\n+    && !(System.getProperty(\"java.version\").startsWith(\"9.\")\n+      || System.getProperty(\"java.version\").startsWith(\"10.\")))\n+    expect: Platform.isJavaVersionAtLeast(11) && Platform.isJavaVersionAtLeast(8)\n+  }\n+\n+  def \"test parse #version\"() {\n+    when:\n+    int parsedVersion = Platform.parseJavaVersion(version)\n+    then:\n+    expected == parsedVersion\n+\n+    where:\n+    version     | expected\n+    \"1.7\"       | 7\n+    \"1.7.0\"     | 7\n+    \"1.8\"       | 8\n+    \"1.8.0\"     | 8\n+    \"1.8.0_212\" | 8\n+    \"1.8.0_212\" | 8", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDQ3NjE1MA=="}, "originalCommit": {"oid": "96956e6c9815e531d27aa682df4134a46fbff1ae"}, "originalPosition": 38}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4596, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}