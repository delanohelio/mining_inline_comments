{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEwNTg5NDc0", "number": 2033, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzo0MTozOFrOEy7d2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzo0MTozOFrOEy7d2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxODM4NTU0OnYy", "diffSide": "RIGHT", "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNzo0MTozOFrOHp2JQw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODowMToxMlrOHqQIUQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0MDc3MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                if (writer == null\n          \n          \n            \n                    || writer.getClass().getName().equals(\"datadog.trace.common.writer.DDAgentWriter\")) {\n          \n          \n            \n                  if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n          \n          \n            \n                    log.error(\n          \n          \n            \n                        \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n          \n          \n            \n                    throw new IllegalStateException(\"Datadog Tracer already installed\");\n          \n          \n            \n                  }\n          \n          \n            \n                }\n          \n          \n            \n                if ((writer == null\n          \n          \n            \n                    || writer.getClass().getName().equals(\"datadog.trace.common.writer.DDAgentWriter\")) &&\n          \n          \n            \n                  GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n          \n          \n            \n                    log.error(\n          \n          \n            \n                        \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n          \n          \n            \n                    throw new IllegalStateException(\"Datadog Tracer already installed\");\n          \n          \n            \n                }", "url": "https://github.com/DataDog/dd-trace-java/pull/2033#discussion_r513640771", "createdAt": "2020-10-28T17:41:38Z", "author": {"login": "randomanderson"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -200,10 +200,13 @@ private DDTracer(\n \n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n-    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.error(\n-          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n-      throw new IllegalStateException(\"Datadog Tracer already installed\");\n+    if (writer == null\n+        || writer.getClass().getName().equals(\"datadog.trace.common.writer.DDAgentWriter\")) {\n+      if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+        log.error(\n+            \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+        throw new IllegalStateException(\"Datadog Tracer already installed\");\n+      }\n     }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c77e83fb93298c43cde6b0c13d569b69e5407175"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0MTI5OA==", "bodyText": "These if statements can be combined.  I probably messed up the indentation using the Github web editor", "url": "https://github.com/DataDog/dd-trace-java/pull/2033#discussion_r513641298", "createdAt": "2020-10-28T17:42:25Z", "author": {"login": "randomanderson"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -200,10 +200,13 @@ private DDTracer(\n \n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n-    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.error(\n-          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n-      throw new IllegalStateException(\"Datadog Tracer already installed\");\n+    if (writer == null\n+        || writer.getClass().getName().equals(\"datadog.trace.common.writer.DDAgentWriter\")) {\n+      if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+        log.error(\n+            \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+        throw new IllegalStateException(\"Datadog Tracer already installed\");\n+      }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0MDc3MQ=="}, "originalCommit": {"oid": "c77e83fb93298c43cde6b0c13d569b69e5407175"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA2NjUxMw==", "bodyText": "Combined \ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/2033#discussion_r514066513", "createdAt": "2020-10-29T08:01:12Z", "author": {"login": "drodriguezhdez"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDTracer.java", "diffHunk": "@@ -200,10 +200,13 @@ private DDTracer(\n \n     // Check if the tracer is already installed by the agent\n     // Unable to use \"instanceof\" because of class renaming\n-    if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n-      log.error(\n-          \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n-      throw new IllegalStateException(\"Datadog Tracer already installed\");\n+    if (writer == null\n+        || writer.getClass().getName().equals(\"datadog.trace.common.writer.DDAgentWriter\")) {\n+      if (GlobalTracer.get().getClass().getName().equals(\"datadog.trace.agent.core.CoreTracer\")) {\n+        log.error(\n+            \"Datadog Tracer already installed by `dd-java-agent`. NOTE: Manually creating the tracer while using `dd-java-agent` is not supported\");\n+        throw new IllegalStateException(\"Datadog Tracer already installed\");\n+      }\n     }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY0MDc3MQ=="}, "originalCommit": {"oid": "c77e83fb93298c43cde6b0c13d569b69e5407175"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4763, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}