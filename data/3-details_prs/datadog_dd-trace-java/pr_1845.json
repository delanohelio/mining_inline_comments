{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMTAyODk1", "number": 1845, "title": "avoid statsdclient varargs in monitor", "bodyText": "Somehow (my fault) ended up with caching code in bootstrap, which led to some duplication and frequently offends sensibilities when opentelemetry sync changes. The first commit rectifies this. @bantonsson had got this right first time ;)\nMade RadixTreeBoxCache generic so it can contain other types you might want to associate with an HTTP status.\n(The point of this PR) - workaround StatsDClient varargs because we can't realistically get changes merged into it in the short term because it's undergoing a big refactoring at the moment.", "createdAt": "2020-09-08T14:53:41Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1845", "merged": true, "mergeCommit": {"oid": "68108e2eef3e157b0eb98c84e6f4bf7277bf4349"}, "closed": true, "closedAt": "2020-09-09T08:40:19Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdG4206gBqjM3NDEzOTExMDg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdHHKJ-AFqTQ4NDczMjk4OA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "93cfda038d46caeceaf107628f33bf57b5ae0b4a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/93cfda038d46caeceaf107628f33bf57b5ae0b4a", "committedDate": "2020-09-08T14:49:02Z", "message": "prevent varargs allocation in Monitor"}, "afterCommit": {"oid": "da9de1393e96acd9b5d67266fe213d049137c45b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/da9de1393e96acd9b5d67266fe213d049137c45b", "committedDate": "2020-09-08T14:55:12Z", "message": "prevent varargs allocation in Monitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21156bba40f22e6ba10744dd33094079104de157", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/21156bba40f22e6ba10744dd33094079104de157", "committedDate": "2020-09-08T15:00:15Z", "message": "move all caches and functions into internal API"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b83f4c3cad857d5a1a0ccbcbf22a3968fe754f0c", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b83f4c3cad857d5a1a0ccbcbf22a3968fe754f0c", "committedDate": "2020-09-08T15:00:15Z", "message": "make radixtreeboxcache values generic"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "da9de1393e96acd9b5d67266fe213d049137c45b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/da9de1393e96acd9b5d67266fe213d049137c45b", "committedDate": "2020-09-08T14:55:12Z", "message": "prevent varargs allocation in Monitor"}, "afterCommit": {"oid": "d9df230364f800b9292e7e79c038c249e35a36e7", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d9df230364f800b9292e7e79c038c249e35a36e7", "committedDate": "2020-09-08T15:00:15Z", "message": "prevent varargs allocation in Monitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c7914f1870daf6e71f472c8fb32d239c3738672b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7914f1870daf6e71f472c8fb32d239c3738672b", "committedDate": "2020-09-08T15:17:32Z", "message": "prevent varargs allocation in Monitor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d9df230364f800b9292e7e79c038c249e35a36e7", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d9df230364f800b9292e7e79c038c249e35a36e7", "committedDate": "2020-09-08T15:00:15Z", "message": "prevent varargs allocation in Monitor"}, "afterCommit": {"oid": "c7914f1870daf6e71f472c8fb32d239c3738672b", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c7914f1870daf6e71f472c8fb32d239c3738672b", "committedDate": "2020-09-08T15:17:32Z", "message": "prevent varargs allocation in Monitor"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9859aba08f333ee6195377d316a1d2280b58d023", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9859aba08f333ee6195377d316a1d2280b58d023", "committedDate": "2020-09-08T16:21:10Z", "message": "improve test coverage (no indirect coverage now)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ade00a3a16da855016efaaab0308be99387539bc", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ade00a3a16da855016efaaab0308be99387539bc", "committedDate": "2020-09-08T17:49:11Z", "message": "remove asserts"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0900ab636ee7a7018f2f609ade52d0c580102366", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0900ab636ee7a7018f2f609ade52d0c580102366", "committedDate": "2020-09-08T17:34:14Z", "message": "remove asserts"}, "afterCommit": {"oid": "ade00a3a16da855016efaaab0308be99387539bc", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ade00a3a16da855016efaaab0308be99387539bc", "committedDate": "2020-09-08T17:49:11Z", "message": "remove asserts"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NzMyOTg4", "url": "https://github.com/DataDog/dd-trace-java/pull/1845#pullrequestreview-484732988", "createdAt": "2020-09-09T07:30:59Z", "commit": {"oid": "c7914f1870daf6e71f472c8fb32d239c3738672b"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozMTowMFrOHO6UWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQwNzozNDozMFrOHO6bYA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5NzU5Mg==", "bodyText": "So if this is starting to show up, then we should seriously entertain the idea of fixing the statsd client.", "url": "https://github.com/DataDog/dd-trace-java/pull/1845#discussion_r485397592", "createdAt": "2020-09-09T07:31:00Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/monitor/Monitor.java", "diffHunk": "@@ -52,14 +66,14 @@ public Monitor(final StatsDClient statsd) {\n   }\n \n   public void onStart(final int queueCapacity) {\n-    statsd.recordGaugeValue(\"queue.max_length\", queueCapacity);\n+    statsd.recordGaugeValue(\"queue.max_length\", queueCapacity, NO_TAGS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c7914f1870daf6e71f472c8fb32d239c3738672b"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5ODEzNA==", "bodyText": "What a wonderful piece of code \ud83d\ude09", "url": "https://github.com/DataDog/dd-trace-java/pull/1845#discussion_r485398134", "createdAt": "2020-09-09T07:32:04Z", "author": {"login": "bantonsson"}, "path": "internal-api/src/test/groovy/datadog/trace/ThreadUtils.java", "diffHunk": "@@ -0,0 +1,97 @@\n+package datadog.trace;\n+\n+import groovy.lang.Closure;\n+import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ExecutorService;\n+import java.util.concurrent.Executors;\n+import java.util.concurrent.TimeUnit;\n+import java.util.concurrent.atomic.AtomicReference;\n+\n+public class ThreadUtils {\n+\n+  /**\n+   * Utility to easily run a Closure in parallel, i.e. in spock like this:\n+   *\n+   * <pre>{@code\n+   * def \"some test\"() {\n+   *   expect:\n+   *   runConcurrently(10, 100, {\n+   *     def something = ...\n+   *     def other = ...\n+   *     assert something == other\n+   *   })\n+   * }\n+   * }</pre>\n+   *\n+   * Writing a spock extension was investigated, but it is not possible to run an Invocation\n+   * multiple times concurrently since a lot of the spock internal state and mock scoping is not\n+   * thread safe.\n+   *\n+   * @param concurrency the number of concurrent invocations\n+   * @param totalInvocations the total number of invocations\n+   * @param closure the closure to run\n+   * @return true if everything went well\n+   * @throws Throwable if anything went wrong\n+   */\n+  public static boolean runConcurrently(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9859aba08f333ee6195377d316a1d2280b58d023"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTM5OTM5Mg==", "bodyText": "Why was this assert removed?", "url": "https://github.com/DataDog/dd-trace-java/pull/1845#discussion_r485399392", "createdAt": "2020-09-09T07:34:30Z", "author": {"login": "bantonsson"}, "path": "internal-api/src/main/java/datadog/trace/api/cache/RadixTreeCache.java", "diffHunk": "@@ -33,10 +33,6 @@ public Integer apply(int value) {\n   private final IntFunction<T> mapper;\n \n   public RadixTreeCache(int level1, int level2, IntFunction<T> mapper, int... commonValues) {\n-    assert Integer.bitCount(level1) == 1\n-        && Integer.bitCount(level2) == 1\n-        && level1 > 0\n-        && level2 > 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ade00a3a16da855016efaaab0308be99387539bc"}, "originalPosition": 7}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2016, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}