{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyODM2NTc4", "number": 1850, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNTowMVrOEhsbkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1OToxM1rOEoLY3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAzNzY2NDE4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wOVQxNDoxNTowMVrOHPJgaQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQwNjo1NTowMlrOHPlmDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NjQ0MQ==", "bodyText": "do we even CAS this anywhere? Can it be volatile boolean?", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r485646441", "createdAt": "2020-09-09T14:15:01Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -124,7 +133,7 @@ protected ScopeStack scopeStack() {\n     /** Continuation that created this scope. May be null. */\n     private final ContinuableScopeManager.Continuation continuation;\n     /** Flag to propagate this scope across async boundaries. */\n-    private final AtomicBoolean isAsyncPropagating = new AtomicBoolean(false);\n+    private final AtomicBoolean isAsyncPropagating;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b853ac6458e7c2541d25f15ef0050d3c2038a33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0ODIxNQ==", "bodyText": "I think this can indeed be volatile boolean", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r485648215", "createdAt": "2020-09-09T14:17:16Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -124,7 +133,7 @@ protected ScopeStack scopeStack() {\n     /** Continuation that created this scope. May be null. */\n     private final ContinuableScopeManager.Continuation continuation;\n     /** Flag to propagate this scope across async boundaries. */\n-    private final AtomicBoolean isAsyncPropagating = new AtomicBoolean(false);\n+    private final AtomicBoolean isAsyncPropagating;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NjQ0MQ=="}, "originalCommit": {"oid": "9b853ac6458e7c2541d25f15ef0050d3c2038a33"}, "originalPosition": 29}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjEwNjYzOQ==", "bodyText": "Yup, I think you are right.", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r486106639", "createdAt": "2020-09-10T06:55:02Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -124,7 +133,7 @@ protected ScopeStack scopeStack() {\n     /** Continuation that created this scope. May be null. */\n     private final ContinuableScopeManager.Continuation continuation;\n     /** Flag to propagate this scope across async boundaries. */\n-    private final AtomicBoolean isAsyncPropagating = new AtomicBoolean(false);\n+    private final AtomicBoolean isAsyncPropagating;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NTY0NjQ0MQ=="}, "originalCommit": {"oid": "9b853ac6458e7c2541d25f15ef0050d3c2038a33"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTYzOTUyOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NzowNVrOHZHapA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNjo1OTo1OVrOHZdjfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5Nzk1Ng==", "bodyText": "I hate the convention of adding final to all parameters - I find it adds it adds at least six characters of noise to every line - but I don't like the inconsistency here either, and because some people use an IDE plugin which applies rules on file save this will result in style diffs when they change this file.", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496097956", "createdAt": "2020-09-28T16:57:05Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -87,12 +106,40 @@ public AgentScope activate(final AgentSpan span, final ScopeSource source) {\n       return AgentTracer.NoopAgentScope.INSTANCE;\n     }\n \n-    return handleSpan(null, span, source);\n+    return handleSpan(\n+        inheritAsyncPropagation ? active : null,\n+        null,\n+        span,\n+        source,\n+        overrideAsyncPropagation,\n+        isAsyncPropagating);\n   }\n \n   private ContinuableScope handleSpan(\n-      final Continuation continuation, final AgentSpan span, final ScopeSource source) {\n-    final ContinuableScope scope = new ContinuableScope(this, continuation, span, source);\n+      final Continuation continuation,\n+      final AgentSpan span,\n+      final ScopeSource source,\n+      boolean overrideAsyncPropagation,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 77}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2MDY3MQ==", "bodyText": "Fine, I'll change it, but I think such auto rules should be illegal.", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496460671", "createdAt": "2020-09-29T06:59:59Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -87,12 +106,40 @@ public AgentScope activate(final AgentSpan span, final ScopeSource source) {\n       return AgentTracer.NoopAgentScope.INSTANCE;\n     }\n \n-    return handleSpan(null, span, source);\n+    return handleSpan(\n+        inheritAsyncPropagation ? active : null,\n+        null,\n+        span,\n+        source,\n+        overrideAsyncPropagation,\n+        isAsyncPropagating);\n   }\n \n   private ContinuableScope handleSpan(\n-      final Continuation continuation, final AgentSpan span, final ScopeSource source) {\n-    final ContinuableScope scope = new ContinuableScope(this, continuation, span, source);\n+      final Continuation continuation,\n+      final AgentSpan span,\n+      final ScopeSource source,\n+      boolean overrideAsyncPropagation,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5Nzk1Ng=="}, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 77}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTY0MDU2OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1NzoyM1rOHZHbYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0MzoyMlrOHZt21g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5ODE0NA==", "bodyText": "\ud83e\udd47", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496098144", "createdAt": "2020-09-28T16:57:23Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -124,7 +171,7 @@ protected ScopeStack scopeStack() {\n     /** Continuation that created this scope. May be null. */\n     private final ContinuableScopeManager.Continuation continuation;\n     /** Flag to propagate this scope across async boundaries. */\n-    private final AtomicBoolean isAsyncPropagating = new AtomicBoolean(false);\n+    private volatile boolean isAsyncPropagating;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 106}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjcyNzc2Ng==", "bodyText": "I think it might not even need to be volatile...", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496727766", "createdAt": "2020-09-29T13:43:22Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -124,7 +171,7 @@ protected ScopeStack scopeStack() {\n     /** Continuation that created this scope. May be null. */\n     private final ContinuableScopeManager.Continuation continuation;\n     /** Flag to propagate this scope across async boundaries. */\n-    private final AtomicBoolean isAsyncPropagating = new AtomicBoolean(false);\n+    private volatile boolean isAsyncPropagating;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5ODE0NA=="}, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 106}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNTY1MDg0OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQxNjo1OToxM1rOHZHhYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQwNzowMDoyM1rOHZdkXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5OTY4MA==", "bodyText": "What do true and false correspond to here? I know I can go and look at the signature but it's a context switch. Can we hoist them out into named variables to make the code self-documenting?", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496099680", "createdAt": "2020-09-28T16:59:13Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -337,13 +386,13 @@ private Continuation register() {\n     @Override\n     public AgentScope activate() {\n       if (used.compareAndSet(false, true)) {\n-        final AgentScope scope = scopeManager.handleSpan(this, spanUnderScope, source);\n+        final AgentScope scope = scopeManager.handleSpan(this, spanUnderScope, source, true, false);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 144}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjQ2MDg5Mg==", "bodyText": "Sure, I'll move them out for readbility.", "url": "https://github.com/DataDog/dd-trace-java/pull/1850#discussion_r496460892", "createdAt": "2020-09-29T07:00:23Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -337,13 +386,13 @@ private Continuation register() {\n     @Override\n     public AgentScope activate() {\n       if (used.compareAndSet(false, true)) {\n-        final AgentScope scope = scopeManager.handleSpan(this, spanUnderScope, source);\n+        final AgentScope scope = scopeManager.handleSpan(this, spanUnderScope, source, true, false);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjA5OTY4MA=="}, "originalCommit": {"oid": "541ae4a998e8dc6219a2cd2e5c6aa5d8e3e5fa54"}, "originalPosition": 144}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4795, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}