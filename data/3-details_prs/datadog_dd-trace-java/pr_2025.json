{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA4NTgzNjM1", "number": 2025, "title": "Config override and system properties for tests cleanup", "bodyText": "My third attempt at fixing config overrides for tests.  Previous failures: #1034, #1007\nThe goals of this PR are:\n\nMake it impossible for system config or environment variables to leak between tests\nEliminate the need to manually cleanup any properties\nSimplify the \"Config override\" interface\nEliminate static code blocks in tests that alter config or set properties\n\nTo that end, the new interface is:\n\ninjectSysConfig(name, value)\nremoveSysConfig(name)\ninjectEnvConfig(name, value)\nremoveEnvConfig(name)\n\nAll methods update the Config instance to reflect the current state.\nTests extending AgentTestRunner\nThe main use case for static blocks were tests that needed to set properties before the agent instrumentation runs.  These tests can now override configurePreAgent() and call any of the above methods.\nFuture work\n\nThere are tests that can't extend DDSpecification.  They still need to manually clear config.  This will be addressed in a followup PR.\nThe tests reveal the RabbitMQ instrumentation is broken w.r.t. e2e duration.  This was hidden by the fact that the config was always a certain way", "createdAt": "2020-10-22T22:05:02Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2025", "merged": true, "mergeCommit": {"oid": "ad15655605e6b6a8b040ef4405dd99ee891a6e37"}, "closed": true, "closedAt": "2020-10-28T16:08:54Z", "author": {"login": "randomanderson"}, "timelineItems": {"totalCount": 21, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdVZRwcAH2gAyNTA4NTgzNjM1OmVhY2U0MTI0MjJkZTc1NTM5MGQwZWE4NjAyYTRmNGZmZmU3MjhhMjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdW-oc4AFqTUxODczODU0Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "eace412422de755390d0ea8602a4f4fffe728a23", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/eace412422de755390d0ea8602a4f4fffe728a23", "committedDate": "2020-10-23T16:36:40Z", "message": "Config and system properties preservation in ddspec"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "996875cfb6ff429b78b86792becea69b6167fc4f", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/996875cfb6ff429b78b86792becea69b6167fc4f", "committedDate": "2020-10-23T16:37:48Z", "message": "Replace withConfigOverride() with injectConfig()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "012cc9b10f2e1a0f82494f5d0d8612a481b3ebf5", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/012cc9b10f2e1a0f82494f5d0d8612a481b3ebf5", "committedDate": "2020-10-23T16:37:49Z", "message": "Replace updateConfig() with injectConfig()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2efa8aca34a4cef83d208152d1f9aee1b11b3c49", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2efa8aca34a4cef83d208152d1f9aee1b11b3c49", "committedDate": "2020-10-23T16:37:49Z", "message": "Add preagent configuration"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14961adbaeb0a9cc1b0de5b9116c366111dfc2d9", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/14961adbaeb0a9cc1b0de5b9116c366111dfc2d9", "committedDate": "2020-10-23T16:37:49Z", "message": "Use configurePreAgent() everywhere"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8299976afcee93bc24e327322179f620139a2bb", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b8299976afcee93bc24e327322179f620139a2bb", "committedDate": "2020-10-23T16:37:49Z", "message": "Allow dd-trace-api tests to run + codenarc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7533f07af91315911e7f5cb31eac9895cf2f1f1a", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7533f07af91315911e7f5cb31eac9895cf2f1f1a", "committedDate": "2020-10-22T21:51:57Z", "message": "Use configurePreAgent() everywhere"}, "afterCommit": {"oid": "b8299976afcee93bc24e327322179f620139a2bb", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b8299976afcee93bc24e327322179f620139a2bb", "committedDate": "2020-10-23T16:37:49Z", "message": "Allow dd-trace-api tests to run + codenarc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5a4d6036e8775cf518a1ff70ad9dfe2f5e874f3e", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5a4d6036e8775cf518a1ff70ad9dfe2f5e874f3e", "committedDate": "2020-10-23T17:28:01Z", "message": "Fix merged exit-on-failure branch"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "13ea159aa1f3d5267e05f471b2dcb29e3a8ad24a", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/13ea159aa1f3d5267e05f471b2dcb29e3a8ad24a", "committedDate": "2020-10-23T18:56:39Z", "message": "codenarc"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d76e8bdb1c842e50b78f3771aafb2556ead249a4", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d76e8bdb1c842e50b78f3771aafb2556ead249a4", "committedDate": "2020-10-23T18:59:48Z", "message": "Restore config in cleanup because of instance variables"}, "afterCommit": {"oid": "26e03973287688e735cac0743504da486194ad54", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/26e03973287688e735cac0743504da486194ad54", "committedDate": "2020-10-23T19:19:10Z", "message": "Restore config in cleanup because of instance variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbfda75c6845c90ecca0ecdf73c974dbff818c4b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fbfda75c6845c90ecca0ecdf73c974dbff818c4b", "committedDate": "2020-10-23T20:27:40Z", "message": "Restore config in cleanup because of instance variables"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "26e03973287688e735cac0743504da486194ad54", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/26e03973287688e735cac0743504da486194ad54", "committedDate": "2020-10-23T19:19:10Z", "message": "Restore config in cleanup because of instance variables"}, "afterCommit": {"oid": "fbfda75c6845c90ecca0ecdf73c974dbff818c4b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/fbfda75c6845c90ecca0ecdf73c974dbff818c4b", "committedDate": "2020-10-23T20:27:40Z", "message": "Restore config in cleanup because of instance variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "81b26ac3279b2ab6f510c76625a344c309d8d06b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81b26ac3279b2ab6f510c76625a344c309d8d06b", "committedDate": "2020-10-23T21:32:29Z", "message": "test fixes"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ec3b1d14d24cf028fe846bace9b55b418cd922d", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1ec3b1d14d24cf028fe846bace9b55b418cd922d", "committedDate": "2020-10-23T20:53:08Z", "message": "test fixes"}, "afterCommit": {"oid": "81b26ac3279b2ab6f510c76625a344c309d8d06b", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81b26ac3279b2ab6f510c76625a344c309d8d06b", "committedDate": "2020-10-23T21:32:29Z", "message": "test fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "60caa3dd8dd4b5735fcfee0ec65618df4d9bd6aa", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/60caa3dd8dd4b5735fcfee0ec65618df4d9bd6aa", "committedDate": "2020-10-23T23:29:57Z", "message": "RabbitMQ instrumentation has a bug"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/dd164ed47abb3d28ead369880c43ea06c167f0a2", "committedDate": "2020-10-24T03:04:18Z", "message": "Needs to extend AgentTestRunner"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE2ODAzNTE1", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#pullrequestreview-516803515", "createdAt": "2020-10-26T13:58:46Z", "commit": {"oid": "996875cfb6ff429b78b86792becea69b6167fc4f"}, "state": "COMMENTED", "comments": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxMzo1ODo0NlrOHoQyCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNlQxNDo0MDozOFrOHoSv3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4MDA0Mg==", "bodyText": "Do these need to be removed as a dependency declaration from somewhere?", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511980042", "createdAt": "2020-10-26T13:58:46Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/CoreTracerTest.groovy", "diffHunk": "@@ -31,22 +27,13 @@ import static datadog.trace.api.config.TracerConfig.PRIORITY_SAMPLING\n import static datadog.trace.api.config.TracerConfig.SERVICE_MAPPING\n import static datadog.trace.api.config.TracerConfig.SPAN_TAGS\n import static datadog.trace.api.config.TracerConfig.WRITER_TYPE\n-import static datadog.trace.bootstrap.config.provider.SystemPropertiesConfigSource.PREFIX\n \n @Timeout(10)\n class CoreTracerTest extends DDSpecification {\n \n-  @Rule\n-  public final RestoreSystemProperties restoreSystemProperties = new RestoreSystemProperties()\n-  @Rule\n-  public final EnvironmentVariables environmentVariables = new EnvironmentVariables()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996875cfb6ff429b78b86792becea69b6167fc4f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4MTQwMw==", "bodyText": "Is changing expect -> when/then an important/required change or just done for consistency/style? (I'm fine with it, just making sure I understand.)", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511981403", "createdAt": "2020-10-26T14:00:31Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/testing/src/main/groovy/datadog/trace/agent/test/base/HttpServerTest.groovy", "diffHunk": "@@ -309,12 +309,13 @@ abstract class HttpServerTest<SERVER> extends AgentTestRunner {\n \n   def \"test tag query string for #endpoint\"() {\n     setup:\n+    injectSysConfig(HTTP_SERVER_TAG_QUERY_STRING, \"true\")\n     def request = request(endpoint, method, body).build()\n-    Response response = withConfigOverride(\"http.server.tag.query-string\", \"true\") {\n-      client.newCall(request).execute()\n-    }\n \n-    expect:\n+    when:\n+    Response response = client.newCall(request).execute()\n+\n+    then:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "996875cfb6ff429b78b86792becea69b6167fc4f"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4MzY1Mw==", "bodyText": "Probably not a big deal, but the result of this change is that config is reconstructed twice instead of just once.", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511983653", "createdAt": "2020-10-26T14:03:39Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/core/util/SystemAccessTest.groovy", "diffHunk": "@@ -106,10 +102,8 @@ class SystemAccessTest extends DDSpecification {\n \n   def \"Test getVMArguments\"() {\n     setup:\n-    ConfigUtils.updateConfig {\n-      System.setProperty(PREFIX + PROFILING_ENABLED, profilingEnabled.toString())\n-      System.setProperty(PREFIX + HEALTH_METRICS_ENABLED, healthMetricsEnabled.toString())\n-    }\n+    injectSysConfig(PROFILING_ENABLED, profilingEnabled.toString())\n+    injectSysConfig(HEALTH_METRICS_ENABLED, healthMetricsEnabled.toString())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "012cc9b10f2e1a0f82494f5d0d8612a481b3ebf5"}, "originalPosition": 52}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk4NzgzMg==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511987832", "createdAt": "2020-10-26T14:09:19Z", "author": {"login": "tylerbenson"}, "path": "utils/test-utils/src/main/groovy/datadog/trace/test/util/DDSpecification.groovy", "diffHunk": "@@ -15,13 +20,24 @@ import static net.bytebuddy.matcher.ElementMatchers.none\n abstract class DDSpecification extends Specification {\n   private static final String CONFIG = \"datadog.trace.api.Config\"\n \n+  private static Field configInstanceField\n+  private static Constructor configConstructor\n+\n   static {\n     makeConfigInstanceModifiable()\n   }\n \n   // Keep track of config instance already made modifiable\n   private static isConfigInstanceModifiable = false\n \n+  @Rule\n+  public final ResetControllableEnvironmentVariables environmentVariables = new ResetControllableEnvironmentVariables()\n+\n+  // Intentionally not using the RestoreSystemProperties @Rule because this needs to save properties\n+  // in the BeforeClass stage instead of Before stage.  Even manually calling before()/after\n+  // doesn't work because the properties object is not cloned for each invocation\n+  private static Properties originalSystemProperties", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5NDI5NQ==", "bodyText": "Why does it matter if this is setup or setupSpec?", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511994295", "createdAt": "2020-10-26T14:18:06Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/test_before_1_11_106/groovy/AWS0ClientTest.groovy", "diffHunk": "@@ -37,16 +37,11 @@ class AWS0ClientTest extends AgentTestRunner {\n     new ProfileCredentialsProvider(),\n     new InstanceProfileCredentialsProvider())\n \n-  def setupSpec() {\n+  def setup() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5NjcwMA==", "bodyText": "What's the motivation for this change?", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511996700", "createdAt": "2020-10-26T14:21:21Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/jdbc/src/test/groovy/JDBCConnectionUrlParserTest.groovy", "diffHunk": "@@ -1,10 +1,10 @@\n+import datadog.trace.agent.test.AgentTestRunner\n import datadog.trace.bootstrap.instrumentation.jdbc.DBInfo\n-import datadog.trace.test.util.DDSpecification\n import spock.lang.Shared\n \n import static datadog.trace.bootstrap.instrumentation.jdbc.JDBCConnectionUrlParser.parse\n \n-class JDBCConnectionUrlParserTest extends DDSpecification {\n+class JDBCConnectionUrlParserTest extends AgentTestRunner {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTk5ODUyMg==", "bodyText": "Why did these need to be moved to setup?", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r511998522", "createdAt": "2020-10-26T14:23:40Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/rabbitmq-amqp-2.7/src/test/groovy/RabbitMQTest.groovy", "diffHunk": "@@ -47,12 +40,23 @@ class RabbitMQTest extends AgentTestRunner {\n   def defaultRabbitMQPort = 5672\n   @Shared\n   InetSocketAddress rabbitmqAddress = new InetSocketAddress(\"127.0.0.1\", defaultRabbitMQPort)\n-  @Shared\n-  boolean expectE2EDuration = Boolean.valueOf(System.getProperty(\"dd.amqp.e2e.duration.enabled\"))\n \n-  ConnectionFactory factory = new ConnectionFactory(host: rabbitmqAddress.hostName, port: rabbitmqAddress.port)\n-  Connection conn = factory.newConnection()\n-  Channel channel = conn.createChannel()\n+  def factory\n+  def conn\n+  def channel\n+\n+  @Override\n+  void configurePreAgent() {\n+    super.configurePreAgent()\n+\n+    injectSysConfig(\"dd.amqp.e2e.duration.enabled\", \"true\")\n+  }\n+\n+  def setup() {\n+    factory = new ConnectionFactory(host: rabbitmqAddress.hostName, port: rabbitmqAddress.port)\n+    conn = factory.newConnection()\n+    channel = conn.createChannel()\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMTQ0OA==", "bodyText": "oops... Is this cleanup even needed anymore? I think you've generally removed all the other similar cleanup methods.", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r512001448", "createdAt": "2020-10-26T14:27:13Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/src/test/groovy/datadog/trace/agent/JMXFetchTest.groovy", "diffHunk": "@@ -80,7 +80,7 @@ class JMXFetchTest extends Specification {\n \n     cleanup:\n     names.each {\n-      System.clearProperty(\"dd.integration.${it}.enabled\")\n+      System.clearProperty(\"dd.jmxfetch.${it}.enabled\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAwMzQ0NA==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r512003444", "createdAt": "2020-10-26T14:29:46Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/testing/src/main/groovy/datadog/trace/agent/test/AgentTestRunner.java", "diffHunk": "@@ -285,7 +287,7 @@ public static void blockUntilChildSpansFinished(final int numberOfSpans) {\n     }\n   }\n \n-  public static class TestRunnerListener implements AgentBuilder.Listener {\n+  public static class TestRunnerListener extends AgentBuilder.Listener.Adapter {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjAxMjI1Mw==", "bodyText": "I think ShouldBeConstructedWithoutConfig is a bit confusing... consider calling this method directly and having this method return new Object() so it can be a valid assignment. (I don't think it matters that the assertion be done within the constructor.)", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r512012253", "createdAt": "2020-10-26T14:40:38Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/testing/src/test/groovy/ConfigResetTest.groovy", "diffHunk": "@@ -0,0 +1,91 @@\n+import datadog.trace.agent.test.AgentTestRunner\n+import datadog.trace.api.Config\n+import spock.lang.Shared\n+\n+class ConfigResetTest extends AgentTestRunner {\n+\n+  @Shared\n+  def sharedInstance = new ShouldBeConstructedWithoutConfig()\n+\n+  @Shared\n+  def sharedInstanceCreatedInSetup\n+\n+  def notSharedInstance = new ShouldBeConstructedWithoutConfig()\n+\n+  def notSharedInstanceCreatedInSetup\n+\n+  def setupSpec() {\n+    sharedInstanceCreatedInSetup = new ShouldBeConstructedWithoutConfig()\n+  }\n+\n+  def setup() {\n+    notSharedInstanceCreatedInSetup = new ShouldBeConstructedWithoutConfig()\n+  }\n+\n+  static void checkStaticAssertions() {\n+    assert System.getProperty(\"dd.trace.enabled\") == null\n+    assert System.getenv(\"DD_TRACE_ENABLED\") == null\n+    assert Config.get().isTraceEnabled()\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dd164ed47abb3d28ead369880c43ea06c167f0a2"}, "originalPosition": 29}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a0db32e071f6bfb11af9dcabdf4a9827e5835b49", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a0db32e071f6bfb11af9dcabdf4a9827e5835b49", "committedDate": "2020-10-26T17:04:23Z", "message": "Updating ConfigReset test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a04f602f724c2890067ce40144f11ed45116b7f6", "author": {"user": {"login": "randomanderson", "name": "Laplie Anderson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a04f602f724c2890067ce40144f11ed45116b7f6", "committedDate": "2020-10-26T17:53:00Z", "message": "remove extra system-rules dependencies"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE3MTI1NzAy", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#pullrequestreview-517125702", "createdAt": "2020-10-26T19:54:10Z", "commit": {"oid": "a04f602f724c2890067ce40144f11ed45116b7f6"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NzM4NTQ3", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#pullrequestreview-518738547", "createdAt": "2020-10-28T14:41:32Z", "commit": {"oid": "a04f602f724c2890067ce40144f11ed45116b7f6"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo0MTozMlrOHptiTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxNDo0MTozMlrOHptiTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzQ5OTcyNg==", "bodyText": "\ud83d\udc4d For the paranoid checks.", "url": "https://github.com/DataDog/dd-trace-java/pull/2025#discussion_r513499726", "createdAt": "2020-10-28T14:41:32Z", "author": {"login": "bantonsson"}, "path": "utils/test-utils/src/main/groovy/datadog/trace/test/util/DDSpecification.groovy", "diffHunk": "@@ -43,6 +59,123 @@ abstract class DDSpecification extends Specification {\n           .transform(Transformer.ForField.withModifiers(PUBLIC, STATIC, VOLATILE))\n       }\n       .installOn(instrumentation)\n-    isConfigInstanceModifiable = true\n+\n+    try {\n+      Class configClass = Class.forName(CONFIG)\n+      configInstanceField = configClass.getDeclaredField(\"INSTANCE\")\n+      configConstructor = configClass.getDeclaredConstructor()\n+      configConstructor.setAccessible(true)\n+      isConfigInstanceModifiable = true\n+    } catch (ReflectiveOperationException e) {\n+      println(\"Config will not be modifiable\")\n+      e.printStackTrace()\n+    }\n+  }\n+\n+  private void saveProperties() {\n+    originalSystemProperties = new Properties()\n+    originalSystemProperties.putAll(System.properties)\n+  }\n+\n+  private void restoreProperties() {\n+    Properties copy = new Properties()\n+    copy.putAll(originalSystemProperties)\n+    System.setProperties(copy)\n+\n+    environmentVariables?.reset()\n+  }\n+\n+  void setupSpec() {\n+    assert System.getenv().findAll { it.key.startsWith(\"DD_\") }.isEmpty()\n+    assert System.getProperties().findAll { it.key.toString().startsWith(\"dd.\") }.isEmpty()\n+\n+    saveProperties()\n+  }\n+\n+  void cleanupSpec() {\n+    restoreProperties()\n+\n+    assert System.getenv().findAll { it.key.startsWith(\"DD_\") }.isEmpty()\n+    assert System.getProperties().findAll { it.key.toString().startsWith(\"dd.\") }.isEmpty()\n+\n+    if (isConfigInstanceModifiable) {\n+      rebuildConfig()\n+    }\n+  }\n+\n+  void setup() {\n+    restoreProperties()\n+\n+    assert System.getenv().findAll { it.key.startsWith(\"DD_\") }.isEmpty()\n+    assert System.getProperties().findAll { it.key.toString().startsWith(\"dd.\") }.isEmpty()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a04f602f724c2890067ce40144f11ed45116b7f6"}, "originalPosition": 92}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3045, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}