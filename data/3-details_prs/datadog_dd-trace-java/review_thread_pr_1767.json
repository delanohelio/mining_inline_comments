{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2NjY0NjE1", "number": 1767, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1Mjo0MlrOEXqc-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMToyMlrOEXq_JQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjQ4MjUwOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1Mjo0MlrOG_k_cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNDo1NzoxMFrOG_lMmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxOTUzNw==", "bodyText": "I don't understand why sending a new ArrayList is better than sending this.", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469319537", "createdAt": "2020-08-12T14:52:42Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -248,8 +253,18 @@ private synchronized void write() {\n     if (isWritten.compareAndSet(false, true)) {\n       removePendingTrace();\n       if (!isEmpty()) {\n-        log.debug(\"Writing {} spans to {}.\", size(), tracer.writer);\n-        tracer.write(this);\n+        int size = size();\n+        if (log.isDebugEnabled()) {\n+          log.debug(\"Writing {} spans to {}.\", size, tracer.writer);\n+        }\n+        List<DDSpan> trace = new ArrayList<>(size);\n+        trace.addAll(this);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMyMjkwNg==", "bodyText": "Because CoreTracer always copies its input between one and four times. The aim is to avoid copying when we do a partial flush. This just simplifies it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469322906", "createdAt": "2020-08-12T14:57:10Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -248,8 +253,18 @@ private synchronized void write() {\n     if (isWritten.compareAndSet(false, true)) {\n       removePendingTrace();\n       if (!isEmpty()) {\n-        log.debug(\"Writing {} spans to {}.\", size(), tracer.writer);\n-        tracer.write(this);\n+        int size = size();\n+        if (log.isDebugEnabled()) {\n+          log.debug(\"Writing {} spans to {}.\", size, tracer.writer);\n+        }\n+        List<DDSpan> trace = new ArrayList<>(size);\n+        trace.addAll(this);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMxOTUzNw=="}, "originalCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMjU2OTk3OnYy", "diffSide": "LEFT", "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMToyMlrOG_l1dA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNToxMToyMlrOG_l1dA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTMzMzM2NA==", "bodyText": "@tylerbenson this is the important bit", "url": "https://github.com/DataDog/dd-trace-java/pull/1767#discussion_r469333364", "createdAt": "2020-08-12T15:11:22Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/CoreTracer.java", "diffHunk": "@@ -381,14 +381,12 @@ public AgentSpan noopSpan() {\n    *\n    * @param trace a list of the spans related to the same trace\n    */\n-  void write(final Collection<DDSpan> trace) {\n+  void write(final List<DDSpan> trace) {\n     if (trace.isEmpty()) {\n       return;\n     }\n-    final ArrayList<DDSpan> writtenTrace;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3ccda9316eeb15aec5f087f09681b139b8b308d9"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 20, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}