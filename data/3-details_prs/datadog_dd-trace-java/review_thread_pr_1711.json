{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDU2MjAxODI1", "number": 1711, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDowNTowNFrOER1fJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNjozMjo1MVrOESBmmg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MTM3NTc1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDowNTowNFrOG2wpfA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNFQxNDowODowNVrOG2wwcQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA==", "bodyText": "I think muzzle will cause problems here... it will prevent the instrumentation from loading on any classloader that doesn't have the new method.  You'll likely need to split/copy the instrumentation to handle this properly.", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460073340", "createdAt": "2020-07-24T14:05:04Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +41,10 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n-    return httpResponse.statusCode().value();\n+    try {\n+      return httpResponse.rawStatusCode();\n+    } catch (NoSuchMethodError mustBeUsingWebfluxV5_0) { // method not available in 5.0.0\n+      return httpResponse.statusCode().value();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3NDQwMA==", "bodyText": "can't we add excludes to muzzle like we ignore JDK classes?", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460074400", "createdAt": "2020-07-24T14:06:50Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +41,10 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n-    return httpResponse.statusCode().value();\n+    try {\n+      return httpResponse.rawStatusCode();\n+    } catch (NoSuchMethodError mustBeUsingWebfluxV5_0) { // method not available in 5.0.0\n+      return httpResponse.statusCode().value();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA=="}, "originalCommit": {"oid": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3NTEyMQ==", "bodyText": "Also, muzzle passes for 5.0.0?", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460075121", "createdAt": "2020-07-24T14:08:05Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +41,10 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n-    return httpResponse.statusCode().value();\n+    try {\n+      return httpResponse.rawStatusCode();\n+    } catch (NoSuchMethodError mustBeUsingWebfluxV5_0) { // method not available in 5.0.0\n+      return httpResponse.statusCode().value();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDA3MzM0MA=="}, "originalCommit": {"oid": "5b37fbeb6aaa62afd395fc5047f08217411d1aeb"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzM2MDM4OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNjozMTo1MFrOG3C6sQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwODozMToyNVrOG3DeYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjY1Nw==", "bodyText": "This var is mutable and we can't guarantee no side effects here. That's why it's better to be lower case (same as log):\nhttps://google.github.io/styleguide/javaguide.html#s5.2.4-constant-names", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460372657", "createdAt": "2020-07-25T06:31:50Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -11,6 +14,8 @@\n public class SpringWebfluxHttpClientDecorator\n     extends HttpClientDecorator<ClientRequest, ClientResponse> {\n \n+  private static final MethodHandle RAW_STATUS_CODE = findRawStatusCode();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "017b268d7245cd716105b6e1ca415795319b309f"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM4MTc5Mw==", "bodyText": "It's not mutable.", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460381793", "createdAt": "2020-07-25T08:31:25Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -11,6 +14,8 @@\n public class SpringWebfluxHttpClientDecorator\n     extends HttpClientDecorator<ClientRequest, ClientResponse> {\n \n+  private static final MethodHandle RAW_STATUS_CODE = findRawStatusCode();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjY1Nw=="}, "originalCommit": {"oid": "017b268d7245cd716105b6e1ca415795319b309f"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg3MzM2MDkwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNjozMjo1MVrOG3C68Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yNVQwNjozMjo1MVrOG3C68Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MDM3MjcyMQ==", "bodyText": "maybe log.debug()", "url": "https://github.com/DataDog/dd-trace-java/pull/1711#discussion_r460372721", "createdAt": "2020-07-25T06:32:51Z", "author": {"login": "lpriima"}, "path": "dd-java-agent/instrumentation/spring-webflux-5/src/main/java8/datadog/trace/instrumentation/springwebflux/client/SpringWebfluxHttpClientDecorator.java", "diffHunk": "@@ -41,6 +46,21 @@ protected URI url(final ClientRequest httpRequest) {\n \n   @Override\n   protected Integer status(final ClientResponse httpResponse) {\n+    if (null != RAW_STATUS_CODE) {\n+      try {\n+        return (int) RAW_STATUS_CODE.invokeExact(httpResponse);\n+      } catch (Throwable ignored) {\n+      }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "017b268d7245cd716105b6e1ca415795319b309f"}, "originalPosition": 27}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4954, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}