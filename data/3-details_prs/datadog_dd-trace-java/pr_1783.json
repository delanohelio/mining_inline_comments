{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDcwMDEwMTA4", "number": 1783, "title": "CI-App: JUnit5 Instrumentation", "bodyText": "Description\n\nAdded instrumentation to trace JUnit5 v5.3.0+ test executions.\n\nThe instrumentation is applied to the constructor of the class org.junit.platform.launcher.Launcher which will be executed during the JUnit5 test framework launching.\nOnce the org.junit.platform.launcher.Launcher constructor is executed, the datadog.trace.instrumentation.junit5.TracingListener is registered in that Launcher instance.\nA datadog.trace.instrumentation.junit5.JUnit5Decorator instance is used in the listener methods to report the traces.\nThe instrumentation will be disabled by default. This can be enabled configuring the following:\n\nEnvironment Variable: DD_INTEGRATION_JUNIT-5_ENABLED=true\nSystem Property: -Ddd.integration.junit-5.enabled=true\n\nAdditionally, some test java classes are created to be used in the tests of this instrumentation. As these classes contain executable tests, it's necessary to exclude them explicitly in the java.gradle file to avoid being executed as part of the dd-java-agent build.", "createdAt": "2020-08-19T08:37:15Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1783", "merged": true, "mergeCommit": {"oid": "dca3f9e222d5e0d92cb7b5eea7045e481168393c"}, "closed": true, "closedAt": "2020-08-27T14:55:02Z", "author": {"login": "drodriguezhdez"}, "timelineItems": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdAZKm_gFqTQ3MDMzMjIzMg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdDBP06AH2gAyNDcwMDEwMTA4OmY1YThiZDhjMTg3Yjk4MDVmYjBkYzU2MTAwOWVhNTdjYmI5NDAxZTc=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMzMyMjMy", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#pullrequestreview-470332232", "createdAt": "2020-08-19T10:36:27Z", "commit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDozNjoyN1rOHDBb3Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQxMDozNjoyN1rOHDBb3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjkzMTI5Mw==", "bodyText": "This must be quite high cardinality?", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r472931293", "createdAt": "2020-08-19T10:36:27Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/junit-5.3.2/src/main/java/datadog/trace/instrumentation/junit5/JUnit5Decorator.java", "diffHunk": "@@ -0,0 +1,58 @@\n+package datadog.trace.instrumentation.junit5;\n+\n+import datadog.trace.api.DDTags;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+import datadog.trace.bootstrap.instrumentation.decorator.TestDecorator;\n+import lombok.extern.slf4j.Slf4j;\n+import org.junit.platform.engine.TestExecutionResult;\n+import org.junit.platform.engine.support.descriptor.MethodSource;\n+\n+@Slf4j\n+public class JUnit5Decorator extends TestDecorator {\n+\n+  public static final JUnit5Decorator DECORATE = new JUnit5Decorator();\n+\n+  @Override\n+  public String testFramework() {\n+    return \"junit5\";\n+  }\n+\n+  @Override\n+  protected String[] instrumentationNames() {\n+    return new String[] {\"junit\", \"junit-5\"};\n+  }\n+\n+  @Override\n+  public String component() {\n+    return \"junit\";\n+  }\n+\n+  public void onTestStart(final AgentSpan span, final MethodSource methodSource) {\n+    onTestStart(span, methodSource.getClassName(), methodSource.getMethodName());\n+  }\n+\n+  public void onTestStart(final AgentSpan span, final String testSuite, final String testName) {\n+    span.setTag(DDTags.RESOURCE_NAME, testSuite + \".\" + testName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5"}, "originalPosition": 35}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcxODE1MjEy", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#pullrequestreview-471815212", "createdAt": "2020-08-20T17:01:17Z", "commit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzowMToxOFrOHELNwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yMFQxNzowMjo0N1rOHELQ1w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDA5OA==", "bodyText": "You should not set this manually since it would cause the Instrumentation class to be incompatible with Java 7.  You should use the java8 source set that is created automatically with the minJavaVersionForTests config.", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r474140098", "createdAt": "2020-08-20T17:01:18Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/junit-5.3.2/junit-5.3.2.gradle", "diffHunk": "@@ -0,0 +1,36 @@\n+// Set properties before any plugins get loaded\n+ext {\n+  // JUnit5 requires Java 1.8+\n+  minJavaVersionForTests = JavaVersion.VERSION_1_8\n+}\n+\n+apply from: \"$rootDir/gradle/java.gradle\"\n+\n+def jupiterVersion = '5.3.2'\n+def platformVersion = '1.3.2'\n+\n+muzzle {\n+  pass {\n+    group = 'org.junit.platform'\n+    module = 'junit-platform-launcher'\n+    versions = \"[$platformVersion,)\"\n+    assertInverse = true\n+    extraDependency \"org.junit.jupiter:junit-jupiter-api:$jupiterVersion\"\n+  }\n+}\n+\n+dependencies {\n+  compileOnly group: 'org.junit.platform', name: 'junit-platform-launcher', version: \"$platformVersion\"\n+  compileOnly group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: \"$jupiterVersion\"\n+\n+  testCompile(group: 'org.junit.platform', name: 'junit-platform-engine', version: \"$platformVersion\") {\n+    force = true\n+  }\n+  testCompile(group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: \"$jupiterVersion\") {\n+    force = true\n+  }\n+}\n+\n+// JUnit5 requires Java 1.8+\n+sourceCompatibility = JavaVersion.VERSION_1_8\n+targetCompatibility = JavaVersion.VERSION_1_8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NDE0MDg4Nw==", "bodyText": "I'm a little curious why such a specific version.  Also, does this mean we don't support 5.0-5.3.1 or is that covered by 4.10?  A comment in the gradle file might be useful.", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r474140887", "createdAt": "2020-08-20T17:02:47Z", "author": {"login": "tylerbenson"}, "path": "settings.gradle", "diffHunk": "@@ -113,6 +113,7 @@ include ':dd-java-agent:instrumentation:jetty-8'\n include ':dd-java-agent:instrumentation:jms'\n include ':dd-java-agent:instrumentation:jsp-2.3'\n include ':dd-java-agent:instrumentation:junit-4.10'\n+include ':dd-java-agent:instrumentation:junit-5.3.2'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5413f45e5c59d1d07e181a1cf1eedb3f5f76e1f5", "committedDate": "2020-08-19T10:08:04Z", "message": "Rename module to junit-5.3.2"}, "afterCommit": {"oid": "d52a3cc6d6907a225cc632235c807ebbc6904cad", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d52a3cc6d6907a225cc632235c807ebbc6904cad", "committedDate": "2020-08-24T09:27:18Z", "message": "Rename module to junit-5.3.2"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "97631a1e016df5e7b9976af788b617dd3c30128f", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/97631a1e016df5e7b9976af788b617dd3c30128f", "committedDate": "2020-08-24T12:33:53Z", "message": "Adjust JUnit4 and TestNG tests"}, "afterCommit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/acbf9073867b8b062d216df7b167cd449c458353", "committedDate": "2020-08-26T08:10:20Z", "message": "Adjust JUnit4 and TestNG tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc1NjE0Mzc0", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#pullrequestreview-475614374", "createdAt": "2020-08-26T15:37:39Z", "commit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDc2NzM3MDM5", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#pullrequestreview-476737039", "createdAt": "2020-08-27T13:47:03Z", "commit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353"}, "state": "APPROVED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo0NzowM1rOHIRKIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QxMzo1MTowMVrOHIRVhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMTc3Ng==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n              return [\"junit-4.10\", \"testng-6.4\", \"junit-5.3.2\"].contains(project.name)\n          \n          \n            \n              return [\"junit-4.10\", \"testng-6.4\", \"junit-5.3.0\"].contains(project.name)", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r478431776", "createdAt": "2020-08-27T13:47:03Z", "author": {"login": "tylerbenson"}, "path": "gradle/java.gradle", "diffHunk": "@@ -279,7 +279,7 @@ def isJdkForced(String javaName) {\n }\n \n def isTestingInstrumentation(Project project) {\n-  return [\"junit-4.10\", \"testng-6.4\"].contains(project.name)\n+  return [\"junit-4.10\", \"testng-6.4\", \"junit-5.3.2\"].contains(project.name)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzMjY1MA==", "bodyText": "minor suggestion, but if you support .0 now, you can drop that part... We generally don't include the smallest version part if it's not significant.", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r478432650", "createdAt": "2020-08-27T13:48:18Z", "author": {"login": "tylerbenson"}, "path": "settings.gradle", "diffHunk": "@@ -115,6 +115,7 @@ include ':dd-java-agent:instrumentation:jetty-8'\n include ':dd-java-agent:instrumentation:jms'\n include ':dd-java-agent:instrumentation:jsp-2.3'\n include ':dd-java-agent:instrumentation:junit-4.10'\n+include ':dd-java-agent:instrumentation:junit-5.3.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODQzNDY5Mw==", "bodyText": "Since you only have one instrumentation class is this necessary? What happens without this?", "url": "https://github.com/DataDog/dd-trace-java/pull/1783#discussion_r478434693", "createdAt": "2020-08-27T13:51:01Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/junit-5.3.0/src/main/java/datadog/trace/instrumentation/junit5/JUnit5Instrumentation.java", "diffHunk": "@@ -0,0 +1,66 @@\n+package datadog.trace.instrumentation.junit5;\n+\n+import static datadog.trace.agent.tooling.ClassLoaderMatcher.hasClassesNamed;\n+import static datadog.trace.agent.tooling.bytebuddy.matcher.DDElementMatchers.implementsInterface;\n+import static net.bytebuddy.matcher.ElementMatchers.isConstructor;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+import com.google.auto.service.AutoService;\n+import datadog.trace.agent.tooling.Instrumenter;\n+import java.util.Collections;\n+import java.util.Map;\n+import net.bytebuddy.asm.Advice;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+import org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService;\n+import org.junit.platform.launcher.Launcher;\n+\n+@AutoService(Instrumenter.class)\n+public class JUnit5Instrumentation extends Instrumenter.Default {\n+\n+  public JUnit5Instrumentation() {\n+    super(\"junit\", \"junit-5\");\n+  }\n+\n+  @Override\n+  public ElementMatcher<? super TypeDescription> typeMatcher() {\n+    return implementsInterface(named(\"org.junit.platform.launcher.Launcher\"));\n+  }\n+\n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderMatcher() {\n+    // Optimization for expensive typeMatcher.\n+    return hasClassesNamed(\"org.junit.platform.launcher.Launcher\");\n+  }\n+\n+  @Override\n+  public String[] helperClassNames() {\n+    return new String[] {packageName + \".JUnit5Decorator\", packageName + \".TracingListener\"};\n+  }\n+\n+  @Override\n+  public Map<? extends ElementMatcher<? super MethodDescription>, String> transformers() {\n+    return Collections.singletonMap(\n+        isConstructor(), JUnit5Instrumentation.class.getName() + \"$JUnit5Advice\");\n+  }\n+\n+  @Override\n+  protected boolean defaultEnabled() {\n+    return false;\n+  }\n+\n+  public static class JUnit5Advice {\n+\n+    @Advice.OnMethodExit\n+    public static void addTracingListener(@Advice.This final Launcher launcher) {\n+      final TracingListener listener = new TracingListener();\n+      launcher.registerTestExecutionListeners(listener);\n+    }\n+\n+    // JUnit 5.3.0 and above\n+    public static void muzzleCheck(final SameThreadHierarchicalTestExecutorService service) {\n+      service.invokeAll(null);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353"}, "originalPosition": 64}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f260be96d3335c8cabb663d841498c0b06d735e4", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f260be96d3335c8cabb663d841498c0b06d735e4", "committedDate": "2020-08-27T14:20:36Z", "message": "Added JUnit5 instrumentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ff9884a87dd52bdf792f7af412dec603ed27cf7b", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ff9884a87dd52bdf792f7af412dec603ed27cf7b", "committedDate": "2020-08-27T14:20:36Z", "message": "Added JUnit5 instrumentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6b147cf1c5d46c248b655b0501fb31b0ebf37cc", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b6b147cf1c5d46c248b655b0501fb31b0ebf37cc", "committedDate": "2020-08-27T14:20:36Z", "message": "Rename module to junit-5.3.2"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4d2624b19ef7f9e81fec69c08470ac7a8a7d147f", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/4d2624b19ef7f9e81fec69c08470ac7a8a7d147f", "committedDate": "2020-08-27T14:20:36Z", "message": "Avoid setting byte code version compatibility in gradle file."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f780db02f29598515494ebcda374358be3a030c", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9f780db02f29598515494ebcda374358be3a030c", "committedDate": "2020-08-27T14:20:36Z", "message": "Added additional test cases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ebd9e2d2ee1b76e008aefd40efc0d6dfdbfe709c", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ebd9e2d2ee1b76e008aefd40efc0d6dfdbfe709c", "committedDate": "2020-08-27T14:20:36Z", "message": "Adjust JUnit4 and TestNG tests"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "acbf9073867b8b062d216df7b167cd449c458353", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/acbf9073867b8b062d216df7b167cd449c458353", "committedDate": "2020-08-26T08:10:20Z", "message": "Adjust JUnit4 and TestNG tests"}, "afterCommit": {"oid": "ebd9e2d2ee1b76e008aefd40efc0d6dfdbfe709c", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ebd9e2d2ee1b76e008aefd40efc0d6dfdbfe709c", "committedDate": "2020-08-27T14:20:36Z", "message": "Adjust JUnit4 and TestNG tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5a8bd8c187b9805fb0dc561009ea57cbb9401e7", "author": {"user": {"login": "drodriguezhdez", "name": "Daniel Rodriguez Hernandez"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/f5a8bd8c187b9805fb0dc561009ea57cbb9401e7", "committedDate": "2020-08-27T14:26:12Z", "message": "Applying suggestions from feedback review"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2142, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}