{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI2MjI5NDA0", "number": 1519, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo1OTo0OFrOEB22Fg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODowNTo1MFrOEB3DaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzgyNjE0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/ClassLoaderMatcher.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxNzo1OTo0OFrOGd9aew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxOTo1NDoyMVrOGeBw4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2ODA5MQ==", "bodyText": "I'm not sure this is necessary.  We already test delegation to the bootstrap for DD classes", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434068091", "createdAt": "2020-06-02T17:59:48Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/ClassLoaderMatcher.java", "diffHunk": "@@ -86,7 +86,7 @@ private static boolean shouldSkipClass(final ClassLoader loader) {\n      */\n     private static boolean delegatesToBootstrap(final ClassLoader loader) {\n       boolean delegates = true;\n-      if (!loadsExpectedClass(loader, GlobalTracer.class)) {\n+      if (!loadsExpectedClass(loader, Tracer.class)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNTgzMQ==", "bodyText": "yeah, I understand the test is probably no longer necessary.  I just didn't feel it was important to remove.", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434125831", "createdAt": "2020-06-02T19:28:06Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/ClassLoaderMatcher.java", "diffHunk": "@@ -86,7 +86,7 @@ private static boolean shouldSkipClass(final ClassLoader loader) {\n      */\n     private static boolean delegatesToBootstrap(final ClassLoader loader) {\n       boolean delegates = true;\n-      if (!loadsExpectedClass(loader, GlobalTracer.class)) {\n+      if (!loadsExpectedClass(loader, Tracer.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2ODA5MQ=="}, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzOTM2MA==", "bodyText": "We can leave it.  One's a bootstrap class, the other is an API class.  There's some value.", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434139360", "createdAt": "2020-06-02T19:54:21Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/ClassLoaderMatcher.java", "diffHunk": "@@ -86,7 +86,7 @@ private static boolean shouldSkipClass(final ClassLoader loader) {\n      */\n     private static boolean delegatesToBootstrap(final ClassLoader loader) {\n       boolean delegates = true;\n-      if (!loadsExpectedClass(loader, GlobalTracer.class)) {\n+      if (!loadsExpectedClass(loader, Tracer.class)) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA2ODA5MQ=="}, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjcwMzg2MDI0OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/dd-java-agent.gradle", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQxODowNTo1MFrOGd9vPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMlQyMToyMjowN1rOGeEbHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MzQwNw==", "bodyText": "Is this necessary?  Also, why is it 0.31.0 when we're using 0.32.0 everywhere else", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434073407", "createdAt": "2020-06-02T18:05:50Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/dd-java-agent.gradle", "diffHunk": "@@ -97,16 +114,15 @@ modifyPom {\n dependencies {\n   testCompile project(':dd-java-agent:agent-bootstrap')\n   testCompile project(':dd-trace-api')\n-  testCompile project(':dd-trace-ot')\n   testCompile project(':dd-trace-core')\n   testCompile project(':utils:test-utils')\n \n   testCompile deps.testLogging\n   testCompile deps.guava\n+  testCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEyNjgxNQ==", "bodyText": "This is to enable OpenTracingTest.  I don't remember why I went with 31 instead of 32, but I don't think it matters.  I can change if you like.", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434126815", "createdAt": "2020-06-02T19:30:04Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/dd-java-agent.gradle", "diffHunk": "@@ -97,16 +114,15 @@ modifyPom {\n dependencies {\n   testCompile project(':dd-java-agent:agent-bootstrap')\n   testCompile project(':dd-trace-api')\n-  testCompile project(':dd-trace-ot')\n   testCompile project(':dd-trace-core')\n   testCompile project(':utils:test-utils')\n \n   testCompile deps.testLogging\n   testCompile deps.guava\n+  testCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MzQwNw=="}, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDEzOTUzMQ==", "bodyText": "I would argue that this test belongs with the OT instrumentation.  It's directly testing that the OT instrumentation is enabled and works.  None of the other tests at the dd-java-agent level are that specific.\nI don't feel strongly about it though.", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434139531", "createdAt": "2020-06-02T19:54:40Z", "author": {"login": "randomanderson"}, "path": "dd-java-agent/dd-java-agent.gradle", "diffHunk": "@@ -97,16 +114,15 @@ modifyPom {\n dependencies {\n   testCompile project(':dd-java-agent:agent-bootstrap')\n   testCompile project(':dd-trace-api')\n-  testCompile project(':dd-trace-ot')\n   testCompile project(':dd-trace-core')\n   testCompile project(':utils:test-utils')\n \n   testCompile deps.testLogging\n   testCompile deps.guava\n+  testCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MzQwNw=="}, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDE4Mjk0MQ==", "bodyText": "I already have similar tests at the OT instrumentation level.  I felt this was a bit more core behavior and warranted a test at the agent level.", "url": "https://github.com/DataDog/dd-trace-java/pull/1519#discussion_r434182941", "createdAt": "2020-06-02T21:22:07Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/dd-java-agent.gradle", "diffHunk": "@@ -97,16 +114,15 @@ modifyPom {\n dependencies {\n   testCompile project(':dd-java-agent:agent-bootstrap')\n   testCompile project(':dd-trace-api')\n-  testCompile project(':dd-trace-ot')\n   testCompile project(':dd-trace-core')\n   testCompile project(':utils:test-utils')\n \n   testCompile deps.testLogging\n   testCompile deps.guava\n+  testCompile group: 'io.opentracing', name: 'opentracing-util', version: '0.31.0'", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzNDA3MzQwNw=="}, "originalCommit": {"oid": "1ea1927f62a5c51908280780fbb672aacf8ff094"}, "originalPosition": 41}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 185, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}