{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE5MzI2Mzk4", "number": 2065, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo1MjoxNlrOE32esg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo1MjoxNlrOE32esg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI2OTk5NzMwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldBackedProvider.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQxOTo1MjoxNlrOHxb_3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMVQyMTozMjowM1rOHxfCGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ==", "bodyText": "Is the field required to be final?  I recall there aren't any visibility requirements.\nArguably, it would be safer to cast wider rather than smaller net here.", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521600991", "createdAt": "2020-11-11T19:52:16Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldBackedProvider.java", "diffHunk": "@@ -139,6 +145,14 @@ public static void resetContextMatchers() {\n                     .type(safeHasSuperType(named(entry.getKey())), classLoaderMatcher)\n                     .and(ShouldInjectFieldsMatcher.of(entry.getKey(), entry.getValue()))\n                     .and(Default.NOT_DECORATOR_MATCHER)\n+                    .and(\n+                        not(safeHasSuperType(named(\"java.io.Serializable\")))\n+                            .or(\n+                                declaresField(\n+                                    named(\"serialVersionUID\")\n+                                        .and(ElementMatchers.<FieldDescription>isStatic())\n+                                        .and(isFinal())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY0OTE4OA==", "bodyText": "I considered not adding these restrictions, but the javadoc for Serializable suggests that:\nA serializable class can declare its own serialVersionUID explicitly by declaring\na field named `serialVersionUID` that must be static, final, and of type `long`.\n\nWhat would you like me to do?", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521649188", "createdAt": "2020-11-11T21:28:42Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldBackedProvider.java", "diffHunk": "@@ -139,6 +145,14 @@ public static void resetContextMatchers() {\n                     .type(safeHasSuperType(named(entry.getKey())), classLoaderMatcher)\n                     .and(ShouldInjectFieldsMatcher.of(entry.getKey(), entry.getValue()))\n                     .and(Default.NOT_DECORATOR_MATCHER)\n+                    .and(\n+                        not(safeHasSuperType(named(\"java.io.Serializable\")))\n+                            .or(\n+                                declaresField(\n+                                    named(\"serialVersionUID\")\n+                                        .and(ElementMatchers.<FieldDescription>isStatic())\n+                                        .and(isFinal())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ=="}, "originalCommit": {"oid": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTY1MDcxNQ==", "bodyText": "I would actually suggest that being more restrictive here is safer because it would fall back to skipping and not add the field/method.", "url": "https://github.com/DataDog/dd-trace-java/pull/2065#discussion_r521650715", "createdAt": "2020-11-11T21:32:03Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/context/FieldBackedProvider.java", "diffHunk": "@@ -139,6 +145,14 @@ public static void resetContextMatchers() {\n                     .type(safeHasSuperType(named(entry.getKey())), classLoaderMatcher)\n                     .and(ShouldInjectFieldsMatcher.of(entry.getKey(), entry.getValue()))\n                     .and(Default.NOT_DECORATOR_MATCHER)\n+                    .and(\n+                        not(safeHasSuperType(named(\"java.io.Serializable\")))\n+                            .or(\n+                                declaresField(\n+                                    named(\"serialVersionUID\")\n+                                        .and(ElementMatchers.<FieldDescription>isStatic())\n+                                        .and(isFinal())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMTYwMDk5MQ=="}, "originalCommit": {"oid": "628f0aa2d18cdaea4526683ae5050a9f2c657f9b"}, "originalPosition": 32}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4583, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}