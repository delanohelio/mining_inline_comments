{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDI1OTQwNDQ2", "number": 1514, "title": "Always send id as long", "bodyText": "As @richardstartin commented, the Datadog Agent  will probably decode our integers the right way even if we send a signed 64 bit when it expects an unsigned 64 bit, and lo and behold https://github.com/DataDog/datadog-agent/blob/f12fc7af659455c252ab4c251a666ee95f0b930a/pkg/trace/pb/decoder.go#L125 that is exactly what it does.", "createdAt": "2020-06-01T12:11:03Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1514", "merged": true, "mergeCommit": {"oid": "de327237e6073f2f9fb5e033906612efc8bd17be"}, "closed": true, "closedAt": "2020-06-04T10:06:10Z", "author": {"login": "bantonsson"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcnBZNRAFqTQyMTkwNDU3Mg==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcnqBF2AFqTQyMzU4OTE0Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIxOTA0NTcy", "url": "https://github.com/DataDog/dd-trace-java/pull/1514#pullrequestreview-421904572", "createdAt": "2020-06-01T14:46:34Z", "commit": {"oid": "3dea3550a4d95e30251cca74d04e3679ee60cd8d"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIyMTI0NTc4", "url": "https://github.com/DataDog/dd-trace-java/pull/1514#pullrequestreview-422124578", "createdAt": "2020-06-01T19:36:24Z", "commit": {"oid": "3dea3550a4d95e30251cca74d04e3679ee60cd8d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTozNjoyNFrOGdXcpw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0wMVQxOTozNjoyNFrOGdXcpw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQzMzQ0NjA1NQ==", "bodyText": "If we want to produce 64 bit ids why not do (ThreadLocalRandom.current().nextLong(1) << 63) | ThreadLocalRandom.current().nextLong(Long.MAX_VALUE)?", "url": "https://github.com/DataDog/dd-trace-java/pull/1514#discussion_r433446055", "createdAt": "2020-06-01T19:36:24Z", "author": {"login": "richardstartin"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/DDId.java", "diffHunk": "@@ -24,13 +23,11 @@\n    * @return DDId\n    */\n   public static DDId generate() {\n-    // It is **extremely** unlikely to generate the value \"0\" but we still need to handle that\n-    // case\n+    // It is **extremely** unlikely to generate the value \"0\" but we still need to handle that case\n     long id;\n     do {\n-      // TODO the ids are positive here by design to avoid materialization of a BigInteger,\n-      //      and that can be changed to nextLong(Long.MIN_VALUE, Long.MAX_VALUE), when\n-      //      msgpack supports packUnsignedLong\n+      // TODO the ids are positive here since Java 7 doesn't support a negative origin. Can be\n+      //  changed to nextLong(Long.MIN_VALUE, Long.MAX_VALUE), when Java 7 support is dropped.\n       id = ThreadLocalRandom.current().nextLong(Long.MAX_VALUE);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3dea3550a4d95e30251cca74d04e3679ee60cd8d"}, "originalPosition": 21}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3dea3550a4d95e30251cca74d04e3679ee60cd8d", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3dea3550a4d95e30251cca74d04e3679ee60cd8d", "committedDate": "2020-06-01T12:09:43Z", "message": "Always send id as long"}, "afterCommit": {"oid": "0314e3ebcd4a2b2dc3973099446a8092d924599f", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0314e3ebcd4a2b2dc3973099446a8092d924599f", "committedDate": "2020-06-03T07:16:40Z", "message": "Always send id as long"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1b55c7d419095f6da7204d824a248ecd4c1d6bc", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e1b55c7d419095f6da7204d824a248ecd4c1d6bc", "committedDate": "2020-06-03T07:33:38Z", "message": "Always send id as long"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "0314e3ebcd4a2b2dc3973099446a8092d924599f", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0314e3ebcd4a2b2dc3973099446a8092d924599f", "committedDate": "2020-06-03T07:16:40Z", "message": "Always send id as long"}, "afterCommit": {"oid": "e1b55c7d419095f6da7204d824a248ecd4c1d6bc", "author": {"user": {"login": "bantonsson", "name": "Bj\u00f6rn Antonsson"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/e1b55c7d419095f6da7204d824a248ecd4c1d6bc", "committedDate": "2020-06-03T07:33:38Z", "message": "Always send id as long"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDIzNTg5MTQz", "url": "https://github.com/DataDog/dd-trace-java/pull/1514#pullrequestreview-423589143", "createdAt": "2020-06-03T14:06:20Z", "commit": {"oid": "e1b55c7d419095f6da7204d824a248ecd4c1d6bc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2317, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}