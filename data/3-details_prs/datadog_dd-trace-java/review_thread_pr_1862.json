{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg2NjEzODE4", "number": 1862, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoyNToyNVrOEjH9qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoyNToyNVrOEjH9qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA1MjY2MDkwOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxMzoyNToyNVrOHRTpJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xNFQxNTozNToxN1rOHRa9ZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwOTY2OA==", "bodyText": "I know empirically that these are quite low cardinality", "url": "https://github.com/DataDog/dd-trace-java/pull/1862#discussion_r487909668", "createdAt": "2020-09-14T13:25:25Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -159,6 +162,7 @@ Response sendSerializedTraces(final Payload payload) {\n       try (final Recording recording = sendPayloadTimer.start();\n           final okhttp3.Response response = httpClient.newCall(request).execute()) {\n         if (response.code() != 200) {\n+          agentErrorCounter.incrementErrorCount(response.message(), payload.traceCount());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dba185e4bc9d40f55cb5830b4b79ec8004fec133"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAxNjI1MQ==", "bodyText": "What are some example messages returned by this?", "url": "https://github.com/DataDog/dd-trace-java/pull/1862#discussion_r488016251", "createdAt": "2020-09-14T15:19:41Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -159,6 +162,7 @@ Response sendSerializedTraces(final Payload payload) {\n       try (final Recording recording = sendPayloadTimer.start();\n           final okhttp3.Response response = httpClient.newCall(request).execute()) {\n         if (response.code() != 200) {\n+          agentErrorCounter.incrementErrorCount(response.message(), payload.traceCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwOTY2OA=="}, "originalCommit": {"oid": "dba185e4bc9d40f55cb5830b4b79ec8004fec133"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4ODAyOTU0MQ==", "bodyText": "i/o timeout EOF - stuff like that", "url": "https://github.com/DataDog/dd-trace-java/pull/1862#discussion_r488029541", "createdAt": "2020-09-14T15:35:17Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DDAgentApi.java", "diffHunk": "@@ -159,6 +162,7 @@ Response sendSerializedTraces(final Payload payload) {\n       try (final Recording recording = sendPayloadTimer.start();\n           final okhttp3.Response response = httpClient.newCall(request).execute()) {\n         if (response.code() != 200) {\n+          agentErrorCounter.incrementErrorCount(response.message(), payload.traceCount());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzkwOTY2OA=="}, "originalCommit": {"oid": "dba185e4bc9d40f55cb5830b4b79ec8004fec133"}, "originalPosition": 28}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4804, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}