{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0OTI4MTI4", "number": 1998, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo0MToyOVrOEulaDg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozMTo0MVrOEvWI5A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MjgyODMwOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo0MToyOVrOHjFy9Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxNTo1NToyMFrOHjGd4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU1NzE3Mw==", "bodyText": "what do people think about using == here instead of equals?", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r506557173", "createdAt": "2020-10-16T15:41:29Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java", "diffHunk": "@@ -17,6 +19,12 @@ public static void onExit(@Advice.This final Throwable t) {\n      */\n     if (ThrowableInstanceAdviceHelper.enterHandler()) {\n       try {\n+        /*\n+         * Exclude internal agent threads from exception profiling.\n+         */\n+        if (AGENT_THREAD_GROUP.equals(Thread.currentThread().getThreadGroup())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cc07d608d7cc55b681c0484adc889145d8013c2a"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU2ODE2Mw==", "bodyText": "I doubt it would make any difference after inlining given that reference equality is the first check in equals(), but would make a small improvement in bytecode size. I wouldn't bother.", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r506568163", "createdAt": "2020-10-16T15:55:20Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/datadog/exceptions/instrumentation/ThrowableInstanceAdvice.java", "diffHunk": "@@ -17,6 +19,12 @@ public static void onExit(@Advice.This final Throwable t) {\n      */\n     if (ThrowableInstanceAdviceHelper.enterHandler()) {\n       try {\n+        /*\n+         * Exclude internal agent threads from exception profiling.\n+         */\n+        if (AGENT_THREAD_GROUP.equals(Thread.currentThread().getThreadGroup())) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjU1NzE3Mw=="}, "originalCommit": {"oid": "cc07d608d7cc55b681c0484adc889145d8013c2a"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MDgxMjUyOnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/util/DaemonThreadFactory.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNDozMTo0MVrOHkRolA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxNjowMDozNFrOHkV88A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5OTcwMA==", "bodyText": "I think this should have been dd-trace-java since this is used by dd-trace-ot as well.", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r507799700", "createdAt": "2020-10-19T14:31:41Z", "author": {"login": "tylerbenson"}, "path": "internal-api/src/main/java/datadog/trace/util/DaemonThreadFactory.java", "diffHunk": "@@ -4,6 +4,8 @@\n \n /** A {@link ThreadFactory} implementation that starts all {@link Thread} as daemons. */\n public final class DaemonThreadFactory implements ThreadFactory {\n+  public static final ThreadGroup AGENT_THREAD_GROUP = new ThreadGroup(\"dd-java-agent\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzg3MDQ0OA==", "bodyText": "#2005", "url": "https://github.com/DataDog/dd-trace-java/pull/1998#discussion_r507870448", "createdAt": "2020-10-19T16:00:34Z", "author": {"login": "mcculls"}, "path": "internal-api/src/main/java/datadog/trace/util/DaemonThreadFactory.java", "diffHunk": "@@ -4,6 +4,8 @@\n \n /** A {@link ThreadFactory} implementation that starts all {@link Thread} as daemons. */\n public final class DaemonThreadFactory implements ThreadFactory {\n+  public static final ThreadGroup AGENT_THREAD_GROUP = new ThreadGroup(\"dd-java-agent\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzc5OTcwMA=="}, "originalCommit": {"oid": "03fed6f079d4f43c499ac5a1e1f4a726bbacc8ad"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4722, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}