{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIxNjExMDE1", "number": 2077, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzo0NToxNlrOE6I_OA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzo1Nzo0NlrOE6JZFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDAwMTIwOnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzo0NToxNlrOH1Bbhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzo0OTozNVrOH1Bqvg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM2MDAwNw==", "bodyText": "version != ENV ?", "url": "https://github.com/DataDog/dd-trace-java/pull/2077#discussion_r525360007", "createdAt": "2020-11-17T17:45:16Z", "author": {"login": "mcculls"}, "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -733,7 +733,10 @@ private Config(final String runtimeId, final ConfigProvider configProvider) {\n   }\n \n   public WellKnownTags getWellKnownTags() {\n-    return new WellKnownTags(getHostName(), tags.get(ENV), serviceName, tags.get(VERSION));\n+    CharSequence env = tags.get(ENV);\n+    CharSequence version = tags.get(ENV);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a90628dc21facf207d824d715cc79fbbb66470f1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM2MzkwMg==", "bodyText": "Thanks, adding a test!", "url": "https://github.com/DataDog/dd-trace-java/pull/2077#discussion_r525363902", "createdAt": "2020-11-17T17:49:35Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -733,7 +733,10 @@ private Config(final String runtimeId, final ConfigProvider configProvider) {\n   }\n \n   public WellKnownTags getWellKnownTags() {\n-    return new WellKnownTags(getHostName(), tags.get(ENV), serviceName, tags.get(VERSION));\n+    CharSequence env = tags.get(ENV);\n+    CharSequence version = tags.get(ENV);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM2MDAwNw=="}, "originalCommit": {"oid": "a90628dc21facf207d824d715cc79fbbb66470f1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5NDA2NzQxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/common/metrics/SerializingMetricWriter.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxNzo1Nzo0NlrOH1CFXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QxODowNzozOFrOH1CehQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MDcxNw==", "bodyText": "I'm counting 9 elements below - is this change right or am I missing something?", "url": "https://github.com/DataDog/dd-trace-java/pull/2077#discussion_r525370717", "createdAt": "2020-11-17T17:57:46Z", "author": {"login": "mcculls"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/metrics/SerializingMetricWriter.java", "diffHunk": "@@ -67,34 +70,35 @@ public void startBucket(int metricCount, long start, long duration) {\n \n   @Override\n   public void add(MetricKey key, AggregateMetric aggregate) {\n-    writer.startMap(9);\n+    writer.startMap(7);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35007fa7fb5d14321aa218eed29dd8c55d63455b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NDY3Nw==", "bodyText": "You're right. This is the problem with a test which mirrors the implementation (it incorrectly checks that there is a 7 element map, then correctly validates all 9 elements). The integration test would have caught this if I had an image for the latest tracer yet.", "url": "https://github.com/DataDog/dd-trace-java/pull/2077#discussion_r525374677", "createdAt": "2020-11-17T18:03:56Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/metrics/SerializingMetricWriter.java", "diffHunk": "@@ -67,34 +70,35 @@ public void startBucket(int metricCount, long start, long duration) {\n \n   @Override\n   public void add(MetricKey key, AggregateMetric aggregate) {\n-    writer.startMap(9);\n+    writer.startMap(7);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MDcxNw=="}, "originalCommit": {"oid": "35007fa7fb5d14321aa218eed29dd8c55d63455b"}, "originalPosition": 46}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3NzE1Nw==", "bodyText": "Added a consistency check to the test to catch this sort of thing next time.", "url": "https://github.com/DataDog/dd-trace-java/pull/2077#discussion_r525377157", "createdAt": "2020-11-17T18:07:38Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/metrics/SerializingMetricWriter.java", "diffHunk": "@@ -67,34 +70,35 @@ public void startBucket(int metricCount, long start, long duration) {\n \n   @Override\n   public void add(MetricKey key, AggregateMetric aggregate) {\n-    writer.startMap(9);\n+    writer.startMap(7);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTM3MDcxNw=="}, "originalCommit": {"oid": "35007fa7fb5d14321aa218eed29dd8c55d63455b"}, "originalPosition": 46}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4589, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}