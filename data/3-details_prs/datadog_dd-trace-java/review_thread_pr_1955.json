{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk4NDU3Mzc5", "number": 1955, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNjozMFrOEqwDNA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo1ODowMFrOEq0AKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMjYyOTAwOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "isResolved": true, "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNDowNjozMFrOHdImYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNzo0MToxMFrOHdS6QA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ==", "bodyText": "Please update the class comment with the new flow.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500311651", "createdAt": "2020-10-06T14:06:30Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM1MDY1MA==", "bodyText": "Yes, I debated whether this was necessary or not.\nI was also a little hesitant because of how this might work in the late arriving situations.  If we take out one continuation at a time, we'll end up sending small batches.\nThat will work well for our tests, but I think it is less clear what we want in production.\nI suspect this is probably the right choice for production as well since it reduces how long we're holding traces, but we need to verify carefully.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500350650", "createdAt": "2020-10-06T14:46:33Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDM5NDMxMw==", "bodyText": "So one idea would to be only do direct write when count == 0 if the trace is a rootSpan or it has not been written.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500394313", "createdAt": "2020-10-06T15:32:30Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwMDY1MQ==", "bodyText": "I think this is what you're suggesting, but the write when count == 0 should probably only apply if the root span is finished and not written.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500400651", "createdAt": "2020-10-06T15:39:20Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwOTA4NQ==", "bodyText": "Yes, I changed the code to if (count == 0 && (isRootSpan || !rootSpanWritten.get())) {", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500409085", "createdAt": "2020-10-06T15:50:18Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQwOTM3Nw==", "bodyText": "Comment at top has been updated", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500409377", "createdAt": "2020-10-06T15:50:40Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQ4MDU3Ng==", "bodyText": "Yes, that works for me.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500480576", "createdAt": "2020-10-06T17:41:10Z", "author": {"login": "dougqh"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/PendingTrace.java", "diffHunk": "@@ -281,32 +281,32 @@ private void expireReference(boolean isRootSpan) {\n       return;\n     }\n     final int count = pendingReferenceCount.decrementAndGet();\n-    if (isRootSpan) {\n-      if (0 < count) {\n+    if (count == 0) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDMxMTY1MQ=="}, "originalCommit": {"oid": "386536fd170d2f85536c757586327b616f47697e"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzI3NjU4OnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxNTo1ODowMFrOHdO4pw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxMjoyNTozMlrOHdwulQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ==", "bodyText": "Think it'd be worth capturing this detail in a field?", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500414631", "createdAt": "2020-10-06T15:58:00Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -415,6 +415,11 @@ public void cancel(final Set<WeakReference<AgentScope.Continuation>> weakReferen\n       ref = null;\n     }\n \n+    protected boolean isRootSpan() {\n+      AgentSpan span = this.spanUnderScope;\n+      return span == span.getLocalRootSpan();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "817f7bde1aa8635fe47661386d1dea62f3249727"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDc5MzQ0MA==", "bodyText": "Maybe. I mean the code would be run the same number of times (once), and the Continuation instance would get larger.", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500793440", "createdAt": "2020-10-07T07:27:12Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -415,6 +415,11 @@ public void cancel(final Set<WeakReference<AgentScope.Continuation>> weakReferen\n       ref = null;\n     }\n \n+    protected boolean isRootSpan() {\n+      AgentSpan span = this.spanUnderScope;\n+      return span == span.getLocalRootSpan();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ=="}, "originalCommit": {"oid": "817f7bde1aa8635fe47661386d1dea62f3249727"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDk2OTEwOQ==", "bodyText": "No longer necessary", "url": "https://github.com/DataDog/dd-trace-java/pull/1955#discussion_r500969109", "createdAt": "2020-10-07T12:25:32Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/core/scopemanager/ContinuableScopeManager.java", "diffHunk": "@@ -415,6 +415,11 @@ public void cancel(final Set<WeakReference<AgentScope.Continuation>> weakReferen\n       ref = null;\n     }\n \n+    protected boolean isRootSpan() {\n+      AgentSpan span = this.spanUnderScope;\n+      return span == span.getLocalRootSpan();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDQxNDYzMQ=="}, "originalCommit": {"oid": "817f7bde1aa8635fe47661386d1dea62f3249727"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4675, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}