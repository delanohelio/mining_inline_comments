{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjkxNTE1", "number": 2052, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1MzozMlrOE1jnPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NToyNFrOE1jqJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTkzNDcxOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1MzozMlrOHt5KkA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1MzozMlrOHt5KkA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NDU2MA==", "bodyText": "Could we use ClassValue here instead? (which have weak keys)", "url": "https://github.com/DataDog/dd-trace-java/pull/2052#discussion_r517884560", "createdAt": "2020-11-05T08:53:32Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/jdbc/src/main/java/datadog/trace/instrumentation/jdbc/JDBCUtils.java", "diffHunk": "@@ -1,13 +1,49 @@\n package datadog.trace.instrumentation.jdbc;\n \n+import datadog.trace.api.cache.DDCache;\n+import datadog.trace.api.cache.DDCaches;\n import datadog.trace.bootstrap.ExceptionLogger;\n import java.lang.reflect.Field;\n import java.sql.Connection;\n+import java.sql.PreparedStatement;\n import java.sql.Statement;\n \n public abstract class JDBCUtils {\n   private static Field c3poField = null;\n \n+  // Cache if the class's isWrapperFor() or unwrap() methods are abstract\n+  // Using classnames to avoid the need for a WeakMap\n+  public static final DDCache<String, Boolean> ABSTRACT_UNWRAP = DDCaches.newFixedSizeCache(64);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI0NTk0MjEyOnYy", "diffSide": "RIGHT", "path": "internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NToyNFrOHt5PAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wNVQwODo1NToyNFrOHt5PAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNzg4NTY5OA==", "bodyText": "These changes aren't necessary if we, ahem, wrap the unwrapping logic in a ClassValue<Boolean>", "url": "https://github.com/DataDog/dd-trace-java/pull/2052#discussion_r517885698", "createdAt": "2020-11-05T08:55:24Z", "author": {"login": "richardstartin"}, "path": "internal-api/src/main/java/datadog/trace/api/cache/CHMCache.java", "diffHunk": "@@ -11,6 +11,24 @@ public CHMCache(final int initialCapacity) {\n     this.chm = new ConcurrentHashMap<>(initialCapacity);\n   }\n \n+  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6cf741d9e3ec98b6f3dd44aeeddfd3f4480c79b"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4784, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}