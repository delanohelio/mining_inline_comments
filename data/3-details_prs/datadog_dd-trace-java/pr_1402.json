{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA5NjM5ODI5", "number": 1402, "title": "[okhttp] Add instrumentation for okhttp 2.2+", "bodyText": "Adds instrumentation for OkHttp 2.2+ (Interceptor was not introduced in okhttp until 2.2+)\nBetween OkHttp 2 and OkHttp3, the package namespace changed from com.squareup.okhttp to okhttp3.\nThis PR largely borrows from the existing work for OkHttp3, with some changes to get the package names correct and for the tests to work.\nI tested this on an application which utilized OkHttp2 and was able to see okhttp.request spans emitted.\nPlease let me know if there are any additional testing procedures that need to be done.", "createdAt": "2020-04-27T17:27:45Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1402", "merged": true, "mergeCommit": {"oid": "c39a0b3d914b9861630f40ba03bf68124b270a17"}, "closed": true, "closedAt": "2020-04-29T18:11:40Z", "author": {"login": "jerchung"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcb1M6zgFqTQwMTI4OTMyMA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABccblyEABqjMyODU1NzY3MTY=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAxMjg5MzIw", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#pullrequestreview-401289320", "createdAt": "2020-04-27T20:10:56Z", "commit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDoxMDo1NlrOGM1n9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yN1QyMDoxODo0MFrOGM16kA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNDY3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                super(\"okhttp2\");\n          \n          \n            \n                super(\"okhttp\", \"okhttp-2\");", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#discussion_r416114678", "createdAt": "2020-04-27T20:10:56Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/okhttp-2/src/main/java/datadog/trace/instrumentation/okhttp2/OkHttp2Instrumentation.java", "diffHunk": "@@ -0,0 +1,57 @@\n+package datadog.trace.instrumentation.okhttp2;\n+\n+import java.util.Collections;\n+import java.util.Map;\n+\n+import com.google.auto.service.AutoService;\n+import com.squareup.okhttp.Interceptor;\n+import com.squareup.okhttp.OkHttpClient;\n+import datadog.trace.agent.tooling.Instrumenter;\n+import net.bytebuddy.asm.Advice;\n+import net.bytebuddy.description.method.MethodDescription;\n+import net.bytebuddy.description.type.TypeDescription;\n+import net.bytebuddy.matcher.ElementMatcher;\n+\n+import static net.bytebuddy.matcher.ElementMatchers.isConstructor;\n+import static net.bytebuddy.matcher.ElementMatchers.named;\n+\n+@AutoService(Instrumenter.class)\n+public class OkHttp2Instrumentation extends Instrumenter.Default {\n+  public OkHttp2Instrumentation() {\n+    super(\"okhttp2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNTQwNw==", "bodyText": "This should match the names in the OkHttp2Instrumentation constructor.", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#discussion_r416115407", "createdAt": "2020-04-27T20:12:01Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/okhttp-2/src/main/java/datadog/trace/instrumentation/okhttp2/OkHttpClientDecorator.java", "diffHunk": "@@ -0,0 +1,37 @@\n+package datadog.trace.instrumentation.okhttp2;\n+\n+import java.net.URI;\n+import java.net.URISyntaxException;\n+\n+import com.squareup.okhttp.Request;\n+import com.squareup.okhttp.Response;\n+import datadog.trace.bootstrap.instrumentation.decorator.HttpClientDecorator;\n+\n+public class OkHttpClientDecorator extends HttpClientDecorator<Request, Response> {\n+  public static final OkHttpClientDecorator DECORATE = new OkHttpClientDecorator();\n+\n+  @Override\n+  protected String method(Request request) {\n+    return request.method();\n+  }\n+\n+  @Override\n+  protected URI url(Request request) throws URISyntaxException {\n+    return request.url().toURI();\n+  }\n+\n+  @Override\n+  protected Integer status(Response response) {\n+    return response.code();\n+  }\n+\n+  @Override\n+  protected String[] instrumentationNames() {\n+    return new String[]{\"okhttp\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExNjc1MA==", "bodyText": "This part was added to the 3.x instrumentation because we use it internally and didn't want to trace our own requests.  This instrumentation shouldn't apply there, so this is unnecessary (but harmless).", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#discussion_r416116750", "createdAt": "2020-04-27T20:14:23Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/okhttp-2/src/main/java/datadog/trace/instrumentation/okhttp2/TracingInterceptor.java", "diffHunk": "@@ -0,0 +1,46 @@\n+package datadog.trace.instrumentation.okhttp2;\n+\n+import java.io.IOException;\n+\n+import com.squareup.okhttp.Interceptor;\n+import com.squareup.okhttp.Request;\n+import com.squareup.okhttp.Response;\n+import datadog.trace.bootstrap.instrumentation.api.AgentScope;\n+import datadog.trace.bootstrap.instrumentation.api.AgentSpan;\n+\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.activateSpan;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.propagate;\n+import static datadog.trace.bootstrap.instrumentation.api.AgentTracer.startSpan;\n+import static datadog.trace.instrumentation.okhttp2.OkHttpClientDecorator.DECORATE;\n+import static datadog.trace.instrumentation.okhttp2.RequestBuilderInjectAdapter.SETTER;\n+\n+public class TracingInterceptor implements Interceptor {\n+  @Override\n+  public Response intercept(Chain chain) throws IOException {\n+    if (chain.request().header(\"Datadog-Meta-Lang\") != null) {\n+      return chain.proceed(chain.request());\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNjExOTQ0MA==", "bodyText": "This can likewise be removed.", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#discussion_r416119440", "createdAt": "2020-04-27T20:18:40Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/okhttp-2/src/test/groovy/OkHttp2Test.groovy", "diffHunk": "@@ -0,0 +1,78 @@\n+import com.squareup.okhttp.Headers\n+import com.squareup.okhttp.MediaType\n+import com.squareup.okhttp.Request\n+import com.squareup.okhttp.RequestBody\n+import datadog.trace.instrumentation.okhttp2.OkHttpClientDecorator\n+import spock.lang.Shared\n+\n+import java.util.concurrent.TimeUnit\n+\n+import com.squareup.okhttp.OkHttpClient\n+import com.squareup.okhttp.internal.http.HttpMethod\n+import datadog.trace.agent.test.base.HttpClientTest\n+import spock.lang.Timeout\n+\n+@Timeout(5)\n+class OkHttp2Test extends HttpClientTest {\n+  @Shared\n+  def client = new OkHttpClient()\n+\n+  def setupSpec() {\n+    client.setConnectTimeout(CONNECT_TIMEOUT_MS, TimeUnit.MILLISECONDS)\n+    client.setReadTimeout(READ_TIMEOUT_MS, TimeUnit.MILLISECONDS)\n+    client.setWriteTimeout(READ_TIMEOUT_MS, TimeUnit.MILLISECONDS)\n+  }\n+\n+  @Override\n+  int doRequest(String method, URI uri, Map<String, String> headers, Closure callback) {\n+    def body = HttpMethod.requiresRequestBody(method) ? RequestBody.create(MediaType.parse(\"text/plain\"), \"\") : null\n+\n+    def request = new Request.Builder()\n+      .url(uri.toURL())\n+      .method(method, body)\n+      .headers(Headers.of(HeadersUtil.headersToArray(headers)))\n+      .build()\n+    def response = client.newCall(request).execute()\n+    callback?.call()\n+    return response.code()\n+  }\n+\n+\n+  @Override\n+  String component() {\n+    return OkHttpClientDecorator.DECORATE.component()\n+  }\n+\n+  @Override\n+  String expectedOperationName() {\n+    return \"okhttp.request\"\n+  }\n+\n+\n+  boolean testRedirects() {\n+    false\n+  }\n+\n+  def \"request to agent not traced\"() {\n+    when:\n+    def status = doRequest(method, url, [\"Datadog-Meta-Lang\": \"java\"])\n+\n+    then:\n+    status == 200\n+    assertTraces(1) {\n+      server.distributedRequestTrace(it, 0)\n+    }\n+\n+    where:\n+    path                                | tagQueryString\n+    \"/success\"                          | false\n+    \"/success\"                          | true\n+    \"/success?with=params\"              | false\n+    \"/success?with=params\"              | true\n+    \"/success#with+fragment\"            | true\n+    \"/success?with=params#and=fragment\" | true\n+\n+    method = \"GET\"\n+    url = server.address.resolve(path)\n+  }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c"}, "originalPosition": 77}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a7e2816c0c14aef28d3cb7152a5ee3c518b6d08c", "committedDate": "2020-04-27T17:26:52Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}, "afterCommit": {"oid": "447f3e8198996d899d939c76753e0c81091eb900", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/447f3e8198996d899d939c76753e0c81091eb900", "committedDate": "2020-04-29T06:24:21Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyNzQ5NDMx", "url": "https://github.com/DataDog/dd-trace-java/pull/1402#pullrequestreview-402749431", "createdAt": "2020-04-29T14:54:03Z", "commit": {"oid": "447f3e8198996d899d939c76753e0c81091eb900"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "447f3e8198996d899d939c76753e0c81091eb900", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/447f3e8198996d899d939c76753e0c81091eb900", "committedDate": "2020-04-29T06:24:21Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}, "afterCommit": {"oid": "1ae1b4f89f7d1885efdc9668eba4c9a5079d4ead", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1ae1b4f89f7d1885efdc9668eba4c9a5079d4ead", "committedDate": "2020-04-29T16:43:24Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46f4e248dcaf8cc487e366199d5eab4cdd2fd75c", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/46f4e248dcaf8cc487e366199d5eab4cdd2fd75c", "committedDate": "2020-04-29T17:04:33Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "1ae1b4f89f7d1885efdc9668eba4c9a5079d4ead", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1ae1b4f89f7d1885efdc9668eba4c9a5079d4ead", "committedDate": "2020-04-29T16:43:24Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}, "afterCommit": {"oid": "46f4e248dcaf8cc487e366199d5eab4cdd2fd75c", "author": {"user": {"login": "jerchung", "name": "Jerry Chung"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/46f4e248dcaf8cc487e366199d5eab4cdd2fd75c", "committedDate": "2020-04-29T17:04:33Z", "message": "[okhttp] Add instrumentation for okhttp 2.2+"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2440, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}