{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk5MTk1OTI1", "number": 1958, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoxOToyN1rOErM_cQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoxOToyN1rOErM_cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzNzM3MDczOnYy", "diffSide": "RIGHT", "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNDoxOToyN1rOHd1waQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wN1QxNTo0MjoyMVrOHd5tKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1MTQ5Nw==", "bodyText": "Is this late enough?  By the time this class is loaded, are you sure the custom server is defined?  Since this is the builder class, it seems when this is loaded the custom server is being initialized, but not fully defined.\nWith log manager we picked the activating class that ensured a correct state (where the static field with the log manager is initialized).", "url": "https://github.com/DataDog/dd-trace-java/pull/1958#discussion_r501051497", "createdAt": "2020-10-07T14:19:27Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -114,6 +123,18 @@ private static void registerLogManagerCallback(final ClassLoadCallBack callback)\n     }\n   }\n \n+  private static void registerMBeanServerBuilderCallback(final ClassLoadCallBack callback) {\n+    try {\n+      final Class<?> agentInstallerClass =\n+          AGENT_CLASSLOADER.loadClass(\"datadog.trace.agent.tooling.AgentInstaller\");\n+      final Method registerCallbackMethod =\n+          agentInstallerClass.getMethod(\"registerClassLoadCallback\", String.class, Runnable.class);\n+      registerCallbackMethod.invoke(null, \"javax.management.MBeanServerBuilder\", callback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7a17c064bfa69ee55479574fff9406ca733e03a2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA4ODgyOA==", "bodyText": "MBeanServerBuilder is the base class of any custom JMX builder, like LogManager is for the custom log manager case. It should only be touched as part of the JMX bootstrap and at that point it should be far enough in that everything is in place to find the custom builder.", "url": "https://github.com/DataDog/dd-trace-java/pull/1958#discussion_r501088828", "createdAt": "2020-10-07T15:06:13Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -114,6 +123,18 @@ private static void registerLogManagerCallback(final ClassLoadCallBack callback)\n     }\n   }\n \n+  private static void registerMBeanServerBuilderCallback(final ClassLoadCallBack callback) {\n+    try {\n+      final Class<?> agentInstallerClass =\n+          AGENT_CLASSLOADER.loadClass(\"datadog.trace.agent.tooling.AgentInstaller\");\n+      final Method registerCallbackMethod =\n+          agentInstallerClass.getMethod(\"registerClassLoadCallback\", String.class, Runnable.class);\n+      registerCallbackMethod.invoke(null, \"javax.management.MBeanServerBuilder\", callback);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1MTQ5Nw=="}, "originalCommit": {"oid": "7a17c064bfa69ee55479574fff9406ca733e03a2"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTExNjIwMQ==", "bodyText": "There is of course a chance that someone could attempt to load MBeanServerBuilder or a subclass of it directly, but that would be unusual because JMX won't let you pass in an instance. It only lets you set that property and JMX will create the instance for you.\nApart from internal (com.sun) JMX bootstrap classes, the only other JDK class that refers to this and could trigger a load is javax.management.MBeanServerFactory and so far I've only found it referred to at the point when the platform request comes in - ie. when everything should be setup for the custom loader.\nUnlike the log manager case there isn't a static block in the activating class, but this is the next best option. The alternatives would be to look for the custom class itself (but if something changed that then we'd never start JMX) or the internal JDK classes (but then we'd need to cover different vendor implementations.)", "url": "https://github.com/DataDog/dd-trace-java/pull/1958#discussion_r501116201", "createdAt": "2020-10-07T15:42:21Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/Agent.java", "diffHunk": "@@ -114,6 +123,18 @@ private static void registerLogManagerCallback(final ClassLoadCallBack callback)\n     }\n   }\n \n+  private static void registerMBeanServerBuilderCallback(final ClassLoadCallBack callback) {\n+    try {\n+      final Class<?> agentInstallerClass =\n+          AGENT_CLASSLOADER.loadClass(\"datadog.trace.agent.tooling.AgentInstaller\");\n+      final Method registerCallbackMethod =\n+          agentInstallerClass.getMethod(\"registerClassLoadCallback\", String.class, Runnable.class);\n+      registerCallbackMethod.invoke(null, \"javax.management.MBeanServerBuilder\", callback);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMTA1MTQ5Nw=="}, "originalCommit": {"oid": "7a17c064bfa69ee55479574fff9406ca733e03a2"}, "originalPosition": 36}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4678, "cost": 1, "resetAt": "2021-11-12T13:16:51Z"}}}