{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI5ODY1ODMw", "number": 2137, "title": "improve string handling", "bodyText": "I found these two uses of inefficient String API methods in contexts where we should probably remove them (one in reference creation during the build, the other once per span in the Google HTTP client instrumentation).", "createdAt": "2020-11-30T23:12:57Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2137", "merged": true, "mergeCommit": {"oid": "118f3c47e8ccea9abc18ea38b8f1360b5ae583e0"}, "closed": true, "closedAt": "2020-12-01T12:18:19Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdhtr2zAH2gAyNTI5ODY1ODMwOjUzNjFiOGE2ZmE4OTI0NzdiNjk0ZGI3OTA0ZmVhMmNkNTNmZDhiZjM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdh3bSNgFqTU0MTc2MTAwNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5361b8a6fa892477b694db7904fea2cd53fd8bf3", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/5361b8a6fa892477b694db7904fea2cd53fd8bf3", "committedDate": "2020-11-30T23:10:22Z", "message": "improve check for membership of the same package in the reference creator"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNjk5MDkx", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#pullrequestreview-541699091", "createdAt": "2020-12-01T09:21:40Z", "commit": {"oid": "dae13bf444ca29216a0ffd88cb6f7db5e1cf18dc"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToyMTo0MFrOH8gQBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQwOToyNDo0MFrOH8ghLQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIwNDk5Nw==", "bodyText": "Won't this also match when to is in a sub package as well, i.e. to = \"foo/bar/baz/SomeClass\" and from = \"foo/bar/OtherClass\" ?", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#discussion_r533204997", "createdAt": "2020-12-01T09:21:40Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java", "diffHunk": "@@ -81,13 +81,8 @@\n     return references;\n   }\n \n-  /**\n-   * Get the package of an internal class name.\n-   *\n-   * <p>foo/bar/Baz -> foo/bar/\n-   */\n-  private static String internalPackageName(final String internalName) {\n-    return internalName.replaceAll(\"/[^/]+$\", \"\");\n+  private static boolean samePackage(String from, String to) {\n+    return from.regionMatches(0, to, 0, from.lastIndexOf('/') + 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae13bf444ca29216a0ffd88cb6f7db5e1cf18dc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzIwOTM4OQ==", "bodyText": "Could we pull out the getInternalName() calls? Even though they're just substring calls it feels unnecessary.", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#discussion_r533209389", "createdAt": "2020-12-01T09:24:40Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-tooling/src/main/java/datadog/trace/agent/tooling/muzzle/ReferenceCreator.java", "diffHunk": "@@ -98,8 +93,7 @@ private static String internalPackageName(final String internalName) {\n   private static Reference.Flag computeMinimumClassAccess(final Type from, final Type to) {\n     if (from.getInternalName().equalsIgnoreCase(to.getInternalName())) {\n       return Reference.Flag.PRIVATE_OR_HIGHER;\n-    } else if (internalPackageName(from.getInternalName())\n-        .equals(internalPackageName(to.getInternalName()))) {\n+    } else if (samePackage(from.getInternalName(), to.getInternalName())) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dae13bf444ca29216a0ffd88cb6f7db5e1cf18dc"}, "originalPosition": 22}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "d56b5e4b93357f45fea012c6cfd788a7710c3200", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/d56b5e4b93357f45fea012c6cfd788a7710c3200", "committedDate": "2020-12-01T09:47:12Z", "message": "pull repetitive calls to Type.getInternalName(), which allocates a substring each time it's called"}, "afterCommit": {"oid": "a0203620d0b3bdca41b04cebeb9323328695710a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a0203620d0b3bdca41b04cebeb9323328695710a", "committedDate": "2020-12-01T09:56:32Z", "message": "pull repetitive calls to Type.getInternalName(), which allocates a substring each time it's called"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2dea7236705f2078ada6b865ab18859eddfb8d3d", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2dea7236705f2078ada6b865ab18859eddfb8d3d", "committedDate": "2020-12-01T09:58:26Z", "message": "remove inefficient use of String.replaceAll in Google HTTP client instrumentation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa", "committedDate": "2020-12-01T09:58:37Z", "message": "pull repetitive calls to Type.getInternalName(), which allocates a substring each time it's called"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a0203620d0b3bdca41b04cebeb9323328695710a", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a0203620d0b3bdca41b04cebeb9323328695710a", "committedDate": "2020-12-01T09:56:32Z", "message": "pull repetitive calls to Type.getInternalName(), which allocates a substring each time it's called"}, "afterCommit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa", "committedDate": "2020-12-01T09:58:37Z", "message": "pull repetitive calls to Type.getInternalName(), which allocates a substring each time it's called"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzUwOTU3", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#pullrequestreview-541750957", "createdAt": "2020-12-01T10:19:05Z", "commit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzUzNDc3", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#pullrequestreview-541753477", "createdAt": "2020-12-01T10:22:12Z", "commit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyMjoxMlrOH8lFvA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQxMDoyMjoxMlrOH8lFvA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzI4NDI4NA==", "bodyText": "could this use url.replace(\"%20\", \"+\") since it's just a literal replacement and no regex is involved?", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#discussion_r533284284", "createdAt": "2020-12-01T10:22:12Z", "author": {"login": "mcculls"}, "path": "dd-java-agent/instrumentation/google-http-client/src/main/java/datadog/trace/instrumentation/googlehttpclient/GoogleHttpClientDecorator.java", "diffHunk": "@@ -23,7 +25,7 @@ protected URI url(final HttpRequest httpRequest) throws URISyntaxException {\n     // Google uses %20 (space) instead of \"+\" for spaces in the fragment\n     // Add \"+\" back for consistency with the other http client instrumentations\n     final String url = httpRequest.getUrl().build();\n-    final String fixedUrl = url.replaceAll(\"%20\", \"+\");\n+    final String fixedUrl = URL_REPLACEMENT.matcher(url).replaceAll(\"+\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa"}, "originalPosition": 16}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxNzYxMDA2", "url": "https://github.com/DataDog/dd-trace-java/pull/2137#pullrequestreview-541761006", "createdAt": "2020-12-01T10:31:19Z", "commit": {"oid": "9f9dd0ac7ab8477c8eef0a7ab753f422d5c674aa"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2892, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}