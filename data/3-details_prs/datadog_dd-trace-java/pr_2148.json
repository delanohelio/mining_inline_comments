{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMwNTgwMzMz", "number": 2148, "title": "remove busyspin backoff logic in flaky DDAgentWriterCombinedTest", "bodyText": "I believe this test fails because it is slow, and removing the backoff logic seems to speed the test up by around 70x. I will build this PR repeatedly and verify that I don't see this:\ntest default buffer size for v0.3/traces - datadog.trace.common.writer.DDAgentWriterCombinedTest\nToo many invocations for:\n\n0 * _   (1 invocation)\n\nMatching invocations (ordered by last occurrence):\n\n1 * api.sendSerializedTraces(<datadog.trace.common.writer.ddagent.TraceMapperV0_4$PayloadV0_4@1a63cfba traceCount=32670 body=java.nio.HeapByteBuffer[pos=0 lim=5194533 cap=5194533]>)   <-- this triggered the error\n\n\n\tat org.spockframework.mock.runtime.MockInteraction.accept(MockInteraction.java:70)\n\tat org.spockframework.mock.runtime.MockInteractionDecorator.accept(MockInteractionDecorator.java:50)\n\tat org.spockframework.mock.runtime.InteractionScope$1.accept(InteractionScope.java:51)\n\tat org.spockframework.mock.runtime.MockController.handle(MockController.java:40)\n\tat org.spockframework.mock.runtime.JavaMockInterceptor.intercept(JavaMockInterceptor.java:72)\n\tat org.spockframework.mock.runtime.ByteBuddyInterceptorAdapter.interceptNonAbstract(ByteBuddyInterceptorAdapter.java:35)\n\tat datadog.trace.common.writer.ddagent.PayloadDispatcher.accept(PayloadDispatcher.java:72)\n\tat datadog.trace.core.serialization.WritableFormatter.flush(WritableFormatter.java:108)\n\tat datadog.trace.common.writer.ddagent.PayloadDispatcher.flush(PayloadDispatcher.java:33)\n\tat datadog.trace.common.writer.ddagent.TraceProcessingWorker$TraceSerializingHandler.onEvent(TraceProcessingWorker.java:145)\n\tat datadog.trace.common.writer.ddagent.TraceProcessingWorker$TraceSerializingHandler.consumeFromPrimaryQueue(TraceProcessingWorker.java:184)\n\tat datadog.trace.common.writer.ddagent.TraceProcessingWorker$TraceSerializingHandler.runDutyCycle(TraceProcessingWorker.java:171)\n\tat datadog.trace.common.writer.ddagent.TraceProcessingWorker$TraceSerializingHandler.run(TraceProcessingWorker.java:160)\n\tat java.lang.Thread.run(Thread.java:748)", "createdAt": "2020-12-01T21:17:03Z", "url": "https://github.com/DataDog/dd-trace-java/pull/2148", "merged": true, "mergeCommit": {"oid": "df1001d72eb6383ba3d835f431d9e24b87b2a183"}, "closed": true, "closedAt": "2020-12-02T08:38:06Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdiAtdjgFqTU0MjMwNTE3Mw==", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiKWd1gFqTU0MjU5OTE2OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzA1MTcz", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#pullrequestreview-542305173", "createdAt": "2020-12-01T21:20:19Z", "commit": {"oid": "9b5dcb7f937c6d13a4fda153a9a8817e406b4002"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToyMDoxOVrOH9ANCQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMToyMDoxOVrOH9ANCQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzcyODUyMQ==", "bodyText": "This makes the writer busy spin until the trace is published iff the queue is full", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#discussion_r533728521", "createdAt": "2020-12-01T21:20:19Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/DDAgentWriterCombinedTest.groovy", "diffHunk": "@@ -182,6 +184,7 @@ class DDAgentWriterCombinedTest extends DDSpecification {\n     def writer = DDAgentWriter.builder()\n       .agentApi(api)\n       .traceBufferSize(BUFFER_SIZE)\n+      .prioritization(ENSURE_TRACE)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9b5dcb7f937c6d13a4fda153a9a8817e406b4002"}, "originalPosition": 20}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/df25e9e3bf65474cac412f81475895e007c32e8f", "committedDate": "2020-12-01T21:33:04Z", "message": "remove backoff logic in test default buffer size to speed up test ~70x"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9b5dcb7f937c6d13a4fda153a9a8817e406b4002", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9b5dcb7f937c6d13a4fda153a9a8817e406b4002", "committedDate": "2020-12-01T21:14:47Z", "message": "remove backoff logic in test default buffer size to speed up test ~70x"}, "afterCommit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/df25e9e3bf65474cac412f81475895e007c32e8f", "committedDate": "2020-12-01T21:33:04Z", "message": "remove backoff logic in test default buffer size to speed up test ~70x"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzE0Mjg1", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#pullrequestreview-542314285", "createdAt": "2020-12-01T21:33:33Z", "commit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMzE1MzM4", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#pullrequestreview-542315338", "createdAt": "2020-12-01T21:35:07Z", "commit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTozNTowN1rOH9ArIQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wMVQyMTozNTowN1rOH9ArIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMzczNjIyNQ==", "bodyText": "Interestingly, this test can now run at what would be one microsecond per trace on my macbook (which still feels like quite a lot)", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#discussion_r533736225", "createdAt": "2020-12-01T21:35:07Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/test/groovy/datadog/trace/common/writer/DDAgentWriterCombinedTest.groovy", "diffHunk": "@@ -193,11 +194,6 @@ class DDAgentWriterCombinedTest extends DDSpecification {\n     int maxedPayloadTraceCount = ((int) ((mapper.messageBufferSize() - 5) / traceSize))\n     (0..maxedPayloadTraceCount).each {\n       writer.write(minimalTrace)\n-      def start = System.nanoTime()\n-      // (consumer processes a trace in about 20 microseconds", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyNTk5MTY5", "url": "https://github.com/DataDog/dd-trace-java/pull/2148#pullrequestreview-542599169", "createdAt": "2020-12-02T08:34:15Z", "commit": {"oid": "df25e9e3bf65474cac412f81475895e007c32e8f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2910, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}