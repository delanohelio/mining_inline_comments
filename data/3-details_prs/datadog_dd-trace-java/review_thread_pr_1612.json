{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3OTAxNjcz", "number": 1612, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNjozMFrOEHi81w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNjozMFrOEHi81w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc2MzQ4MTE5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/jms/src/main/java/datadog/trace/instrumentation/jms/JMSDecorator.java", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxMjoxNjozMFrOGm-Dkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0yMlQxNDowOToyOFrOGnCS9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNTc5NQ==", "bodyText": "Why? To line up with the anonymous class names?", "url": "https://github.com/DataDog/dd-trace-java/pull/1612#discussion_r443515795", "createdAt": "2020-06-22T12:16:30Z", "author": {"login": "richardstartin"}, "path": "dd-java-agent/instrumentation/jms/src/main/java/datadog/trace/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -14,38 +14,31 @@\n import javax.jms.TemporaryTopic;\n import javax.jms.Topic;\n \n-public abstract class JMSDecorator extends ClientDecorator {\n-  public static final JMSDecorator PRODUCER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_PRODUCER;\n-        }\n+public final class JMSDecorator extends ClientDecorator {\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_PRODUCER;\n-        }\n-      };\n+  private final String spanKind;\n+  private final String spanType;\n+  public static final JMSDecorator PRODUCER_DECORATE =\n+      new JMSDecorator(Tags.SPAN_KIND_PRODUCER, DDSpanTypes.MESSAGE_PRODUCER);\n \n   public static final JMSDecorator CONSUMER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_CONSUMER;\n-        }\n+      new JMSDecorator(Tags.SPAN_KIND_CONSUMER, DDSpanTypes.MESSAGE_CONSUMER);\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_CONSUMER;\n-        }\n-      };\n+  public JMSDecorator(String spanKind, String spanType) {\n+    this.spanKind = spanKind;\n+    this.spanType = spanType;\n+  }\n \n   @Override\n   protected String[] instrumentationNames() {\n     return new String[] {\"jms\", \"jms-1\", \"jms-2\"};", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "40e65ffbe874a1595d7e5d471bb852280e46fdc1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU2NTk1MA==", "bodyText": "Well, this got me curious and when digging through the code I can only see this being used for enabling and configuring trace analytics, and end to end durations, so I can't find a reason for there to be the jms-1 and jms-2 names unless there is some backwards compatibility with those settings existing before. I mean you can't enable and configure them individually anyway since all of them are returned in this array in both cases and settings are checked together.", "url": "https://github.com/DataDog/dd-trace-java/pull/1612#discussion_r443565950", "createdAt": "2020-06-22T13:41:27Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/instrumentation/jms/src/main/java/datadog/trace/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -14,38 +14,31 @@\n import javax.jms.TemporaryTopic;\n import javax.jms.Topic;\n \n-public abstract class JMSDecorator extends ClientDecorator {\n-  public static final JMSDecorator PRODUCER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_PRODUCER;\n-        }\n+public final class JMSDecorator extends ClientDecorator {\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_PRODUCER;\n-        }\n-      };\n+  private final String spanKind;\n+  private final String spanType;\n+  public static final JMSDecorator PRODUCER_DECORATE =\n+      new JMSDecorator(Tags.SPAN_KIND_PRODUCER, DDSpanTypes.MESSAGE_PRODUCER);\n \n   public static final JMSDecorator CONSUMER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_CONSUMER;\n-        }\n+      new JMSDecorator(Tags.SPAN_KIND_CONSUMER, DDSpanTypes.MESSAGE_CONSUMER);\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_CONSUMER;\n-        }\n-      };\n+  public JMSDecorator(String spanKind, String spanType) {\n+    this.spanKind = spanKind;\n+    this.spanType = spanType;\n+  }\n \n   @Override\n   protected String[] instrumentationNames() {\n     return new String[] {\"jms\", \"jms-1\", \"jms-2\"};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNTc5NQ=="}, "originalCommit": {"oid": "40e65ffbe874a1595d7e5d471bb852280e46fdc1"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzU4NTI3MQ==", "bodyText": "yeah, there used to be two separate integrations, and they later got combined.", "url": "https://github.com/DataDog/dd-trace-java/pull/1612#discussion_r443585271", "createdAt": "2020-06-22T14:09:28Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/instrumentation/jms/src/main/java/datadog/trace/instrumentation/jms/JMSDecorator.java", "diffHunk": "@@ -14,38 +14,31 @@\n import javax.jms.TemporaryTopic;\n import javax.jms.Topic;\n \n-public abstract class JMSDecorator extends ClientDecorator {\n-  public static final JMSDecorator PRODUCER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_PRODUCER;\n-        }\n+public final class JMSDecorator extends ClientDecorator {\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_PRODUCER;\n-        }\n-      };\n+  private final String spanKind;\n+  private final String spanType;\n+  public static final JMSDecorator PRODUCER_DECORATE =\n+      new JMSDecorator(Tags.SPAN_KIND_PRODUCER, DDSpanTypes.MESSAGE_PRODUCER);\n \n   public static final JMSDecorator CONSUMER_DECORATE =\n-      new JMSDecorator() {\n-        @Override\n-        protected String spanKind() {\n-          return Tags.SPAN_KIND_CONSUMER;\n-        }\n+      new JMSDecorator(Tags.SPAN_KIND_CONSUMER, DDSpanTypes.MESSAGE_CONSUMER);\n \n-        @Override\n-        protected String spanType() {\n-          return DDSpanTypes.MESSAGE_CONSUMER;\n-        }\n-      };\n+  public JMSDecorator(String spanKind, String spanType) {\n+    this.spanKind = spanKind;\n+    this.spanType = spanType;\n+  }\n \n   @Override\n   protected String[] instrumentationNames() {\n     return new String[] {\"jms\", \"jms-1\", \"jms-2\"};", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0MzUxNTc5NQ=="}, "originalCommit": {"oid": "40e65ffbe874a1595d7e5d471bb852280e46fdc1"}, "originalPosition": 43}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 92, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}