{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxOTkxNTAw", "number": 1641, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMjo0NzoyMlrOEKFJAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzozODo1NlrOEKGf4g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDA1NDQxOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMjo0NzoyMlrOGq6qhw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMjo1Mjo1MVrOGq63Xg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NDUzNQ==", "bodyText": "Definitely good to know. Maybe we should add some metrics for these things as well?", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447654535", "createdAt": "2020-06-30T12:47:22Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java", "diffHunk": "@@ -46,7 +47,25 @@ public void close() {\n   }\n \n   long beginTransaction() {\n-    return disruptor.getRingBuffer().next();\n+    long backoffMillis = 1;\n+    long nextLogTime = 0;\n+    while (true) {\n+      try {\n+        return disruptor.getRingBuffer().tryNext();\n+      } catch (InsufficientCapacityException insufficientCapacity) {\n+        long now = System.currentTimeMillis();\n+        backoffMillis = Math.min(backoffMillis * 2, 1000);\n+        if (now > nextLogTime) { // log every 20 seconds\n+          log.debug(\"no buffer available, sleeping for {}ms\", backoffMillis);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5b6a7728abf73eb22c97a00faa8eb1cf255bb480"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NzgyMg==", "bodyText": "Agreed, this isn't something I want to merge right now", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447657822", "createdAt": "2020-06-30T12:52:51Z", "author": {"login": "richardstartin"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/DispatchingDisruptor.java", "diffHunk": "@@ -46,7 +47,25 @@ public void close() {\n   }\n \n   long beginTransaction() {\n-    return disruptor.getRingBuffer().next();\n+    long backoffMillis = 1;\n+    long nextLogTime = 0;\n+    while (true) {\n+      try {\n+        return disruptor.getRingBuffer().tryNext();\n+      } catch (InsufficientCapacityException insufficientCapacity) {\n+        long now = System.currentTimeMillis();\n+        backoffMillis = Math.min(backoffMillis * 2, 1000);\n+        if (now > nextLogTime) { // log every 20 seconds\n+          log.debug(\"no buffer available, sleeping for {}ms\", backoffMillis);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY1NDUzNQ=="}, "originalCommit": {"oid": "5b6a7728abf73eb22c97a00faa8eb1cf255bb480"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MDI3NjgyOnYy", "diffSide": "RIGHT", "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Monitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzozODo1NlrOGq8zSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQxMzozODo1NlrOGq8zSg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0NzY4OTU0Ng==", "bodyText": "\ud83d\udc4d", "url": "https://github.com/DataDog/dd-trace-java/pull/1641#discussion_r447689546", "createdAt": "2020-06-30T13:38:56Z", "author": {"login": "bantonsson"}, "path": "dd-trace-core/src/main/java/datadog/trace/common/writer/ddagent/Monitor.java", "diffHunk": "@@ -114,6 +116,11 @@ public void onScheduleFlush(final DDAgentWriter agentWriter, final boolean previ\n       // not recorded\n     }\n \n+    @Override\n+    public void onBackedUpTraceBuffer() {\n+      statsd.incrementCounter(\"trace.buffer.backlog\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9dc0378a16d51f63f0c492867062ef9678b3e996"}, "originalPosition": 15}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 106, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}