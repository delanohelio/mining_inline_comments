{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDM3MTIwMTc2", "number": 1606, "title": "do not eagerly load classfiles at startup", "bodyText": "This cuts another second off time to install the agent in spring pet clinic with JDK11\n./start.sh install  2.73s user 0.14s system 206% cpu 1.386 total\n./start.sh install  2.78s user 0.15s system 208% cpu 1.405 total\n./start.sh install  2.91s user 0.15s system 210% cpu 1.452 total\n./start.sh install  2.82s user 0.15s system 209% cpu 1.416 total\n./start.sh install  2.81s user 0.16s system 208% cpu 1.424 total\n./start.sh install  2.86s user 0.15s system 209% cpu 1.433 total\n./start.sh install  2.87s user 0.15s system 209% cpu 1.439 total\n./start.sh install  2.90s user 0.15s system 210% cpu 1.446 total\n./start.sh install  2.88s user 0.15s system 209% cpu 1.445 total\n./start.sh install  3.01s user 0.16s system 210% cpu 1.502 total\n\nOn master (JDK11):\n./start.sh install  4.26s user 0.20s system 285% cpu 1.565 total\n./start.sh install  4.29s user 0.21s system 293% cpu 1.529 total\n./start.sh install  4.14s user 0.20s system 283% cpu 1.530 total\n./start.sh install  4.29s user 0.21s system 284% cpu 1.583 total\n./start.sh install  4.27s user 0.21s system 286% cpu 1.563 total\n./start.sh install  4.20s user 0.20s system 283% cpu 1.551 total\n./start.sh install  4.26s user 0.21s system 287% cpu 1.552 total\n./start.sh install  4.20s user 0.20s system 292% cpu 1.508 total\n./start.sh install  4.35s user 0.20s system 290% cpu 1.568 total\n./start.sh install  4.29s user 0.21s system 286% cpu 1.569 total\n\nbranch (JDK8)\n./start.sh install  3.22s user 0.12s system 97% cpu 3.440 total\n./start.sh install  3.15s user 0.10s system 100% cpu 3.254 total\n./start.sh install  3.15s user 0.10s system 100% cpu 3.245 total\n./start.sh install  3.18s user 0.10s system 99% cpu 3.279 total\n./start.sh install  3.28s user 0.10s system 99% cpu 3.379 total\n./start.sh install  3.21s user 0.10s system 99% cpu 3.311 total\n./start.sh install  3.40s user 0.11s system 99% cpu 3.514 total\n./start.sh install  3.29s user 0.11s system 99% cpu 3.409 total\n./start.sh install  3.29s user 0.12s system 99% cpu 3.416 total\n./start.sh install  3.39s user 0.13s system 99% cpu 3.518 total", "createdAt": "2020-06-19T14:04:02Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1606", "merged": true, "mergeCommit": {"oid": "0a867bc3279e20d5c356e213b007887c78f11310"}, "closed": true, "closedAt": "2020-06-19T15:03:01Z", "author": {"login": "richardstartin"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcsze4FAH2gAyNDM3MTIwMTc2OjdiMDBiY2M3MDE1NTY2MzdlMjJiZmUzZjVlZGZiYjY1ZTE3ZjYzMDY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcs0LIHAFqTQzNDEzNDcwMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306", "author": {"user": {"login": "richardstartin", "name": "Richard Startin"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7b00bcc701556637e22bfe3f5edfbb65e17f6306", "committedDate": "2020-06-19T13:57:38Z", "message": "do not eagerly load classfiles at startup"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTE5MDIz", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#pullrequestreview-434119023", "createdAt": "2020-06-19T14:25:29Z", "commit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoyNToyOVrOGmWtPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoyNToyOVrOGmWtPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3MTEwMw==", "bodyText": "What is the reason for this special treatment of META-INF/services folder?", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#discussion_r442871103", "createdAt": "2020-06-19T14:25:29Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/InternalJarURLHandler.java", "diffHunk": "@@ -27,35 +25,40 @@\n \n   private final String name;\n   private final FileNotInInternalJar notFound;\n-  private final Map<String, JarEntry> filenameToEntry = new HashMap<>();\n   private final Set<String> packages = new HashSet<>();\n   private final JarFile bootstrapJarFile;\n \n+  private static final ThreadLocal<StringBuilder> JAR_ENTRY_QUERY =\n+      new ThreadLocal<StringBuilder>() {\n+        @Override\n+        protected StringBuilder initialValue() {\n+          return new StringBuilder(128);\n+        }\n+      };\n+\n   private WeakReference<Pair<String, JarEntry>> cache = NULL;\n \n   InternalJarURLHandler(final String internalJarFileName, final URL bootstrapJarLocation) {\n     this.name = internalJarFileName;\n     this.notFound = new FileNotInInternalJar(internalJarFileName);\n     final String filePrefix = internalJarFileName + \"/\";\n     JarFile jarFile = null;\n-    String currentDir = \"$\";\n     try {\n       if (bootstrapJarLocation != null) {\n         jarFile = new JarFile(new File(bootstrapJarLocation.toURI()), false);\n         final Enumeration<JarEntry> entries = jarFile.entries();\n         while (entries.hasMoreElements()) {\n           final JarEntry entry = entries.nextElement();\n-          if (!entry.isDirectory() && entry.getName().startsWith(filePrefix)) {\n-            String name = entry.getName();\n-            // remove data suffix\n-            int end = name.endsWith(\".classdata\") ? name.length() - 4 : name.length();\n-            String fileName = name.substring(internalJarFileName.length(), end);\n-            filenameToEntry.put(fileName, entry);\n-            if (fileName.endsWith(\".class\") && !fileName.startsWith(currentDir)) {\n-              int fileNameStart = fileName.lastIndexOf('/');\n-              if (fileNameStart != -1) {\n-                currentDir = fileName.substring(1, fileNameStart);\n-                String currentPackage = currentDir.replace('/', '.');\n+          String name = entry.getName();\n+          if (name.startsWith(filePrefix)) {\n+            if (entry.isDirectory()) {\n+              int prefix = filePrefix.length();\n+              if (name.contains(\"META-INF/services/\")) {\n+                prefix += \"META-INF/services/\".length();\n+              }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "originalPosition": 57}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTE5MDU0", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#pullrequestreview-434119054", "createdAt": "2020-06-19T14:25:30Z", "commit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoyNTozMVrOGmWtUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDoyNTozMVrOGmWtUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3MTEyMA==", "bodyText": "nice one!", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#discussion_r442871120", "createdAt": "2020-06-19T14:25:31Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/InternalJarURLHandler.java", "diffHunk": "@@ -27,35 +25,40 @@\n \n   private final String name;\n   private final FileNotInInternalJar notFound;\n-  private final Map<String, JarEntry> filenameToEntry = new HashMap<>();\n   private final Set<String> packages = new HashSet<>();\n   private final JarFile bootstrapJarFile;\n \n+  private static final ThreadLocal<StringBuilder> JAR_ENTRY_QUERY =\n+      new ThreadLocal<StringBuilder>() {\n+        @Override\n+        protected StringBuilder initialValue() {\n+          return new StringBuilder(128);\n+        }\n+      };\n+\n   private WeakReference<Pair<String, JarEntry>> cache = NULL;\n \n   InternalJarURLHandler(final String internalJarFileName, final URL bootstrapJarLocation) {\n     this.name = internalJarFileName;\n     this.notFound = new FileNotInInternalJar(internalJarFileName);\n     final String filePrefix = internalJarFileName + \"/\";\n     JarFile jarFile = null;\n-    String currentDir = \"$\";\n     try {\n       if (bootstrapJarLocation != null) {\n         jarFile = new JarFile(new File(bootstrapJarLocation.toURI()), false);\n         final Enumeration<JarEntry> entries = jarFile.entries();\n         while (entries.hasMoreElements()) {\n           final JarEntry entry = entries.nextElement();\n-          if (!entry.isDirectory() && entry.getName().startsWith(filePrefix)) {\n-            String name = entry.getName();\n-            // remove data suffix\n-            int end = name.endsWith(\".classdata\") ? name.length() - 4 : name.length();\n-            String fileName = name.substring(internalJarFileName.length(), end);\n-            filenameToEntry.put(fileName, entry);\n-            if (fileName.endsWith(\".class\") && !fileName.startsWith(currentDir)) {\n-              int fileNameStart = fileName.lastIndexOf('/');\n-              if (fileNameStart != -1) {\n-                currentDir = fileName.substring(1, fileNameStart);\n-                String currentPackage = currentDir.replace('/', '.');\n+          String name = entry.getName();\n+          if (name.startsWith(filePrefix)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "originalPosition": 52}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTI2MTUy", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#pullrequestreview-434126152", "createdAt": "2020-06-19T14:34:38Z", "commit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDozNDozOVrOGmXBLg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0xOVQxNDozNDozOVrOGmXBLg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0Mjg3NjIwNg==", "bodyText": "Suggestion... instead of resetting this to 0 each time then calling sb.append(this.name), make the StringBuilder a non-static field, prepopulate it with this.name and reset to this.name.size() to avoid recopying it each time.", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#discussion_r442876206", "createdAt": "2020-06-19T14:34:39Z", "author": {"login": "tylerbenson"}, "path": "dd-java-agent/agent-bootstrap/src/main/java/datadog/trace/bootstrap/InternalJarURLHandler.java", "diffHunk": "@@ -90,7 +93,14 @@ protected URLConnection openConnection(final URL url) throws IOException {\n     // and the key will be a new object each time.\n     Pair<String, JarEntry> pair = cache.get();\n     if (null == pair || !filename.equals(pair.getLeft())) {\n-      final JarEntry entry = filenameToEntry.get(filename);\n+      StringBuilder sb = JAR_ENTRY_QUERY.get();\n+      sb.append(this.name).append(filename);\n+      if (filename.endsWith(\".class\")) {\n+        sb.append(\"data\");\n+      }\n+      String classFileName = sb.toString();\n+      sb.setLength(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "originalPosition": 84}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDM0MTM0NzAw", "url": "https://github.com/DataDog/dd-trace-java/pull/1606#pullrequestreview-434134700", "createdAt": "2020-06-19T14:45:58Z", "commit": {"oid": "7b00bcc701556637e22bfe3f5edfbb65e17f6306"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2196, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}