{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgzMTA3NDQz", "number": 1283, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1NTo0NVrODk4vZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjozMzozMVrODlBrIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDA0OTY1OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/RequestInstrumentation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1NTo0NVrOFxdfFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1NTo0NVrOFxdfFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwNzYzNg==", "bodyText": "The double negative is a bit hard to read.  I think a utility method would help clarity greatly.", "url": "https://github.com/DataDog/dd-trace-java/pull/1283#discussion_r387407636", "createdAt": "2020-03-04T01:55:45Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/aws-java-sdk-1.11.0/src/main/java/datadog/trace/instrumentation/aws/v0/RequestInstrumentation.java", "diffHunk": "@@ -25,6 +27,12 @@ public RequestInstrumentation() {\n     super(\"aws-sdk\");\n   }\n \n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderMatcher() {\n+    // Optimization for expensive typeMatcher.\n+    return not(classLoaderHasNoResources(\"com/amazonaws/AmazonWebServiceRequest.class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042f49d800b4ea60ad8c27ae43925e1ac218f41d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDA1Mjk2OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/hibernate/core-4.3/src/main/java/datadog/trace/instrumentation/hibernate/core/v4_3/ProcedureCallInstrumentation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1Nzo1NlrOFxdhBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1Nzo1NlrOFxdhBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwODEzMw==", "bodyText": "One observation from the field injection optimization.  Often our classLoaderMatchers are really more aim at matching a library or an API, but we don't really have that as a concept in the code.\nI think this change also suggest that we should have some notion of a Library go which Instrumenters refer.", "url": "https://github.com/DataDog/dd-trace-java/pull/1283#discussion_r387408133", "createdAt": "2020-03-04T01:57:56Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/hibernate/core-4.3/src/main/java/datadog/trace/instrumentation/hibernate/core/v4_3/ProcedureCallInstrumentation.java", "diffHunk": "@@ -43,6 +45,12 @@ public ProcedureCallInstrumentation() {\n     };\n   }\n \n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderMatcher() {\n+    // Optimization for expensive typeMatcher.\n+    return not(classLoaderHasNoResources(\"org/hibernate/Session.class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042f49d800b4ea60ad8c27ae43925e1ac218f41d"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMDA1NTA4OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/jedis-1.4/src/main/java/datadog/trace/instrumentation/jedis/JedisInstrumentation.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQwMTo1OToyN1rOFxdiSg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjozNjowNlrOFxrioQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwODQ1OA==", "bodyText": "I think this speaks to the fact that we should make a classLoaderHasResources.  Then this could be a single matcher.", "url": "https://github.com/DataDog/dd-trace-java/pull/1283#discussion_r387408458", "createdAt": "2020-03-04T01:59:27Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/instrumentation/jedis-1.4/src/main/java/datadog/trace/instrumentation/jedis/JedisInstrumentation.java", "diffHunk": "@@ -33,7 +34,9 @@ public JedisInstrumentation() {\n \n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n-    return classLoaderHasNoResources(\"redis/clients/jedis/commands/ProtocolCommand.class\");\n+    return classLoaderHasNoResources(\"redis/clients/jedis/commands/ProtocolCommand.class\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042f49d800b4ea60ad8c27ae43925e1ac218f41d"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYzNzkyMQ==", "bodyText": "Yeah, it would be nice to have a comment here explaining what's going on", "url": "https://github.com/DataDog/dd-trace-java/pull/1283#discussion_r387637921", "createdAt": "2020-03-04T12:36:06Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/instrumentation/jedis-1.4/src/main/java/datadog/trace/instrumentation/jedis/JedisInstrumentation.java", "diffHunk": "@@ -33,7 +34,9 @@ public JedisInstrumentation() {\n \n   @Override\n   public ElementMatcher<ClassLoader> classLoaderMatcher() {\n-    return classLoaderHasNoResources(\"redis/clients/jedis/commands/ProtocolCommand.class\");\n+    return classLoaderHasNoResources(\"redis/clients/jedis/commands/ProtocolCommand.class\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzQwODQ1OA=="}, "originalCommit": {"oid": "042f49d800b4ea60ad8c27ae43925e1ac218f41d"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQwMTUxMzI5OnYy", "diffSide": "RIGHT", "path": "dd-java-agent/instrumentation/apache-httpasyncclient-4/src/main/java/datadog/trace/instrumentation/apachehttpasyncclient/ApacheHttpAsyncClientInstrumentation.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjozMzozMVrOFxreBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wNFQxMjozMzozMVrOFxreBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzYzNjc0MA==", "bodyText": "Double negatives are somewhat hard to read", "url": "https://github.com/DataDog/dd-trace-java/pull/1283#discussion_r387636740", "createdAt": "2020-03-04T12:33:31Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/instrumentation/apache-httpasyncclient-4/src/main/java/datadog/trace/instrumentation/apachehttpasyncclient/ApacheHttpAsyncClientInstrumentation.java", "diffHunk": "@@ -38,6 +40,12 @@ public ApacheHttpAsyncClientInstrumentation() {\n     super(\"httpasyncclient\", \"apache-httpasyncclient\");\n   }\n \n+  @Override\n+  public ElementMatcher<ClassLoader> classLoaderMatcher() {\n+    // Optimization for expensive typeMatcher.\n+    return not(classLoaderHasNoResources(\"org/apache/http/nio/client/HttpAsyncClient.class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "042f49d800b4ea60ad8c27ae43925e1ac218f41d"}, "originalPosition": 22}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 365, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}