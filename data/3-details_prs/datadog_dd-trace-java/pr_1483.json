{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDIxMzU4ODgw", "number": 1483, "title": "PROF-1560: Fix simple type constant pool handling", "bodyText": "Fix hashCode and equals calculation on all types participating in metadata and constant pools.", "createdAt": "2020-05-21T13:41:47Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1483", "merged": true, "mergeCommit": {"oid": "a782e6f72bbe747b57fe7379e9a3b7fca27f635e"}, "closed": true, "closedAt": "2020-05-22T14:39:58Z", "author": {"login": "jbachorik"}, "timelineItems": {"totalCount": 20, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcjt2-AAFqTQxNjcyODU1NA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcjzFGxAH2gAyNDIxMzU4ODgwOjcwODQzMjBlYWQ0OGExYjAwYWJkYTFjYmNjYzdlNGEyMmYwNWQ5YmQ=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzI4NTU0", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#pullrequestreview-416728554", "createdAt": "2020-05-22T08:13:38Z", "commit": {"oid": "3d803dd789c1340227d8ec166231225f5ed60567"}, "state": "APPROVED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxMzozOFrOGZOlFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwODoxODoxMVrOGZOtBw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwNjQ1Mw==", "bodyText": "nit: I was expecting for a bool a something like computedHashCode\nif you want to express the need to computeHashCode, maybe: needsComputeHashCode or\nisComputedHashCode`", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429106453", "createdAt": "2020-05-22T08:13:38Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/ImmutableMapEntry.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.datadog.profiling.jfr;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+import lombok.Generated;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+@Generated\n+final class ImmutableMapEntry<K, V> implements Map.Entry<K, V> {\n+  private volatile boolean computeHashCode = true;\n+  private int hashCode;\n+\n+  @Getter private final K key;\n+  @Getter private final V value;\n+\n+  ImmutableMapEntry(@NonNull K key, V value) {\n+    this.key = key;\n+    this.value = value;\n+  }\n+\n+  @Override\n+  public V setValue(V v) {\n+    throw new UnsupportedOperationException();\n+  }\n+\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    ImmutableMapEntry<?, ?> that = (ImmutableMapEntry<?, ?>) o;\n+    return key.equals(that.key) && Objects.equals(value, that.value);\n+  }\n+\n+  @Override\n+  public int hashCode() {\n+    if (computeHashCode) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d803dd789c1340227d8ec166231225f5ed60567"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTEwODQ4Nw==", "bodyText": "optional: volatile is not require here, like for string this is a benign race.\nworst case you compute hashcode couple of  times for concurrent requests", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429108487", "createdAt": "2020-05-22T08:18:11Z", "author": {"login": "jpbempel"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/ImmutableMapEntry.java", "diffHunk": "@@ -0,0 +1,47 @@\n+package com.datadog.profiling.jfr;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+import lombok.Generated;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+@Generated\n+final class ImmutableMapEntry<K, V> implements Map.Entry<K, V> {\n+  private volatile boolean computeHashCode = true;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3d803dd789c1340227d8ec166231225f5ed60567"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "65fe706d6f22f8d433d1ebf8c41c3acec135c5f0", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/65fe706d6f22f8d433d1ebf8c41c3acec135c5f0", "committedDate": "2020-05-22T09:56:33Z", "message": "PROF-1560: Fix simple type constant pool handling\n\nAlso fix equals/hashCode for all types participating in metadata and constant pool."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6f5e0a1832f6bcd941497e1e75b7fa4dbce01b35", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6f5e0a1832f6bcd941497e1e75b7fa4dbce01b35", "committedDate": "2020-05-22T09:56:33Z", "message": "Make formatting happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a7c6a9a9b01ce2554e7ab7998746ff19d6a123c3", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a7c6a9a9b01ce2554e7ab7998746ff19d6a123c3", "committedDate": "2020-05-22T09:56:33Z", "message": "Exclude JMXSampler from coverage test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "463c9237b9731f2fe7051f12d6133f0ee1ef935d", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/463c9237b9731f2fe7051f12d6133f0ee1ef935d", "committedDate": "2020-05-22T09:56:33Z", "message": "Fix @ContentType annotation structure"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "363e15fb0396cb89d96283aaed257b93a58bc426", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/363e15fb0396cb89d96283aaed257b93a58bc426", "committedDate": "2020-05-22T09:56:33Z", "message": "Simplify hashCode caching"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8052e88f2e667a26112f16f6c5e5b5c25fe1899f", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/8052e88f2e667a26112f16f6c5e5b5c25fe1899f", "committedDate": "2020-05-22T09:56:50Z", "message": "Add test for expected number of samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df6b5a121e8a5aa6ba1a77c59ea49f17c8b902c3", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/df6b5a121e8a5aa6ba1a77c59ea49f17c8b902c3", "committedDate": "2020-05-22T09:56:50Z", "message": "Fix metadata size computation"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee0df85afe990745934c64b3ab22fba8b0c8685a", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ee0df85afe990745934c64b3ab22fba8b0c8685a", "committedDate": "2020-05-22T09:56:50Z", "message": "Include back the 'id' field in equals/hashCode computation of BaseType"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3936881605aabbf8189e0290748ec7dc33812fce", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3936881605aabbf8189e0290748ec7dc33812fce", "committedDate": "2020-05-22T09:51:35Z", "message": "Include back the 'id' field in equals/hashCode computation of BaseType"}, "afterCommit": {"oid": "ee0df85afe990745934c64b3ab22fba8b0c8685a", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ee0df85afe990745934c64b3ab22fba8b0c8685a", "committedDate": "2020-05-22T09:56:50Z", "message": "Include back the 'id' field in equals/hashCode computation of BaseType"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2NzkyMTU0", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#pullrequestreview-416792154", "createdAt": "2020-05-22T09:58:35Z", "commit": {"oid": "ee0df85afe990745934c64b3ab22fba8b0c8685a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1ODozNVrOGZRmEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQwOTo1ODozNVrOGZRmEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE1NTg1OQ==", "bodyText": "Is this guaranteed to not be 0?", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429155859", "createdAt": "2020-05-22T09:58:35Z", "author": {"login": "bantonsson"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/Annotation.java", "diffHunk": "@@ -26,4 +31,26 @@ public Annotation(Type type, String value) {\n   public static boolean isAnnotationType(Type type) {\n     return ANNOTATION_SUPER_TYPE_NAME.equals(type.getSupertype());\n   }\n+\n+  @Generated\n+  @Override\n+  public boolean equals(Object o) {\n+    if (this == o) {\n+      return true;\n+    }\n+    if (o == null || getClass() != o.getClass()) {\n+      return false;\n+    }\n+    Annotation that = (Annotation) o;\n+    return type.equals(that.type) && Objects.equals(value, that.value);\n+  }\n+\n+  @Generated\n+  @Override\n+  public int hashCode() {\n+    if (hashCode == 0) {\n+      hashCode = Objects.hash(type, value);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ee0df85afe990745934c64b3ab22fba8b0c8685a"}, "originalPosition": 36}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "129f72e8fc40bb0e997f1aba2ab48889b659c002", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/129f72e8fc40bb0e997f1aba2ab48889b659c002", "committedDate": "2020-05-22T10:17:04Z", "message": "Formatting!"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b6cc9dadde88392bc6101519c7554c8dccd43b21", "committedDate": "2020-05-22T10:34:52Z", "message": "Revert MetadataTest"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODQxNDAy", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#pullrequestreview-416841402", "createdAt": "2020-05-22T11:31:07Z", "commit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozMTowN1rOGZT6yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozMTowN1rOGZT6yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5MzkzMQ==", "bodyText": "This seems to be some thingy that lombok is planning to add automatically - what is the point of using this manually?", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429193931", "createdAt": "2020-05-22T11:31:07Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/Annotation.java", "diffHunk": "@@ -26,4 +31,26 @@ public Annotation(Type type, String value) {\n   public static boolean isAnnotationType(Type type) {\n     return ANNOTATION_SUPER_TYPE_NAME.equals(type.getSupertype());\n   }\n+\n+  @Generated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODQyOTQz", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#pullrequestreview-416842943", "createdAt": "2020-05-22T11:34:06Z", "commit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozNDowNlrOGZT_eg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozNDowNlrOGZT_eg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NTEzMA==", "bodyText": "What is the point of this annotation? If the whole class was generated with some tool could you please add some comments explaining how it was made in case we need to do this in the future?.", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429195130", "createdAt": "2020-05-22T11:34:06Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/ImmutableMapEntry.java", "diffHunk": "@@ -0,0 +1,45 @@\n+package com.datadog.profiling.jfr;\n+\n+import java.util.Map;\n+import java.util.Objects;\n+import lombok.Generated;\n+import lombok.Getter;\n+import lombok.NonNull;\n+\n+@Generated", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDE2ODQzMzI3", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#pullrequestreview-416843327", "createdAt": "2020-05-22T11:34:51Z", "commit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozNDo1MVrOGZUAkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0yMlQxMTozNDo1MVrOGZUAkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQyOTE5NTQxMQ==", "bodyText": "I think we should use accessors instead of public fields. There is zero downside and apart from being tradition this also makes easier to track how these are used.", "url": "https://github.com/DataDog/dd-trace-java/pull/1483#discussion_r429195411", "createdAt": "2020-05-22T11:34:51Z", "author": {"login": "mar-kolya"}, "path": "dd-java-agent/agent-profiling/profiling-controller/src/main/java/com/datadog/profiling/jfr/Annotation.java", "diffHunk": "@@ -1,8 +1,13 @@\n package com.datadog.profiling.jfr;\n \n+import java.util.Objects;\n+import lombok.Generated;\n+\n /** A struct-like representation of a JFR annotation */\n public final class Annotation {\n   public static final String ANNOTATION_SUPER_TYPE_NAME = \"java.lang.annotation.Annotation\";\n+  private int hashCode = 0;\n+\n   public final Type type;\n   public final String value;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b6cc9dadde88392bc6101519c7554c8dccd43b21"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72692ea9a155fc1ce5ab057c23130419ed91d6e0", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/72692ea9a155fc1ce5ab057c23130419ed91d6e0", "committedDate": "2020-05-22T11:57:16Z", "message": "Addressing review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b6c1210f86cf8d93ae5949636776155e44b2e203", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b6c1210f86cf8d93ae5949636776155e44b2e203", "committedDate": "2020-05-22T12:05:11Z", "message": "Update missed references to Annotation fields"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54a685b6e65bd0c8bcac45b4b5e4ffd327a70149", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/54a685b6e65bd0c8bcac45b4b5e4ffd327a70149", "committedDate": "2020-05-22T14:06:21Z", "message": "Placate code coverage gods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7084320ead48a1b00abda1cbccc7e4a22f05d9bd", "author": {"user": {"login": "jbachorik", "name": "Jaroslav Bachorik"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7084320ead48a1b00abda1cbccc7e4a22f05d9bd", "committedDate": "2020-05-22T14:24:10Z", "message": "Formatting!"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2288, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}