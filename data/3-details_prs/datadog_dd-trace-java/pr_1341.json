{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0MDQzNDIw", "number": 1341, "title": "DD_SERVICE; DD_ENV; DD_VERSION env vars support", "bodyText": "Introducing support of 3 new java system.properies / environment variables:\n\ndd.service  / DD_SERVICE\ndd.env / DD_ENV\ndd.version / DD_VERSION\n\n\nValues of all these 3 env vars are added to tags and overwrite corresponding keys in dd.tags(DD_TAGS) which later become part of mergedSpanTags .\nIf it least one of these 3 env variables is defined, then Config::tags become not empty and java system property dd.trace.global.tags is totally ignored\nIf these env variables are not defined: no changes in existing logic and no new fields, tags added to spans and no new payload in logs will be added.", "createdAt": "2020-03-26T09:11:11Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1341", "merged": true, "mergeCommit": {"oid": "7f146d74dcf750354081291d9b237fdcce52dcc2"}, "closed": true, "closedAt": "2020-04-10T17:50:12Z", "author": {"login": "lpriima"}, "timelineItems": {"totalCount": 35, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcRYgiDgBqjMxNjczMzU0NjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcWVKN9gFqTM5MTU4NDYzMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7eae86fac81b424335566e11bc47167ff64ad009", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7eae86fac81b424335566e11bc47167ff64ad009", "committedDate": "2020-03-26T09:10:43Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "32ce5c13acea50ff28a96cf33dd08f925fa8df35", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/32ce5c13acea50ff28a96cf33dd08f925fa8df35", "committedDate": "2020-03-26T09:15:49Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "32ce5c13acea50ff28a96cf33dd08f925fa8df35", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/32ce5c13acea50ff28a96cf33dd08f925fa8df35", "committedDate": "2020-03-26T09:15:49Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "13a9f8991c69fdcb1648b37146ea87fa8802009b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/13a9f8991c69fdcb1648b37146ea87fa8802009b", "committedDate": "2020-03-26T16:38:57Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "13a9f8991c69fdcb1648b37146ea87fa8802009b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/13a9f8991c69fdcb1648b37146ea87fa8802009b", "committedDate": "2020-03-26T16:38:57Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "64b19494c118c44a921cfa0019ebd945d172895a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/64b19494c118c44a921cfa0019ebd945d172895a", "committedDate": "2020-03-26T17:42:44Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "64b19494c118c44a921cfa0019ebd945d172895a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/64b19494c118c44a921cfa0019ebd945d172895a", "committedDate": "2020-03-26T17:42:44Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "a2f65eca1b7972d231aaca73106942c5107a380b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a2f65eca1b7972d231aaca73106942c5107a380b", "committedDate": "2020-03-26T19:54:57Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "a2f65eca1b7972d231aaca73106942c5107a380b", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a2f65eca1b7972d231aaca73106942c5107a380b", "committedDate": "2020-03-26T19:54:57Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "7f214d0beb8f471857432688ec1d85abe434465c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7f214d0beb8f471857432688ec1d85abe434465c", "committedDate": "2020-03-26T20:47:04Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "7f214d0beb8f471857432688ec1d85abe434465c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7f214d0beb8f471857432688ec1d85abe434465c", "committedDate": "2020-03-26T20:47:04Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "3324860fa78152ea760bd6992783c48e76e02506", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3324860fa78152ea760bd6992783c48e76e02506", "committedDate": "2020-03-26T20:47:53Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "3324860fa78152ea760bd6992783c48e76e02506", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3324860fa78152ea760bd6992783c48e76e02506", "committedDate": "2020-03-26T20:47:53Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "44bbae6e75e77b951bf3a7f91cfc3ebc8db01e33", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/44bbae6e75e77b951bf3a7f91cfc3ebc8db01e33", "committedDate": "2020-03-26T22:45:14Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "44bbae6e75e77b951bf3a7f91cfc3ebc8db01e33", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/44bbae6e75e77b951bf3a7f91cfc3ebc8db01e33", "committedDate": "2020-03-26T22:45:14Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}, "afterCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a547030f41fb0defd73384a9cc389dcc09cf9ca1", "committedDate": "2020-03-27T06:43:51Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzOTc3Mjcy", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-383977272", "createdAt": "2020-03-30T15:33:40Z", "commit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg1OTg4NDM1", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-385988435", "createdAt": "2020-04-01T22:17:44Z", "commit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjoxNzo0NFrOF_Uoyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQyMjo0ODozOFrOF_VXWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0MjczMA==", "bodyText": "All of these clears should be unnecessary.  The point of the EnvironmentVariables @Rule is that it clears them all automatically.  Is the rule broken somehow?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r401942730", "createdAt": "2020-04-01T22:17:44Z", "author": {"login": "randomanderson"}, "path": "dd-trace-api/src/test/groovy/datadog/trace/api/ConfigTest.groovy", "diffHunk": "@@ -1104,5 +1122,124 @@ class ConfigTest extends DDSpecification {\n     config.headerTags == [e: \"5\"]\n \n     config.mergedProfilingTags == [a: \"1\", f: \"6\", (HOST_TAG): config.getHostName(), (RUNTIME_ID_TAG): config.getRuntimeId(), (SERVICE_TAG): config.serviceName, (LANGUAGE_TAG_KEY): LANGUAGE_TAG_VALUE]\n+\n+    cleanup:\n+    environmentVariables.clear(DD_TAGS_ENV)\n+    environmentVariables.clear(DD_GLOBAL_TAGS_ENV)\n+    environmentVariables.clear(DD_SPAN_TAGS_ENV)\n+    environmentVariables.clear(DD_JMX_TAGS_ENV)\n+    environmentVariables.clear(DD_HEADER_TAGS_ENV)\n+    environmentVariables.clear(DD_PROFILING_TAGS_ENV)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk0NjU4Mw==", "bodyText": "Multicatch?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r401946583", "createdAt": "2020-04-01T22:27:00Z", "author": {"login": "randomanderson"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -991,10 +989,43 @@ private static String propertyNameToEnvironmentVariableName(final String setting\n    * @param setting The setting name, e.g. `service.name`\n    * @return The public facing system property name\n    */\n+  @NonNull\n   private static String propertyNameToSystemPropertyName(final String setting) {\n     return PREFIX + setting;\n   }\n \n+  /**\n+   * @param value to parse by tClass::valueOf\n+   * @param tClass should contain static parsing method \"T valueOf(String)\"\n+   * @param defaultValue\n+   * @param <T>\n+   * @return value == null || value.trim().isEmpty() ? defaultValue : tClass.valueOf(value)\n+   * @throws NumberFormatException\n+   */\n+  private static <T> T valueOf(final String value, final Class<T> tClass, final T defaultValue) {\n+    if (tClass == null || value == null || value.trim().isEmpty()) {\n+      log.debug(\"valueOf: using defaultValue '{}' for '{}' of '{}' \", defaultValue, value, tClass);\n+      return defaultValue;\n+    }\n+    try {\n+      return (T)\n+          MethodHandles.publicLookup()\n+              .findStatic(tClass, \"valueOf\", MethodType.methodType(tClass, String.class))\n+              .invoke(value);\n+    } catch (NumberFormatException e) {\n+      throw e;\n+    } catch (NoSuchMethodException e) {\n+      log.debug(\"Can't invoke 'valueOf': \", e);\n+      throw new NumberFormatException(e.toString());\n+    } catch (IllegalAccessException e) {\n+      log.debug(\"Can't access 'valueOf': \", e);\n+      throw new NumberFormatException(e.toString());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "originalPosition": 516}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1MzYyNQ==", "bodyText": "While I don't necessarily agree with removing the generic enum handling, I can't argue against it because we haven't needed another enum setting \ud83e\udd37\u200d\u2642\nHowever, with the change, the current method names of:\n\nconvertStringSetToEnumSet\ngetEnumSetSettingFromEnvironmentOrDefault\ngetPropertySetValue\n\nare confusing/inaccurate", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r401953625", "createdAt": "2020-04-01T22:45:35Z", "author": {"login": "randomanderson"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -1129,29 +1173,29 @@ private static Double getPropertyDoubleValue(\n     return Collections.unmodifiableList(Arrays.asList(tokens));\n   }\n \n-  private static Set<String> parseStringIntoSetOfNonEmptyStrings(\n-      final String str, final String regex) {\n+  @NonNull\n+  private static Set<String> parseStringIntoSetOfNonEmptyStrings(final String str) {\n     // Using LinkedHashSet to preserve original string order\n     final Set<String> result = new LinkedHashSet<>();\n     // Java returns single value when splitting an empty string. We do not need that value, so\n     // we need to throw it out.\n-    for (final String value : str.split(regex)) {\n+    for (final String value : str.split(SPLIT_BY_SPACE_OR_COMMA_REGEX)) {\n       if (!value.isEmpty()) {\n         result.add(value);\n       }\n     }\n     return Collections.unmodifiableSet(result);\n   }\n \n-  private static <V extends Enum<V>> Set<V> convertStringSetToEnumSet(\n-      final Set<String> input, final Class<V> clazz) {\n+  @NonNull\n+  private static Set<PropagationStyle> convertStringSetToEnumSet(final Set<String> input) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "originalPosition": 643}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTk1NDY1MQ==", "bodyText": "Under what circumstances does passing in a null tClass make sense?  This should probably be an error.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r401954651", "createdAt": "2020-04-01T22:48:38Z", "author": {"login": "randomanderson"}, "path": "dd-trace-api/src/test/groovy/datadog/trace/api/ConfigTest.groovy", "diffHunk": "@@ -1104,5 +1122,124 @@ class ConfigTest extends DDSpecification {\n     config.headerTags == [e: \"5\"]\n \n     config.mergedProfilingTags == [a: \"1\", f: \"6\", (HOST_TAG): config.getHostName(), (RUNTIME_ID_TAG): config.getRuntimeId(), (SERVICE_TAG): config.serviceName, (LANGUAGE_TAG_KEY): LANGUAGE_TAG_VALUE]\n+\n+    cleanup:\n+    environmentVariables.clear(DD_TAGS_ENV)\n+    environmentVariables.clear(DD_GLOBAL_TAGS_ENV)\n+    environmentVariables.clear(DD_SPAN_TAGS_ENV)\n+    environmentVariables.clear(DD_JMX_TAGS_ENV)\n+    environmentVariables.clear(DD_HEADER_TAGS_ENV)\n+    environmentVariables.clear(DD_PROFILING_TAGS_ENV)\n   }\n+\n+  def \"fallback to DD_TAGS\"() {\n+    setup:\n+    environmentVariables.set(DD_TAGS_ENV, \"a:1,b:2,c:3\")\n+\n+    when:\n+    Config config = new Config()\n+\n+    then:\n+    config.mergedSpanTags == [a: \"1\", c: \"3\", b: \"2\"]\n+\n+    cleanup:\n+    environmentVariables.clear(DD_TAGS_ENV)\n+  }\n+\n+  def \"precedence of DD_ENV and DD_VERSION\"() {\n+    setup:\n+    environmentVariables.set(DD_ENV_ENV, \"test_env\")\n+    environmentVariables.set(DD_VERSION_ENV, \"1.2.3\")\n+    environmentVariables.set(DD_TAGS_ENV, \"dd.env:production   ,    dd.version:3.2.1\")\n+\n+    when:\n+    Config config = new Config()\n+\n+    then:\n+    config.mergedSpanTags == [\"dd.env\": \"test_env\", \"dd.version\": \"1.2.3\"]\n+\n+    cleanup:\n+    environmentVariables.clear(DD_ENV_ENV, DD_VERSION_ENV, DD_TAGS_ENV)\n+  }\n+\n+  def \"propertyNameToEnvironmentVariableName unit test\"() {\n+    expect:\n+    Config.propertyNameToEnvironmentVariableName(Config.SERVICE) == \"DD_SERVICE\"\n+  }\n+\n+  def \"getProperty*Value unit test\"() {\n+    setup:\n+    def p = new Properties()\n+    p.setProperty(\"a\", \"42.42\")\n+    p.setProperty(\"intProp\", \"13\")\n+\n+    expect:\n+    Config.getPropertyDoubleValue(p, \"intProp\", 40) == 13\n+    Config.getPropertyDoubleValue(p, \"a\", 41) == 42.42\n+    Config.getPropertyIntegerValue(p, \"b\", 61) == 61\n+    Config.getPropertyIntegerValue(p, \"intProp\", 61) == 13\n+    Config.getPropertyBooleanValue(p, \"a\", true) == false\n+  }\n+\n+  def \"valueOf positive test\"() {\n+    expect:\n+    Config.valueOf(value, tClass, defaultValue) == expected\n+\n+    where:\n+    value      | tClass  | defaultValue | expected\n+    null       | null    | null         | null\n+    \"\"         | null    | null         | null\n+    \"      \"   | null    | null         | null\n+    \"1\"        | null    | null         | null", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg2NTUzMTUw", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-386553150", "createdAt": "2020-04-02T15:41:17Z", "commit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "state": "DISMISSED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0MToxN1rOF_xYwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMlQxNTo0MToxN1rOF_xYwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMjQxMzc2Mg==", "bodyText": "These are intentionally public and part of the public API...", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r402413762", "createdAt": "2020-04-02T15:41:17Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -45,99 +48,104 @@\n \n   private static final Pattern ENV_REPLACEMENT = Pattern.compile(\"[^a-zA-Z0-9_]\");\n \n-  public static final String CONFIGURATION_FILE = \"trace.config\";\n-  public static final String SERVICE_NAME = \"service.name\";\n-  public static final String TRACE_ENABLED = \"trace.enabled\";\n-  public static final String INTEGRATIONS_ENABLED = \"integrations.enabled\";\n-  public static final String WRITER_TYPE = \"writer.type\";\n-  public static final String AGENT_HOST = \"agent.host\";\n-  public static final String TRACE_AGENT_PORT = \"trace.agent.port\";\n-  public static final String AGENT_PORT_LEGACY = \"agent.port\";\n-  public static final String AGENT_UNIX_DOMAIN_SOCKET = \"trace.agent.unix.domain.socket\";\n-  public static final String PRIORITY_SAMPLING = \"priority.sampling\";\n-  public static final String TRACE_RESOLVER_ENABLED = \"trace.resolver.enabled\";\n-  public static final String SERVICE_MAPPING = \"service.mapping\";\n-\n-  public static final String TAGS = \"tags\";\n+  private static final String CONFIGURATION_FILE = \"trace.config\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a547030f41fb0defd73384a9cc389dcc09cf9ca1"}, "originalPosition": 35}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "2d67654b767fafad3fca183431e3fa67237383c2", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/2d67654b767fafad3fca183431e3fa67237383c2", "committedDate": "2020-04-02T23:47:38Z", "message": "Config.valueOf(\"\", null, \"\") with throw NPE"}, "afterCommit": {"oid": "926365b59131b7618f8a92bcf2c2b3a999883d23", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/926365b59131b7618f8a92bcf2c2b3a999883d23", "committedDate": "2020-04-03T16:55:53Z", "message": "mark unused public fields @Deprecated in Config.java"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "926365b59131b7618f8a92bcf2c2b3a999883d23", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/926365b59131b7618f8a92bcf2c2b3a999883d23", "committedDate": "2020-04-03T16:55:53Z", "message": "mark unused public fields @Deprecated in Config.java"}, "afterCommit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147", "committedDate": "2020-04-03T20:27:59Z", "message": "mark unused public fields @Deprecated in Config.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzM0NjAw", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-388334600", "createdAt": "2020-04-06T14:57:30Z", "commit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo1NzozMFrOGBb38w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo1NzozMFrOGBb38w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1ODQ1MQ==", "bodyText": "In the pase @Deprecated here was used to signal that given config parameter is deprecated and should not be used\nDeprecating everything breaks this - what's the new process?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r404158451", "createdAt": "2020-04-06T14:57:30Z", "author": {"login": "mar-kolya"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -48,101 +51,140 @@\n \n   private static final Pattern ENV_REPLACEMENT = Pattern.compile(\"[^a-zA-Z0-9_]\");\n \n-  public static final String CONFIGURATION_FILE = \"trace.config\";\n+  @Deprecated public static final String CONFIGURATION_FILE = \"trace.config\";\n   public static final String SITE = \"site\";\n-  public static final String SERVICE_NAME = \"service.name\";\n-  public static final String TRACE_ENABLED = \"trace.enabled\";\n-  public static final String INTEGRATIONS_ENABLED = \"integrations.enabled\";\n-  public static final String WRITER_TYPE = \"writer.type\";\n-  public static final String AGENT_HOST = \"agent.host\";\n-  public static final String TRACE_AGENT_PORT = \"trace.agent.port\";\n-  public static final String AGENT_PORT_LEGACY = \"agent.port\";\n+  @Deprecated public static final String SERVICE_NAME = \"service.name\";\n+  @Deprecated public static final String TRACE_ENABLED = \"trace.enabled\";\n+  @Deprecated public static final String INTEGRATIONS_ENABLED = \"integrations.enabled\";\n+  @Deprecated public static final String WRITER_TYPE = \"writer.type\";\n+  @Deprecated public static final String AGENT_HOST = \"agent.host\";\n+  @Deprecated public static final String TRACE_AGENT_PORT = \"trace.agent.port\";\n+  @Deprecated public static final String AGENT_PORT_LEGACY = \"agent.port\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147"}, "originalPosition": 37}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147", "committedDate": "2020-04-03T20:27:59Z", "message": "mark unused public fields @Deprecated in Config.java"}, "afterCommit": {"oid": "6e88ed3e42d3b6a5c421cbc5ed22711d4a17d45e", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6e88ed3e42d3b6a5c421cbc5ed22711d4a17d45e", "committedDate": "2020-04-06T22:42:37Z", "message": "mark unused public fields @Deprecated in Config.java"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4MzI1NDg1", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-388325485", "createdAt": "2020-04-06T14:48:28Z", "commit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNDo0ODoyOFrOGBbbrg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wN1QxNDo1NToyMFrOGCHlwQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDE1MTIxNA==", "bodyText": "Can you clarify the motivation for this change?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r404151214", "createdAt": "2020-04-06T14:48:28Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -496,8 +537,9 @@ private String profilingProxyPasswordMasker() {\n     log.debug(\"New instance: {}\", this);\n   }\n \n-  // Read order: Properties -> Parent\n-  private Config(final Properties properties, final Config parent) {\n+  // Read order: Properties -> Default INSTANCE\n+  private Config(final Properties properties) {\n+    final Config parent = INSTANCE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "097dc6f6f6eaefe0a8c876b5c1c50bc8dbcbc147"}, "originalPosition": 319}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDg3NDY4OQ==", "bodyText": "Instead of deleting, please update this to reference it:\nhttps://github.com/DataDog/dd-trace-java/blob/master/dd-trace-ot/src/main/java/datadog/trace/common/writer/ddagent/TraceProcessingDisruptor.java#L68", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r404874689", "createdAt": "2020-04-07T14:55:20Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-ot/src/main/java/datadog/opentracing/DDSpanContext.java", "diffHunk": "@@ -23,7 +23,6 @@\n @Slf4j\n public class DDSpanContext implements io.opentracing.SpanContext {\n   public static final String PRIORITY_SAMPLING_KEY = \"_sampling_priority_v1\";\n-  public static final String SAMPLE_RATE_KEY = \"_sample_rate\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6e88ed3e42d3b6a5c421cbc5ed22711d4a17d45e"}, "originalPosition": 4}]}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "6d608c6e904114d6f27b8fb21f6a288075ea8ff9", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6d608c6e904114d6f27b8fb21f6a288075ea8ff9", "committedDate": "2020-04-08T22:03:28Z", "message": "keep unused public fields untouched"}, "afterCommit": {"oid": "221ebca4feb908a80c93e16a26a343c5da880417", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/221ebca4feb908a80c93e16a26a343c5da880417", "committedDate": "2020-04-08T22:30:59Z", "message": "keep unused public fields untouched"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "221ebca4feb908a80c93e16a26a343c5da880417", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/221ebca4feb908a80c93e16a26a343c5da880417", "committedDate": "2020-04-08T22:30:59Z", "message": "keep unused public fields untouched"}, "afterCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81777f393c7deb7581e24f6f0be547ff399ad56d", "committedDate": "2020-04-08T22:32:00Z", "message": "keep unused public fields untouched"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTA3OTE5", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391507919", "createdAt": "2020-04-10T15:37:20Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTozNzoyMFrOGD94mw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTozNzoyMFrOGD94mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxMjgyNw==", "bodyText": "I take this went along the Config constructor change.\nI suggest we don't make that change, but I think if we're going to do that change this needs to change more.\nBut I think the relation of the existingConfig to the new Config was more clear previously when the parent was explicitly specified.  While I know that we don't use the full flexibility, I view this as similar to ClassLoader which takes a parent ClassLoader -- so following ClassLoader's design makes sense to me.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406812827", "createdAt": "2020-04-10T15:37:20Z", "author": {"login": "dougqh"}, "path": "dd-java-agent/testing/src/main/groovy/datadog/trace/agent/test/utils/ConfigUtils.groovy", "diffHunk": "@@ -22,7 +22,7 @@ class ConfigUtils {\n     def existingConfig = Config.get()\n     Properties properties = new Properties()\n     properties.put(name, value)\n-    CONFIG_INSTANCE_FIELD.set(null, new Config(properties, existingConfig))\n+    CONFIG_INSTANCE_FIELD.set(null, new Config(properties))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 5}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTA5NjI5", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391509629", "createdAt": "2020-04-10T15:40:38Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MDozOFrOGD9-dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0MDozOFrOGD9-dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNDMyNw==", "bodyText": "Looks like we've largely settled on keeping the public fields, I think that's the right choice for now.\nGiven that, I think I fold SERVICE and SERVICE_TAG together again.\nI'm going to draw up a plan for how we might start to deprecate Config, but for now, I think we should keep the changes modest.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406814327", "createdAt": "2020-04-10T15:40:38Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -139,7 +143,8 @@\n   public static final String PROFILING_PROXY_PASSWORD = \"profiling.proxy.password\";\n \n   public static final String RUNTIME_ID_TAG = \"runtime-id\";\n-  public static final String SERVICE_TAG = \"service\";\n+  private static final String SERVICE = \"service\";\n+  public static final String SERVICE_TAG = SERVICE;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 38}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTEwNzI3", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391510727", "createdAt": "2020-04-10T15:42:48Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mjo0OFrOGD-B2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo0Mjo0OFrOGD-B2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgxNTE5NQ==", "bodyText": "The one bit I'd caution against here is that we probably want to avoid creating synthetic accessors as well, so sometimes, I err on the side of making things package visible.\nNot that synthetic accessors are terribly expensive in either time or space, but I'd rather not add to overhead if we can easily avoid it.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406815195", "createdAt": "2020-04-10T15:42:48Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -318,8 +323,8 @@ private String profilingProxyPasswordMasker() {\n   private static Properties propertiesFromConfigFile;\n \n   // Read order: System Properties -> Env Variables, [-> properties file], [-> default value]\n-  // Visible for testing\n-  Config() {\n+  // Visible for testing: groovy tests can access private ctor perfectly fine\n+  private Config() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 49}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTE2ODU5", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391516859", "createdAt": "2020-04-10T15:54:39Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NDozOVrOGD-WAQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NDozOVrOGD-WAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMDM1Mw==", "bodyText": "ASIDE: I actually feel that the better opportunity to clean-up Config lies in these various static helpers.\nRight now, we sprinkle propertyNameToSystemPropertyName, etc around the code, but I think that could be encapsulated.  If we made a Config.Lookup helper class, then we could have a few variations...\nPropertiesLookup, EnvLookup -- those could handle applying the appropriate name transformation.\nAdditionally, we could have a CompositeLookup that handles look first at Env then Properties then Parent.\nThat said, I don't want to do that as part of this PR for a couple reasons.\n1 - I'd like to separate bigger refactorings / non-functional changes from functional changes.\nIt looks like we separated the commits (which is good), but at certain size, I think we should separate the PRs as well.  Admittedly, we need to all be better about doing such a separation -- and this PR isn't quite so big that I find it problematic, but I think Config needs a more serious overall and that should be done by itself.\n2 - Kind of the same point as above, but I'd like to get the functional change released sooner rather than later.  And right now, we're debating largely non-functional pieces, I don't want to add to that the problem by changing Config enen more.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406820353", "createdAt": "2020-04-10T15:54:39Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -910,7 +917,7 @@ private static String getSettingFromEnvironment(final String name, final String\n     }\n \n     // If value is not defined yet, we look at properties optionally defined in a properties file\n-    value = propertiesFromConfigFile.getProperty(propertyNameToSystemPropertyName(name));\n+    value = propertiesFromConfigFile.getProperty(systemPropertyName);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 153}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTE3MTE5", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391517119", "createdAt": "2020-04-10T15:55:12Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NToxMlrOGD-W-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NToxMlrOGD-W-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMDYwMA==", "bodyText": "I like the additions of @nonnull.  I wouldn't mind us doing more of that.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406820600", "createdAt": "2020-04-10T15:55:12Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -931,7 +939,8 @@ private static String getSettingFromEnvironment(final String name, final String\n    *\n    * @deprecated This method should only be used internally. Use the explicit getter instead.\n    */\n-  public static List<String> getListSettingFromEnvironment(\n+  @NonNull", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 170}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTE4MDY0", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391518064", "createdAt": "2020-04-10T15:57:07Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NzowOFrOGD-aFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNTo1NzowOFrOGD-aFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjgyMTM5Nw==", "bodyText": "I appreciate the addition of static.  I'd like us to be more careful about making helpers static when appropriate.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406821397", "createdAt": "2020-04-10T15:57:08Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -996,28 +997,22 @@ private static Integer getIntegerSettingFromEnvironment(\n    * Calls {@link #getSettingFromEnvironment(String, String)} and converts the result to a set of\n    * strings splitting by space or comma.\n    */\n-  private static <T extends Enum<T>> Set<T> getEnumSetSettingFromEnvironment(\n-      final String name,\n-      final String defaultValue,\n-      final Class<T> clazz,\n-      final boolean emptyResultMeansUseDefault) {\n+  private static Set<PropagationStyle> getPropagationStyleSetSettingFromEnvironmentOrDefault(\n+      final String name, final String defaultValue) {\n     final String value = getSettingFromEnvironment(name, defaultValue);\n-    Set<T> result =\n-        convertStringSetToEnumSet(\n-            parseStringIntoSetOfNonEmptyStrings(value, SPLIT_BY_SPACE_OR_COMMA_REGEX), clazz);\n+    Set<PropagationStyle> result =\n+        convertStringSetToPropagationStyleSet(parseStringIntoSetOfNonEmptyStrings(value));\n \n-    if (emptyResultMeansUseDefault && result.isEmpty()) {\n+    if (result.isEmpty()) {\n       // Treat empty parsing result as no value and use default instead\n       result =\n-          convertStringSetToEnumSet(\n-              parseStringIntoSetOfNonEmptyStrings(defaultValue, SPLIT_BY_SPACE_OR_COMMA_REGEX),\n-              clazz);\n+          convertStringSetToPropagationStyleSet(parseStringIntoSetOfNonEmptyStrings(defaultValue));\n     }\n \n     return result;\n   }\n \n-  private Set<Integer> getIntegerRangeSettingFromEnvironment(\n+  private static Set<Integer> getIntegerRangeSettingFromEnvironment(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 267}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ffdaefb39a2c9d8a0769c46ad659fb139ba02d7c", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ffdaefb39a2c9d8a0769c46ad659fb139ba02d7c", "committedDate": "2020-04-10T16:39:22Z", "message": "DD_SERVICE; DD_ENV; DD_VERSION env vars support"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bcc745f28f53d8c6b0f7868e07516d2a829d822a", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/bcc745f28f53d8c6b0f7868e07516d2a829d822a", "committedDate": "2020-04-10T16:39:22Z", "message": "Config.valueOf(\"\", null, \"\") with throw NPE"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21d5d038887d6d0f2984c6401c9072406f9850c0", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/21d5d038887d6d0f2984c6401c9072406f9850c0", "committedDate": "2020-04-10T16:39:22Z", "message": "mark unused public fields @Deprecated in Config.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6911c0a1dc11a028d3b73813d6c121136918abd3", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/6911c0a1dc11a028d3b73813d6c121136918abd3", "committedDate": "2020-04-10T16:39:22Z", "message": "keep unused public fields untouched"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTQzNDQ2", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391543446", "createdAt": "2020-04-10T16:48:12Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0ODoxM1rOGD_ttA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo0ODoxM1rOGD_ttA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0MjgwNA==", "bodyText": "Isn't this more or less functionally equivalent to enumSet support that came before?  Just not public?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406842804", "createdAt": "2020-04-10T16:48:13Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -1048,10 +1044,41 @@ private static String propertyNameToEnvironmentVariableName(final String setting\n    * @param setting The setting name, e.g. `service.name`\n    * @return The public facing system property name\n    */\n+  @NonNull\n   private static String propertyNameToSystemPropertyName(final String setting) {\n     return PREFIX + setting;\n   }\n \n+  /**\n+   * @param value to parse by tClass::valueOf\n+   * @param tClass should contain static parsing method \"T valueOf(String)\"\n+   * @param defaultValue\n+   * @param <T>\n+   * @return value == null || value.trim().isEmpty() ? defaultValue : tClass.valueOf(value)\n+   * @throws NumberFormatException\n+   */\n+  private static <T> T valueOf(\n+      final String value, @NonNull final Class<T> tClass, final T defaultValue) {\n+    if (value == null || value.trim().isEmpty()) {\n+      log.debug(\"valueOf: using defaultValue '{}' for '{}' of '{}' \", defaultValue, value, tClass);\n+      return defaultValue;\n+    }\n+    try {\n+      return (T)\n+          MethodHandles.publicLookup()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "originalPosition": 304}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/12b5b0ab08770f4092fc78521146867b1338d605", "committedDate": "2020-04-10T16:50:34Z", "message": "retrun 2arg Config ctor"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/81777f393c7deb7581e24f6f0be547ff399ad56d", "committedDate": "2020-04-08T22:32:00Z", "message": "keep unused public fields untouched"}, "afterCommit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605", "author": {"user": {"login": "lpriima", "name": "Lev"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/12b5b0ab08770f4092fc78521146867b1338d605", "committedDate": "2020-04-10T16:50:34Z", "message": "retrun 2arg Config ctor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTQ1NDk2", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391545496", "createdAt": "2020-04-10T16:52:17Z", "commit": {"oid": "81777f393c7deb7581e24f6f0be547ff399ad56d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo1ODozMVrOGD__UA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxNjo1ODozMVrOGD__UA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg0NzMxMg==", "bodyText": "I like the try with resources here.  Although, I'm little uncertain about moving the Process inline.\nIt also looks we're not handling the exit code of the Process, but that's not new.", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406847312", "createdAt": "2020-04-10T16:58:31Z", "author": {"login": "dougqh"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -1275,12 +1314,11 @@ private String getHostName() {\n     }\n \n     // Try hostname command\n-    try {\n-      final Process process = Runtime.getRuntime().exec(\"hostname\");\n-      final BufferedReader reader =\n-          new BufferedReader(new InputStreamReader(process.getInputStream()));\n+    try (final BufferedReader reader =", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605"}, "originalPosition": 459}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTYyNjE1", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391562615", "createdAt": "2020-04-10T17:27:05Z", "commit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTcyMDgz", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391572083", "createdAt": "2020-04-10T17:45:36Z", "commit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNTg0NjMy", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#pullrequestreview-391584632", "createdAt": "2020-04-10T18:11:35Z", "commit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODoxMTozNVrOGEB14g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQxODoxMTozNVrOGEB14g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjg3NzY2Ng==", "bodyText": "from here it looks like the old SERVICE_NAME will take precedence over the new SERVICE, is that the intention?", "url": "https://github.com/DataDog/dd-trace-java/pull/1341#discussion_r406877666", "createdAt": "2020-04-10T18:11:35Z", "author": {"login": "tylerbenson"}, "path": "dd-trace-api/src/main/java/datadog/trace/api/Config.java", "diffHunk": "@@ -338,7 +343,9 @@ private String profilingProxyPasswordMasker() {\n       }\n     }\n     site = getSettingFromEnvironment(SITE, DEFAULT_SITE);\n-    serviceName = getSettingFromEnvironment(SERVICE_NAME, DEFAULT_SERVICE_NAME);\n+    serviceName =\n+        getSettingFromEnvironment(\n+            SERVICE_NAME, getSettingFromEnvironment(SERVICE, DEFAULT_SERVICE_NAME));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "12b5b0ab08770f4092fc78521146867b1338d605"}, "originalPosition": 49}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2607, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}