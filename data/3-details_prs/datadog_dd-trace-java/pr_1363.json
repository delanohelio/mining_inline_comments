{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyNjU3NTM3", "number": 1363, "title": "exception sampler changes", "bodyText": "", "createdAt": "2020-04-13T14:00:10Z", "url": "https://github.com/DataDog/dd-trace-java/pull/1363", "merged": true, "mergeCommit": {"oid": "1d67989280a267cbd6b9672ff2acb9174e9c2ad1"}, "closed": true, "closedAt": "2020-04-14T11:47:33Z", "author": {"login": "mar-kolya"}, "timelineItems": {"totalCount": 22, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXPWSyAH2gAyNDAyNjU3NTM3OmVkMjVjOThhYjM3YzRjMTc2ZjgxNDgzOTg2ZmFjNDU3NTZjZWJjZTM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcXiBSRgFqTM5Mjg0NzY5Mw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "ed25c98ab37c4c176f81483986fac45756cebce3", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/ed25c98ab37c4c176f81483986fac45756cebce3", "committedDate": "2020-04-13T13:59:16Z", "message": "Simplify code a bit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3fd1fa9d82de06b4a7add2ddf8defb7ed424a845", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3fd1fa9d82de06b4a7add2ddf8defb7ed424a845", "committedDate": "2020-04-13T13:59:27Z", "message": "Make gradle happy"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b39b37db7e3d27de23f725c7751e06c7b5089273", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b39b37db7e3d27de23f725c7751e06c7b5089273", "committedDate": "2020-04-13T14:06:56Z", "message": "Load our event classe to make sure they are loading fine\n\nTo avoid accidentally breaking customer code by instrumentation."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "873ca2209ec1f3352a95562890c7bcf976bb78c9", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/873ca2209ec1f3352a95562890c7bcf976bb78c9", "committedDate": "2020-04-13T14:50:27Z", "message": "Revert change to load our exception event class\n\nWe cannot do this because it is not visible on apps classloader after\ninstrumentation has been applied."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/556e96e1e5c649d2a854e89eb84e951de4750eae", "committedDate": "2020-04-13T14:50:34Z", "message": "Add exception cause information to exception event"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dc689f037c7644db5aaf21eaec1b324c2be2aa34", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/dc689f037c7644db5aaf21eaec1b324c2be2aa34", "committedDate": "2020-04-13T16:52:28Z", "message": "Remove array based EMA calculations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "62765c9d0b9b1b7602f440176819246df8402fae", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/62765c9d0b9b1b7602f440176819246df8402fae", "committedDate": "2020-04-13T17:09:46Z", "message": "Minor tests cleanup"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c927438b79f3159dad9a92d074977c90506914e5", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/c927438b79f3159dad9a92d074977c90506914e5", "committedDate": "2020-04-13T17:46:43Z", "message": "Define mockito dependency"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3889014026f62fdf4a1dde6f5ffe87c239f164e0", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/3889014026f62fdf4a1dde6f5ffe87c239f164e0", "committedDate": "2020-04-13T18:38:12Z", "message": "Inject common executor into ExceptionSampler\n\nOriginal implementation had bugs in it which were not covered with tests."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0dc63c7e382b033636e6ed336ea2997e9b80149f", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0dc63c7e382b033636e6ed336ea2997e9b80149f", "committedDate": "2020-04-13T18:43:47Z", "message": "Simnplify sampler tests\n\nRunning multiple threads blocked on phaser should have exactly the\nsame effect as just starting new threads on each iteration - which is simpler."}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7438b588f79dac662e9be75a382d063f0ff10acd", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/7438b588f79dac662e9be75a382d063f0ff10acd", "committedDate": "2020-04-13T18:47:24Z", "message": "Use sfl4j"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b560c7a39574aa65fbb5b9b51aaa491994d21776", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/b560c7a39574aa65fbb5b9b51aaa491994d21776", "committedDate": "2020-04-13T23:31:23Z", "message": "Merge branch 'jb/PROF-581_exceptions_sampler' into mar-kolya/exception-sampler-changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb1c15bf2302b7b84235c4b2481978e7878dfdad", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/cb1c15bf2302b7b84235c4b2481978e7878dfdad", "committedDate": "2020-04-14T01:05:56Z", "message": "Use new safe periodic tasks"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "70e95509da0af83656d507e36dea6e6136902c72", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/70e95509da0af83656d507e36dea6e6136902c72", "committedDate": "2020-04-13T23:41:13Z", "message": "Use new safe periodic tasks"}, "afterCommit": {"oid": "9f401865918f86b9dc57e66d21cc19f17373a691", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9f401865918f86b9dc57e66d21cc19f17373a691", "committedDate": "2020-04-14T01:08:51Z", "message": "Make gradle happy temporarily\n\nAdd temporary fix to gradle to make things compile.\nWill have to open another PR to make things beautiful."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyNTQxMzky", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#pullrequestreview-392541392", "createdAt": "2020-04-14T01:20:54Z", "commit": {"oid": "9f401865918f86b9dc57e66d21cc19f17373a691"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMToyMDo1NVrOGE6wOA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwMToyMDo1NVrOGE6wOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzgxMDEwNA==", "bodyText": "Note: we would have to resolve this somehow before main PR lands, but I think this PR can be merged regardless - the same problem already existed in main PR, we just didn't see it due to other failures", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407810104", "createdAt": "2020-04-14T01:20:55Z", "author": {"login": "mar-kolya"}, "path": "dd-trace-api/dd-trace-api.gradle", "diffHunk": "@@ -15,5 +15,10 @@ excludedClassesCoverage += [\n description = 'dd-trace-api'\n dependencies {\n   compile deps.slf4j\n+\n+  // FIXME: this essentially makes thread-utils part of our 'public api'\n+  // - we should move/rename things around to make this less prone to accidental public use since this is a utility class\n+  compile project(':utils:thread-utils')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9f401865918f86b9dc57e66d21cc19f17373a691"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "47a3241988dd541e3803387a87c8ce49e448711f", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/47a3241988dd541e3803387a87c8ce49e448711f", "committedDate": "2020-04-14T01:27:05Z", "message": "Make gradle happy temporarily\n\nAdd temporary fix to gradle to make things compile.\nWill have to open another PR to make things beautiful."}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "9f401865918f86b9dc57e66d21cc19f17373a691", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/9f401865918f86b9dc57e66d21cc19f17373a691", "committedDate": "2020-04-14T01:08:51Z", "message": "Make gradle happy temporarily\n\nAdd temporary fix to gradle to make things compile.\nWill have to open another PR to make things beautiful."}, "afterCommit": {"oid": "47a3241988dd541e3803387a87c8ce49e448711f", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/47a3241988dd541e3803387a87c8ce49e448711f", "committedDate": "2020-04-14T01:27:05Z", "message": "Make gradle happy temporarily\n\nAdd temporary fix to gradle to make things compile.\nWill have to open another PR to make things beautiful."}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyMjQyNTkx", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#pullrequestreview-392242591", "createdAt": "2020-04-13T16:04:57Z", "commit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae"}, "state": "COMMENTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xM1QxNjowNDo1N1rOGErYdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQwODo1NjoxNVrOGFEzQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1ODI2MQ==", "bodyText": "This tends to screw up the bytecode level - when you check the compiled classes in non-java11 folder you will see that they get compiled to Java 8 level bytecode (version 52.0). At least this happens when I build it locally.", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407558261", "createdAt": "2020-04-13T16:04:57Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/exception-profiling.gradle", "diffHunk": "@@ -24,6 +24,8 @@ targetCompatibility = JavaVersion.VERSION_1_7\n \n // Must use Java 11 to build JFR enabled code - there is no JFR in OpenJDK 8 (revisit once JFR in Java 8 is available)\n [compileMain_java11Java, compileTestJava].each {\n+  sourceCompatibility = JavaVersion.VERSION_1_8\n+  targetCompatibility = JavaVersion.VERSION_1_8", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1ODQyOQ==", "bodyText": "Nit: This is unnecessary. Since Java 8 the effectively immutable variables are treated as such without the necessity of declaring them final. But I guess this is done by the auto-formatter plugin ...", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407558429", "createdAt": "2020-04-13T16:05:16Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/com/datadog/profiling/exceptions/ExceptionProfiling.java", "diffHunk": "@@ -36,7 +35,7 @@ public ExceptionSampleEvent process(final Exception e) {\n     // always record the exception in histogram\n     final boolean firstHit = histogram.record(e);\n \n-    boolean sampled = sampler.sample();\n+    final boolean sampled = sampler.sample();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU1ODgyOA==", "bodyText": "Did the auto-formatter do this as well? It is not really conventional to have one-liner javadoc.", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407558828", "createdAt": "2020-04-13T16:05:59Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/com/datadog/profiling/exceptions/ExceptionSampleEvent.java", "diffHunk": "@@ -17,28 +17,42 @@\n   @Label(\"Exception message\")\n   private final String message;\n \n-  /**\n-   * JFR may truncate the stack trace - so store original length as well.\n-   */\n+  /** JFR may truncate the stack trace - so store original length as well. */", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzU2MjY0Mw==", "bodyText": "I am not really convinced this should be here. There can be a chain of causes - why are we capturing just the first one? There are certainly situations when only 3rd+ cause starts to be really interesting. If we want to capture all the causes down to the root we would need to somehow fit them into one string, which could become quite long :/\nIMO, we should think about all the consequences before we commit to providing this info.", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407562643", "createdAt": "2020-04-13T16:13:05Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/com/datadog/profiling/exceptions/ExceptionSampleEvent.java", "diffHunk": "@@ -17,28 +17,42 @@\n   @Label(\"Exception message\")\n   private final String message;\n \n-  /**\n-   * JFR may truncate the stack trace - so store original length as well.\n-   */\n+  /** JFR may truncate the stack trace - so store original length as well. */\n   @Label(\"Exception stackdepth\")\n   private final int stackDepth;\n \n+  @Label(\"Cause type\")\n+  private final String causeType;\n+\n+  @Label(\"Cause message\")\n+  private final String causeMessage;\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "556e96e1e5c649d2a854e89eb84e951de4750eae"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk2OTE3Mg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n             * for compensate for too rapid changes in the incoming events rate and maintain the target average\n          \n          \n            \n             * to compensate for too rapid changes in the incoming events rate and maintain the target average", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407969172", "createdAt": "2020-04-14T08:47:46Z", "author": {"login": "jbachorik"}, "path": "dd-java-agent/instrumentation/exception-profiling/src/main/java11/com/datadog/profiling/exceptions/StreamingSampler.java", "diffHunk": "@@ -16,40 +13,31 @@\n  * A streaming (non-remembering) sampler.\n  *\n  * <p>The sampler attempts to generate at most N samples per fixed time window in randomized\n- * fashion. For this it divides the timeline into 'profiling windows' of constant length/duration.\n- * Each profiling window targets a constant number of samples which are scattered randomly (uniform distribution)\n- * throughout the window duration and once the window is over the real stats of incoming events and the number of\n- * gathered samples is used to recompute the target probability to use in the following window.\n- * </p>\n- * <p>\n- * This will guarantee, if the windows are not excessively large, that the sampler will be able to adjust\n- * to the changes in the rate of incoming events.\n- * </p>\n- * <p>\n- * However, there might so rapid changes in incoming events rate that we will optimistically use all allowed samples\n- * well before the current window has elapsed or, on the other end of the spectrum, there will be to few incoming events\n- * and the sampler will not be able to generate the target number of samples.\n- * </p>\n- * <p>\n- * To smooth out these hicups the sampler maintains an under/over-sampling budget which can be used for compensate\n- * for too rapid changes in the incoming events rate and maintain the target average number of samples per window.\n- * </p>\n+ * fashion. For this it divides the timeline into 'sampling windows' of constant duration. Each\n+ * sampling window targets a constant number of samples which are scattered randomly (uniform\n+ * distribution) throughout the window duration and once the window is over the real stats of\n+ * incoming events and the number of gathered samples is used to recompute the target probability to\n+ * use in the following window.\n+ *\n+ * <p>This will guarantee, if the windows are not excessively large, that the sampler will be able\n+ * to adjust to the changes in the rate of incoming events.\n+ *\n+ * <p>However, there might so rapid changes in incoming events rate that we will optimistically use\n+ * all allowed samples well before the current window has elapsed or, on the other end of the\n+ * spectrum, there will be to few incoming events and the sampler will not be able to generate the\n+ * target number of samples.\n+ *\n+ * <p>To smooth out these hicups the sampler maintains an under-sampling budget which can be used\n+ * for compensate for too rapid changes in the incoming events rate and maintain the target average", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a3241988dd541e3803387a87c8ce49e448711f"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3MzE2MA==", "bodyText": "Ok, is it just me or this reformatting stuff of code which is not affected by any other changes looks crazy?", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407973160", "createdAt": "2020-04-14T08:54:00Z", "author": {"login": "jbachorik"}, "path": "gradle/dependencies.gradle", "diffHunk": "@@ -3,24 +3,26 @@ def spockGroovyVer = groovyVer.replaceAll(/\\.\\d+$/, '')\n \n ext {\n   versions = [\n-    opentracing: '0.32.0',\n+    opentracing   : '0.32.0',\n \n-    slf4j      : \"1.7.29\",\n-    guava      : \"20.0\", // Last version to support Java 7\n-    okhttp     : \"3.12.8\", // 3.12.x is last version to support Java7)\n+    slf4j         : \"1.7.29\",\n+    guava         : \"20.0\", // Last version to support Java 7\n+    okhttp        : \"3.12.8\", // 3.12.x is last version to support Java7)\n \n-    spock      : \"1.3-groovy-$spockGroovyVer\",\n-    groovy     : groovyVer,\n-    junit5     : \"5.5.2\",\n-    logback    : \"1.2.3\",\n-    lombok     : \"1.18.10\",\n-    bytebuddy  : \"1.10.6\",\n-    scala      : \"2.11.12\",  // Last version to support Java 7 (2.12+ require Java 8+)\n-    kotlin     : \"1.3.61\",\n-    coroutines : \"1.3.0\",\n-    commons    : \"3.2\",\n+    spock         : \"1.3-groovy-$spockGroovyVer\",\n+    groovy        : groovyVer,\n+    junit5        : \"5.5.2\",\n+    logback       : \"1.2.3\",\n+    lombok        : \"1.18.10\",\n+    bytebuddy     : \"1.10.6\",\n+    scala         : \"2.11.12\",  // Last version to support Java 7 (2.12+ require Java 8+)\n+    kotlin        : \"1.3.61\",\n+    coroutines    : \"1.3.0\",\n+    commons       : \"3.2\",\n+    mockito       : '3.3.3',\n+    testcontainers: '1.12.2',\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a3241988dd541e3803387a87c8ce49e448711f"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNzk3NDcyMg==", "bodyText": "Why does this dependency needs to be moved here from dd-trace-ot?  Also, I do not think the exception sampler PR should fix this issue since it is not introduced here. Let's try to separate the feature development from general cleanup tasks.", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#discussion_r407974722", "createdAt": "2020-04-14T08:56:15Z", "author": {"login": "jbachorik"}, "path": "dd-trace-api/dd-trace-api.gradle", "diffHunk": "@@ -15,5 +15,10 @@ excludedClassesCoverage += [\n description = 'dd-trace-api'\n dependencies {\n   compile deps.slf4j\n+\n+  // FIXME: this essentially makes thread-utils part of our 'public api'\n+  // - we should move/rename things around to make this less prone to accidental public use since this is a utility class\n+  compile project(':utils:thread-utils')", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "47a3241988dd541e3803387a87c8ce49e448711f"}, "originalPosition": 7}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0bc73d5452a8293d54958ff8dd46e319d0511a1e", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/0bc73d5452a8293d54958ff8dd46e319d0511a1e", "committedDate": "2020-04-14T11:14:01Z", "message": "javadoc fix\n\nCo-Authored-By: Jaroslav Bachorik <jaroslav.bachorik@datadoghq.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1068a7e2a5810f0e822537c37d85c0cba490a54c", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/1068a7e2a5810f0e822537c37d85c0cba490a54c", "committedDate": "2020-04-14T11:42:01Z", "message": "Add sourceset for java11\n\nwithout it changing java version affects whole project"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a72093e2367f4b0e18a87213b815ab33e896f858", "author": {"user": {"login": "mar-kolya", "name": "Nikolay Martynov"}}, "url": "https://github.com/DataDog/dd-trace-java/commit/a72093e2367f4b0e18a87213b815ab33e896f858", "committedDate": "2020-04-14T11:42:01Z", "message": "Remove exception cause\n\nwe will have to think more about this"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkyODQ3Njkz", "url": "https://github.com/DataDog/dd-trace-java/pull/1363#pullrequestreview-392847693", "createdAt": "2020-04-14T11:44:31Z", "commit": {"oid": "a72093e2367f4b0e18a87213b815ab33e896f858"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 2645, "cost": 1, "resetAt": "2021-11-01T13:51:04Z"}}}