{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzU2MzY1", "number": 1260, "title": "SAMZA-2446: Invoke onCheckpoint only for registered SSPs", "bodyText": "Symptom: Since introducing changelog SSP checkpointing in 1.3, onCheckpoint will be invoked for changelog SSPs if job.changelog.system is configured to be the same as an input system which implements CheckpointListener. This can be problematic because the types of checkpoints being written for changelog SSPs and input SSPs are different.\nCause: OffsetManager.writeCheckpoint is called with a Checkpoint parameter that includes changelog SSP checkpoints.\nChanges: OffsetManager will now only invoke onCheckpoint for SSPs that are registered with it.\nTests: Wrote a test which attempts to write a Checkpoint with OffsetManager.writeCheckpoint which includes an SSP which was not registered with the OffsetManager. The test verifies that the callback is invoked only for those SSPs that were registered via OffsetManager.register. This test fails without the patch and passes with it.\nAPI Changes: None\nUpgrade Instructions: None\nUsage Instructions: None", "createdAt": "2020-01-27T23:31:23Z", "url": "https://github.com/apache/samza/pull/1260", "merged": true, "mergeCommit": {"oid": "5ece27c51a6c2791c02a5ce13d7233168efbacc1"}, "closed": true, "closedAt": "2020-01-28T23:44:00Z", "author": {"login": "bkonold"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-lVsagH2gAyMzY3NzU2MzY1OjU0YTViMGNkZTE2ZmU2NmU1NjA5NmQ3ZjI3M2JkY2ZlNDExMDA2MDU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb-n1dBgH2gAyMzY3NzU2MzY1OjJhOGFhYzJmYTMxYjhmZjBiOTk2ZjQ2YmYwYzlkN2EzYzdlYTk2Mzg=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/54a5b0cde16fe66e56096d7f273bdcfe41100605", "committedDate": "2020-01-27T23:28:25Z", "message": "OffsetManager should only invoke checkpointListener for SSPs that are registered with it"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDgxNDMz", "url": "https://github.com/apache/samza/pull/1260#pullrequestreview-349081433", "createdAt": "2020-01-28T01:15:46Z", "commit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNTo0NlrOFiWv9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNTo0NlrOFiWv9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODYyOA==", "bodyText": "Minor: Can we do the following?\nval registeredSSPs = systemStreamPartitions.getOrElse(taskName, Set())", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568628", "createdAt": "2020-01-28T01:15:46Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager\n+      val registeredSSPs = systemStreamPartitions.getOrElse(taskName, immutable.Set[SystemStreamPartition]())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDgxNTM5", "url": "https://github.com/apache/samza/pull/1260#pullrequestreview-349081539", "createdAt": "2020-01-28T01:16:12Z", "commit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNjoxMlrOFiWwSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNjoxMlrOFiWwSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODcxNQ==", "bodyText": "Let's add a comment explaining when this will not be the case.", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568715", "createdAt": "2020-01-28T01:16:12Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 9}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDgxNjM0", "url": "https://github.com/apache/samza/pull/1260#pullrequestreview-349081634", "createdAt": "2020-01-28T01:16:31Z", "commit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a8aac2fa31b8ff0b996f46bf0c9d7a3c7ea9638", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/2a8aac2fa31b8ff0b996f46bf0c9d7a3c7ea9638", "committedDate": "2020-01-28T02:22:55Z", "message": "Add comment detailing when a Checkpoint would contain an SSP not regsitered with OffsetManager"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4762, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}