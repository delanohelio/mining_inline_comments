{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2Njg1MTQx", "number": 1413, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNTozN1rOEZHBUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo0Njo1NVrOEZLklw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzY0ODgwOnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNTozN1rOHBvIyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMToyOTowN1rOHCsJnw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjkyMA==", "bodyText": "nit: group final fields together.", "url": "https://github.com/apache/samza/pull/1413#discussion_r471582920", "createdAt": "2020-08-17T16:05:37Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NTAyNw==", "bodyText": "So remove line 38? I separated because of private vs protected.", "url": "https://github.com/apache/samza/pull/1413#discussion_r472575027", "createdAt": "2020-08-19T01:01:11Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjkyMA=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4MTUyOA==", "bodyText": "sure! then add a new line between private final & private fields?", "url": "https://github.com/apache/samza/pull/1413#discussion_r472581528", "createdAt": "2020-08-19T01:25:17Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjkyMA=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU4MjU1OQ==", "bodyText": "sure. will do that.", "url": "https://github.com/apache/samza/pull/1413#discussion_r472582559", "createdAt": "2020-08-19T01:29:07Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjkyMA=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzY1MzU2OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNjo1NlrOHBvL3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTowNjoyMFrOHCrxVw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MzcxMQ==", "bodyText": "s/changelog/input|topic", "url": "https://github.com/apache/samza/pull/1413#discussion_r471583711", "createdAt": "2020-08-17T16:06:56Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NjM0Mw==", "bodyText": "I'll just remove the word altogether since I link to SSP definition", "url": "https://github.com/apache/samza/pull/1413#discussion_r472576343", "createdAt": "2020-08-19T01:06:20Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MzcxMQ=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzY1OTA1OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowODoxMVrOHBvPOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTowMDowMVrOHCrq1Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NDU3MQ==", "bodyText": "looks like it only allows feeding one SSP. why do we need a set?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471584571", "createdAt": "2020-08-17T16:08:11Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NDY3Nw==", "bodyText": "Good point. I just pulled this out of ChangelogSSPIterator. The API for SystemConsume.poll does call for a set, so having a set here would prevent redundant object creation if we were to store a single SSP as member and create a set every time we call poll.\nI don't see a problem keeping this as a set here, but maybe we could change the initialization to be a singleton set / immutable set?", "url": "https://github.com/apache/samza/pull/1413#discussion_r472574677", "createdAt": "2020-08-19T01:00:01Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NDU3MQ=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 50}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0NzY2NTA2OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowOTo1MFrOHBvTDQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTowMjoxMVrOHCrtIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NTU0OQ==", "bodyText": "Can we add a pre-check on the endOffset as not null in the constructor? Or, do you intend have this as a UnBoundedSSPIterator in the event no endOffset? If latter, please update the java docs to reflect the contract.", "url": "https://github.com/apache/samza/pull/1413#discussion_r471585549", "createdAt": "2020-08-17T16:09:50Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);\n+    this.peeks = new ArrayDeque<>();\n+  }\n+\n+  public boolean hasNext() {\n+    refresh();\n+\n+    return peeks.size() > 0 && (endOffset == null || admin.offsetComparator(peeks.peek().getOffset(), endOffset) <= 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NTI2NQ==", "bodyText": "I left null as acceptable so we wouldn't need to unnecessarily save the current changelog offsets within NonTransactionalStateTaskRestoreManager. I'll modify the javadoc to reflect this - thanks for point out.", "url": "https://github.com/apache/samza/pull/1413#discussion_r472575265", "createdAt": "2020-08-19T01:02:11Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);\n+    this.peeks = new ArrayDeque<>();\n+  }\n+\n+  public boolean hasNext() {\n+    refresh();\n+\n+    return peeks.size() > 0 && (endOffset == null || admin.offsetComparator(peeks.peek().getOffset(), endOffset) <= 0);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NTU0OQ=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0Nzc5Mzc0OnYy", "diffSide": "RIGHT", "path": "samza-api/src/test/java/org/apache/samza/system/TestBoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0NToxMFrOHBwiiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTowMjozN1rOHCrtlA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNTg5OQ==", "bodyText": "nit: can we change this to non-star imports?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471605899", "createdAt": "2020-08-17T16:45:10Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/test/java/org/apache/samza/system/TestBoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import org.apache.samza.Partition;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.stubbing.OngoingStubbing;\n+\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NTM4MA==", "bodyText": "Sure", "url": "https://github.com/apache/samza/pull/1413#discussion_r472575380", "createdAt": "2020-08-19T01:02:37Z", "author": {"login": "bkonold"}, "path": "samza-api/src/test/java/org/apache/samza/system/TestBoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import org.apache.samza.Partition;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.stubbing.OngoingStubbing;\n+\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNTg5OQ=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0ODM5NDQ3OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo0Njo1NVrOHB2t3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOVQwMTowMjo1OFrOHCrt8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNzEwMA==", "bodyText": "Can you also implement Iterator to enable callers user it with java iterator interface & semantics?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471707100", "createdAt": "2020-08-17T18:46:55Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 35}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MjU3NTQ3NQ==", "bodyText": "Ah, yes.", "url": "https://github.com/apache/samza/pull/1413#discussion_r472575475", "createdAt": "2020-08-19T01:02:58Z", "author": {"login": "bkonold"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNzEwMA=="}, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 35}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1488, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}