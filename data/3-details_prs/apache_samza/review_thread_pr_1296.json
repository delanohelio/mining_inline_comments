{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzgxMTM4Mjg0", "number": 1296, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTozOTo0OVrODj7fow==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzo0Mjo1M1rODkwHcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAxNTA3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ClusterResourceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTozOTo0OVrOFwAliQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDoxMDo0OFrOFwz-Dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTU3Nw==", "bodyText": "javadoc please\nalso, this method likely belongs in SamzaResource?\n(if it really needs to be here, needs to be abstract)", "url": "https://github.com/apache/samza/pull/1296#discussion_r385885577", "createdAt": "2020-02-28T19:39:49Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ClusterResourceManager.java", "diffHunk": "@@ -132,6 +132,9 @@ public ClusterResourceManager(Callback callback) {\n \n   public abstract void stop(SamzaApplicationState.SamzaAppStatus status);\n \n+  public boolean isResourceExpired(SamzaResource resource) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNzQzOQ==", "bodyText": "Kubernetes does not have a concept of expired allocated resource so this method needs a default implementation, it cannot belong to SamzaResource because that is yarn agnostic class and timeout is read from Yarn config and not a samza config.", "url": "https://github.com/apache/samza/pull/1296#discussion_r386727439", "createdAt": "2020-03-03T00:10:48Z", "author": {"login": "Sanil15"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ClusterResourceManager.java", "diffHunk": "@@ -132,6 +132,9 @@ public ClusterResourceManager(Callback callback) {\n \n   public abstract void stop(SamzaApplicationState.SamzaAppStatus status);\n \n+  public boolean isResourceExpired(SamzaResource resource) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTU3Nw=="}, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAxNTkzOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerAllocator.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0MDowOVrOFwAmBg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0MDowOVrOFwAmBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NTcwMg==", "bodyText": "resource.isExpired()", "url": "https://github.com/apache/samza/pull/1296#discussion_r385885702", "createdAt": "2020-02-28T19:40:09Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerAllocator.java", "diffHunk": "@@ -261,6 +261,14 @@ protected void runStreamProcessor(SamzaResourceRequest request, String preferred\n       throw new SamzaException(\"Expected resource for Processor ID: \" + request.getProcessorId() + \" was unavailable on host: \" + preferredHost);\n     }\n \n+    if(clusterResourceManager.isResourceExpired(resource)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAxODM5OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerAllocator.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0MDo1N1rOFwAngA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDoxMToxN1rOFwz-rA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NjA4MA==", "bodyText": "Resource has expired, re-requesting resource for ..... processorId:\nHaving the processorId: pattern in the logs makes for easy searcheability when we're debugging", "url": "https://github.com/apache/samza/pull/1296#discussion_r385886080", "createdAt": "2020-02-28T19:40:57Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerAllocator.java", "diffHunk": "@@ -261,6 +261,14 @@ protected void runStreamProcessor(SamzaResourceRequest request, String preferred\n       throw new SamzaException(\"Expected resource for Processor ID: \" + request.getProcessorId() + \" was unavailable on host: \" + preferredHost);\n     }\n \n+    if(clusterResourceManager.isResourceExpired(resource)) {\n+      LOG.info(\"Lease for the resource has been expired for resource: {} request: {}\", resource, request);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNzU5Ng==", "bodyText": "I came up with this PR to gather some early thoughts on approach, will clean it up", "url": "https://github.com/apache/samza/pull/1296#discussion_r386727596", "createdAt": "2020-03-03T00:11:17Z", "author": {"login": "Sanil15"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerAllocator.java", "diffHunk": "@@ -261,6 +261,14 @@ protected void runStreamProcessor(SamzaResourceRequest request, String preferred\n       throw new SamzaException(\"Expected resource for Processor ID: \" + request.getProcessorId() + \" was unavailable on host: \" + preferredHost);\n     }\n \n+    if(clusterResourceManager.isResourceExpired(resource)) {\n+      LOG.info(\"Lease for the resource has been expired for resource: {} request: {}\", resource, request);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4NjA4MA=="}, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5MDAyNDM1OnYy", "diffSide": "RIGHT", "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0yOFQxOTo0Mjo1OFrOFwArEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QwMDoxMToyNVrOFwz-2w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4Njk5NQ==", "bodyText": "Could DEFAULT_RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS be a Duration?\nDuration.between(resource.getTS, Instant.now()).compareTo(DEFAULT_RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS) > 0;", "url": "https://github.com/apache/samza/pull/1296#discussion_r385886995", "createdAt": "2020-02-28T19:42:58Z", "author": {"login": "rmatharu"}, "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "diffHunk": "@@ -575,6 +576,15 @@ public void onStopContainerError(ContainerId containerId, Throwable t) {\n     }\n   }\n \n+  @Override\n+  public boolean isResourceExpired(SamzaResource resource) {\n+    /**\n+     * Time from which resource was allocated + 1 min (to account for clock skew) > Yarn Expiry Timeout\n+     */\n+    return System.currentTimeMillis() - resource.getTimestamp() + Duration.ofMinutes(1).toMillis()\n+        > YarnConfiguration.DEFAULT_RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NjcyNzY0Mw==", "bodyText": "will make this cleaner", "url": "https://github.com/apache/samza/pull/1296#discussion_r386727643", "createdAt": "2020-03-03T00:11:25Z", "author": {"login": "Sanil15"}, "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "diffHunk": "@@ -575,6 +576,15 @@ public void onStopContainerError(ContainerId containerId, Throwable t) {\n     }\n   }\n \n+  @Override\n+  public boolean isResourceExpired(SamzaResource resource) {\n+    /**\n+     * Time from which resource was allocated + 1 min (to account for clock skew) > Yarn Expiry Timeout\n+     */\n+    return System.currentTimeMillis() - resource.getTimestamp() + Duration.ofMinutes(1).toMillis()\n+        > YarnConfiguration.DEFAULT_RM_CONTAINER_ALLOC_EXPIRY_INTERVAL_MS;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NTg4Njk5NQ=="}, "originalCommit": {"oid": "2a0a39da0a12b7f2fb762c5a29102f6c625aafc5"}, "originalPosition": 18}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODYzMzExOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzo0MTo0NVrOFxP6Qg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzo0MTo0NVrOFxP6Qg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE4NTIxOA==", "bodyText": "\"has expired\"  \"{}. Re-requesting again\"", "url": "https://github.com/apache/samza/pull/1296#discussion_r387185218", "createdAt": "2020-03-03T17:41:45Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/ContainerManager.java", "diffHunk": "@@ -290,6 +290,29 @@ void handleExpiredRequest(String processorId, String preferredHost,\n     }\n   }\n \n+  /**\n+   * Handles expired allocated resource by requesting the same resource again and release the expired allocated resource\n+   *\n+   * @param request pending request for the preferred host\n+   * @param resource resource allocated from {@link ClusterResourceManager} which has expired\n+   * @param preferredHost host on which container is requested to be deployed\n+   * @param resourceRequestState state of request in {@link ContainerAllocator}\n+   * @param allocator allocator for requesting resources\n+   */\n+  void handleExpiredResource(SamzaResourceRequest request, SamzaResource resource, String preferredHost,\n+      ResourceRequestState resourceRequestState, ContainerAllocator allocator) {\n+    LOG.info(\"Allocated resource {} has been expired for Processor ID: {} request: {} re-requesting resource again\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c25aaf35699ddd3a42bab694ef19307f6d3066"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjM5ODYzNjY0OnYy", "diffSide": "RIGHT", "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzo0Mjo1M1rOFxP8mQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0wM1QxNzo0Mjo1M1rOFxP8mQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM4NzE4NTgxNw==", "bodyText": "Use // for comments inside methods, not /*. IntelliJ warns about dangling javadocs for these.", "url": "https://github.com/apache/samza/pull/1296#discussion_r387185817", "createdAt": "2020-03-03T17:42:53Z", "author": {"login": "prateekm"}, "path": "samza-yarn/src/main/java/org/apache/samza/job/yarn/YarnClusterResourceManager.java", "diffHunk": "@@ -575,6 +576,17 @@ public void onStopContainerError(ContainerId containerId, Throwable t) {\n     }\n   }\n \n+  @Override\n+  public boolean isResourceExpired(SamzaResource resource) {\n+    /**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e0c25aaf35699ddd3a42bab694ef19307f6d3066"}, "originalPosition": 14}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1586, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}