{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTE1NjY2NTg0", "number": 1437, "title": "SAMZA-2598:Kafka clients are not created and closed properly", "bodyText": "Symptom: When deploying a job, users will see error messages from the kafka clients finalizer complaining about \"kafka consumer/producer allocated and not closed\"\nThese error messages appear multiple times in users' jobs and don't actually affect the job's performance or correctness. This leads to users falsely believing that any job failures is because of this message.\nCause:\nAll Kafka clients have a finalize method in them, when GC determines that there's no more references to the clients, it will try to close the clients and find that the clients wasn't closed properly yet. And was caused by three different reasons:\n\nIn ChangelogStreamManager.java, RegexTopicGenerator.scala, DiagnosticsUtil.java and CoordinatorStreamUtil.scala , Samza created admin Clients for every system, no matter we need them or not. But we only stop the admin clients that we used.\nIn KafkaCheckpointManager.scala, we didn't close clients after create and start them after using createResources() .\nIn CoordinatorStreamStore.java, the error was caused by coordinatorStreamStore was not closed when processor(s) failed (in standalone jobs). We simply remove the failed processor(s), but didn't closed corresponding store.\n\nChanges:\n\nIn ChangelogStreamManager.java, RegexTopicGenerator.scala, DiagnosticsUtil.java and CoordinatorStreamUtil.scala,  we will only create adminClients that we needed instead of creating adminClients for all systems and then pick up the one we want.\nIn KafkaCheckpointManager.scala, we add stop() function afer calling createResources().\nIn In CoordinatorStreamStore.java, we close the corresponding store when the processor failed.\n\nTests: using snapshot version did some local deployments with test jobs including samza and beam-samza jobs, the error logs don't show again.\nAPI Changes: N/A\nUpgrade Instructions: N/A\nUsage Instructions:N/A", "createdAt": "2020-11-04T22:08:32Z", "url": "https://github.com/apache/samza/pull/1437", "merged": true, "mergeCommit": {"oid": "3179f86fb8ad9f019d6c6df12f4f10a6a3479e22"}, "closed": true, "closedAt": "2020-12-03T01:14:06Z", "author": {"login": "MabelYC"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdZTejxgH2gAyNTE1NjY2NTg0OjI3NmVkMDQ2YTU3ODczYjAzOGQ5MjU2ZDQ1M2RmNDE4OGVlMTZiODI=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdiYpjRAFqTU0MzM2NjAyMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "276ed046a57873b038d9256d453df4188ee16b82", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/276ed046a57873b038d9256d453df4188ee16b82", "committedDate": "2020-11-04T20:06:55Z", "message": "SAMZA-2598:Kafka clients are not created and closed properly"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIzODE2OTY0", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-523816964", "createdAt": "2020-11-04T23:45:05Z", "commit": {"oid": "276ed046a57873b038d9256d453df4188ee16b82"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTI3NjI1NDA2", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-527625406", "createdAt": "2020-11-10T21:34:14Z", "commit": {"oid": "276ed046a57873b038d9256d453df4188ee16b82"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozNDoxNFrOHwweOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xMFQyMTozNjo1N1rOHwwkAA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4Nzg2Ng==", "bodyText": "preferred way of calling super.finalize should be:\nfinalize() {\ntry {\n.. stop...\n} finally {\nsuper.finalize();\n}\n}", "url": "https://github.com/apache/samza/pull/1437#discussion_r520887866", "createdAt": "2020-11-10T21:34:14Z", "author": {"login": "sborya"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -188,6 +188,14 @@ public void flush() {\n     }\n   }\n \n+  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276ed046a57873b038d9256d453df4188ee16b82"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyMDg4OTM0NA==", "bodyText": "I don't think using finalize is a good idea.\nThis will cause unpredictable performance impact, since each garbage collection may take an arbitrary time now.\nThe services should be stopped as a part of stopped flow, not on garbage collection.", "url": "https://github.com/apache/samza/pull/1437#discussion_r520889344", "createdAt": "2020-11-10T21:36:57Z", "author": {"login": "sborya"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -188,6 +188,14 @@ public void flush() {\n     }\n   }\n \n+  @Override\n+  protected void finalize() throws Throwable {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "276ed046a57873b038d9256d453df4188ee16b82"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f20be45b54b74f6ed07f02a84e63f1b37d48c757", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/f20be45b54b74f6ed07f02a84e63f1b37d48c757", "committedDate": "2020-11-18T01:16:47Z", "message": "modified to use shutdownhook instead of finalize()"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "48dddc0b74b10a52684adfb1732677351ac08945", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/48dddc0b74b10a52684adfb1732677351ac08945", "committedDate": "2020-11-18T01:22:21Z", "message": "clean up code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTI0NTQ1", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-533124545", "createdAt": "2020-11-18T05:58:22Z", "commit": {"oid": "48dddc0b74b10a52684adfb1732677351ac08945"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo1ODoyMlrOH1eREg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo1ODoyMlrOH1eREg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgzMjQ2Ng==", "bodyText": "can we do this.close() ?", "url": "https://github.com/apache/samza/pull/1437#discussion_r525832466", "createdAt": "2020-11-18T05:58:22Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -111,6 +111,12 @@ public void init() {\n       systemConsumer.start();\n       systemProducer.register(SOURCE);\n       systemProducer.start();\n+      Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n+        LOG.info(\"CoordinatorStreamStore Shut Down Hook thread is closing kafka clients\");\n+        this.systemProducer.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48dddc0b74b10a52684adfb1732677351ac08945"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTMzMTI1MDM5", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-533125039", "createdAt": "2020-11-18T05:59:40Z", "commit": {"oid": "48dddc0b74b10a52684adfb1732677351ac08945"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo1OTo0MFrOH1eSpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOFQwNTo1OTo0MFrOH1eSpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNTgzMjg3MA==", "bodyText": "this.stop()?", "url": "https://github.com/apache/samza/pull/1437#discussion_r525832870", "createdAt": "2020-11-18T05:59:40Z", "author": {"login": "kw2542"}, "path": "samza-kafka/src/main/scala/org/apache/samza/checkpoint/kafka/KafkaCheckpointManager.scala", "diffHunk": "@@ -112,6 +115,12 @@ class KafkaCheckpointManager(checkpointSpec: KafkaStreamSpec,\n     info(s\"Starting the checkpoint SystemConsumer from oldest offset $oldestOffset\")\n     systemConsumer.register(checkpointSsp, oldestOffset)\n     systemConsumer.start()\n+    Runtime.getRuntime.addShutdownHook(new Thread(\"KafkaCheckPointManagerShutdownHook\") {\n+      override def run(): Unit = {\n+        producerRef.get().stop()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "48dddc0b74b10a52684adfb1732677351ac08945"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "340af402d51594ea27574c67af24036bd60b67dd", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/340af402d51594ea27574c67af24036bd60b67dd", "committedDate": "2020-11-19T01:36:11Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODgwNDIx", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-534880421", "createdAt": "2020-11-19T21:44:30Z", "commit": {"oid": "340af402d51594ea27574c67af24036bd60b67dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM0ODg2Mjc3", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-534886277", "createdAt": "2020-11-19T21:53:12Z", "commit": {"oid": "340af402d51594ea27574c67af24036bd60b67dd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1MzoxMlrOH2zYgw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xOVQyMTo1MzoxMlrOH2zYgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNzIyNzAxMQ==", "bodyText": "Relying on shutdown hooks for lifecycle management of components is not a good idea.\nThe close should be called by whoever created the SystemProducer etc instead. If it's created in this class, this class should have lifecycle methods of it's own, which should be called by the owner of this class.", "url": "https://github.com/apache/samza/pull/1437#discussion_r527227011", "createdAt": "2020-11-19T21:53:12Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -111,6 +111,10 @@ public void init() {\n       systemConsumer.start();\n       systemProducer.register(SOURCE);\n       systemProducer.start();\n+      Runtime.getRuntime().addShutdownHook(new Thread(() -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "340af402d51594ea27574c67af24036bd60b67dd"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "42dcc91a14d0729207cf447cf2c6c9c97c099acd", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/42dcc91a14d0729207cf447cf2c6c9c97c099acd", "committedDate": "2020-11-20T23:10:04Z", "message": "modifies to close the clients according to lifecycle"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db47dd3db4a9162975363ca17a120aaa9dfd9ae9", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/db47dd3db4a9162975363ca17a120aaa9dfd9ae9", "committedDate": "2020-11-20T23:30:32Z", "message": "clean up code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTM1ODQzOTM1", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-535843935", "createdAt": "2020-11-20T23:37:21Z", "commit": {"oid": "db47dd3db4a9162975363ca17a120aaa9dfd9ae9"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMzozNzoyMVrOH3kH7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yMFQyMzo0MzowOFrOH3kN3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNTU4Mg==", "bodyText": "Won't this cause the current processor to not be stopped?\nDo we also need to stop the metadata store in afterStop()?", "url": "https://github.com/apache/samza/pull/1437#discussion_r528025582", "createdAt": "2020-11-20T23:37:21Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -441,15 +441,24 @@ public void afterStop() {\n \n     @Override\n     public void afterFailure(Throwable t) {\n-      processors.removeIf(pair -> pair.getLeft().equals(processor));\n-\n+      // we need to close associated coordinator metadata store, although the processor failed\n+      processors.forEach(sp -> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db47dd3db4a9162975363ca17a120aaa9dfd9ae9"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNTk3MQ==", "bodyText": "Do we know for sure that this method is only called once? If so, do we need to create the checkpoint manager during construction, or can we create it and close it within createResources?", "url": "https://github.com/apache/samza/pull/1437#discussion_r528025971", "createdAt": "2020-11-20T23:39:00Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/MetadataResourceUtil.java", "diffHunk": "@@ -55,6 +55,7 @@ public MetadataResourceUtil(JobModel jobModel, MetricsRegistry metricsRegistry,\n   public void createResources() {\n     if (checkpointManager != null) {\n       checkpointManager.createResources();\n+      checkpointManager.stop();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db47dd3db4a9162975363ca17a120aaa9dfd9ae9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyODAyNzEwMQ==", "bodyText": "Is it safe to modify (remove) the map here while iterating over it (foreach)?", "url": "https://github.com/apache/samza/pull/1437#discussion_r528027101", "createdAt": "2020-11-20T23:43:08Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -441,15 +441,24 @@ public void afterStop() {\n \n     @Override\n     public void afterFailure(Throwable t) {\n-      processors.removeIf(pair -> pair.getLeft().equals(processor));\n-\n+      // we need to close associated coordinator metadata store, although the processor failed\n+      processors.forEach(sp -> {\n+        if (sp.getLeft().equals(processor)) {\n+          if (sp.getRight() != null) {\n+            sp.getRight().close();\n+          }\n+          processors.remove(sp);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db47dd3db4a9162975363ca17a120aaa9dfd9ae9"}, "originalPosition": 12}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ed0a23092a4f9930a3137c2060ef3817d0b9d53c", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/ed0a23092a4f9930a3137c2060ef3817d0b9d53c", "committedDate": "2020-11-21T00:57:16Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1dfe009ea33963e66676deeb5c4804e6ef9664ab", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/1dfe009ea33963e66676deeb5c4804e6ef9664ab", "committedDate": "2020-11-25T02:08:36Z", "message": "address comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "126ae084b8399e2975c184006c64ec9fdb166185", "author": {"user": {"login": "MabelYC", "name": "Yuhong Cheng"}}, "url": "https://github.com/apache/samza/commit/126ae084b8399e2975c184006c64ec9fdb166185", "committedDate": "2020-11-25T02:15:18Z", "message": "removed unused code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyMjgwOTQ5", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-542280949", "createdAt": "2020-12-01T20:44:45Z", "commit": {"oid": "126ae084b8399e2975c184006c64ec9fdb166185"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMzY2MDIy", "url": "https://github.com/apache/samza/pull/1437#pullrequestreview-543366022", "createdAt": "2020-12-03T01:13:46Z", "commit": {"oid": "126ae084b8399e2975c184006c64ec9fdb166185"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4730, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}