{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQzMDQyOTI2", "number": 1399, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo1MzozNlrOEKtR2w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo1ODoyOFrOEKtVeA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjYzMDY3OnYy", "diffSide": "RIGHT", "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo1MzozNlrOGr51-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo1MzozNlrOGr51-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY4OTY1Ng==", "bodyText": "Minor: s/api/API", "url": "https://github.com/apache/samza/pull/1399#discussion_r448689656", "createdAt": "2020-07-02T00:53:36Z", "author": {"login": "cameronlee314"}, "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "diffHunk": "@@ -0,0 +1,117 @@\n+---\n+layout: blog\n+title: Announcing the release of Apache Samza 1.5.0\n+icon: git-pull-request\n+authors:\n+    - name: Bharath Kumarasubramanian\n+      website:\n+      image:\n+excerpt_separator: <!--more-->\n+---\n+\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+\n+# **Announcing the release of Apache Samza 1.5.0**\n+\n+\n+<!--more-->\n+\n+**IMPORTANT NOTE**: As noted in the last release, this release has **backward incompatible changes regarding samza job submission**. Details can be found on [SEP-23: Simplify Job Runner](https://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner)\n+\n+We are thrilled to announce the release of Apache Samza 1.5.0.\n+\n+Today, Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, Slack, and Redfin, among many others. Samza provides leading support for large-scale stateful stream processing with:\n+\n+* First class support for local states (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.\n+\n+* Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large states.\n+\n+* A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.\n+\n+* High level API for expressing complex stream processing pipelines in a few lines of code.\n+\n+* Beam Samza Runner that marries Beam\u2019s best in class support for EventTime based windowed processing and sophisticated triggering with Samza\u2019s stable and scalable stateful processing model.\n+\n+* A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).\n+\n+* A Table API that provides a common abstraction for accessing remote or local databases and allows developers to \u201cjoin\u201d an input event stream with such a Table.\n+\n+* Flexible deployment model for running the applications in any hosting environment and with cluster managers other than YARN.\n+\n+### New Features, Upgrades and Bug Fixes:\n+This release brings the following features, upgrades, and capabilities (highlights):\n+\n+#### Samza Container Placement\n+Container Placements API gives you the ability to move / restart one or more containers (either active or standby) of your cluster based applications from one host to another without restarting your application. You can use these api to build maintenance, balancing & remediation tools. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d24f1739c4c1da68475fd8f9f56523c6eaf2c6c1"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NjYzOTkyOnYy", "diffSide": "RIGHT", "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQwMDo1ODoyOFrOGr56_g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQyMjozMDoyMVrOGsesmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MDk0Mg==", "bodyText": "@kw2542 Do you have some more documentation about what app owners need to change here? It might be good to provide more details/examples about the new way to launch a job.\nHere are some changes that might benefit from more details:\n\nDifferent arguments passed to launch script (did the launch script name change too?)\nDescribe what \"submission configs\" are\nCheckpointTool input changed", "url": "https://github.com/apache/samza/pull/1399#discussion_r448690942", "createdAt": "2020-07-02T00:58:28Z", "author": {"login": "cameronlee314"}, "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "diffHunk": "@@ -0,0 +1,117 @@\n+---\n+layout: blog\n+title: Announcing the release of Apache Samza 1.5.0\n+icon: git-pull-request\n+authors:\n+    - name: Bharath Kumarasubramanian\n+      website:\n+      image:\n+excerpt_separator: <!--more-->\n+---\n+\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+\n+# **Announcing the release of Apache Samza 1.5.0**\n+\n+\n+<!--more-->\n+\n+**IMPORTANT NOTE**: As noted in the last release, this release has **backward incompatible changes regarding samza job submission**. Details can be found on [SEP-23: Simplify Job Runner](https://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner)\n+\n+We are thrilled to announce the release of Apache Samza 1.5.0.\n+\n+Today, Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, Slack, and Redfin, among many others. Samza provides leading support for large-scale stateful stream processing with:\n+\n+* First class support for local states (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.\n+\n+* Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large states.\n+\n+* A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.\n+\n+* High level API for expressing complex stream processing pipelines in a few lines of code.\n+\n+* Beam Samza Runner that marries Beam\u2019s best in class support for EventTime based windowed processing and sophisticated triggering with Samza\u2019s stable and scalable stateful processing model.\n+\n+* A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).\n+\n+* A Table API that provides a common abstraction for accessing remote or local databases and allows developers to \u201cjoin\u201d an input event stream with such a Table.\n+\n+* Flexible deployment model for running the applications in any hosting environment and with cluster managers other than YARN.\n+\n+### New Features, Upgrades and Bug Fixes:\n+This release brings the following features, upgrades, and capabilities (highlights):\n+\n+#### Samza Container Placement\n+Container Placements API gives you the ability to move / restart one or more containers (either active or standby) of your cluster based applications from one host to another without restarting your application. You can use these api to build maintenance, balancing & remediation tools. \n+\n+#### Simplify Job Runner & Configs\n+Job Runner will now simply submit Samza job to Yarn RM without executing any user code and job planning will happen on ClusterBasedJobCoordinator instead. This simplified workflow addresses security requirements where job submissions need to be isolated in order to execute user code as well as operational pain points where deployment failure could happen at multiple places.\n+\n+Full list of the jiras addressed in this release can be found [here](https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20and%20fixVersion%20in%20(1.5)).\n+\n+### Upgrading your application to Apache Samza 1.5.0\n+ConfigFactory is deprecated as Job Runner does not load full job config anymore. Instead, ConfigLoaderFactory is introduced to be executed on ClusterBasedJobCoordinator to fetch full job config.\n+If you are using the default PropertiesConfigFactory, simply switching to use the default PropertiesConfigLoaderFactory will work, otherwise if you are using a custom ConfigFactory, kindly creates its new counterpart following ConfigLoaderFactory. \n+\n+Configs related to job submission must be explicitly provided to Job Runner as it is no longer loading full job config anymore.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d24f1739c4c1da68475fd8f9f56523c6eaf2c6c1"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTIxODAzNg==", "bodyText": "Very good question, I do have detailed instructions on previous PRs, do you think we should link to them or provide the instruction on the release blog as well?", "url": "https://github.com/apache/samza/pull/1399#discussion_r449218036", "createdAt": "2020-07-02T19:11:58Z", "author": {"login": "kw2542"}, "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "diffHunk": "@@ -0,0 +1,117 @@\n+---\n+layout: blog\n+title: Announcing the release of Apache Samza 1.5.0\n+icon: git-pull-request\n+authors:\n+    - name: Bharath Kumarasubramanian\n+      website:\n+      image:\n+excerpt_separator: <!--more-->\n+---\n+\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+\n+# **Announcing the release of Apache Samza 1.5.0**\n+\n+\n+<!--more-->\n+\n+**IMPORTANT NOTE**: As noted in the last release, this release has **backward incompatible changes regarding samza job submission**. Details can be found on [SEP-23: Simplify Job Runner](https://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner)\n+\n+We are thrilled to announce the release of Apache Samza 1.5.0.\n+\n+Today, Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, Slack, and Redfin, among many others. Samza provides leading support for large-scale stateful stream processing with:\n+\n+* First class support for local states (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.\n+\n+* Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large states.\n+\n+* A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.\n+\n+* High level API for expressing complex stream processing pipelines in a few lines of code.\n+\n+* Beam Samza Runner that marries Beam\u2019s best in class support for EventTime based windowed processing and sophisticated triggering with Samza\u2019s stable and scalable stateful processing model.\n+\n+* A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).\n+\n+* A Table API that provides a common abstraction for accessing remote or local databases and allows developers to \u201cjoin\u201d an input event stream with such a Table.\n+\n+* Flexible deployment model for running the applications in any hosting environment and with cluster managers other than YARN.\n+\n+### New Features, Upgrades and Bug Fixes:\n+This release brings the following features, upgrades, and capabilities (highlights):\n+\n+#### Samza Container Placement\n+Container Placements API gives you the ability to move / restart one or more containers (either active or standby) of your cluster based applications from one host to another without restarting your application. You can use these api to build maintenance, balancing & remediation tools. \n+\n+#### Simplify Job Runner & Configs\n+Job Runner will now simply submit Samza job to Yarn RM without executing any user code and job planning will happen on ClusterBasedJobCoordinator instead. This simplified workflow addresses security requirements where job submissions need to be isolated in order to execute user code as well as operational pain points where deployment failure could happen at multiple places.\n+\n+Full list of the jiras addressed in this release can be found [here](https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20and%20fixVersion%20in%20(1.5)).\n+\n+### Upgrading your application to Apache Samza 1.5.0\n+ConfigFactory is deprecated as Job Runner does not load full job config anymore. Instead, ConfigLoaderFactory is introduced to be executed on ClusterBasedJobCoordinator to fetch full job config.\n+If you are using the default PropertiesConfigFactory, simply switching to use the default PropertiesConfigLoaderFactory will work, otherwise if you are using a custom ConfigFactory, kindly creates its new counterpart following ConfigLoaderFactory. \n+\n+Configs related to job submission must be explicitly provided to Job Runner as it is no longer loading full job config anymore.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MDk0Mg=="}, "originalCommit": {"oid": "d24f1739c4c1da68475fd8f9f56523c6eaf2c6c1"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI1NzMwOQ==", "bodyText": "I'm not sure we should link to PRs as official documentation for steps to do an upgrade.\nWe could copy the details from the PRs to somewhere else, like the blog. @mynameborat any other ideas?", "url": "https://github.com/apache/samza/pull/1399#discussion_r449257309", "createdAt": "2020-07-02T20:44:36Z", "author": {"login": "cameronlee314"}, "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "diffHunk": "@@ -0,0 +1,117 @@\n+---\n+layout: blog\n+title: Announcing the release of Apache Samza 1.5.0\n+icon: git-pull-request\n+authors:\n+    - name: Bharath Kumarasubramanian\n+      website:\n+      image:\n+excerpt_separator: <!--more-->\n+---\n+\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+\n+# **Announcing the release of Apache Samza 1.5.0**\n+\n+\n+<!--more-->\n+\n+**IMPORTANT NOTE**: As noted in the last release, this release has **backward incompatible changes regarding samza job submission**. Details can be found on [SEP-23: Simplify Job Runner](https://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner)\n+\n+We are thrilled to announce the release of Apache Samza 1.5.0.\n+\n+Today, Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, Slack, and Redfin, among many others. Samza provides leading support for large-scale stateful stream processing with:\n+\n+* First class support for local states (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.\n+\n+* Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large states.\n+\n+* A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.\n+\n+* High level API for expressing complex stream processing pipelines in a few lines of code.\n+\n+* Beam Samza Runner that marries Beam\u2019s best in class support for EventTime based windowed processing and sophisticated triggering with Samza\u2019s stable and scalable stateful processing model.\n+\n+* A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).\n+\n+* A Table API that provides a common abstraction for accessing remote or local databases and allows developers to \u201cjoin\u201d an input event stream with such a Table.\n+\n+* Flexible deployment model for running the applications in any hosting environment and with cluster managers other than YARN.\n+\n+### New Features, Upgrades and Bug Fixes:\n+This release brings the following features, upgrades, and capabilities (highlights):\n+\n+#### Samza Container Placement\n+Container Placements API gives you the ability to move / restart one or more containers (either active or standby) of your cluster based applications from one host to another without restarting your application. You can use these api to build maintenance, balancing & remediation tools. \n+\n+#### Simplify Job Runner & Configs\n+Job Runner will now simply submit Samza job to Yarn RM without executing any user code and job planning will happen on ClusterBasedJobCoordinator instead. This simplified workflow addresses security requirements where job submissions need to be isolated in order to execute user code as well as operational pain points where deployment failure could happen at multiple places.\n+\n+Full list of the jiras addressed in this release can be found [here](https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20and%20fixVersion%20in%20(1.5)).\n+\n+### Upgrading your application to Apache Samza 1.5.0\n+ConfigFactory is deprecated as Job Runner does not load full job config anymore. Instead, ConfigLoaderFactory is introduced to be executed on ClusterBasedJobCoordinator to fetch full job config.\n+If you are using the default PropertiesConfigFactory, simply switching to use the default PropertiesConfigLoaderFactory will work, otherwise if you are using a custom ConfigFactory, kindly creates its new counterpart following ConfigLoaderFactory. \n+\n+Configs related to job submission must be explicitly provided to Job Runner as it is no longer loading full job config anymore.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MDk0Mg=="}, "originalCommit": {"oid": "d24f1739c4c1da68475fd8f9f56523c6eaf2c6c1"}, "originalPosition": 71}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTI5MzQ2Nw==", "bodyText": "@cameronlee314 agreed. @kw2542, can you point me to those PRs and I can copy/add the texts to the blog.", "url": "https://github.com/apache/samza/pull/1399#discussion_r449293467", "createdAt": "2020-07-02T22:30:21Z", "author": {"login": "mynameborat"}, "path": "docs/_blog/2020-07-01-announcing-the-release-of-apache-samza--1.5.0.md", "diffHunk": "@@ -0,0 +1,117 @@\n+---\n+layout: blog\n+title: Announcing the release of Apache Samza 1.5.0\n+icon: git-pull-request\n+authors:\n+    - name: Bharath Kumarasubramanian\n+      website:\n+      image:\n+excerpt_separator: <!--more-->\n+---\n+\n+<!--\n+   Licensed to the Apache Software Foundation (ASF) under one or more\n+   contributor license agreements.  See the NOTICE file distributed with\n+   this work for additional information regarding copyright ownership.\n+   The ASF licenses this file to You under the Apache License, Version 2.0\n+   (the \"License\"); you may not use this file except in compliance with\n+   the License.  You may obtain a copy of the License at\n+\n+       http://www.apache.org/licenses/LICENSE-2.0\n+\n+   Unless required by applicable law or agreed to in writing, software\n+   distributed under the License is distributed on an \"AS IS\" BASIS,\n+   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n+   See the License for the specific language governing permissions and\n+   limitations under the License.\n+-->\n+\n+# **Announcing the release of Apache Samza 1.5.0**\n+\n+\n+<!--more-->\n+\n+**IMPORTANT NOTE**: As noted in the last release, this release has **backward incompatible changes regarding samza job submission**. Details can be found on [SEP-23: Simplify Job Runner](https://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner)\n+\n+We are thrilled to announce the release of Apache Samza 1.5.0.\n+\n+Today, Samza forms the backbone of hundreds of real-time production applications across a multitude of companies, such as LinkedIn, Slack, and Redfin, among many others. Samza provides leading support for large-scale stateful stream processing with:\n+\n+* First class support for local states (with RocksDB store). This allows a stateful application to scale up to 1.1 Million events/sec on a single machine with SSD.\n+\n+* Support for incremental checkpointing of state instead of full snapshots. This enables Samza to scale to applications with very large states.\n+\n+* A fully asynchronous programming model that makes parallelizing remote calls efficient and effortless.\n+\n+* High level API for expressing complex stream processing pipelines in a few lines of code.\n+\n+* Beam Samza Runner that marries Beam\u2019s best in class support for EventTime based windowed processing and sophisticated triggering with Samza\u2019s stable and scalable stateful processing model.\n+\n+* A fully pluggable model for input sources (e.g. Kafka, Kinesis, DynamoDB streams etc.) and output systems (HDFS, Kafka, ElastiCache etc.).\n+\n+* A Table API that provides a common abstraction for accessing remote or local databases and allows developers to \u201cjoin\u201d an input event stream with such a Table.\n+\n+* Flexible deployment model for running the applications in any hosting environment and with cluster managers other than YARN.\n+\n+### New Features, Upgrades and Bug Fixes:\n+This release brings the following features, upgrades, and capabilities (highlights):\n+\n+#### Samza Container Placement\n+Container Placements API gives you the ability to move / restart one or more containers (either active or standby) of your cluster based applications from one host to another without restarting your application. You can use these api to build maintenance, balancing & remediation tools. \n+\n+#### Simplify Job Runner & Configs\n+Job Runner will now simply submit Samza job to Yarn RM without executing any user code and job planning will happen on ClusterBasedJobCoordinator instead. This simplified workflow addresses security requirements where job submissions need to be isolated in order to execute user code as well as operational pain points where deployment failure could happen at multiple places.\n+\n+Full list of the jiras addressed in this release can be found [here](https://issues.apache.org/jira/issues/?jql=project%20%3D%20SAMZA%20and%20fixVersion%20in%20(1.5)).\n+\n+### Upgrading your application to Apache Samza 1.5.0\n+ConfigFactory is deprecated as Job Runner does not load full job config anymore. Instead, ConfigLoaderFactory is introduced to be executed on ClusterBasedJobCoordinator to fetch full job config.\n+If you are using the default PropertiesConfigFactory, simply switching to use the default PropertiesConfigLoaderFactory will work, otherwise if you are using a custom ConfigFactory, kindly creates its new counterpart following ConfigLoaderFactory. \n+\n+Configs related to job submission must be explicitly provided to Job Runner as it is no longer loading full job config anymore.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODY5MDk0Mg=="}, "originalCommit": {"oid": "d24f1739c4c1da68475fd8f9f56523c6eaf2c6c1"}, "originalPosition": 71}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1468, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}