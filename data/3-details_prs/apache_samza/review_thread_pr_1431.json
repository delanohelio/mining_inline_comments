{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4Mzk4OTk5", "number": 1431, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDo0ODoxNVrOElHLkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo1NFrOElHczA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzUwNDE5OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMDo0ODoxNVrOHUbdxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo1MVrOHUb3lg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4MzU1OA==", "bodyText": "Please undo indent/superfluous changes like these, it pollutes the git blame history, also makes it harder to review things.\nI believe auto-indent on your IDE may be the culprit here.", "url": "https://github.com/apache/samza/pull/1431#discussion_r491183558", "createdAt": "2020-09-18T20:48:15Z", "author": {"login": "rmatharu"}, "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "diffHunk": "@@ -288,7 +289,8 @@ public String getProviderFactoryClassName() {\n       RateLimiter defaultRateLimiter;\n       try {\n         @SuppressWarnings(\"unchecked\")\n-        Class<? extends RateLimiter> clazz = (Class<? extends RateLimiter>) Class.forName(DEFAULT_RATE_LIMITER_CLASS_NAME);\n+        Class<? extends RateLimiter> clazz =\n+            (Class<? extends RateLimiter>) Class.forName(DEFAULT_RATE_LIMITER_CLASS_NAME);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a94abd7e410eb6f026d2c49776359eb9e7ddbc"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5MDE2Ng==", "bodyText": "+1", "url": "https://github.com/apache/samza/pull/1431#discussion_r491190166", "createdAt": "2020-09-18T21:04:51Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "diffHunk": "@@ -288,7 +289,8 @@ public String getProviderFactoryClassName() {\n       RateLimiter defaultRateLimiter;\n       try {\n         @SuppressWarnings(\"unchecked\")\n-        Class<? extends RateLimiter> clazz = (Class<? extends RateLimiter>) Class.forName(DEFAULT_RATE_LIMITER_CLASS_NAME);\n+        Class<? extends RateLimiter> clazz =\n+            (Class<? extends RateLimiter>) Class.forName(DEFAULT_RATE_LIMITER_CLASS_NAME);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE4MzU1OA=="}, "originalCommit": {"oid": "39a94abd7e410eb6f026d2c49776359eb9e7ddbc"}, "originalPosition": 25}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzU0Nzc3OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo0N1rOHUb3dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo0N1rOHUb3dw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5MDEzNQ==", "bodyText": "Minor: move them next to other rate limiter related configs (io.ratelimiter) etc.\nWould it make sense to call these io.read.credits and io.write.credits for consistent terminology with rest of the configs?\nCan you also document how this config is used?", "url": "https://github.com/apache/samza/pull/1431#discussion_r491190135", "createdAt": "2020-09-18T21:04:47Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "diffHunk": "@@ -76,6 +76,8 @@\n   public static final String READ_RETRY_POLICY = \"io.read.retry.policy\";\n   public static final String WRITE_RETRY_POLICY = \"io.write.retry.policy\";\n   public static final String BATCH_PROVIDER = \"io.batch.provider\";\n+  public static final String READ_RATE_LIMIT = \"io.read.ratelimit\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a94abd7e410eb6f026d2c49776359eb9e7ddbc"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA3MzU0ODI4OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo1NFrOHUb3vw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xOFQyMTowNDo1NFrOHUb3vw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MTE5MDIwNw==", "bodyText": "s/emit/write.\nCan you extract all of the rate limiter related config generation logic (factory, serde, limits) to a helper method? Will be easier to read.", "url": "https://github.com/apache/samza/pull/1431#discussion_r491190207", "createdAt": "2020-09-18T21:04:54Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/table/descriptors/RemoteTableDescriptor.java", "diffHunk": "@@ -305,6 +307,14 @@ public String getProviderFactoryClassName() {\n       }\n     }\n \n+    //emit table api read/write rate limit\n+    if (this.enableReadRateLimiter && tagCreditsMap.containsKey(RL_READ_TAG)) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "39a94abd7e410eb6f026d2c49776359eb9e7ddbc"}, "originalPosition": 34}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1519, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}