{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDc3NDAzMjAy", "number": 1426, "title": "SAMZA-2587: IntermediateMessageSerde exception handling", "bodyText": "Symptom: The user provided serde failed to deserialize a message. Then, IntermediateMessageSerde tried to deserialize the message for the second time, which caused OOM and container died.\nDirect cause: The user provided serde would construct an array based on the encoded array size. Given wrong size, the serde constructed a huge array and caused OOM. The exception was hidden by OOM and it was hard to debug.\nRoot cause: In samza 0.13.1, we added a byte to the head of the payload. The byte represents the message type (event|watermark|EOS). During deserialization, IntermediateMessageSerde will read the first byte, then deserialize the message according to the message byte. For compatibility, if it fails to read the message type, it will try to deserialize again with all bytes (including the first byte). More details in this PR: #207\nChanges: In the case when the type byte exists but user serde fails to deserialize the message, we shouldn't pass invalid data to user serde and try to deserialize again. The second deserialization may cause unpredictable results. Considering 0.13 is a very old version and intermediate streams usually have retention time, we should be safe to remove the second try. This will make upgrades from 0.13 to master to fail. Workaround is upgrading to 1.4/1.5 instead or resetting the checkpoint of intermediate topic to newest.\nTests: Added unit test: TestIntermediateMessageSerde.testUserMessageSerdeException()\nUpgrade Instructions: For users that are upgrading directly from samza version 0.13.0 or older versions: A message type of intermediate messages was introduced in samza 0.13.1. For samza 0.13.0 or older versions, the first byte of MessageType doesn't exist in the bytes. Thus, upgrading from those versions will fail. There are three ways to fix this issue:\na) Reset checkpoint to consume from newest message in the intermediate stream\nb) Clean all existing messages in the intermediate stream\nc) Run the application in any version between 0.13.1 and 1.5 until all old messages in intermediate stream has reached retention time.", "createdAt": "2020-09-02T00:01:40Z", "url": "https://github.com/apache/samza/pull/1426", "merged": true, "mergeCommit": {"oid": "d12af34de53338048e9eb81f8e46019cd9f5ba06"}, "closed": true, "closedAt": "2020-10-01T22:26:45Z", "author": {"login": "Zhangyx39"}, "timelineItems": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdErZGcAH2gAyNDc3NDAzMjAyOmE0MzYxODNlYjI1M2EzMzIyNzEwYjZjNzViODhlNWEwMzgzNjM1MmY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdOYSgxgFqTUwMDczMjE3NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a436183eb253a3322710b6c75b88e5a03836352f", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/a436183eb253a3322710b6c75b88e5a03836352f", "committedDate": "2020-09-01T18:06:16Z", "message": "SAMZA-2587: IntermediateMessageSerde exception handling"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/9691cea65a3b561ada9ae0c5d54f6a2e35a644ac", "committedDate": "2020-09-01T23:04:15Z", "message": "add unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgxMTk0Njky", "url": "https://github.com/apache/samza/pull/1426#pullrequestreview-481194692", "createdAt": "2020-09-02T19:06:51Z", "commit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOTowNjo1MlrOHL-WJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wMlQxOToyOTozNFrOHL_tBQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMxNzg2Mw==", "bodyText": "Consider also adding a little clarification about what versions older than 0.13.1 did to make those versions incompatible with this new code.", "url": "https://github.com/apache/samza/pull/1426#discussion_r482317863", "createdAt": "2020-09-02T19:06:52Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -83,21 +83,17 @@ public Object fromBytes(byte[] bytes) {\n           throw new UnsupportedOperationException(String.format(\"Message type %s is not supported\", type.name()));\n       }\n       return object;\n-\n     } catch (UnsupportedOperationException ue) {\n       throw new SamzaException(ue);\n     } catch (Exception e) {\n       // This will catch the following exceptions:\n       // 1) the first byte is not a valid type so it will cause ArrayOutOfBound exception\n       // 2) the first byte happens to be a valid type, but the deserialization fails with certain exception\n-      // For these cases, we fall back to user-provided serde\n-      try {\n-        return userMessageSerde.fromBytes(bytes);\n-      } catch (Exception umse) {\n-        LOGGER.error(\"Error deserializing from both intermediate message serde and user message serde. \"\n-            + \"Original exception: \", e);\n-        throw umse;\n-      }\n+      // For these cases, we WILL NOT fall back to user-provided serde. Thus, we are not compatible with upgrade\n+      // directly from samza version older than 0.13.1.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMyNzUwMw==", "bodyText": "Just to clarify: Is the idea that this PR will go into Samza 1.6? So upgrading to samza 1.5 first will convert all intermediate messages into the new format, which means going to 1.6 after that will then be compatible?\nMaybe consider adding a comment to the code about why upgrading to Samza 1.5 will help.", "url": "https://github.com/apache/samza/pull/1426#discussion_r482327503", "createdAt": "2020-09-02T19:17:41Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -83,21 +83,17 @@ public Object fromBytes(byte[] bytes) {\n           throw new UnsupportedOperationException(String.format(\"Message type %s is not supported\", type.name()));\n       }\n       return object;\n-\n     } catch (UnsupportedOperationException ue) {\n       throw new SamzaException(ue);\n     } catch (Exception e) {\n       // This will catch the following exceptions:\n       // 1) the first byte is not a valid type so it will cause ArrayOutOfBound exception\n       // 2) the first byte happens to be a valid type, but the deserialization fails with certain exception\n-      // For these cases, we fall back to user-provided serde\n-      try {\n-        return userMessageSerde.fromBytes(bytes);\n-      } catch (Exception umse) {\n-        LOGGER.error(\"Error deserializing from both intermediate message serde and user message serde. \"\n-            + \"Original exception: \", e);\n-        throw umse;\n-      }\n+      // For these cases, we WILL NOT fall back to user-provided serde. Thus, we are not compatible with upgrade\n+      // directly from samza version older than 0.13.1.\n+      LOGGER.error(\"Error deserializing with intermediate message serde. If you are upgrading from samza version older\"\n+          + \" than 0.13.1, please upgrade to samza 1.5 first.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjMzNjMwOA==", "bodyText": "Instead of depending on JsonSerdeV2 for this test, consider creating a mock Serde to do what you need.\nIn general, using mocks is helpful so that you don't rely on a specific implementation of something which is subject to change in the future. For example, what if JsonSerdeV2 was changed to stop throwing an exception for certain kinds of data, or if it was changed to throw a different kind of exception than SamzaException?", "url": "https://github.com/apache/samza/pull/1426#discussion_r482336308", "createdAt": "2020-09-02T19:26:40Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +128,14 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test (expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {\n+    IntermediateMessageSerde imserde = new IntermediateMessageSerde(new ObjectSerde());\n+    IntermediateMessageSerde imserde2 = new IntermediateMessageSerde(new JsonSerdeV2<>());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4MjM0MDEwMQ==", "bodyText": "It seems like this test would have succeeded with the previous version of IntermediateMessageSerde as well. Could you please try to come up with a test that would only succeed with your new version of IntermediateMessageSerde?\nFor example, you could mock the imserde2 and then verify that it only gets called with a certain byte array.", "url": "https://github.com/apache/samza/pull/1426#discussion_r482340101", "createdAt": "2020-09-02T19:29:34Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +128,14 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test (expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9691cea65a3b561ada9ae0c5d54f6a2e35a644ac"}, "originalPosition": 16}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/d0578061f8ad513725c3d7b77326fc0c7955004d", "committedDate": "2020-09-10T00:25:04Z", "message": "address comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg2MjI1NTk5", "url": "https://github.com/apache/samza/pull/1426#pullrequestreview-486225599", "createdAt": "2020-09-10T18:57:58Z", "commit": {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxODo1Nzo1OVrOHQBwpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxOTozODoyMFrOHQDC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU2ODEwMQ==", "bodyText": "Could you please add this point to the PR description as well?\n\"Reset checkpoint\" means \"reset to newest message in the stream\", right? Could you please make sure that is clear in the doc/description?", "url": "https://github.com/apache/samza/pull/1426#discussion_r486568101", "createdAt": "2020-09-10T18:57:59Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -67,7 +67,20 @@ public IntermediateMessageSerde(Serde userMessageSerde) {\n   public Object fromBytes(byte[] bytes) {\n     try {\n       final Object object;\n-      final MessageType type = MessageType.values()[bytes[0]];\n+      final MessageType type;\n+      try {\n+        type = MessageType.values()[bytes[0]];\n+      } catch (ArrayIndexOutOfBoundsException e) {\n+        // The message type was introduced in samza 0.13.1. For samza 0.13.0 or older versions, the first byte of\n+        // MessageType doesn't exist in the bytes. Thus, upgrading from those versions will get this exception.\n+        // There are two ways to solve this issue:\n+        // a) Reset checkpoint or clean all messages for the intermediate topic", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU3MjY3NA==", "bodyText": "Is it possible that this serde gets the old message format but bytes[0] is still small enough that there is no ArrayIndexOutOfBoundsException? In that case, you wouldn't see your message about the upgrade from 0.13.0.\nI think it was good to have this exception message where you had it before in the outer catch, since then you could at least warn users in all cases. You might also want to mention in the exception message that the error could just be due to a user serde error, so that users aren't misled into thinking that their issue is definitely the 0.13.0 upgrade issue.", "url": "https://github.com/apache/samza/pull/1426#discussion_r486572674", "createdAt": "2020-09-10T19:06:33Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/serializers/IntermediateMessageSerde.java", "diffHunk": "@@ -67,7 +67,20 @@ public IntermediateMessageSerde(Serde userMessageSerde) {\n   public Object fromBytes(byte[] bytes) {\n     try {\n       final Object object;\n-      final MessageType type = MessageType.values()[bytes[0]];\n+      final MessageType type;\n+      try {\n+        type = MessageType.values()[bytes[0]];\n+      } catch (ArrayIndexOutOfBoundsException e) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjU4OTE3NA==", "bodyText": "Since you have control over it, consider using something other than SamzaException for this mock and validation, since SamzaException is something that gets thrown a lot by core Samza classes.\nIt's just a nice small thing you can do to help make tests a little more robust, in case someone introduces a bug in the future.", "url": "https://github.com/apache/samza/pull/1426#discussion_r486589174", "createdAt": "2020-09-10T19:38:20Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestIntermediateMessageSerde.java", "diffHunk": "@@ -126,4 +132,25 @@ public void testEndOfStreamMessageSerde() {\n     assertEquals(de.getTaskName(), taskName);\n     assertEquals(de.getVersion(), 1);\n   }\n+\n+  @Test(expected = SamzaException.class)\n+  public void testUserMessageSerdeException() {\n+    Serde<?> mockUserMessageSerde = mock(Serde.class);\n+    when(mockUserMessageSerde.fromBytes(anyObject())).then(new Answer<Object>() {\n+      @Override\n+      public Object answer(InvocationOnMock invocation) throws Throwable {\n+        byte[] bytes = invocation.getArgumentAt(0, byte[].class);\n+        if (Arrays.equals(bytes, new byte[]{1, 2})) {\n+          throw new SamzaException(\"User message serde failed to deserialize this message.\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d0578061f8ad513725c3d7b77326fc0c7955004d"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "921d996a4711ad71350e04d71bb49d44a536e1dc", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/921d996a4711ad71350e04d71bb49d44a536e1dc", "committedDate": "2020-10-01T17:33:30Z", "message": "update comment and unit test"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzE3ODk1", "url": "https://github.com/apache/samza/pull/1426#pullrequestreview-500717895", "createdAt": "2020-10-01T21:05:37Z", "commit": {"oid": "921d996a4711ad71350e04d71bb49d44a536e1dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "af06faac371c88637480619cf7773de33f03c661", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/af06faac371c88637480619cf7773de33f03c661", "committedDate": "2020-10-01T21:11:13Z", "message": "removing unsed import"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTAwNzMyMTc1", "url": "https://github.com/apache/samza/pull/1426#pullrequestreview-500732175", "createdAt": "2020-10-01T21:30:07Z", "commit": {"oid": "af06faac371c88637480619cf7773de33f03c661"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4708, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}