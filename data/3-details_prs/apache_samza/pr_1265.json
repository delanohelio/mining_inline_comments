{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY5MzUxNTUz", "number": 1265, "title": "SAMZA-2441: Update ApplicationRunnerMain#ApplicationRunnerCommandLine not to load local file", "bodyText": "This is backward incompatible and is only supposed to be included in Samza 1.5\nDesign:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\nChanges:\n\nOverride ApplicationRunnerCommandLine#loadConfig not to invoke config loader as ApplicationRunners handles initial config and full job config themselves.\nAdd JobRunnerCommandLine to load full job config for JobRunner to keep consistent with previous behavior as it still needs full job config for special use cases.\n\nAPI Changes:\nNone\nUpgrade Instructions:\nNone\nUsage Instructions:\nNone\nTests:\n\nUnit Tests", "createdAt": "2020-01-31T00:15:15Z", "url": "https://github.com/apache/samza/pull/1265", "merged": true, "mergeCommit": {"oid": "5a58877897fae4a0e819c70ee48ee2d7edcb01a2"}, "closed": true, "closedAt": "2020-02-04T23:26:42Z", "author": {"login": "kw2542"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb_jxwdgH2gAyMzY5MzUxNTUzOjRmOGI0MGQwNzI2MDRjM2ViODZhMGFmODI1NjUzZjc5ZTYyZWUwZTQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBJm6HgFqTM1MzM1OTc4NA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/4f8b40d072604c3eb86a0af825653f79e62ee0e4", "committedDate": "2020-01-31T00:13:11Z", "message": "SAMZA-2441: Update ApplicationRunnerMain#ApplicationRunnerCommandLine not to load local file\n\nDesign:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\n\nChanges:\n1. Override ApplicationRunnerCommandLine#loadConfig not to invoke config loader.\n2. Add JobRunnerCommandLine for JobRunner as it still needs full job config for special use cases.\n\nAPI Changes:\nNone\n\nUpgrade Instructions:\nNone\n\nUsage Instructions:\nNone\n\nTests:\n1. Unit Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzIwMzg0", "url": "https://github.com/apache/samza/pull/1265#pullrequestreview-353320384", "createdAt": "2020-02-04T21:39:22Z", "commit": {"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTozOToyMlrOFlkYnw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0wNFQyMTo0MDo1N1rOFlkbYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzNzc1OQ==", "bodyText": "Do you feel that the \"base\" use case for CommandLine is to need the full config? To me, it looks a little awkward to need to override loadConfig here with an implementation which is almost the same as the base loadConfig.\nI suppose one alternative would be to make this impl here the base impl, and then have each use case call ConfigUtil.loadConfig if is needs it. What do you see as the tradeoffs?", "url": "https://github.com/apache/samza/pull/1265#discussion_r374937759", "createdAt": "2020-02-04T21:39:22Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/ApplicationRunnerMain.java", "diffHunk": "@@ -43,9 +49,33 @@ public ApplicationRunnerOperation getOperation(OptionSet options) {\n       String rawOp = options.valueOf(operationOpt);\n       return ApplicationRunnerOperation.fromString(rawOp);\n     }\n+\n+    @Override\n+    public Config loadConfig(OptionSet options) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NDkzODQ2Nw==", "bodyText": "Minor suggestion: Instead of needing to check the size and each individual entry, could you build the expected config map and then do an equals check?", "url": "https://github.com/apache/samza/pull/1265#discussion_r374938467", "createdAt": "2020-02-04T21:40:57Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/test/java/org/apache/samza/runtime/TestApplicationRunnerMain.java", "diffHunk": "@@ -79,6 +82,28 @@ public void TestStatusOperation() throws Exception {\n     assertEquals(1, TestApplicationRunnerInvocationCounts.statusCount);\n   }\n \n+  @Test\n+  public void TestLoadConfig() {\n+    ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    OptionSet options = cmdLine.parser().parse(\n+        \"--config-loader-factory\",\n+        \"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\",\n+        \"--config-loader-properties\",\n+        \"path=\" + getClass().getResource(\"/test.properties\").getPath(),\n+        \"-config\", String.format(\"%s=%s\", ApplicationConfig.APP_CLASS, MockStreamApplication.class.getName()),\n+        \"-config\", String.format(\"app.runner.class=%s\", TestApplicationRunnerInvocationCounts.class.getName()));\n+\n+    Config actual = cmdLine.loadConfig(options);\n+\n+    assertEquals(4, actual.size());\n+    assertEquals(\"org.apache.samza.config.loaders.PropertiesConfigLoaderFactory\", actual.get(JobConfig.CONFIG_LOADER_FACTORY));\n+    assertEquals(\n+        getClass().getResource(\"/test.properties\").getPath(),\n+        actual.get(ConfigLoaderFactory.CONFIG_LOADER_PROPERTIES_PREFIX + \"path\"));\n+    assertEquals(MockStreamApplication.class.getName(), actual.get(ApplicationConfig.APP_CLASS));\n+    assertEquals(TestApplicationRunnerInvocationCounts.class.getName(), actual.get(\"app.runner.class\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4"}, "originalPosition": 65}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzIyNjYw", "url": "https://github.com/apache/samza/pull/1265#pullrequestreview-353322660", "createdAt": "2020-02-04T21:43:14Z", "commit": {"oid": "4f8b40d072604c3eb86a0af825653f79e62ee0e4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "029dd64b66e810ba603827a3359d4ed855b98284", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/029dd64b66e810ba603827a3359d4ed855b98284", "committedDate": "2020-02-04T22:40:09Z", "message": "Update Unit Tests"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzMzU5Nzg0", "url": "https://github.com/apache/samza/pull/1265#pullrequestreview-353359784", "createdAt": "2020-02-04T22:51:39Z", "commit": {"oid": "029dd64b66e810ba603827a3359d4ed855b98284"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4771, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}