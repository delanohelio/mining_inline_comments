{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDgyMjk0NTA1", "number": 1428, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNToyNjoxM1rOEiLCdw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTozMDo0MFrOEiLKlQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjY3ODk1OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "isResolved": true, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNToyNjoxM1rOHP5icg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMVQyMDo1MTozNVrOHQtgfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzMzM5NA==", "bodyText": "why do we need this?", "url": "https://github.com/apache/samza/pull/1428#discussion_r486433394", "createdAt": "2020-09-10T15:26:13Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import joptsimple.OptionSet;\n+import org.apache.samza.application.ApplicationUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.runtime.ApplicationRunnerMain;\n+import org.apache.samza.util.ConfigUtil;\n+\n+\n+public class DefaultApplicationMain {\n+\n+  public static void main(String[] args) {\n+    run(args);\n+  }\n+\n+  @VisibleForTesting\n+  static void run(String[] args) {\n+    // This branch is ONLY for Yarn deployments, standalone apps uses offspring\n+    final ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    cmdLine.parser().allowsUnrecognizedOptions();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMjI1MQ==", "bodyText": "This is needed because submission configs are now passed to this class through arguments, in order for the main class to load full config, we need to parse the arguments. This is similar to Beam application where arguments are being parsed in the main class as well.", "url": "https://github.com/apache/samza/pull/1428#discussion_r486502251", "createdAt": "2020-09-10T17:09:45Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import joptsimple.OptionSet;\n+import org.apache.samza.application.ApplicationUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.runtime.ApplicationRunnerMain;\n+import org.apache.samza.util.ConfigUtil;\n+\n+\n+public class DefaultApplicationMain {\n+\n+  public static void main(String[] args) {\n+    run(args);\n+  }\n+\n+  @VisibleForTesting\n+  static void run(String[] args) {\n+    // This branch is ONLY for Yarn deployments, standalone apps uses offspring\n+    final ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    cmdLine.parser().allowsUnrecognizedOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzMzM5NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxODU5OA==", "bodyText": "Does it it mean you pass options that are dynamic and are not known static list?", "url": "https://github.com/apache/samza/pull/1428#discussion_r486518598", "createdAt": "2020-09-10T17:37:28Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import joptsimple.OptionSet;\n+import org.apache.samza.application.ApplicationUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.runtime.ApplicationRunnerMain;\n+import org.apache.samza.util.ConfigUtil;\n+\n+\n+public class DefaultApplicationMain {\n+\n+  public static void main(String[] args) {\n+    run(args);\n+  }\n+\n+  @VisibleForTesting\n+  static void run(String[] args) {\n+    // This branch is ONLY for Yarn deployments, standalone apps uses offspring\n+    final ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    cmdLine.parser().allowsUnrecognizedOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzMzM5NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI3ODk4Mw==", "bodyText": "To answer your original questions, submission configs is a static list of configs predefined as they will impact how AM works, plus any extra config overrides user wants to supply in order to override the configs fetched in the ConfigLoader.\nThe complete workflow will be:\n\n\nsubmission configs are first passed to ClusterBasedJobCoordinatorRunner as System env variable and is retrieved with\nfinal String submissionEnv = System.getenv(ShellCommandConfig.ENV_SUBMISSION_CONFIG);\n\n\nAfterwards, when ClusterBasedJobCoordinatorRunner invokes app.main.class, the above submission configs will be converted to String[] args as this is the only parameter that main() method takes.\n\n\nInside main() method, including both Beam and High/Low, args will be used to load full job config with ConfigLoaderFactory", "url": "https://github.com/apache/samza/pull/1428#discussion_r487278983", "createdAt": "2020-09-11T20:37:28Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import joptsimple.OptionSet;\n+import org.apache.samza.application.ApplicationUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.runtime.ApplicationRunnerMain;\n+import org.apache.samza.util.ConfigUtil;\n+\n+\n+public class DefaultApplicationMain {\n+\n+  public static void main(String[] args) {\n+    run(args);\n+  }\n+\n+  @VisibleForTesting\n+  static void run(String[] args) {\n+    // This branch is ONLY for Yarn deployments, standalone apps uses offspring\n+    final ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    cmdLine.parser().allowsUnrecognizedOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzMzM5NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NzI4NDg2Mw==", "bodyText": "Thanks for the explanation \ud83d\udc4d", "url": "https://github.com/apache/samza/pull/1428#discussion_r487284863", "createdAt": "2020-09-11T20:51:35Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/DefaultApplicationMain.java", "diffHunk": "@@ -0,0 +1,47 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import com.google.common.annotations.VisibleForTesting;\n+import joptsimple.OptionSet;\n+import org.apache.samza.application.ApplicationUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.runtime.ApplicationRunnerMain;\n+import org.apache.samza.util.ConfigUtil;\n+\n+\n+public class DefaultApplicationMain {\n+\n+  public static void main(String[] args) {\n+    run(args);\n+  }\n+\n+  @VisibleForTesting\n+  static void run(String[] args) {\n+    // This branch is ONLY for Yarn deployments, standalone apps uses offspring\n+    final ApplicationRunnerMain.ApplicationRunnerCommandLine cmdLine = new ApplicationRunnerMain.ApplicationRunnerCommandLine();\n+    cmdLine.parser().allowsUnrecognizedOptions();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzMzM5NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 39}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzA0MjY5OTczOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/config/ApplicationConfig.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNTozMDo0MFrOHP5vpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0xMFQxNzozNzo0M1rOHP-vyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNjc3NA==", "bodyText": "Looks like this is unused. Do you where this is used/will be used?\nNow that main class is no longer optional, wondering if this should be too?", "url": "https://github.com/apache/samza/pull/1428#discussion_r486436774", "createdAt": "2020-09-10T15:30:40Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/config/ApplicationConfig.java", "diffHunk": "@@ -104,8 +105,8 @@ public ApplicationMode getAppMode() {\n     return Optional.ofNullable(get(APP_MAIN_ARGS));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUwMzM3Ng==", "bodyText": "This particular method is not being used as the current toArgs() method is checking the key name directly. We can remove this method.", "url": "https://github.com/apache/samza/pull/1428#discussion_r486503376", "createdAt": "2020-09-10T17:11:35Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/config/ApplicationConfig.java", "diffHunk": "@@ -104,8 +105,8 @@ public ApplicationMode getAppMode() {\n     return Optional.ofNullable(get(APP_MAIN_ARGS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNjc3NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjUxODczMQ==", "bodyText": "sounds good to me. If you can remove it, that will be great.", "url": "https://github.com/apache/samza/pull/1428#discussion_r486518731", "createdAt": "2020-09-10T17:37:43Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/config/ApplicationConfig.java", "diffHunk": "@@ -104,8 +105,8 @@ public ApplicationMode getAppMode() {\n     return Optional.ofNullable(get(APP_MAIN_ARGS));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NjQzNjc3NA=="}, "originalCommit": {"oid": "6fd6dbff23322c707797aee8b575fddba1ae62d2"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1513, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}