{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyODcxNzkz", "number": 1452, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMTo0NjozMlrOFBDBrQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NjowN1rOFB2IOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjQyNDc3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMTo0NjozMlrOH_n_1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMTo0NjozMlrOH_n_1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ3NzY1NA==", "bodyText": "It will kill the thread and recreate one. I'd suggest instead to proceed with exit code as below except log the error of the exception too.\nRecreating the thread doesn't guarantee that the subsequent thread can recover from the previous error and potentially run into this in a loop of some sorts without any concrete action.", "url": "https://github.com/apache/samza/pull/1452#discussion_r536477654", "createdAt": "2020-12-05T01:46:32Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "diffHunk": "@@ -92,8 +93,13 @@ public void start() {\n       if (!response.isAlive()) {\n         if (isApplicationMasterHighAvailabilityEnabled) {\n           LOG.warn(\"Failed to establish connection with {}. Checking for new AM\", coordinatorUrl);\n-          if (checkAndEstablishConnectionWithNewAM()) {\n-            return;\n+          try {\n+            if (checkAndEstablishConnectionWithNewAM()) {\n+              return;\n+            }\n+          } catch (Exception e) {\n+            LOG.warn(\"Exception trying to connect with new AM\", e);\n+            throw new SamzaException(e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0971470d56105e69f28db68d3cb1c140d1c95864"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NjQyODEyOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMTo0ODo0MlrOH_oBWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNVQwMTo0ODo0MlrOH_oBWQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjQ3ODA0MQ==", "bodyText": "Should be a LOG.error as this is fatal and should be treat as such.", "url": "https://github.com/apache/samza/pull/1452#discussion_r536478041", "createdAt": "2020-12-05T01:48:42Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "diffHunk": "@@ -92,8 +93,13 @@ public void start() {\n       if (!response.isAlive()) {\n         if (isApplicationMasterHighAvailabilityEnabled) {\n           LOG.warn(\"Failed to establish connection with {}. Checking for new AM\", coordinatorUrl);\n-          if (checkAndEstablishConnectionWithNewAM()) {\n-            return;\n+          try {\n+            if (checkAndEstablishConnectionWithNewAM()) {\n+              return;\n+            }\n+          } catch (Exception e) {\n+            LOG.warn(\"Exception trying to connect with new AM\", e);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0971470d56105e69f28db68d3cb1c140d1c95864"}, "originalPosition": 19}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM3NDc5NzM3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NjowN1rOIAtH0Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wN1QxNTo0NjowN1rOIAtH0Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNzYxMDE5Mw==", "bodyText": "nit: typo s/cconnection/connection", "url": "https://github.com/apache/samza/pull/1452#discussion_r537610193", "createdAt": "2020-12-07T15:46:07Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/main/java/org/apache/samza/container/ContainerHeartbeatMonitor.java", "diffHunk": "@@ -92,17 +93,19 @@ public void start() {\n       if (!response.isAlive()) {\n         if (isApplicationMasterHighAvailabilityEnabled) {\n           LOG.warn(\"Failed to establish connection with {}. Checking for new AM\", coordinatorUrl);\n-          if (checkAndEstablishConnectionWithNewAM()) {\n+          try {\n+            if (checkAndEstablishConnectionWithNewAM()) {\n+              return;\n+            }\n+          } catch (Exception e) {\n+            // On exception in re-establish connection with new AM, force exit.\n+            LOG.error(\"Exception trying to connect with new AM\", e);\n+            forceExit(\"failure in establishing cconnection with new AM\", 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d2f1a256d40b26536701595a0c5ea92b3974fd0f"}, "originalPosition": 20}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1388, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}