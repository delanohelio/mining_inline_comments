{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDAyOTc3NTEw", "number": 1344, "title": "SAMZA-2510: Incorrect shutdown status due to race between runloop and process callback thread", "bodyText": "Symptom: A race between the process callback thread and the runloop thread can result in incorrect shutdown status for shutdown triggered by end of stream.\nIssue: Currently runloop performs message choosing and dispatching in a loop indefinitely until interrupted by a shutdown request or an exception during processing. In async mode, message completion is notified by the process callback thread using onComplete() and onFailure() to represent corresponding success and failure. The failure callback updates the exception code within the runloop to notify processing failures. Similarly, shutdown can be requested by user code or end of stream messages through various scopes(task level, container level). These requests are notified to the runloop through shutdownNow flag.\nCurrently as long as shutdownNow flag is not set, the exception code is promptly seen by the runloop and propagated upstream correctly. However, if a shutdown triggered by end of stream is requested, runloop doesn't check the exception code before exiting.\nChanges: Make sure we check the exception code before we exit. Also, set the exception code on process failure before updating the state to done to promptly signal runloop about failure.\nTests: Added unit tests to check if the exception is thrown even if the shutdown is requested ahead of callback failure.\nAPI Changes: None\nUsage Instructions: None\nUpgrade Instructions: None", "createdAt": "2020-04-14T05:30:00Z", "url": "https://github.com/apache/samza/pull/1344", "merged": true, "mergeCommit": {"oid": "470ae2c375168c3548a49263579db0d2dc51e9d0"}, "closed": true, "closedAt": "2020-04-15T23:08:21Z", "author": {"login": "mynameborat"}, "timelineItems": {"totalCount": 8, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcXckAwgH2gAyNDAyOTc3NTEwOmQ3YTc1NmNhNWI1OTNkZjAzNzM2OGUxMzcyOWMxNDQ5Y2JkYzFhZTc=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcX_fn3AFqTM5NDE2ODAyOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d7a756ca5b593df037368e13729c1449cbdc1ae7", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/d7a756ca5b593df037368e13729c1449cbdc1ae7", "committedDate": "2020-04-14T05:23:01Z", "message": "SAMZA-2510: Incorrect shutdown status due to race between runloop thread and process callback thread"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMzA3MjQ5", "url": "https://github.com/apache/samza/pull/1344#pullrequestreview-393307249", "createdAt": "2020-04-14T21:25:23Z", "commit": {"oid": "d7a756ca5b593df037368e13729c1449cbdc1ae7"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMToyNToyM1rOGFhg8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMTozNDoyMlrOGFhy2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0NTE3MA==", "bodyText": "Will this test just trigger the throwable != null condition (and not the shutdownNow condition) for exiting the main while loop? It seems like the envelope0 gets submitted and then processing starts, so throwable could get set before ssp0EndOfStream even gets seen. It seems like it depends on when the context switch happens.\nIf it is non-deterministic what the test is actually covering, then maybe just turn this into a testExceptionIsPropagated test (I think this class might need a test for that anyways).\nIf you think it's worth maintaining a test for this race, maybe you could put a latch into TestTask processing somewhere, so you could make sure shutdownNow gets set (you could use RunLoop.shutdown to set the flag) before the throwable gets set.", "url": "https://github.com/apache/samza/pull/1344#discussion_r408445170", "createdAt": "2020-04-14T21:25:23Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/test/java/org/apache/samza/container/TestRunLoop.java", "diffHunk": "@@ -780,4 +782,27 @@ public void testProcessBehaviourWhenAsyncCommitIsEnabled() throws InterruptedExc\n \n     commitLatch.await();\n   }\n+\n+  @Test(expected = SamzaException.class)\n+  public void testExceptionIsPropagatedAfterShutdown() {\n+    SystemConsumers consumerMultiplexer = mock(SystemConsumers.class);\n+    when(consumerMultiplexer.pollIntervalMs()).thenReturn(10);\n+    OffsetManager offsetManager = mock(OffsetManager.class);\n+\n+    TestTask task0 = new TestTask(false, false, false, null);\n+    TaskInstance t0 = createTaskInstance(task0, taskName0, ssp0, offsetManager, consumerMultiplexer);\n+\n+    Map<TaskName, TaskInstance> tasks = ImmutableMap.of(taskName0, t0);\n+\n+    int maxMessagesInFlight = 2;\n+    RunLoop runLoop = new RunLoop(tasks, executor, consumerMultiplexer, maxMessagesInFlight, windowMs, commitMs,\n+        callbackTimeoutMs, maxThrottlingDelayMs, maxIdleMs, containerMetrics,\n+        () -> 0L, false);\n+    when(consumerMultiplexer.choose(false))\n+        .thenReturn(envelope0)\n+        .thenReturn(ssp0EndOfStream)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7a756ca5b593df037368e13729c1449cbdc1ae7"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0NjQ0MQ==", "bodyText": "Could you please put a comment about why abort has to go before doneProcess?", "url": "https://github.com/apache/samza/pull/1344#discussion_r408446441", "createdAt": "2020-04-14T21:27:48Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/container/RunLoop.java", "diffHunk": "@@ -648,8 +648,8 @@ public void run() {\n     @Override\n     public void onFailure(TaskCallback callback, Throwable t) {\n       try {\n-        state.doneProcess();\n         abort(t);\n+        state.doneProcess();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7a756ca5b593df037368e13729c1449cbdc1ae7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQ0OTc1NA==", "bodyText": "Is the following scenario possible?\n\nAsync processing has a bad message in flight\nManual call to RunLoop.shutdown\nExit main while loop\nthrowable is still null since async processing is incomplete\nAsync processing throws exception\nContainer will exit with \"success\"", "url": "https://github.com/apache/samza/pull/1344#discussion_r408449754", "createdAt": "2020-04-14T21:34:22Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/container/RunLoop.java", "diffHunk": "@@ -185,6 +180,11 @@ public void run() {\n           containerMetrics.utilization().set(((double) activeNs) / totalNs);\n         }\n       }\n+\n+      if (throwable != null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7a756ca5b593df037368e13729c1449cbdc1ae7"}, "originalPosition": 19}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2a5256867ffafb175f51f5cca807348ed8c4b120", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/2a5256867ffafb175f51f5cca807348ed8c4b120", "committedDate": "2020-04-14T23:08:11Z", "message": "Address review comments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c29c3fbf891562d6c7b27e5f850d19a9dee25b05", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/c29c3fbf891562d6c7b27e5f850d19a9dee25b05", "committedDate": "2020-04-15T16:57:52Z", "message": "Java doc update and consolidated unit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58552ce8860bafe1077811b7a7566d6f4fb43e41", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/58552ce8860bafe1077811b7a7566d6f4fb43e41", "committedDate": "2020-04-15T21:01:21Z", "message": "Removing the end of stream check since its indeterministic and avoids confusion on the behavior of the test"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d6d30893ea953baf44ca33095b95543154b62415", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/d6d30893ea953baf44ca33095b95543154b62415", "committedDate": "2020-04-15T21:03:11Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4448188be36b5c1a3929aac9fdd7c8b42aba1117", "author": {"user": {"login": "mynameborat", "name": null}}, "url": "https://github.com/apache/samza/commit/4448188be36b5c1a3929aac9fdd7c8b42aba1117", "committedDate": "2020-04-15T21:04:51Z", "message": "Remove unused code in runloop"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0MTY4MDI5", "url": "https://github.com/apache/samza/pull/1344#pullrequestreview-394168029", "createdAt": "2020-04-15T22:04:54Z", "commit": {"oid": "4448188be36b5c1a3929aac9fdd7c8b42aba1117"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4563, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}