{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzkwMTQ4MzAw", "number": 1318, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo0Mjo1N1rODo70sA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo0Mzo0MVrODo71Fg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjQ5Nzc2OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo0Mjo1N1rOF3yyiw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo1MTo1MVrOF3y67Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0ODEzOQ==", "bodyText": "Please add javadoc to this class, including a note about this will be invoked in both Samza api as well as beam api, so any change needs to be tested in both.", "url": "https://github.com/apache/samza/pull/1318#discussion_r394048139", "createdAt": "2020-03-18T00:42:57Z", "author": {"login": "xinyuiscool"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import java.util.List;\n+import org.apache.samza.SamzaException;\n+import org.apache.samza.application.SamzaApplication;\n+import org.apache.samza.application.descriptors.ApplicationDescriptor;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorImpl;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.config.JobConfig;\n+import org.apache.samza.coordinator.metadatastore.CoordinatorStreamStore;\n+import org.apache.samza.execution.RemoteJobPlanner;\n+import org.apache.samza.metadatastore.MetadataStore;\n+import org.apache.samza.metrics.MetricsRegistryMap;\n+import org.apache.samza.util.CoordinatorStreamUtil;\n+import org.apache.samza.util.DiagnosticsUtil;\n+\n+\n+public class JobCoordinatorLaunchUtil {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8f9f8265e58a3fcf46b5a8a8fe288b179334eff"}, "originalPosition": 37}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1MDI4NQ==", "bodyText": "Updated", "url": "https://github.com/apache/samza/pull/1318#discussion_r394050285", "createdAt": "2020-03-18T00:51:51Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import java.util.List;\n+import org.apache.samza.SamzaException;\n+import org.apache.samza.application.SamzaApplication;\n+import org.apache.samza.application.descriptors.ApplicationDescriptor;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorImpl;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.config.JobConfig;\n+import org.apache.samza.coordinator.metadatastore.CoordinatorStreamStore;\n+import org.apache.samza.execution.RemoteJobPlanner;\n+import org.apache.samza.metadatastore.MetadataStore;\n+import org.apache.samza.metrics.MetricsRegistryMap;\n+import org.apache.samza.util.CoordinatorStreamUtil;\n+import org.apache.samza.util.DiagnosticsUtil;\n+\n+\n+public class JobCoordinatorLaunchUtil {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0ODEzOQ=="}, "originalCommit": {"oid": "e8f9f8265e58a3fcf46b5a8a8fe288b179334eff"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ0MjQ5ODc4OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo0Mzo0MVrOF3yzNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0xOFQwMDo1MTo1NFrOF3y6-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0ODMwOQ==", "bodyText": "Could you make a comment about where the metasdatastore will be closed?", "url": "https://github.com/apache/samza/pull/1318#discussion_r394048309", "createdAt": "2020-03-18T00:43:41Z", "author": {"login": "xinyuiscool"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import java.util.List;\n+import org.apache.samza.SamzaException;\n+import org.apache.samza.application.SamzaApplication;\n+import org.apache.samza.application.descriptors.ApplicationDescriptor;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorImpl;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.config.JobConfig;\n+import org.apache.samza.coordinator.metadatastore.CoordinatorStreamStore;\n+import org.apache.samza.execution.RemoteJobPlanner;\n+import org.apache.samza.metadatastore.MetadataStore;\n+import org.apache.samza.metrics.MetricsRegistryMap;\n+import org.apache.samza.util.CoordinatorStreamUtil;\n+import org.apache.samza.util.DiagnosticsUtil;\n+\n+\n+public class JobCoordinatorLaunchUtil {\n+  /**\n+   * Run {@link ClusterBasedJobCoordinator} with full job config.\n+   *\n+   * @param app SamzaApplication to run.\n+   * @param config full job config.\n+   */\n+  @SuppressWarnings(\"rawtypes\")\n+  public static void run(SamzaApplication app, Config config) {\n+    // Execute planning\n+    ApplicationDescriptorImpl<? extends ApplicationDescriptor>\n+        appDesc = ApplicationDescriptorUtil.getAppDescriptor(app, config);\n+    RemoteJobPlanner planner = new RemoteJobPlanner(appDesc);\n+    List<JobConfig> jobConfigs = planner.prepareJobs();\n+\n+    if (jobConfigs.size() != 1) {\n+      throw new SamzaException(\"Only support single remote job is supported.\");\n+    }\n+\n+    Config finalConfig = jobConfigs.get(0);\n+\n+    // This needs to be consistent with RemoteApplicationRunner#run where JobRunner#submit to be called instead of JobRunner#run\n+    CoordinatorStreamUtil.writeConfigToCoordinatorStream(finalConfig, true);\n+    DiagnosticsUtil.createDiagnosticsStream(finalConfig);\n+    MetricsRegistryMap metrics = new MetricsRegistryMap();\n+    MetadataStore\n+        metadataStore = new CoordinatorStreamStore(CoordinatorStreamUtil.buildCoordinatorStreamConfig(finalConfig), metrics);\n+    metadataStore.init();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e8f9f8265e58a3fcf46b5a8a8fe288b179334eff"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA1MDI5Nw==", "bodyText": "Updated", "url": "https://github.com/apache/samza/pull/1318#discussion_r394050297", "createdAt": "2020-03-18T00:51:54Z", "author": {"login": "kw2542"}, "path": "samza-core/src/main/java/org/apache/samza/clustermanager/JobCoordinatorLaunchUtil.java", "diffHunk": "@@ -0,0 +1,74 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+package org.apache.samza.clustermanager;\n+\n+import java.util.List;\n+import org.apache.samza.SamzaException;\n+import org.apache.samza.application.SamzaApplication;\n+import org.apache.samza.application.descriptors.ApplicationDescriptor;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorImpl;\n+import org.apache.samza.application.descriptors.ApplicationDescriptorUtil;\n+import org.apache.samza.config.Config;\n+import org.apache.samza.config.JobConfig;\n+import org.apache.samza.coordinator.metadatastore.CoordinatorStreamStore;\n+import org.apache.samza.execution.RemoteJobPlanner;\n+import org.apache.samza.metadatastore.MetadataStore;\n+import org.apache.samza.metrics.MetricsRegistryMap;\n+import org.apache.samza.util.CoordinatorStreamUtil;\n+import org.apache.samza.util.DiagnosticsUtil;\n+\n+\n+public class JobCoordinatorLaunchUtil {\n+  /**\n+   * Run {@link ClusterBasedJobCoordinator} with full job config.\n+   *\n+   * @param app SamzaApplication to run.\n+   * @param config full job config.\n+   */\n+  @SuppressWarnings(\"rawtypes\")\n+  public static void run(SamzaApplication app, Config config) {\n+    // Execute planning\n+    ApplicationDescriptorImpl<? extends ApplicationDescriptor>\n+        appDesc = ApplicationDescriptorUtil.getAppDescriptor(app, config);\n+    RemoteJobPlanner planner = new RemoteJobPlanner(appDesc);\n+    List<JobConfig> jobConfigs = planner.prepareJobs();\n+\n+    if (jobConfigs.size() != 1) {\n+      throw new SamzaException(\"Only support single remote job is supported.\");\n+    }\n+\n+    Config finalConfig = jobConfigs.get(0);\n+\n+    // This needs to be consistent with RemoteApplicationRunner#run where JobRunner#submit to be called instead of JobRunner#run\n+    CoordinatorStreamUtil.writeConfigToCoordinatorStream(finalConfig, true);\n+    DiagnosticsUtil.createDiagnosticsStream(finalConfig);\n+    MetricsRegistryMap metrics = new MetricsRegistryMap();\n+    MetadataStore\n+        metadataStore = new CoordinatorStreamStore(CoordinatorStreamUtil.buildCoordinatorStreamConfig(finalConfig), metrics);\n+    metadataStore.init();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5NDA0ODMwOQ=="}, "originalCommit": {"oid": "e8f9f8265e58a3fcf46b5a8a8fe288b179334eff"}, "originalPosition": 64}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1609, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}