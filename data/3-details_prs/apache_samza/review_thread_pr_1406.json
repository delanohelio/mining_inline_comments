{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwMzE4Mzc5", "number": 1406, "reviewThreads": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMDo1M1rOEULR3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyMjoxMVrOEVM4YA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NTkxNzc0OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMDowMDo1M1rOG6UfyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxNzozNDozOFrOG8Txow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNjQwOA==", "bodyText": "Why do we want to add the config to the metric-header?\nThat way the entire config map (potentially 10s of MB of data) will be emitted in every message.\nThis is NOT what we want to do right?\nInstead we want to emit it in the MetricsMessage, but exactly once at container start (first message) not in every message.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463806408", "createdAt": "2020-07-31T20:00:53Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -70,7 +70,7 @@ public static void writeMetadataFile(String jobName, String jobId, String contai\n       MetricsHeader metricsHeader =\n           new MetricsHeader(jobName, jobId, \"samza-container-\" + containerId, execEnvContainerId.orElse(\"\"),\n               LocalContainerRunner.class.getName(), Util.getTaskClassVersion(config), Util.getSamzaVersion(),\n-              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis());\n+              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis(), config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg3NzE4Mw==", "bodyText": "+1 I agree we should only pick the fields we are interested in. I suggest we create a versioned model (JSON serializable) that holds the fields we are interested in.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463877183", "createdAt": "2020-07-31T22:48:54Z", "author": {"login": "abhishekshivanna"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -70,7 +70,7 @@ public static void writeMetadataFile(String jobName, String jobId, String contai\n       MetricsHeader metricsHeader =\n           new MetricsHeader(jobName, jobId, \"samza-container-\" + containerId, execEnvContainerId.orElse(\"\"),\n               LocalContainerRunner.class.getName(), Util.getTaskClassVersion(config), Util.getSamzaVersion(),\n-              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis());\n+              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis(), config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNjQwOA=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTg5MTc0Nw==", "bodyText": "Removed the config from the MetricsHeader.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465891747", "createdAt": "2020-08-05T17:34:38Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -70,7 +70,7 @@ public static void writeMetadataFile(String jobName, String jobId, String contai\n       MetricsHeader metricsHeader =\n           new MetricsHeader(jobName, jobId, \"samza-container-\" + containerId, execEnvContainerId.orElse(\"\"),\n               LocalContainerRunner.class.getName(), Util.getTaskClassVersion(config), Util.getSamzaVersion(),\n-              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis());\n+              Util.getLocalHost().getHostName(), System.currentTimeMillis(), System.currentTimeMillis(), config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2MzgwNjQwOA=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI3OTQxOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozMTo0N1rOG6Xh9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDowNzo1NFrOG6Zw-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NjExNg==", "bodyText": "Javadoc?", "url": "https://github.com/apache/samza/pull/1406#discussion_r463856116", "createdAt": "2020-07-31T21:31:47Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -155,6 +158,10 @@ public void addProcessorStopEvents(List<ProcessorStopEvent> stopEventList) {\n     }\n   }\n \n+  public void addConfig(Config config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MjcyOA==", "bodyText": "Added.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463892728", "createdAt": "2020-08-01T00:07:54Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -155,6 +158,10 @@ public void addProcessorStopEvents(List<ProcessorStopEvent> stopEventList) {\n     }\n   }\n \n+  public void addConfig(Config config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NjExNg=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI4MDM3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozMjoxMlrOG6XifQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDowNzo0NFrOG6Zw3Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NjI1Mw==", "bodyText": "See comment above,\nconfig is not required to be in the header.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463856253", "createdAt": "2020-07-31T21:32:12Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -60,17 +62,18 @@\n   private static final String CONTAINER_THREAD_POOL_SIZE_METRIC_NAME = \"containerThreadPoolSize\";\n   private static final String CONTAINER_MODELS_METRIC_NAME = \"containerModels\";\n   private static final String AUTOSIZING_ENABLED_METRIC_NAME = \"autosizingEnabled\";\n+  private static final String CONFIG = \"config\";\n \n   private final MetricsHeader metricsHeader;\n   private final Map<String, Map<String, Object>> metricsMessage;\n \n   public DiagnosticsStreamMessage(String jobName, String jobId, String containerName, String executionEnvContainerId,\n-      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp) {\n+      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp, Map<String, String> config) {\n \n     // Create the metricHeader\n     metricsHeader =\n         new MetricsHeader(jobName, jobId, containerName, executionEnvContainerId, DiagnosticsManager.class.getName(),\n-            taskClassVersion, samzaVersion, hostname, timestamp, resetTimestamp);\n+            taskClassVersion, samzaVersion, hostname, timestamp, resetTimestamp, config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MjcwMQ==", "bodyText": "Removed.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463892701", "createdAt": "2020-08-01T00:07:44Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -60,17 +62,18 @@\n   private static final String CONTAINER_THREAD_POOL_SIZE_METRIC_NAME = \"containerThreadPoolSize\";\n   private static final String CONTAINER_MODELS_METRIC_NAME = \"containerModels\";\n   private static final String AUTOSIZING_ENABLED_METRIC_NAME = \"autosizingEnabled\";\n+  private static final String CONFIG = \"config\";\n \n   private final MetricsHeader metricsHeader;\n   private final Map<String, Map<String, Object>> metricsMessage;\n \n   public DiagnosticsStreamMessage(String jobName, String jobId, String containerName, String executionEnvContainerId,\n-      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp) {\n+      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp, Map<String, String> config) {\n \n     // Create the metricHeader\n     metricsHeader =\n         new MetricsHeader(jobName, jobId, containerName, executionEnvContainerId, DiagnosticsManager.class.getName(),\n-            taskClassVersion, samzaVersion, hostname, timestamp, resetTimestamp);\n+            taskClassVersion, samzaVersion, hostname, timestamp, resetTimestamp, config);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NjI1Mw=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI4MzE3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozMzo0OVrOG6XkaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDowODowNVrOG6ZxIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1Njc0NA==", "bodyText": "Javadoc?", "url": "https://github.com/apache/samza/pull/1406#discussion_r463856744", "createdAt": "2020-07-31T21:33:49Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -228,6 +235,10 @@ public Boolean getAutosizingEnabled() {\n     return (Boolean) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, AUTOSIZING_ENABLED_METRIC_NAME);\n   }\n \n+  public Config getConfig() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5Mjc2OQ==", "bodyText": "Added.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463892769", "createdAt": "2020-08-01T00:08:05Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -228,6 +235,10 @@ public Boolean getAutosizingEnabled() {\n     return (Boolean) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, AUTOSIZING_ENABLED_METRIC_NAME);\n   }\n \n+  public Config getConfig() {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1Njc0NA=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 45}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI4NTI0OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozNDo0MVrOG6XljA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDowNzozNVrOG6Zwwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NzAzNg==", "bodyText": "Because we dont need to add it to the header, we dont need to pass it in here.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463857036", "createdAt": "2020-07-31T21:34:41Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -60,17 +62,18 @@\n   private static final String CONTAINER_THREAD_POOL_SIZE_METRIC_NAME = \"containerThreadPoolSize\";\n   private static final String CONTAINER_MODELS_METRIC_NAME = \"containerModels\";\n   private static final String AUTOSIZING_ENABLED_METRIC_NAME = \"autosizingEnabled\";\n+  private static final String CONFIG = \"config\";\n \n   private final MetricsHeader metricsHeader;\n   private final Map<String, Map<String, Object>> metricsMessage;\n \n   public DiagnosticsStreamMessage(String jobName, String jobId, String containerName, String executionEnvContainerId,\n-      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp) {\n+      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp, Map<String, String> config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MjY3NA==", "bodyText": "Removed.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463892674", "createdAt": "2020-08-01T00:07:35Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -60,17 +62,18 @@\n   private static final String CONTAINER_THREAD_POOL_SIZE_METRIC_NAME = \"containerThreadPoolSize\";\n   private static final String CONTAINER_MODELS_METRIC_NAME = \"containerModels\";\n   private static final String AUTOSIZING_ENABLED_METRIC_NAME = \"autosizingEnabled\";\n+  private static final String CONFIG = \"config\";\n \n   private final MetricsHeader metricsHeader;\n   private final Map<String, Map<String, Object>> metricsMessage;\n \n   public DiagnosticsStreamMessage(String jobName, String jobId, String containerName, String executionEnvContainerId,\n-      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp) {\n+      String taskClassVersion, String samzaVersion, String hostname, long timestamp, long resetTimestamp, Map<String, String> config) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NzAzNg=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI4NjgzOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozNToyN1rOG6XmeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTozNToyN1rOG6XmeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1NzI3Mw==", "bodyText": "Not needed", "url": "https://github.com/apache/samza/pull/1406#discussion_r463857273", "createdAt": "2020-07-31T21:35:27Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -237,7 +248,7 @@ public static DiagnosticsStreamMessage convertToDiagnosticsStreamMessage(Metrics\n             metricsSnapshot.getHeader().getContainerName(), metricsSnapshot.getHeader().getExecEnvironmentContainerId(),\n             metricsSnapshot.getHeader().getVersion(), metricsSnapshot.getHeader().getSamzaVersion(),\n             metricsSnapshot.getHeader().getHost(), metricsSnapshot.getHeader().getTime(),\n-            metricsSnapshot.getHeader().getResetTime());\n+            metricsSnapshot.getHeader().getResetTime(), metricsSnapshot.getHeader().getConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 57}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI5NzA1OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsHeader.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDoyNVrOG6Xslg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDoyNVrOG6Xslg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1ODgzOA==", "bodyText": "remove", "url": "https://github.com/apache/samza/pull/1406#discussion_r463858838", "createdAt": "2020-07-31T21:40:25Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsHeader.scala", "diffHunk": "@@ -66,6 +68,7 @@ class MetricsHeader(\n     map.put(\"host\", host)\n     map.put(\"time\", time: java.lang.Long)\n     map.put(\"reset-time\", resetTime: java.lang.Long)\n+    map.put(\"config\", config)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI5NzY2OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsSnapshotReporter.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDozOVrOG6Xs7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDozOVrOG6Xs7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1ODkyNg==", "bodyText": "see comment above.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463858926", "createdAt": "2020-07-31T21:40:39Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsSnapshotReporter.scala", "diffHunk": "@@ -148,7 +149,7 @@ class MetricsSnapshotReporter(\n \n       // publish to Kafka only if the metricsMsg carries any metrics\n       if (!metricsMsg.isEmpty) {\n-        val header = new MetricsHeader(jobName, jobId, containerName, execEnvironmentContainerId, source, version, samzaVersion, host, clock(), resetTime)\n+        val header = new MetricsHeader(jobName, jobId, containerName, execEnvironmentContainerId, source, version, samzaVersion, host, clock(), resetTime, config)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjI5Nzg4OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsSnapshotReporterFactory.scala", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDo1MFrOG6XtEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0MDo1MFrOG6XtEw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg1ODk2Mw==", "bodyText": "remove", "url": "https://github.com/apache/samza/pull/1406#discussion_r463858963", "createdAt": "2020-07-31T21:40:50Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/metrics/reporter/MetricsSnapshotReporterFactory.scala", "diffHunk": "@@ -124,7 +124,9 @@ class MetricsSnapshotReporterFactory extends MetricsReporterFactory with Logging\n       Util.getTaskClassVersion(config),\n       Util.getSamzaVersion,\n       Util.getLocalHost.getHostName,\n-      serde, blacklist)\n+      serde,\n+      blacklist,\n+      config)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjMxMDI3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0zMVQyMTo0Njo0OVrOG6X0YQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0MzoyMFrOG6aF_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2MDgzMw==", "bodyText": "Please add additional configs to make it somewhat representative of the configs that we want to emit.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463860833", "createdAt": "2020-07-31T21:46:49Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "diffHunk": "@@ -59,6 +62,7 @@\n   private int numPersistentStores = 2;\n   private int containerNumCores = 2;\n   private boolean autosizingEnabled = false;\n+  private Config config = new MapConfig(ImmutableMap.of(\"job.name\", jobName, \"job.id\", jobId));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODEwOA==", "bodyText": "Done.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463898108", "createdAt": "2020-08-01T00:43:20Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "diffHunk": "@@ -59,6 +62,7 @@\n   private int numPersistentStores = 2;\n   private int containerNumCores = 2;\n   private boolean autosizingEnabled = false;\n+  private Config config = new MapConfig(ImmutableMap.of(\"job.name\", jobName, \"job.id\", jobId));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg2MDgzMw=="}, "originalCommit": {"oid": "37d9fba55a6cc63e9191c931f33597ea41b8092a"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjUyODc5OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDoxMDoxMVrOG6ZyaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDoxMDoxMVrOG6ZyaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5MzA5Ng==", "bodyText": "Nit: CONFIG_METRIC_NAME", "url": "https://github.com/apache/samza/pull/1406#discussion_r463893096", "createdAt": "2020-08-01T00:10:11Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -60,6 +62,7 @@\n   private static final String CONTAINER_THREAD_POOL_SIZE_METRIC_NAME = \"containerThreadPoolSize\";\n   private static final String CONTAINER_MODELS_METRIC_NAME = \"containerModels\";\n   private static final String AUTOSIZING_ENABLED_METRIC_NAME = \"autosizingEnabled\";\n+  private static final String CONFIG = \"config\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU2MjY2OnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestMetricsSnapshotSerdeV2.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDozOTozNVrOG6aEEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowMzoyMVrOG70ZeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5NzYxNg==", "bodyText": "Remove?", "url": "https://github.com/apache/samza/pull/1406#discussion_r463897616", "createdAt": "2020-08-01T00:39:35Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestMetricsSnapshotSerdeV2.java", "diffHunk": "@@ -37,8 +37,8 @@\n   @Test\n   public void testSerde() {\n     MetricsHeader metricsHeader =\n-        new MetricsHeader(\"jobName\", \"i001\", \"container 0\", \"test container ID\", \"source\", \"300.14.25.1\", \"1\", \"1\", 1,\n-            1);\n+        new MetricsHeader(\"jobName\", \"i001\", \"container 0\", \"test container ID\",\n+            \"source\", \"300.14.25.1\", \"1\", \"1\", 1, 1);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzY1Nw==", "bodyText": "Removed.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465377657", "createdAt": "2020-08-04T23:03:21Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/test/java/org/apache/samza/serializers/model/serializers/TestMetricsSnapshotSerdeV2.java", "diffHunk": "@@ -37,8 +37,8 @@\n   @Test\n   public void testSerde() {\n     MetricsHeader metricsHeader =\n-        new MetricsHeader(\"jobName\", \"i001\", \"container 0\", \"test container ID\", \"source\", \"300.14.25.1\", \"1\", \"1\", 1,\n-            1);\n+        new MetricsHeader(\"jobName\", \"i001\", \"container 0\", \"test container ID\",\n+            \"source\", \"300.14.25.1\", \"1\", \"1\", 1, 1);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5NzYxNg=="}, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU2NTM5OnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/scala/org/apache/samza/serializers/TestMetricsSnapshotSerde.scala", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0MjowMVrOG6aFag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowMzowN1rOG70ZKg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5Nzk2Mg==", "bodyText": "Remove?\nThis code branch and test need not be updated.\nTo test we need to test equality on the header-map and the metric map, not just their keyset, and specific keys (jobname, jobid)", "url": "https://github.com/apache/samza/pull/1406#discussion_r463897962", "createdAt": "2020-08-01T00:42:01Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/scala/org/apache/samza/serializers/TestMetricsSnapshotSerde.scala", "diffHunk": "@@ -43,6 +39,9 @@ class TestMetricsSnapshotSerde {\n     val snapshot = new MetricsSnapshot(header, metrics)\n     val serde = new MetricsSnapshotSerde()\n     val bytes = serde.toBytes(snapshot)\n-    assertTrue(serde.fromBytes(bytes).equals(metrics))\n+    val deserialized = serde.fromBytes(bytes)\n+    assertTrue(deserialized.getHeader.jobName.equals(snapshot.getHeader.jobName))\n+    assertTrue(deserialized.getHeader.jobId.equals(snapshot.getHeader.jobId))\n+    assertTrue(deserialized.getMetrics.immutableMetrics.keySet().equals(snapshot.getMetrics.immutableMetrics.keySet()))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 24}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3NzU3OA==", "bodyText": "Removed.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465377578", "createdAt": "2020-08-04T23:03:07Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/test/scala/org/apache/samza/serializers/TestMetricsSnapshotSerde.scala", "diffHunk": "@@ -43,6 +39,9 @@ class TestMetricsSnapshotSerde {\n     val snapshot = new MetricsSnapshot(header, metrics)\n     val serde = new MetricsSnapshotSerde()\n     val bytes = serde.toBytes(snapshot)\n-    assertTrue(serde.fromBytes(bytes).equals(metrics))\n+    val deserialized = serde.fromBytes(bytes)\n+    assertTrue(deserialized.getHeader.jobName.equals(snapshot.getHeader.jobName))\n+    assertTrue(deserialized.getHeader.jobId.equals(snapshot.getHeader.jobId))\n+    assertTrue(deserialized.getMetrics.immutableMetrics.keySet().equals(snapshot.getMetrics.immutableMetrics.keySet()))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5Nzk2Mg=="}, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 24}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU2NjIxOnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/java/org/apache/samza/metrics/TestMetricsSnapshotReporter.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0Mjo1N1rOG6aF3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0Mjo1N1rOG6aF3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODA3OA==", "bodyText": "remove?", "url": "https://github.com/apache/samza/pull/1406#discussion_r463898078", "createdAt": "2020-08-01T00:42:57Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/java/org/apache/samza/metrics/TestMetricsSnapshotReporter.java", "diffHunk": "@@ -35,10 +35,7 @@\n import scala.Some;\n import scala.runtime.AbstractFunction0;\n \n-import static org.mockito.Mockito.mock;\n-import static org.mockito.Mockito.verify;\n-import static org.mockito.Mockito.times;\n-import static org.mockito.Mockito.eq;\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "35a54c6be7857153a39a15d9368666af979e6c68"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU2ODQzOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0NToxM1rOG6aG-g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0NToxM1rOG6aG-g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODM2Mg==", "bodyText": "config is a non-primitive object, cast to Map<String, String> here before serializing and adding into the map; similar to how containerModels are added above.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463898362", "createdAt": "2020-08-01T00:45:13Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -155,6 +158,14 @@ public void addProcessorStopEvents(List<ProcessorStopEvent> stopEventList) {\n     }\n   }\n \n+  /**\n+   * Add the job's config to the message.\n+   * @param config the config to add.\n+   */\n+  public void addConfig(Config config) {\n+    addToMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, CONFIG, config);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4609991b6ecda65cedf74e5cfc82ab036ae9278"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU2OTI2OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0NjoxOVrOG6aHbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowNzo0MlrOG70fJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODQ3OQ==", "bodyText": "Since we will serialize as Map<String, String>\ngetFromMetricsMessage will return a Map<String, String>\nthat needs to be converted to Config like this:\nnew MapConfig(getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, CONFIG));", "url": "https://github.com/apache/samza/pull/1406#discussion_r463898479", "createdAt": "2020-08-01T00:46:19Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -228,6 +239,14 @@ public Boolean getAutosizingEnabled() {\n     return (Boolean) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, AUTOSIZING_ENABLED_METRIC_NAME);\n   }\n \n+  /**\n+   * This method gets the config of the job from the MetricsMessage.\n+   * @return the config of the job.\n+   */\n+  public Config getConfig() {\n+    return (Config) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, CONFIG);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4609991b6ecda65cedf74e5cfc82ab036ae9278"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3OTExMA==", "bodyText": "Done.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465379110", "createdAt": "2020-08-04T23:07:42Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -228,6 +239,14 @@ public Boolean getAutosizingEnabled() {\n     return (Boolean) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, AUTOSIZING_ENABLED_METRIC_NAME);\n   }\n \n+  /**\n+   * This method gets the config of the job from the MetricsMessage.\n+   * @return the config of the job.\n+   */\n+  public Config getConfig() {\n+    return (Config) getFromMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, CONFIG);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODQ3OQ=="}, "originalCommit": {"oid": "f4609991b6ecda65cedf74e5cfc82ab036ae9278"}, "originalPosition": 41}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg5NjU3MDA1OnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQwMDo0NzoxMFrOG6aH0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzowNDowNlrOG70aVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODU3OA==", "bodyText": "Config does not define an equals method, so not sure how this test is working.", "url": "https://github.com/apache/samza/pull/1406#discussion_r463898578", "createdAt": "2020-08-01T00:47:10Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "diffHunk": "@@ -272,6 +278,7 @@ private void validateOutgoingMessageEnvelope(OutgoingMessageEnvelope outgoingMes\n     Assert.assertEquals(containerNumCores, diagnosticsStreamMessage.getContainerNumCores().intValue());\n     Assert.assertEquals(numPersistentStores, diagnosticsStreamMessage.getNumPersistentStores().intValue());\n     Assert.assertEquals(autosizingEnabled, diagnosticsStreamMessage.getAutosizingEnabled());\n+    Assert.assertEquals(config, diagnosticsStreamMessage.getConfig());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f4609991b6ecda65cedf74e5cfc82ab036ae9278"}, "originalPosition": 67}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM3Nzg3Ng==", "bodyText": "This invokes the equals method of MapConfig class.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465377876", "createdAt": "2020-08-04T23:04:06Z", "author": {"login": "PawasChhokra"}, "path": "samza-core/src/test/java/org/apache/samza/diagnostics/TestDiagnosticsManager.java", "diffHunk": "@@ -272,6 +278,7 @@ private void validateOutgoingMessageEnvelope(OutgoingMessageEnvelope outgoingMes\n     Assert.assertEquals(containerNumCores, diagnosticsStreamMessage.getContainerNumCores().intValue());\n     Assert.assertEquals(numPersistentStores, diagnosticsStreamMessage.getNumPersistentStores().intValue());\n     Assert.assertEquals(autosizingEnabled, diagnosticsStreamMessage.getAutosizingEnabled());\n+    Assert.assertEquals(config, diagnosticsStreamMessage.getConfig());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzg5ODU3OA=="}, "originalCommit": {"oid": "f4609991b6ecda65cedf74e5cfc82ab036ae9278"}, "originalPosition": 67}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkwNjY2NTkyOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyMjoxMVrOG70wjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNFQyMzoyMjoxMVrOG70wjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTM4MzU2NQ==", "bodyText": "Nit: The method definition could be\npublic void addConfig(Config config) { addToMetricsMessage(GROUP_NAME_FOR_DIAGNOSTICS_MANAGER, CONFIG_METRIC_NAME, (Map<String, String>) config); }\nSo that the cast-to-map logic is encapsulated in this class; and not visible to callers.", "url": "https://github.com/apache/samza/pull/1406#discussion_r465383565", "createdAt": "2020-08-04T23:22:11Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/scala/org/apache/samza/diagnostics/DiagnosticsStreamMessage.java", "diffHunk": "@@ -155,6 +158,14 @@ public void addProcessorStopEvents(List<ProcessorStopEvent> stopEventList) {\n     }\n   }\n \n+  /**\n+   * Add the job's config to the message.\n+   * @param config the config to add.\n+   */\n+  public void addConfig(Map<String, String> config) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fbddab0ee1935120c20c38de5fdf6b2f97aa89e6"}, "originalPosition": 25}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1480, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}