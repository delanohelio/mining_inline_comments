{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY0MzYzMDIz", "number": 1255, "title": "SAMZA-2429: Update LocalApplicatoinRunner to load full job config from config loader when present.", "bodyText": "Design:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\nChanges:\n\nUpdate unit test only public constructor of LocalApplicationRunner to take SamzaApplication and Config as well to be consistent with other constructors.\nUpdate private constructor of LocalApplicationRunner to take SamzaApplication and Config.\nUpdate private constructor of LocalApplicationRunner to load full job config when config loader is present.\n\nAPI Changes:\nLocalApplicationRunner's constructor now allows initial config/job submission config only instead of full job config, this is backward compatible as full job config is still supported.\nUpgrade Instructions:\nThis is part of a series PRs, detailed information will be provided in the last/main PR.\nUsage Instructions:\nThis is part of a series PRs, detailed information will be provided in the last/main PR.\nTests\nUnit tests", "createdAt": "2020-01-17T23:55:32Z", "url": "https://github.com/apache/samza/pull/1255", "merged": true, "mergeCommit": {"oid": "e6e0f46fae68f3315dcffe293b51863a83737606"}, "closed": true, "closedAt": "2020-01-30T18:26:03Z", "author": {"login": "kw2542"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb7Xsn0gH2gAyMzY0MzYzMDIzOjg4ZDg3NmY5NTZhYzAzMGRjNzNkZDZkN2RlYzAzYjI3ZGFlMTU2NDM=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb_P1RJgH2gAyMzY0MzYzMDIzOmI4MDgwMTdlYzM3ZWJlMDk1MWM5ODgxZmYzMDQzYTliZTMzOGMzZWU=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "88d876f956ac030dc73dd6d7dec03b27dae15643", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/88d876f956ac030dc73dd6d7dec03b27dae15643", "committedDate": "2020-01-17T23:53:01Z", "message": "SAMZA-2429: Update LocalApplicatoinRunner to load full job config from config loader when present.\n\nDesign:\nhttps://cwiki.apache.org/confluence/display/SAMZA/SEP-23%3A+Simplify+Job+Runner\n\nChanges:\n1. Update unit test only public constructor of LocalApplicationRunner to take SamzaApplication and Config as well to be consistent with other constructors.\n2. Update private constructor of LocalApplicationRunner to take SamzaApplication and Config.\n3. Update private constructor of LocalApplicationRunner to load full job config when config loader is present.\n\nAPI Changes:\nN/A. This is part of a series PRs, detailed information will be provided in the last/main PR.\n\nUpgrade Instructions:\nThis is part of a series PRs, detailed information will be provided in the last/main PR.\n\nUsage Instructions:\nThis is part of a series PRs, detailed information will be provided in the last/main PR.\n\nTests\nUnit tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20cd9489454a8fe06cb55770a2d0992862b97cc0", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/20cd9489454a8fe06cb55770a2d0992862b97cc0", "committedDate": "2020-01-17T23:54:31Z", "message": "Fix unused imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5MDczNzMw", "url": "https://github.com/apache/samza/pull/1255#pullrequestreview-349073730", "createdAt": "2020-01-28T00:49:32Z", "commit": {"oid": "20cd9489454a8fe06cb55770a2d0992862b97cc0"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo0OTozMlrOFiWXQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMDo1MjoyMVrOFiWaIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MjMwNA==", "bodyText": "In the old flow, getCoordinationUtils seemed to be called with the full config. In the new flow, getCoordinationUtils will get called with the initial config, not the full config. Do you need to load the config before calling getCoordinationUtils?", "url": "https://github.com/apache/samza/pull/1255#discussion_r371562304", "createdAt": "2020-01-28T00:49:32Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -111,27 +112,35 @@ public LocalApplicationRunner(SamzaApplication app, Config config) {\n    * @param metadataStoreFactory the instance of {@link MetadataStoreFactory} to read and write to coordinator stream.\n    */\n   public LocalApplicationRunner(SamzaApplication app, Config config, MetadataStoreFactory metadataStoreFactory) {\n-    this(ApplicationDescriptorUtil.getAppDescriptor(app, config), getCoordinationUtils(config), metadataStoreFactory);\n+    this(app, config, getCoordinationUtils(config), metadataStoreFactory);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20cd9489454a8fe06cb55770a2d0992862b97cc0"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MjQ2NA==", "bodyText": "I guess this constructor is just for testing, but it does have a similar change as above where config is now just the initial config, but before it was the full config.", "url": "https://github.com/apache/samza/pull/1255#discussion_r371562464", "createdAt": "2020-01-28T00:50:08Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -111,27 +112,35 @@ public LocalApplicationRunner(SamzaApplication app, Config config) {\n    * @param metadataStoreFactory the instance of {@link MetadataStoreFactory} to read and write to coordinator stream.\n    */\n   public LocalApplicationRunner(SamzaApplication app, Config config, MetadataStoreFactory metadataStoreFactory) {\n-    this(ApplicationDescriptorUtil.getAppDescriptor(app, config), getCoordinationUtils(config), metadataStoreFactory);\n+    this(app, config, getCoordinationUtils(config), metadataStoreFactory);\n   }\n \n   /**\n    * Constructor only used in unit test to allow injection of {@link LocalJobPlanner}\n    */\n   @VisibleForTesting\n-  LocalApplicationRunner(ApplicationDescriptorImpl<? extends ApplicationDescriptor> appDesc, Optional<CoordinationUtils> coordinationUtils) {\n-    this(appDesc, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(appDesc.getConfig())));\n+  LocalApplicationRunner(SamzaApplication app, Config config, Optional<CoordinationUtils> coordinationUtils) {\n+    this(app, config, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(config)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20cd9489454a8fe06cb55770a2d0992862b97cc0"}, "originalPosition": 23}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2MzA0MA==", "bodyText": "Is this considered a semantic API change? Before, it seems like config was always the full config, but now you are allowing the initial config with only config loader properties.\nIt's ok to have this be an API change, but just wanted to make sure you note that where necessary.", "url": "https://github.com/apache/samza/pull/1255#discussion_r371563040", "createdAt": "2020-01-28T00:52:21Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -111,27 +112,35 @@ public LocalApplicationRunner(SamzaApplication app, Config config) {\n    * @param metadataStoreFactory the instance of {@link MetadataStoreFactory} to read and write to coordinator stream.\n    */\n   public LocalApplicationRunner(SamzaApplication app, Config config, MetadataStoreFactory metadataStoreFactory) {\n-    this(ApplicationDescriptorUtil.getAppDescriptor(app, config), getCoordinationUtils(config), metadataStoreFactory);\n+    this(app, config, getCoordinationUtils(config), metadataStoreFactory);\n   }\n \n   /**\n    * Constructor only used in unit test to allow injection of {@link LocalJobPlanner}\n    */\n   @VisibleForTesting\n-  LocalApplicationRunner(ApplicationDescriptorImpl<? extends ApplicationDescriptor> appDesc, Optional<CoordinationUtils> coordinationUtils) {\n-    this(appDesc, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(appDesc.getConfig())));\n+  LocalApplicationRunner(SamzaApplication app, Config config, Optional<CoordinationUtils> coordinationUtils) {\n+    this(app, config, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(config)));\n   }\n \n   private LocalApplicationRunner(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "20cd9489454a8fe06cb55770a2d0992862b97cc0"}, "originalPosition": 26}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d62aa7de229de2f037a1369226e759d799b95d0c", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/d62aa7de229de2f037a1369226e759d799b95d0c", "committedDate": "2020-01-28T02:01:47Z", "message": "Update getDefaultCoordinatorStreamStoreFactory and getCoordinationUtils to support initial config"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NjcyMzAz", "url": "https://github.com/apache/samza/pull/1255#pullrequestreview-349672303", "createdAt": "2020-01-28T20:16:41Z", "commit": {"oid": "d62aa7de229de2f037a1369226e759d799b95d0c"}, "state": "COMMENTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoxNjo0MVrOFizGUw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQyMDoxNjo1NVrOFizG1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzMzEwNw==", "bodyText": "Should we avoid multiple calls to ConfigUtil.loadConfig? You already call it in getApplicationDescriptor.\nIf the config loader logic is complex/heavy (e.g. makes remote calls), then that is going to result in inefficient calls.", "url": "https://github.com/apache/samza/pull/1255#discussion_r372033107", "createdAt": "2020-01-28T20:16:41Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -111,29 +112,41 @@ public LocalApplicationRunner(SamzaApplication app, Config config) {\n    * @param metadataStoreFactory the instance of {@link MetadataStoreFactory} to read and write to coordinator stream.\n    */\n   public LocalApplicationRunner(SamzaApplication app, Config config, MetadataStoreFactory metadataStoreFactory) {\n-    this(ApplicationDescriptorUtil.getAppDescriptor(app, config), getCoordinationUtils(config), metadataStoreFactory);\n+    this(app, config, getCoordinationUtils(config), metadataStoreFactory);\n   }\n \n   /**\n    * Constructor only used in unit test to allow injection of {@link LocalJobPlanner}\n    */\n   @VisibleForTesting\n-  LocalApplicationRunner(ApplicationDescriptorImpl<? extends ApplicationDescriptor> appDesc, Optional<CoordinationUtils> coordinationUtils) {\n-    this(appDesc, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(appDesc.getConfig())));\n+  LocalApplicationRunner(SamzaApplication app, Config config, Optional<CoordinationUtils> coordinationUtils) {\n+    this(app, config, coordinationUtils, getDefaultCoordinatorStreamStoreFactory(new JobConfig(config)));\n   }\n \n   private LocalApplicationRunner(\n-      ApplicationDescriptorImpl<? extends ApplicationDescriptor> appDesc,\n+      SamzaApplication app,\n+      Config config,\n       Optional<CoordinationUtils> coordinationUtils,\n       MetadataStoreFactory metadataStoreFactory) {\n-    this.appDesc = appDesc;\n+    this.appDesc = getApplicationDescriptor(app, config);\n     this.isAppModeBatch = isAppModeBatch(appDesc.getConfig());\n     this.coordinationUtils = coordinationUtils;\n     this.metadataStoreFactory = Optional.ofNullable(metadataStoreFactory);\n   }\n \n+  @VisibleForTesting\n+  static ApplicationDescriptorImpl<? extends ApplicationDescriptor> getApplicationDescriptor(SamzaApplication app, Config config) {\n+    return new JobConfig(config).getConfigLoaderFactory().isPresent()\n+        ? ApplicationDescriptorUtil.getAppDescriptor(app, ConfigUtil.loadConfig(config))\n+        : ApplicationDescriptorUtil.getAppDescriptor(app, config);\n+  }\n+\n   @VisibleForTesting\n   static MetadataStoreFactory getDefaultCoordinatorStreamStoreFactory(JobConfig jobConfig) {\n+    if (jobConfig.getConfigLoaderFactory().isPresent()) {\n+      jobConfig = new JobConfig(ConfigUtil.loadConfig(jobConfig));\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62aa7de229de2f037a1369226e759d799b95d0c"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAzMzIzOA==", "bodyText": "Same as above about multiple calls to loadConfig.", "url": "https://github.com/apache/samza/pull/1255#discussion_r372033238", "createdAt": "2020-01-28T20:16:55Z", "author": {"login": "cameronlee314"}, "path": "samza-core/src/main/java/org/apache/samza/runtime/LocalApplicationRunner.java", "diffHunk": "@@ -150,6 +163,10 @@ static MetadataStoreFactory getDefaultCoordinatorStreamStoreFactory(JobConfig jo\n   }\n \n   private static Optional<CoordinationUtils> getCoordinationUtils(Config config) {\n+    if (new JobConfig(config).getConfigLoaderFactory().isPresent()) {\n+      config = ConfigUtil.loadConfig(config);\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d62aa7de229de2f037a1369226e759d799b95d0c"}, "originalPosition": 61}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e337c4e6b0854406669c535790fd95d966fd9b9", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/3e337c4e6b0854406669c535790fd95d966fd9b9", "committedDate": "2020-01-29T01:04:26Z", "message": "Add LocalApplicationRunnerContext to consolidate constructors"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93b65661eabde66e0d8c4b80d1d46f7f13e1233e", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/93b65661eabde66e0d8c4b80d1d46f7f13e1233e", "committedDate": "2020-01-29T01:05:40Z", "message": "Switch to config"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dba8e9f16a689b3847ce1c9d39ff335865088ae9", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/dba8e9f16a689b3847ce1c9d39ff335865088ae9", "committedDate": "2020-01-29T18:23:12Z", "message": "Fix imports"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDQ4NDc1", "url": "https://github.com/apache/samza/pull/1255#pullrequestreview-350448475", "createdAt": "2020-01-29T21:48:55Z", "commit": {"oid": "dba8e9f16a689b3847ce1c9d39ff335865088ae9"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b808017ec37ebe0951c9881ff3043a9be338c3ee", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/b808017ec37ebe0951c9881ff3043a9be338c3ee", "committedDate": "2020-01-30T00:58:55Z", "message": "Fix the bug in unit tests\n\nassertNull should be mapped to assertTrue\nassertNotNull should be mapped to assertFalse"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4753, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}