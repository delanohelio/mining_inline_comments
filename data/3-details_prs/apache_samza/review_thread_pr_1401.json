{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDUwNjg5NTI5", "number": 1401, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo0MDozOFrOEPZKAg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODoyNDoyN1rOEQUdqA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NTc2MjU4OnYy", "diffSide": "LEFT", "path": "samza-sql/src/main/java/org/apache/samza/sql/interfaces/SqlIOConfig.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNDo0MDozOFrOGzFHaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QwNTozOTo1MlrOGzGAiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDM3Ng==", "bodyText": "Can you revert the change for validation here and below ?", "url": "https://github.com/apache/samza/pull/1401#discussion_r456214376", "createdAt": "2020-07-17T04:40:38Z", "author": {"login": "atoomula"}, "path": "samza-sql/src/main/java/org/apache/samza/sql/interfaces/SqlIOConfig.java", "diffHunk": "@@ -81,11 +81,13 @@ public SqlIOConfig(String systemName, String streamName, List<String> sourcePart\n     this.streamId = String.format(\"%s-%s\", systemName, streamName);\n \n     samzaRelConverterName = streamConfigs.get(CFG_SAMZA_REL_CONVERTER);\n-    Validate.notEmpty(samzaRelConverterName, String.format(\"System %s is not supported. Please check if the system name is provided correctly.\", systemName));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0cc1f26349ac643c0dcbf36f953b9c2896a710f2"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIyOTAwMA==", "bodyText": "Done. I just split the long-line so that it doesn't cross the 120 char-limit.", "url": "https://github.com/apache/samza/pull/1401#discussion_r456229000", "createdAt": "2020-07-17T05:39:52Z", "author": {"login": "shanthoosh"}, "path": "samza-sql/src/main/java/org/apache/samza/sql/interfaces/SqlIOConfig.java", "diffHunk": "@@ -81,11 +81,13 @@ public SqlIOConfig(String systemName, String streamName, List<String> sourcePart\n     this.streamId = String.format(\"%s-%s\", systemName, streamName);\n \n     samzaRelConverterName = streamConfigs.get(CFG_SAMZA_REL_CONVERTER);\n-    Validate.notEmpty(samzaRelConverterName, String.format(\"System %s is not supported. Please check if the system name is provided correctly.\", systemName));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjIxNDM3Ng=="}, "originalCommit": {"oid": "0cc1f26349ac643c0dcbf36f953b9c2896a710f2"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg0NzgxMDE3OnYy", "diffSide": "RIGHT", "path": "samza-sql/src/main/java/org/apache/samza/sql/avro/AvroRelConverter.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0xN1QxNTo1NTowOVrOGzYXng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzozNDozMFrOG0YXCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTgyMg==", "bodyText": "Can we add a simple unit test or at least a comment to avoid that this happens again in the future ?", "url": "https://github.com/apache/samza/pull/1401#discussion_r456529822", "createdAt": "2020-07-17T15:55:09Z", "author": {"login": "b-slim"}, "path": "samza-sql/src/main/java/org/apache/samza/sql/avro/AvroRelConverter.java", "diffHunk": "@@ -125,11 +125,18 @@ public static void fetchFieldNamesAndValuesFromIndexedRecord(IndexedRecord recor\n         .collect(Collectors.toList()));\n   }\n \n-  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord, Schema schema) {\n+  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord) {\n     List<Object> fieldValues = new ArrayList<>();\n     List<String> fieldNames = new ArrayList<>();\n     if (avroRecord != null) {\n-      fetchFieldNamesAndValuesFromIndexedRecord(avroRecord, fieldNames, fieldValues, schema);\n+      fieldNames.addAll(", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d89f2f57535cee39439d7a16b49058f305dc18cd"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU3ODI1MQ==", "bodyText": "Done. Added unit tests for Avro record conversion with non-nullable union type.", "url": "https://github.com/apache/samza/pull/1401#discussion_r457578251", "createdAt": "2020-07-20T17:34:30Z", "author": {"login": "shanthoosh"}, "path": "samza-sql/src/main/java/org/apache/samza/sql/avro/AvroRelConverter.java", "diffHunk": "@@ -125,11 +125,18 @@ public static void fetchFieldNamesAndValuesFromIndexedRecord(IndexedRecord recor\n         .collect(Collectors.toList()));\n   }\n \n-  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord, Schema schema) {\n+  private static SamzaSqlRelRecord convertToRelRecord(IndexedRecord avroRecord) {\n     List<Object> fieldValues = new ArrayList<>();\n     List<String> fieldNames = new ArrayList<>();\n     if (avroRecord != null) {\n-      fetchFieldNamesAndValuesFromIndexedRecord(avroRecord, fieldNames, fieldValues, schema);\n+      fieldNames.addAll(", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NjUyOTgyMg=="}, "originalCommit": {"oid": "d89f2f57535cee39439d7a16b49058f305dc18cd"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTMzNTE5OnYy", "diffSide": "RIGHT", "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/schemas/ComplexUnion.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzo0NDowM1rOG0YsuQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxNzo0ODoyN1rOG0Y2uQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4MzgwMQ==", "bodyText": "I am wondering if this can be auto generated by the Build/Testing framework at runtime ? using something like avro-maven-plugin  here is an example https://github.com/alexholmes/avro-maven.\nFYI this is a suggestion comment and can be tackled as a followup if it is has a big scope.", "url": "https://github.com/apache/samza/pull/1401#discussion_r457583801", "createdAt": "2020-07-20T17:44:03Z", "author": {"login": "b-slim"}, "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/schemas/ComplexUnion.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * Autogenerated by Avro\n+ * \n+ * DO NOT EDIT DIRECTLY\n+ */\n+package org.apache.samza.sql.avro.schemas;  ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "13c02ec3733a09134ea1a4c09f1923cd3c6acabb"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4NjM2MQ==", "bodyText": "I agree that auto-generating the avro-code using gradle plugin at build-time would be better and i'll create a follow-up ticket for it.", "url": "https://github.com/apache/samza/pull/1401#discussion_r457586361", "createdAt": "2020-07-20T17:48:27Z", "author": {"login": "shanthoosh"}, "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/schemas/ComplexUnion.java", "diffHunk": "@@ -0,0 +1,143 @@\n+/**\n+ * Autogenerated by Avro\n+ * \n+ * DO NOT EDIT DIRECTLY\n+ */\n+package org.apache.samza.sql.avro.schemas;  ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzU4MzgwMQ=="}, "originalCommit": {"oid": "13c02ec3733a09134ea1a4c09f1923cd3c6acabb"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjg1NTQ3OTQ0OnYy", "diffSide": "RIGHT", "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODoyNDoyN1rOG0aFVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0yMFQxODoyNDoyN1rOG0aFVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ1NzYwNjQ4Ng==", "bodyText": "Were you able to repro the issue with this unit test by having the older changes (with cached schema) ?", "url": "https://github.com/apache/samza/pull/1401#discussion_r457606486", "createdAt": "2020-07-20T18:24:27Z", "author": {"login": "atoomula"}, "path": "samza-sql/src/test/java/org/apache/samza/sql/avro/TestAvroRelConversion.java", "diffHunk": "@@ -231,6 +240,42 @@ public void testComplexRecordConversion() throws IOException {\n     validateAvroSerializedData(serializedData, testStrValue);\n   }\n \n+  @Test\n+  public void testComplexUnionConversionShouldWorkWithBothStringAndIntTypes() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "43142aee99e0debdb0699fe7b1efdc3f7af7726c"}, "originalPosition": 54}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1470, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}