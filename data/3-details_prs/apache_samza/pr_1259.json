{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY2NTg5MzUy", "number": 1259, "title": "SAMZA-2444: JobModel save in CoordinatorStreamStore resulting flush for each message", "bodyText": "Symptom\nWhen Samza's job creates lots of tasks/partitions, it can take over a long time for AM to save the metadata in a run which may cause timeout exception.\nWe observed if the Samza's job has over 37k tasks/partitions, it takes over 10 min for AM to save it in a run.\nCause\nJobModelManager uses CoordinatorStreamStore.put() to save job metadata information which does flush for each message, and the flush operation is heavy especially when the remote server suffering the performance issues.\nChanges\n\n Separate flush from put/putAll/delete functions in CoordinatorStreamStore.\n Explicity call flush after call put/putAll/delete in related classes\n Batch write task partition assignments information to metadata store.\n Batch write task container information to metadata store.\n\nTests\n\n All unit tests and integration tests are passed\n\nAPI Changes\n\n Replace writeTaskPartitionAssignment with new batch write method writeTaskPartitionAssignments in TaskPartitionAssignmentManager\n Replace writeTaskContainerMapping with  new batch write method writeTaskContainerMappings in TaskAssignmentManager.\n\nUpgrade Instructions\nNone\nUsage Instructions\nNone", "createdAt": "2020-01-23T22:04:08Z", "url": "https://github.com/apache/samza/pull/1259", "merged": true, "mergeCommit": {"oid": "ca641dcf7450682a69e8eda53b9bc40702b4ad7a"}, "closed": true, "closedAt": "2020-02-05T17:48:25Z", "author": {"login": "alnzng"}, "timelineItems": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb-g7qnAFqTM0ODgyNTAyNA==", "endCursor": "Y3Vyc29yOnYyOpPPAAABcBZ3ezAFqTM1MzkxNjEyOA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ4ODI1MDI0", "url": "https://github.com/apache/samza/pull/1259#pullrequestreview-348825024", "createdAt": "2020-01-27T17:02:32Z", "commit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxNzowMjozMlrOFiKSiA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yN1QxODowNTozMFrOFiMPVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM2NDQ4OA==", "bodyText": "Is this operation meant to be atomic? Does an impl of MetadataStore ensure that either all or none of this map is deleted?\nIs this operation meant to be idempotent?", "url": "https://github.com/apache/samza/pull/1259#discussion_r371364488", "createdAt": "2020-01-27T17:02:32Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-api/src/main/java/org/apache/samza/metadatastore/MetadataStore.java", "diffHunk": "@@ -67,6 +68,16 @@ default void putAll(Map<String, byte[]> entries) {\n    */\n   void delete(String key);\n \n+  /**\n+   * Deletes the mapping with the specified set.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4NjU2OQ==", "bodyText": "minor: might be good to add {@inheritdoc}", "url": "https://github.com/apache/samza/pull/1259#discussion_r371386569", "createdAt": "2020-01-27T17:45:11Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -155,6 +156,15 @@ public void delete(String namespacedKey) {\n     put(namespacedKey, null);\n   }\n \n+  @Override", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM4ODA5Ng==", "bodyText": "this is not atomic right. cause, theflush() is when the entries are guaranteed to be persisted on the coordinator stream and putAll does flush only at the end of all put. So if this is the expectation, then the MetadataStore interface should allow it.", "url": "https://github.com/apache/samza/pull/1259#discussion_r371388096", "createdAt": "2020-01-27T17:48:14Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -155,6 +156,15 @@ public void delete(String namespacedKey) {\n     put(namespacedKey, null);\n   }\n \n+  @Override\n+  public void deleteAll(Collection<String> namespacedKeys) {\n+    Map<String, byte[]> entries = new HashMap<>(namespacedKeys.size());\n+    for (String namespacedKey : namespacedKeys) {\n+      entries.put(namespacedKey, null);\n+    }\n+    putAll(entries);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc"}, "originalPosition": 18}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTM5NjQzNw==", "bodyText": "would it be good to replace wirteTaskContainerMapping with the new wirteTaskContainerMappings altogether?\nthere seems to be only one usage of this method and that has been replaced to use the new one in JobModelManager.\nis there a reason to keep this old method?", "url": "https://github.com/apache/samza/pull/1259#discussion_r371396437", "createdAt": "2020-01-27T18:05:30Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/container/grouper/task/TaskAssignmentManager.java", "diffHunk": "@@ -103,21 +106,53 @@ public TaskAssignmentManager(MetadataStore taskContainerMappingMetadataStore, Me\n    * @param taskMode the mode of the task\n    */\n   public void writeTaskContainerMapping(String taskName, String containerId, TaskMode taskMode) {\n-    String existingContainerId = taskNameToContainerId.get(taskName);\n-    if (existingContainerId != null && !existingContainerId.equals(containerId)) {\n-      LOG.info(\"Task \\\"{}\\\" in mode {} moved from container {} to container {}\", new Object[]{taskName, taskMode, existingContainerId, containerId});\n-    } else {\n-      LOG.debug(\"Task \\\"{}\\\" in mode {} assigned to container {}\", taskName, taskMode, containerId);\n-    }\n+    writeTaskContainerMappings(ImmutableMap.of(containerId, ImmutableMap.of(taskName, taskMode)));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b7efe8db5b5a878c84eaf52e16f0d15ffafe7518", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/b7efe8db5b5a878c84eaf52e16f0d15ffafe7518", "committedDate": "2020-01-27T19:37:54Z", "message": "Remove flush operation out of put functions\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "413c834857f6f7a17d8563fe15cb92863560cb91", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/413c834857f6f7a17d8563fe15cb92863560cb91", "committedDate": "2020-01-27T21:45:01Z", "message": "Explicitly call flush method after calling put/putAll/delete methods\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4f57592d6cac0596ce970448ece2f37e0699dea7", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/4f57592d6cac0596ce970448ece2f37e0699dea7", "committedDate": "2020-01-27T21:52:31Z", "message": "Check flush call in unit tests\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7466ca31b30248e756b618da707064d49b43c2e1", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/7466ca31b30248e756b618da707064d49b43c2e1", "committedDate": "2020-01-27T23:09:50Z", "message": "Improve performance with batch udpate\n\n1. Batch write task partition assignments information to metadata store.\n2. Batch write task container information to metadata store.\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6696017fb3320f09a0b966dbb7c7c6ae9ae9fb0", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/a6696017fb3320f09a0b966dbb7c7c6ae9ae9fb0", "committedDate": "2020-01-27T23:15:08Z", "message": "Fix checkstyle issue\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "HeadRefForcePushedEvent", "beforeCommit": {"oid": "cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/cd0aaac214f31cb1e77f812d3af2015e9eb6e7fc", "committedDate": "2020-01-23T23:23:54Z", "message": "Skip to call metadata store API if no data available\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}, "afterCommit": {"oid": "a6696017fb3320f09a0b966dbb7c7c6ae9ae9fb0", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/a6696017fb3320f09a0b966dbb7c7c6ae9ae9fb0", "committedDate": "2020-01-27T23:15:08Z", "message": "Fix checkstyle issue\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e34e917e499c143841ca0bb588dc1323de9dbb17", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/e34e917e499c143841ca0bb588dc1323de9dbb17", "committedDate": "2020-01-27T23:29:03Z", "message": "Fix unit test failures\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQ5NjM0OTE1", "url": "https://github.com/apache/samza/pull/1259#pullrequestreview-349634915", "createdAt": "2020-01-28T19:17:36Z", "commit": {"oid": "e34e917e499c143841ca0bb588dc1323de9dbb17"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOToxODowMFrOFixVmQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQxOTo0Mjo0OFrOFiyG4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAwNDI0OQ==", "bodyText": "why do we catch only exceptions from metadatstore.put and not from its delete or flush?", "url": "https://github.com/apache/samza/pull/1259#discussion_r372004249", "createdAt": "2020-01-28T19:18:00Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/container/grouper/task/TaskPartitionAssignmentManager.java", "diffHunk": "@@ -66,28 +66,33 @@ public TaskPartitionAssignmentManager(MetadataStore metadataStore) {\n   }\n \n   /**\n-   * Stores the task to partition assignments to the metadata store.\n-   * @param partition the system stream partition.\n-   * @param taskNames the task names to which the partition is assigned to.\n+   * Stores the task names to {@link SystemStreamPartition} assignments to the metadata store.\n+   * @param sspToTaskNameMapping the mapped assignments to write to the metadata store. If the task name list is empty,\n+   *                             then the entry is deleted from the metadata store.\n    */\n-  public void writeTaskPartitionAssignment(SystemStreamPartition partition, List<String> taskNames) {\n-    // For broadcast streams, a input system stream partition will be mapped to more than one tasks in a\n-    // SamzaContainer. Rather than storing taskName to list of SystemStreamPartitions in metadata store, here\n-    // systemStreamPartition to list of taskNames is stored. This was done due to 1 MB limit on value size in kafka.\n-    String serializedSSPAsJson = serializeSSPToJson(partition);\n-    if (taskNames == null || taskNames.isEmpty()) {\n-      LOG.info(\"Deleting the key: {} from the metadata store.\", partition);\n-      metadataStore.delete(serializedSSPAsJson);\n-    } else {\n-      try {\n-        String taskNamesAsString = taskNamesMapper.writeValueAsString(taskNames);\n-        byte[] taskNamesAsBytes = valueSerde.toBytes(taskNamesAsString);\n-        LOG.info(\"Storing the partition: {} and taskNames: {} into the metadata store.\", serializedSSPAsJson, taskNames);\n-        metadataStore.put(serializedSSPAsJson, taskNamesAsBytes);\n-      } catch (Exception e) {\n-        throw new SamzaException(\"Exception occurred when writing task to partition assignment.\", e);\n+  public void writeTaskPartitionAssignments(Map<SystemStreamPartition, List<String>> sspToTaskNameMapping) {\n+    for (SystemStreamPartition partition: sspToTaskNameMapping.keySet()) {\n+      List<String> taskNames = sspToTaskNameMapping.get(partition);\n+      LOG.info(\"Storing ssp: {} and task: {} into metadata store\", partition, taskNames);\n+      // For broadcast streams, a input system stream partition will be mapped to more than one tasks in a\n+      // SamzaContainer. Rather than storing taskName to list of SystemStreamPartitions in metadata store, here\n+      // systemStreamPartition to list of taskNames is stored. This was done due to 1 MB limit on value size in kafka.\n+      String serializedSSPAsJson = serializeSSPToJson(partition);\n+      if (taskNames == null || taskNames.isEmpty()) {\n+        LOG.info(\"Deleting the key: {} from the metadata store.\", partition);\n+        metadataStore.delete(serializedSSPAsJson);\n+      } else {\n+        try {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34e917e499c143841ca0bb588dc1323de9dbb17"}, "originalPosition": 39}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAwNjE1Nw==", "bodyText": "do we need this impl of putAll because MetadataStore.putAll default impl in the interface MetadatStore is the same?", "url": "https://github.com/apache/samza/pull/1259#discussion_r372006157", "createdAt": "2020-01-28T19:21:48Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/coordinator/metadatastore/CoordinatorStreamStore.java", "diffHunk": "@@ -149,6 +136,13 @@ private void putWithoutFlush(String namespacedKey, byte[] value) {\n     systemProducer.send(SOURCE, envelope);\n   }\n \n+  @Override\n+  public void putAll(Map<String, byte[]> entries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34e917e499c143841ca0bb588dc1323de9dbb17"}, "originalPosition": 25}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MjAxNjg2NA==", "bodyText": "minor: is this log statement really needed? Because it will be followed by another log statement immediately that says either the key is being deleted or partition is being stored (only that the SSP is a JSON in the storing log statement).", "url": "https://github.com/apache/samza/pull/1259#discussion_r372016864", "createdAt": "2020-01-28T19:42:48Z", "author": {"login": "lakshmi-manasa-g"}, "path": "samza-core/src/main/java/org/apache/samza/container/grouper/task/TaskPartitionAssignmentManager.java", "diffHunk": "@@ -66,28 +66,33 @@ public TaskPartitionAssignmentManager(MetadataStore metadataStore) {\n   }\n \n   /**\n-   * Stores the task to partition assignments to the metadata store.\n-   * @param partition the system stream partition.\n-   * @param taskNames the task names to which the partition is assigned to.\n+   * Stores the task names to {@link SystemStreamPartition} assignments to the metadata store.\n+   * @param sspToTaskNameMapping the mapped assignments to write to the metadata store. If the task name list is empty,\n+   *                             then the entry is deleted from the metadata store.\n    */\n-  public void writeTaskPartitionAssignment(SystemStreamPartition partition, List<String> taskNames) {\n-    // For broadcast streams, a input system stream partition will be mapped to more than one tasks in a\n-    // SamzaContainer. Rather than storing taskName to list of SystemStreamPartitions in metadata store, here\n-    // systemStreamPartition to list of taskNames is stored. This was done due to 1 MB limit on value size in kafka.\n-    String serializedSSPAsJson = serializeSSPToJson(partition);\n-    if (taskNames == null || taskNames.isEmpty()) {\n-      LOG.info(\"Deleting the key: {} from the metadata store.\", partition);\n-      metadataStore.delete(serializedSSPAsJson);\n-    } else {\n-      try {\n-        String taskNamesAsString = taskNamesMapper.writeValueAsString(taskNames);\n-        byte[] taskNamesAsBytes = valueSerde.toBytes(taskNamesAsString);\n-        LOG.info(\"Storing the partition: {} and taskNames: {} into the metadata store.\", serializedSSPAsJson, taskNames);\n-        metadataStore.put(serializedSSPAsJson, taskNamesAsBytes);\n-      } catch (Exception e) {\n-        throw new SamzaException(\"Exception occurred when writing task to partition assignment.\", e);\n+  public void writeTaskPartitionAssignments(Map<SystemStreamPartition, List<String>> sspToTaskNameMapping) {\n+    for (SystemStreamPartition partition: sspToTaskNameMapping.keySet()) {\n+      List<String> taskNames = sspToTaskNameMapping.get(partition);\n+      LOG.info(\"Storing ssp: {} and task: {} into metadata store\", partition, taskNames);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e34e917e499c143841ca0bb588dc1323de9dbb17"}, "originalPosition": 30}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "dfe49bcbd59eff0df67b15880e45b8d82fbf1ceb", "author": {"user": {"login": "alnzng", "name": "Alan Zhang"}}, "url": "https://github.com/apache/samza/commit/dfe49bcbd59eff0df67b15880e45b8d82fbf1ceb", "committedDate": "2020-01-28T21:07:48Z", "message": "Remove duplicated codes and useless log\n\nSigned-off-by: Alan Zhang <shuai.xyz@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUwNDM0NTQy", "url": "https://github.com/apache/samza/pull/1259#pullrequestreview-350434542", "createdAt": "2020-01-29T21:24:51Z", "commit": {"oid": "dfe49bcbd59eff0df67b15880e45b8d82fbf1ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzUzOTE2MTI4", "url": "https://github.com/apache/samza/pull/1259#pullrequestreview-353916128", "createdAt": "2020-02-05T17:48:14Z", "commit": {"oid": "dfe49bcbd59eff0df67b15880e45b8d82fbf1ceb"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4759, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}