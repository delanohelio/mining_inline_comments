{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY2Njg1MTQx", "number": 1413, "title": "SAMZA-2578: Excessive trimming during transactional state restore", "bodyText": "Symptom: On transactional state restore, trimming may execute indefinitely.\nCause: Newly trimmed messages of the changelog are passed back to the trim process (and are then re-trimmed) by the changelog ssp iterator.\nChanges: Introduce a bounded iterator which can be given an end offset to stop after.\nTests: Unit tests for the new class.\nAPI Changes: none\nUpgrade Instructions: none\nUsage Instructions: none", "createdAt": "2020-08-12T10:50:28Z", "url": "https://github.com/apache/samza/pull/1413", "merged": true, "mergeCommit": {"oid": "0c6b6b66a9b8ae6626d2c500e1afbed0ef06e7a7"}, "closed": true, "closedAt": "2020-08-19T02:49:21Z", "author": {"login": "bkonold"}, "timelineItems": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc-JHP7gH2gAyNDY2Njg1MTQxOmQwMDI4ZTgzYjRhOGUyMmY4NjVkMjE3ZjJlMzdhNjQwY2I3MmFkZTU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdARfiSAFqTQ3MDAyMDI0MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "d0028e83b4a8e22f865d217f2e37a640cb72ade5", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/d0028e83b4a8e22f865d217f2e37a640cb72ade5", "committedDate": "2020-08-12T10:46:27Z", "message": "adding bound checking for transactional state restore trimming"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/ba5c9261aa9d93e625304e2989f0aeec772460c7", "committedDate": "2020-08-12T10:49:15Z", "message": "adding bound checking for transactional state restore trimming"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NTk4NDA4", "url": "https://github.com/apache/samza/pull/1413#pullrequestreview-468598408", "createdAt": "2020-08-17T16:05:36Z", "commit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "state": "COMMENTED", "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjowNTozN1rOHBvIyA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxNjo0NToxMFrOHBwiiw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MjkyMA==", "bodyText": "nit: group final fields together.", "url": "https://github.com/apache/samza/pull/1413#discussion_r471582920", "createdAt": "2020-08-17T16:05:37Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4MzcxMQ==", "bodyText": "s/changelog/input|topic", "url": "https://github.com/apache/samza/pull/1413#discussion_r471583711", "createdAt": "2020-08-17T16:06:56Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NDU3MQ==", "bodyText": "looks like it only allows feeding one SSP. why do we need a set?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471584571", "createdAt": "2020-08-17T16:08:11Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 50}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTU4NTU0OQ==", "bodyText": "Can we add a pre-check on the endOffset as not null in the constructor? Or, do you intend have this as a UnBoundedSSPIterator in the event no endOffset? If latter, please update the java docs to reflect the contract.", "url": "https://github.com/apache/samza/pull/1413#discussion_r471585549", "createdAt": "2020-08-17T16:09:50Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {\n+\n+  protected final SystemAdmin admin;\n+\n+  private final SystemConsumer systemConsumer;\n+  private final String endOffset;\n+  private final Set<SystemStreamPartition> fetchSet;\n+  private Queue<IncomingMessageEnvelope> peeks;\n+\n+  public BoundedSSPIterator(SystemConsumer systemConsumer,\n+      SystemStreamPartition systemStreamPartition, String endOffset, SystemAdmin admin) {\n+    this.systemConsumer = systemConsumer;\n+    this.endOffset = endOffset;\n+    this.admin = admin;\n+    this.fetchSet = new HashSet<>();\n+    this.fetchSet.add(systemStreamPartition);\n+    this.peeks = new ArrayDeque<>();\n+  }\n+\n+  public boolean hasNext() {\n+    refresh();\n+\n+    return peeks.size() > 0 && (endOffset == null || admin.offsetComparator(peeks.peek().getOffset(), endOffset) <= 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 57}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTYwNTg5OQ==", "bodyText": "nit: can we change this to non-star imports?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471605899", "createdAt": "2020-08-17T16:45:10Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/test/java/org/apache/samza/system/TestBoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,118 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import com.google.common.collect.ImmutableList;\n+import com.google.common.collect.ImmutableMap;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import org.apache.samza.Partition;\n+import org.junit.Assert;\n+import org.junit.Test;\n+import org.mockito.stubbing.OngoingStubbing;\n+\n+import static org.mockito.Mockito.*;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 32}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDY4NzQ3NTcw", "url": "https://github.com/apache/samza/pull/1413#pullrequestreview-468747570", "createdAt": "2020-08-17T18:46:55Z", "commit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo0Njo1NVrOHB2t3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xN1QxODo0Njo1NVrOHB2t3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTcwNzEwMA==", "bodyText": "Can you also implement Iterator to enable callers user it with java iterator interface & semantics?", "url": "https://github.com/apache/samza/pull/1413#discussion_r471707100", "createdAt": "2020-08-17T18:46:55Z", "author": {"login": "mynameborat"}, "path": "samza-api/src/main/java/org/apache/samza/system/BoundedSSPIterator.java", "diffHunk": "@@ -0,0 +1,84 @@\n+/*\n+ * Licensed to the Apache Software Foundation (ASF) under one\n+ * or more contributor license agreements.  See the NOTICE file\n+ * distributed with this work for additional information\n+ * regarding copyright ownership.  The ASF licenses this file\n+ * to you under the Apache License, Version 2.0 (the\n+ * \"License\"); you may not use this file except in compliance\n+ * with the License.  You may obtain a copy of the License at\n+ *\n+ *   http://www.apache.org/licenses/LICENSE-2.0\n+ *\n+ * Unless required by applicable law or agreed to in writing,\n+ * software distributed under the License is distributed on an\n+ * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n+ * KIND, either express or implied.  See the License for the\n+ * specific language governing permissions and limitations\n+ * under the License.\n+ */\n+\n+package org.apache.samza.system;\n+\n+import java.util.ArrayDeque;\n+import java.util.HashSet;\n+import java.util.List;\n+import java.util.Map;\n+import java.util.NoSuchElementException;\n+import java.util.Queue;\n+import java.util.Set;\n+import org.apache.samza.SamzaException;\n+\n+/**\n+ * Iterates over messages in the provided changelog {@link SystemStreamPartition} using the provided\n+ * {@link SystemConsumer} until all messages with offsets up to and including the bound offset have been consumed.\n+ */\n+public class BoundedSSPIterator {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ba5c9261aa9d93e625304e2989f0aeec772460c7"}, "originalPosition": 35}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c5c9c6ccdf49d524e07dc10db718545011bbb2d", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/0c5c9c6ccdf49d524e07dc10db718545011bbb2d", "committedDate": "2020-08-19T01:18:34Z", "message": "responding to review feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb5a0d678fbbf7b37e0900389d206c7d6dab6883", "author": {"user": null}, "url": "https://github.com/apache/samza/commit/cb5a0d678fbbf7b37e0900389d206c7d6dab6883", "committedDate": "2020-08-19T01:29:39Z", "message": "add line between private and private final"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDcwMDIwMjQw", "url": "https://github.com/apache/samza/pull/1413#pullrequestreview-470020240", "createdAt": "2020-08-19T01:40:04Z", "commit": {"oid": "cb5a0d678fbbf7b37e0900389d206c7d6dab6883"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4683, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}