{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYyNDc3MTU3", "number": 1408, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMDoxNlrOEVh19A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxOTowM1rOEXuQcA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDEwMDM2OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMDoxNlrOG8VpfQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMDoxNlrOG8VpfQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMjQyOQ==", "bodyText": "please rename callClass to 'consumerIdPrefix'", "url": "https://github.com/apache/samza/pull/1408#discussion_r465922429", "createdAt": "2020-08-05T18:30:16Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984978ba9127dee4d5a1ccbbf12e269111253661"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDEwMjI1OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMDo0NFrOG8VqnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMDo0NFrOG8VqnQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMjcxNw==", "bodyText": "please rename callClass to 'producerIdPrefix'", "url": "https://github.com/apache/samza/pull/1408#discussion_r465922717", "createdAt": "2020-08-05T18:30:44Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984978ba9127dee4d5a1ccbbf12e269111253661"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxMDEwNjU4OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMTo1NFrOG8VtPw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNVQxODozMTo1NFrOG8VtPw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NTkyMzM5MQ==", "bodyText": "please rename callClass to 'adminIdPrefix'", "url": "https://github.com/apache/samza/pull/1408#discussion_r465923391", "createdAt": "2020-08-05T18:31:54Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String callerClass) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  default SystemAdmin getAdmin(String systemName, Config config, String callerClass) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "984978ba9127dee4d5a1ccbbf12e269111253661"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDE5MDcyOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQxNzoxNjo1OVrOG88yCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMzowMjoyMlrOG9G-pg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ==", "bodyText": "i think it is ok to hardcode the prefix to \"DiagnosticsUtil\" too.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466563595", "createdAt": "2020-08-06T17:16:59Z", "author": {"login": "sborya"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2ODU2Nw==", "bodyText": "Why not use Class.getSimpleName() here too?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466668567", "createdAt": "2020-08-06T20:30:13Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5ODA4Ng==", "bodyText": "I think it is a static method. And we CAN use simpleName(), but we don't have too. As long as it is unique for the caller.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466698086", "createdAt": "2020-08-06T21:32:54Z", "author": {"login": "sborya"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcwNjUxOQ==", "bodyText": "Got it, thanks. We can probably use DiagnosticsUtil.class.getSimpleName() so that any refactoring updates it.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466706519", "createdAt": "2020-08-06T21:53:07Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczMDY2Mg==", "bodyText": "Got it. Will do.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466730662", "createdAt": "2020-08-06T23:02:22Z", "author": {"login": "MabelYC"}, "path": "samza-core/src/main/java/org/apache/samza/util/DiagnosticsUtil.java", "diffHunk": "@@ -144,7 +145,8 @@ public MetadataFileContents(String version, String metricsSnapshot) {\n       }\n       SystemFactory systemFactory = ReflectionUtil.getObj(diagnosticsSystemFactoryName.get(), SystemFactory.class);\n       SystemProducer systemProducer =\n-          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap());\n+          systemFactory.getProducer(diagnosticsSystemStream.getSystem(), config, new MetricsRegistryMap(),\n+              MethodHandles.lookup().lookupClass().getSimpleName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjU2MzU5NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDg2MDIxOnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozMjoyOFrOG9DQjg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDo0NDozMFrOG9IvTQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA==", "bodyText": "Why assume that it's used as prefix in the API? Maybe just call this consumerName/consumerId and let the actual implementation figure out how to use it?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466669710", "createdAt": "2020-08-06T20:32:28Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY5NjA1NQ==", "bodyText": "I think we don't want caller to assume that this is the id and it must be used as is. The idea is that it should be a unique piece of info that can be used to construct an id. Please suggest your name.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466696055", "createdAt": "2020-08-06T21:28:07Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDQ0NQ==", "bodyText": "I'm assuming this is intended to be used as part of the Kafka clientId to figure out who owns the instance?\nMaybe consumerLabel. We should add some documentation on what this should be set to by the caller (e.g., set this to indicate ownership of the client instance), how this will be used by system implementers (e.g., to identify consumers in logs, threads and client instances etc., along with other relevant information like systemName).", "url": "https://github.com/apache/samza/pull/1408#discussion_r466710445", "createdAt": "2020-08-06T22:03:25Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNDYwNw==", "bodyText": "by \"add some documentation\" you mean add  javadoc or open source documentation?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466724607", "createdAt": "2020-08-06T22:43:54Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczNDk2OQ==", "bodyText": "this one: https://samza.apache.org/learn/documentation/0.7.0/api/javadocs/org/apache/samza/system/SystemFactory.html ?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466734969", "createdAt": "2020-08-06T23:15:36Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc1OTUwMQ==", "bodyText": "@MabelYC I mean Javadocs. The page you linked is auto-generated from Javadocs.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466759501", "createdAt": "2020-08-07T00:44:30Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY2OTcxMA=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNDg2Mjc2OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMDozMzoxOFrOG9DSIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMDo0ODoyNVrOG9Iy4Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg==", "bodyText": "Please add method Javadocs clarifying what the parameters are, and how these methods are different than the ones above.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466670112", "createdAt": "2020-08-06T20:33:18Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDg3Ng==", "bodyText": "Also, let's make this the second parameter after systemName to group naming related parameters together.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466670876", "createdAt": "2020-08-06T20:34:50Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNzEzNA==", "bodyText": "good point. Thanks. Will do.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466727134", "createdAt": "2020-08-06T22:51:29Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjczNDU0Ng==", "bodyText": "Also, let's make this the second parameter after systemName to group naming related parameters together.\n\nI think change order may not be a good option. We are adding functions to help make previous ones more flexible, so may be better to keep the order the same as previous one. And also, systemName is not intended to be a naming parameter. So i think it may be better to keep it in current order. what do you think\uff1f", "url": "https://github.com/apache/samza/pull/1408#discussion_r466734546", "createdAt": "2020-08-06T23:14:16Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MDQxNw==", "bodyText": "That's a good point, let's keep this order and add javadocs.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466760417", "createdAt": "2020-08-07T00:48:25Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjY3MDExMg=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNTEyMzkxOnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wNlQyMjowNDozOVrOG9Fxvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QwMTozMjoyNVrOG9Jfxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ==", "bodyText": "Should we mark the other methods as @deprecated to encourage use of the new methods and identify other call sites that need to be updated?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466710975", "createdAt": "2020-08-06T22:04:39Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcyNjk5MQ==", "bodyText": "Not sure if it is better. With deprecated, user will still have to implement them later. Can it work as we expect?", "url": "https://github.com/apache/samza/pull/1408#discussion_r466726991", "createdAt": "2020-08-06T22:51:05Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc2MDIzNQ==", "bodyText": "@MabelYC what do you mean? I'm suggesting that we add the annotation to mark them as deprecated (e.g. https://www.baeldung.com/java-deprecated). We will not remove the older methods. This will mean that when some code calls the older methods, the author will get build time warnings that the method they're calling is deprecated, so that they can start using the new (better) method instead.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466760235", "createdAt": "2020-08-07T00:47:41Z", "author": {"login": "prateekm"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Njc3MTkxMA==", "bodyText": "@prateekm  make sense. Marked theme as @deprecated.", "url": "https://github.com/apache/samza/pull/1408#discussion_r466771910", "createdAt": "2020-08-07T01:32:25Z", "author": {"login": "MabelYC"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -32,4 +32,16 @@\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerIdPrefix) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NjcxMDk3NQ=="}, "originalCommit": {"oid": "2092530b4a58a31914f0ce28ca9b19506902151b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzkzOTM3OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjoyMjowNlrOG9gBoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjoyMjowNlrOG9gBoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0MTAyNQ==", "bodyText": "nit. add '.' at the end.", "url": "https://github.com/apache/samza/pull/1408#discussion_r467141025", "createdAt": "2020-08-07T16:22:06Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbdf8929cf462c869a49e85f760d5ebb55bb570"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk3NDE1OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMjo0OVrOG9gXFA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMjo0OVrOG9gXFA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjUxNg==", "bodyText": "\" a string to provide extra info for the consumer instance.\"", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146516", "createdAt": "2020-08-07T16:32:49Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbdf8929cf462c869a49e85f760d5ebb55bb570"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk3NTQ5OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMzoxOFrOG9gX9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMzoxOFrOG9gX9A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0Njc0MA==", "bodyText": "see above.", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146740", "createdAt": "2020-08-07T16:33:18Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbdf8929cf462c869a49e85f760d5ebb55bb570"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkxNzk3NjcwOnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMzo0MlrOG9gYuA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wN1QxNjozMzo0MlrOG9gYuA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2NzE0NjkzNg==", "bodyText": "^^^", "url": "https://github.com/apache/samza/pull/1408#discussion_r467146936", "createdAt": "2020-08-07T16:33:42Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getConsumer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string used to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getProducer}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string used to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter than {@link #getAdmin}, which can be used to provide extra\n+   * information e.g. ownership of client instance, to helper better identify admins in logs,\n+   * threads and client instances etc., along with other relevant information like systemName", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcbdf8929cf462c869a49e85f760d5ebb55bb570"}, "originalPosition": 46}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzEwMDkzOnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxNzo0NFrOG_q8yA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxNzo0NFrOG_q8yA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzE2MA==", "bodyText": "s/helper/help", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417160", "createdAt": "2020-08-12T17:17:44Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzEwMjU5OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxODoxM1rOG_q90Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxODoxM1rOG_q90Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzQyNQ==", "bodyText": "see above.", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417425", "createdAt": "2020-08-12T17:18:13Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getProducer}, which can be used to provide extra\n+   * information for the producer instance, e.g. ownership of client instance, to helper better identify producers in logs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjkzMzEwNTc2OnYy", "diffSide": "RIGHT", "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxOTowM1rOG_q_3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xMlQxNzoxOTowM1rOG_q_3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2OTQxNzk1MA==", "bodyText": "see above.", "url": "https://github.com/apache/samza/pull/1408#discussion_r469417950", "createdAt": "2020-08-12T17:19:03Z", "author": {"login": "sborya"}, "path": "samza-api/src/main/java/org/apache/samza/system/SystemFactory.java", "diffHunk": "@@ -27,9 +27,56 @@\n  * a particular system, as well as the accompanying {@link org.apache.samza.system.SystemAdmin}.\n  */\n public interface SystemFactory {\n+  @Deprecated\n   SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry);\n \n+  @Deprecated\n   SystemAdmin getAdmin(String systemName, Config config);\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getConsumer}, which can be used to provide extra\n+   * information for the consumer instance, e.g. ownership of client instance, to helper better identify consumers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create consumer for.\n+   * @param config The config to create consumer with.\n+   * @param registry MetricsRegistry to which to publish consumer specific metrics.\n+   * @param consumerLabel a string to provide info the consumer instance.\n+   * @return A SystemConsumer\n+   */\n+  default SystemConsumer getConsumer(String systemName, Config config, MetricsRegistry registry, String consumerLabel) {\n+    return getConsumer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getProducer}, which can be used to provide extra\n+   * information for the producer instance, e.g. ownership of client instance, to helper better identify producers in logs,\n+   * threads and client instances etc., along with other relevant information like systemName.\n+   *\n+   * @param systemName The name of the system to create producer for.\n+   * @param config The config to create producer with.\n+   * @param registry MetricsRegistry to which to publish producer specific metrics.\n+   * @param producerLabel a string to provide info the producer instance.\n+   * @return A SystemProducer\n+   */\n+  default SystemProducer getProducer(String systemName, Config config, MetricsRegistry registry, String producerLabel) {\n+    return getProducer(systemName, config, registry);\n+  }\n+\n+  /**\n+   * This function provides an extra input parameter to {@link #getAdmin}, which can be used to provide extra\n+   * information for the admin instance, e.g. ownership of client instance, to helper better identify admins in logs,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "10d5d2fa325039260bdefa24cc12aa5334a6ab9c"}, "originalPosition": 45}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1484, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}