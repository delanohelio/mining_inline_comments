{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDEwNTMwODQ5", "number": 1353, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MDozOFrOD3guCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMToyNDowOVrOD3zpMw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NTM0MzQ3OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQwNzo0MDozOFrOGNzLfw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozNzo1OVrOGOOC9g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMzE5OQ==", "bodyText": "This map seems redundant. Why not directly put to oldestOffsets?", "url": "https://github.com/apache/samza/pull/1353#discussion_r417123199", "createdAt": "2020-04-29T07:40:38Z", "author": {"login": "bkonold"}, "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "diffHunk": "@@ -363,15 +364,22 @@ File getStoreLocation(String storeName) {\n \n     // Step 3\n     metadata.forEach((systemStream, systemStreamMetadata) -> {\n+\n         // get the partition metadata for each system stream\n         Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata =\n           systemStreamMetadata.getSystemStreamPartitionMetadata();\n \n         // For SSPs belonging to the system stream, use the partition metadata to get the oldest offset\n-        Map<SystemStreamPartition, String> offsets = systemStreamToSsp.get(systemStream).stream()\n-          .collect(\n-              Collectors.toMap(Function.identity(), ssp -> partitionMetadata.get(ssp.getPartition()).getOldestOffset()));\n-\n+        // if partitionMetadata was not obtained for any SSP, populate oldest-offset as null\n+        // Because of https://bugs.openjdk.java.net/browse/JDK-8148463 using lambda will NPE when getOldestOffset() is null\n+        Map<SystemStreamPartition, String> offsets = new HashMap<>();\n+        for (SystemStreamPartition ssp : systemStreamToSsp.get(systemStream)) {\n+          if (partitionMetadata == null || partitionMetadata.get(ssp.getPartition()) == null) {\n+            offsets.put(ssp, null);\n+          } else {\n+            offsets.put(ssp, partitionMetadata.get(ssp.getPartition()).getOldestOffset());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d966aceb8d7d6b00c687fad718931a10c975fe8f"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2MzM4Mg==", "bodyText": "done", "url": "https://github.com/apache/samza/pull/1353#discussion_r417563382", "createdAt": "2020-04-29T19:37:59Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "diffHunk": "@@ -363,15 +364,22 @@ File getStoreLocation(String storeName) {\n \n     // Step 3\n     metadata.forEach((systemStream, systemStreamMetadata) -> {\n+\n         // get the partition metadata for each system stream\n         Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata =\n           systemStreamMetadata.getSystemStreamPartitionMetadata();\n \n         // For SSPs belonging to the system stream, use the partition metadata to get the oldest offset\n-        Map<SystemStreamPartition, String> offsets = systemStreamToSsp.get(systemStream).stream()\n-          .collect(\n-              Collectors.toMap(Function.identity(), ssp -> partitionMetadata.get(ssp.getPartition()).getOldestOffset()));\n-\n+        // if partitionMetadata was not obtained for any SSP, populate oldest-offset as null\n+        // Because of https://bugs.openjdk.java.net/browse/JDK-8148463 using lambda will NPE when getOldestOffset() is null\n+        Map<SystemStreamPartition, String> offsets = new HashMap<>();\n+        for (SystemStreamPartition ssp : systemStreamToSsp.get(systemStream)) {\n+          if (partitionMetadata == null || partitionMetadata.get(ssp.getPartition()) == null) {\n+            offsets.put(ssp, null);\n+          } else {\n+            offsets.put(ssp, partitionMetadata.get(ssp.getPartition()).getOldestOffset());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzEyMzE5OQ=="}, "originalCommit": {"oid": "d966aceb8d7d6b00c687fad718931a10c975fe8f"}, "originalPosition": 31}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5NzYwNzg4OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxNzoyNToyNVrOGOJSYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQxOTozOTowM1rOGOOFKQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4NTQwOQ==", "bodyText": "SystemStreamMetadata#getSystemStreamPartitionMetadata is also used in CoordinatorStreamStore, ContainerStorageManager and other places, we should also do null handling there right?\nIsn't it better to do at StreamMetadataCache level?", "url": "https://github.com/apache/samza/pull/1353#discussion_r417485409", "createdAt": "2020-04-29T17:25:25Z", "author": {"login": "Sanil15"}, "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "diffHunk": "@@ -363,15 +364,22 @@ File getStoreLocation(String storeName) {\n \n     // Step 3\n     metadata.forEach((systemStream, systemStreamMetadata) -> {\n+\n         // get the partition metadata for each system stream\n         Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata =\n           systemStreamMetadata.getSystemStreamPartitionMetadata();\n \n         // For SSPs belonging to the system stream, use the partition metadata to get the oldest offset\n-        Map<SystemStreamPartition, String> offsets = systemStreamToSsp.get(systemStream).stream()\n-          .collect(\n-              Collectors.toMap(Function.identity(), ssp -> partitionMetadata.get(ssp.getPartition()).getOldestOffset()));\n-\n+        // if partitionMetadata was not obtained for any SSP, populate oldest-offset as null\n+        // Because of https://bugs.openjdk.java.net/browse/JDK-8148463 using lambda will NPE when getOldestOffset() is null\n+        Map<SystemStreamPartition, String> offsets = new HashMap<>();\n+        for (SystemStreamPartition ssp : systemStreamToSsp.get(systemStream)) {\n+          if (partitionMetadata == null || partitionMetadata.get(ssp.getPartition()) == null) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d966aceb8d7d6b00c687fad718931a10c975fe8f"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzU2Mzk0NQ==", "bodyText": "the null values are on oldestOffset in the returned metadata-object not the returned objectl itself (returned val is by us and is not-null it appears).", "url": "https://github.com/apache/samza/pull/1353#discussion_r417563945", "createdAt": "2020-04-29T19:39:03Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "diffHunk": "@@ -363,15 +364,22 @@ File getStoreLocation(String storeName) {\n \n     // Step 3\n     metadata.forEach((systemStream, systemStreamMetadata) -> {\n+\n         // get the partition metadata for each system stream\n         Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata =\n           systemStreamMetadata.getSystemStreamPartitionMetadata();\n \n         // For SSPs belonging to the system stream, use the partition metadata to get the oldest offset\n-        Map<SystemStreamPartition, String> offsets = systemStreamToSsp.get(systemStream).stream()\n-          .collect(\n-              Collectors.toMap(Function.identity(), ssp -> partitionMetadata.get(ssp.getPartition()).getOldestOffset()));\n-\n+        // if partitionMetadata was not obtained for any SSP, populate oldest-offset as null\n+        // Because of https://bugs.openjdk.java.net/browse/JDK-8148463 using lambda will NPE when getOldestOffset() is null\n+        Map<SystemStreamPartition, String> offsets = new HashMap<>();\n+        for (SystemStreamPartition ssp : systemStreamToSsp.get(systemStream)) {\n+          if (partitionMetadata == null || partitionMetadata.get(ssp.getPartition()) == null) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzQ4NTQwOQ=="}, "originalCommit": {"oid": "d966aceb8d7d6b00c687fad718931a10c975fe8f"}, "originalPosition": 28}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODQzNjMyOnYy", "diffSide": "RIGHT", "path": "samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMToyMTo0MVrOGOReyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMVQwNTo0MjozMVrOGPCqCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTY1OA==", "bodyText": "What's the purpose for multiple ssps if they are each testing the same condition?", "url": "https://github.com/apache/samza/pull/1353#discussion_r417619658", "createdAt": "2020-04-29T21:21:41Z", "author": {"login": "bkonold"}, "path": "samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java", "diffHunk": "@@ -182,6 +186,36 @@ public void testGetFileOffsets() {\n       });\n   }\n \n+  /**\n+   * This test is for cases, when calls to systemAdmin (e.g., KafkaSystemAdmin's) get-stream-metadata method return null.\n+   */\n+  @Test\n+  public void testGetStartingOffsetsWhenStreamMetadataIsNull() {\n+    final String storeName = \"test-get-starting-offset-store\";\n+    final String taskName = \"test-get-starting-offset-task\";\n+\n+    Set<SystemStreamPartition> ssps = IntStream.range(1, 6)\n+        .mapToObj(idx -> new SystemStreamPartition(\"test-system\", \"test-stream\", new Partition(idx)))\n+        .collect(Collectors.toSet());\n+    Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata = ssps.stream()\n+        .collect(Collectors.toMap(SystemStreamPartition::getPartition,\n+            x -> new SystemStreamMetadata.SystemStreamPartitionMetadata(null, \"1\", \"2\")));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b8eef38312623ee519afece2f122b2ac4675166"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODQyNTM1NA==", "bodyText": "the task-sideinputstoragemanager uses maps to index ssps so we should have more than 1, but youre right two are probably enough.", "url": "https://github.com/apache/samza/pull/1353#discussion_r418425354", "createdAt": "2020-05-01T05:42:31Z", "author": {"login": "rmatharu"}, "path": "samza-core/src/test/java/org/apache/samza/storage/TestTaskSideInputStorageManager.java", "diffHunk": "@@ -182,6 +186,36 @@ public void testGetFileOffsets() {\n       });\n   }\n \n+  /**\n+   * This test is for cases, when calls to systemAdmin (e.g., KafkaSystemAdmin's) get-stream-metadata method return null.\n+   */\n+  @Test\n+  public void testGetStartingOffsetsWhenStreamMetadataIsNull() {\n+    final String storeName = \"test-get-starting-offset-store\";\n+    final String taskName = \"test-get-starting-offset-task\";\n+\n+    Set<SystemStreamPartition> ssps = IntStream.range(1, 6)\n+        .mapToObj(idx -> new SystemStreamPartition(\"test-system\", \"test-stream\", new Partition(idx)))\n+        .collect(Collectors.toSet());\n+    Map<Partition, SystemStreamMetadata.SystemStreamPartitionMetadata> partitionMetadata = ssps.stream()\n+        .collect(Collectors.toMap(SystemStreamPartition::getPartition,\n+            x -> new SystemStreamMetadata.SystemStreamPartitionMetadata(null, \"1\", \"2\")));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYxOTY1OA=="}, "originalCommit": {"oid": "2b8eef38312623ee519afece2f122b2ac4675166"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU5ODQ0NDAzOnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMToyNDowOVrOGORjuw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yOVQyMToyNDowOVrOGORjuw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNzYyMDkyMw==", "bodyText": "thanks for adding docs", "url": "https://github.com/apache/samza/pull/1353#discussion_r417620923", "createdAt": "2020-04-29T21:24:09Z", "author": {"login": "bkonold"}, "path": "samza-core/src/main/java/org/apache/samza/storage/TaskSideInputStorageManager.java", "diffHunk": "@@ -346,7 +346,8 @@ File getStoreLocation(String storeName) {\n    *   3. Fetches the partition metadata for each system stream and fetch the corresponding partition metadata\n    *      and populates the oldest offset for SSPs belonging to the system stream.\n    *\n-   * @return a {@link Map} of {@link SystemStreamPartition} to their oldest offset.\n+   * @return a {@link Map} of {@link SystemStreamPartition} to their oldest offset. If partitionMetadata could not be\n+   * obtained for any {@link SystemStreamPartition} the offset for it is populated as null.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "2b8eef38312623ee519afece2f122b2ac4675166"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1409, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}