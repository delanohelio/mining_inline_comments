{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzY3NzU2MzY1", "number": 1260, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNTo0NlrODbE4CQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNjoxMlrODbE4Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzE4MDI1OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNTo0NlrOFiWv9A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjoxMjozM1rOFiXfiA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODYyOA==", "bodyText": "Minor: Can we do the following?\nval registeredSSPs = systemStreamPartitions.getOrElse(taskName, Set())", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568628", "createdAt": "2020-01-28T01:15:46Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager\n+      val registeredSSPs = systemStreamPartitions.getOrElse(taskName, immutable.Set[SystemStreamPartition]())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4MDgwOA==", "bodyText": "We need to indicate the type somewhere or the compiler throws up. E.g.\nval registeredSSPs = systemStreamPartitions.getOrElse(taskName, Set[SystemStreamPartition]()", "url": "https://github.com/apache/samza/pull/1260#discussion_r371580808", "createdAt": "2020-01-28T02:12:33Z", "author": {"login": "bkonold"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager\n+      val registeredSSPs = systemStreamPartitions.getOrElse(taskName, immutable.Set[SystemStreamPartition]())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODYyOA=="}, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI5NzE4MDc0OnYy", "diffSide": "RIGHT", "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMToxNjoxMlrOFiWwSw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0yOFQwMjoxMjo1MVrOFiXftw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODcxNQ==", "bodyText": "Let's add a comment explaining when this will not be the case.", "url": "https://github.com/apache/samza/pull/1260#discussion_r371568715", "createdAt": "2020-01-28T01:16:12Z", "author": {"login": "prateekm"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU4MDg1NQ==", "bodyText": "Good point, I'll add an example.", "url": "https://github.com/apache/samza/pull/1260#discussion_r371580855", "createdAt": "2020-01-28T02:12:51Z", "author": {"login": "bkonold"}, "path": "samza-core/src/main/scala/org/apache/samza/checkpoint/OffsetManager.scala", "diffHunk": "@@ -353,13 +353,16 @@ class OffsetManager(\n         }\n       }\n \n-      // invoke checkpoint listeners\n-      checkpoint.getOffsets.asScala.groupBy { case (ssp, _) => ssp.getSystem }.foreach {\n-        case (systemName:String, offsets: Map[SystemStreamPartition, String]) => {\n-          // Option is empty if there is no checkpointListener for this systemName\n-          checkpointListeners.get(systemName).foreach(_.onCheckpoint(offsets.asJava))\n+      // invoke checkpoint listeners only for SSPs that are registered with the OffsetManager", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3MTU2ODcxNQ=="}, "originalCommit": {"oid": "54a5b0cde16fe66e56096d7f273bdcfe41100605"}, "originalPosition": 9}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1558, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}