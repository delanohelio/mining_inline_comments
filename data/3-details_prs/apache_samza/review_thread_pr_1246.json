{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxMjQxNDgy", "number": 1246, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDozMToxNVrODXs1dQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDozMToxNVrODXs1dQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjI2MTc4NDIxOnYy", "diffSide": "RIGHT", "path": "samza-yarn/src/main/scala/org/apache/samza/job/yarn/YarnJob.scala", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMDozMToxNlrOFdJAJQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xNFQwMToyMDozN1rOFdJtRg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMDUxNw==", "bodyText": "Is \"config\" here intended to be only the subset of configs required for submissions (the subset you outlined in SEP-23)?\nI may be misunderstanding the flow somewhere, but won't ApplicationRunnerMain end up loading the full (pre-planning) config from the properties file which will end up getting passed through to here?", "url": "https://github.com/apache/samza/pull/1246#discussion_r366100517", "createdAt": "2020-01-14T00:31:16Z", "author": {"login": "bkonold"}, "path": "samza-yarn/src/main/scala/org/apache/samza/job/yarn/YarnJob.scala", "diffHunk": "@@ -173,10 +173,16 @@ object YarnJob extends Logging {\n   @VisibleForTesting\n   private[yarn] def buildEnvironment(config: Config, yarnConfig: YarnConfig,\n     jobConfig: JobConfig): Map[String, String] = {\n-    val coordinatorSystemConfig = CoordinatorStreamUtil.buildCoordinatorStreamConfig(config)\n     val envMapBuilder = Map.newBuilder[String, String]\n-    envMapBuilder += ShellCommandConfig.ENV_COORDINATOR_SYSTEM_CONFIG ->\n-      Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(coordinatorSystemConfig))\n+    if (jobConfig.getConfigLoaderFactory.isPresent) {\n+      envMapBuilder += ShellCommandConfig.ENV_SUBMISSION_CONFIG ->\n+        Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(config))", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6bca4abd1222ca0cd5a9f9f0e7875ad626b2a3c3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMjQwMQ==", "bodyText": "Very good question, in the final approved SEP-23, we will not read any properties/config file during submission anymore. All submission related configs will be provided explicitly using --config.\nApplicationRunnerMain will be updated in a separate PR to reflect this change as well. Full job config will only be read on AM, and then apply the overridden values we get from ApplicationRunnerMain will be passed to AM to override the value we load.", "url": "https://github.com/apache/samza/pull/1246#discussion_r366102401", "createdAt": "2020-01-14T00:39:03Z", "author": {"login": "kw2542"}, "path": "samza-yarn/src/main/scala/org/apache/samza/job/yarn/YarnJob.scala", "diffHunk": "@@ -173,10 +173,16 @@ object YarnJob extends Logging {\n   @VisibleForTesting\n   private[yarn] def buildEnvironment(config: Config, yarnConfig: YarnConfig,\n     jobConfig: JobConfig): Map[String, String] = {\n-    val coordinatorSystemConfig = CoordinatorStreamUtil.buildCoordinatorStreamConfig(config)\n     val envMapBuilder = Map.newBuilder[String, String]\n-    envMapBuilder += ShellCommandConfig.ENV_COORDINATOR_SYSTEM_CONFIG ->\n-      Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(coordinatorSystemConfig))\n+    if (jobConfig.getConfigLoaderFactory.isPresent) {\n+      envMapBuilder += ShellCommandConfig.ENV_SUBMISSION_CONFIG ->\n+        Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(config))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMDUxNw=="}, "originalCommit": {"oid": "6bca4abd1222ca0cd5a9f9f0e7875ad626b2a3c3"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjExMjA3MA==", "bodyText": "Sounds good. Thanks for clarifying.", "url": "https://github.com/apache/samza/pull/1246#discussion_r366112070", "createdAt": "2020-01-14T01:20:37Z", "author": {"login": "bkonold"}, "path": "samza-yarn/src/main/scala/org/apache/samza/job/yarn/YarnJob.scala", "diffHunk": "@@ -173,10 +173,16 @@ object YarnJob extends Logging {\n   @VisibleForTesting\n   private[yarn] def buildEnvironment(config: Config, yarnConfig: YarnConfig,\n     jobConfig: JobConfig): Map[String, String] = {\n-    val coordinatorSystemConfig = CoordinatorStreamUtil.buildCoordinatorStreamConfig(config)\n     val envMapBuilder = Map.newBuilder[String, String]\n-    envMapBuilder += ShellCommandConfig.ENV_COORDINATOR_SYSTEM_CONFIG ->\n-      Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(coordinatorSystemConfig))\n+    if (jobConfig.getConfigLoaderFactory.isPresent) {\n+      envMapBuilder += ShellCommandConfig.ENV_SUBMISSION_CONFIG ->\n+        Util.envVarEscape(SamzaObjectMapper.getObjectMapper.writeValueAsString(config))", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NjEwMDUxNw=="}, "originalCommit": {"oid": "6bca4abd1222ca0cd5a9f9f0e7875ad626b2a3c3"}, "originalPosition": 10}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1536, "cost": 1, "resetAt": "2021-11-11T21:28:48Z"}}}