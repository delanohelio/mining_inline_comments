{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk0OTE2NDQ3", "number": 1334, "title": "SAMZA-2496: TestContainerHeartbeatMonitor does not properly stop the ContainerHeartbeatMonitor", "bodyText": "Symptom: In some environments, the samza-core unit test suite fails with Process 'Gradle Test Executor N' finished with non-zero exit value 1 This problem might be caused by incorrect test process configuration.\nCause: ContainerHeartbeatMonitor submits a delayed \"force shutdown\" task (uses System.exit(1)) to shut down the process when the job coordinator dies. In TestContainerHeartbeatMonitor, this \"force shutdown\" task is not cancelled when the test is complete. If the remainder of the samza-core tests last longer than the shutdown timeout (2 minutes), then the shutdown task will kill the test suite process with an exit code of 1. In some environments, TestContainerHeartbeatMonitor runs late enough in the test suite (it seems like the ordering of test classes is non-deterministic) that the test suite finishes successfully before the 2 minute timeout, so this error is not always seen.\nFix: In the test, mock the executor service so that the \"force shutdown\" task never runs.\nTests: Reduced the force shutdown timeout to 3 seconds in order to consistently reproduce the issue before the change. Then, applied the change and kept the 3-second timeout and verified that there no longer was an issue.\nAPI/Usage changes: N/A", "createdAt": "2020-03-27T18:47:44Z", "url": "https://github.com/apache/samza/pull/1334", "merged": true, "mergeCommit": {"oid": "bbb5bdee7ccbd2b37ff07ef7e832f95b6a4c0ab4"}, "closed": true, "closedAt": "2020-03-27T22:02:44Z", "author": {"login": "cameronlee314"}, "timelineItems": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcR083CAH2gAyMzk0OTE2NDQ3OjlhYjdmYzczNDdlZTM5ZWFkYTljODE1YmVmNWRmODViMWM1MjRlNzY=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcR32DkgFqTM4MzIxODMzNg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "9ab7fc7347ee39eada9c815bef5df85b1c524e76", "author": {"user": {"login": "cameronlee314", "name": "Cameron Lee"}}, "url": "https://github.com/apache/samza/commit/9ab7fc7347ee39eada9c815bef5df85b1c524e76", "committedDate": "2020-03-27T18:24:20Z", "message": "SAMZA-2496: TestContainerHeartbeatMonitor does not properly stop the ContainerHeartbeatMonitor"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTI5NTI2", "url": "https://github.com/apache/samza/pull/1334#pullrequestreview-383129526", "createdAt": "2020-03-27T19:05:16Z", "commit": {"oid": "9ab7fc7347ee39eada9c815bef5df85b1c524e76"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMTczODc3", "url": "https://github.com/apache/samza/pull/1334#pullrequestreview-383173877", "createdAt": "2020-03-27T20:19:33Z", "commit": {"oid": "9ab7fc7347ee39eada9c815bef5df85b1c524e76"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDoxOTozM1rOF9AmzA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMy0yN1QyMDoxOTozM1rOF9AmzA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM5OTUxNzM4OA==", "bodyText": "I see you are not the author of tests. But, do we need to wait for 2 seconds here for this test? Isn't verifying the scheduler for no task submissions below sufficient?", "url": "https://github.com/apache/samza/pull/1334#discussion_r399517388", "createdAt": "2020-03-27T20:19:33Z", "author": {"login": "mynameborat"}, "path": "samza-core/src/test/java/org/apache/samza/container/TestContainerHeartbeatMonitor.java", "diffHunk": "@@ -20,44 +20,77 @@\n package org.apache.samza.container;\n \n import java.util.concurrent.CountDownLatch;\n+import java.util.concurrent.ScheduledExecutorService;\n import java.util.concurrent.TimeUnit;\n-import junit.framework.Assert;\n import org.junit.Test;\n \n-import static org.mockito.Mockito.*;\n+import static org.junit.Assert.assertEquals;\n+import static org.junit.Assert.assertFalse;\n+import static org.junit.Assert.assertTrue;\n+import static org.mockito.Matchers.any;\n+import static org.mockito.Matchers.anyLong;\n+import static org.mockito.Matchers.eq;\n+import static org.mockito.Mockito.mock;\n+import static org.mockito.Mockito.never;\n+import static org.mockito.Mockito.verify;\n+import static org.mockito.Mockito.when;\n \n-public class TestContainerHeartbeatMonitor {\n \n+public class TestContainerHeartbeatMonitor {\n   @Test\n-  public void testCallbackWhenHeartbeatDead()\n-      throws InterruptedException {\n+  public void testCallbackWhenHeartbeatDead() throws InterruptedException {\n     ContainerHeartbeatClient mockClient = mock(ContainerHeartbeatClient.class);\n     CountDownLatch countDownLatch = new CountDownLatch(1);\n-    Runnable onExpired = () -> {\n-      countDownLatch.countDown();\n-    };\n-    ContainerHeartbeatMonitor monitor = new ContainerHeartbeatMonitor(onExpired, mockClient);\n+    Runnable onExpired = countDownLatch::countDown;\n     ContainerHeartbeatResponse response = new ContainerHeartbeatResponse(false);\n     when(mockClient.requestHeartbeat()).thenReturn(response);\n+    ScheduledExecutorService scheduler = buildScheduledExecutorService();\n+    ContainerHeartbeatMonitor monitor = new ContainerHeartbeatMonitor(onExpired, mockClient, scheduler);\n     monitor.start();\n     boolean success = countDownLatch.await(2, TimeUnit.SECONDS);\n-    Assert.assertTrue(success);\n+    assertTrue(success);\n+    // check that the shutdown task got submitted, but don't actually execute it since it will shut down the process\n+    verify(scheduler).schedule(any(Runnable.class), eq((long) ContainerHeartbeatMonitor.SHUTDOWN_TIMOUT_MS),\n+        eq(TimeUnit.MILLISECONDS));\n+\n+    monitor.stop();\n+    verify(scheduler).shutdown();\n   }\n \n   @Test\n-  public void testDoesNotCallbackWhenHeartbeatAlive()\n-      throws InterruptedException {\n+  public void testDoesNotCallbackWhenHeartbeatAlive() throws InterruptedException {\n     ContainerHeartbeatClient client = mock(ContainerHeartbeatClient.class);\n     CountDownLatch countDownLatch = new CountDownLatch(1);\n-    Runnable onExpired = () -> {\n-      countDownLatch.countDown();\n-    };\n-    ContainerHeartbeatMonitor monitor = new ContainerHeartbeatMonitor(onExpired, client);\n+    Runnable onExpired = countDownLatch::countDown;\n     ContainerHeartbeatResponse response = new ContainerHeartbeatResponse(true);\n     when(client.requestHeartbeat()).thenReturn(response);\n+    ScheduledExecutorService scheduler = buildScheduledExecutorService();\n+    ContainerHeartbeatMonitor monitor = new ContainerHeartbeatMonitor(onExpired, client, scheduler);\n     monitor.start();\n     boolean success = countDownLatch.await(2, TimeUnit.SECONDS);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ab7fc7347ee39eada9c815bef5df85b1c524e76"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "43eb82acf9cc576cf5b9771cfe70e29c4c74bcf5", "author": {"user": {"login": "cameronlee314", "name": "Cameron Lee"}}, "url": "https://github.com/apache/samza/commit/43eb82acf9cc576cf5b9771cfe70e29c4c74bcf5", "committedDate": "2020-03-27T21:39:17Z", "message": "refactor test to prevent waiting"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzgzMjE4MzM2", "url": "https://github.com/apache/samza/pull/1334#pullrequestreview-383218336", "createdAt": "2020-03-27T21:46:37Z", "commit": {"oid": "43eb82acf9cc576cf5b9771cfe70e29c4c74bcf5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4845, "cost": 1, "resetAt": "2021-11-01T11:59:11Z"}}}