{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1Nzg3MTI1", "number": 1126, "reviewThreads": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MDozOFrOEZRNkg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoxNDo1N1rOEda13A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTMxODU4OnYy", "diffSide": "RIGHT", "path": "changelog", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MDozOFrOHB_YMg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MDozOFrOHB_YMg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTAxMA==", "bodyText": "You may want to say broker refresh token here explicitly.  As well as indicate why this support is needed.  Once it's shipped any broker app will be able to use this... in any scenario, but it would be good to know which scenario originally required it.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r471849010", "createdAt": "2020-08-18T00:40:38Z", "author": {"login": "shoatman"}, "path": "changelog", "diffHunk": "@@ -2,6 +2,7 @@ MSAL Wiki : https://github.com/AzureAD/microsoft-authentication-library-for-andr\n \n Version v.Next\n ----------\n+- Expose RT to Broker apps.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTMxOTkwOnYy", "diffSide": "RIGHT", "path": "msal/src/main/java/com/microsoft/identity/client/IBrokerRtAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MToxNFrOHB_Y4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MToxNFrOHB_Y4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTE4NA==", "bodyText": "I'd personally spell out refresh token here.  But this is an opinion, not required.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r471849184", "createdAt": "2020-08-18T00:41:14Z", "author": {"login": "shoatman"}, "path": "msal/src/main/java/com/microsoft/identity/client/IBrokerRtAccessor.java", "diffHunk": "@@ -0,0 +1,38 @@\n+// Copyright (c) Microsoft Corporation.\n+// All rights reserved.\n+//\n+// This code is licensed under the MIT License.\n+//\n+// Permission is hereby granted, free of charge, to any person obtaining a copy\n+// of this software and associated documentation files(the \"Software\"), to deal\n+// in the Software without restriction, including without limitation the rights\n+// to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+// copies of the Software, and to permit persons to whom the Software is\n+// furnished to do so, subject to the following conditions :\n+//\n+// The above copyright notice and this permission notice shall be included in\n+// all copies or substantial portions of the Software.\n+//\n+// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+// THE SOFTWARE.\n+package com.microsoft.identity.client;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.exception.MsalClientException;\n+\n+public interface IBrokerRtAccessor {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk0OTMyMjQwOnYy", "diffSide": "RIGHT", "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "isResolved": true, "comments": {"totalCount": 9, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0xOFQwMDo0MjozM1rOHB_aRg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoxMzo1OVrOHIkTuQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg==", "bodyText": "Why does this need to be part of the public API of MSAL?  Is there an objection to this being accessed via an internal or private method?", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r471849542", "createdAt": "2020-08-18T00:42:33Z", "author": {"login": "shoatman"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MzM3Mzc0NA==", "bodyText": "CP and AuthApp has to call it. Currently they're using (local) ADAL to obtain Broker AT/RT, then pass it into WPJ's Join() operation as parameters.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r473373744", "createdAt": "2020-08-19T22:10:00Z", "author": {"login": "rpdome"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk5NTI5NA==", "bodyText": "@rpdome @shoatman We could do like we did for TSL APIs and hide it away.... There's an ITokenShare API that PublicClientApplication needs to be cast to before those methods can be used. I think exposing this method on PCA and not allowing non-broker apps to call it is going to be incredibly frustrating for those developers who have requested we expose RT in the past", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r475995294", "createdAt": "2020-08-25T00:22:22Z", "author": {"login": "iambmelt"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NTk5NjYxMA==", "bodyText": "That's what I'm aiming for. IBrokerRefreshTokenAccessor = ITokenShare.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r475996610", "createdAt": "2020-08-25T00:24:26Z", "author": {"login": "rpdome"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjAyMzUyOQ==", "bodyText": "@rpdome Sounds just fine to me then \ud83d\udc4d", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r476023529", "createdAt": "2020-08-25T01:05:06Z", "author": {"login": "iambmelt"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU4NDA0Nw==", "bodyText": "@iambmelt - One of the goals of our libraries is not to expose refresh tokens.  Anyone can access the refresh token if they really want to... but we don't want to make it easy.  Also, what will we do when we enable refresh token PoP?  Are we planning to allow them to export the private key as well?", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r476584047", "createdAt": "2020-08-25T16:35:21Z", "author": {"login": "shoatman"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU4NDYyMw==", "bodyText": "@rpdome - I think we should have a quick meeting to discuss this in more detail.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r476584623", "createdAt": "2020-08-25T16:36:21Z", "author": {"login": "shoatman"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjU4NTUwMA==", "bodyText": "@rpdome @shoatman Agree, let's sync on these points", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r476585500", "createdAt": "2020-08-25T16:37:41Z", "author": {"login": "iambmelt"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc0NTUyOQ==", "bodyText": "Updated as synced.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r478745529", "createdAt": "2020-08-27T23:13:59Z", "author": {"login": "rpdome"}, "path": "msal/src/main/java/com/microsoft/identity/client/PublicClientApplication.java", "diffHunk": "@@ -1121,6 +1138,22 @@ private void setupTelemetry(@NonNull final Context context,\n                 .build();\n     }\n \n+    @Override\n+    public String getBrokerRt(@NonNull final String accountObjectId) throws MsalClientException {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3MTg0OTU0Mg=="}, "originalCommit": {"oid": "cfd6865255d5a64cb9cfc037cbe7c1ed2cca4971"}, "originalPosition": 61}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk5MjgzOTMyOnYy", "diffSide": "RIGHT", "path": "msal/src/main/java/com/microsoft/identity/client/internal/BrokerClientIdRefreshTokenAccessor.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoxNDo1N1rOHIkU2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yN1QyMzoxNDo1N1rOHIkU2A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3ODc0NTgxNg==", "bodyText": "Do we want to put this in something like com.microsoft.identity.client.internal.api ?", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1126#discussion_r478745816", "createdAt": "2020-08-27T23:14:57Z", "author": {"login": "iambmelt"}, "path": "msal/src/main/java/com/microsoft/identity/client/internal/BrokerClientIdRefreshTokenAccessor.java", "diffHunk": "@@ -0,0 +1,118 @@\n+//  Copyright (c) Microsoft Corporation.\n+//  All rights reserved.\n+//\n+//  This code is licensed under the MIT License.\n+//\n+//  Permission is hereby granted, free of charge, to any person obtaining a copy\n+//  of this software and associated documentation files(the \"Software\"), to deal\n+//  in the Software without restriction, including without limitation the rights\n+//  to use, copy, modify, merge, publish, distribute, sublicense, and / or sell\n+//  copies of the Software, and to permit persons to whom the Software is\n+//  furnished to do so, subject to the following conditions :\n+//\n+//  The above copyright notice and this permission notice shall be included in\n+//  all copies or substantial portions of the Software.\n+//\n+//  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n+//  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n+//  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n+//  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n+//  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n+//  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n+//  THE SOFTWARE.\n+\n+package com.microsoft.identity.client.internal;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0a43097dad33db34fb00110ec47f32a76758a00a"}, "originalPosition": 24}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1811, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}