{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDczNDE3NDg3", "number": 1138, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDozMDozMVrOEcO2Ww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDozMDozMVrOEcO2Ww==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjk4MDM4ODc1OnYy", "diffSide": "RIGHT", "path": "msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDozMDozMVrOHGomYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0yNVQyMDozMDozMVrOHGomYQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3NjcxODY4OQ==", "bodyText": "This is not a new problem, just something to think about.  This is an unbounded-in-time get on a future - it could block forever if you let it, though if the scope is simple enough you can understand it all it might be OK.  In the past, in similar situations, I've allowed clients to specify a timeout in their configuration (supplying a default that was well-known and safe), and then used a custom future implementation that blocked for only that amount of time (specified at construction), yielding a TimeoutException when appropriate.  We might want to consider that kind of approach.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1138#discussion_r476718689", "createdAt": "2020-08-25T20:30:31Z", "author": {"login": "AdamBJohnsonx"}, "path": "msal/src/main/java/com/microsoft/identity/client/MultipleAccountPublicClientApplication.java", "diffHunk": "@@ -160,12 +162,21 @@ public void onError(MsalException exception) {\n             }\n         }, PublicApiId.MULTIPLE_ACCOUNT_PCA_GET_ACCOUNTS);\n \n-        final AsyncResult<List<IAccount>> result = future.get();\n+        try {\n+            final AsyncResult<List<IAccount>> result = future.get();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "6086f3674a69076de44995d4c1d3e7c3dfd04a92"}, "originalPosition": 16}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1826, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}