{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzU4NDg3MDQz", "number": 881, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDowNTowNlrODViIvQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDowNTowNlrODViIvQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjIzOTA1OTgxOnYy", "diffSide": "RIGHT", "path": "msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDowNTowNlrOFZ0BWQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0wMlQyMDo0Mjo1MlrOFZ0udg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMTAzMw==", "bodyText": "Why add new overloads ? I personally prefer to add  overloads only if it's must,  else too many methods would effect the readability of public api's . We spent a lot of time cleaning up the overloads already and we introduced AcquireTokenParameters for this reason . Since we expose Fragment through AcquireTokenParameters the developers should be able to use that.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/881#discussion_r362611033", "createdAt": "2020-01-02T20:05:06Z", "author": {"login": "kreedula"}, "path": "msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java", "diffHunk": "@@ -115,6 +116,31 @@ void acquireToken(@NonNull final Activity activity,\n                       @NonNull final AuthenticationCallback callback\n     );\n \n+    /**\n+     * Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.\n+     * Default value for {@link Prompt} is {@link Prompt#SELECT_ACCOUNT}.\n+     *\n+     * @param fragment Non-null {@link Fragment} that will be replaced by {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment}.\n+     *                 NOTE: Only when the following conditions in the config file are satisfied, MSAL UI will be displayed as a fragment.\n+     *                 1. \"broker_redirect_uri_registered\" : \"FALSE\"\n+     *                 2. \"authorization_user_agent\" : \"WEBVIEW\"\n+     *                 Otherwise, it will be displayed as an {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param scopes   The non-null array of scopes to be requested for the access token.\n+     *                 MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n+     * @param callback The {@link AuthenticationCallback} to receive the result back.\n+     *                 1) If user cancels the flow by pressing the device back button, the result will be sent\n+     *                 back via {@link AuthenticationCallback#onCancel()}.\n+     *                 2) If the sdk successfully receives the token back, result will be sent back via\n+     *                 {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}\n+     *                 3) All the other errors will be sent back via\n+     *                 {@link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void acquireToken(@NonNull final Fragment fragment,", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcd89729718338d6a62c5f02e8194ed3d1dd9ef6"}, "originalPosition": 40}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYyMjU4Mg==", "bodyText": "removed.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/881#discussion_r362622582", "createdAt": "2020-01-02T20:42:52Z", "author": {"login": "rpdome"}, "path": "msal/src/main/java/com/microsoft/identity/client/IMultipleAccountPublicClientApplication.java", "diffHunk": "@@ -115,6 +116,31 @@ void acquireToken(@NonNull final Activity activity,\n                       @NonNull final AuthenticationCallback callback\n     );\n \n+    /**\n+     * Acquire token interactively, will pop-up webUI. Interactive flow will skip the cache lookup.\n+     * Default value for {@link Prompt} is {@link Prompt#SELECT_ACCOUNT}.\n+     *\n+     * @param fragment Non-null {@link Fragment} that will be replaced by {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationFragment}.\n+     *                 NOTE: Only when the following conditions in the config file are satisfied, MSAL UI will be displayed as a fragment.\n+     *                 1. \"broker_redirect_uri_registered\" : \"FALSE\"\n+     *                 2. \"authorization_user_agent\" : \"WEBVIEW\"\n+     *                 Otherwise, it will be displayed as an {@link com.microsoft.identity.common.internal.providers.oauth2.AuthorizationActivity}.\n+     * @param scopes   The non-null array of scopes to be requested for the access token.\n+     *                 MSAL always sends the scopes 'openid profile offline_access'.  Do not include any of these scopes in the scope parameter.\n+     * @param callback The {@link AuthenticationCallback} to receive the result back.\n+     *                 1) If user cancels the flow by pressing the device back button, the result will be sent\n+     *                 back via {@link AuthenticationCallback#onCancel()}.\n+     *                 2) If the sdk successfully receives the token back, result will be sent back via\n+     *                 {@link AuthenticationCallback#onSuccess(IAuthenticationResult)}\n+     *                 3) All the other errors will be sent back via\n+     *                 {@link AuthenticationCallback#onError(MsalException)}.\n+     */\n+    void acquireToken(@NonNull final Fragment fragment,", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2MjYxMTAzMw=="}, "originalCommit": {"oid": "dcd89729718338d6a62c5f02e8194ed3d1dd9ef6"}, "originalPosition": 40}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1962, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}