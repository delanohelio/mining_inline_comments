{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTAxMzExODc5", "number": 1186, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMzo1MjowNVrOEutjeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0NDowNFrOEu_HjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NDE2MzEzOnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQyMzo1MjowNVrOHjSiSA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0NzozMlrOHk6luA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTg5Ng==", "bodyText": "Add license", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r506765896", "createdAt": "2020-10-16T23:52:05Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "79de77aa9e12a40013327a83bb9d93673b16ac4c"}, "originalPosition": 1}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MDcxMg==", "bodyText": "Added license", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508470712", "createdAt": "2020-10-20T12:47:32Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjc2NTg5Ng=="}, "originalCommit": {"oid": "79de77aa9e12a40013327a83bb9d93673b16ac4c"}, "originalPosition": 1}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzAzNDY5OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzozNzowMFrOHjsd5A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo1MToxNFrOHk6vbA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MDc1Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            //https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n          \n          \n            \n            //https://identitydivision.visualstudio.com/DevEx/_workitems/edit/832430", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507190756", "createdAt": "2020-10-18T17:37:00Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 27}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MzE5Ng==", "bodyText": "corrected the link.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508473196", "createdAt": "2020-10-20T12:51:14Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MDc1Ng=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 27}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzAzNjc0OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzozOTozOVrOHjse8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo1MDo1M1rOHk6ubA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTAyNg==", "bodyText": "Why true here?", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191026", "createdAt": "2020-10-18T17:39:39Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3Mjk0MA==", "bodyText": "removed the statement forceRefresh(true)", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472940", "createdAt": "2020-10-20T12:50:53Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTAyNg=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzAzOTU2OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0MjoyMVrOHjsgOg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo1MDoyOFrOHk6tdg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM1NA==", "bodyText": "This can be false", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191354", "createdAt": "2020-10-18T17:42:21Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 59}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjY5NA==", "bodyText": "changed to false.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472694", "createdAt": "2020-10-20T12:50:28Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM1NA=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 59}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzAzOTc1OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0Mjo0NFrOHjsgVw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo1MDowM1rOHk6sVA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM4Mw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                                            .broker(getBroker())\n          \n          \n            \n                                            .broker(mBroker)", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191383", "createdAt": "2020-10-18T17:42:44Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 58}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjQwNA==", "bodyText": "updated to mBroker", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472404", "createdAt": "2020-10-20T12:50:03Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTM4Mw=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA0MDMyOnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0MzozMVrOHjsgnQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0OTo0N1rOHk6roQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTQ1Mw==", "bodyText": "You no longer need to override this", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191453", "createdAt": "2020-10-18T17:43:31Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(refreshTokenLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(refreshTokenParameters);\n+        refreshTokenLatch.await();\n+    }\n+\n+    @Override\n+    public LabUserQuery getLabUserQuery() {\n+        final LabUserQuery query = new LabUserQuery();\n+        query.azureEnvironment = LabConstants.AzureEnvironment.AZURE_CLOUD;\n+        query.protectionPolicy = LabConstants.ProtectionPolicy.MAM_CA;\n+        return query;\n+    }\n+\n+    @Override\n+    public String getTempUserType() {\n+        return null;\n+    }\n+\n+    @Override\n+    public String[] getScopes() {\n+        return new String[]{\"00000003-0000-0ff1-ce00-000000000000\"};\n+    }\n+\n+    @Override\n+    public String getAuthority() {\n+        return mApplication.getConfiguration().getDefaultAuthority().toString();\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ITestBroker getBroker() {\n+        return new BrokerMicrosoftAuthenticator();\n+    }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 133}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MjIyNQ==", "bodyText": "removed the getBroker() function.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508472225", "createdAt": "2020-10-20T12:49:47Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+\n+        // acquiring token silently after expiring AT\n+        final CountDownLatch refreshTokenLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters refreshTokenParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(true)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(refreshTokenLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(refreshTokenParameters);\n+        refreshTokenLatch.await();\n+    }\n+\n+    @Override\n+    public LabUserQuery getLabUserQuery() {\n+        final LabUserQuery query = new LabUserQuery();\n+        query.azureEnvironment = LabConstants.AzureEnvironment.AZURE_CLOUD;\n+        query.protectionPolicy = LabConstants.ProtectionPolicy.MAM_CA;\n+        return query;\n+    }\n+\n+    @Override\n+    public String getTempUserType() {\n+        return null;\n+    }\n+\n+    @Override\n+    public String[] getScopes() {\n+        return new String[]{\"00000003-0000-0ff1-ce00-000000000000\"};\n+    }\n+\n+    @Override\n+    public String getAuthority() {\n+        return mApplication.getConfiguration().getDefaultAuthority().toString();\n+    }\n+\n+    @NonNull\n+    @Override\n+    public ITestBroker getBroker() {\n+        return new BrokerMicrosoftAuthenticator();\n+    }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTQ1Mw=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 133}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NzA0MDc3OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNzo0NDowNFrOHjsg2g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMjo0OToyNlrOHk6qog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTUxNA==", "bodyText": "Let's add a Thread.sleep for 30 seconds here to expire the in-memory throttling cache", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r507191514", "createdAt": "2020-10-18T17:44:04Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 90}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODQ3MTk3MA==", "bodyText": "added thread.sleep for 30 seconds.", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1186#discussion_r508471970", "createdAt": "2020-10-20T12:49:26Z", "author": {"login": "kkrishnareddy"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/TestCase832430.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package com.microsoft.identity.client.msal.automationapp.testpass.broker;\n+\n+import androidx.annotation.NonNull;\n+\n+import com.microsoft.identity.client.AcquireTokenParameters;\n+import com.microsoft.identity.client.AcquireTokenSilentParameters;\n+import com.microsoft.identity.client.IAccount;\n+import com.microsoft.identity.client.Prompt;\n+import com.microsoft.identity.client.msal.automationapp.R;\n+import com.microsoft.identity.client.msal.automationapp.interaction.InteractiveRequest;\n+import com.microsoft.identity.client.msal.automationapp.interaction.OnInteractionRequired;\n+import com.microsoft.identity.client.ui.automation.TestContext;\n+import com.microsoft.identity.client.ui.automation.broker.BrokerMicrosoftAuthenticator;\n+import com.microsoft.identity.client.ui.automation.broker.ITestBroker;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptHandlerParameters;\n+import com.microsoft.identity.client.ui.automation.interaction.PromptParameter;\n+import com.microsoft.identity.client.ui.automation.interaction.microsoftsts.AadPromptHandler;\n+import com.microsoft.identity.internal.testutils.labutils.LabConfig;\n+import com.microsoft.identity.internal.testutils.labutils.LabConstants;\n+import com.microsoft.identity.internal.testutils.labutils.LabUserQuery;\n+\n+import org.junit.Test;\n+\n+import java.util.concurrent.CountDownLatch;\n+\n+//Joined AcquireToken test with MSAL and Broker\n+//https:identitydivision.visualstudio.com/DevEx/_workitems/edit/832430\n+public class TestCase832430 extends AbstractMsalBrokerTest {\n+\n+    @Test\n+    public void test_832430() throws InterruptedException {\n+        final String username = mLoginHint;\n+        final String password = LabConfig.getCurrentLabConfig().getLabUserPassword();\n+\n+        //acquiring token\n+        final CountDownLatch latch = new CountDownLatch(1);\n+\n+        final AcquireTokenParameters parameters = new AcquireTokenParameters.Builder()\n+                .startAuthorizationFromActivity(mActivity)\n+                .withLoginHint(mLoginHint)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulInteractiveCallback(latch))\n+                .withPrompt(Prompt.SELECT_ACCOUNT)\n+                .build();\n+\n+        final InteractiveRequest interactiveRequest = new InteractiveRequest(\n+                mApplication,\n+                parameters,\n+                new OnInteractionRequired() {\n+                    @Override\n+                    public void handleUserInteraction() {\n+                        final PromptHandlerParameters promptHandlerParameters = PromptHandlerParameters.builder()\n+                                .prompt(PromptParameter.SELECT_ACCOUNT)\n+                                .loginHint(mLoginHint)\n+                                .sessionExpected(false)\n+                                .consentPageExpected(false)\n+                                .speedBumpExpected(false)\n+                                .broker(getBroker())\n+                                .expectingBrokerAccountChooserActivity(true)\n+                                .registerPageExpected(true)\n+                                .build();\n+\n+                        new AadPromptHandler(promptHandlerParameters)\n+                                .handlePrompt(username, password);\n+                    }\n+                }\n+        );\n+\n+        interactiveRequest.execute();\n+        latch.await();\n+\n+        final IAccount account = getAccount();\n+\n+        //acquiring token silently\n+        final CountDownLatch silentLatch = new CountDownLatch(1);\n+\n+        final AcquireTokenSilentParameters silentParameters = new AcquireTokenSilentParameters.Builder()\n+                .forAccount(account)\n+                .fromAuthority(account.getAuthority())\n+                .forceRefresh(false)\n+                .withResource(mScopes[0])\n+                .withCallback(successfulSilentCallback(silentLatch))\n+                .build();\n+\n+        mApplication.acquireTokenSilentAsync(silentParameters);\n+        silentLatch.await();\n+\n+        //forwarding time 1 day\n+        TestContext.getTestContext().getTestDevice().getSettings().forwardDeviceTimeForOneDay();\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE5MTUxNA=="}, "originalCommit": {"oid": "45afc7e4997f942637310793840d1efccfccd3d9"}, "originalPosition": 90}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1854, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}