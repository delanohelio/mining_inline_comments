{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTIwNjg4MDU2", "number": 1231, "reviewThreads": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTozNzoxNFrOE50D0w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTozNzoxNFrOE50D0w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzI5MDU3MjM1OnYy", "diffSide": "RIGHT", "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/AbstractMsalBrokerTest.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTozNzoxNFrOH0g_VA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0xN1QwMTo0MTo0MVrOH0hFKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyODUwMA==", "bodyText": "Are these parallelized? (Or could they be in the future?) Does this need to be a synchronized call?", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1231#discussion_r524828500", "createdAt": "2020-11-17T01:37:14Z", "author": {"login": "iambmelt"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/AbstractMsalBrokerTest.java", "diffHunk": "@@ -44,20 +42,14 @@\n \n     protected ITestBroker mBroker = getBroker();\n \n-    @Rule(order = 5)\n-    public final TestRule brokerSupportRule = new BrokerSupportRule(mBroker);\n-\n-    @Rule(order = 6)\n-    public final TestRule installBrokerRule = new InstallBrokerTestRule(mBroker);\n-\n-    @Rule(order = 7)\n-    public final TestRule powerLiftIncidentRule = new PowerLiftIncidentRule(mBroker);\n-\n-    @Rule(order = 8)\n-    public final TestRule deviceEnrollmentFailureRecoveryRule = new DeviceEnrollmentFailureRecoveryRule();\n-\n+    @NonNull\n     @Override\n     public ITestBroker getBroker() {\n+        // only initialize once....so calling getBroker from anywhere returns the same instance", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "31feffa5f76933c68559ebecd7477325acf99aa4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyOTMxOQ==", "bodyText": "I can make it synchronized....but this is currently only called once per test case (each test case would create new instance of this class)", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1231#discussion_r524829319", "createdAt": "2020-11-17T01:39:39Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/AbstractMsalBrokerTest.java", "diffHunk": "@@ -44,20 +42,14 @@\n \n     protected ITestBroker mBroker = getBroker();\n \n-    @Rule(order = 5)\n-    public final TestRule brokerSupportRule = new BrokerSupportRule(mBroker);\n-\n-    @Rule(order = 6)\n-    public final TestRule installBrokerRule = new InstallBrokerTestRule(mBroker);\n-\n-    @Rule(order = 7)\n-    public final TestRule powerLiftIncidentRule = new PowerLiftIncidentRule(mBroker);\n-\n-    @Rule(order = 8)\n-    public final TestRule deviceEnrollmentFailureRecoveryRule = new DeviceEnrollmentFailureRecoveryRule();\n-\n+    @NonNull\n     @Override\n     public ITestBroker getBroker() {\n+        // only initialize once....so calling getBroker from anywhere returns the same instance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyODUwMA=="}, "originalCommit": {"oid": "31feffa5f76933c68559ebecd7477325acf99aa4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyOTQ1OA==", "bodyText": "sorry that wasn't entirely correct", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1231#discussion_r524829458", "createdAt": "2020-11-17T01:40:03Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/AbstractMsalBrokerTest.java", "diffHunk": "@@ -44,20 +42,14 @@\n \n     protected ITestBroker mBroker = getBroker();\n \n-    @Rule(order = 5)\n-    public final TestRule brokerSupportRule = new BrokerSupportRule(mBroker);\n-\n-    @Rule(order = 6)\n-    public final TestRule installBrokerRule = new InstallBrokerTestRule(mBroker);\n-\n-    @Rule(order = 7)\n-    public final TestRule powerLiftIncidentRule = new PowerLiftIncidentRule(mBroker);\n-\n-    @Rule(order = 8)\n-    public final TestRule deviceEnrollmentFailureRecoveryRule = new DeviceEnrollmentFailureRecoveryRule();\n-\n+    @NonNull\n     @Override\n     public ITestBroker getBroker() {\n+        // only initialize once....so calling getBroker from anywhere returns the same instance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyODUwMA=="}, "originalCommit": {"oid": "31feffa5f76933c68559ebecd7477325acf99aa4"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyOTk5Mg==", "bodyText": "It is not parallelized right now......I can make it synchronized....but each test case would create new instance of this class...so it shouldn't really matter", "url": "https://github.com/AzureAD/microsoft-authentication-library-for-android/pull/1231#discussion_r524829992", "createdAt": "2020-11-17T01:41:41Z", "author": {"login": "shahzaibj"}, "path": "msalautomationapp/src/androidTest/java/com/microsoft/identity/client/msal/automationapp/testpass/broker/AbstractMsalBrokerTest.java", "diffHunk": "@@ -44,20 +42,14 @@\n \n     protected ITestBroker mBroker = getBroker();\n \n-    @Rule(order = 5)\n-    public final TestRule brokerSupportRule = new BrokerSupportRule(mBroker);\n-\n-    @Rule(order = 6)\n-    public final TestRule installBrokerRule = new InstallBrokerTestRule(mBroker);\n-\n-    @Rule(order = 7)\n-    public final TestRule powerLiftIncidentRule = new PowerLiftIncidentRule(mBroker);\n-\n-    @Rule(order = 8)\n-    public final TestRule deviceEnrollmentFailureRecoveryRule = new DeviceEnrollmentFailureRecoveryRule();\n-\n+    @NonNull\n     @Override\n     public ITestBroker getBroker() {\n+        // only initialize once....so calling getBroker from anywhere returns the same instance", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUyNDgyODUwMA=="}, "originalCommit": {"oid": "31feffa5f76933c68559ebecd7477325acf99aa4"}, "originalPosition": 44}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 1873, "cost": 1, "resetAt": "2021-11-12T11:57:46Z"}}}