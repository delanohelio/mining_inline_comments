{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk5Nzk0NjMx", "number": 221, "title": "Fix sonarqube violations", "bodyText": "This is a draft an connected to and blocked by #215 and #217 .\n\nI hereby agree to the terms of the JUnit Pioneer Contributor License Agreement.", "createdAt": "2020-04-06T17:30:34Z", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221", "merged": true, "mergeCommit": {"oid": "b919d1578a716578d147dd83d237f8672695a93b"}, "closed": true, "closedAt": "2020-04-24T13:23:06Z", "author": {"login": "Bukama"}, "timelineItems": {"totalCount": 41, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcVBn81AH2gAyMzk5Nzk0NjMxOjVjZDM3MzZjYTAwMGE3ZjdmZTZkY2MzNzA3NGVlYjlkODFiMjI0YzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABcaMhjCgFqTM5ODQ2MDc2Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "5cd3736ca000a7f7fe6dcc37074eeb9d81b224c1", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/5cd3736ca000a7f7fe6dcc37074eeb9d81b224c1", "committedDate": "2020-04-06T16:52:02Z", "message": "Fixing Sonarqube viloations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d07020fb36a28265aed5dfd3d06df42f59f278a8", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/d07020fb36a28265aed5dfd3d06df42f59f278a8", "committedDate": "2020-04-06T17:04:20Z", "message": "Fixing Sonarqube viloations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9bbde4badc4bcedc631d4dc9e70a22faeac62fea", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/9bbde4badc4bcedc631d4dc9e70a22faeac62fea", "committedDate": "2020-04-06T17:11:08Z", "message": "Fixing Sonarqube viloations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "73e56e9be5ceba38c976e148390b4904a73086a1", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/73e56e9be5ceba38c976e148390b4904a73086a1", "committedDate": "2020-04-06T17:12:08Z", "message": "Fixing Sonarqube viloations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ecdf5daafd32d1f98e56442c3a04689eec659b5", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/2ecdf5daafd32d1f98e56442c3a04689eec659b5", "committedDate": "2020-04-06T17:18:24Z", "message": "Fixing Sonarqube viloations"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a445855e7e69f97fd0e1db3e3474964b2e908692", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/a445855e7e69f97fd0e1db3e3474964b2e908692", "committedDate": "2020-04-06T17:29:20Z", "message": "Spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzg4NDY4Njgx", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-388468681", "createdAt": "2020-04-06T17:31:32Z", "commit": {"oid": "a445855e7e69f97fd0e1db3e3474964b2e908692"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozMTozM1rOGBiehg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wNlQxNzozMTozM1rOGBiehg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNDI2NjYzMA==", "bodyText": "Can anyone help me how to implement this isPresent check (violation is, that the following get() is used without checking if the value is present)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r404266630", "createdAt": "2020-04-06T17:31:33Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/params/RangeSourceProvider.java", "diffHunk": "@@ -55,6 +55,7 @@\n \t\t\t\t\t\t\t\t.stream(annotations.annotationType().getAnnotationsByType(ArgumentsSource.class))\n \t\t\t\t\t\t\t\t.anyMatch(annotation -> getClass().equals(annotation.value())))\n \t\t\t\t\t\t.collect(Collectors.toList()))\n+\t\t\t\t// .filter(Optional::isPresent) <-- Can not accessed in a static context", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a445855e7e69f97fd0e1db3e3474964b2e908692"}, "originalPosition": 4}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0ebe5f7ed9d04d33dec3e6e7ec43930be89ea94b", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/0ebe5f7ed9d04d33dec3e6e7ec43930be89ea94b", "committedDate": "2020-04-07T16:29:01Z", "message": "Prepare change at RangeSourceProvider"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e82fe779b36f9716392040fd3e79e2d617d0a97", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/0e82fe779b36f9716392040fd3e79e2d617d0a97", "committedDate": "2020-04-07T16:35:23Z", "message": "Add //NOSONAR for Thread"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "410524258be3fa5d05fdf32bd2b5af2b822bfffe", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/410524258be3fa5d05fdf32bd2b5af2b822bfffe", "committedDate": "2020-04-07T16:44:17Z", "message": "Spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0e6001caa00c36d8be4ba1f9b6c82d43e6927566", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/0e6001caa00c36d8be4ba1f9b6c82d43e6927566", "committedDate": "2020-04-09T17:10:53Z", "message": "Merge branch 'master' into sonarqubemessages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "abfdb8f2a88b296f521e4440013bf6493975ea7e", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/abfdb8f2a88b296f521e4440013bf6493975ea7e", "committedDate": "2020-04-09T17:26:15Z", "message": "Sonarcube fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ec4d8d92cd15d55e5da7bfe0f88d5edb5c18ba6d", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/ec4d8d92cd15d55e5da7bfe0f88d5edb5c18ba6d", "committedDate": "2020-04-09T17:28:12Z", "message": "Sonarcube fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8beb19f302f17df47ac65294d40f543aac0d74c1", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/8beb19f302f17df47ac65294d40f543aac0d74c1", "committedDate": "2020-04-09T17:29:50Z", "message": "Sonarcube fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "29c35fb8c15fee47f8ed756540241b341e60f5a3", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/29c35fb8c15fee47f8ed756540241b341e60f5a3", "committedDate": "2020-04-09T17:43:52Z", "message": "Sonarcube fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "130af033d9c3a0dad852be0787d200fe8284458b", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/130af033d9c3a0dad852be0787d200fe8284458b", "committedDate": "2020-04-09T17:51:05Z", "message": "Sonarcube fix"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "91451d371ad9c4f027c1b9b5c26ffc6d266c4b67", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/91451d371ad9c4f027c1b9b5c26ffc6d266c4b67", "committedDate": "2020-04-09T17:55:48Z", "message": "Spotless"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fca1d14de92308669709108d381d9507a5f135f", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/8fca1d14de92308669709108d381d9507a5f135f", "committedDate": "2020-04-09T18:20:04Z", "message": "Sonarcube fixes"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMDc2MjY4", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-391076268", "createdAt": "2020-04-09T19:35:34Z", "commit": {"oid": "8fca1d14de92308669709108d381d9507a5f135f"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozNTozNFrOGDmnjQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wOVQxOTozNTozNFrOGDmnjQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjQzMTYyOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; // NOSNAR\n          \n          \n            \n            \t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; // NOSONAR", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r406431629", "createdAt": "2020-04-09T19:35:34Z", "author": {"login": "aepfli"}, "path": "src/main/java/org/junitpioneer/jupiter/TempDirectory.java", "diffHunk": "@@ -125,7 +125,8 @@\n \t\t *\n \t\t * @return the parent directory for all temporary directories\n \t\t */\n-\t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception;\n+\t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; // NOSNAR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8fca1d14de92308669709108d381d9507a5f135f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f99f51fd0b64ac4f8cc3fc0542fcb87f17f0a77b", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/f99f51fd0b64ac4f8cc3fc0542fcb87f17f0a77b", "committedDate": "2020-04-09T20:21:36Z", "message": "Fix //NOSONAR"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMTE5NTA0", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-391119504", "createdAt": "2020-04-09T20:45:34Z", "commit": {"oid": "f99f51fd0b64ac4f8cc3fc0542fcb87f17f0a77b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxMzUwODg5", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-391350889", "createdAt": "2020-04-10T09:19:00Z", "commit": {"oid": "f99f51fd0b64ac4f8cc3fc0542fcb87f17f0a77b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOToxOTowMFrOGD1p6w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xMFQwOToxOTowMFrOGD1p6w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwNjY3Nzk5NQ==", "bodyText": "What purpose? Shouldn't that be included in the comment?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r406677995", "createdAt": "2020-04-10T09:19:00Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/TempDirectory.java", "diffHunk": "@@ -345,6 +346,7 @@ private void tryToDeleteOnExit(Path path) {\n \t\t\t\tpath.toFile().deleteOnExit();\n \t\t\t}\n \t\t\tcatch (UnsupportedOperationException ignore) {\n+\t\t\t\t// this exception shall be ignored by purpose", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f99f51fd0b64ac4f8cc3fc0542fcb87f17f0a77b"}, "originalPosition": 23}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/b5ae3882245a228dab2aafc7471a39aaa8ea58dc", "committedDate": "2020-04-10T11:24:50Z", "message": "Try to describe why UnsupportedOperationException is ignored"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkxNDgzODMy", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-391483832", "createdAt": "2020-04-10T14:51:35Z", "commit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzkzMjYyNjMy", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-393262632", "createdAt": "2020-04-14T20:16:32Z", "commit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoxNjozMlrOGFfQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNFQyMDoyNjowN1rOGFflog==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODI3MQ==", "bodyText": "I don't like having these superfluous parenthesis in our code. They add little except almost empty lines.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r408408271", "createdAt": "2020-04-14T20:16:32Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/EnvironmentVariableExtension.java", "diffHunk": "@@ -92,8 +92,9 @@ private void storeOriginalEnvironmentVariables(ExtensionContext context, Collect\n \n \tprivate void reportWarning(ExtensionContext context) {\n \t\tboolean wasReported = REPORTED_WARNING.getAndSet(true);\n-\t\tif (!wasReported)\n+\t\tif (!wasReported) {\n \t\t\tcontext.publishReportEntry(WARNING_KEY, WARNING_VALUE);\n+\t\t}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwODk4OQ==", "bodyText": "__ means \"nobody cares about this variable\" - I want to keep using that.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r408408989", "createdAt": "2020-04-14T20:17:51Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/RepeatFailedTestExtension.java", "diffHunk": "@@ -59,8 +60,8 @@ private static FailedTestRepeater repeaterFor(ExtensionContext context) {\n \t\tMethod repeatedTest = context.getRequiredTestMethod();\n \t\treturn context\n \t\t\t\t.getStore(NAMESPACE)\n-\t\t\t\t.getOrComputeIfAbsent(repeatedTest.toString(), __ -> FailedTestRepeater.createFor(repeatedTest),\n-\t\t\t\t\tFailedTestRepeater.class);\n+\t\t\t\t.getOrComputeIfAbsent(repeatedTest.toString(),\n+\t\t\t\t\tdefaultCreator -> FailedTestRepeater.createFor(repeatedTest), FailedTestRepeater.class);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "originalPosition": 15}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQwOTM1MA==", "bodyText": "The this. are unnecessary, but IMO they improve readability by keeping the three assignments aligned for easy top-down reading.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r408409350", "createdAt": "2020-04-14T20:18:29Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/RepeatFailedTestExtension.java", "diffHunk": "@@ -72,8 +73,8 @@ private static FailedTestRepeater repeaterFor(ExtensionContext context) {\n \n \t\tprivate FailedTestRepeater(int maxRepetitions) {\n \t\t\tthis.maxRepetitions = maxRepetitions;\n-\t\t\tthis.repetitionsSoFar = 0;\n-\t\t\tthis.exceptionsSoFar = 0;\n+\t\t\trepetitionsSoFar = 0;\n+\t\t\texceptionsSoFar = 0;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "originalPosition": 26}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwODQxMzYwMg==", "bodyText": "It's good to avoid to just get(), but there's a comment a few lines above:\n\n// since it's a method annotation, the element will always be present\n\nThis justifies why the Optional can never be empty. I think if it is, some central assumption of the extension no longer holds and this should explode. Probably with an orElseThrow(IllegalStateException::new), though.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r408413602", "createdAt": "2020-04-14T20:26:07Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/params/RangeSourceProvider.java", "diffHunk": "@@ -55,7 +56,7 @@\n \t\t\t\t\t\t\t\t.stream(annotations.annotationType().getAnnotationsByType(ArgumentsSource.class))\n \t\t\t\t\t\t\t\t.anyMatch(annotation -> getClass().equals(annotation.value())))\n \t\t\t\t\t\t.collect(Collectors.toList()))\n-\t\t\t\t.get();\n+\t\t\t\t.orElse(Collections.emptyList());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b5ae3882245a228dab2aafc7471a39aaa8ea58dc"}, "originalPosition": 13}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8a1c55044144c26cf20fb360a96a1dd74db96e51", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/8a1c55044144c26cf20fb360a96a1dd74db96e51", "committedDate": "2020-04-16T17:31:59Z", "message": "Revert added paranthesis at if block in EnvironmentVariableExtension"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "306138ecc3f0d28cb4fd51a23916f6ce7ffce1d9", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/306138ecc3f0d28cb4fd51a23916f6ce7ffce1d9", "committedDate": "2020-04-16T17:36:06Z", "message": "Revert back to underscore variables"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6ca6fae78c422cc1ded8b9c773afb7e1bba6fb3b", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/6ca6fae78c422cc1ded8b9c773afb7e1bba6fb3b", "committedDate": "2020-04-16T17:38:00Z", "message": "Revert removing \".this\""}}, {"__typename": "PullRequestCommit", "commit": {"oid": "01f74629d3d357f9b71f573b4dd8b8f8cc9af508", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/01f74629d3d357f9b71f573b4dd8b8f8cc9af508", "committedDate": "2020-04-16T17:40:00Z", "message": "Change stream to ElseThrow(IllegalStateException::new)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eaed2ead0b619f042e8b145fd66ae670660488fd", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/eaed2ead0b619f042e8b145fd66ae670660488fd", "committedDate": "2020-04-16T17:44:21Z", "message": "Reverted added paranthesis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c65d097e65413b2aee45b00a2848b8442bf8bd01", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/c65d097e65413b2aee45b00a2848b8442bf8bd01", "committedDate": "2020-04-16T17:47:32Z", "message": "Reverted added empty lines (from paranethesis)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/4ec4a695c3cb7d96cd41bcb736461fa542d92163", "committedDate": "2020-04-16T17:50:36Z", "message": "Reverted added empty lines (from paranethesis)"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk0ODY4MzQz", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-394868343", "createdAt": "2020-04-16T17:53:06Z", "commit": {"oid": "c65d097e65413b2aee45b00a2848b8442bf8bd01"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1MzowN1rOGGwtyQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0xNlQxNzo1MzowN1rOGGwtyQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwOTc0Mjc5Mw==", "bodyText": "@nicolaiparlog You were wondering why this was changes and you thought it was because the lower case at the start of the line. No it's not. The ; are the violation as sonarcube thinks it's outcommented code, see here", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r409742793", "createdAt": "2020-04-16T17:53:07Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/vintage/ExpectedExceptionExtension.java", "diffHunk": "@@ -44,14 +44,14 @@ public void handleTestExecutionException(ExtensionContext context, Throwable thr\n \t\t\t\t.filter(expected -> expected.isInstance(throwable))\n \t\t\t\t.isPresent();\n \n-\t\t// in the `afterTestExecution` callback we have to pass or fail the test\n-\t\t// depending on whether the exception was thrown or not;\n-\t\t// to do that we need to register whether the exception was thrown;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "c65d097e65413b2aee45b00a2848b8442bf8bd01"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk3NjI1Nzc4", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-397625778", "createdAt": "2020-04-21T19:52:16Z", "commit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQxOTo1MjoxNlrOGJVv_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yMVQyMDowMjo1MVrOGJWKGw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ0NjcxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; //NOSONAR\n          \n          \n            \n            \t\t// Excluded from sonar as java.util.concurrent.Callable<V> is root of this generic exception\n          \n          \n            \n            \t\t// excluded from Sonar as java.util.concurrent.Callable<V> is root of this generic exception\n          \n          \n            \n            \t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; //NOSONAR", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r412446719", "createdAt": "2020-04-21T19:52:16Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/TempDirectory.java", "diffHunk": "@@ -125,7 +125,8 @@\n \t\t *\n \t\t * @return the parent directory for all temporary directories\n \t\t */\n-\t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception;\n+\t\tPath get(ParameterContext parameterContext, ExtensionContext extensionContext) throws Exception; //NOSONAR\n+\t\t// Excluded from sonar as java.util.concurrent.Callable<V> is root of this generic exception", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1MjkxOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t// this exception shall be ignored by purpose this method is only called in the\n          \n          \n            \n            \t\t\t\t// stream of the method \"createIOExceptionWithAttachedFailures\".\n          \n          \n            \n            \t\t\t\t// That method overrules this \"UnsupportedOperationException\" anyway.\n          \n          \n            \n            \t\t\t\t// If the `Path` can't be turned into a `File` (which throws the UOE),\n          \n          \n            \n            \t\t\t\t// it can't be registered to be deleted when the JVM terminates.\n          \n          \n            \n            \t\t\t\t// Because deleting on JVM termination is just a last ditch effort and\n          \n          \n            \n            \t\t\t\t// nicety towards the user, it is entirely optional and shouldn't affect\n          \n          \n            \n            \t\t\t\t// the extension's behavior.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r412452919", "createdAt": "2020-04-21T20:02:00Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/TempDirectory.java", "diffHunk": "@@ -345,6 +346,9 @@ private void tryToDeleteOnExit(Path path) {\n \t\t\t\tpath.toFile().deleteOnExit();\n \t\t\t}\n \t\t\tcatch (UnsupportedOperationException ignore) {\n+\t\t\t\t// this exception shall be ignored by purpose this method is only called in the\n+\t\t\t\t// stream of the method \"createIOExceptionWithAttachedFailures\".\n+\t\t\t\t// That method overrules this \"UnsupportedOperationException\" anyway.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1MzE3OQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t// This extension is not in charge of the throwable, so we need to rethrow\n          \n          \n            \n            \t\t\t// this extension is not in charge of the throwable, so we need to rethrow", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r412453179", "createdAt": "2020-04-21T20:02:29Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/vintage/ExpectedExceptionExtension.java", "diffHunk": "@@ -44,14 +44,14 @@ public void handleTestExecutionException(ExtensionContext context, Throwable thr\n \t\t\t\t.filter(expected -> expected.isInstance(throwable))\n \t\t\t\t.isPresent();\n \n-\t\t// in the `afterTestExecution` callback we have to pass or fail the test\n-\t\t// depending on whether the exception was thrown or not;\n-\t\t// to do that we need to register whether the exception was thrown;\n-\t\t// (NOTE that if no exception was thrown, NOTHING is registered)\n+\t\t// In the `afterTestExecution` callback we have to pass or fail the test\n+\t\t// depending on whether the exception was thrown or not.\n+\t\t// To do that we need to register whether the exception was thrown\n+\t\t// (NOTE that if no exception was thrown, NOTHING is registered).\n \t\tif (throwableMatchesExpectedException) {\n \t\t\tstoreExceptionStatus(context, EXCEPTION.WAS_THROWN_AS_EXPECTED);\n \t\t} else {\n-\t\t\t// this extension is not in charge of the throwable, so we need to rethrow;\n+\t\t\t// This extension is not in charge of the throwable, so we need to rethrow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxMjQ1MzQwMw==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\t\t\t// The exception was thrown as expected so there is nothing to do\n          \n          \n            \n            \t\t\t\t// the exception was thrown as expected so there is nothing to do", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#discussion_r412453403", "createdAt": "2020-04-21T20:02:51Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/vintage/ExpectedExceptionExtension.java", "diffHunk": "@@ -67,13 +67,14 @@ public void afterTestExecution(ExtensionContext context) throws Exception {\n \t\t\t\t\t\t\tthrow error;\n \t\t\t\t\t\t});\n \t\t\tcase WAS_THROWN_AS_EXPECTED:\n-\t\t\t\t// the exception was thrown as expected so there is nothing to do\n+\t\t\t\t// The exception was thrown as expected so there is nothing to do", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "4ec4a695c3cb7d96cd41bcb736461fa542d92163"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5d927524dc54504849999affd2b1132e73f98e33", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/5d927524dc54504849999affd2b1132e73f98e33", "committedDate": "2020-04-22T14:45:32Z", "message": "Move comment above line\n\nCo-Authored-By: Nicolai Parlog <nipa@codefx.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3844b62198076753601818f1530d76ae27e4ccce", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/3844b62198076753601818f1530d76ae27e4ccce", "committedDate": "2020-04-22T14:46:09Z", "message": "Improve explanation why exception is ignored\n\nCo-Authored-By: Nicolai Parlog <nipa@codefx.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bc9f6c5bcafadab6eeb4a43fc155ffa2681f42b0", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/bc9f6c5bcafadab6eeb4a43fc155ffa2681f42b0", "committedDate": "2020-04-22T14:46:46Z", "message": "Revert changes in documentation\n\nCo-Authored-By: Nicolai Parlog <nipa@codefx.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "14d8957a7f219f67d7f6702a460350ad07c175c6", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/14d8957a7f219f67d7f6702a460350ad07c175c6", "committedDate": "2020-04-22T14:47:10Z", "message": "Revert changes in docu\n\nCo-Authored-By: Nicolai Parlog <nipa@codefx.org>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "041bf599b4a957744b0aee6337b9e538b3d7505c", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/041bf599b4a957744b0aee6337b9e538b3d7505c", "committedDate": "2020-04-22T14:54:01Z", "message": "Merge branch 'master' into sonarqubemessages"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "25410898aae0532b2494f8f99865b306083165b4", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/25410898aae0532b2494f8f99865b306083165b4", "committedDate": "2020-04-22T15:34:03Z", "message": "Added note why the default can't be covered by test cases"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3Mzk4NDYwNzY3", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/221#pullrequestreview-398460767", "createdAt": "2020-04-22T18:23:37Z", "commit": {"oid": "25410898aae0532b2494f8f99865b306083165b4"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3748, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}