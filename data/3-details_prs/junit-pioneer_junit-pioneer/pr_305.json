{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDYwNDIzMDcz", "number": 305, "title": "Improvements to Pioneer assertions", "bodyText": "Closes #298\n\nPR checklist\nThe following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\nIt is based on our contributors guidelines, especially the \"writing code\" section.\nIt shall help to check for completion of the listed points.\nIf a point does not apply to the given PR's changes, the corresponding entry can be simply marked as done.\nDocumentation (general)\n\n There is documentation\n There is implementation information to describe why a non-obvious source code / solution got implemented\n Javadoc uses formal style, while sites documentation may use informal style (see #265)\n\nCode\n\n Code adheres to code style, naming conventions etc.\n Tests use AssertJ or our own PioneerAssert (which are based on AssertJ)\n\nContributing\n\n A prepared commit message exists\n The list of contributions inside README.md mentions the new contribution (real name optional)\n\nIssue\n\n Interface names have been considered\n ExecutionResultAssert separated into specific interfaces\n Exceptions thrown by indirectly executed tests get added to AssertionError to make debugging failing tests easier\n Exposed report entries and exceptions for miscellaneous assertions\n\n\nI hereby agree to the terms of the JUnit Pioneer Contributor License Agreement.", "createdAt": "2020-07-31T19:20:25Z", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305", "merged": true, "mergeCommit": {"oid": "3c2a9d5cc00e3dc35c5656c6233837447a37b9c4"}, "closed": true, "closedAt": "2020-10-30T16:36:23Z", "author": {"login": "Michael1993"}, "timelineItems": {"totalCount": 18, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc1zvkVgH2gAyNDYwNDIzMDczOjNmMjQzOWEzZjg4M2UzOTYxMTkzYjk3ZGQxNGI0N2UwYWUyYzg1MzE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXFvd-AH2gAyNDYwNDIzMDczOjJiMDkwMGQ1ZmM4Zjg1YzJmM2IxY2VjYTc2MDBiZmI3ODYxZDE1YTM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "3f2439a3f883e3961193b97dd14b47e0ae2c8531", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/3f2439a3f883e3961193b97dd14b47e0ae2c8531", "committedDate": "2020-07-17T13:21:11Z", "message": "WIP commit\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f5d4fd5a5010b3aeeed400a5d14cccdeeebf1460", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/f5d4fd5a5010b3aeeed400a5d14cccdeeebf1460", "committedDate": "2020-07-17T18:22:23Z", "message": "WIP commit\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/cd617d4e4384f51c28bcee73cf70ceb5407112ad", "committedDate": "2020-07-30T12:22:59Z", "message": "Added open-ended methods for writing custom assertions.\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDU5NTk3NDkw", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#pullrequestreview-459597490", "createdAt": "2020-08-01T19:09:35Z", "commit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad"}, "state": "COMMENTED", "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxOTowOTozNVrOG6fwUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOC0wMVQxOToxOTo1NFrOG6fzlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5MDg2NQ==", "bodyText": "I don't like this new assertions. In my opinion it's much more complicated and less readable. The user is now forced to write an additional lamba expression and another assertion.\nI think it would be more readable with something like .hasNumberOfReportEntries(3).andTheyAre(\"suddenly..\", \"As...\", \"rapping...\")ore something like this.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r463990865", "createdAt": "2020-08-01T19:09:35Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/ReportEntryExtensionTests.java", "diffHunk": "@@ -78,8 +79,9 @@ void repeatedAnnotation_logEachKeyValuePairAsIndividualEntry() {\n \n \t\tassertThat(results)\n \t\t\t\t.hasNumberOfReportEntries(3)\n-\t\t\t\t.withValues(\"suddenly there came a tapping\", \"As if some one gently rapping\",\n-\t\t\t\t\t\"rapping at my chamber door\");\n+\t\t\t\t.andThen(entry -> assertThat(entry.getValue())\n+\t\t\t\t\t\t.isIn(\"suddenly there came a tapping\", \"As if some one gently rapping\",\n+\t\t\t\t\t\t\t\"rapping at my chamber door\"));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5MTE3MQ==", "bodyText": "I really like those assertion-method names!", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r463991171", "createdAt": "2020-08-01T19:12:53Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/reportentry/ReportEntryAssert.java", "diffHunk": "@@ -0,0 +1,36 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.testkit.assertion.reportentry;\n+\n+/**\n+ * Assertions for asserting how many report entries were published.\n+ */\n+public interface ReportEntryAssert {\n+\n+\t/**\n+\t * Asserts that the expected number of report entries were published across all executed tests.\n+\t * @param expected the number of report entries expected to be published\n+\t * @return a {@link ReportEntryValueAssert} for further assertions.\n+\t */\n+\tReportEntryValueAssert hasNumberOfReportEntries(int expected);\n+\n+\t/**\n+\t * Asserts that exactly one report entry was published across all executed tests or containers.\n+\t * @return a {@link ReportEntryValueAssert} for further assertions.\n+\t */\n+\tReportEntryValueAssert hasSingleReportEntry();\n+\n+\t/**\n+\t * Asserts that no report entries were published across all executed tests or containers.\n+\t */\n+\tvoid hasNoReportEntries();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5MTE5NA==", "bodyText": "Javadoc missing", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r463991194", "createdAt": "2020-08-01T19:13:16Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/reportentry/ReportEntryValueAssert.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.testkit.assertion.reportentry;\n+\n+import java.util.Map;\n+import java.util.function.Consumer;\n+import java.util.function.Predicate;\n+\n+/**\n+ * Assertions for asserting the content of the published report entries.\n+ */\n+public interface ReportEntryValueAssert {\n+\n+\t/**\n+\t * Asserts that the report entry has a specified key and value.\n+\t * Fails if there are multiple report entries.\n+\t *\n+\t * @param key   the key of the expected report entry\n+\t * @param value the value of the expected report entry\n+\t */\n+\tvoid withKeyAndValue(String key, String value);\n+\n+\t/**\n+\t * Asserts that the report entries contain exactly the specified values (in any order).\n+\t *\n+\t * @param expected the expected values of the report entries\n+\t */\n+\tvoid withValues(String... expected);\n+\n+\t/**\n+\t * Asserts that the report entries contain the specified key-value pairs (in any order).\n+\t * Fails if there are odd number of supplied strings.\n+\t *\n+\t * @param keyAndValuePairs the expected key-value pairs of the report entries\n+\t */\n+\tvoid withKeyValuePairs(String... keyAndValuePairs);\n+\n+\t/**\n+\t * Asserts that the supplied predicate returns true for the report entries.\n+\t *\n+\t * @param predicate the condition we want to fulfill\n+\t */\n+\tvoid asserting(Predicate<Map.Entry<String, String>> predicate);\n+\n+\tvoid andThen(Consumer<Map.Entry<String, String>> testFunction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad"}, "originalPosition": 53}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ2Mzk5MTcwMg==", "bodyText": "I really have difficulty to imagine how to use this. I think it will quite be complicated and not easy to use - what's a thing I expect of an assertion lib (or method).", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r463991702", "createdAt": "2020-08-01T19:19:54Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/single/TestCaseFailureAssert.java", "diffHunk": "@@ -30,4 +33,16 @@\n \t */\n \tAbstractThrowableAssert<?, ? extends Throwable> withException();\n \n+\t/**\n+\t * Asserts that the test/container threw an exception that fulfills the supplied predicate.\n+\t * @param predicate the condition the thrown exception must fulfill\n+\t */\n+\tvoid withExceptionFulfilling(Predicate<Throwable> predicate);\n+\n+\t/**\n+\t * Applies the supplied consumer to the exception thrown by the test/container.\n+\t * @param testFunction a consumer, for writing more flexible tests\n+\t */\n+\tvoid andThenCheckException(Consumer<Throwable> testFunction);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "cd617d4e4384f51c28bcee73cf70ceb5407112ad"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b8f39f7afac8c076c26749997f936eca68e85a1f", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/b8f39f7afac8c076c26749997f936eca68e85a1f", "committedDate": "2020-08-02T15:41:19Z", "message": "WIP\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db1a9a3ad5e63c3f7989f14aa882bd609cdfca58", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/db1a9a3ad5e63c3f7989f14aa882bd609cdfca58", "committedDate": "2020-08-04T09:10:25Z", "message": "Modifying basic assertion calls to tell you what went wrong.\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b89cc1b1ea84815b2619ff4ff9900ba110348c0d", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/b89cc1b1ea84815b2619ff4ff9900ba110348c0d", "committedDate": "2020-08-04T09:15:41Z", "message": "Revert unnecessary rewrite in ReportEntryExtensionTests\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "55339e8c7477199e269e22a60c74ee8ed83b5333", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/55339e8c7477199e269e22a60c74ee8ed83b5333", "committedDate": "2020-08-04T09:37:01Z", "message": "My code is now spotless (I think)\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk0NjQ5NjQ2", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#pullrequestreview-494649646", "createdAt": "2020-09-23T13:18:45Z", "commit": {"oid": "55339e8c7477199e269e22a60c74ee8ed83b5333"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoxODo0NVrOHWtl0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yM1QxMzoxODo0NVrOHWtl0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5MzU3NzY4Mg==", "bodyText": "This should behave the same way as asserting in ReportEntryAssertBase:\nassertThat(predicate.test(thrown)).isTrue();", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r493577682", "createdAt": "2020-09-23T13:18:45Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/TestCaseAssertBase.java", "diffHunk": "@@ -66,4 +60,31 @@ public void whichAborted() {\n \t\tassertThat(actual.aborted().count()).isEqualTo(1);\n \t}\n \n+\t@Override\n+\tpublic void withExceptionFulfilling(Predicate<Throwable> predicate) {\n+\t\tThrowable thrown = getRequiredThrowable();\n+\t\tpredicate.test(thrown);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "55339e8c7477199e269e22a60c74ee8ed83b5333"}, "originalPosition": 67}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "db884c5b852e3ff33ff52bad1cb52d5f0359b60f", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/db884c5b852e3ff33ff52bad1cb52d5f0359b60f", "committedDate": "2020-09-26T07:16:33Z", "message": "Fix bad method call\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDk3MDkxMzMy", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#pullrequestreview-497091332", "createdAt": "2020-09-27T15:58:24Z", "commit": {"oid": "db884c5b852e3ff33ff52bad1cb52d5f0359b60f"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTo1ODoyNFrOHYoOsQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yN1QxNTo1ODoyNFrOHYoOsQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NTU4Njk5Mw==", "bodyText": "How about:\n\n  \n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            \t\tassertThat(predicate.test(thrown)).isTrue();\n          \n          \n            \n            \t\tassertThat(predicate).accepts(thrown);\n          \n      \n    \n    \n  \n\nReference: https://joel-costigliola.github.io/assertj/core-8/api/org/assertj/core/api/PredicateAssert.html", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r495586993", "createdAt": "2020-09-27T15:58:24Z", "author": {"login": "beatngu13"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/TestCaseAssertBase.java", "diffHunk": "@@ -63,7 +63,7 @@ public void whichAborted() {\n \t@Override\n \tpublic void withExceptionFulfilling(Predicate<Throwable> predicate) {\n \t\tThrowable thrown = getRequiredThrowable();\n-\t\tpredicate.test(thrown);\n+\t\tassertThat(predicate.test(thrown)).isTrue();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "db884c5b852e3ff33ff52bad1cb52d5f0359b60f"}, "originalPosition": 5}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "871c5020d243639b119aeeae757dc6b5b4ff1f5b", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/871c5020d243639b119aeeae757dc6b5b4ff1f5b", "committedDate": "2020-09-27T17:40:04Z", "message": "Use predicate assert instead of predicate.test isTrue assertion"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4MTIwMzIz", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#pullrequestreview-518120323", "createdAt": "2020-10-27T20:35:57Z", "commit": {"oid": "871c5020d243639b119aeeae757dc6b5b4ff1f5b"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDozNTo1N1rOHpP2lw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QyMDozNTo1N1rOHpP2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzAxMzM5OQ==", "bodyText": "Should it be only or exactly? (I.e. is it ok if exceptionTypes is a superset of actual exceptions?) Whatever makes sense (maybe both?) should probably be reflected in the method name.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#discussion_r513013399", "createdAt": "2020-10-27T20:35:57Z", "author": {"login": "nipafx"}, "path": "src/test/java/org/junitpioneer/testkit/assertion/PioneerAssert.java", "diffHunk": "@@ -212,4 +264,58 @@ public ExecutionResultAssert hasNumberOfDynamicallyRegisteredContainers(int expe\n \t\t\t\t.collect(toList());\n \t}\n \n+\t@SafeVarargs\n+\t@Override\n+\tpublic final ListAssert<String> withExceptionInstancesOf(Class<? extends Throwable>... exceptionTypes) {\n+\t\treturn assertExceptions(events -> {\n+\t\t\tStream<Class<? extends Throwable>> classStream = getAllExceptions(events).map(Throwable::getClass);\n+\t\t\tAssertions.assertThat(classStream).containsOnly(exceptionTypes);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "871c5020d243639b119aeeae757dc6b5b4ff1f5b"}, "originalPosition": 317}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4ODQ0Mzc5", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/305#pullrequestreview-518844379", "createdAt": "2020-10-28T16:17:06Z", "commit": {"oid": "871c5020d243639b119aeeae757dc6b5b4ff1f5b"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2ec58b6f95fef83babab9ea89d7f24b36e88de65", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/2ec58b6f95fef83babab9ea89d7f24b36e88de65", "committedDate": "2020-10-28T22:08:29Z", "message": "Merge branch 'master' into issue/298-pioneer-assert-improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea170a7783ecd79d238afde63678588dcbd2d23c", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/ea170a7783ecd79d238afde63678588dcbd2d23c", "committedDate": "2020-10-28T22:30:53Z", "message": "Added contribution to README.md\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "406845f02f014c83a8da932737cba95a64e3b54f", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/406845f02f014c83a8da932737cba95a64e3b54f", "committedDate": "2020-10-28T22:57:50Z", "message": "Update tests to use the new assertion styles\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2b0900d5fc8f85c2f3b1ceca7600bfb7861d15a3", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/2b0900d5fc8f85c2f3b1ceca7600bfb7861d15a3", "committedDate": "2020-10-28T22:58:52Z", "message": "Spotless\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3811, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}