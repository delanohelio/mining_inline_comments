{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDk3NDU4MDIx", "number": 351, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoxOToxNlrOEqMCUQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0OToxOFrOEq4KBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjcyODQ5OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoxOToxNlrOHcQLzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoxOToxNlrOHcQLzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4NzM0Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n          \n          \n            \n            Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499387342", "createdAt": "2020-10-05T07:19:16Z", "author": {"login": "beatngu13"}, "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123fc768415f125b59a364c42576cfee4fe55380"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjczNzA3OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoyMjowNVrOHcQQ1g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoyMjowNVrOHcQQ1g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4ODYzMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.\n          \n          \n            \n            To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499388630", "createdAt": "2020-10-05T07:22:05Z", "author": {"login": "beatngu13"}, "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n+To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123fc768415f125b59a364c42576cfee4fe55380"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEyNjc0MTgzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoyMzo0MFrOHcQTtw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNVQwNzoyMzo0MFrOHcQTtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5OTM4OTM2Nw==", "bodyText": "I assume this extra empty line can be removed?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r499389367", "createdAt": "2020-10-05T07:23:40Z", "author": {"login": "beatngu13"}, "path": "README.md", "diffHunk": "@@ -54,6 +54,10 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artefacts of the ecosystem, e.g. the `junit-platform-commons`.\n+To avoid dependency troubles you should use the JUnit 5's BOM (the artefact is called [`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) in your project instead defining all of their dependency versions by hand.\n+\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "123fc768415f125b59a364c42576cfee4fe55380"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzk1NTQ4OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0ODo1MlrOHdVdFQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0ODo1MlrOHdVdFQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMjI2MQ==", "bodyText": "Let's move this one paragraph up, so the preceding and the following paragraphs can stay together (they love each other so much).", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r500522261", "createdAt": "2020-10-06T18:48:52Z", "author": {"login": "nipafx"}, "path": "README.md", "diffHunk": "@@ -54,6 +54,9 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).\n+To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ece97263e33e2728555123657e92bfaccf67837"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEzMzk1NzE2OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0OToxOFrOHdVeHQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0wNlQxODo0OToxOFrOHdVeHQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwMDUyMjUyNQ==", "bodyText": "Let's link \"dependency issues\" to the actual issue, so users get an idea of what may go wrong.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/351#discussion_r500522525", "createdAt": "2020-10-06T18:49:18Z", "author": {"login": "nipafx"}, "path": "README.md", "diffHunk": "@@ -54,6 +54,9 @@ That means it can be used on all Java versions 8 and higher on class path and mo\n To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n \n+Pioneer does not only use JUnit 5's API, but also other artifacts from its ecosystem such as [`junit-platform-commons`](https://mvnrepository.com/artifact/org.junit.platform/junit-platform-commons).\n+To avoid dependency issues, you should add the JUnit 5 BOM ([`junit-bom`](https://mvnrepository.com/artifact/org.junit/junit-bom)) to your project instead of defining all dependency versions manually.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9ece97263e33e2728555123657e92bfaccf67837"}, "originalPosition": 5}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4139, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}