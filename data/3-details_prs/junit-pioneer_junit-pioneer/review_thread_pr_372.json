{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTEzNjQwOTI0", "number": 372, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo0NDozNlrOE0KXXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo0NzowN1rOE0KYSw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTMxMjMwOnYy", "diffSide": "RIGHT", "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "isResolved": false, "comments": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo0NDozNlrOHrwa3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxNDozNlrOHs4uaw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw==", "bodyText": "Personally, I'd put these in a @Nested class in CartesianProductTestExtensionTests.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644127", "createdAt": "2020-11-01T16:44:36Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDIxNg==", "bodyText": "Also, this test never runs because we only run test classes that match the pattern: .*Tests.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644216", "createdAt": "2020-11-01T16:45:15Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NTA1OQ==", "bodyText": "Ah, thank you! Never realized this. This is also the reason why Sonar isn't happy.\nRegarding @Nested: CartesianProductTestExtensionTests is already quite big, so I thought having a separate class helps. But I can change that.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515645059", "createdAt": "2020-11-01T16:53:09Z", "author": {"login": "beatngu13"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0OTQxNQ==", "bodyText": "@Michael1993 converted the test to a nested one. We \"now\" have some redundant test cases since e.g. RedundantInputSetTestCases does essentially the same, just via a different test interface.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515649415", "createdAt": "2020-11-01T17:34:27Z", "author": {"login": "beatngu13"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODI5Ng==", "bodyText": "Regarding @Nested: CartesianProductTestExtensionTests is already quite big, so I thought having a separate class helps. But I can change that.\n\nI'm totally fine with splitting large test classes into multiple files and don't overuse @Nested.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516828296", "createdAt": "2020-11-03T17:13:53Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgyODc3OQ==", "bodyText": "@Michael1993 converted the test to a nested one. We \"now\" have some redundant test cases since e.g. RedundantInputSetTestCases does essentially the same, just via a different test interface.\n\nWhen they use different interfaces they go different ways, don't they?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516828779", "createdAt": "2020-11-03T17:14:36Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/CartesianProductTestSetsTest.java", "diffHunk": "@@ -0,0 +1,42 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.util.Lists.list;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+\n+@DisplayName(\"The sets for CartesianProductTest\")\n+class CartesianProductTestSetsTest {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDEyNw=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIzMTMxNDY3OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "isResolved": false, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wMVQxNjo0NzowN1rOHrwb_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0wM1QxNzoxNzoyOVrOHs41cQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ==", "bodyText": "Didn't you say we should be able to add a Stream too...?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515644415", "createdAt": "2020-11-01T16:47:07Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "diffHunk": "@@ -72,10 +74,19 @@\n \t\tprivate final List<List<?>> sets = new ArrayList<>(); //NOSONAR\n \n \t\tpublic Sets add(Object... entries) {\n-\t\t\tsets.add(new ArrayList<>(Arrays.stream(entries).distinct().collect(toList())));\n+\t\t\tsets.add(toDistinctList(Arrays.stream(entries)));\n \t\t\treturn this;\n \t\t}\n \n+\t\tpublic Sets addAll(Collection<?> entries) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NTI0MA==", "bodyText": "Uh, no? \ud83e\udd37\u200d\u2642\ufe0f You mean addAll(Stream<?>) in addition?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515645240", "createdAt": "2020-11-01T16:54:35Z", "author": {"login": "beatngu13"}, "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "diffHunk": "@@ -72,10 +74,19 @@\n \t\tprivate final List<List<?>> sets = new ArrayList<>(); //NOSONAR\n \n \t\tpublic Sets add(Object... entries) {\n-\t\t\tsets.add(new ArrayList<>(Arrays.stream(entries).distinct().collect(toList())));\n+\t\t\tsets.add(toDistinctList(Arrays.stream(entries)));\n \t\t\treturn this;\n \t\t}\n \n+\t\tpublic Sets addAll(Collection<?> entries) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NzEzOQ==", "bodyText": "Yes, the option is already there, just make it public and rename it to add/addAll. \ud83d\ude04", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r515647139", "createdAt": "2020-11-01T17:12:06Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "diffHunk": "@@ -72,10 +74,19 @@\n \t\tprivate final List<List<?>> sets = new ArrayList<>(); //NOSONAR\n \n \t\tpublic Sets add(Object... entries) {\n-\t\t\tsets.add(new ArrayList<>(Arrays.stream(entries).distinct().collect(toList())));\n+\t\t\tsets.add(toDistinctList(Arrays.stream(entries)));\n \t\t\treturn this;\n \t\t}\n \n+\t\tpublic Sets addAll(Collection<?> entries) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNjgzMDU3Nw==", "bodyText": "Should we add the possibility to documentation, with a small code example?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/372#discussion_r516830577", "createdAt": "2020-11-03T17:17:29Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/CartesianProductTest.java", "diffHunk": "@@ -72,10 +74,19 @@\n \t\tprivate final List<List<?>> sets = new ArrayList<>(); //NOSONAR\n \n \t\tpublic Sets add(Object... entries) {\n-\t\t\tsets.add(new ArrayList<>(Arrays.stream(entries).distinct().collect(toList())));\n+\t\t\tsets.add(toDistinctList(Arrays.stream(entries)));\n \t\t\treturn this;\n \t\t}\n \n+\t\tpublic Sets addAll(Collection<?> entries) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNTY0NDQxNQ=="}, "originalCommit": {"oid": "8f9bbd389520dccb73201585c3a72f01d22ecc26"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4159, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}