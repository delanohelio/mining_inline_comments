{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDIxNzM0", "number": 318, "title": "Limit docs code snippets line length to max 60 chars (#317 / #318)", "bodyText": "I don't see a way to cut the examples in  TempDir extension, so I leave this to maybe refactored method names in #277\nLimit docs code snippets line length to max 60 chars (#317 / #318)\n\nTo avoid horizontal scroll bars inside the code examples of the\ndocumentation pages the line length of them must not more\nthat 60 characters.\n\n\nPR checklist\nThe following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\nIt is based on our contributors guidelines, especially the \"writing code\" section.\nIt shall help to check for completion of the listed points.\nIf a point does not apply to the given PR's changes, the corresponding entry can be simply marked as done.\nDocumentation (general)\n\n There is documentation (Javadoc and site documentation; added or updated)\n There is implementation information to describe why a non-obvious source code / solution got implemented\n Site documentation has its own .adoc file in the docs folder, e.g. docs/report-entries.adoc\n Only one sentence per line (especially in .adoc files)\n Javadoc uses formal style, while sites documentation may use informal style (see #265)\n\nDocumentation (new extension)\n\n The docs/docs-nav.yml navigation has an entry for the new extension\n The package-info.java contains information about the new extension\n\nCode\n\n Code adheres to code style, naming conventions etc.\n Successful tests cover all changes\n There are checks which validate correct / false usage / configuration of a functionality and there are tests to verify those checks (see #164)\n Tests use AssertJ or our own PioneerAssert (which are based on AssertJ)\n\nContributing\n\n A prepared commit message exists\n The list of contributions inside README.md mentions the new contribution (real name optional)\n\n\nI hereby agree to the terms of the JUnit Pioneer Contributor License Agreement.", "createdAt": "2020-08-08T11:34:21Z", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318", "merged": true, "mergeCommit": {"oid": "ffc5506f386405b092c7baecdd7302dede8d9e45"}, "closed": true, "closedAt": "2020-09-29T20:09:54Z", "author": {"login": "Bukama"}, "timelineItems": {"totalCount": 23, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABc82r_uAH2gAyNDY1MDIxNzM0OmE5ZDAxYmUyMmZjNjRjN2M3ODNiZGYzMDU5YjUxYTA0MjEyMjk1MjE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdNt5JgAH2gAyNDY1MDIxNzM0OmJhZmVlZjQ4YjE4OGZmNThlMTkzM2U1YTg5MjU0MjZmOTViZWE5OWM=", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "a9d01be22fc64c7c783bdf3059b51a0421229521", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/a9d01be22fc64c7c783bdf3059b51a0421229521", "committedDate": "2020-08-08T10:44:28Z", "message": "Locale timezone to 60 chars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "56ac463be090fcbe0827276f8f399420c72ccf74", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/56ac463be090fcbe0827276f8f399420c72ccf74", "committedDate": "2020-08-08T10:57:32Z", "message": "Displayname to 60 chars (except one line with 61 which is fine according to Nicolai)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "75ac57e65521a0584b69d8f4e1b1b26bdf370ee3", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/75ac57e65521a0584b69d8f4e1b1b26bdf370ee3", "committedDate": "2020-08-08T10:58:58Z", "message": "Environmentvariables to 60 chars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b63f00f0e8f1966e8b0000a9ffbfbbd57b7d25b0", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/b63f00f0e8f1966e8b0000a9ffbfbbd57b7d25b0", "committedDate": "2020-08-08T11:07:13Z", "message": "RangeSource to 60 chars\nAnd yes Kelvin is written without degree symbol ;)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d85dd24a7062e680265f853a7673b2fe1e07784e", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/d85dd24a7062e680265f853a7673b2fe1e07784e", "committedDate": "2020-08-08T11:09:19Z", "message": "ReportEntry to 60 chars (except one line with 61)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4fe986d02af136daf717e34404d83022110701ce", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/4fe986d02af136daf717e34404d83022110701ce", "committedDate": "2020-08-08T11:09:59Z", "message": "RetryingTest to 60 chars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "08709bc4ea0fdbfceaa9e658e1ef076714cf5760", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/08709bc4ea0fdbfceaa9e658e1ef076714cf5760", "committedDate": "2020-08-08T11:25:23Z", "message": "StdIo to 60 chars (except one line with 65 where I would need var for...)"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f7d2a2b23258a093c6763b2b91c0ffbd76b20e91", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/f7d2a2b23258a093c6763b2b91c0ffbd76b20e91", "committedDate": "2020-08-08T11:27:11Z", "message": "SystemProp to 60 chars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "54b4aba121ed92062d11feda85ee8fc29dd9c659", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/54b4aba121ed92062d11feda85ee8fc29dd9c659", "committedDate": "2020-08-08T11:35:16Z", "message": "Fixing default-locale-timezone.adoc"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDY5MDkw", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-483069090", "createdAt": "2020-09-05T17:42:38Z", "commit": {"oid": "54b4aba121ed92062d11feda85ee8fc29dd9c659"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMDcwNjEx", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-483070611", "createdAt": "2020-09-05T18:10:13Z", "commit": {"oid": "54b4aba121ed92062d11feda85ee8fc29dd9c659"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "72480f74f6381b2cef093f5c932b9d2bd1ff5a41", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/72480f74f6381b2cef093f5c932b9d2bd1ff5a41", "committedDate": "2020-09-06T07:22:30Z", "message": "Merge branch 'master' into bishue317/docmaxchars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/58aec4fa66b51f041fc196fd04683e0d4f06cee1", "committedDate": "2020-09-06T07:40:25Z", "message": "Fix to tabs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTM0NDA2", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-483134406", "createdAt": "2020-09-06T11:20:27Z", "commit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMDoyOFrOHNofdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo1N1rOHNogcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1Njk0OQ==", "bodyText": "Oh, non-ASCII chars in code snippets? \ud83d\ude2c", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484056949", "createdAt": "2020-09-06T11:20:28Z", "author": {"login": "beatngu13"}, "path": "docs/range-sources.adoc", "diffHunk": "@@ -28,9 +28,9 @@ It can be positive or negative:\n @ParameterizedTest\n @DoubleRangeSource(from = -0.1, to = -10, step = -0.1)\n void howColdIsIt(double d) {\n-\tSystem.out.println(d + \" degrees Celsius is cold\");\n-\tSystem.out.println(d + \" degrees Fahrenheit is REALY cold\");\n-\tSystem.out.println(d + \" degrees Kelvin is too cold to be true\");\n+\tSystem.out.println(d + \" \u00b0C is cold\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzAwNw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057007", "createdAt": "2020-09-06T11:20:50Z", "author": {"login": "beatngu13"}, "path": "docs/retrying-test.adoc", "diffHunk": "@@ -43,7 +43,8 @@ The first two executions are marked as ignored/aborted, while the last as failed\n ```java\n @RetryingTest(3)\n void aborted() {\n-\t// test code that is aborted e.g. because of an Assumption.\n+\t// test code that is aborted,\n+    // e.g. because of an Assumption.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzA1NA==", "bodyText": "Shouldn't this be aligned with line 173?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057054", "createdAt": "2020-09-06T11:21:33Z", "author": {"login": "beatngu13"}, "path": "docs/standard-input-output.adoc", "diffHunk": "@@ -158,17 +159,22 @@ This is the unit test for this class, using `StdIoExtension`:\n \n [source, java]\n ----\n-class ExampleConsoleReaderTest {\n+class ConsoleReaderTest {\n \n \t@Test\n \t@StdIo({ \"line1\", \"line2\", \"line3\" })\n \tvoid testReadLines(StdIn in) {\n-\t\tExampleConsoleReader consoleReader = new ExampleConsoleReader();\n+\t\tConsoleReader consoleReader = new ConsoleReader();\n \n \t\tconsoleReader.readLines();\n \n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\"); // This is failing\n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\", \"line3\"); // This is passing\n+        String[] lines = in.capturedLines();\n+\n+        // This failing\n+\t\t// assertEquals(lines, \"line1\", \"line2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzA5OQ==", "bodyText": "Shouldn't this be aligned with line 176?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057099", "createdAt": "2020-09-06T11:21:46Z", "author": {"login": "beatngu13"}, "path": "docs/standard-input-output.adoc", "diffHunk": "@@ -158,17 +159,22 @@ This is the unit test for this class, using `StdIoExtension`:\n \n [source, java]\n ----\n-class ExampleConsoleReaderTest {\n+class ConsoleReaderTest {\n \n \t@Test\n \t@StdIo({ \"line1\", \"line2\", \"line3\" })\n \tvoid testReadLines(StdIn in) {\n-\t\tExampleConsoleReader consoleReader = new ExampleConsoleReader();\n+\t\tConsoleReader consoleReader = new ConsoleReader();\n \n \t\tconsoleReader.readLines();\n \n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\"); // This is failing\n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\", \"line3\"); // This is passing\n+        String[] lines = in.capturedLines();\n+\n+        // This failing\n+\t\t// assertEquals(lines, \"line1\", \"line2\");\n+\n+        // This is passing\n+\t\t// assertEquals(lines, \"line1\", \"line2\", \"line3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzEyNg==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057126", "createdAt": "2020-09-06T11:22:12Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzEzNw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057137", "createdAt": "2020-09-06T11:22:20Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -22,9 +23,11 @@ And setting a system property for a test execution:\n [source,java]\n ----\n @Test\n-@SetSystemProperty(key = \"some property\", value = \"new value\")\n+@SetSystemProperty(key = \"some property\",\n+                   value = \"new value\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 16}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE1Mg==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057152", "createdAt": "2020-09-06T11:22:29Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -22,9 +23,11 @@ And setting a system property for a test execution:\n [source,java]\n ----\n @Test\n-@SetSystemProperty(key = \"some property\", value = \"new value\")\n+@SetSystemProperty(key = \"some property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"some property\")).\n+        isEqualTo(\"new value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 20}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE3MA==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057170", "createdAt": "2020-09-06T11:22:38Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE4Nw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057187", "createdAt": "2020-09-06T11:22:48Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE5OQ==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057199", "createdAt": "2020-09-06T11:22:53Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzIwMw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057203", "createdAt": "2020-09-06T11:22:57Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"3rd property\")).\n+        isEqualTo(\"new value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/e1e44328ffb775c9297dd8a6cfab9abd4e017a64", "committedDate": "2020-09-06T12:46:24Z", "message": "Fix more tabs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTQ1ODQ4", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-483145848", "createdAt": "2020-09-06T14:01:09Z", "commit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMTowOVrOHNphkw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMjoxNFrOHNpiCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzg3NQ==", "bodyText": "Still uses spaces \u2026 \ud83d\ude48", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484073875", "createdAt": "2020-09-06T14:01:09Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE5OQ=="}, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzk5NQ==", "bodyText": "Other examples are only inteded once, this uses two tabs?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484073995", "createdAt": "2020-09-06T14:02:14Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+\t\t\tisNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "originalPosition": 6}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3e26f85b36d61bdf4adb27352148b09fb8192c5c", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/3e26f85b36d61bdf4adb27352148b09fb8192c5c", "committedDate": "2020-09-06T16:43:23Z", "message": "Fix more tabs\nFormat retrying-test.adoc code samples"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aff3bd6d7ccc9471ed05e351e268bdd665b9fd0a", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/aff3bd6d7ccc9471ed05e351e268bdd665b9fd0a", "committedDate": "2020-09-06T16:52:00Z", "message": "Fix more tabs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDgzMTU5OTg2", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-483159986", "createdAt": "2020-09-06T17:21:41Z", "commit": {"oid": "aff3bd6d7ccc9471ed05e351e268bdd665b9fd0a"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a507ee4219694fbfd1446b83cea50d8de7619dd", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/6a507ee4219694fbfd1446b83cea50d8de7619dd", "committedDate": "2020-09-08T19:56:44Z", "message": "Apply changes from Nicolai"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDg0NDUxMTY0", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#pullrequestreview-484451164", "createdAt": "2020-09-08T19:58:47Z", "commit": {"oid": "6a507ee4219694fbfd1446b83cea50d8de7619dd"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "edbb7ec66a7c1f6c16c64f420c7b33189fd6f9c4", "author": {"user": {"login": "Bukama", "name": "Matthias B\u00fcnger"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/edbb7ec66a7c1f6c16c64f420c7b33189fd6f9c4", "committedDate": "2020-09-26T13:02:30Z", "message": "Merge branch 'master' into bishue317/docmaxchars"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bafeef48b188ff58e1933e5a8925426f95bea99c", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/bafeef48b188ff58e1933e5a8925426f95bea99c", "committedDate": "2020-09-29T20:06:24Z", "message": "Final edits"}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3824, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}