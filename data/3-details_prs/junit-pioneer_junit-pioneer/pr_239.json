{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTIyNDEx", "number": 239, "title": "Document maintainer team in CONTRIBUTING", "bodyText": "As per #226, the process of maintaining Pioneer in a team is laid out in CONTRIBUTING.md.\nPlease read carefully and let me know what you think about the described processes.\n\nI hereby agree to the terms of the JUnit Pioneer Contributor License Agreement.", "createdAt": "2020-04-24T12:29:44Z", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239", "merged": true, "mergeCommit": {"oid": "9852a62520aa0900ebaa84d7765aa7984486211d"}, "closed": true, "closedAt": "2020-04-28T17:57:27Z", "author": {"login": "nipafx"}, "timelineItems": {"totalCount": 10, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABcawQlKAH2gAyNDA4NTIyNDExOjdjNDE4YmU5YmI3OTI2NDhjOTQ4ZmQ5YWVhZmJmNmZkNWEwNDU3ZmE=", "endCursor": "Y3Vyc29yOnYyOpPPAAABccHfhwAFqTQwMjA2NjM2MQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "7c418be9bb792648c948fd9aeafbf6fd5a0457fa", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/7c418be9bb792648c948fd9aeafbf6fd5a0457fa", "committedDate": "2020-04-24T12:01:40Z", "message": "Explain maintainers in CONTRIBUTING"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "11c0d96bbbb93d172618b0bd92389df87791825e", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/11c0d96bbbb93d172618b0bd92389df87791825e", "committedDate": "2020-04-24T12:27:41Z", "message": "Update and fix ToC"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/411b90fab5ba980f781e748e19e89684b9db2b0d", "committedDate": "2020-04-24T12:30:35Z", "message": "Mention where team calls are organized"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwMzg3MjM0", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#pullrequestreview-400387234", "createdAt": "2020-04-25T12:04:42Z", "commit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMjowNDo0MlrOGL0low==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNVQxMjowNDo0MlrOGL0low==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTA0OTEyMw==", "bodyText": "This is just some feedback from my experience contributing here:\nI ran into that when I created my first pull request.\nThis probably occured because my knowledge on git and github is not too deep. I only github forked the junit-pioneer repo and thought that this was also a kind of branch and created a pull request form my/junit-pioneer/master to the junit-pioneer/junit-pioneer/master.\nMaybe a hint for non maintainers would be helpful that they have to github fork and create a new branch (is this even correct?) to prevent noobs like me for doing this mistake.\nI understand that people need to have certain amount of  basic knowledge before they can contribute and that this document should not teach the basics of git/github but at the same time lower the threshold for people to contribute.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415049123", "createdAt": "2020-04-25T12:04:42Z", "author": {"login": "Hancho2009"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -123,11 +129,21 @@ See the next section for how to adapt to upstream changes.\n \n ### Branching Strategy\n \n-By default, development happens in branches, which are merged via pull requests.\n+By default, development happens in branches, which are merged via pull requests (PRs from `master` will be closed).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 34}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "957dbeb4e90cb7a38bc2c054e2dc994e93565d19", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/957dbeb4e90cb7a38bc2c054e2dc994e93565d19", "committedDate": "2020-04-26T08:59:32Z", "message": "Add maintainers to generated POM"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDc5OTM1", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#pullrequestreview-400479935", "createdAt": "2020-04-26T09:13:40Z", "commit": {"oid": "957dbeb4e90cb7a38bc2c054e2dc994e93565d19"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAwNDc4OTg1", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#pullrequestreview-400478985", "createdAt": "2020-04-26T09:04:05Z", "commit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOTowNDowNVrOGMBdTQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNlQwOToyODowMVrOGMBvfw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI1OTk4MQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * branches intended to fix an issue that is already being worked on (hence the name is already blocked), copy its name but append the maintainer's name\n          \n          \n            \n            * Branches intended to fix an issue that is already being worked on (hence the name is already blocked), copy its name but append the maintainer's name, e.g. `issue/226-team-of-maintainers_bukama`", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415259981", "createdAt": "2020-04-26T09:04:05Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -123,11 +129,21 @@ See the next section for how to adapt to upstream changes.\n \n ### Branching Strategy\n \n-By default, development happens in branches, which are merged via pull requests.\n+By default, development happens in branches, which are merged via pull requests (PRs from `master` will be closed).\n Special cases, like fixing problems with the CI pipeline, are of course exempt from this guideline.\n \n Please make sure to give branches a meaningful name!\n As an example, the one creating this documentation was called `branching-merging-documentation`.\n+For bonus points, adhere to the following rule.\n+\n+For branches that are pushed directly to this repo (take note maintainers!), this naming strategy is obligatory:\n+\n+* branches intended to fix an issue must be named `issue/$NUMBER-$TITLE` where `$NUMBER` is the issue number on GitHub and `$TITLE` a very short summary of what the issue is about (for those of us who don't know all issues by heart) in lower case letters and dash-separated, e.g. `issue/226-team-of-maintainers`\n+* branches intended to fix an issue that is already being worked on (hence the name is already blocked), copy its name but append the maintainer's name", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2MDgyNQ==", "bodyText": "New sentences start with a upper letter, even after : ;)\nI really appreciate the naming, but why are we more strict with names of (temporal existing) branches over names of (permanently existing) classes?\n\n\nNote should, not must - there can be exceptions if well argued\n\nedit: 5 mins later : Hmm this only applies for branches that are pushed directly to this repo - which can only be done by maintainers, right? Then we should move the \"take note maintainers\" as a header to make clear that this naming thing is a MUST for maintainers but an YOU SHOULD for \"free\" contributors.\nedit2: another 15mins later:\nAnd that's somehow contradictory as we write at the beginning:\n\nThe guidelines apply to maintainers as well as contributors!", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415260825", "createdAt": "2020-04-26T09:08:28Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -123,11 +129,21 @@ See the next section for how to adapt to upstream changes.\n \n ### Branching Strategy\n \n-By default, development happens in branches, which are merged via pull requests.\n+By default, development happens in branches, which are merged via pull requests (PRs from `master` will be closed).\n Special cases, like fixing problems with the CI pipeline, are of course exempt from this guideline.\n \n Please make sure to give branches a meaningful name!\n As an example, the one creating this documentation was called `branching-merging-documentation`.\n+For bonus points, adhere to the following rule.\n+\n+For branches that are pushed directly to this repo (take note maintainers!), this naming strategy is obligatory:\n+\n+* branches intended to fix an issue must be named `issue/$NUMBER-$TITLE` where `$NUMBER` is the issue number on GitHub and `$TITLE` a very short summary of what the issue is about (for those of us who don't know all issues by heart) in lower case letters and dash-separated, e.g. `issue/226-team-of-maintainers`", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2MTYyMQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * branches intended to experiment with something must be named `lab/$TITLE`, where `$TITLE` works like above\n          \n          \n            \n            * branches intended to experiment with something must be named `lab/$TITLE`, where `$TITLE` works like above (Of course the issue number may not be available for experiments)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415261621", "createdAt": "2020-04-26T09:12:49Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -123,11 +129,21 @@ See the next section for how to adapt to upstream changes.\n \n ### Branching Strategy\n \n-By default, development happens in branches, which are merged via pull requests.\n+By default, development happens in branches, which are merged via pull requests (PRs from `master` will be closed).\n Special cases, like fixing problems with the CI pipeline, are of course exempt from this guideline.\n \n Please make sure to give branches a meaningful name!\n As an example, the one creating this documentation was called `branching-merging-documentation`.\n+For bonus points, adhere to the following rule.\n+\n+For branches that are pushed directly to this repo (take note maintainers!), this naming strategy is obligatory:\n+\n+* branches intended to fix an issue must be named `issue/$NUMBER-$TITLE` where `$NUMBER` is the issue number on GitHub and `$TITLE` a very short summary of what the issue is about (for those of us who don't know all issues by heart) in lower case letters and dash-separated, e.g. `issue/226-team-of-maintainers`\n+* branches intended to fix an issue that is already being worked on (hence the name is already blocked), copy its name but append the maintainer's name\n+* branches intended to experiment with something must be named `lab/$TITLE`, where `$TITLE` works like above", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 45}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2MjcyNQ==", "bodyText": "We should emphasize that the commit messages in the PRs branch really don't matter, because they get squashed anyway. What matters is the commit message when merging - and this in in responsibility by a maintainer.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415262725", "createdAt": "2020-04-26T09:18:35Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -149,10 +165,18 @@ To enforce the [branching strategy](#branching-strategy) pull requests from `mas\n \n ### Merging\n \n+Only maintainers can merge pull requests, so PRs from contributors require that at least one maintainer agrees with the changes.\n+Ideally, two should give their thumbs up, though.\n+Likewise, PRs opened by a maintainer should be reviewed and agreed to by at least one other maintainer.\n+Going further, we should avoid merging PRs that one maintainer outright disagrees with and instead work towards a solution that is acceptable to everybody.\n+Note all the _should_-s - exceptions can be made if justifiable (e.g. maintainers don't react or there is reason to hurry).\n+\n A pull request is accepted by squashing the commits and fast-forwarding master, making each bug fix or feature appear atomically on master.\n This can be achieved with GitHub's [_squash and merge_](https://help.github.com/articles/about-pull-request-merges/#squash-and-merge-your-pull-request-commits) feature.\n \n-To make the single commit expressive its message must be detailed and [good]((http://chris.beams.io/posts/git-commit/)) (really, read that post!).\n+### Commit Message\n+\n+To make the single commit expressive, its message must be detailed and [good]((http://chris.beams.io/posts/git-commit/)) (really, read that post!).", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2MzM2OA==", "bodyText": "in or to ? I'm not sure as I'm not so good a grammar :/", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415263368", "createdAt": "2020-04-26T09:21:35Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -254,3 +278,56 @@ That means, for now, contributors only have to care about _minor_.\n Since each non-trivial change is developed in a PR, this is the place to discuss whether the minor version should be increased, i.e. whether a change or feature is \"substantial\".\n If it is, the PR needs to update `version-properties` to the next minor version.\n Note that the feature's Javadoc needs to reference the same version in its `@since` tag.\n+\n+\n+## Pioneer Maintainers\n+\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`README.md`](README.md) for a list.\n+\n+### What We Do\n+\n+As maintainers, we may work on features, but it is perfectly ok to leave that to contributors.\n+Our main focus should be to keep the project moving forward:\n+\n+* vet, label, relate, and reply to issues\n+* provide technical guidance in issues and PRs", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2NDA3OA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            2. files in the repository\n          \n          \n            \n            2. files in the repository, e.g.  [README.md](https://github.com/junit-pioneer/junit-pioneer/blob/master/README.md), [CONTRIBUTING.md](https://github.com/junit-pioneer/junit-pioneer/blob/master/CONTRIBUTING.md), JavaDoc etc.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415264078", "createdAt": "2020-04-26T09:25:18Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -254,3 +278,56 @@ That means, for now, contributors only have to care about _minor_.\n Since each non-trivial change is developed in a PR, this is the place to discuss whether the minor version should be increased, i.e. whether a change or feature is \"substantial\".\n If it is, the PR needs to update `version-properties` to the next minor version.\n Note that the feature's Javadoc needs to reference the same version in its `@since` tag.\n+\n+\n+## Pioneer Maintainers\n+\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`README.md`](README.md) for a list.\n+\n+### What We Do\n+\n+As maintainers, we may work on features, but it is perfectly ok to leave that to contributors.\n+Our main focus should be to keep the project moving forward:\n+\n+* vet, label, relate, and reply to issues\n+* provide technical guidance in issues and PRs\n+* work on behind-the-scenes tasks like CI, documentation, etc.\n+* release new versions\n+\n+While maintainers will naturally gravitate towards tasks they prefer working on, there is no formal separation of duties and everybody's opinion on every topic is valued.\n+\n+### When We Do It\n+\n+We all have a soft spot for the project, but we also have jobs, families, hobbies, and other human afflictions.\n+There's no expectation of availability!\n+This applies to users opening issues, contributors providing PRs, and other maintainers - none of them can _expect_ a maintainer to have time to reply to their request. \n+\n+### Communication\n+\n+These are the channels we use to communicate with one another, our contributors, and users - in decreasing order of importance:\n+\n+1. [project website](https://junit-pioneer.org)\n+2. files in the repository", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNTI2NDYzOQ==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * when a team call or Discord discussion shapes our opinion on an issue or PR, the discussion (not just the conclusion!) is summarized in the issue or PR\n          \n          \n            \n            * when a team call or Discord discussion shapes our opinion on an issue or PR, the discussion (not just the conclusion!) is summarized in the issue or PR, see [here](https://github.com/junit-pioneer/junit-pioneer/issues/193#issuecomment-611620554) for an example.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#discussion_r415264639", "createdAt": "2020-04-26T09:28:01Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -254,3 +278,56 @@ That means, for now, contributors only have to care about _minor_.\n Since each non-trivial change is developed in a PR, this is the place to discuss whether the minor version should be increased, i.e. whether a change or feature is \"substantial\".\n If it is, the PR needs to update `version-properties` to the next minor version.\n Note that the feature's Javadoc needs to reference the same version in its `@since` tag.\n+\n+\n+## Pioneer Maintainers\n+\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`README.md`](README.md) for a list.\n+\n+### What We Do\n+\n+As maintainers, we may work on features, but it is perfectly ok to leave that to contributors.\n+Our main focus should be to keep the project moving forward:\n+\n+* vet, label, relate, and reply to issues\n+* provide technical guidance in issues and PRs\n+* work on behind-the-scenes tasks like CI, documentation, etc.\n+* release new versions\n+\n+While maintainers will naturally gravitate towards tasks they prefer working on, there is no formal separation of duties and everybody's opinion on every topic is valued.\n+\n+### When We Do It\n+\n+We all have a soft spot for the project, but we also have jobs, families, hobbies, and other human afflictions.\n+There's no expectation of availability!\n+This applies to users opening issues, contributors providing PRs, and other maintainers - none of them can _expect_ a maintainer to have time to reply to their request. \n+\n+### Communication\n+\n+These are the channels we use to communicate with one another, our contributors, and users - in decreasing order of importance:\n+\n+1. [project website](https://junit-pioneer.org)\n+2. files in the repository\n+3. Git commit messages\n+4. issues/PRs [on GitHub](https://github.com/junit-pioneer/junit-pioneer)\n+5. _#junit-pioneer_ channel [in Discord](https://discord.gg/rHfJeCF)\n+6. team calls (organized in said Discord)\n+7. occasional [Twitch streams](https://twitch.tv/nipafx)\n+\n+Whatever channel is being used to discuss a topic, the goal is always to push a summary and the conclusion of that conversation up the list as far as possible.\n+This is particularly important for the last three channels - \"document or didn't happen\".\n+A few examples:\n+\n+* when we discover a problem or possible feature on stream, a new GitHub issue will be created\n+* when a team call or Discord discussion shapes our opinion on an issue or PR, the discussion (not just the conclusion!) is summarized in the issue or PR", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "411b90fab5ba980f781e748e19e89684b9db2b0d"}, "originalPosition": 117}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "179aabdbc187f6b1b2774c054bf46b3cccf20e55", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/179aabdbc187f6b1b2774c054bf46b3cccf20e55", "committedDate": "2020-04-28T17:20:58Z", "message": "Update CONTRIBUTING.md\n\nCo-Authored-By: Matthias B\u00fcnger <Bukama@users.noreply.github.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3d3235559d8b033a43311b2ac5777a4c7be71920", "author": {"user": {"login": "nipafx", "name": "Nicolai Parlog"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/3d3235559d8b033a43311b2ac5777a4c7be71920", "committedDate": "2020-04-28T17:37:49Z", "message": "Edit according to Bukama's review"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NDAyMDY2MzYx", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/239#pullrequestreview-402066361", "createdAt": "2020-04-28T17:39:44Z", "commit": {"oid": "3d3235559d8b033a43311b2ac5777a4c7be71920"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3763, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}