{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTMyNjM0MzE1", "number": 380, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoxNjowMlrOFA5XEw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODo1MDo0MVrOFIQ2ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg0MTE1OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoxNjowMlrOH_aLew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo1MzoxMVrOH_blOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MTI1OQ==", "bodyText": "Hmm. We define the report key in all extensions etc. with a string and not by the name of a class. Don't know if I like this change", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536251259", "createdAt": "2020-12-04T17:16:02Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "diffHunk": "@@ -37,7 +36,7 @@\n  */\n public class IssueExtensionExecutionListener implements TestExecutionListener {\n \n-\tpublic static final String REPORT_ENTRY_KEY = \"Issue\";\n+\tpublic static final String REPORT_ENTRY_KEY = IssueExtensionExecutionListener.class.toString();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MTk4OQ==", "bodyText": "I don't really like it either, but I think \"Issue\" is just a tad bit too generic. \ud83e\udd37\nPerhaps this?\npublic static final String REPORT_ENTRY_KEY = \"IssueExtensionExecutionListener\";", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536271989", "createdAt": "2020-12-04T17:49:25Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "diffHunk": "@@ -37,7 +36,7 @@\n  */\n public class IssueExtensionExecutionListener implements TestExecutionListener {\n \n-\tpublic static final String REPORT_ENTRY_KEY = \"Issue\";\n+\tpublic static final String REPORT_ENTRY_KEY = IssueExtensionExecutionListener.class.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MTI1OQ=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3NDIzNQ==", "bodyText": "I like this better, so we can refactor (if needed) the class without breaking \"the API\".", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536274235", "createdAt": "2020-12-04T17:53:11Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "diffHunk": "@@ -37,7 +36,7 @@\n  */\n public class IssueExtensionExecutionListener implements TestExecutionListener {\n \n-\tpublic static final String REPORT_ENTRY_KEY = \"Issue\";\n+\tpublic static final String REPORT_ENTRY_KEY = IssueExtensionExecutionListener.class.toString();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MTI1OQ=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg0NjA0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueProcessorFactory.java", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoxNzoyM1rOH_aOjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo1OTowM1rOH_bzCA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MjA0NA==", "bodyText": "No correct Javadoc ;)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536252044", "createdAt": "2020-12-04T17:17:23Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueProcessorFactory.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import java.util.ServiceLoader;\n+\n+import org.junitpioneer.jupiter.IssueProcessor;\n+\n+// Ensures we get the same instance of StoringIssueProcessor in the integration tests", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MDkxNw==", "bodyText": "Does this class need javadoc? It's entirely internal to Pioneer. This is just an explanation why something trivial got moved to a different class.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536270917", "createdAt": "2020-12-04T17:47:33Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueProcessorFactory.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import java.util.ServiceLoader;\n+\n+import org.junitpioneer.jupiter.IssueProcessor;\n+\n+// Ensures we get the same instance of StoringIssueProcessor in the integration tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MjA0NA=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3NTMwNA==", "bodyText": "Well, you use the class in another place, so I think it's useful to add JavaDoc (aside from the fact I always add JavaDoc)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536275304", "createdAt": "2020-12-04T17:54:53Z", "author": {"login": "Bukama"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueProcessorFactory.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import java.util.ServiceLoader;\n+\n+import org.junitpioneer.jupiter.IssueProcessor;\n+\n+// Ensures we get the same instance of StoringIssueProcessor in the integration tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MjA0NA=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3Nzc2OA==", "bodyText": "Our extensions don't have Javadoc either...? \ud83e\udd37 I think only the public-facing API of Pioneer has proper javadoc.\nAhem. Sure, I can write a quick javadoc. No problemo.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536277768", "createdAt": "2020-12-04T17:59:03Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueProcessorFactory.java", "diffHunk": "@@ -0,0 +1,33 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import java.util.ServiceLoader;\n+\n+import org.junitpioneer.jupiter.IssueProcessor;\n+\n+// Ensures we get the same instance of StoringIssueProcessor in the integration tests", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1MjA0NA=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg3MTg2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyNDowNVrOH_aeNg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo1NToxNlrOH_bqXw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1NjA1NA==", "bodyText": "Do you want to use the new key here?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536256054", "createdAt": "2020-12-04T17:24:05Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory\n+\t\t\t.getIssueProcessors()\n+\t\t\t.iterator()\n+\t\t\t.next();\n+\n+\t@Test\n+\tvoid testIssueCases() {\n+\t\tLauncherFactory\n+\t\t\t\t.create()\n+\t\t\t\t.execute(LauncherDiscoveryRequestBuilder\n+\t\t\t\t\t\t.request()\n+\t\t\t\t\t\t.selectors(DiscoverySelectors.selectClass(IssueIntegrationCases.class))\n+\t\t\t\t\t\t.build());\n+\n+\t\tList<IssueTestSuite> issueTestSuites = issueProcessor.issueTestSuites();\n+\n+\t\tassertThat(issueTestSuites).isNotEmpty();\n+\t}\n+\n+\tstatic class IssueIntegrationCases {\n+\n+\t\t@Test\n+\t\t@Issue(\"Do not stand at my grave and weep. I am not there. I do not sleep.\")\n+\t\tvoid successfulTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am a thousand winds that blow. I am the diamond glints on snow.\")\n+\t\tvoid failingTest() {\n+\t\t\tfail(\"supposed to fail\");\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am the sunlight on ripened grain. I am the gentle autumn rain.\")\n+\t\tvoid abortedTest() {\n+\t\t\tthrow new TestAbortedException();\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Disabled(\"skipped\")\n+\t\t@Issue(\"When you awaken in the morning's hush, I am the swift uplifting rush\")\n+\t\tvoid skippedTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"Of quiet birds in circled flight. I am the soft stars that shine at night.\")\n+\t\tvoid publishingTest(TestReporter reporter) {\n+\t\t\treporter.publishEntry(\"Issue\", \"reporting test\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3MDY1Mw==", "bodyText": "No, I specifically used the \"Issue\" string to see what happens. It's not good - the issue id gets overwritten by whatever gets published with \"Issue\" key. \ud83d\ude1e", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536270653", "createdAt": "2020-12-04T17:47:07Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory\n+\t\t\t.getIssueProcessors()\n+\t\t\t.iterator()\n+\t\t\t.next();\n+\n+\t@Test\n+\tvoid testIssueCases() {\n+\t\tLauncherFactory\n+\t\t\t\t.create()\n+\t\t\t\t.execute(LauncherDiscoveryRequestBuilder\n+\t\t\t\t\t\t.request()\n+\t\t\t\t\t\t.selectors(DiscoverySelectors.selectClass(IssueIntegrationCases.class))\n+\t\t\t\t\t\t.build());\n+\n+\t\tList<IssueTestSuite> issueTestSuites = issueProcessor.issueTestSuites();\n+\n+\t\tassertThat(issueTestSuites).isNotEmpty();\n+\t}\n+\n+\tstatic class IssueIntegrationCases {\n+\n+\t\t@Test\n+\t\t@Issue(\"Do not stand at my grave and weep. I am not there. I do not sleep.\")\n+\t\tvoid successfulTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am a thousand winds that blow. I am the diamond glints on snow.\")\n+\t\tvoid failingTest() {\n+\t\t\tfail(\"supposed to fail\");\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am the sunlight on ripened grain. I am the gentle autumn rain.\")\n+\t\tvoid abortedTest() {\n+\t\t\tthrow new TestAbortedException();\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Disabled(\"skipped\")\n+\t\t@Issue(\"When you awaken in the morning's hush, I am the swift uplifting rush\")\n+\t\tvoid skippedTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"Of quiet birds in circled flight. I am the soft stars that shine at night.\")\n+\t\tvoid publishingTest(TestReporter reporter) {\n+\t\t\treporter.publishEntry(\"Issue\", \"reporting test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1NjA1NA=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI3NTU1MQ==", "bodyText": "Allright.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536275551", "createdAt": "2020-12-04T17:55:16Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory\n+\t\t\t.getIssueProcessors()\n+\t\t\t.iterator()\n+\t\t\t.next();\n+\n+\t@Test\n+\tvoid testIssueCases() {\n+\t\tLauncherFactory\n+\t\t\t\t.create()\n+\t\t\t\t.execute(LauncherDiscoveryRequestBuilder\n+\t\t\t\t\t\t.request()\n+\t\t\t\t\t\t.selectors(DiscoverySelectors.selectClass(IssueIntegrationCases.class))\n+\t\t\t\t\t\t.build());\n+\n+\t\tList<IssueTestSuite> issueTestSuites = issueProcessor.issueTestSuites();\n+\n+\t\tassertThat(issueTestSuites).isNotEmpty();\n+\t}\n+\n+\tstatic class IssueIntegrationCases {\n+\n+\t\t@Test\n+\t\t@Issue(\"Do not stand at my grave and weep. I am not there. I do not sleep.\")\n+\t\tvoid successfulTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am a thousand winds that blow. I am the diamond glints on snow.\")\n+\t\tvoid failingTest() {\n+\t\t\tfail(\"supposed to fail\");\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"I am the sunlight on ripened grain. I am the gentle autumn rain.\")\n+\t\tvoid abortedTest() {\n+\t\t\tthrow new TestAbortedException();\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Disabled(\"skipped\")\n+\t\t@Issue(\"When you awaken in the morning's hush, I am the swift uplifting rush\")\n+\t\tvoid skippedTest() {\n+\t\t}\n+\n+\t\t@Test\n+\t\t@Issue(\"Of quiet birds in circled flight. I am the soft stars that shine at night.\")\n+\t\tvoid publishingTest(TestReporter reporter) {\n+\t\t\treporter.publishEntry(\"Issue\", \"reporting test\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1NjA1NA=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 81}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg5MDI2OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyODoxOFrOH_ao9g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo0Mjo1NlrOH_bM_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1ODgwNg==", "bodyText": "What does this?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536258806", "createdAt": "2020-12-04T17:28:18Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory\n+\t\t\t.getIssueProcessors()\n+\t\t\t.iterator()\n+\t\t\t.next();\n+\n+\t@Test\n+\tvoid testIssueCases() {\n+\t\tLauncherFactory\n+\t\t\t\t.create()", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 42}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2ODAyOA==", "bodyText": "Creates a Launcher, which gets provided with a LauncherDiscoveryRequest and executes it.\nEssentially indirectly executes the IssueIntegrationCases class. By default, the LauncherFactory will use ServiceLoader to load in TestExecutionListeners (so IssueExtensionExecutionListener is automatically loaded in during the execution).", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536268028", "createdAt": "2020-12-04T17:42:56Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory\n+\t\t\t.getIssueProcessors()\n+\t\t\t.iterator()\n+\t\t\t.next();\n+\n+\t@Test\n+\tvoid testIssueCases() {\n+\t\tLauncherFactory\n+\t\t\t\t.create()", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1ODgwNg=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 42}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzM2NDg5Njc0OnYy", "diffSide": "RIGHT", "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzoyOTo0M1rOH_asxg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wNFQxNzo0NTozN1rOH_bTbQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1OTc4Mg==", "bodyText": "So you try to convert every IssueProcessoir which is found into a StoringIssueProcessor?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536259782", "createdAt": "2020-12-04T17:29:43Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2OTE1OQ==", "bodyText": "It's our own tests, so I made the bold assumption that we will only use the one IssueProcessor. \ud83d\ude1b", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536269159", "createdAt": "2020-12-04T17:44:45Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1OTc4Mg=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 34}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI2OTY3Nw==", "bodyText": "I'm fairly certain this won't change in the future, but if it does we can update the test?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r536269677", "createdAt": "2020-12-04T17:45:37Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/issue/IssueExtensionIntegrationTests.java", "diffHunk": "@@ -0,0 +1,91 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.issue;\n+\n+import static org.assertj.core.api.Assertions.assertThat;\n+import static org.assertj.core.api.Assertions.fail;\n+\n+import java.util.List;\n+\n+import org.junit.jupiter.api.Disabled;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.TestReporter;\n+import org.junit.platform.engine.discovery.DiscoverySelectors;\n+import org.junit.platform.launcher.core.LauncherDiscoveryRequestBuilder;\n+import org.junit.platform.launcher.core.LauncherFactory;\n+import org.junitpioneer.jupiter.Issue;\n+import org.junitpioneer.jupiter.IssueTestSuite;\n+import org.opentest4j.TestAbortedException;\n+\n+/**\n+ * Mary Elizabeth Fyre: Do Not Stand at My Grave and Weep is in the public domain.\n+ */\n+public class IssueExtensionIntegrationTests {\n+\n+\tprivate final StoringIssueProcessor issueProcessor = (StoringIssueProcessor) IssueProcessorFactory", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNjI1OTc4Mg=="}, "originalCommit": {"oid": "b7bf429388efc350fcf0f73ff18ae005dd5c7fdd"}, "originalPosition": 34}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MjA1MzQ2OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODozODowNlrOIKFJ0g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODozODowNlrOIKFJ0g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0MTEwNg==", "bodyText": "This key is used by IssueExtension to publish report entries. Why would it use the key of the \"target\" of the message. If \"Issue\" is too general, let's stick to \"Issue extension\" (or \"IssueExtension\"`).", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r547441106", "createdAt": "2020-12-22T18:38:06Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "diffHunk": "@@ -37,7 +36,7 @@\n  */\n public class IssueExtensionExecutionListener implements TestExecutionListener {\n \n-\tpublic static final String REPORT_ENTRY_KEY = \"Issue\";\n+\tpublic static final String REPORT_ENTRY_KEY = \"IssueExtensionExecutionListener\";", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad413dd6b83089c756e877001c529de20933f36"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzQ0MjA5MDU0OnYy", "diffSide": "RIGHT", "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODo1MDo0MVrOIKFfmw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0yMlQxODo1MDo0MVrOIKFfmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0NzQ0NjY4Mw==", "bodyText": "I don't like how these purely test-related problem bleeds into the production code.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/380#discussion_r547446683", "createdAt": "2020-12-22T18:50:41Z", "author": {"login": "nipafx"}, "path": "src/main/java/org/junitpioneer/jupiter/issue/IssueExtensionExecutionListener.java", "diffHunk": "@@ -88,7 +87,7 @@ public void testPlanExecutionFinished(TestPlan testPlan) {\n \t\t\treturn;\n \n \t\tList<IssueTestSuite> issueTestSuites = createIssueTestSuites();\n-\t\tfor (IssueProcessor issueProcessor : ServiceLoader.load(IssueProcessor.class)) {\n+\t\tfor (IssueProcessor issueProcessor : IssueProcessorRegistry.getIssueProcessors()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8ad413dd6b83089c756e877001c529de20933f36"}, "originalPosition": 31}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4164, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}