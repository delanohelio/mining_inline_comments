{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk1MzI0NTEz", "number": 213, "reviewThreads": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjo1OTo1MFrOD4p8Rg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzoxMDo1N1rOD4p_pw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzM0MDIyOnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjo1OTo1MFrOGPjD-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMjo1OTo1MFrOGPjD-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjI4MQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    os: [ubuntu, windows, macos]    \n          \n          \n            \n                    os: [ubuntu, windows, macos]", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418956281", "createdAt": "2020-05-02T12:59:50Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -1,23 +1,25 @@\n # This workflow will build a Java project with Gradle\n # For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle\n \n-name: JUnit Pioneer Flow\n+name: JUnit Pioneer\n \n on:\n   push:\n-    branches: [ master ]\n+    branches: 'master'\n+    tags-ignore: \n+      - 'v**'\n   pull_request:\n     branches: '*'\n \n jobs:\n   build:\n-    runs-on: ${{ matrix.os }}\n+    runs-on: ${{ matrix.os }}-latest\n     strategy:\n       matrix:\n         # test against latest update of each major Java version, as well as specific updates of LTS versions:\n         java: [ 8, 11, 14 ]\n-        os: [ubuntu-latest, windows-latest, macos-latest]\n-    name: ${{ matrix.os }} - Java ${{ matrix.java }}\n+        os: [ubuntu, windows, macos]    ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 26}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzM0MTM0OnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzowMToxOVrOGPjEew==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzoxNzo0NlrOGPjK4w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjQxMQ==", "bodyText": "What do we need these environment variables for?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418956411", "createdAt": "2020-05-02T13:01:19Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 104}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1ODA1MQ==", "bodyText": "that is the funny part, shipkit is only compatible with travis currently, and needs those travis environment variables. So i \"fake\" to be travis to get shipkit working, till they hopefully accept my proposal, and i can finish mockito/shipkit#868", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418958051", "createdAt": "2020-05-02T13:17:46Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjQxMQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 104}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzM0MjQwOnYy", "diffSide": "RIGHT", "path": "build.gradle.kts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzowMjoyNVrOGPjE-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzowMjoyNVrOGPjE-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjUzNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            }\n          \n          \n            \n            }", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418956537", "createdAt": "2020-05-02T13:02:25Z", "author": {"login": "beatngu13"}, "path": "build.gradle.kts", "diffHunk": "@@ -148,67 +137,4 @@ tasks {\n             into(\"META-INF\")\n         }\n     }\n-}\n-\n-publishing {\n-    publications {\n-        create<MavenPublication>(\"complete\") {\n-            from(components[\"java\"])\n-\n-            artifact(tasks.sourcesJar.get())\n-            artifact(tasks.javadocJar.get())\n-\n-            pom {\n-                name.set(\"JUnit Pioneer\")\n-                description.set(\"JUnit 5 Extension Pack\")\n-                url.set(\"https://github.com/junit-pioneer/junit-pioneer\")\n-                scm {\n-                    url.set(\"https://github.com/junit-pioneer/junit-pioneer\")\n-                    connection.set(\"scm:git:git://github.com:junit-pioneer/junit-pioneer.git\")\n-                }\n-                issueManagement {\n-                    url.set(\"https://github.com/junit-pioneer/junit-pioneer/issues\")\n-                    system.set(\"GitHub\")\n-                }\n-                licenses {\n-                    license {\n-                        name.set(\"Eclipse Public License v2.0\")\n-                        url.set(\"http://www.eclipse.org/legal/epl-v20.html\")\n-                    }\n-                }\n-                organization {\n-                    name.set(\"JUnit Pioneer\")\n-                    url.set(\"https://github.com/junit-pioneer\")\n-                }\n-                developers {\n-                    developer {\n-                        id.set(\"nipa\")\n-                        name.set(\"Nicolai Parlog\")\n-                        email.set(\"nipa@codefx.org\")\n-                        organization.set(\"CodeFX\")\n-                        organizationUrl.set(\"http://codefx.org\")\n-                        timezone.set(\"1\")\n-                    }\n-                }\n-            }\n-        }\n-    }\n-    repositories {\n-        maven {\n-            val stagingRepoUrl = uri(\"https://oss.sonatype.org/service/local/staging/deploy/maven2/\")\n-            val snapshotRepoUrl = uri(\"https://oss.sonatype.org/content/repositories/snapshots/\")\n-            url = if (isReleaseVersion) stagingRepoUrl else snapshotRepoUrl\n-            credentials {\n-                username = mavenUserName\n-                password = mavenPassword\n-            }\n-        }\n-    }\n-}\n-\n-tasks.register<org.junitpioneer.gradle.TriggerTravisTask>(\"triggerSiteBuild\") {\n-    travisProject = \"junit-pioneer/junit-pioneer.github.io\"\n-    branch = \"grandmaster\"\n-    apiToken = travisApiToken\n-    message = \"Triggered by successful JUnit Pioneer build for %COMMIT\"\n-}\n+}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 97}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzM0NDc3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": false, "comments": {"totalCount": 5, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzowNToyOFrOGPjGJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxNDoxMTo1M1rOGPjgiQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjgzOQ==", "bodyText": "What is the difference to GITHUB_TOKEN above? If there is none, I would make the environment variables globally available. Otherwise, I would use the same prefix for consistency reasons (i.e. \"GH\" or \"GITHUB\").", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418956839", "createdAt": "2020-05-02T13:05:28Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}\n+          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1ODUwNA==", "bodyText": "good point @nicolaiparlog can you rename the secret and add edit this line afterwards?\nThe difference is, that the GITHUB_TOKEN should not have any write access just read access, where ass the (soon to be) GITHUB_WRITE_TOKEN also has write access", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418958504", "createdAt": "2020-05-02T13:22:26Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}\n+          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjgzOQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1OTAxMw==", "bodyText": "Ah, I see. Then maybe GITHUB_READ_TOKEN and GITHUB_WRITE_TOKEN? (Although I wonder what a read-only token on a public project can do that I cannot do without a token at all?)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418959013", "createdAt": "2020-05-02T13:27:17Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}\n+          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjgzOQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1OTExNA==", "bodyText": "i renamed the environment variable, we just need to change the name of the secret", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418959114", "createdAt": "2020-05-02T13:28:30Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}\n+          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjgzOQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 105}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk2MzU5Mw==", "bodyText": "i would not rename the other one, as it seems to be a default not 100% assinged to the repo but also to each user https://help.github.com/en/actions/configuring-and-managing-workflows/authenticating-with-the-github_token", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418963593", "createdAt": "2020-05-02T14:11:53Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:\n+    needs: build\n+    runs-on: ubuntu-latest\n+    name: Deploy with Shipkit\n+    if: github.ref == 'refs/heads/master'\n+    steps:\n+      - name: Sanitize Branch\n+        uses: frabert/replace-string-action@master\n+        id: gitbranch\n+        with:\n+          pattern: 'refs/heads/(.*)'\n+          string: \"${{ github.ref }}\"\n+          replace-with: '$1'\n+      - uses: actions/checkout@v2\n+      - name: Setup java\n+        uses: actions/setup-java@v1\n+        with:\n+          java-version: 8\n+      - name: Perform Release\n+        uses: eskatos/gradle-command-action@v1\n+        env:\n+          TRAVIS_BRANCH: ${{ steps.gitbranch.outputs.replaced }}\n+          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}\n+          TRAVIS_PULL_REQUEST: ${{ github.event_name == 'pull_request' }}\n+          GH_WRITE_TOKEN: ${{ secrets.GH_WRITE_TOKEN }}", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NjgzOQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjYwNzM0ODg3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzoxMDo1N1rOGPjIRQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNS0wMlQxMzoxOTo0OVrOGPjL0A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NzM4MQ==", "bodyText": "If we want to, we can also use a separate YAML file for this?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418957381", "createdAt": "2020-05-02T13:10:57Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 81}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1ODI4OA==", "bodyText": "i was also thinking about this, and maybe trigger this from the build script. but i think we should always first run the build, and see if there are no errors, and than deploy.\nThis might be a good improvement for the future to find a sophisticated way of running both actions in sequence but conditionally on a success of the first one. I did not investigate that far into actions.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/213#discussion_r418958288", "createdAt": "2020-05-02T13:19:49Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -45,42 +47,44 @@ jobs:\n         with:\n           arguments: --refresh-dependencies --stacktrace --scan clean build\n       - name: Sonarqube\n-        if: matrix.java == '8' && matrix.os == 'ubuntu-latest'\n+        if: matrix.java == '8' && matrix.os == 'ubuntu'\n         env:\n           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n           SONAR_TOKEN: \"61ab2579215aa8a0024a2f9368fc1298fdecfd18\"\n         run: ./gradlew jacocoTestReport sonarqube --stacktrace -i\n \n-  # This will be handled on a later stage\n-  # deploy:\n-  #   runs-on: ubuntu-latest\n-  #   name: Deploy\n-  #   if: github.ref == 'refs/heads/master'\n-  #   steps:\n-  #     - name: Check out repo\n-  #       uses: actions/checkout@v2\n-  #     - name: Setup java\n-  #       uses: actions/setup-java@v1\n-  #       with:\n-  #         java-version: 8\n-  #     - name: Cache Gradle\n-  #       uses: actions/cache@v1\n-  #       with:\n-  #         path: ~/.gradle/caches\n-  #         key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n-  #         restore-keys: ${{ runner.os }}-gradle-\n-  #     - name: Perform Release\n-  #       uses: eskatos/gradle-command-action@v1\n-  #       if:\n-  #       with:\n-  #         arguments: ciPerformRelease\n-  #     - name: Upload Release to GitHub\n-  #       uses: softprops/action-gh-release@v1\n-  #       if: startsWith(github.ref, 'refs/tags/')\n-  #       with:\n-  #         files: ./build/libs/junit-pioneer-*.jar\n-  #       env:\n-  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n+  deploy:", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxODk1NzM4MQ=="}, "originalCommit": {"oid": "63f9a056ca3e6f4e3d323ca0c27c583aa937b503"}, "originalPosition": 81}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4211, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}