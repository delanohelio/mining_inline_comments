{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0Mzk2ODAzOTk1", "number": 214, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTowMjowM1rODte4HQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMToxMjo0MVrODtfFNw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDE4Mzk3OnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTowMjowM1rOF-7jHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMjowOTo1MFrOF-9oNA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTY3Ng==", "bodyText": "i do not think that we really need a build on each push to all branches. master alone is fine. Based on shipkit we also do not want build on tags i think.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401531676", "createdAt": "2020-04-01T11:02:03Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -3,11 +3,7 @@\n \n name: JUnit Pioneer Flow\n \n-on:\n-  push:\n-    branches: [ master ]\n-  pull_request:\n-    branches: '*'\n+on: [push, pull_request]", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1Mzg1OQ==", "bodyText": "What is the downside of building on each push? If we don't touch the parallelization limit such that jobs are queued/blocked, I would personally find this helpful as I cannot locally verify the build matrix. As a contributor, I wish to get that feedback before opening a PR.\nRegarding Shipkit: unfortunately, I haven't really worked with it so far. This might be an issue because I don't know how these CI skips work (neither in general nor in combination with GHA).\nI would suggest to revert this commit and discuss that separately, maybe also in the course of #193.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401553859", "createdAt": "2020-04-01T11:46:31Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -3,11 +3,7 @@\n \n name: JUnit Pioneer Flow\n \n-on:\n-  push:\n-    branches: [ master ]\n-  pull_request:\n-    branches: '*'\n+on: [push, pull_request]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTY3Ng=="}, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU2NTc0OA==", "bodyText": "I have to admit, i did not take the contributor part into consideration, but, i am also thinking about resource usage etc. and i am not sure, if we really need a build on 3 jdks with 3 OS for a branch in development.\nThe thing we really should take care of, is to not build on a tag push. Shipkit will create a tag and push it, hence that the build on master will trigger a another build, which is imho not needed at all. Hence that i would exclude tags.\n[ci skip] is not working on GHA as it is a travis default\n[ci skip-release] is something offered by skipkit \nwe could although configure our own \"commit postfix\" to prevent a release - to make it easier for @nicolaiparlog to not trigger a build :)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401565748", "createdAt": "2020-04-01T12:09:50Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -3,11 +3,7 @@\n \n name: JUnit Pioneer Flow\n \n-on:\n-  push:\n-    branches: [ master ]\n-  pull_request:\n-    branches: '*'\n+on: [push, pull_request]", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzMTY3Ng=="}, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDIwNzQwOnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTowOTozNlrOF-7xLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTo0MzozMVrOF-80CA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNTI3Nw==", "bodyText": "not sure if we need an extra step we could also inline this into the checkout step - https://github.com/actions/checkout#fetch-all-history-for-all-tags-and-branches", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401535277", "createdAt": "2020-04-01T11:09:36Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -19,11 +15,26 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n     name: ${{ matrix.os }} - Java ${{ matrix.java }}\n     steps:\n-      - uses: actions/checkout@v2\n+      - name: Check out repo\n+        uses: actions/checkout@v2\n+        # fetch unshallow to enable blame for Sonar\n+      - name: Fetch unshallow", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NzAwMg==", "bodyText": "AFAIK the first step does the actual checkout with a bunch of optimizations:\nhttps://github.com/beatngu13/junit-pioneer/runs/551399103?check_suite_focus=true#step:2:1\nWhereas the second step only fetches the history:\nhttps://github.com/beatngu13/junit-pioneer/runs/551399103?check_suite_focus=true#step:3:1\nI don't think we can use one without the other? Unless we do the checkout manually and avoid setting depth to 1 (like here).\nProbably related to this feature request:\nactions/checkout#204", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401547002", "createdAt": "2020-04-01T11:32:30Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -19,11 +15,26 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n     name: ${{ matrix.os }} - Java ${{ matrix.java }}\n     steps:\n-      - uses: actions/checkout@v2\n+      - name: Check out repo\n+        uses: actions/checkout@v2\n+        # fetch unshallow to enable blame for Sonar\n+      - name: Fetch unshallow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNTI3Nw=="}, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU1MjM5Mg==", "bodyText": "maybe i miss understood the logic in the readme of the action\n- uses: actions/checkout@v2\n- run: |\n    git fetch shallow--prune --un\n\ni thought based on this we can just do\n  - name: Check out repo\n        uses: actions/checkout@v2\n        run: |\n             git fetch shallow--prune --un\n\nBut it also seams like i miss read yaml once again, and ignored the - which i just realized by writing this comment :)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401552392", "createdAt": "2020-04-01T11:43:31Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -19,11 +15,26 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n     name: ${{ matrix.os }} - Java ${{ matrix.java }}\n     steps:\n-      - uses: actions/checkout@v2\n+      - name: Check out repo\n+        uses: actions/checkout@v2\n+        # fetch unshallow to enable blame for Sonar\n+      - name: Fetch unshallow", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNTI3Nw=="}, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 21}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjQ5MDIxNzUxOnYy", "diffSide": "RIGHT", "path": ".github/workflows/actions.yml", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMToxMjo0MVrOF-73Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0wMVQxMTozMjo1N1rOF-8gAg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNjg3MA==", "bodyText": "sonar only runs on ubuntu and only on one JDK - maybe we should take this into consideration.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401536870", "createdAt": "2020-04-01T11:12:41Z", "author": {"login": "aepfli"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -19,11 +15,26 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n     name: ${{ matrix.os }} - Java ${{ matrix.java }}\n     steps:\n-      - uses: actions/checkout@v2\n+      - name: Check out repo\n+        uses: actions/checkout@v2\n+        # fetch unshallow to enable blame for Sonar\n+      - name: Fetch unshallow\n+        run: git fetch --prune --unshallow\n       - name: Setup java\n         uses: actions/setup-java@v1\n         with:\n           java-version: ${{ matrix.java }}\n+      - name: Cache Gradle\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.gradle/caches/\n+          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n+          restore-keys: ${{ runner.os }}-gradle-\n+      - name: Cache Sonar", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTU0NzI2Ng==", "bodyText": "Good catch, thx! Will fix that.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/214#discussion_r401547266", "createdAt": "2020-04-01T11:32:57Z", "author": {"login": "beatngu13"}, "path": ".github/workflows/actions.yml", "diffHunk": "@@ -19,11 +15,26 @@ jobs:\n         os: [ubuntu-latest, windows-latest, macos-latest]\n     name: ${{ matrix.os }} - Java ${{ matrix.java }}\n     steps:\n-      - uses: actions/checkout@v2\n+      - name: Check out repo\n+        uses: actions/checkout@v2\n+        # fetch unshallow to enable blame for Sonar\n+      - name: Fetch unshallow\n+        run: git fetch --prune --unshallow\n       - name: Setup java\n         uses: actions/setup-java@v1\n         with:\n           java-version: ${{ matrix.java }}\n+      - name: Cache Gradle\n+        uses: actions/cache@v1\n+        with:\n+          path: ~/.gradle/caches/\n+          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}\n+          restore-keys: ${{ runner.os }}-gradle-\n+      - name: Cache Sonar", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQwMTUzNjg3MA=="}, "originalCommit": {"oid": "8c3d94591eba9d08fa43c30a4e7983a0c041f028"}, "originalPosition": 33}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4213, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}