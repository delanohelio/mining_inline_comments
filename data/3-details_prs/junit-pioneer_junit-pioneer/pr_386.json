{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTM4OTY4MTY0", "number": 386, "title": "Making SONAR happy", "bodyText": "Closes #385\nPR checklist\nThe following checklist shall help the PR's author, the reviewers and maintainers to ensure the quality of this project.\nIt is based on our contributors guidelines, especially the \"writing code\" section.\nIt shall help to check for completion of the listed points.\nIf a point does not apply to the given PR's changes, the corresponding entry can be simply marked as done.\nDocumentation (general)\n\n There is documentation (Javadoc and site documentation; added or updated)\n There is implementation information to describe why a non-obvious source code / solution got implemented\n Site documentation has its own .adoc file in the docs folder, e.g. docs/report-entries.adoc\n Only one sentence per line (especially in .adoc files)\n Javadoc uses formal style, while sites documentation may use informal style\n\nDocumentation (new extension)\n\n The docs/docs-nav.yml navigation has an entry for the new extension\n The package-info.java contains information about the new extension\n\nCode\n\n Code adheres to code style, naming conventions etc.\n Successful tests cover all changes\n There are checks which validate correct / false usage / configuration of a functionality and there are tests to verify those checks\n Tests use AssertJ or our own PioneerAssert (which are based on AssertJ)\n\nContributing\n\n A prepared commit message exists\n The list of contributions inside README.md mentions the new contribution (real name optional)\n\n\nI hereby agree to the terms of the JUnit Pioneer Contributor License Agreement.", "createdAt": "2020-12-13T15:20:35Z", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386", "merged": true, "mergeCommit": {"oid": "2d1e63d34a1433faa35238fd50ec1116afe66a5d"}, "closed": true, "closedAt": "2020-12-18T17:19:46Z", "author": {"login": "Michael1993"}, "timelineItems": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdlxzgBAH2gAyNTM4OTY4MTY0Ojc2YzhiODk1MDE3YWQxOTQ3YmM0NzhjZTEwMTVmZTY1NzM3YmQxNWQ=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdmdvfygFqTU1MjY5NDQ3Nw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "76c8b895017ad1947bc478ce1015fe65737bd15d", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/76c8b895017ad1947bc478ce1015fe65737bd15d", "committedDate": "2020-12-13T14:14:02Z", "message": "Test without assertions = successful test\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "aaf2c7f91871363edfec6ef1d27f4502b1f663d4", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/aaf2c7f91871363edfec6ef1d27f4502b1f663d4", "committedDate": "2020-12-13T14:41:22Z", "message": "Provide basic implementation of read/write(byte[], int, int)\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "15175d0ba7f1bce5ab71df650055e422293b40f5", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/15175d0ba7f1bce5ab71df650055e422293b40f5", "committedDate": "2020-12-13T14:41:47Z", "message": "Extract String in a somewhat ugly way\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "38ca36a1b9abdda40c3ccb809125c678b6fa85a5", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/38ca36a1b9abdda40c3ccb809125c678b6fa85a5", "committedDate": "2020-12-13T14:53:15Z", "message": "Create PioneerException, add NOSONAR comment to accessibility\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "82030160aef58be3b4414515ca1c8828f1430631", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/82030160aef58be3b4414515ca1c8828f1430631", "committedDate": "2020-12-13T14:58:42Z", "message": "Pull new test covering Sets#addAll(Iterable) from #362\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "44055e4f0d592b971eb147f1d5a7231c2ba35efb", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/44055e4f0d592b971eb147f1d5a7231c2ba35efb", "committedDate": "2020-12-13T14:59:46Z", "message": "Spotless\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26014d04e0a87d4ff0090c1fe0e15af56f6e8493", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/26014d04e0a87d4ff0090c1fe0e15af56f6e8493", "committedDate": "2020-12-13T16:03:50Z", "message": "Spotless\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba", "author": {"user": {"login": "Michael1993", "name": "Mih\u00e1ly Verh\u00e1s"}}, "url": "https://github.com/junit-pioneer/junit-pioneer/commit/a54ab7e4b331726f2de024e9eddc4515e36c79ba", "committedDate": "2020-12-13T16:13:43Z", "message": "Resource lock AnnotationUtils, I think\n\nSigned-off-by: Mihaly Verhas <misi.verhas@gmail.com>"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTkwNDE0", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#pullrequestreview-551190414", "createdAt": "2020-12-14T09:36:13Z", "commit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTozNjoxM1rOIFHoWg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTozNjoxM1rOIFHoWg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjIzODgxMA==", "bodyText": "This was supposed to be Exception instead of ReflectiveOperationException. Oops.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#discussion_r542238810", "createdAt": "2020-12-14T09:36:13Z", "author": {"login": "Michael1993"}, "path": "src/main/java/org/junitpioneer/jupiter/PioneerException.java", "diffHunk": "@@ -0,0 +1,19 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter;\n+\n+public class PioneerException extends RuntimeException {\n+\n+\tpublic PioneerException(String s, ReflectiveOperationException ex) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUxMTkzMjg0", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#pullrequestreview-551193284", "createdAt": "2020-12-14T09:39:37Z", "commit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTozOTozN1rOIFHyjA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNFQwOTozOTozN1rOIFHyjA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI0MTQyMA==", "bodyText": "I viscerally hate this. I don't even know why. I'm hoping someone smarter comes along and tells me a better solution.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#discussion_r542241420", "createdAt": "2020-12-14T09:39:37Z", "author": {"login": "Michael1993"}, "path": "src/test/java/org/junitpioneer/jupiter/params/PioneerAnnotationUtilsTests.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.params;\n+\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.parallel.ResourceLock;\n+import org.junitpioneer.jupiter.PioneerException;\n+\n+@DisplayName(\"Reflexive copy of PioneerAnnotationUtils\")\n+@ResourceLock(value = \"org.junitpioneer.jupiter.params.PioneerAnnotationUtils\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "originalPosition": 26}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTUyNjk0NDc3", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#pullrequestreview-552694477", "createdAt": "2020-12-15T17:25:02Z", "commit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "state": "APPROVED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzoyNTowM1rOIGW_IQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0xNVQxNzoyNTowM1rOIGW_IQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MzUzODk3Nw==", "bodyText": "Sorry I don't. Afair the @ResourceLock is the way how the JUnit Jupiter guys want's you to do.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/386#discussion_r543538977", "createdAt": "2020-12-15T17:25:03Z", "author": {"login": "Bukama"}, "path": "src/test/java/org/junitpioneer/jupiter/params/PioneerAnnotationUtilsTests.java", "diffHunk": "@@ -0,0 +1,55 @@\n+/*\n+ * Copyright 2015-2020 the original author or authors.\n+ *\n+ * All rights reserved. This program and the accompanying materials are\n+ * made available under the terms of the Eclipse Public License v2.0 which\n+ * accompanies this distribution and is available at\n+ *\n+ * http://www.eclipse.org/legal/epl-v20.html\n+ */\n+\n+package org.junitpioneer.jupiter.params;\n+\n+import static org.assertj.core.api.Assertions.assertThatThrownBy;\n+\n+import java.lang.reflect.Field;\n+import java.lang.reflect.Method;\n+\n+import org.junit.jupiter.api.AfterAll;\n+import org.junit.jupiter.api.BeforeAll;\n+import org.junit.jupiter.api.DisplayName;\n+import org.junit.jupiter.api.Test;\n+import org.junit.jupiter.api.parallel.ResourceLock;\n+import org.junitpioneer.jupiter.PioneerException;\n+\n+@DisplayName(\"Reflexive copy of PioneerAnnotationUtils\")\n+@ResourceLock(value = \"org.junitpioneer.jupiter.params.PioneerAnnotationUtils\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDU0MjI0MTQyMA=="}, "originalCommit": {"oid": "a54ab7e4b331726f2de024e9eddc4515e36c79ba"}, "originalPosition": 26}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3690, "cost": 1, "resetAt": "2021-11-01T15:33:45Z"}}}