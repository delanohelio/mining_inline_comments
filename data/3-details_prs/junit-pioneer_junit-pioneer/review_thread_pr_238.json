{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDA4NTE5MDI2", "number": 238, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzowNzozNlrOD1w_dw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToxODowN1rOD162LQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzAzNzk5OnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzowNzozNlrOGLW0Zg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzowNzozNlrOGLW0Zg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2MTM4Mg==", "bodyText": "Don't you mean README? \ud83d\ude1b", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414561382", "createdAt": "2020-04-24T13:07:36Z", "author": {"login": "Michael1993"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -40,8 +40,12 @@ Everybody uses a vocabulary and techniques that appear quite cryptic to those no\n We can't fix that in a short file like this, but we want to provide some pointers to get you started.\n If anything that follows in this document isn't clear, [open an issue](https://github.com/junit-pioneer/junit-pioneer/issues/new) and ask us to explain it better.\n \n-First off, like for many open source projects, contributing code changes to JUnit Pioneer should be done via pull requests from a fork.\n+* First off, like for many open source projects, contributing code changes to JUnit Pioneer should be done via pull requests from a fork.\n If you are not familiar with this concept, please have a look at the [GitHub help page](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/working-with-forks).\n+* `RAEDME.md` and `CONTRIBUTING.md` are written in Markdown.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzA1Mjc5OnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzoxMTowMlrOGLW9EQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxMzoxMTowMlrOGLW9EQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDU2MzYwMQ==", "bodyText": "...controbuted or contributed? \ud83e\udd14", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414563601", "createdAt": "2020-04-24T13:11:02Z", "author": {"login": "Michael1993"}, "path": "README.md", "diffHunk": "@@ -54,18 +70,54 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his haircut.\n+\t\tHe co-founded the project in November 2016 and has maintained it ever since (although often very negligently).</dd>\n+\t\n+\t<dt>Simon Schrottner aka <a href=\"https://github.com/aepfli\">aepfli</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-* JSR-305 (for static analysis)\n-* AssertJ (assertions for our tests)\n-* Mockito (mocking for our tests)\n-* Log4J (to configure logging during test runs)\n-* Jimfs (as an in-memory file system for our test)\n+\t<dt>Steve Moyer aka <a href=\"https://github.com/smoyer64\">smoyer64</a></dt>\n+\t<dd>Co-founded the project in November 2016.</dd>\n+</dl>\n+\n+### Contributors\n+\n+JUnit Pioneer, as small as it is, would be much smaller without kind souls contributing their time, energy, and skills.\n+Thank you for your efforts! \ud83d\ude4f\n+\n+The least we can do is to thank them and list their accomplishments here (in lexicographic order).\n+\n+#### 2020\n+\n+* [Allon Murienik](https://github.com/mureinik) contributed [the range sources](https://junit-pioneer.org/docs/range-sources/) (#44 / #123)\n+* [Daniel Kraus](https://github.com/beatngu13) contributed [the system property extension](https://junit-pioneer.org/docs/system-properties/) (#129 / #133)\n+* [Hancho 2009](https://github.com/Hancho2009) controbuted the environment variable extension (#167 / #174)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 84}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzU1OTkyOnYy", "diffSide": "RIGHT", "path": "CONTRIBUTING.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1NToxN1rOGLbn-Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1NToxN1rOGLbn-Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MDEyMQ==", "bodyText": "(possibly with an appended \"and more\" of there are more)\n\n\"if\" there are more?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414640121", "createdAt": "2020-04-24T14:55:17Z", "author": {"login": "Bukama"}, "path": "CONTRIBUTING.md", "diffHunk": "@@ -99,20 +103,39 @@ Yes, use it even if Jupiter's assertions are as good or better (c.f. `assertTrue\n \n ### Documentation\n \n+There are several aspects of this project's documentation.\n+Some project-specific requirements apply to all files:\n+\n+* one sentence per line, i.e. no matter how short or long a sentence is, it will occupy a single line, not shared with any other sentences\n+* to start a new paragraph, add a single blank line\n+\n+#### Feature Documentation\n+\n Each feature is documented on [the project website](https://junit-pioneer.org/docs/), which is pulled from the files in the `docs/` folder, where each feature has:\n \n * an entry in `docs-nav.yml` (lexicographically ordered)\n * it's own `.adoc` file\n \n Add these entries when implementing a new feature and update them when changing an existing one.\n \n-For information on how to use AsciiDoctor, check its [user manual](https://asciidoctor.org/docs/user-manual/) and [writer's guide](https://asciidoctor.org/docs/asciidoc-writers-guide/).\n-One project-specific requirement:\n+#### README.md and CONTRIBUTING.md\n \n-* one sentence per line, i.e. no matter how short or long a sentence is, it will occupy a single line, not shared with any other sentences\n-* to start a new paragraph, add a single blank line\n+Changes to project processes are usually reflected in these files (and are thus mostly done by maintainers).\n+One aspect that's relevant to contributors is the list of contributions at the end of [README.md](README.md) - if you fixed a bug or added a feature, please add yourself to that list in the following form:\n+\n+```md\n+* [$NAME]($GITHUB-URL) $CONTRIBUTIONS\n+```\n+\n+* `$NAME` can be your actual name or your GitHub account name\n+* `$GITHUB-URL` is the URL to your GitHub account\n+* `$CONTRIBUTIONS` is a list of one or two contributions (possibly with an appended \"and more\" of there are more)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 48}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzU3MzIzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1Nzo1MlrOGLbv_A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNDo1Nzo1MlrOGLbv_A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY0MjE3Mg==", "bodyText": "and his pioneer hat! :D", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414642172", "createdAt": "2020-04-24T14:57:52Z", "author": {"login": "Bukama"}, "path": "README.md", "diffHunk": "@@ -54,18 +70,54 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his haircut.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 58}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3NzY3NzkzOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNToxOToyNlrOGLcuYA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxNTo1OTozOFrOGLee3w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1ODE0NA==", "bodyText": "Nitpick: Is there a reason why some sections are separated with two linebreaks (like here) and others with one (like \"Contributing\")?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414658144", "createdAt": "2020-04-24T15:19:26Z", "author": {"login": "beatngu13"}, "path": "README.md", "diffHunk": "@@ -11,6 +11,7 @@ A melting pot for all kinds of extensions to\n \n Check out [junit-pioneer.org](http://junit-pioneer.org), particularly [the documentation section](http://junit-pioneer.org/docs).\n \n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY4Njk0Mw==", "bodyText": "There's always a reason, @beatngu13. \ud83d\ude01 To better navigate a file, I put two empty lines before each top-level section - in most documents, that's the level 2 headers.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414686943", "createdAt": "2020-04-24T15:59:38Z", "author": {"login": "nipafx"}, "path": "README.md", "diffHunk": "@@ -11,6 +11,7 @@ A melting pot for all kinds of extensions to\n \n Check out [junit-pioneer.org](http://junit-pioneer.org), particularly [the documentation section](http://junit-pioneer.org/docs).\n \n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDY1ODE0NA=="}, "originalCommit": {"oid": "e5c4d7c65ecd9e6ba97eb7e1162ed92058e75617"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjU3ODY1MjYxOnYy", "diffSide": "RIGHT", "path": "README.md", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToxODowN1rOGLlyVg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNC0yNFQxOToxODowN1rOGLlyVg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQxNDgwNjYxNA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            * [Hancho 2009](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)\n          \n          \n            \n            * [Mark R\u00f6sler](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/238#discussion_r414806614", "createdAt": "2020-04-24T19:18:07Z", "author": {"login": "Hancho2009"}, "path": "README.md", "diffHunk": "@@ -54,18 +70,55 @@ We welcome contributions of all shapes and forms! \ud83c\udf1e\n \n Before contributing, please read the [contribution guide](CONTRIBUTING.md).\n \n-## Project Structure\n+### Maintainers\n \n-### Dependencies\n+JUnit Pioneer is maintained by a small team of people who work on it in their free time - see [`CONTRIBUTING.md`](CONTRIBUTING.md) for details on how they do that.\n+In lexicographic order, these are:\n \n-To not add to user's [JAR hell](https://blog.codefx.org/java/jar-hell/), JUnit Pioneer is not taking on any runtime dependencies besides JUnit 5.\n-Pioneer always depends on the lowest JUnit 5 version that supports its feature set, but that should not keep you from using 5's latest and greatest.\n+<dl>\n+\t<dt>Matthias B\u00fcnger aka <a href=\"https://github.com/Bukama\">Bukama</a></dt>\n+\t<dd>(Always tries to become a better) Java developer, loves testing and reads <a href=\"https://twitter.com/bukamabish\">tweets</a>.\n+\t\tBecame a maintainer in April 2020, after he \"caused\" (authored) too many <a href=\"https://github.com/junit-pioneer/junit-pioneer/issues\">bishues</a>.</dd>\n \n-For our own infrastructure, we rely on the following compile and test dependencies:\n+\t<dt>Nicolai Parlog aka  <a href=\"https://github.com/nicolaiparlog\">nicolaiparlog</a></dt>\n+\t<dd>Java enthusiast with a passion for learning and sharing.\n+\t\tHe does that in blog posts, articles, newsletters, and books; in <a href=\"https://twitter.com/nipafx\">tweets</a>, repos, videos, and streams; at conferences and in-house trainings - more on all of that on <a href=\"https://codefx.org\">codefx.org</a>.\n+\t\tThat aside, he's best known for his head decor.\n+\t\tHe co-founded the project in November 2016 and has maintained it ever since (although often very negligently).</dd>\n+\t\n+\t<dt>Simon Schrottner aka <a href=\"https://github.com/aepfli\">aepfli</a></dt>\n+\t<dd>Maintainer since April 2020.</dd>\n \n-* JSR-305 (for static analysis)\n-* AssertJ (assertions for our tests)\n-* Mockito (mocking for our tests)\n-* Log4J (to configure logging during test runs)\n-* Jimfs (as an in-memory file system for our test)\n+\t<dt>Steve Moyer aka <a href=\"https://github.com/smoyer64\">smoyer64</a></dt>\n+\t<dd>Co-founded the project in November 2016.</dd>\n+</dl>\n+\n+### Contributors\n+\n+JUnit Pioneer, as small as it is, would be much smaller without kind souls contributing their time, energy, and skills.\n+Thank you for your efforts! \ud83d\ude4f\n+\n+The least we can do is to thank them and list their accomplishments here (in lexicographic order).\n+\n+#### 2020\n+\n+* [Allon Murienik](https://github.com/mureinik) contributed [the range sources](https://junit-pioneer.org/docs/range-sources/) (#44 / #123)\n+* [Daniel Kraus](https://github.com/beatngu13) contributed [the system property extension](https://junit-pioneer.org/docs/system-properties/) (#129 / #133)\n+* [Hancho 2009](https://github.com/Hancho2009) contributed the environment variable extension (#167 / #174)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7b60f9cf5e770d2dfd99fb6a13ec4986e884f5cc"}, "originalPosition": 85}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4248, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}