{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDY1MDIxNzM0", "number": 318, "reviewThreads": {"totalCount": 12, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMDoyOFrOEgsCYQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMjoxNFrOEgs3ng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExMzkzOnYy", "diffSide": "RIGHT", "path": "docs/range-sources.adoc", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMDoyOFrOHNofdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMDoxNFrOHNphBg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1Njk0OQ==", "bodyText": "Oh, non-ASCII chars in code snippets? \ud83d\ude2c", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484056949", "createdAt": "2020-09-06T11:20:28Z", "author": {"login": "beatngu13"}, "path": "docs/range-sources.adoc", "diffHunk": "@@ -28,9 +28,9 @@ It can be positive or negative:\n @ParameterizedTest\n @DoubleRangeSource(from = -0.1, to = -10, step = -0.1)\n void howColdIsIt(double d) {\n-\tSystem.out.println(d + \" degrees Celsius is cold\");\n-\tSystem.out.println(d + \" degrees Fahrenheit is REALY cold\");\n-\tSystem.out.println(d + \" degrees Kelvin is too cold to be true\");\n+\tSystem.out.println(d + \" \u00b0C is cold\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA2NTMyNw==", "bodyText": "(Extended) ASCII-Code 248 :p http://www.asciitable.com/\nI havn't come up with the short limit of 60 chars where about 40 are for intenden and System.out.println(..); \ud83e\udd37\u200d\u2642\ufe0f", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484065327", "createdAt": "2020-09-06T12:41:22Z", "author": {"login": "Bukama"}, "path": "docs/range-sources.adoc", "diffHunk": "@@ -28,9 +28,9 @@ It can be positive or negative:\n @ParameterizedTest\n @DoubleRangeSource(from = -0.1, to = -10, step = -0.1)\n void howColdIsIt(double d) {\n-\tSystem.out.println(d + \" degrees Celsius is cold\");\n-\tSystem.out.println(d + \" degrees Fahrenheit is REALY cold\");\n-\tSystem.out.println(d + \" degrees Kelvin is too cold to be true\");\n+\tSystem.out.println(d + \" \u00b0C is cold\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1Njk0OQ=="}, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 7}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3MzczNA==", "bodyText": "Every day's a school say. \ud83d\udc4d", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484073734", "createdAt": "2020-09-06T14:00:14Z", "author": {"login": "beatngu13"}, "path": "docs/range-sources.adoc", "diffHunk": "@@ -28,9 +28,9 @@ It can be positive or negative:\n @ParameterizedTest\n @DoubleRangeSource(from = -0.1, to = -10, step = -0.1)\n void howColdIsIt(double d) {\n-\tSystem.out.println(d + \" degrees Celsius is cold\");\n-\tSystem.out.println(d + \" degrees Fahrenheit is REALY cold\");\n-\tSystem.out.println(d + \" degrees Kelvin is too cold to be true\");\n+\tSystem.out.println(d + \" \u00b0C is cold\");", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1Njk0OQ=="}, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 7}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNDQ3OnYy", "diffSide": "RIGHT", "path": "docs/retrying-test.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMDo1MFrOHNofrw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMDo1MFrOHNofrw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzAwNw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057007", "createdAt": "2020-09-06T11:20:50Z", "author": {"login": "beatngu13"}, "path": "docs/retrying-test.adoc", "diffHunk": "@@ -43,7 +43,8 @@ The first two executions are marked as ignored/aborted, while the last as failed\n ```java\n @RetryingTest(3)\n void aborted() {\n-\t// test code that is aborted e.g. because of an Assumption.\n+\t// test code that is aborted,\n+    // e.g. because of an Assumption.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNDg1OnYy", "diffSide": "RIGHT", "path": "docs/standard-input-output.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMTozM1rOHNof3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMTozM1rOHNof3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzA1NA==", "bodyText": "Shouldn't this be aligned with line 173?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057054", "createdAt": "2020-09-06T11:21:33Z", "author": {"login": "beatngu13"}, "path": "docs/standard-input-output.adoc", "diffHunk": "@@ -158,17 +159,22 @@ This is the unit test for this class, using `StdIoExtension`:\n \n [source, java]\n ----\n-class ExampleConsoleReaderTest {\n+class ConsoleReaderTest {\n \n \t@Test\n \t@StdIo({ \"line1\", \"line2\", \"line3\" })\n \tvoid testReadLines(StdIn in) {\n-\t\tExampleConsoleReader consoleReader = new ExampleConsoleReader();\n+\t\tConsoleReader consoleReader = new ConsoleReader();\n \n \t\tconsoleReader.readLines();\n \n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\"); // This is failing\n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\", \"line3\"); // This is passing\n+        String[] lines = in.capturedLines();\n+\n+        // This failing\n+\t\t// assertEquals(lines, \"line1\", \"line2\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTIzOnYy", "diffSide": "RIGHT", "path": "docs/standard-input-output.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMTo0NlrOHNogCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMTo0NlrOHNogCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzA5OQ==", "bodyText": "Shouldn't this be aligned with line 176?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057099", "createdAt": "2020-09-06T11:21:46Z", "author": {"login": "beatngu13"}, "path": "docs/standard-input-output.adoc", "diffHunk": "@@ -158,17 +159,22 @@ This is the unit test for this class, using `StdIoExtension`:\n \n [source, java]\n ----\n-class ExampleConsoleReaderTest {\n+class ConsoleReaderTest {\n \n \t@Test\n \t@StdIo({ \"line1\", \"line2\", \"line3\" })\n \tvoid testReadLines(StdIn in) {\n-\t\tExampleConsoleReader consoleReader = new ExampleConsoleReader();\n+\t\tConsoleReader consoleReader = new ConsoleReader();\n \n \t\tconsoleReader.readLines();\n \n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\"); // This is failing\n-\t\t// assertEquals(in.capturedLines(), \"line1\", \"line2\", \"line3\"); // This is passing\n+        String[] lines = in.capturedLines();\n+\n+        // This failing\n+\t\t// assertEquals(lines, \"line1\", \"line2\");\n+\n+        // This is passing\n+\t\t// assertEquals(lines, \"line1\", \"line2\", \"line3\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTQyOnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoxMlrOHNogJg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoxMlrOHNogJg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzEyNg==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057126", "createdAt": "2020-09-06T11:22:12Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTQ5OnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoyMFrOHNogMQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoyMFrOHNogMQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzEzNw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057137", "createdAt": "2020-09-06T11:22:20Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -22,9 +23,11 @@ And setting a system property for a test execution:\n [source,java]\n ----\n @Test\n-@SetSystemProperty(key = \"some property\", value = \"new value\")\n+@SetSystemProperty(key = \"some property\",\n+                   value = \"new value\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 16}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTU3OnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoyOVrOHNogQA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjoyOVrOHNogQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE1Mg==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057152", "createdAt": "2020-09-06T11:22:29Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -22,9 +23,11 @@ And setting a system property for a test execution:\n [source,java]\n ----\n @Test\n-@SetSystemProperty(key = \"some property\", value = \"new value\")\n+@SetSystemProperty(key = \"some property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"some property\")).\n+        isEqualTo(\"new value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 20}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTcxOnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjozOFrOHNogUg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjozOFrOHNogUg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE3MA==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057170", "createdAt": "2020-09-06T11:22:38Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 30}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTg3OnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo0OFrOHNogYw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo0OFrOHNogYw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE4Nw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057187", "createdAt": "2020-09-06T11:22:48Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 36}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNTk4OnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo1M1rOHNogbw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMTowOVrOHNphkw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE5OQ==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057199", "createdAt": "2020-09-06T11:22:53Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 38}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzg3NQ==", "bodyText": "Still uses spaces \u2026 \ud83d\ude48", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484073875", "createdAt": "2020-09-06T14:01:09Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzE5OQ=="}, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzExNjAxOnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo1N1rOHNogcw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxMToyMjo1N1rOHNogcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA1NzIwMw==", "bodyText": "Still use spaces.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484057203", "createdAt": "2020-09-06T11:22:57Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -35,11 +38,15 @@ As mentioned before, both annotations are repeatable and they can also be combin\n @Test\n @ClearSystemProperty(key = \"1st property\")\n @ClearSystemProperty(key = \"2nd property\")\n-@SetSystemProperty(key = \"3rd property\", value = \"new value\")\n+@SetSystemProperty(key = \"3rd property\",\n+                   value = \"new value\")\n void test() {\n-\tassertThat(System.getProperty(\"1st property\")).isNull();\n-\tassertThat(System.getProperty(\"2nd property\")).isNull();\n-\tassertThat(System.getProperty(\"3rd property\")).isEqualTo(\"new value\");\n+\tassertThat(System.getProperty(\"1st property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"2nd property\")).\n+        isNull();\n+\tassertThat(System.getProperty(\"3rd property\")).\n+        isEqualTo(\"new value\");", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "58aec4fa66b51f041fc196fd04683e0d4f06cee1"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzAyNzI1MDIyOnYy", "diffSide": "RIGHT", "path": "docs/system-properties.adoc", "isResolved": true, "comments": {"totalCount": 4, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNDowMjoxNFrOHNpiCw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0wNlQxNjo0NDoxNFrOHNqjmw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzk5NQ==", "bodyText": "Other examples are only inteded once, this uses two tabs?", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484073995", "createdAt": "2020-09-06T14:02:14Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+\t\t\tisNull();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3NDQ5Mw==", "bodyText": "When introducing a linebreak, but the assertion is not completed the \"broke\" part should be intended one tab more than the regular lines. In this example the isNull should be intended more than the assertThat as it belongs to the further line.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484074493", "createdAt": "2020-09-06T14:07:01Z", "author": {"login": "Bukama"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+\t\t\tisNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzk5NQ=="}, "originalCommit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3OTQwMw==", "bodyText": "Hmmm, how is that different from e.g. this line:\nhttps://github.com/junit-pioneer/junit-pioneer/pull/318/files#diff-1d7cb2850ba029a8ff112abb5d62575aR30\nHere and elsewhere one tab is used, whereas the above example uses two tabs. So:\nassertThat(/* ... */).\n\t\tisNull();\n\n// vs.\n\nassertThat(/* ... */).\n\tisEqualTo(/* ... */);", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484079403", "createdAt": "2020-09-06T14:51:09Z", "author": {"login": "beatngu13"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+\t\t\tisNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzk5NQ=="}, "originalCommit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "originalPosition": 6}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA5MDc3OQ==", "bodyText": "Good spot \ud83d\udc4d\nShould be correct now. I also formated the code samples in retrying-failed-tests to match the same as in the other docs.", "url": "https://github.com/junit-pioneer/junit-pioneer/pull/318#discussion_r484090779", "createdAt": "2020-09-06T16:44:14Z", "author": {"login": "Bukama"}, "path": "docs/system-properties.adoc", "diffHunk": "@@ -13,7 +13,8 @@ For example, clearing a system property for a test execution can be done as foll\n @Test\n @ClearSystemProperty(key = \"some property\")\n void test() {\n-\tassertThat(System.getProperty(\"some property\")).isNull();\n+\tassertThat(System.getProperty(\"some property\")).\n+\t\t\tisNull();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ4NDA3Mzk5NQ=="}, "originalCommit": {"oid": "e1e44328ffb775c9297dd8a6cfab9abd4e017a64"}, "originalPosition": 6}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4304, "cost": 1, "resetAt": "2021-11-12T20:28:25Z"}}}