{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA0ODEzMjA5", "number": 2217, "reviewThreads": {"totalCount": 27, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODo1Njo1N1rOEupjwA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxODo1N1rOEvtEAQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3MzUwODQ4OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxODo1Njo1N1rOHjMcqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xNlQxOToxNDo0OVrOHjM8Gg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2NjE1Mw==", "bodyText": "I think your \"text is bold\" issue comes from having a new line and indentation here, which I assume makes rst think the bullet point is some sort of headline. I suggest adding an empty line in-between:\n- Click on ``Create Exam`` for your course. It will open the *Exam Management Screen*.\n\n    Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n\nThat renders for me normally again:", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r506666153", "createdAt": "2020-10-16T18:56:57Z", "author": {"login": "FrankeLukas"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,156 @@\n+===================\n+Instructors\u2019 Guide:\n+===================\n+\n+Phases of Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assessing Student Exams and Complaints`_. The exam assessment ends, when the results are published, see `Create and Configure Exam`_.\n+- **Exam Student Review**\n+    The student review period is set by the exam configuration, see `Create and Configure Exam`_. The students can view their results as soon as they are published, but during the review period then can submit complaints about perceived mistakes made during the exam assessment. A second assessor, other than the original one will have the opportunity to review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Create Exam`` for your course. It will open the *Exam Management Screen*.\n+    Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b68b94b4c5f4e2e57a3dac4a8322598ece117385"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY3NDIwMg==", "bodyText": "Yes thank you! Jannis Mainczyk also pointed me to this solution on Slack. I solved this issue", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r506674202", "createdAt": "2020-10-16T19:14:49Z", "author": {"login": "anditurdiu"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,156 @@\n+===================\n+Instructors\u2019 Guide:\n+===================\n+\n+Phases of Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assessing Student Exams and Complaints`_. The exam assessment ends, when the results are published, see `Create and Configure Exam`_.\n+- **Exam Student Review**\n+    The student review period is set by the exam configuration, see `Create and Configure Exam`_. The students can view their results as soon as they are published, but during the review period then can submit complaints about perceived mistakes made during the exam assessment. A second assessor, other than the original one will have the opportunity to review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Create Exam`` for your course. It will open the *Exam Management Screen*.\n+    Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNjY2NjE1Mw=="}, "originalCommit": {"oid": "b68b94b4c5f4e2e57a3dac4a8322598ece117385"}, "originalPosition": 22}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3Njk5MzU2OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNjo0OTo1M1rOHjsJpg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxNjo0OTo1M1rOHjsJpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzE4NTU3NA==", "bodyText": "Spell Version Control and Continuous Integration out if you haven't defined the abbreviation before.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507185574", "createdAt": "2020-10-18T16:49:53Z", "author": {"login": "kloessst"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "5d431062bdd5f9221897b0f09fbc71724ba81793"}, "originalPosition": 113}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQwOTQ4OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1MzozOVrOHkEQzw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NDowMVrOHkERpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDYyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - **Java IDE with JDK 14**\n          \n          \n            \n            - **Java IDE with JDK 15**", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507580623", "createdAt": "2020-10-19T08:53:39Z", "author": {"login": "krusche"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,282 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+    **Recommendation:** Use a LAN connection if possible.\n+- **Browser**\n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+- **Java IDE with JDK 14**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 14}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDgzOA==", "bodyText": "we now use JDK15", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507580838", "createdAt": "2020-10-19T08:54:01Z", "author": {"login": "krusche"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,282 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+    **Recommendation:** Use a LAN connection if possible.\n+- **Browser**\n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+- **Java IDE with JDK 14**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MDYyMw=="}, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQxMzQ0OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NDozMlrOHkETDw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NDozMlrOHkETDw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MTE5OQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                **Recommendation:** Eclipse IDE 2020\u201106.\n          \n          \n            \n                **Recommendation:** Eclipse IDE 2020-09.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507581199", "createdAt": "2020-10-19T08:54:32Z", "author": {"login": "krusche"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,282 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+    **Recommendation:** Use a LAN connection if possible.\n+- **Browser**\n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+- **Java IDE with JDK 14**\n+    **Recommendation:** Eclipse IDE 2020\u201106.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 15}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQxNDk1OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NDo1NFrOHkET8Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NDo1NFrOHkET8Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MTQyNQ==", "bodyText": "please mention that some prerequisites are only needed in case of programming exercises", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507581425", "createdAt": "2020-10-19T08:54:54Z", "author": {"login": "krusche"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,282 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQxNzE1OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NToxNFrOHkEVJA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwODo1NToxNFrOHkEVJA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4MTczMg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            Pro Tips\n          \n          \n            \n            Suggestions", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507581732", "createdAt": "2020-10-19T08:55:14Z", "author": {"login": "krusche"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,282 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+    **Recommendation:** Use a LAN connection if possible.\n+- **Browser**\n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+- **Java IDE with JDK 14**\n+    **Recommendation:** Eclipse IDE 2020\u201106.\n+- **Git Client**\n+    **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click ``Save`` or ``Save & Continue``.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. **Note:** You have to click on Submit! Otherwise your solution will not be pushed to the VC server and no build will be triggered.\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n+\n+Pro Tips", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 33}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ0MTgwOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMDo0NVrOHkEj7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMDo0NVrOHkEj7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NTUxOA==", "bodyText": "Please add a 5. step, which would be \"Exam Complaint Assessment\": Shortly mention that complaints of students are addressed in this step.\nPlease add a 6. step, which would be \"Publication of Results\": Shortly mention the exam scores page with statistics and the CSV export\nIt would also be nice, if could show a small image of this timeline with horizontal activities and arrows at the top:\nExam Creation and Configuration --> Exam Conduction --> Exam Assessment --> Student Review --> Exam Complaint Assessment --> Publication of Results", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507585518", "createdAt": "2020-10-19T09:00:45Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ0MjgxOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMDo1OFrOHkEkig==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMToxMFrOHkE9yg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NTY3NA==", "bodyText": "please use numbering 1., 2., ... here", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507585674", "createdAt": "2020-10-19T09:00:58Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4Njk1Mg==", "bodyText": "and use the same numbering scheme in the headlines below for easier navigation", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507586952", "createdAt": "2020-10-19T09:03:01Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NTY3NA=="}, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 12}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MjEzOA==", "bodyText": "this means, please put all sections below as sub sections into one of these new main 6 sections.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507592138", "createdAt": "2020-10-19T09:11:10Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NTY3NA=="}, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 12}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ0Mzk0OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMToxNlrOHkElOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowMToxNlrOHkElOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NTg1MQ==", "bodyText": "Please mention here that instructors can conduct test runs", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507585851", "createdAt": "2020-10-19T09:01:16Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 13}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ1NDk5OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNDowOFrOHkEsFw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNDowOFrOHkEsFw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4NzYwNw==", "bodyText": "the meaning of mandatory needs to be explained in more detail here", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507587607", "createdAt": "2020-10-19T09:04:08Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ2Mzk5OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNjoyOFrOHkEx4A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNjoyOFrOHkEx4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU4OTA4OA==", "bodyText": "Please start with an explanation what a student exam is: it consists of an individual set of exercises (based on the configured exercise groups and exercises). After all exercises are configured properly, Artemis generates an individual student exam with a random set of exercises for each registered student", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507589088", "createdAt": "2020-10-19T09:06:28Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 105}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ3MDM0OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNzo1MVrOHkE1lQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowNzo1MVrOHkE1lQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MDAzNw==", "bodyText": "This needs more explanation. Mention that this only affects programming exercises. Artemis locks and unlocks those automatically based on the individual exam start and end time. The buttons are typically not necessary except something went wrong.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507590037", "createdAt": "2020-10-19T09:07:51Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 117}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ3MzExOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowODozNlrOHkE3Yw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowODozNlrOHkE3Yw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MDQ5OQ==", "bodyText": "formatting wrong", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507590499", "createdAt": "2020-10-19T09:08:36Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 136}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ3NTI5OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowOToxMFrOHkE4vA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTowOToxMFrOHkE4vA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MDg0NA==", "bodyText": "This needs more explanation. Please add a screenshot with an example for modeling exercises as well", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507590844", "createdAt": "2020-10-19T09:09:10Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 138}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ3OTA5OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMDowNVrOHkE7AA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMDowNVrOHkE7AA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MTQyNA==", "bodyText": "This needs more explanation. Example submissions and assessments have not been mentioned before. Only if instructors add those, the reviewer must complete them", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507591424", "createdAt": "2020-10-19T09:10:05Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 151}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ4NjA2OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMTo0N1rOHkE_Kg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQyMzoxMjo1N1rOHkk3uw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MjQ5MA==", "bodyText": "please activate the table of contents with 2 toc depth here", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507592490", "createdAt": "2020-10-19T09:11:47Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODExNDg3NQ==", "bodyText": "@krusche The TOC is visible now on the left side, consistent with the rest of the documentation. Is this ok?\n\nSphinx does not create a TOC for one file, it constructs the TOC from a tree. If we want to have a TOC leading the instructor guide we would have to divide all sections into individual files.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508114875", "createdAt": "2020-10-19T23:12:57Z", "author": {"login": "anditurdiu"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MjQ5MA=="}, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ4ODUzOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMjoyN1rOHkFArQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMjo1NlrOHkFBvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5Mjg3Nw==", "bodyText": "Please describe this in more detail and shortly explain what the export includes", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507592877", "createdAt": "2020-10-19T09:12:27Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. \n+- If there is a submission which has not been assessed yet, you can click ``Start new assessment``. This will fetch a random student submission of this exercise which you can then assess.\n+- Programming exercises are graded automatically but if ``manual assessment`` is allowed, see `Add Exercises`_, you can review and enhance the automatic results. \n+\n+.. figure:: instructor/programming_assessment.png\n+   :alt: Programming Submission Assessment\n+   :align: center\n+\n+   Manually Assessing a Programming Submission\n+\n+- Quiz exercises are graded automatically via the student exam page, see `Manage Student Exams`_, and therefore do not appear in the *Tutor Exam Dashboard*.\n+- Students can complain about their results during the :ref:`student review <student_review>` period. You can evaluate these complaints also in the *Tutor Exam Dashboard*. \n+- The original assessor may not respond to the complaint about his assessment, this must be done by a second assessor. \n+\n+Exam Scores\n+^^^^^^^^^^^\n+- You can view the exam scores from the *Scores* page. This view aggregates the results of the students and combines them to provide an overview over the students\u2019 performance. \n+- You can view the spread between different achieved scores, the average results per exercise as well as the individual students' results.\n+- Additionally, you can choose to modify the dataset by selecting ``only include submitted exams`` or ``only include exercises with at least one non-empty submission``.\n+- The exam scores can also be exported via ``Export Results as CSV``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 170}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MzE1MQ==", "bodyText": "and that it can be used for uploading the results into the university system (e.g. TUM Online)", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507593151", "createdAt": "2020-10-19T09:12:56Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. \n+- If there is a submission which has not been assessed yet, you can click ``Start new assessment``. This will fetch a random student submission of this exercise which you can then assess.\n+- Programming exercises are graded automatically but if ``manual assessment`` is allowed, see `Add Exercises`_, you can review and enhance the automatic results. \n+\n+.. figure:: instructor/programming_assessment.png\n+   :alt: Programming Submission Assessment\n+   :align: center\n+\n+   Manually Assessing a Programming Submission\n+\n+- Quiz exercises are graded automatically via the student exam page, see `Manage Student Exams`_, and therefore do not appear in the *Tutor Exam Dashboard*.\n+- Students can complain about their results during the :ref:`student review <student_review>` period. You can evaluate these complaints also in the *Tutor Exam Dashboard*. \n+- The original assessor may not respond to the complaint about his assessment, this must be done by a second assessor. \n+\n+Exam Scores\n+^^^^^^^^^^^\n+- You can view the exam scores from the *Scores* page. This view aggregates the results of the students and combines them to provide an overview over the students\u2019 performance. \n+- You can view the spread between different achieved scores, the average results per exercise as well as the individual students' results.\n+- Additionally, you can choose to modify the dataset by selecting ``only include submitted exams`` or ``only include exercises with at least one non-empty submission``.\n+- The exam scores can also be exported via ``Export Results as CSV``.", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5Mjg3Nw=="}, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 170}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ5MjMxOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMzozMFrOHkFDBA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxMzozMFrOHkFDBA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5MzQ3Ng==", "bodyText": "shorty explain what those options mean and that they help in evaluating the statistics more realistically", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507593476", "createdAt": "2020-10-19T09:13:30Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. \n+- If there is a submission which has not been assessed yet, you can click ``Start new assessment``. This will fetch a random student submission of this exercise which you can then assess.\n+- Programming exercises are graded automatically but if ``manual assessment`` is allowed, see `Add Exercises`_, you can review and enhance the automatic results. \n+\n+.. figure:: instructor/programming_assessment.png\n+   :alt: Programming Submission Assessment\n+   :align: center\n+\n+   Manually Assessing a Programming Submission\n+\n+- Quiz exercises are graded automatically via the student exam page, see `Manage Student Exams`_, and therefore do not appear in the *Tutor Exam Dashboard*.\n+- Students can complain about their results during the :ref:`student review <student_review>` period. You can evaluate these complaints also in the *Tutor Exam Dashboard*. \n+- The original assessor may not respond to the complaint about his assessment, this must be done by a second assessor. \n+\n+Exam Scores\n+^^^^^^^^^^^\n+- You can view the exam scores from the *Scores* page. This view aggregates the results of the students and combines them to provide an overview over the students\u2019 performance. \n+- You can view the spread between different achieved scores, the average results per exercise as well as the individual students' results.\n+- Additionally, you can choose to modify the dataset by selecting ``only include submitted exams`` or ``only include exercises with at least one non-empty submission``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 169}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ5NzE2OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxNDo0NlrOHkFF6Q==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxNDo0NlrOHkFF6Q==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5NDIxNw==", "bodyText": "please add some images here as well.\n\nCreate test run\nParticipate in test run\nManage (in particular delete) test runs", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507594217", "createdAt": "2020-10-19T09:14:46Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. \n+- If there is a submission which has not been assessed yet, you can click ``Start new assessment``. This will fetch a random student submission of this exercise which you can then assess.\n+- Programming exercises are graded automatically but if ``manual assessment`` is allowed, see `Add Exercises`_, you can review and enhance the automatic results. \n+\n+.. figure:: instructor/programming_assessment.png\n+   :alt: Programming Submission Assessment\n+   :align: center\n+\n+   Manually Assessing a Programming Submission\n+\n+- Quiz exercises are graded automatically via the student exam page, see `Manage Student Exams`_, and therefore do not appear in the *Tutor Exam Dashboard*.\n+- Students can complain about their results during the :ref:`student review <student_review>` period. You can evaluate these complaints also in the *Tutor Exam Dashboard*. \n+- The original assessor may not respond to the complaint about his assessment, this must be done by a second assessor. \n+\n+Exam Scores\n+^^^^^^^^^^^\n+- You can view the exam scores from the *Scores* page. This view aggregates the results of the students and combines them to provide an overview over the students\u2019 performance. \n+- You can view the spread between different achieved scores, the average results per exercise as well as the individual students' results.\n+- Additionally, you can choose to modify the dataset by selecting ``only include submitted exams`` or ``only include exercises with at least one non-empty submission``.\n+- The exam scores can also be exported via ``Export Results as CSV``.\n+\n+.. figure:: instructor/exam_statistics.png\n+   :alt: Exam Scores page\n+   :align: center\n+\n+   Exam Scores Page\n+\n+Conducting Test Runs\n+^^^^^^^^^^^^^^^^^^^^\n+- Test runs are designed to offer the instructors confidence that the :ref:`exam conduction <exam_conduction>` will run smoothly. They allow you to experience the exam from the student\u2019s perspective. A ``test run`` is distinct from a ``student exam`` and is not taken into consideration during the calculation of the exam scores. \n+- You can manage your test runs from the *Test Run* page.\n+- To create a new test run you can press ``Create a Test Run``. This will open a modal where you can select an exercise for each exercise group. You can also set the ``working time``. A test run will have as many exercises, as there are exercise groups. It does not take the ``number of exercises`` set in the exam configuration under consideration.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 182}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTQ5OTI4OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxNToxNVrOHkFHOQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOToxNToxNVrOHkFHOQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzU5NDU1Mw==", "bodyText": "I would add a hint that test runs should be delete before the actual exam conduction takes place", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r507594553", "createdAt": "2020-10-19T09:15:15Z", "author": {"login": "krusche"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,192 @@\n+===================\n+Instructors\u2019 Guide\n+===================\n+\n+.. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+\n+    .. _exam_creation_and_configuration:\n+\n+- **Exam Creation and Configuration**\n+    During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate student exams. For more information see `Create and Configure Exam`_.\n+\n+    .. _exam_conduction:\n+\n+- **Exam Conduction**\n+    The exam conduction starts when the exam becomes visible to the students and ends when the latest working time is over. When the exam conduction begins, you cannot make any changes anymore to the exam configuration or individual student exams. \n+\n+    .. _exam_assessment:\n+\n+- **Exam Assessment**\n+    The assessment begins as soon as the latest student exam working time is over. During this period, your team can assess the submissions of the students and provide results. The testing suites for programming exercises are executed and you can evaluate the quiz exercises automatically, see `Assess Student Exams and Complaints`_. The exam assessment ends when the results are published, see `Create and Configure Exam`_.\n+\n+    .. _student_review:\n+\n+- **Student Review**\n+    The student review period can be set in the exam configuration, see `Create and Configure Exam`_. During the review period, students have the oppertunity to submit complaints about perceived mistakes made in the assessment. A second assessor, other than the original one can review the complaint and respond to it. The results are then updated automatically. \n+\n+\n+Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Head to ``Course Management``.\n+- Click on ``Exams`` for your course. It will open the *Exam Management Screen*.\n+\n+    - Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on ``Create new Exam``. \n+\n+Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on ``create an exam`` you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the student exams. For more information, see `Exercise Groups`_. \n+- If you activate ``randomize order of exercise groups``, the order of the exercises will be random for each student. \n+- Finally, you can fill out the ``exam start-`` and ``end texts``. These will be displayed during the :ref:`exam conduction <exam_conduction>` to the students, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+Exercise Groups\n+^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. This is done through the exercise groups. Exercise groups represent an individual exercise slot for each student exam. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly to generate the individual student exams. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking ``edit`` on the exercise group.\n+\n+.. figure:: instructor/exercise_variants.png\n+   :alt: Exercise Groups with different Exercise Variants\n+   :align: center\n+\n+   Exercise Groups with different Exercise Variants\n+\n+Add Exercises\n+^^^^^^^^^^^^^\n+- Exercises are grouped by exercise groups. For every student exam, one exercise per exercise group will be chosen, see `Exercise Groups`_. \n+\n+     - **Hint:** If you want all student to have the same exam, define only one exercise per exercise group.\n+\n+- To add exercises navigate to the *Exercise Groups* of the exam. On the header of each exercise group you will find the available exercise types. You can choose between ``creating a new exercise`` or ``importing an existing one`` from your courses. \n+\n+    - **Hint:** For programming exercises you can check the option to ``allow manual assessment``. If you do not set this flag, your assessors will not be able to manually assess the student's submissions during the :ref:`assessment process <exam_assessment>`.\n+\n+- For exercise types ``text``, ``programming``, and ``modeling``, you can also define example submissions and example assessments to guide your assessor team.\n+\n+.. figure:: instructor/add_exercises.png\n+   :alt: Add different Exercises\n+   :align: center\n+\n+   Add different Exercises\n+\n+Registering Students\n+^^^^^^^^^^^^^^^^^^^^\n+- To register students to the exam, navigate from the exam management to the *Students* page. Here you are presented with two options to register students. You can: \n+\n+    1. Add students manually my searching via the search bar\n+    2. Bulk import students using a ``.csv`` file. You can do this by pressing the ``Import students`` button.\n+\n+- You can also remove students from the exam. When you do so, you have the option to also delete their participations and submissions linked to the user\u2019s student exam. \n+    \n+    - **Hint:** Just registering the students to the exam will not allow them to participate in the exam. First, individual student exams must be generated. For more information see `Manage Student Exams`_.\n+\n+.. figure:: instructor/add_students.png\n+   :alt: Register Students\n+   :align: center\n+\n+   Register Students Page\n+\n+Manage Student Exams\n+^^^^^^^^^^^^^^^^^^^^\n+-  The student exams are managed via the *Student Exams* page. \n+- Here you can have an overview of all student exams. When you press ``View`` on a student exam, you can view the ``details of the student``, the allocated ``working time``, his/her ``participation status``, their ``summary`` as well as their ``scores``. Additionally, you will also be able to view which assessor is responsible for each exercise. \n+\n+    - **Hint:** You can change the individual ``working time`` of students from here. \n+\n+- To generate the student exams, you must click on ``Generate individual exams``. This will automatically create a student exam for every registered user. The number of exercises will be determined by the flag set in the exam configuration, see `Create and Configure Exam`_. The exercises itself will be randomly selected from the available exercise variants per exercise group, see `Exercise Groups`_.\n+- The ``Generate individual exams`` button will be locked once the exam becomes visible to the students. You cannot perform changes to the student exams once the :ref:`exam conduction <exam_conduction>` has started. \n+- If you have added more students recently, you can choose to ``Generate missing individual exams``. \n+- ``Prepare exercise start`` creates a participation for each exercise for every registered user, based on their assigned exercises. It also creates the individual repositories and build plans for programming exercises. This action can take a while if there are many registered students due to the communication between the VC and CI server. \n+\n+    - **Warning:** ``Prepare exercise start`` must be executed before the :ref:`exam conduction <exam_conduction>` begins. \n+\n+- On the *Student Exams* page, you can also maintain the repositories of the student exams. You can choose to ``lock the repositories`` and ``unlock`` them.\n+- Additionally, once the :ref:`exam conduction <exam_conduction>` is over, you can click on ``Evaluate quizzes``. This action will evaluate all student exam submissions for all quiz exercises and assign an automatic result. \n+\n+   - **Hint:** If you do not press this button, the students quiz exercise will not be graded.\n+\n+.. figure:: instructor/student_exams.png\n+   :alt: Student Exam Page\n+   :align: center\n+\n+   Student Exam Page\n+\n+Assess Student Exams and Complaints\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Once the :ref:`exam conduction <exam_conduction>` is over and the latest individual ``working time`` has passed, your team can begin the :ref:`assessment <exam_assessment>` process. \n+- This is done through the *Tutor Exam Dashboard*. \n+\n+    - **Hint:** If the :ref:`exam conduction <exam_conduction>` is not over, you will not be able to access this page.\n+\n+- The :ref:`assessment <exam_assessment>` process is anonymised. All student information will not be displayed to the assessors.\n+- The \u00b4*Tutor Exam dashboard* provides an overview over the current assessment progress per exercise. For each exercise, you can view how many submissions have already been assessed and how many are still left. The status of the student complaints is also displayed here. \n+\n+    - **Hint:** To check for plagiarism, you must navigate to the individual exercise. This can be done by navigating to:\n+\n+     *Exam Management* -> *Exercise Groups* -> *View* on the specific exercise.\n+\n+     At the bottom of the page you will find the option ``check for plagiarism``.\n+\n+.. figure:: instructor/tutor_dashboard.png\n+   :alt: Tutor Exam Dashboard\n+   :align: center\n+\n+   Tutor Exam Dashboard\n+\n+- To assess a submission for an exercise, you can click on ``Exercise Dashboard``.\n+- First you must go through the example submissions and assessments to review how a specific exercise should be evaluated. \n+- If there is a submission which has not been assessed yet, you can click ``Start new assessment``. This will fetch a random student submission of this exercise which you can then assess.\n+- Programming exercises are graded automatically but if ``manual assessment`` is allowed, see `Add Exercises`_, you can review and enhance the automatic results. \n+\n+.. figure:: instructor/programming_assessment.png\n+   :alt: Programming Submission Assessment\n+   :align: center\n+\n+   Manually Assessing a Programming Submission\n+\n+- Quiz exercises are graded automatically via the student exam page, see `Manage Student Exams`_, and therefore do not appear in the *Tutor Exam Dashboard*.\n+- Students can complain about their results during the :ref:`student review <student_review>` period. You can evaluate these complaints also in the *Tutor Exam Dashboard*. \n+- The original assessor may not respond to the complaint about his assessment, this must be done by a second assessor. \n+\n+Exam Scores\n+^^^^^^^^^^^\n+- You can view the exam scores from the *Scores* page. This view aggregates the results of the students and combines them to provide an overview over the students\u2019 performance. \n+- You can view the spread between different achieved scores, the average results per exercise as well as the individual students' results.\n+- Additionally, you can choose to modify the dataset by selecting ``only include submitted exams`` or ``only include exercises with at least one non-empty submission``.\n+- The exam scores can also be exported via ``Export Results as CSV``.\n+\n+.. figure:: instructor/exam_statistics.png\n+   :alt: Exam Scores page\n+   :align: center\n+\n+   Exam Scores Page\n+\n+Conducting Test Runs\n+^^^^^^^^^^^^^^^^^^^^\n+- Test runs are designed to offer the instructors confidence that the :ref:`exam conduction <exam_conduction>` will run smoothly. They allow you to experience the exam from the student\u2019s perspective. A ``test run`` is distinct from a ``student exam`` and is not taken into consideration during the calculation of the exam scores. \n+- You can manage your test runs from the *Test Run* page.\n+- To create a new test run you can press ``Create a Test Run``. This will open a modal where you can select an exercise for each exercise group. You can also set the ``working time``. A test run will have as many exercises, as there are exercise groups. It does not take the ``number of exercises`` set in the exam configuration under consideration.\n+\n+    - **Hint:** Exercise groups with no exercises are ignored.\n+\n+- When you start the test run, you conduct the exam similar to how a student would. You can create submissions for the different exercises and end the test run. \n+- An instructor can also assess his test run submissions. To do this, you must have completed at least one test run. To navigate to the assessment screen of the test runs click ``Assess your Test Runs``. \n+\n+    - **Hint:** Only the creator of the test run is able to assess his submissions.\n+\n+- You can view the results of the assessment of the test run by clicking on ``Summary``. This page simulates the *Student Exam Summary* where the students can view their submissions and the results once they are published. \n+- Here instructors can also use the ``complaint`` feature and respond to it to conclude the full  :ref:`exam timeline <timeline>`.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1e1a10137117056dbcb8ee4ab4c8990de3d3f12c"}, "originalPosition": 192}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk1MTMxOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzoyNFrOHkmFSQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoxNzoyNFrOHkmFSQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNDcyOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n               2. the code Editor\n          \n          \n            \n               2. The code editor", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508134729", "createdAt": "2020-10-20T00:17:24Z", "author": {"login": "kloessst"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,311 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click ``Save`` or ``Save & Continue``.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n+\n+Suggestions\n+^^^^^^^^^^^\n+1. Do **NOT** reload the browser\n+\n+    - If you reload the browser, the `Welcome Screen`_ screen opens and you must enter your name and confirm the checkbox again.\n+    - You should only reload if an error occurs that cannot be recovered otherwise!\n+2. Participate in **ONE** browser window!\n+\n+    - Working in multiple browser windows at the same time is **not** allowed!\n+    - It will lead to synchronization issues and is seen as suspicious behaviour that can be flagged as cheating.\n+\n+.. figure:: student/reload.png\n+   :alt: Reload\n+   :align: center\n+\n+   Do not reload, you will receive a warning\n+\n+Participating in the Artemis Online Exam\n+----------------------------------------\n+\n+Accessing the Exam\n+^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- The current exam should be displayed at the top of the *Course Overview* screen.\n+- You can also access the exam by navigating to the course and then clicking on ``Exams``.\n+\n+    .. note::\n+        The exam will become visible shortly before the working time starts.\n+\n+\n+.. figure:: student/access_exam.png\n+   :alt: Access Exam\n+   :align: center\n+\n+   Access Exam\n+\n+Welcome Screen\n+^^^^^^^^^^^^^^\n+- The welcome screen gives you an overview of all the important information you need about the exam. \n+- Carefully read through the instructions.\n+- Once you have read them, ``confirm`` that you will follow the rules and sign with your full name.\n+\n+    .. note::\n+        Your full name represents your signature. You can find your full name as registered on Artemis below the input field.\n+\n+- After you confirm, if the exam working time has started, the `Exam Conduction`_ screen will automatically appear. \n+- Otherwise, you must wait until the exam begins. A popup will appear which will notify you how much time is left before the planned start.\n+\n+.. figure:: student/welcome_screen.png\n+   :alt: Welcome Screen\n+   :align: center\n+\n+   Welcome Screen, waiting for exam start\n+\n+Exam Conduction\n+^^^^^^^^^^^^^^^\n+- Once the exam working time starts and you have confirmed your participation, the *Conduction* screen will appear. \n+- On the header, you will find the *Exam Navigation Bar*. You can use this bar to navigate between different exercises. For each exercise an icon will display your current status.\n+\n+    - When there are ``unsaved`` **or** ``unsubmitted``, the exercise representation on the navigation bar will become ``yellow``. \n+    - When your changes have been ``saved`` **and** ``submitted``, it's background with turn ``blue`` and a ``checkmark`` icon will be shown. \n+    - A blue background without a checkmark indicates that you have not started this exercise.\n+\n+- You can also navigate through the exercises when you are done with one by clicking ``Save & Continue``. This action will save and submit your changes and move to the next exercise. \n+\n+    .. warning::\n+        For programming exercises, you must manually press ``submit`` otherwise your solution will **not** be counted!\n+\n+- On the header, you will also find the ``Hand in early`` button. If you press this, you will be sent to the exam `End Screen`_. \n+- The *time left* until the end of the exam is also shown next to the action buttons, or below, depending on your screen size.\n+\n+    .. note::\n+        When the time is about to run out, the background of the timer will turn yellow to warn you.\n+\n+.. figure:: student/exam_navigation.png\n+   :alt: Exam Navigation\n+   :align: center\n+\n+   Exam Navigation Bar\n+\n+Participating in Quiz Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Various question types can be included in quiz exam exercises. These are: \n+\n+    1. Multiple choice questions\n+    2. Short Answer questions\n+    3. Drag and Drop questions\n+\n+- All questions are listed in the main screen below one another.\n+- To navigate between them you can either scroll or use the ``question overview`` on the left. When you click on one of the question representations, your view will automatically scroll to the respective question.\n+- To submit your solution, simply press ``Save & Continue``.\n+\n+    .. note::\n+        Your submission will automatically be saved every 30 seconds. \n+\n+.. figure:: student/quiz_exercises.png\n+   :alt: Participating in Quiz Exercises\n+   :align: center\n+\n+   Participating in Quiz Exercises\n+\n+Participating in Text Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The text exercise view is divided into two sections, the text editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the text editor.\n+\n+- If you want to focus only on the text editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can type out your solution. The editor will automatically track your number of words and number of characters.\n+\n+.. figure:: student/text_exercises.png\n+   :alt: Participating in Text Exercises\n+   :align: center\n+\n+   Participating in Text Exercises\n+\n+Participating in Modeling Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The modeling exercise view is divided into two sections, the modeling editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the modeling editor.\n+\n+- If you want to focus only on the modeling editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can model your solution. Depending on the diagram type, you will find the available elements on the right side of the editor. Simply drag and drop them into the editing field.\n+- When you click on a dropped element, you can configure it by setting it's ``name``, it's ``attributes``, ``methods`` etc. \n+- To connect elements you can simply drag an element's edges to another element. The editor will then automatically connect those two. \n+- If you are unclear about how to use the modeling editor, you can click on ``Help``. It will provide further information about how to use the modeling editor. \n+\n+    .. note::\n+        If you need more space, you can work in fullscreen by clicking on ``Fullscreen``. This mode will use your whole screen for the modeling exercise thereby giving you more space to model your solution. To exit the fullscreen mode simply click ``Exit Fullscreen``.\n+\n+.. figure:: student/modeling_exercises.png\n+   :alt: Participating in Modeling Exercises\n+   :align: center\n+\n+   Participating in Modeling Exercises\n+\n+Participating in Programming Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Depending on your exam, programming exercises can come in three forms: \n+\n+    1. Online Code Editor + support for local IDE\n+    2. Online Code Editor\n+    3. Support for local IDE\n+\n+- If your exercise allows the use of the code editor your screen will be divided into three sections, from left to right: \n+\n+   1. The file browser\n+   2. the code Editor", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70af458bae13f5f57ce3f449a79817563319255c"}, "originalPosition": 204}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk1ODM4OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyMTowN1rOHkmJVQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyMTowN1rOHkmJVQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNTc2NQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - The file browser displays the structure of the assignment. You can access any file within the assignment. The files content will then be displayed on the code editor where you can edit the file's content. \n          \n          \n            \n            - The file browser displays the file structure of the assignment. You can access any file within the assignment. The file content will then be displayed in the code editor where you can edit it.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508135765", "createdAt": "2020-10-20T00:21:07Z", "author": {"login": "kloessst"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,311 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click ``Save`` or ``Save & Continue``.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n+\n+Suggestions\n+^^^^^^^^^^^\n+1. Do **NOT** reload the browser\n+\n+    - If you reload the browser, the `Welcome Screen`_ screen opens and you must enter your name and confirm the checkbox again.\n+    - You should only reload if an error occurs that cannot be recovered otherwise!\n+2. Participate in **ONE** browser window!\n+\n+    - Working in multiple browser windows at the same time is **not** allowed!\n+    - It will lead to synchronization issues and is seen as suspicious behaviour that can be flagged as cheating.\n+\n+.. figure:: student/reload.png\n+   :alt: Reload\n+   :align: center\n+\n+   Do not reload, you will receive a warning\n+\n+Participating in the Artemis Online Exam\n+----------------------------------------\n+\n+Accessing the Exam\n+^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- The current exam should be displayed at the top of the *Course Overview* screen.\n+- You can also access the exam by navigating to the course and then clicking on ``Exams``.\n+\n+    .. note::\n+        The exam will become visible shortly before the working time starts.\n+\n+\n+.. figure:: student/access_exam.png\n+   :alt: Access Exam\n+   :align: center\n+\n+   Access Exam\n+\n+Welcome Screen\n+^^^^^^^^^^^^^^\n+- The welcome screen gives you an overview of all the important information you need about the exam. \n+- Carefully read through the instructions.\n+- Once you have read them, ``confirm`` that you will follow the rules and sign with your full name.\n+\n+    .. note::\n+        Your full name represents your signature. You can find your full name as registered on Artemis below the input field.\n+\n+- After you confirm, if the exam working time has started, the `Exam Conduction`_ screen will automatically appear. \n+- Otherwise, you must wait until the exam begins. A popup will appear which will notify you how much time is left before the planned start.\n+\n+.. figure:: student/welcome_screen.png\n+   :alt: Welcome Screen\n+   :align: center\n+\n+   Welcome Screen, waiting for exam start\n+\n+Exam Conduction\n+^^^^^^^^^^^^^^^\n+- Once the exam working time starts and you have confirmed your participation, the *Conduction* screen will appear. \n+- On the header, you will find the *Exam Navigation Bar*. You can use this bar to navigate between different exercises. For each exercise an icon will display your current status.\n+\n+    - When there are ``unsaved`` **or** ``unsubmitted``, the exercise representation on the navigation bar will become ``yellow``. \n+    - When your changes have been ``saved`` **and** ``submitted``, it's background with turn ``blue`` and a ``checkmark`` icon will be shown. \n+    - A blue background without a checkmark indicates that you have not started this exercise.\n+\n+- You can also navigate through the exercises when you are done with one by clicking ``Save & Continue``. This action will save and submit your changes and move to the next exercise. \n+\n+    .. warning::\n+        For programming exercises, you must manually press ``submit`` otherwise your solution will **not** be counted!\n+\n+- On the header, you will also find the ``Hand in early`` button. If you press this, you will be sent to the exam `End Screen`_. \n+- The *time left* until the end of the exam is also shown next to the action buttons, or below, depending on your screen size.\n+\n+    .. note::\n+        When the time is about to run out, the background of the timer will turn yellow to warn you.\n+\n+.. figure:: student/exam_navigation.png\n+   :alt: Exam Navigation\n+   :align: center\n+\n+   Exam Navigation Bar\n+\n+Participating in Quiz Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Various question types can be included in quiz exam exercises. These are: \n+\n+    1. Multiple choice questions\n+    2. Short Answer questions\n+    3. Drag and Drop questions\n+\n+- All questions are listed in the main screen below one another.\n+- To navigate between them you can either scroll or use the ``question overview`` on the left. When you click on one of the question representations, your view will automatically scroll to the respective question.\n+- To submit your solution, simply press ``Save & Continue``.\n+\n+    .. note::\n+        Your submission will automatically be saved every 30 seconds. \n+\n+.. figure:: student/quiz_exercises.png\n+   :alt: Participating in Quiz Exercises\n+   :align: center\n+\n+   Participating in Quiz Exercises\n+\n+Participating in Text Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The text exercise view is divided into two sections, the text editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the text editor.\n+\n+- If you want to focus only on the text editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can type out your solution. The editor will automatically track your number of words and number of characters.\n+\n+.. figure:: student/text_exercises.png\n+   :alt: Participating in Text Exercises\n+   :align: center\n+\n+   Participating in Text Exercises\n+\n+Participating in Modeling Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The modeling exercise view is divided into two sections, the modeling editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the modeling editor.\n+\n+- If you want to focus only on the modeling editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can model your solution. Depending on the diagram type, you will find the available elements on the right side of the editor. Simply drag and drop them into the editing field.\n+- When you click on a dropped element, you can configure it by setting it's ``name``, it's ``attributes``, ``methods`` etc. \n+- To connect elements you can simply drag an element's edges to another element. The editor will then automatically connect those two. \n+- If you are unclear about how to use the modeling editor, you can click on ``Help``. It will provide further information about how to use the modeling editor. \n+\n+    .. note::\n+        If you need more space, you can work in fullscreen by clicking on ``Fullscreen``. This mode will use your whole screen for the modeling exercise thereby giving you more space to model your solution. To exit the fullscreen mode simply click ``Exit Fullscreen``.\n+\n+.. figure:: student/modeling_exercises.png\n+   :alt: Participating in Modeling Exercises\n+   :align: center\n+\n+   Participating in Modeling Exercises\n+\n+Participating in Programming Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Depending on your exam, programming exercises can come in three forms: \n+\n+    1. Online Code Editor + support for local IDE\n+    2. Online Code Editor\n+    3. Support for local IDE\n+\n+- If your exercise allows the use of the code editor your screen will be divided into three sections, from left to right: \n+\n+   1. The file browser\n+   2. the code Editor\n+   3. The instructions\n+\n+- The file browser displays the structure of the assignment. You can access any file within the assignment. The files content will then be displayed on the code editor where you can edit the file's content. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70af458bae13f5f57ce3f449a79817563319255c"}, "originalPosition": 207}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4Mjk2Nzg4OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMDoyNjoxNlrOHkmO2A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwNTo0Njo1MlrOHkritg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNzE3Ng==", "bodyText": "Isn't this only the case if all test cases are hidden?", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508137176", "createdAt": "2020-10-20T00:26:16Z", "author": {"login": "kloessst"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,311 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click ``Save`` or ``Save & Continue``.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n+\n+Suggestions\n+^^^^^^^^^^^\n+1. Do **NOT** reload the browser\n+\n+    - If you reload the browser, the `Welcome Screen`_ screen opens and you must enter your name and confirm the checkbox again.\n+    - You should only reload if an error occurs that cannot be recovered otherwise!\n+2. Participate in **ONE** browser window!\n+\n+    - Working in multiple browser windows at the same time is **not** allowed!\n+    - It will lead to synchronization issues and is seen as suspicious behaviour that can be flagged as cheating.\n+\n+.. figure:: student/reload.png\n+   :alt: Reload\n+   :align: center\n+\n+   Do not reload, you will receive a warning\n+\n+Participating in the Artemis Online Exam\n+----------------------------------------\n+\n+Accessing the Exam\n+^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- The current exam should be displayed at the top of the *Course Overview* screen.\n+- You can also access the exam by navigating to the course and then clicking on ``Exams``.\n+\n+    .. note::\n+        The exam will become visible shortly before the working time starts.\n+\n+\n+.. figure:: student/access_exam.png\n+   :alt: Access Exam\n+   :align: center\n+\n+   Access Exam\n+\n+Welcome Screen\n+^^^^^^^^^^^^^^\n+- The welcome screen gives you an overview of all the important information you need about the exam. \n+- Carefully read through the instructions.\n+- Once you have read them, ``confirm`` that you will follow the rules and sign with your full name.\n+\n+    .. note::\n+        Your full name represents your signature. You can find your full name as registered on Artemis below the input field.\n+\n+- After you confirm, if the exam working time has started, the `Exam Conduction`_ screen will automatically appear. \n+- Otherwise, you must wait until the exam begins. A popup will appear which will notify you how much time is left before the planned start.\n+\n+.. figure:: student/welcome_screen.png\n+   :alt: Welcome Screen\n+   :align: center\n+\n+   Welcome Screen, waiting for exam start\n+\n+Exam Conduction\n+^^^^^^^^^^^^^^^\n+- Once the exam working time starts and you have confirmed your participation, the *Conduction* screen will appear. \n+- On the header, you will find the *Exam Navigation Bar*. You can use this bar to navigate between different exercises. For each exercise an icon will display your current status.\n+\n+    - When there are ``unsaved`` **or** ``unsubmitted``, the exercise representation on the navigation bar will become ``yellow``. \n+    - When your changes have been ``saved`` **and** ``submitted``, it's background with turn ``blue`` and a ``checkmark`` icon will be shown. \n+    - A blue background without a checkmark indicates that you have not started this exercise.\n+\n+- You can also navigate through the exercises when you are done with one by clicking ``Save & Continue``. This action will save and submit your changes and move to the next exercise. \n+\n+    .. warning::\n+        For programming exercises, you must manually press ``submit`` otherwise your solution will **not** be counted!\n+\n+- On the header, you will also find the ``Hand in early`` button. If you press this, you will be sent to the exam `End Screen`_. \n+- The *time left* until the end of the exam is also shown next to the action buttons, or below, depending on your screen size.\n+\n+    .. note::\n+        When the time is about to run out, the background of the timer will turn yellow to warn you.\n+\n+.. figure:: student/exam_navigation.png\n+   :alt: Exam Navigation\n+   :align: center\n+\n+   Exam Navigation Bar\n+\n+Participating in Quiz Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Various question types can be included in quiz exam exercises. These are: \n+\n+    1. Multiple choice questions\n+    2. Short Answer questions\n+    3. Drag and Drop questions\n+\n+- All questions are listed in the main screen below one another.\n+- To navigate between them you can either scroll or use the ``question overview`` on the left. When you click on one of the question representations, your view will automatically scroll to the respective question.\n+- To submit your solution, simply press ``Save & Continue``.\n+\n+    .. note::\n+        Your submission will automatically be saved every 30 seconds. \n+\n+.. figure:: student/quiz_exercises.png\n+   :alt: Participating in Quiz Exercises\n+   :align: center\n+\n+   Participating in Quiz Exercises\n+\n+Participating in Text Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The text exercise view is divided into two sections, the text editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the text editor.\n+\n+- If you want to focus only on the text editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can type out your solution. The editor will automatically track your number of words and number of characters.\n+\n+.. figure:: student/text_exercises.png\n+   :alt: Participating in Text Exercises\n+   :align: center\n+\n+   Participating in Text Exercises\n+\n+Participating in Modeling Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The modeling exercise view is divided into two sections, the modeling editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the modeling editor.\n+\n+- If you want to focus only on the modeling editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can model your solution. Depending on the diagram type, you will find the available elements on the right side of the editor. Simply drag and drop them into the editing field.\n+- When you click on a dropped element, you can configure it by setting it's ``name``, it's ``attributes``, ``methods`` etc. \n+- To connect elements you can simply drag an element's edges to another element. The editor will then automatically connect those two. \n+- If you are unclear about how to use the modeling editor, you can click on ``Help``. It will provide further information about how to use the modeling editor. \n+\n+    .. note::\n+        If you need more space, you can work in fullscreen by clicking on ``Fullscreen``. This mode will use your whole screen for the modeling exercise thereby giving you more space to model your solution. To exit the fullscreen mode simply click ``Exit Fullscreen``.\n+\n+.. figure:: student/modeling_exercises.png\n+   :alt: Participating in Modeling Exercises\n+   :align: center\n+\n+   Participating in Modeling Exercises\n+\n+Participating in Programming Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Depending on your exam, programming exercises can come in three forms: \n+\n+    1. Online Code Editor + support for local IDE\n+    2. Online Code Editor\n+    3. Support for local IDE\n+\n+- If your exercise allows the use of the code editor your screen will be divided into three sections, from left to right: \n+\n+   1. The file browser\n+   2. the code Editor\n+   3. The instructions\n+\n+- The file browser displays the structure of the assignment. You can access any file within the assignment. The files content will then be displayed on the code editor where you can edit the file's content. \n+\n+    - You can add new files and directories using the ``Add File``  and ``Add Folder`` buttons.\n+    - You also have the ability to rename and delete files and folders, therefore **caution** is advised. \n+\n+        .. note::\n+            If you accidentally delete or remove a file, you can use ``Refresh files``, to load the last saved version from the server.\n+\n+- The code editor allows you to edit the content of specific files. It shows the line numbers and will also annotate the appropriate line, if a compilation error occurs. \n+- The instructions are docked to the right.\n+- If you want to focus only on the code editor, you can collapse the instructions by pressing on the ``right arrow``. This can be reverted by pressing the arrow again. Similarly, if you want to collapse the file browser, you can press the ``left arrow`` above the file browser. \n+\n+    .. note::\n+        You can also choose to resize any of the three sections by dragging the ``outline box``.\n+\n+- When you press ``Save``, your files are saved on the Artemis server. However, you must press ``Submit`` for your solution to be counted!\n+- When you press ``Submit``, your changes are pushed to the VC server and a build is started on the CI server. This is indicated by the results changing from ``No results found`` to ``Building and testing``.\n+\n+    .. warning::\n+        There is no auto-submit!\n+\n+.. figure:: student/programming_exercises.png\n+   :alt: Participating in Programming Exercises\n+   :align: center\n+\n+   Participating in Programming Exercises with the online code editor and local IDE enabled\n+\n+- If your exercise allows the use of the local IDE you will have access to the button ``Clone Repository``.\n+- When you click it you can choose to clone the exercise via ``HTTPS`` or ``SSH``, if you have configured your private key.\n+\n+    .. note::\n+        You must link a public key to your account in advance if you want to use ``SSH``. \n+\n+- To work offline follow these steps: \n+\n+    1. Clone the Exercise\n+    2. Import the project in your IDE\n+    3. Work on the code\n+    4. Commit and push the code. A push is equivalent to pressing the ``Submit`` button.\n+\n+.. figure:: student/clone_repository.png\n+   :alt: Clone Repository\n+   :align: center\n+\n+   Clone the Repository\n+\n+    .. warning::\n+        You are responsible for pushing/submitting your code. Your instructors **cannot** help you if you have saved, but did not submit.\n+\n+- Real-time feedback in programming exercises during the online exam is limited.\n+- You will only see if your code compiles or not\n+\n+    1. **0%, Build failed** means that your code does **not** compile!\n+    2. **0%, 0 of 0 passed** means that your code compiles but provides no further information about your final score. ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "70af458bae13f5f57ce3f449a79817563319255c"}, "originalPosition": 260}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODIyNDE4Mg==", "bodyText": "True, I rephrased this section:\n- Your instructors can decide to limit the real-time feedback in programming exercises during the online exam.\n- In that case, you will only see if your code compiles or not:\n\n    1. **0%, Build failed** means that your code does **not** compile!\n    2. **0%, 0 of 0 passed** means that your code compiles but provides no further information about your final score.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508224182", "createdAt": "2020-10-20T05:46:52Z", "author": {"login": "anditurdiu"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,311 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click ``Save`` or ``Save & Continue``.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n+\n+Suggestions\n+^^^^^^^^^^^\n+1. Do **NOT** reload the browser\n+\n+    - If you reload the browser, the `Welcome Screen`_ screen opens and you must enter your name and confirm the checkbox again.\n+    - You should only reload if an error occurs that cannot be recovered otherwise!\n+2. Participate in **ONE** browser window!\n+\n+    - Working in multiple browser windows at the same time is **not** allowed!\n+    - It will lead to synchronization issues and is seen as suspicious behaviour that can be flagged as cheating.\n+\n+.. figure:: student/reload.png\n+   :alt: Reload\n+   :align: center\n+\n+   Do not reload, you will receive a warning\n+\n+Participating in the Artemis Online Exam\n+----------------------------------------\n+\n+Accessing the Exam\n+^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- The current exam should be displayed at the top of the *Course Overview* screen.\n+- You can also access the exam by navigating to the course and then clicking on ``Exams``.\n+\n+    .. note::\n+        The exam will become visible shortly before the working time starts.\n+\n+\n+.. figure:: student/access_exam.png\n+   :alt: Access Exam\n+   :align: center\n+\n+   Access Exam\n+\n+Welcome Screen\n+^^^^^^^^^^^^^^\n+- The welcome screen gives you an overview of all the important information you need about the exam. \n+- Carefully read through the instructions.\n+- Once you have read them, ``confirm`` that you will follow the rules and sign with your full name.\n+\n+    .. note::\n+        Your full name represents your signature. You can find your full name as registered on Artemis below the input field.\n+\n+- After you confirm, if the exam working time has started, the `Exam Conduction`_ screen will automatically appear. \n+- Otherwise, you must wait until the exam begins. A popup will appear which will notify you how much time is left before the planned start.\n+\n+.. figure:: student/welcome_screen.png\n+   :alt: Welcome Screen\n+   :align: center\n+\n+   Welcome Screen, waiting for exam start\n+\n+Exam Conduction\n+^^^^^^^^^^^^^^^\n+- Once the exam working time starts and you have confirmed your participation, the *Conduction* screen will appear. \n+- On the header, you will find the *Exam Navigation Bar*. You can use this bar to navigate between different exercises. For each exercise an icon will display your current status.\n+\n+    - When there are ``unsaved`` **or** ``unsubmitted``, the exercise representation on the navigation bar will become ``yellow``. \n+    - When your changes have been ``saved`` **and** ``submitted``, it's background with turn ``blue`` and a ``checkmark`` icon will be shown. \n+    - A blue background without a checkmark indicates that you have not started this exercise.\n+\n+- You can also navigate through the exercises when you are done with one by clicking ``Save & Continue``. This action will save and submit your changes and move to the next exercise. \n+\n+    .. warning::\n+        For programming exercises, you must manually press ``submit`` otherwise your solution will **not** be counted!\n+\n+- On the header, you will also find the ``Hand in early`` button. If you press this, you will be sent to the exam `End Screen`_. \n+- The *time left* until the end of the exam is also shown next to the action buttons, or below, depending on your screen size.\n+\n+    .. note::\n+        When the time is about to run out, the background of the timer will turn yellow to warn you.\n+\n+.. figure:: student/exam_navigation.png\n+   :alt: Exam Navigation\n+   :align: center\n+\n+   Exam Navigation Bar\n+\n+Participating in Quiz Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Various question types can be included in quiz exam exercises. These are: \n+\n+    1. Multiple choice questions\n+    2. Short Answer questions\n+    3. Drag and Drop questions\n+\n+- All questions are listed in the main screen below one another.\n+- To navigate between them you can either scroll or use the ``question overview`` on the left. When you click on one of the question representations, your view will automatically scroll to the respective question.\n+- To submit your solution, simply press ``Save & Continue``.\n+\n+    .. note::\n+        Your submission will automatically be saved every 30 seconds. \n+\n+.. figure:: student/quiz_exercises.png\n+   :alt: Participating in Quiz Exercises\n+   :align: center\n+\n+   Participating in Quiz Exercises\n+\n+Participating in Text Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The text exercise view is divided into two sections, the text editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the text editor.\n+\n+- If you want to focus only on the text editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can type out your solution. The editor will automatically track your number of words and number of characters.\n+\n+.. figure:: student/text_exercises.png\n+   :alt: Participating in Text Exercises\n+   :align: center\n+\n+   Participating in Text Exercises\n+\n+Participating in Modeling Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- The modeling exercise view is divided into two sections, the modeling editor, and the problem statement. The problem statement is docked to the right.\n+\n+    .. note::\n+        On small screens, the problem statement is shown above the modeling editor.\n+\n+- If you want to focus only on the modeling editor, you can collapse the problem statement by pressing on the ``right arrow``. This can be reverted by pressing the arrow again.\n+\n+    .. note::\n+        You can also choose to resize the problem statement by dragging the ``outline box``.\n+\n+- Within the editor you can model your solution. Depending on the diagram type, you will find the available elements on the right side of the editor. Simply drag and drop them into the editing field.\n+- When you click on a dropped element, you can configure it by setting it's ``name``, it's ``attributes``, ``methods`` etc. \n+- To connect elements you can simply drag an element's edges to another element. The editor will then automatically connect those two. \n+- If you are unclear about how to use the modeling editor, you can click on ``Help``. It will provide further information about how to use the modeling editor. \n+\n+    .. note::\n+        If you need more space, you can work in fullscreen by clicking on ``Fullscreen``. This mode will use your whole screen for the modeling exercise thereby giving you more space to model your solution. To exit the fullscreen mode simply click ``Exit Fullscreen``.\n+\n+.. figure:: student/modeling_exercises.png\n+   :alt: Participating in Modeling Exercises\n+   :align: center\n+\n+   Participating in Modeling Exercises\n+\n+Participating in Programming Exercises\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Depending on your exam, programming exercises can come in three forms: \n+\n+    1. Online Code Editor + support for local IDE\n+    2. Online Code Editor\n+    3. Support for local IDE\n+\n+- If your exercise allows the use of the code editor your screen will be divided into three sections, from left to right: \n+\n+   1. The file browser\n+   2. the code Editor\n+   3. The instructions\n+\n+- The file browser displays the structure of the assignment. You can access any file within the assignment. The files content will then be displayed on the code editor where you can edit the file's content. \n+\n+    - You can add new files and directories using the ``Add File``  and ``Add Folder`` buttons.\n+    - You also have the ability to rename and delete files and folders, therefore **caution** is advised. \n+\n+        .. note::\n+            If you accidentally delete or remove a file, you can use ``Refresh files``, to load the last saved version from the server.\n+\n+- The code editor allows you to edit the content of specific files. It shows the line numbers and will also annotate the appropriate line, if a compilation error occurs. \n+- The instructions are docked to the right.\n+- If you want to focus only on the code editor, you can collapse the instructions by pressing on the ``right arrow``. This can be reverted by pressing the arrow again. Similarly, if you want to collapse the file browser, you can press the ``left arrow`` above the file browser. \n+\n+    .. note::\n+        You can also choose to resize any of the three sections by dragging the ``outline box``.\n+\n+- When you press ``Save``, your files are saved on the Artemis server. However, you must press ``Submit`` for your solution to be counted!\n+- When you press ``Submit``, your changes are pushed to the VC server and a build is started on the CI server. This is indicated by the results changing from ``No results found`` to ``Building and testing``.\n+\n+    .. warning::\n+        There is no auto-submit!\n+\n+.. figure:: student/programming_exercises.png\n+   :alt: Participating in Programming Exercises\n+   :align: center\n+\n+   Participating in Programming Exercises with the online code editor and local IDE enabled\n+\n+- If your exercise allows the use of the local IDE you will have access to the button ``Clone Repository``.\n+- When you click it you can choose to clone the exercise via ``HTTPS`` or ``SSH``, if you have configured your private key.\n+\n+    .. note::\n+        You must link a public key to your account in advance if you want to use ``SSH``. \n+\n+- To work offline follow these steps: \n+\n+    1. Clone the Exercise\n+    2. Import the project in your IDE\n+    3. Work on the code\n+    4. Commit and push the code. A push is equivalent to pressing the ``Submit`` button.\n+\n+.. figure:: student/clone_repository.png\n+   :alt: Clone Repository\n+   :align: center\n+\n+   Clone the Repository\n+\n+    .. warning::\n+        You are responsible for pushing/submitting your code. Your instructors **cannot** help you if you have saved, but did not submit.\n+\n+- Real-time feedback in programming exercises during the online exam is limited.\n+- You will only see if your code compiles or not\n+\n+    1. **0%, Build failed** means that your code does **not** compile!\n+    2. **0%, 0 of 0 passed** means that your code compiles but provides no further information about your final score. ", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODEzNzE3Ng=="}, "originalCommit": {"oid": "70af458bae13f5f57ce3f449a79817563319255c"}, "originalPosition": 260}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDUzMDk0OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowODo1NVrOHk00cg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDowODo1NVrOHk00cg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3NjE3OA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - Artemis will randomize the order of the exercises for each student if you you activate ``randomize order of exercise groups``.\n          \n          \n            \n            - Artemis will randomize the order of the exercises for each student if you activate ``randomize order of exercise groups``.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508376178", "createdAt": "2020-10-20T10:08:55Z", "author": {"login": "sjagla27"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,355 @@\n+******************\n+Instructors\u2019 Guide\n+******************\n+\n+    .. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+==================================\n+\n+.. figure:: instructor/timeline.png\n+   :alt: Timeline of an Artemis Exam\n+   :align: center\n+\n+   Timeline of an Artemis Online Exam\n+\n+    .. _exam_creation_and_configuration:\n+\n+1. **Creation and Configuration**\n+---------------------------------\n+During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate :ref:`student exams <student_exams>` and conduct test runs. For more information see `1.2 Create and Configure Exam`_.\n+\n+\n+1.1 Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Click on |course_management|.\n+\n+- Click on |exams| for your course. It will open the *Exam Management Screen*.\n+\n+- Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on |create_new_exam|. \n+\n+1.2 Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on |create_new_exam| you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the :ref:`student exams <student_exams>`. For more information, see `1.3 Exercise Groups`_. \n+- Artemis will randomize the order of the exercises for each student if you you activate ``randomize order of exercise groups``.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcfe4576a90c2cdeff73be2913e7322763b9705a"}, "originalPosition": 40}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDU0NjE2OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/instructors_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxMjo1NlrOHk0-Hg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxMjo1NlrOHk0-Hg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM3ODY1NA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking |edit| on the exercise group.\n          \n          \n            \n            - By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add an exercise group initially, or later by clicking |edit| on the exercise group.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508378654", "createdAt": "2020-10-20T10:12:56Z", "author": {"login": "FuchsDominik"}, "path": "docs/user/exams/instructors_guide.rst", "diffHunk": "@@ -0,0 +1,355 @@\n+******************\n+Instructors\u2019 Guide\n+******************\n+\n+    .. _timeline:\n+\n+Timeline of an Artemis Online Exam\n+==================================\n+\n+.. figure:: instructor/timeline.png\n+   :alt: Timeline of an Artemis Exam\n+   :align: center\n+\n+   Timeline of an Artemis Online Exam\n+\n+    .. _exam_creation_and_configuration:\n+\n+1. **Creation and Configuration**\n+---------------------------------\n+During the exam creation and configuration, you can create your exam and configure it to fit your needs. Add exercises with different variants, register students, generate :ref:`student exams <student_exams>` and conduct test runs. For more information see `1.2 Create and Configure Exam`_.\n+\n+\n+1.1 Accessing the Exam Management Page\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- Log in to Artemis with your account credentials.\n+- Click on |course_management|.\n+\n+- Click on |exams| for your course. It will open the *Exam Management Screen*.\n+\n+- Here you have access to all the exams of your course. All aspects of the exam are managed from the management screen. \n+\n+- You can create an exam by clicking on |create_new_exam|. \n+\n+1.2 Create and Configure Exam\n+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n+- When you click on |create_new_exam| you are presented with the *Create Exam* view. Here you can set the basic information such as ``title``, ``examiner`` etc. The :ref:`timeline of the exam <timeline>` is defined by the dates: ``visible from``, ``start of working time``, ``end of working time``, ``release date of results``, ``begin of student review``, ``end of student review``. \n+- The first three dates are mandatory when you create an exam. The rest can be set when required. \n+- The ``grace period`` defines the amount of time the students have at their disposal to hand in their exam after the ``working time`` is over. This is set to 3 minutes by default. \n+- You can also define the ``number of exercises`` in the exam. You can leave this out initally, however it must be set before you can generate the :ref:`student exams <student_exams>`. For more information, see `1.3 Exercise Groups`_. \n+- Artemis will randomize the order of the exercises for each student if you you activate ``randomize order of exercise groups``.\n+- Finally, you can fill out the exam ``start text`` and ``end text``. Artemis will present these texts to the students during the :ref:`exam conduction <exam_conduction>`, at the *Start-* and *End* page respectively.\n+\n+.. figure:: instructor/exam_configuration.png\n+   :alt: Create and Configure\n+   :align: center\n+\n+   Create and Configure the Exam\n+\n+\n+\n+    .. _exercise_groups:\n+\n+1.3 Exercise Groups\n+^^^^^^^^^^^^^^^^^^^\n+- Artemis exam mode allows you to define multiple exercise variants so that each student can receive a unique exam. Artemis achieves this through exercise groups. Exercise groups represent an individual exercise slot for each :ref:`student exam <student_exams>`. Within one exercise group you can define different exercises. \n+- Artemis selects one exercise per exercise group randomly, to generate the individual :ref:`student exams <student_exams>`. \n+- You can distinguish between ``mandatory`` exercise groups and ``non-mandatory`` exercise groups. \n+- Artemis always includes ``mandatory`` exercise groups in the individual exam of a student. \n+- ``non-mandatory`` exercise groups can be left out, if there are more exercise groups than the ``number of exercises`` defined in the :ref:`exam configuration <exam_creation_and_configuration>`.\n+- By default, every exercise group is mandatory. You can set the ``mandetory`` flag when you add a exercise group initially, or later by clicking |edit| on the exercise group.", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcfe4576a90c2cdeff73be2913e7322763b9705a"}, "originalPosition": 60}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDU2NjM3OnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxODoxOVrOHk1KxA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxODoxOVrOHk1KxA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MTg5Mg==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            - At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded\n          \n          \n            \n            - At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded.", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508381892", "createdAt": "2020-10-20T10:18:19Z", "author": {"login": "FuchsDominik"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,340 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click |save| or |save_continue|.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n+\n+- At the end of the online exercise, you must be online within a given ``grace period`` and submit your exam, otherwise it will not be graded", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcfe4576a90c2cdeff73be2913e7322763b9705a"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NDU2ODMzOnYy", "diffSide": "RIGHT", "path": "docs/user/exams/students_guide.rst", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxODo1N1rOHk1MDA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxMDoxODo1N1rOHk1MDA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODM4MjIyMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)\n          \n          \n            \n                2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution).", "url": "https://github.com/ls1intum/Artemis/pull/2217#discussion_r508382220", "createdAt": "2020-10-20T10:18:57Z", "author": {"login": "FuchsDominik"}, "path": "docs/user/exams/students_guide.rst", "diffHunk": "@@ -0,0 +1,340 @@\n+===================\n+Students\u2019 Guide\n+===================\n+\n+General Information\n+-------------------\n+\n+Prerequisites\n+^^^^^^^^^^^^^\n+- **Stable internet connection**\n+\n+    **Recommendation:** Use a LAN connection if possible.\n+\n+- **Browser**\n+    \n+    **Recommendation:** Chromium (based), e.g. Google Chrome, newest version.\n+\n+- The following prerequisites are only required if your exam contains programming exercises: \n+\n+    - **Java IDE with JDK 15**\n+        \n+        **Recommendation:** Eclipse IDE 2020\u201109.\n+    \n+    - **Git Client**\n+        \n+        **Recommendation:** SourceTree\n+\n+\n+Offline Mode\n+^^^^^^^^^^^^\n+- The exam mode in Artemis tolerates issues with the Internet connection.\n+- In case you are not connected, you can continue working on text-, quiz- and modeling exercises, but you might get warnings that your solutions cannot be saved.\n+- If your Internet connection recovers, Artemis will save your solution.\n+- Artemis tries to save your solution every 30 seconds, when you navigate between exercises and when you click |save| or |save_continue|.\n+- Programming exercises have 2 modes.\n+\n+    1. **Online code editor:** can only be used when you are online. \n+\n+        .. note::\n+            You have to click on Submit! Otherwise your solution will *not* be pushed to the VC server and no build will be triggered.\n+\n+    2. **Local IDE:** you only need to be online when you clone the repository and when you push your commits (i.e. submit your solution)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "dcfe4576a90c2cdeff73be2913e7322763b9705a"}, "originalPosition": 42}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4538, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}