{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQyODk3NzI2", "number": 1792, "reviewThreads": {"totalCount": 6, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjowMjo1NlrOEK9xXQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1MDoyN1rOELADpg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTMzMjc3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjowMjo1NlrOGsUGmg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyNDozMFrOGsYvvw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExOTg5OA==", "bodyText": "This seems odd? Should this be something like that? (No Idea if this exists!)\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    var sorting = Sort.by(TextExercise.TextExerciseSearchColumn.valueOf(search.getSortedColumn()).getMappedColumnName());\n          \n          \n            \n                    var sorting = Sort.by(ModelingExercise.ModelingExerciseSearchColumn.valueOf(search.getSortedColumn()).getMappedColumnName());", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449119898", "createdAt": "2020-07-02T16:02:56Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "diffHunk": "@@ -29,4 +40,30 @@ public ModelingExercise findOne(Long exerciseId) {\n         log.debug(\"Request to get Modeling Exercise : {}\", exerciseId);\n         return modelingExerciseRepository.findById(exerciseId).orElseThrow(() -> new EntityNotFoundException(\"Exercise with id: \\\"\" + exerciseId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Search for all modeling exercises fitting a {@link PageableSearchDTO search query}. The result is paged,\n+     * meaning that there is only a predefined portion of the result returned to the user, so that the server doesn't\n+     * have to send hundreds/thousands of exercises if there are that many in Artemis.\n+     *\n+     * @param search The search query defining the search term and the size of the returned page\n+     * @param user The user for whom to fetch all available exercises\n+     * @return A wrapper object containing a list of all found exercises and the total number of pages\n+     */\n+    public SearchResultPageDTO<ModelingExercise> getAllOnPageWithSize(final PageableSearchDTO<String> search, final User user) {\n+        var sorting = Sort.by(TextExercise.TextExerciseSearchColumn.valueOf(search.getSortedColumn()).getMappedColumnName());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eec1587241e0185a7e578eda24d02dea4fa3dd9"}, "originalPosition": 47}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NTk2Nw==", "bodyText": "Yeah, I wanted to move this function but it slipped my mind. Thank you :D I moved it to Exercise.java and renamed it since it is used by all exercises which allow imports.\nSee: 8982dcc", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449195967", "createdAt": "2020-07-02T18:24:30Z", "author": {"login": "anditurdiu"}, "path": "src/main/java/de/tum/in/www1/artemis/service/ModelingExerciseService.java", "diffHunk": "@@ -29,4 +40,30 @@ public ModelingExercise findOne(Long exerciseId) {\n         log.debug(\"Request to get Modeling Exercise : {}\", exerciseId);\n         return modelingExerciseRepository.findById(exerciseId).orElseThrow(() -> new EntityNotFoundException(\"Exercise with id: \\\"\" + exerciseId + \"\\\" does not exist\"));\n     }\n+\n+    /**\n+     * Search for all modeling exercises fitting a {@link PageableSearchDTO search query}. The result is paged,\n+     * meaning that there is only a predefined portion of the result returned to the user, so that the server doesn't\n+     * have to send hundreds/thousands of exercises if there are that many in Artemis.\n+     *\n+     * @param search The search query defining the search term and the size of the returned page\n+     * @param user The user for whom to fetch all available exercises\n+     * @return A wrapper object containing a list of all found exercises and the total number of pages\n+     */\n+    public SearchResultPageDTO<ModelingExercise> getAllOnPageWithSize(final PageableSearchDTO<String> search, final User user) {\n+        var sorting = Sort.by(TextExercise.TextExerciseSearchColumn.valueOf(search.getSortedColumn()).getMappedColumnName());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTExOTg5OA=="}, "originalCommit": {"oid": "3eec1587241e0185a7e578eda24d02dea4fa3dd9"}, "originalPosition": 47}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTM0MTk0OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseImportService.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNjowNToxNVrOGsUMdQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyMzoyN1rOGsYtxg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyMTM5Nw==", "bodyText": "should this method be names copyExampleResult, as newResult.setExampleResult(true);?\n\n  \n    \n  \n    \n\n  \n  This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                Result copyResult(Result originalResult, Submission newSubmission) {\n          \n          \n            \n                Result copyExampleResult(Result originalResult, Submission newSubmission) {", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449121397", "createdAt": "2020-07-02T16:05:15Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseImportService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.ExerciseMode;\n+import de.tum.in.www1.artemis.repository.*;\n+\n+@Repository\n+public abstract class ExerciseImportService {\n+\n+    protected final JpaRepository exerciseRepository;\n+\n+    final ExampleSubmissionRepository exampleSubmissionRepository;\n+\n+    protected final SubmissionRepository submissionRepository;\n+\n+    protected final ResultRepository resultRepository;\n+\n+    protected final TextBlockRepository textBlockRepository;\n+\n+    public ExerciseImportService(JpaRepository exerciseRepository, ExampleSubmissionRepository exampleSubmissionRepository, SubmissionRepository submissionRepository,\n+            ResultRepository resultRepository, TextBlockRepository textBlockRepository) {\n+        this.exerciseRepository = exerciseRepository;\n+        this.exampleSubmissionRepository = exampleSubmissionRepository;\n+        this.submissionRepository = submissionRepository;\n+        this.resultRepository = resultRepository;\n+        this.textBlockRepository = textBlockRepository;\n+    }\n+\n+    /**\n+     * Abstract method for importing Exercises. Implementations cast the parameters {@code templateExercise} and {@code importedExercise} to their respective type.\n+     *\n+     * @param templateExercise The template Exercise\n+     * @param importedExercise The imported Exercise\n+     * @return Returns the importedExercise. If the type casting fails, returns null.\n+     */\n+    @Transactional\n+    public abstract Exercise importExercise(final Exercise templateExercise, final Exercise importedExercise);\n+\n+    void copyExerciseBasis(final Exercise newExercise, final Exercise importedExercise) {\n+        if (importedExercise.hasCourse()) {\n+            newExercise.setCourse(importedExercise.getCourseViaExerciseGroupOrCourseMember());\n+        }\n+        else {\n+            newExercise.setExerciseGroup(importedExercise.getExerciseGroup());\n+        }\n+\n+        newExercise.setTitle(importedExercise.getTitle());\n+        newExercise.setMaxScore(importedExercise.getMaxScore());\n+        newExercise.setAssessmentType(importedExercise.getAssessmentType());\n+        newExercise.setProblemStatement(importedExercise.getProblemStatement());\n+        newExercise.setReleaseDate(importedExercise.getReleaseDate());\n+        newExercise.setDueDate(importedExercise.getDueDate());\n+        newExercise.setAssessmentDueDate(importedExercise.getAssessmentDueDate());\n+        newExercise.setDifficulty(importedExercise.getDifficulty());\n+        newExercise.setGradingInstructions(importedExercise.getGradingInstructions());\n+        newExercise.setGradingCriteria(copyGradingCriteria(importedExercise));\n+        if (newExercise.getExerciseGroup() != null) {\n+            newExercise.setMode(ExerciseMode.INDIVIDUAL);\n+        }\n+        else {\n+            newExercise.setCategories(importedExercise.getCategories());\n+            newExercise.setMode(importedExercise.getMode());\n+            if (newExercise.getMode() == ExerciseMode.TEAM) {\n+                newExercise.setTeamAssignmentConfig(copyTeamAssignmentConfig(importedExercise.getTeamAssignmentConfig()));\n+            }\n+        }\n+    }\n+\n+    abstract Set<ExampleSubmission> copyExampleSubmission(final Exercise templateExercise, final Exercise newExercise);\n+\n+    abstract Submission copySubmission(final Submission originalSubmission);\n+\n+    /** This helper method does a hard copy of the result of a submission.\n+     * To copy the feedback, it calls {@link #copyFeedback(List, Result)}\n+     *\n+     * @param originalResult The original result to be copied\n+     * @param newSubmission The submission in which we link the result clone\n+     * @return The cloned result\n+     */\n+    Result copyResult(Result originalResult, Submission newSubmission) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eec1587241e0185a7e578eda24d02dea4fa3dd9"}, "originalPosition": 88}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NTQ2Mg==", "bodyText": "See: 6d9512a", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449195462", "createdAt": "2020-07-02T18:23:27Z", "author": {"login": "anditurdiu"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ExerciseImportService.java", "diffHunk": "@@ -0,0 +1,182 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import java.util.ArrayList;\n+import java.util.List;\n+import java.util.Set;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.stereotype.Repository;\n+import org.springframework.transaction.annotation.Transactional;\n+\n+import de.tum.in.www1.artemis.domain.*;\n+import de.tum.in.www1.artemis.domain.enumeration.ExerciseMode;\n+import de.tum.in.www1.artemis.repository.*;\n+\n+@Repository\n+public abstract class ExerciseImportService {\n+\n+    protected final JpaRepository exerciseRepository;\n+\n+    final ExampleSubmissionRepository exampleSubmissionRepository;\n+\n+    protected final SubmissionRepository submissionRepository;\n+\n+    protected final ResultRepository resultRepository;\n+\n+    protected final TextBlockRepository textBlockRepository;\n+\n+    public ExerciseImportService(JpaRepository exerciseRepository, ExampleSubmissionRepository exampleSubmissionRepository, SubmissionRepository submissionRepository,\n+            ResultRepository resultRepository, TextBlockRepository textBlockRepository) {\n+        this.exerciseRepository = exerciseRepository;\n+        this.exampleSubmissionRepository = exampleSubmissionRepository;\n+        this.submissionRepository = submissionRepository;\n+        this.resultRepository = resultRepository;\n+        this.textBlockRepository = textBlockRepository;\n+    }\n+\n+    /**\n+     * Abstract method for importing Exercises. Implementations cast the parameters {@code templateExercise} and {@code importedExercise} to their respective type.\n+     *\n+     * @param templateExercise The template Exercise\n+     * @param importedExercise The imported Exercise\n+     * @return Returns the importedExercise. If the type casting fails, returns null.\n+     */\n+    @Transactional\n+    public abstract Exercise importExercise(final Exercise templateExercise, final Exercise importedExercise);\n+\n+    void copyExerciseBasis(final Exercise newExercise, final Exercise importedExercise) {\n+        if (importedExercise.hasCourse()) {\n+            newExercise.setCourse(importedExercise.getCourseViaExerciseGroupOrCourseMember());\n+        }\n+        else {\n+            newExercise.setExerciseGroup(importedExercise.getExerciseGroup());\n+        }\n+\n+        newExercise.setTitle(importedExercise.getTitle());\n+        newExercise.setMaxScore(importedExercise.getMaxScore());\n+        newExercise.setAssessmentType(importedExercise.getAssessmentType());\n+        newExercise.setProblemStatement(importedExercise.getProblemStatement());\n+        newExercise.setReleaseDate(importedExercise.getReleaseDate());\n+        newExercise.setDueDate(importedExercise.getDueDate());\n+        newExercise.setAssessmentDueDate(importedExercise.getAssessmentDueDate());\n+        newExercise.setDifficulty(importedExercise.getDifficulty());\n+        newExercise.setGradingInstructions(importedExercise.getGradingInstructions());\n+        newExercise.setGradingCriteria(copyGradingCriteria(importedExercise));\n+        if (newExercise.getExerciseGroup() != null) {\n+            newExercise.setMode(ExerciseMode.INDIVIDUAL);\n+        }\n+        else {\n+            newExercise.setCategories(importedExercise.getCategories());\n+            newExercise.setMode(importedExercise.getMode());\n+            if (newExercise.getMode() == ExerciseMode.TEAM) {\n+                newExercise.setTeamAssignmentConfig(copyTeamAssignmentConfig(importedExercise.getTeamAssignmentConfig()));\n+            }\n+        }\n+    }\n+\n+    abstract Set<ExampleSubmission> copyExampleSubmission(final Exercise templateExercise, final Exercise newExercise);\n+\n+    abstract Submission copySubmission(final Submission originalSubmission);\n+\n+    /** This helper method does a hard copy of the result of a submission.\n+     * To copy the feedback, it calls {@link #copyFeedback(List, Result)}\n+     *\n+     * @param originalResult The original result to be copied\n+     * @param newSubmission The submission in which we link the result clone\n+     * @return The cloned result\n+     */\n+    Result copyResult(Result originalResult, Submission newSubmission) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTEyMTM5Nw=="}, "originalCommit": {"oid": "3eec1587241e0185a7e578eda24d02dea4fa3dd9"}, "originalPosition": 88}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTY3NDYyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo0MDoxMFrOGsXZpQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo0MDoxMFrOGsXZpQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3MzkyNQ==", "bodyText": "\ud83d\ude0e", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449173925", "createdAt": "2020-07-02T17:40:10Z", "author": {"login": "jpbernius"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -253,4 +282,62 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n         exerciseService.delete(exerciseId, false, false);\n         return ResponseEntity.ok().headers(HeaderUtil.createEntityDeletionAlert(applicationName, true, ENTITY_NAME, modelingExercise.get().getTitle())).build();\n     }\n+\n+    /**\n+     * POST /modeling-exercises/import: Imports an existing modeling exercise into an existing course\n+     *\n+     * This will import the whole exercise except for the participations and Dates.\n+     * Referenced entities will get cloned and assigned a new id.\n+     * Uses {@link ModelingExerciseImportService}.\n+     * See {@link ExerciseImportService#importExercise(Exercise, Exercise)}\n+     *\n+     * @param sourceExerciseId The ID of the original exercise which should get imported\n+     * @param importedExercise The new exercise containing values that should get overwritten in the imported exercise, s.a. the title or difficulty\n+     * @throws URISyntaxException When the URI of the response entity is invalid\n+     *\n+     * @return The imported exercise (200), a not found error (404) if the template does not exist, or a forbidden error\n+     *         (403) if the user is not at least an instructor in the target course.\n+     */\n+    @PostMapping(\"/modeling-exercises/import/{sourceExerciseId}\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<ModelingExercise> importExercise(@PathVariable long sourceExerciseId, @RequestBody ModelingExercise importedExercise) throws URISyntaxException {\n+        if (sourceExerciseId <= 0 || (importedExercise.getCourseViaExerciseGroupOrCourseMember() == null && importedExercise.getExerciseGroup() == null)) {\n+            log.debug(\"Either the courseId or exerciseGroupId must be set for an import\");\n+            return badRequest();\n+        }\n+        final var user = userService.getUserWithGroupsAndAuthorities();\n+        final var optionalOriginalModelingExercise = modelingExerciseRepository.findByIdWithEagerExampleSubmissionsAndResults(sourceExerciseId);\n+        if (optionalOriginalModelingExercise.isEmpty()) {\n+            log.debug(\"Cannot find original exercise to import from {}\", sourceExerciseId);\n+            return notFound();\n+        }\n+\n+        ResponseEntity<ModelingExercise> responseFailure = checkModelingExercise(importedExercise);\n+        if (responseFailure != null) {\n+            return responseFailure;\n+        }\n+\n+        if (importedExercise.hasExerciseGroup()) {\n+            log.debug(\"REST request to import text exercise {} into exercise group {}\", sourceExerciseId, importedExercise.getExerciseGroup().getId());\n+        }\n+        else {\n+            log.debug(\"REST request to import text exercise with {} into course {}\", sourceExerciseId, importedExercise.getCourseViaExerciseGroupOrCourseMember().getId());\n+        }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3eec1587241e0185a7e578eda24d02dea4fa3dd9"}, "originalPosition": 141}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTY5NDczOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-solution.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo0NjoyN1rOGsXmJw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyMzowOFrOGsYtPg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NzEyNw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (this.exercise.course == null) {\n          \n          \n            \n                            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n          \n          \n            \n                        }\n          \n          \n            \n                        this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course || this.exercise.exerciseGroup!.exam!.course);", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449177127", "createdAt": "2020-07-02T17:46:27Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-solution.component.ts", "diffHunk": "@@ -42,7 +42,12 @@ export class ExampleModelingSolutionComponent implements OnInit {\n             if (this.exercise.sampleSolutionModel) {\n                 this.exampleSolution = JSON.parse(this.exercise.sampleSolutionModel);\n             }\n-            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            if (this.exercise.course == null) {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course);\n+            } else {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NTMyNg==", "bodyText": "See: 399abf4", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449195326", "createdAt": "2020-07-02T18:23:08Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-solution.component.ts", "diffHunk": "@@ -42,7 +42,12 @@ export class ExampleModelingSolutionComponent implements OnInit {\n             if (this.exercise.sampleSolutionModel) {\n                 this.exampleSolution = JSON.parse(this.exercise.sampleSolutionModel);\n             }\n-            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            if (this.exercise.course == null) {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course);\n+            } else {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NzEyNw=="}, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTY5NzI3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-submission.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo0NzoxNVrOGsXnsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyMzowMVrOGsYtFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NzUyMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        if (this.exercise.course == null) {\n          \n          \n            \n                            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course!);\n          \n          \n            \n                        } else {\n          \n          \n            \n                            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n          \n          \n            \n                        }\n          \n          \n            \n                        this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course || this.exercise.exerciseGroup!.exam!.course!);", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449177523", "createdAt": "2020-07-02T17:47:15Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-submission.component.ts", "diffHunk": "@@ -86,7 +86,11 @@ export class ExampleModelingSubmissionComponent implements OnInit {\n     private loadAll(): void {\n         this.exerciseService.find(this.exerciseId).subscribe((exerciseResponse: HttpResponse<ModelingExercise>) => {\n             this.exercise = exerciseResponse.body!;\n-            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            if (this.exercise.course == null) {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course!);\n+            } else {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            }", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NTI4Ng==", "bodyText": "See: 399abf4", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449195286", "createdAt": "2020-07-02T18:23:01Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/modeling/manage/example-modeling/example-modeling-submission.component.ts", "diffHunk": "@@ -86,7 +86,11 @@ export class ExampleModelingSubmissionComponent implements OnInit {\n     private loadAll(): void {\n         this.exerciseService.find(this.exerciseId).subscribe((exerciseResponse: HttpResponse<ModelingExercise>) => {\n             this.exercise = exerciseResponse.body!;\n-            this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            if (this.exercise.course == null) {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.exerciseGroup!.exam!.course!);\n+            } else {\n+                this.isAtLeastInstructor = this.accountService.isAtLeastInstructorInCourse(this.exercise.course!);\n+            }", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3NzUyMw=="}, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 9}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5OTcwNzI2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/exercise/exercise.service.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxNzo1MDoyN1rOGsXt3w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMlQxODoyMjo0MVrOGsYsZQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3OTEwMw==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n            import { ModelingExercise } from 'app/entities/modeling-exercise.model';", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449179103", "createdAt": "2020-07-02T17:50:27Z", "author": {"login": "jpbernius"}, "path": "src/main/webapp/app/exercises/shared/exercise/exercise.service.ts", "diffHunk": "@@ -12,6 +12,7 @@ import { map } from 'rxjs/operators';\n import { AccountService } from 'app/core/auth/account.service';\n import { StatsForDashboard } from 'app/course/dashboards/instructor-course-dashboard/stats-for-dashboard.model';\n import { LtiConfiguration } from 'app/entities/lti-configuration.model';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE5NTEwOQ==", "bodyText": "See: 399abf4", "url": "https://github.com/ls1intum/Artemis/pull/1792#discussion_r449195109", "createdAt": "2020-07-02T18:22:41Z", "author": {"login": "anditurdiu"}, "path": "src/main/webapp/app/exercises/shared/exercise/exercise.service.ts", "diffHunk": "@@ -12,6 +12,7 @@ import { map } from 'rxjs/operators';\n import { AccountService } from 'app/core/auth/account.service';\n import { StatsForDashboard } from 'app/course/dashboards/instructor-course-dashboard/stats-for-dashboard.model';\n import { LtiConfiguration } from 'app/entities/lti-configuration.model';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0OTE3OTEwMw=="}, "originalCommit": {"oid": "7e04e962cedf9b7caa42092091686cb8108c6b44"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4964, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}