{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA1MjUyNDE1", "number": 2222, "reviewThreads": {"totalCount": 7, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwODo0NTo1NVrOEu5nLQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTowMDozOFrOEwJXCw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3NjEzODY5OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseParticipationResource.java", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQwODo0NTo1NVrOHjjswg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOFQxOToyMzoyN1rOHjtLIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA0NzEwNg==", "bodyText": "We only need the template and solution participation if the user is at least a teaching assistant or?\nIn that case, it would be better if we move this into the if block in line 110. This way we reduce unnecessary database calls. Same for the grading criteria in line 107.", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r507047106", "createdAt": "2020-10-18T08:45:55Z", "author": {"login": "anditurdiu"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseParticipationResource.java", "diffHunk": "@@ -93,10 +98,23 @@ public ProgrammingExerciseParticipationResource(ProgrammingExerciseParticipation\n         if (!programmingExerciseParticipationService.canAccessParticipation(participation.get())) {\n             return forbidden();\n         }\n-        if (!authCheckService.isAtLeastTeachingAssistantForExercise(participation.get().getExercise())) {\n+\n+        // Fetch template and solution participation into exercise of participation\n+        ProgrammingExercise exercise = (ProgrammingExercise) participation.get().getExercise();\n+        exercise = programmingExerciseService.findWithTemplateParticipationAndSolutionParticipationById(exercise.getId());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ed1dd43d29a5d6bf1558158110aa162d21cd63d3"}, "originalPosition": 44}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzIwMjMzOA==", "bodyText": "The thing here is, that this REST call cannot be called from a student. So this check is legacy as I initially implemented it to also allow calls from students. I will remove this check :)", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r507202338", "createdAt": "2020-10-18T19:23:27Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ProgrammingExerciseParticipationResource.java", "diffHunk": "@@ -93,10 +98,23 @@ public ProgrammingExerciseParticipationResource(ProgrammingExerciseParticipation\n         if (!programmingExerciseParticipationService.canAccessParticipation(participation.get())) {\n             return forbidden();\n         }\n-        if (!authCheckService.isAtLeastTeachingAssistantForExercise(participation.get().getExercise())) {\n+\n+        // Fetch template and solution participation into exercise of participation\n+        ProgrammingExercise exercise = (ProgrammingExercise) participation.get().getExercise();\n+        exercise = programmingExerciseService.findWithTemplateParticipationAndSolutionParticipationById(exercise.getId());", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzA0NzEwNg=="}, "originalCommit": {"oid": "ed1dd43d29a5d6bf1558158110aa162d21cd63d3"}, "originalPosition": 44}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE3OTY4MTk2OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQwOTo1OTo1MFrOHkG2Kw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0xOVQxOToyODo0OVrOHkebZA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyMjk1NQ==", "bodyText": "Maybe rename this to something more specific regarding grading instructions?", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r507622955", "createdAt": "2020-10-19T09:59:50Z", "author": {"login": "schultek"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "diffHunk": "@@ -59,6 +59,7 @@ export class ProgrammingExerciseUpdateComponent implements OnInit {\n     existingCategories: ExerciseCategory[];\n \n     public inProductionEnvironment: boolean;\n+    checkedFlag = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "73aa62289582cfa2ac4eb3570ed6b4330f96add9"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODAwOTMxNg==", "bodyText": "Done in 97326be", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508009316", "createdAt": "2020-10-19T19:28:49Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "diffHunk": "@@ -59,6 +59,7 @@ export class ProgrammingExerciseUpdateComponent implements OnInit {\n     existingCategories: ExerciseCategory[];\n \n     public inProductionEnvironment: boolean;\n+    checkedFlag = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwNzYyMjk1NQ=="}, "originalCommit": {"oid": "73aa62289582cfa2ac4eb3570ed6b4330f96add9"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzA3NjYwOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjowOVrOHknLsA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjowOVrOHknLsA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1Mjc1Mg==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetParticipationWithResultsForStudentParticipation_forbidden' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508152752", "createdAt": "2020-10-20T01:22:09Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "diffHunk": "@@ -276,7 +276,39 @@ public void getLatestSubmissionsForExercise_instructor() throws Exception {\n \n     @Test\n     @WithMockUser(username = \"student1\", roles = \"USER\")\n-    public void getLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+    public void testGetLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+        request.getMap(exercisesBaseUrl + programmingExercise.getId() + \"/latest-pending-submissions\", HttpStatus.FORBIDDEN, Long.class, ProgrammingSubmission.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetParticipationWithResultsForStudentParticipation_success() throws Exception {\n+        database.addGradingInstructionsToExercise(programmingExercise);\n+        programmingExerciseRepository.save(programmingExercise);\n+        addStudentParticipationWithResult(AssessmentType.AUTOMATIC, ZonedDateTime.now());\n+        StudentParticipation participation = studentParticipationRepository.findAll().get(0);\n+\n+        ProgrammingExerciseStudentParticipation response = request.get(participationsBaseUrl + participation.getId() + \"/student-participation-with-results-and-feedbacks\",\n+                HttpStatus.OK, ProgrammingExerciseStudentParticipation.class);\n+        ProgrammingExercise exercise = (ProgrammingExercise) response.getExercise();\n+\n+        assertThat(exercise.getGradingCriteria().get(0).getStructuredGradingInstructions().size()).isEqualTo(1);\n+        assertThat(exercise.getGradingCriteria().get(1).getStructuredGradingInstructions().size()).isEqualTo(1);\n+        assertThat(response.getResults().iterator().next().getAssessmentType()).isEqualTo(AssessmentType.AUTOMATIC);\n+        assertThat(response.getResults().iterator().next().getResultString()).isEqualTo(\"x of y passed\");\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetParticipationWithResultsForStudentParticipation_notFound() throws Exception {\n+        StudentParticipation participation = database.addParticipationForExercise(programmingExercise, \"student1\");\n+        request.get(participationsBaseUrl + participation.getId() + \"/student-participation-with-results-and-feedbacks\", HttpStatus.NOT_FOUND,\n+                ProgrammingExerciseStudentParticipation.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"stidemt1\", roles = \"USER\")\n+    public void testGetParticipationWithResultsForStudentParticipation_forbidden() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7578fea3f2ffe1a028b5c396a9b8861ed0111bb"}, "originalPosition": 37}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzA3NjY0OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjoxMFrOHknLtQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjoxMFrOHknLtQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1Mjc1Nw==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetParticipationWithResultsForStudentParticipation_notFound' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508152757", "createdAt": "2020-10-20T01:22:10Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "diffHunk": "@@ -276,7 +276,39 @@ public void getLatestSubmissionsForExercise_instructor() throws Exception {\n \n     @Test\n     @WithMockUser(username = \"student1\", roles = \"USER\")\n-    public void getLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+    public void testGetLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+        request.getMap(exercisesBaseUrl + programmingExercise.getId() + \"/latest-pending-submissions\", HttpStatus.FORBIDDEN, Long.class, ProgrammingSubmission.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetParticipationWithResultsForStudentParticipation_success() throws Exception {\n+        database.addGradingInstructionsToExercise(programmingExercise);\n+        programmingExerciseRepository.save(programmingExercise);\n+        addStudentParticipationWithResult(AssessmentType.AUTOMATIC, ZonedDateTime.now());\n+        StudentParticipation participation = studentParticipationRepository.findAll().get(0);\n+\n+        ProgrammingExerciseStudentParticipation response = request.get(participationsBaseUrl + participation.getId() + \"/student-participation-with-results-and-feedbacks\",\n+                HttpStatus.OK, ProgrammingExerciseStudentParticipation.class);\n+        ProgrammingExercise exercise = (ProgrammingExercise) response.getExercise();\n+\n+        assertThat(exercise.getGradingCriteria().get(0).getStructuredGradingInstructions().size()).isEqualTo(1);\n+        assertThat(exercise.getGradingCriteria().get(1).getStructuredGradingInstructions().size()).isEqualTo(1);\n+        assertThat(response.getResults().iterator().next().getAssessmentType()).isEqualTo(AssessmentType.AUTOMATIC);\n+        assertThat(response.getResults().iterator().next().getResultString()).isEqualTo(\"x of y passed\");\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetParticipationWithResultsForStudentParticipation_notFound() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7578fea3f2ffe1a028b5c396a9b8861ed0111bb"}, "originalPosition": 29}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4MzA3NjY4OnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjoxMVrOHknLug==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQwMToyMjoxMVrOHknLug==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODE1Mjc2Mg==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'testGetParticipationWithResultsForStudentParticipation_success' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508152762", "createdAt": "2020-10-20T01:22:11Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseParticipationIntegrationTest.java", "diffHunk": "@@ -276,7 +276,39 @@ public void getLatestSubmissionsForExercise_instructor() throws Exception {\n \n     @Test\n     @WithMockUser(username = \"student1\", roles = \"USER\")\n-    public void getLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+    public void testGetLatestSubmissionsForExercise_studentForbidden() throws Exception {\n+        request.getMap(exercisesBaseUrl + programmingExercise.getId() + \"/latest-pending-submissions\", HttpStatus.FORBIDDEN, Long.class, ProgrammingSubmission.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testGetParticipationWithResultsForStudentParticipation_success() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d7578fea3f2ffe1a028b5c396a9b8861ed0111bb"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4NjM3NDg5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjoyODo1OVrOHlG5PA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMFQxNjo0Mjo1OFrOHlHcgw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MjMxNg==", "bodyText": "For editing of programming exercises: Is is possible to check whether grading instructions have been created and then set this flag accordingly?", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508672316", "createdAt": "2020-10-20T16:28:59Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "diffHunk": "@@ -59,6 +59,7 @@ export class ProgrammingExerciseUpdateComponent implements OnInit {\n     existingCategories: ExerciseCategory[];\n \n     public inProductionEnvironment: boolean;\n+    checkedFlagForStructuredGradingInstructions = false;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1553452e5ec5df3730f2121cee72a4e49b8934"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY4MTM0Nw==", "bodyText": "Nevermind, it seems like this was conscious decision when the structured grading instructions were created", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r508681347", "createdAt": "2020-10-20T16:42:58Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/programming/manage/update/programming-exercise-update.component.ts", "diffHunk": "@@ -59,6 +59,7 @@ export class ProgrammingExerciseUpdateComponent implements OnInit {\n     existingCategories: ExerciseCategory[];\n \n     public inProductionEnvironment: boolean;\n+    checkedFlagForStructuredGradingInstructions = false;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwODY3MjMxNg=="}, "originalCommit": {"oid": "bd1553452e5ec5df3730f2121cee72a4e49b8934"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzE4OTIwNDU5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTowMDozOFrOHlhoyw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQwOTowMDozOFrOHlhoyw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTExMDQ3NQ==", "bodyText": "Just a small note: the maxCountInScore feature is not integrated in Apollon yet so calculating the score using structuredGradingCriterionService.computeTotalScore(this.feedback) in modeling-assessment-editor will not change the score calculation (it will skip all maxCountInScore related conditions). Have you tested assessing modeling exercises after these changes? (everything should work as expected but just in case ^^')", "url": "https://github.com/ls1intum/Artemis/pull/2222#discussion_r509110475", "createdAt": "2020-10-21T09:00:38Z", "author": {"login": "HanyaElhashemy"}, "path": "src/main/webapp/app/exercises/modeling/assess/modeling-assessment-editor/modeling-assessment-editor.component.ts", "diffHunk": "@@ -500,6 +502,6 @@ export class ModelingAssessmentEditorComponent implements OnInit {\n      * and instead set the score boundaries on the server.\n      */\n     calculateTotalScore() {\n-        this.totalScore = (this.feedback || []).reduce((totalScore, feedback) => totalScore + feedback.credits!, 0);\n+        this.totalScore = this.structuredGradingCriterionService.computeTotalScore(this.feedback);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "bd1553452e5ec5df3730f2121cee72a4e49b8934"}, "originalPosition": 21}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4546, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}