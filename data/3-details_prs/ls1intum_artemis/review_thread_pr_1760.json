{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDQxODM3NzQ1", "number": 1760, "reviewThreads": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjoyMjo1NVrOEKTA7A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxNzo0MlrOEKfKfA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5MjMyNzQ4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/courses.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNi0zMFQyMjoyMjo1NVrOGrQhKg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMToyMjo1NVrOGrh08A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjU4Ng==", "bodyText": "Discussed this with @MaisiKoleni . You should use the server time here and not moment() and calculate the individual endDate because some students have extra time", "url": "https://github.com/ls1intum/Artemis/pull/1760#discussion_r448012586", "createdAt": "2020-06-30T22:22:55Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/overview/courses.component.ts", "diffHunk": "@@ -71,6 +72,18 @@ export class CoursesComponent implements OnInit, OnDestroy {\n                 // TODO: Stephan Krusche: this is deactivate at the moment, I think we need a more generic solution in more components, e.g. using the the existing notification\n                 // sent to the client, when a quiz starts. This should slide in from the side.\n                 // this.subscribeForQuizStartForCourses();\n+\n+                // get all exams of courses\n+                this.courses.forEach((course) => {\n+                    if (course.exams) {\n+                        // set course for exam as it is not loaded within the server call\n+                        course.exams.forEach((exam) => {\n+                            exam.course = course;\n+                            this.exams.push(exam);\n+                        });\n+                    }\n+                });\n+                this.nextRelevantExams = this.exams.filter((exam) => moment(exam.endDate!).isAfter(moment()));", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "f45026047c53b1c38db37e8d5a00a65363b7305e"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODI5NjE3Ng==", "bodyText": "@stefanwaldhauser I am using the server time now, good catch! \ud83d\udc4d\nAbout calculating the individual endDate for each Exam and displaying it for so long, I discussed this with @krusche and it is okay to just display it until the regular endDate", "url": "https://github.com/ls1intum/Artemis/pull/1760#discussion_r448296176", "createdAt": "2020-07-01T11:22:55Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/overview/courses.component.ts", "diffHunk": "@@ -71,6 +72,18 @@ export class CoursesComponent implements OnInit, OnDestroy {\n                 // TODO: Stephan Krusche: this is deactivate at the moment, I think we need a more generic solution in more components, e.g. using the the existing notification\n                 // sent to the client, when a quiz starts. This should slide in from the side.\n                 // this.subscribeForQuizStartForCourses();\n+\n+                // get all exams of courses\n+                this.courses.forEach((course) => {\n+                    if (course.exams) {\n+                        // set course for exam as it is not loaded within the server call\n+                        course.exams.forEach((exam) => {\n+                            exam.course = course;\n+                            this.exams.push(exam);\n+                        });\n+                    }\n+                });\n+                this.nextRelevantExams = this.exams.filter((exam) => moment(exam.endDate!).isAfter(moment()));", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODAxMjU4Ng=="}, "originalCommit": {"oid": "f45026047c53b1c38db37e8d5a00a65363b7305e"}, "originalPosition": 54}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjc5NDMxODA0OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/overview/courses.component.ts", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxMjoxNzo0MlrOGrjcXg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wNy0wMVQxNDoxMDoyMVrOGrnlzQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMjY1NA==", "bodyText": "Could you maybe change this to use isBefore / isAfter. It would look a lot cleaner. (Even tough the logic is sometimes a bit tricky)", "url": "https://github.com/ls1intum/Artemis/pull/1760#discussion_r448322654", "createdAt": "2020-07-01T12:17:42Z", "author": {"login": "filip-gregurevic"}, "path": "src/main/webapp/app/overview/courses.component.ts", "diffHunk": "@@ -111,6 +126,33 @@ export class CoursesComponent implements OnInit, OnDestroy {\n         }\n     }\n \n+    /**\n+     * Sets the course for the next upcoming exam and returns the next upcoming exam or undefined\n+     */\n+    get nextRelevantExam(): Exam | undefined {\n+        let relevantExam: Exam | undefined = undefined;\n+        if (this.nextRelevantExams) {\n+            if (this.nextRelevantExams.length === 0) {\n+                return undefined;\n+            } else if (this.nextRelevantExams.length === 1) {\n+                relevantExam = this.nextRelevantExams[0];\n+            } else {\n+                relevantExam = this.nextRelevantExams.sort((a, b) => {\n+                    return moment(a.startDate).valueOf() - moment(b.startDate).valueOf();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "1839a15a873dbb557990591ac66e7c51b7950728"}, "originalPosition": 76}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODM5MDYwNQ==", "bodyText": "@filip-gregurevic The sorting functionality of arrays does not work with booleans, therefore I would leave it how it is \ud83d\ude04", "url": "https://github.com/ls1intum/Artemis/pull/1760#discussion_r448390605", "createdAt": "2020-07-01T14:10:21Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/overview/courses.component.ts", "diffHunk": "@@ -111,6 +126,33 @@ export class CoursesComponent implements OnInit, OnDestroy {\n         }\n     }\n \n+    /**\n+     * Sets the course for the next upcoming exam and returns the next upcoming exam or undefined\n+     */\n+    get nextRelevantExam(): Exam | undefined {\n+        let relevantExam: Exam | undefined = undefined;\n+        if (this.nextRelevantExams) {\n+            if (this.nextRelevantExams.length === 0) {\n+                return undefined;\n+            } else if (this.nextRelevantExams.length === 1) {\n+                relevantExam = this.nextRelevantExams[0];\n+            } else {\n+                relevantExam = this.nextRelevantExams.sort((a, b) => {\n+                    return moment(a.startDate).valueOf() - moment(b.startDate).valueOf();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ0ODMyMjY1NA=="}, "originalCommit": {"oid": "1839a15a873dbb557990591ac66e7c51b7950728"}, "originalPosition": 76}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4942, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}