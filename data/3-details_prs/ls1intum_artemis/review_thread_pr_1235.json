{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzczMTM4ODk5", "number": 1235, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0NDoxMFrODedSdA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1NTowMFrODedh_g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjYzNzMyOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/web/rest/SubmissionResource.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo0NDoxMFrOFnmfvw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xM1QxNzowNjo0MFrOFpcJow==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTUwMw==", "bodyText": "I didn't find any usage of the endpoints except the delete one. They didn't have any authorization checks and in my opinion can cause security issues. I would suggest to remove them. Should I do that @krusche ?", "url": "https://github.com/ls1intum/Artemis/pull/1235#discussion_r377069503", "createdAt": "2020-02-10T13:44:10Z", "author": {"login": "maxr96"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/SubmissionResource.java", "diffHunk": "@@ -65,6 +65,7 @@ public SubmissionResource(SubmissionRepository submissionRepository, ResultServi\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n     @PostMapping(\"/submissions\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d01d67220c83af4f1e9af7baacdd8997a971d8f1"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3ODk5NzE1NQ==", "bodyText": "yes, please remove the unused endpoints, but double check that they are really unused", "url": "https://github.com/ls1intum/Artemis/pull/1235#discussion_r378997155", "createdAt": "2020-02-13T17:06:40Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/SubmissionResource.java", "diffHunk": "@@ -65,6 +65,7 @@ public SubmissionResource(SubmissionRepository submissionRepository, ResultServi\n      * @throws URISyntaxException if the Location URI syntax is incorrect\n      */\n     @PostMapping(\"/submissions\")\n+    @PreAuthorize(\"hasAnyRole('USER', 'TA', 'INSTRUCTOR', 'ADMIN')\")", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA2OTUwMw=="}, "originalCommit": {"oid": "d01d67220c83af4f1e9af7baacdd8997a971d8f1"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjY2OTIyOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ParticipationSubmissionIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1Mjo0OVrOFnmycA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1Mjo0OVrOFnmycA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NDI4OA==", "bodyText": "Could you change an attribute and then verify that it has actually changed?", "url": "https://github.com/ls1intum/Artemis/pull/1235#discussion_r377074288", "createdAt": "2020-02-10T13:52:49Z", "author": {"login": "HanyaElhashemy"}, "path": "src/test/java/de/tum/in/www1/artemis/ParticipationSubmissionIntegrationTest.java", "diffHunk": "@@ -83,4 +94,49 @@ public void deleteParticipation_forbidden_tutor() throws Exception {\n     public void deleteParticipation_notFound() throws Exception {\n         request.delete(\"/api/submissions/\" + 1, HttpStatus.NOT_FOUND);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void createSubmission() throws Exception {\n+        request.postWithResponseBody(\"/api/submissions\", new TextSubmission(), Submission.class, HttpStatus.CREATED);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void createSubmission_withId() throws Exception {\n+        var submission = new TextSubmission();\n+        submission.setId(1L);\n+        request.postWithResponseBody(\"/api/submissions\", submission, Submission.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void updateSubmission() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d01d67220c83af4f1e9af7baacdd8997a971d8f1"}, "originalPosition": 68}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMjMzMjY3NzEwOnYy", "diffSide": "RIGHT", "path": "src/test/java/de/tum/in/www1/artemis/ParticipationSubmissionIntegrationTest.java", "isResolved": false, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1NTowMFrOFnm3Hw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMi0xMFQxMzo1NTowMFrOFnm3Hw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM3NzA3NTQ4Nw==", "bodyText": "could you assert that the properties of the received submission have the expected values?", "url": "https://github.com/ls1intum/Artemis/pull/1235#discussion_r377075487", "createdAt": "2020-02-10T13:55:00Z", "author": {"login": "HanyaElhashemy"}, "path": "src/test/java/de/tum/in/www1/artemis/ParticipationSubmissionIntegrationTest.java", "diffHunk": "@@ -83,4 +94,49 @@ public void deleteParticipation_forbidden_tutor() throws Exception {\n     public void deleteParticipation_notFound() throws Exception {\n         request.delete(\"/api/submissions/\" + 1, HttpStatus.NOT_FOUND);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void createSubmission() throws Exception {\n+        request.postWithResponseBody(\"/api/submissions\", new TextSubmission(), Submission.class, HttpStatus.CREATED);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void createSubmission_withId() throws Exception {\n+        var submission = new TextSubmission();\n+        submission.setId(1L);\n+        request.postWithResponseBody(\"/api/submissions\", submission, Submission.class, HttpStatus.BAD_REQUEST);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void updateSubmission() throws Exception {\n+        var submission = new TextSubmission();\n+        submissionRepository.save(submission);\n+        request.putWithResponseBody(\"/api/submissions\", submission, Submission.class, HttpStatus.OK);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"student1\", roles = \"USER\")\n+    public void updateSubmission_noId() throws Exception {\n+        var submission = new TextSubmission();\n+        request.putWithResponseBody(\"/api/submissions\", submission, Submission.class, HttpStatus.CREATED);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void getAllSubmissions() throws Exception {\n+        submissionRepository.save(new TextSubmission());\n+        submissionRepository.save(new ModelingSubmission());\n+        List<Submission> submissions = request.getList(\"/api/submissions\", HttpStatus.OK, Submission.class);\n+        assertThat(submissions.size()).isEqualTo(2);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void getSubmission() throws Exception {\n+        var submission = submissionRepository.save(new TextSubmission());", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d01d67220c83af4f1e9af7baacdd8997a971d8f1"}, "originalPosition": 93}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 221, "cost": 1, "resetAt": "2021-11-12T20:44:06Z"}}}