{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NDg4MTI5OTYy", "number": 2106, "reviewThreads": {"totalCount": 14, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowMjoyMVrOEoPRbg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozMjozM1rOEonIQw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwNjI4NzE4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowMjoyMVrOHZNpRA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOFQyMDowMjoyMVrOHZNpRA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjIwMDAwNA==", "bodyText": "There is an extra \"s\" you missed.", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496200004", "createdAt": "2020-09-28T20:02:21Z", "author": {"login": "sjagla27"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -0,0 +1,11 @@\n+<div class=\"plagiarism-split-view\">\n+    <div class=\"plagiarism-split-pane\" jhiPane>\n+        <div class=\"plagiarism-split-pane-header\">{{ comparison?.element1.studentLogin }}</div>\n+        <jhi-modeling-editor *ngIf=\"submission1\" [umlModel]=\"submission1?.model\" [diagramType]=\"'ClassDiagram'\" [readOnly]=\"true\"></jhi-modeling-editor>\n+    </div>\n+    <div class=\"plagiarism-split-pane\" jhiPane>\n+        <div class=\"plagiarism-split-pane-header\">{{ comparison?.element2.studentLogin }}</div>\n+        <jhi-modeling-editor *ngIf=\"submission2\" [umlModel]=\"submission2?.model\" [diagramType]=\"'ClassDiagram'\" [readOnly]=\"true\"></jhi-modeling-editor>\n+    </div>\n+    s", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "b297ed2edb93eb08d06bf3e25f66a1deac57ff58"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTEyNDQwOnYy", "diffSide": "RIGHT", "path": "package.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0MjoyMlrOHZpFaA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0MjoyMlrOHZpFaA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY0OTU3Ng==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                    \"split.js\": \"^1.6.2\",\n          \n          \n            \n                    \"split.js\": \"1.6.2\",", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496649576", "createdAt": "2020-09-29T11:42:22Z", "author": {"login": "krusche"}, "path": "package.json", "diffHunk": "@@ -73,6 +73,7 @@\n         \"simple-statistics\": \"7.2.0\",\n         \"smoothscroll-polyfill\": \"0.4.4\",\n         \"sockjs-client\": \"1.5.0\",\n+        \"split.js\": \"^1.6.2\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE0MTY3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.html", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NzoyNVrOHZpP3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0NzoyNVrOHZpP3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjI1Mg==", "bodyText": "You can just use the routerLink directive here. If you are not using it on an ancheor tag, it will automatically bound to the clickEvent of the element. This saves you a method call", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496652252", "createdAt": "2020-09-29T11:47:25Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.html", "diffHunk": "@@ -37,16 +37,10 @@ <h2><span jhiTranslate=\"artemisApp.modelingExercise.detail.title\">Modeling Exerc\n                 <fa-icon [icon]=\"'pencil-alt'\"></fa-icon>&nbsp;<span jhiTranslate=\"entity.action.edit\"> Edit</span>\n             </button>\n \n-            <div ngbDropdown class=\"d-inline-block mr-1 ml-2\">\n-                <button class=\"btn btn-outline-primary\" id=\"check-plagiarism-download\" ngbDropdownToggle [disabled]=\"checkPlagiarismInProgress\">\n-                    <span *ngIf=\"this.checkPlagiarismInProgress\" class=\"mr-1\"><fa-icon [icon]=\"'circle-notch'\" spin=\"true\"></fa-icon></span>\n-                    <span jhiTranslate=\"artemisApp.textExercise.checkPlagiarism\">Check Plagiarism</span>\n-                </button>\n-                <div ngbDropdownMenu aria-labelledby=\"check-plagiarism-download\">\n-                    <button type=\"button\" (click)=\"checkPlagiarismJson()\" ngbDropdownItem>JSON</button>\n-                    <button type=\"button\" (click)=\"checkPlagiarismCsv()\" ngbDropdownItem>CSV</button>\n-                </div>\n-            </div>\n+            <button class=\"btn btn-outline-primary\" id=\"check-plagiarism-download\" [disabled]=\"checkPlagiarismInProgress\" (click)=\"navigateToPlagiarismInspection()\">", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 14}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE0Mzc3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0ODowMlrOHZpRKA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo0ODowMlrOHZpRKA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1MjU4NA==", "bodyText": "Remove and do it via the routerLink directive as explained in the other comment :)", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496652584", "createdAt": "2020-09-29T11:48:02Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.ts", "diffHunk": "@@ -57,79 +55,12 @@ export class ModelingExerciseDetailComponent implements OnInit, OnDestroy {\n         });\n     }\n \n-    checkPlagiarismJson() {\n-        this.checkPlagiarism((data) => {\n-            const json = JSON.stringify(data);\n-            const blob = new Blob([json], { type: 'application/json' });\n-            downloadFile(blob, `check-plagiarism-modeling-exercise_${this.modelingExercise.id}.json`);\n+    navigateToPlagiarismInspection() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 38}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE1MzgwOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MDo1N1rOHZpXHg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDo0NDowNlrOHZw2lw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDExMA==", "bodyText": "Why can this be undefined? Would it not make sense that it is always either true or false?", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496654110", "createdAt": "2020-09-29T11:50:57Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -14,6 +14,7 @@ export type EntityArrayResponseType = HttpResponse<ModelingExercise[]>;\n export type ModelingSubmissionComparisonDTO = {\n     element1: ModelingSubmissionComparisonElement;\n     element2: ModelingSubmissionComparisonElement;\n+    confirmed?: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc0MjI2MQ==", "bodyText": "The plagiarism detection result from the backend does not include the confirmed attribute on plagiarisms. It is only added if either an instructor or TA has manually confirmed/denied a plagiarism. So if confirmed is undefined, it still needs manual inspection.\nMaybe we could use an enum here:\nenum PlagiarismStatus {\n    CONFIRMED = 'CONFIRMED',\n    DENIED = 'DENIED',\n    PENDING = 'PENDING',\n}", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496742261", "createdAt": "2020-09-29T14:01:04Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -14,6 +14,7 @@ export type EntityArrayResponseType = HttpResponse<ModelingExercise[]>;\n export type ModelingSubmissionComparisonDTO = {\n     element1: ModelingSubmissionComparisonElement;\n     element2: ModelingSubmissionComparisonElement;\n+    confirmed?: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDExMA=="}, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc3Njg1NQ==", "bodyText": "I think for now this should be fine. Can think about using an enum instead in a future follow-up PR \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496776855", "createdAt": "2020-09-29T14:44:06Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise.service.ts", "diffHunk": "@@ -14,6 +14,7 @@ export type EntityArrayResponseType = HttpResponse<ModelingExercise[]>;\n export type ModelingSubmissionComparisonDTO = {\n     element1: ModelingSubmissionComparisonElement;\n     element2: ModelingSubmissionComparisonElement;\n+    confirmed?: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDExMA=="}, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTE1ODI4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMTo1MjoxOFrOHZpZww==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNDoxMjoxMFrOHZvQ2g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDc4Nw==", "bodyText": "the naming does not really make sense for a boolean? You are not emitting the tag", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496654787", "createdAt": "2020-09-29T11:52:18Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-header',\n+    styleUrls: ['./plagiarism-header.component.scss'],\n+    templateUrl: './plagiarism-header.component.html',\n+})\n+export class PlagiarismHeaderComponent {\n+    @Input() comparisonIdx: number;\n+    @Output() split = new EventEmitter<string>();\n+    @Output() tag = new EventEmitter<boolean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 11}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc1MDgxMA==", "bodyText": "I updated the name of both split and tag according to @fde312's feedback \ud83d\udc4d", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496750810", "createdAt": "2020-09-29T14:12:10Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-header',\n+    styleUrls: ['./plagiarism-header.component.scss'],\n+    templateUrl: './plagiarism-header.component.html',\n+})\n+export class PlagiarismHeaderComponent {\n+    @Input() comparisonIdx: number;\n+    @Output() split = new EventEmitter<string>();\n+    @Output() tag = new EventEmitter<boolean>();", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY1NDc4Nw=="}, "originalCommit": {"oid": "e245c692b61b550cbc74f97a52336bf3118891a8"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTIwMTc1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNDo1M1rOHZpzoQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNDo1M1rOHZpzoQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MTQwOQ==", "bodyText": "You do not need a method for this. Just use the routerLink directive :)", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496661409", "createdAt": "2020-09-29T12:04:53Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnDestroy, OnInit } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Subject, Subscription } from 'rxjs';\n+import { ModelingExerciseService, ModelingSubmissionComparisonDTO } from 'app/exercises/modeling/manage/modeling-exercise.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { downloadFile } from 'app/shared/util/download.util';\n+import { ExportToCsv } from 'export-to-csv';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-inspector',\n+    styleUrls: ['./plagiarism-inspector.component.scss'],\n+    templateUrl: './plagiarism-inspector.component.html',\n+})\n+export class PlagiarismInspectorComponent implements OnDestroy, OnInit {\n+    selectedComparisonIndex: number;\n+    checkPlagiarismInProgress: boolean;\n+    modelingExercise: ModelingExercise;\n+    modelingSubmissionComparisons: Array<ModelingSubmissionComparisonDTO>;\n+    splitControlSubject: Subject<string> = new Subject<string>();\n+\n+    private subscription: Subscription;\n+\n+    constructor(private route: ActivatedRoute, private router: Router, private modelingExerciseService: ModelingExerciseService) {}\n+\n+    ngOnInit() {\n+        this.subscription = this.route.params.subscribe((params) => {\n+            this.modelingExerciseService.find(params['exerciseId']).subscribe((response: HttpResponse<ModelingExercise>) => {\n+                this.modelingExercise = response.body!;\n+            });\n+        });\n+    }\n+\n+    ngOnDestroy() {\n+        this.subscription.unsubscribe();\n+    }\n+\n+    handleTagPlagiarism(confirmed: boolean) {\n+        this.modelingSubmissionComparisons[this.selectedComparisonIndex].confirmed = confirmed;\n+    }\n+\n+    checkPlagiarismJson() {\n+        const json = JSON.stringify(this.modelingSubmissionComparisons);\n+        const blob = new Blob([json], { type: 'application/json' });\n+        downloadFile(blob, `check-plagiarism-modeling-exercise_${this.modelingExercise.id}.json`);\n+    }\n+\n+    checkPlagiarismCsv() {\n+        if (this.modelingSubmissionComparisons.length > 0) {\n+            const csvExporter = new ExportToCsv({\n+                fieldSeparator: ';',\n+                quoteStrings: '\"',\n+                decimalSeparator: 'locale',\n+                showLabels: true,\n+                title: `Plagiarism Check for Modeling Exercise ${this.modelingExercise.id}: ${this.modelingExercise.title}`,\n+                filename: `check-plagiarism-modeling-exercise-${this.modelingExercise.id}-${this.modelingExercise.title}`,\n+                useTextFile: false,\n+                useBom: true,\n+                headers: [\n+                    'Similarity',\n+                    'Confirmed',\n+                    'Participant 1',\n+                    'Submission 1',\n+                    'Score 1',\n+                    'Size 1',\n+                    'Link 1',\n+                    'Participant 2',\n+                    'Submission 2',\n+                    'Score 2',\n+                    'Size 2',\n+                    'Link 2',\n+                ],\n+            });\n+\n+            const courseId = this.modelingExercise.course ? this.modelingExercise.course.id : this.modelingExercise.exerciseGroup?.exam?.course?.id;\n+\n+            const baseUrl = location.origin + '/#/course-management/';\n+\n+            const csvData = this.modelingSubmissionComparisons.map((comparisonResult) => {\n+                return Object.assign({\n+                    Similarity: comparisonResult.similarity,\n+                    Confirmed: comparisonResult.confirmed ?? '',\n+                    'Participant 1': comparisonResult.element1.studentLogin,\n+                    'Submission 1': comparisonResult.element1.submissionId,\n+                    'Score 1': comparisonResult.element1.score,\n+                    'Size 1': comparisonResult.element1.size,\n+                    'Link 1':\n+                        baseUrl +\n+                        courseId +\n+                        '/modeling-exercises/' +\n+                        this.modelingExercise.id +\n+                        '/submissions/' +\n+                        comparisonResult.element1.submissionId +\n+                        '/assessment?optimal=false&hideBackButton=true',\n+                    'Participant 2': comparisonResult.element2.studentLogin,\n+                    'Submission 2': comparisonResult.element2.submissionId,\n+                    'Score 2': comparisonResult.element2.score,\n+                    'Size 2': comparisonResult.element2.size,\n+                    'Link 2':\n+                        baseUrl +\n+                        courseId +\n+                        '/modeling-exercises/' +\n+                        this.modelingExercise.id +\n+                        '/submissions/' +\n+                        comparisonResult.element2.submissionId +\n+                        '/assessment?optimal=false&hideBackButton=true',\n+                });\n+            });\n+\n+            csvExporter.generateCsv(csvData);\n+        }\n+    }\n+\n+    goBack() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 114}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTIwNjQ3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowNTo1NFrOHZp2SA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0OTo1M1rOHZuLtw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MjA4OA==", "bodyText": "Should this not be named something like isPlagiarismCheckInProgress?", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496662088", "createdAt": "2020-09-29T12:05:54Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnDestroy, OnInit } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Subject, Subscription } from 'rxjs';\n+import { ModelingExerciseService, ModelingSubmissionComparisonDTO } from 'app/exercises/modeling/manage/modeling-exercise.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { downloadFile } from 'app/shared/util/download.util';\n+import { ExportToCsv } from 'export-to-csv';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-inspector',\n+    styleUrls: ['./plagiarism-inspector.component.scss'],\n+    templateUrl: './plagiarism-inspector.component.html',\n+})\n+export class PlagiarismInspectorComponent implements OnDestroy, OnInit {\n+    selectedComparisonIndex: number;\n+    checkPlagiarismInProgress: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 17}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjczMzExMQ==", "bodyText": "I don't exactly know about our preferred naming convention, but personally, I would use isPlagiarismCheckInProgress() as a function name (asking a question) and plagiarismCheckInProgress as the name of the answer to that question, containing the actual boolean value.\nI could rename checkPlagiarismInProgress to plagiarismCheckInProgress, as the prefix check might be confusing and more suitable for a function name.", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496733111", "createdAt": "2020-09-29T13:49:53Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnDestroy, OnInit } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Subject, Subscription } from 'rxjs';\n+import { ModelingExerciseService, ModelingSubmissionComparisonDTO } from 'app/exercises/modeling/manage/modeling-exercise.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { downloadFile } from 'app/shared/util/download.util';\n+import { ExportToCsv } from 'export-to-csv';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-inspector',\n+    styleUrls: ['./plagiarism-inspector.component.scss'],\n+    templateUrl: './plagiarism-inspector.component.html',\n+})\n+export class PlagiarismInspectorComponent implements OnDestroy, OnInit {\n+    selectedComparisonIndex: number;\n+    checkPlagiarismInProgress: boolean;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MjA4OA=="}, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 17}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTIxNjM1OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowODo0N1rOHZp8Vg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMjowODo0N1rOHZp8Vg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjY2MzYzOA==", "bodyText": "You do not need to unsubscribe to http subscriptions as far as i know.\nhttps://medium.com/@lukaonik/do-we-need-to-unsubscribe-http-client-in-angular-86d781522b99", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496663638", "createdAt": "2020-09-29T12:08:47Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-inspector/plagiarism-inspector.component.ts", "diffHunk": "@@ -0,0 +1,135 @@\n+import { Component, OnDestroy, OnInit } from '@angular/core';\n+import { HttpResponse } from '@angular/common/http';\n+import { ActivatedRoute, Router } from '@angular/router';\n+import { Subject, Subscription } from 'rxjs';\n+import { ModelingExerciseService, ModelingSubmissionComparisonDTO } from 'app/exercises/modeling/manage/modeling-exercise.service';\n+import { ModelingExercise } from 'app/entities/modeling-exercise.model';\n+import { downloadFile } from 'app/shared/util/download.util';\n+import { ExportToCsv } from 'export-to-csv';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-inspector',\n+    styleUrls: ['./plagiarism-inspector.component.scss'],\n+    templateUrl: './plagiarism-inspector.component.html',\n+})\n+export class PlagiarismInspectorComponent implements OnDestroy, OnInit {\n+    selectedComparisonIndex: number;\n+    checkPlagiarismInProgress: boolean;\n+    modelingExercise: ModelingExercise;\n+    modelingSubmissionComparisons: Array<ModelingSubmissionComparisonDTO>;\n+    splitControlSubject: Subject<string> = new Subject<string>();\n+\n+    private subscription: Subscription;\n+\n+    constructor(private route: ActivatedRoute, private router: Router, private modelingExerciseService: ModelingExerciseService) {}\n+\n+    ngOnInit() {\n+        this.subscription = this.route.params.subscribe((params) => {\n+            this.modelingExerciseService.find(params['exerciseId']).subscribe((response: HttpResponse<ModelingExercise>) => {\n+                this.modelingExercise = response.body!;\n+            });\n+        });\n+    }\n+\n+    ngOnDestroy() {\n+        this.subscription.unsubscribe();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 35}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTY1NjM5OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0OTo1NlrOHZuL3g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo0OTo1NlrOHZuL3g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjczMzE1MA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Output() tag = new EventEmitter<boolean>();\n          \n          \n            \n                @Output() onPlagiarismConfirmation = new EventEmitter<boolean>();", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496733150", "createdAt": "2020-09-29T13:49:56Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-header',\n+    styleUrls: ['./plagiarism-header.component.scss'],\n+    templateUrl: './plagiarism-header.component.html',\n+})\n+export class PlagiarismHeaderComponent {\n+    @Input() comparisonIdx: number;\n+    @Output() split = new EventEmitter<string>();\n+    @Output() tag = new EventEmitter<boolean>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 11}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzEwOTY2NjY4OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo1MTo1NVrOHZuSUA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxMzo1MTo1NVrOHZuSUA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjczNDgwMA==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                @Output() split = new EventEmitter<string>();\n          \n          \n            \n                @Output() onSplitViewChange = new EventEmitter<string>();", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496734800", "createdAt": "2020-09-29T13:51:55Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-header/plagiarism-header.component.ts", "diffHunk": "@@ -0,0 +1,16 @@\n+import { Component, EventEmitter, Input, Output } from '@angular/core';\n+\n+@Component({\n+    selector: 'jhi-plagiarism-header',\n+    styleUrls: ['./plagiarism-header.component.scss'],\n+    templateUrl: './plagiarism-header.component.html',\n+})\n+export class PlagiarismHeaderComponent {\n+    @Input() comparisonIdx: number;\n+    @Output() split = new EventEmitter<string>();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "946fea800840c7737d9c8ec1a2c192e9e419d248"}, "originalPosition": 10}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDA2OTcwOnYy", "diffSide": "LEFT", "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.ts", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxMTo1NFrOHZyN8g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToxMTo1NFrOHZyN8g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5Njc5OTIxOA==", "bodyText": "Build is failing I think because of this.", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496799218", "createdAt": "2020-09-29T15:11:54Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/exercises/modeling/manage/modeling-exercise-detail.component.ts", "diffHunk": "@@ -23,7 +23,6 @@ export class ModelingExerciseDetailComponent implements OnInit, OnDestroy {\n     gradingInstructions: SafeHtml;\n     sampleSolution: SafeHtml;\n     sampleSolutionUML: UMLModel;\n-    checkPlagiarismInProgress: boolean;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a501c621e8644de9a52b9fa5ea3baa6d13e7e0e5"}, "originalPosition": 4}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDEzNjQxOnYy", "diffSide": "RIGHT", "path": "src/main/webapp/i18n/de/plagiarism.json", "isResolved": true, "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToyNDowMFrOHZy29w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNToyNDowMFrOHZy29w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgwOTcxOQ==", "bodyText": "This file contains bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters\n\n\n  \n\n\n    \n      \n        Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        \"warning\": \"Best\u00e4tigen/Ablehnen eines Plagiats geht beim Neuladen der Seite verloren.\",\n          \n          \n            \n                        \"warning\": \"Die Best\u00e4tigung/Ablehnung eines Plagiats geht beim Neuladen der Seite verloren.\",", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496809719", "createdAt": "2020-09-29T15:24:00Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/i18n/de/plagiarism.json", "diffHunk": "@@ -0,0 +1,14 @@\n+{\n+    \"artemisApp\": {\n+        \"plagiarism\": {\n+            \"confirm\": \"Best\u00e4tigen\",\n+            \"deny\": \"Ablehnen\",\n+            \"warning\": \"Best\u00e4tigen/Ablehnen eines Plagiats geht beim Neuladen der Seite verloren.\",", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b8c43c55dd671be01b5769f9b2b08b4561eb00"}, "originalPosition": 6}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzExMDE5NTg3OnYy", "diffSide": "RIGHT", "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "isResolved": true, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTozMjozM1rOHZzazA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wOS0yOVQxNTo0ODoyNFrOHZ0dQA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgxODg5Mg==", "bodyText": "ClassDiagram is hard-coded here. Do you have access to the exercise? You could use exercise.diagramType then.", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496818892", "createdAt": "2020-09-29T15:32:33Z", "author": {"login": "kloessst"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -0,0 +1,10 @@\n+<div class=\"plagiarism-split-view\">\n+    <div class=\"plagiarism-split-pane\" jhiPane>\n+        <div class=\"plagiarism-split-pane-header\">{{ comparison?.element1.studentLogin }}</div>\n+        <jhi-modeling-editor *ngIf=\"submission1\" [umlModel]=\"submission1?.model\" [diagramType]=\"'ClassDiagram'\" [readOnly]=\"true\"></jhi-modeling-editor>", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "62b8c43c55dd671be01b5769f9b2b08b4561eb00"}, "originalPosition": 4}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgzNTkwNA==", "bodyText": "Great point, forgot about that. Added an input binding to PlagiarismSplitViewComponent, check the latest commit \ud83d\ude42", "url": "https://github.com/ls1intum/Artemis/pull/2106#discussion_r496835904", "createdAt": "2020-09-29T15:48:24Z", "author": {"login": "philippbauch"}, "path": "src/main/webapp/app/exercises/shared/plagiarism/plagiarism-split-view/plagiarism-split-view.component.html", "diffHunk": "@@ -0,0 +1,10 @@\n+<div class=\"plagiarism-split-view\">\n+    <div class=\"plagiarism-split-pane\" jhiPane>\n+        <div class=\"plagiarism-split-pane-header\">{{ comparison?.element1.studentLogin }}</div>\n+        <jhi-modeling-editor *ngIf=\"submission1\" [umlModel]=\"submission1?.model\" [diagramType]=\"'ClassDiagram'\" [readOnly]=\"true\"></jhi-modeling-editor>", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ5NjgxODg5Mg=="}, "originalCommit": {"oid": "62b8c43c55dd671be01b5769f9b2b08b4561eb00"}, "originalPosition": 4}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4693, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}