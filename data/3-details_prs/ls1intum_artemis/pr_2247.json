{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA3MzAwOTI4", "number": 2247, "title": "Consistent use of DTOs in Jira/Bitbucket/BambooService and improved test coverage in BitbucketService", "bodyText": "Description\n\nThis add test cases for the BitbucketService and handles edge cases by catching Exceptions.\nThe methods deleteWebHook() and deleteExistingWebHooks() were unused and therefore deleted.\nAlso this PR gets rid of the Map Casting in the restTemplate and its mock functions by replacing them with DTOs.\nSteps for Testing\n\nAs now all rest calls for Bamboo/Bitbucket/Jira are called with DTOs, all relevant rest calls should be tested.\n\nLogin using a TUM account over JIRA\nCreate a Programming Exercise and verify that all necessary steps are working as expected.\nParticipate in it and also verify that all works as expected.\nDelete the exercise and make sure everything works\nUse an admin account to change the groups of an existing user in the user management view\n\nTest Coverage\n\n\nBitbucketService.java: 51% -> 76%", "createdAt": "2020-10-21T06:52:20Z", "url": "https://github.com/ls1intum/Artemis/pull/2247", "merged": true, "mergeCommit": {"oid": "73eda02bcc2afbfa78bfb5c34cbff8fa64118cb3"}, "closed": true, "closedAt": "2020-10-29T20:04:54Z", "author": {"login": "derLalla"}, "timelineItems": {"totalCount": 90, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdTqjIfgH2gAyNTA3MzAwOTI4OmJkNGY2MmZmMGFhZDYyODVkMzU3NWJjYzhkMzZkYjg3Y2ZkNmI5OTg=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdXX1zwgFqTUyMDAzODA5MA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "bd4f62ff0aad6285d3575bcc8d36db87cfd6b998", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/bd4f62ff0aad6285d3575bcc8d36db87cfd6b998", "committedDate": "2020-10-18T07:36:11Z", "message": "fix gitkraken display issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26b25818b571e0f5f9cbc7679d038eb2062b3586", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/26b25818b571e0f5f9cbc7679d038eb2062b3586", "committedDate": "2020-10-19T09:32:07Z", "message": "mock creating new lti user if needed"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80ec4a61ff077b0ed8e79b5eca59683064d33255", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/80ec4a61ff077b0ed8e79b5eca59683064d33255", "committedDate": "2020-10-19T09:33:20Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ecdd0a890a07932088f00719f9c8e7f58d999b96", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/ecdd0a890a07932088f00719f9c8e7f58d999b96", "committedDate": "2020-10-19T11:18:44Z", "message": "add testcase for fetchCommitInfo OnNotifyPush"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "39624dae08a5ab4c185b7b17acad0c3b0a6da94c", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/39624dae08a5ab4c185b7b17acad0c3b0a6da94c", "committedDate": "2020-10-19T13:55:52Z", "message": "delete unused methods: deleteWebHook"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "80599e814673fd983c323242d991f7861baa53b0", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/80599e814673fd983c323242d991f7861baa53b0", "committedDate": "2020-10-19T15:11:38Z", "message": "add testcases"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fee37851ba86ce01052e396a9e3b2ee391b51f90", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/fee37851ba86ce01052e396a9e3b2ee391b51f90", "committedDate": "2020-10-19T23:28:39Z", "message": "extract new UrlService to remove duplicated code\n\nalso add ProgrammingExerciseTestService based on delegation to align Bitbucket+Bamboo with Gitlab+Jenkins tests and to avoid duplicated code in those"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cbd19540ae573d73e9674f572547fc956d4627b5", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/cbd19540ae573d73e9674f572547fc956d4627b5", "committedDate": "2020-10-19T23:30:58Z", "message": "Merge branch 'develop' into chore/url-service-test-improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "18fc3563d804f873486f12cdb52f5aaabf30275e", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/18fc3563d804f873486f12cdb52f5aaabf30275e", "committedDate": "2020-10-20T00:14:37Z", "message": "Merge branch 'develop' into chore/url-service-test-improvements\n\n# Conflicts:\n#\tsrc/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d59f944e1fdbba7a5c22929a46a23bbb661c73cf", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/d59f944e1fdbba7a5c22929a46a23bbb661c73cf", "committedDate": "2020-10-20T00:19:06Z", "message": "Merge branch 'develop' into chore/url-service-test-improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2e50ef9e61e981efa8557b20e941423a296608ec", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/2e50ef9e61e981efa8557b20e941423a296608ec", "committedDate": "2020-10-20T00:23:44Z", "message": "update kotlin version in pom.xml"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6c25a466d04728ee3f92f95c05ec048a66ff0303", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/6c25a466d04728ee3f92f95c05ec048a66ff0303", "committedDate": "2020-10-20T00:38:59Z", "message": "fix testing issues"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c3b202c2fc9b2028f1545ba01e36da3e97b1df19", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/c3b202c2fc9b2028f1545ba01e36da3e97b1df19", "committedDate": "2020-10-20T00:47:37Z", "message": "fix another test issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2551e13a2f95576995b120d70b67de4bcdb74391", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/2551e13a2f95576995b120d70b67de4bcdb74391", "committedDate": "2020-10-20T01:04:52Z", "message": "remove duplicated code for kotlin + java test by using parameterized tests"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e51f74f59faa739f24bf9b54c75d65c88cdcb17", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/4e51f74f59faa739f24bf9b54c75d65c88cdcb17", "committedDate": "2020-10-20T06:44:04Z", "message": "add testcase for configurerepo"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5e612216dbe1fb6275562c58326403ad839c1102", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/5e612216dbe1fb6275562c58326403ad839c1102", "committedDate": "2020-10-20T10:51:52Z", "message": "Merge remote-tracking branch 'origin/develop' into chore/url-service-test-improvements\n\n# Conflicts:\n#\tsrc/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseGitlabJenkinsIntegrationTest.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5274bdd28507ed0c467d10216e9a29ef6d13e4da", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/5274bdd28507ed0c467d10216e9a29ef6d13e4da", "committedDate": "2020-10-20T12:40:08Z", "message": "Create Service for testing of incoming programming exercise results"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4830dc0a18405a5d1273b6d4f58393acb06d7cf5", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/4830dc0a18405a5d1273b6d4f58393acb06d7cf5", "committedDate": "2020-10-20T14:06:50Z", "message": "fix warning"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4e4f06aaa5ee932c17233b0031357a8c4facc69e", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/4e4f06aaa5ee932c17233b0031357a8c4facc69e", "committedDate": "2020-10-20T14:08:41Z", "message": "Merge branch 'develop' into chore/url-service-test-improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e70817b227ea3abf8dce4c499192b992258412a1", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/e70817b227ea3abf8dce4c499192b992258412a1", "committedDate": "2020-10-20T14:09:13Z", "message": "set min coverage for server tests to 80%"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "45ec52f826dd38a9ff5017aaabe977f7b4ff4310", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/45ec52f826dd38a9ff5017aaabe977f7b4ff4310", "committedDate": "2020-10-20T14:48:05Z", "message": "Fix translation in programming ex detail view"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f946951c234f79f5edde5f294c2cae159b737190", "author": {"user": {"login": "kloessst", "name": "Stefan Kl\u00f6ss-Schuster"}}, "url": "https://github.com/ls1intum/Artemis/commit/f946951c234f79f5edde5f294c2cae159b737190", "committedDate": "2020-10-20T14:48:21Z", "message": "Merge branch 'chore/url-service-test-improvements' of https://github.com/ls1intum/Artemis into chore/url-service-test-improvements"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4afbf5d72d27834733872ab31695f6d4de5e3092", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/4afbf5d72d27834733872ab31695f6d4de5e3092", "committedDate": "2020-10-20T15:57:01Z", "message": "Merge remote-tracking branch 'origin/chore/url-service-test-improvements' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3f3b441f7e06a2d6f4fc7be72eaf1e753952526e", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/3f3b441f7e06a2d6f4fc7be72eaf1e753952526e", "committedDate": "2020-10-20T16:25:26Z", "message": "resolve merge conflicts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "bdb6bd4add0fbeb56d34bdbf31601a06e54480a3", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/bdb6bd4add0fbeb56d34bdbf31601a06e54480a3", "committedDate": "2020-10-21T06:47:35Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a19746f6aa60417e5aa427b32d681f639e05cf85", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/a19746f6aa60417e5aa427b32d681f639e05cf85", "committedDate": "2020-10-21T07:12:03Z", "message": "apply codacy changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c50145e664c747f8a48b9abf3cbee97dbdbde9f5", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/c50145e664c747f8a48b9abf3cbee97dbdbde9f5", "committedDate": "2020-10-21T08:50:40Z", "message": "add testcase for Conflict in copyRepository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "908360c2db88b00b42ea8408bf29a37d737c0ebc", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/908360c2db88b00b42ea8408bf29a37d737c0ebc", "committedDate": "2020-10-21T11:59:52Z", "message": "adapt JiraUserDto"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5ee24878d4af562d360535f6230868a74c6d33c9", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/5ee24878d4af562d360535f6230868a74c6d33c9", "committedDate": "2020-10-21T14:37:56Z", "message": "add new DTOs"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d7b4af520483072714e583f4e4542e0f1466d860", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/d7b4af520483072714e583f4e4542e0f1466d860", "committedDate": "2020-10-21T17:05:40Z", "message": "fix dtos"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "24d534aaa110ea2968b3ad637a5552e89f7bfb13", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/24d534aaa110ea2968b3ad637a5552e89f7bfb13", "committedDate": "2020-10-21T17:07:21Z", "message": "remove parenthesis"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "224d398090ed0105374cfb8ac0e06263d8e88a87", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/224d398090ed0105374cfb8ac0e06263d8e88a87", "committedDate": "2020-10-21T17:30:24Z", "message": "add javadoc"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "de64e48e723b574f91fa530195c2408475aedfb5", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/de64e48e723b574f91fa530195c2408475aedfb5", "committedDate": "2020-10-21T17:55:40Z", "message": "fix Jira DTO issue"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "3402b446644e577d357f76eda7a268789354e65d", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/3402b446644e577d357f76eda7a268789354e65d", "committedDate": "2020-10-21T18:26:59Z", "message": "refactor code"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE0MDgyODUy", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-514082852", "createdAt": "2020-10-21T18:51:45Z", "commit": {"oid": "3402b446644e577d357f76eda7a268789354e65d"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODo1MTo0NVrOHl-MBQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yMVQxODo1MzowOVrOHl-SWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU3ODI0NQ==", "bodyText": "we should return List<BitbucketWebHookDTO> here and simply return response.getBody().getSearchResults() or List.of()", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r509578245", "createdAt": "2020-10-21T18:51:45Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/BitbucketService.java", "diffHunk": "@@ -599,9 +583,10 @@ private void grantGroupPermissionToProject(String projectKey, String groupName,\n      */\n     private Map<Integer, String> getExistingWebHooks(String projectKey, String repositorySlug) throws BitbucketException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3402b446644e577d357f76eda7a268789354e65d"}, "originalPosition": 111}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU3OTMxMA==", "bodyText": "please avoid String.format and use normal string concatenation", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r509579310", "createdAt": "2020-10-21T18:52:43Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketCloneDTO.java", "diffHunk": "@@ -30,6 +30,18 @@ public void setCloneDetails(CloneDetailsDTO cloneDetails) {\n         this.cloneDetails = cloneDetails;\n     }\n \n+    /**\n+     * Creating a description for the console log\n+     * @return description with name and project key\n+     */\n+    public String toString() {\n+        String description = String.format(\"name=%s\", name);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3402b446644e577d357f76eda7a268789354e65d"}, "originalPosition": 9}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUwOTU3OTg2NA==", "bodyText": "please avoid String.format and use normal string concatenation\ncheck out other toString() methods, you can actually generate those automatically in IntelliJ", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r509579864", "createdAt": "2020-10-21T18:53:09Z", "author": {"login": "krusche"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketCloneDTO.java", "diffHunk": "@@ -45,5 +57,9 @@ public String getKey() {\n         public void setKey(String key) {\n             this.key = key;\n         }\n+\n+        public String toString() {\n+            return String.format(\"project={key=%s}\", key);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "3402b446644e577d357f76eda7a268789354e65d"}, "originalPosition": 25}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a9711ce61339051a3870330eb0d5747b699cedde", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/a9711ce61339051a3870330eb0d5747b699cedde", "committedDate": "2020-10-21T20:28:51Z", "message": "apply changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "71cee2248ac898f8f058947d14c113733507f5eb", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/71cee2248ac898f8f058947d14c113733507f5eb", "committedDate": "2020-10-22T09:41:18Z", "message": "convert to buildplan dto"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cd75bbdf64a34f22eda6ce079d497a6bc3924379", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/cd75bbdf64a34f22eda6ce079d497a6bc3924379", "committedDate": "2020-10-22T12:21:24Z", "message": "fix jackson parsing"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a8d5e2415661c669fe60c4d819897c1d6708ec93", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/a8d5e2415661c669fe60c4d819897c1d6708ec93", "committedDate": "2020-10-22T12:23:03Z", "message": "add BambooCommitDTO"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5dd8a00a8a0e9d8057c49976f8c83b92a3fcf81a", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/5dd8a00a8a0e9d8057c49976f8c83b92a3fcf81a", "committedDate": "2020-10-22T12:24:48Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/fe8940b9bfc193896e413207eaf4981cdf2530fd", "committedDate": "2020-10-26T14:01:30Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE4NTEwOTkx", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-518510991", "createdAt": "2020-10-28T10:19:44Z", "commit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "85566e67c5a8bf8ea99502cc3cbc804d7d157058", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/85566e67c5a8bf8ea99502cc3cbc804d7d157058", "committedDate": "2020-10-28T19:08:25Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDAxNzUw", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519001750", "createdAt": "2020-10-28T19:12:00Z", "commit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDA0NzAw", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519004700", "createdAt": "2020-10-28T19:15:58Z", "commit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToxNTo1OFrOHp5uOw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOFQxOToxNTo1OFrOHp5uOw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzY5OTM4Nw==", "bodyText": "Maybe add here also a constructor, like for BitbucketCloneDTO :)", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r513699387", "createdAt": "2020-10-28T19:15:58Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketCloneDTO.java", "diffHunk": "@@ -30,6 +36,15 @@ public void setCloneDetails(CloneDetailsDTO cloneDetails) {\n         this.cloneDetails = cloneDetails;\n     }\n \n+    /**\n+     * Creating a description for the console log\n+     * @return description with name and project key\n+     */\n+    @Override\n+    public String toString() {\n+        return \"BitbucketCloneDTO{\" + \"name='\" + name + '\\'' + \", cloneDetails=\" + cloneDetails.toString() + '}';\n+    }\n+\n     public static final class CloneDetailsDTO {\n ", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDA1NDY2", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519005466", "createdAt": "2020-10-28T19:17:00Z", "commit": {"oid": "fe8940b9bfc193896e413207eaf4981cdf2530fd"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac5c71762690554fe29a2886894ae66efb8541d5", "committedDate": "2020-10-28T19:22:16Z", "message": "add empty constructors for DTOs"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDIzNzEy", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519023712", "createdAt": "2020-10-28T19:42:40Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MDMzNzc5", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519033779", "createdAt": "2020-10-28T19:56:28Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MTkwMjU3", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519190257", "createdAt": "2020-10-29T00:10:33Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5Mjg5NTY5", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519289569", "createdAt": "2020-10-29T02:36:28Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjozNjoyOFrOHqFcLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwMjozNjoyOFrOHqFcLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMzg5MTM3Mg==", "bodyText": "This can be shortened to buildResult.getPlan().getKey().", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r513891372", "createdAt": "2020-10-29T02:36:28Z", "author": {"login": "kloessst"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java", "diffHunk": "@@ -496,11 +496,10 @@ public void updatePlanRepository(String bambooProject, String buildPlanKey, Stri\n      */\n     @Override\n     public String getPlanKey(Object requestBody) throws BambooException {\n-        // TODO: convert into a proper DTO object to avoid unchecked Map casts\n         try {\n-            Map<String, Object> requestBodyMap = (Map<String, Object>) requestBody;\n-            Map<String, Object> planMap = (Map<String, Object>) requestBodyMap.get(\"plan\");\n-            return (String) planMap.get(\"key\");\n+            final var buildResult = mapper.convertValue(requestBody, BambooBuildResultNotificationDTO.class);\n+            var plan = buildResult.getPlan();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "originalPosition": 10}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5MzU1NDQ1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519355445", "createdAt": "2020-10-29T06:09:06Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NDM4MDk0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519438094", "createdAt": "2020-10-29T08:41:12Z", "commit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODo0MToxMlrOHqRcXA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQwODo0MToxMlrOHqRcXA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDA4ODAyOA==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                        var plan = buildResult.getPlan();\n          \n          \n            \n                        return plan.getKey();\n          \n          \n            \n                        return buildResult.getPlan().getKey();", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514088028", "createdAt": "2020-10-29T08:41:12Z", "author": {"login": "derLalla"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java", "diffHunk": "@@ -496,11 +496,10 @@ public void updatePlanRepository(String bambooProject, String buildPlanKey, Stri\n      */\n     @Override\n     public String getPlanKey(Object requestBody) throws BambooException {\n-        // TODO: convert into a proper DTO object to avoid unchecked Map casts\n         try {\n-            Map<String, Object> requestBodyMap = (Map<String, Object>) requestBody;\n-            Map<String, Object> planMap = (Map<String, Object>) requestBodyMap.get(\"plan\");\n-            return (String) planMap.get(\"key\");\n+            final var buildResult = mapper.convertValue(requestBody, BambooBuildResultNotificationDTO.class);\n+            var plan = buildResult.getPlan();\n+            return plan.getKey();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac5c71762690554fe29a2886894ae66efb8541d5"}, "originalPosition": 11}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "10af0efb96c5b878db8ec77b655d353172905bcb", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/10af0efb96c5b878db8ec77b655d353172905bcb", "committedDate": "2020-10-29T08:41:26Z", "message": "Update src/main/java/de/tum/in/www1/artemis/service/connectors/bamboo/BambooService.java"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36", "author": {"user": {"login": "derLalla", "name": "Ren\u00e9 Lalla"}}, "url": "https://github.com/ls1intum/Artemis/commit/21aaac3147d9580b62e55ea7e694dfa507995b36", "committedDate": "2020-10-29T10:22:42Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MTQw", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525140", "createdAt": "2020-10-29T10:27:46Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0NlrOHqVdWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0NlrOHqVdWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzgxNg==", "bodyText": "Codacy found an issue: Avoid reassigning parameters such as 'sourceRepoName'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153816", "createdAt": "2020-10-29T10:27:46Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -118,24 +126,29 @@ public void mockAddWebHooks(ProgrammingExercise exercise) throws IOException {\n                 .andExpect(method(HttpMethod.POST)).andRespond(withStatus(HttpStatus.OK));\n     }\n \n-    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username) throws URISyntaxException, IOException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {\n         final var projectKey = exercise.getProjectKey();\n         final var templateRepoName = exercise.getProjectKey().toLowerCase() + \"-\" + RepositoryType.TEMPLATE.getName();\n         final var clonedRepoName = projectKey.toLowerCase() + \"-\" + username.toLowerCase();\n \n-        mockCopyRepository(projectKey, projectKey, templateRepoName, clonedRepoName);\n+        mockCopyRepository(projectKey, projectKey, templateRepoName, clonedRepoName, status);\n     }\n \n     public void mockCopyRepository(String sourceProjectKey, String targetProjectKey, String sourceRepoName, String targetRepoName)\n             throws JsonProcessingException, URISyntaxException {\n+        mockCopyRepository(sourceProjectKey, targetProjectKey, sourceRepoName, targetRepoName, HttpStatus.CREATED);\n+    }\n+\n+    public void mockCopyRepository(String sourceProjectKey, String targetProjectKey, String sourceRepoName, String targetRepoName, HttpStatus httpStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MTU1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525155", "createdAt": "2020-10-29T10:27:47Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0N1rOHqVdag==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0N1rOHqVdag==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzgzNA==", "bodyText": "Codacy found an issue: Document empty constructor", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153834", "createdAt": "2020-10-29T10:27:47Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketBranchProtectionDTO.java", "diffHunk": "@@ -9,6 +9,12 @@\n \n     private MatcherDTO matcher;\n \n+    /**\n+     * needed for Jackson\n+     */\n+    public BitbucketBranchProtectionDTO() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MTcz", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525173", "createdAt": "2020-10-29T10:27:48Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0OFrOHqVdeQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0OFrOHqVdeQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzg0OQ==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153849", "createdAt": "2020-10-29T10:27:48Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MTkx", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525191", "createdAt": "2020-10-29T10:27:49Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0OVrOHqVdhQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo0OVrOHqVdhQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzg2MQ==", "bodyText": "Codacy found an issue: Useless parentheses.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153861", "createdAt": "2020-10-29T10:27:49Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -146,24 +159,59 @@ public void mockGetBitbucketRepository(ProgrammingExercise exercise, String bitb\n                 .andRespond(withStatus(HttpStatus.OK).contentType(MediaType.APPLICATION_JSON).body(mapper.writeValueAsString(bitbucketRepository)));\n     }\n \n-    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users) throws URISyntaxException, IOException {\n+    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users, boolean ltiUserExists) throws URISyntaxException, IOException {\n         final var projectKey = exercise.getProjectKey();\n         final var repoName = projectKey.toLowerCase() + \"-\" + username.toLowerCase();\n         for (User user : users) {\n             if (exercise.hasCourse()) {\n-                mockGiveWritePermission(exercise, repoName, user.getLogin());\n+                // add mock for userExists() check, if the username contains edx_ or u4i_\n+                String loginName = user.getLogin();\n+                if (userPrefixEdx.isPresent() && loginName.startsWith(userPrefixEdx.get()) || userPrefixU4I.isPresent() && loginName.startsWith((userPrefixU4I.get()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 125}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjA1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525205", "createdAt": "2020-10-29T10:27:50Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MFrOHqVdlg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MFrOHqVdlg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzg3OA==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153878", "createdAt": "2020-10-29T10:27:50Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -118,24 +126,29 @@ public void mockAddWebHooks(ProgrammingExercise exercise) throws IOException {\n                 .andExpect(method(HttpMethod.POST)).andRespond(withStatus(HttpStatus.OK));\n     }\n \n-    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username) throws URISyntaxException, IOException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {\n         final var projectKey = exercise.getProjectKey();\n         final var templateRepoName = exercise.getProjectKey().toLowerCase() + \"-\" + RepositoryType.TEMPLATE.getName();\n         final var clonedRepoName = projectKey.toLowerCase() + \"-\" + username.toLowerCase();\n \n-        mockCopyRepository(projectKey, projectKey, templateRepoName, clonedRepoName);\n+        mockCopyRepository(projectKey, projectKey, templateRepoName, clonedRepoName, status);\n     }\n \n     public void mockCopyRepository(String sourceProjectKey, String targetProjectKey, String sourceRepoName, String targetRepoName)\n             throws JsonProcessingException, URISyntaxException {\n+        mockCopyRepository(sourceProjectKey, targetProjectKey, sourceRepoName, targetRepoName, HttpStatus.CREATED);\n+    }\n+\n+    public void mockCopyRepository(String sourceProjectKey, String targetProjectKey, String sourceRepoName, String targetRepoName, HttpStatus httpStatus)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 98}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjIw", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525220", "createdAt": "2020-10-29T10:27:51Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MVrOHqVdpA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MVrOHqVdpA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzg5Mg==", "bodyText": "Codacy found an issue: An empty method in an abstract class should be abstract instead", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153892", "createdAt": "2020-10-29T10:27:51Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/AbstractSpringIntegrationJenkinsGitlabTest.java", "diffHunk": "@@ -89,7 +90,13 @@ public void mockConnectorRequestsForSetup(ProgrammingExercise exercise) throws E\n     }\n \n     @Override\n-    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users) throws IOException, URISyntaxException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {\n+        // TODO: implement\n+    }\n+\n+    @Override\n+    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users, boolean ltiUserExists)", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 18}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjI4", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525228", "createdAt": "2020-10-29T10:27:52Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MlrOHqVdqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1MlrOHqVdqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzg5Nw==", "bodyText": "Codacy found an issue: Avoid unused local variables such as 'repoName'.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153897", "createdAt": "2020-10-29T10:27:52Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.INTERNAL_SERVER_ERROR);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testBadRequestError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.BAD_REQUEST);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testConflictError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for Conflict exception\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CONFLICT);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), true);\n+\n+        // Start participation\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void configureRepository_testBadRequestError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        final var username = team.getParticipantIdentifier();\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, username, HttpStatus.CREATED);\n+        final var projectKey = exercise.getProjectKey();\n+        final var repoName = projectKey.toLowerCase() + \"-\" + username.toLowerCase();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 229}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjM2", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525236", "createdAt": "2020-10-29T10:27:53Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1M1rOHqVdsw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1M1rOHqVdsw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzkwNw==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153907", "createdAt": "2020-10-29T10:27:53Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjQ1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525245", "createdAt": "2020-10-29T10:27:54Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NFrOHqVduQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NFrOHqVduQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzkxMw==", "bodyText": "Codacy found an issue: The instance method name 'copyRepository_testConflictError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153913", "createdAt": "2020-10-29T10:27:54Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.INTERNAL_SERVER_ERROR);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testBadRequestError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.BAD_REQUEST);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testConflictError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 190}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjU1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525255", "createdAt": "2020-10-29T10:27:54Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NFrOHqVdwg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NFrOHqVdwg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzkyMg==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153922", "createdAt": "2020-10-29T10:27:54Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -146,24 +159,59 @@ public void mockGetBitbucketRepository(ProgrammingExercise exercise, String bitb\n                 .andRespond(withStatus(HttpStatus.OK).contentType(MediaType.APPLICATION_JSON).body(mapper.writeValueAsString(bitbucketRepository)));\n     }\n \n-    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users) throws URISyntaxException, IOException {\n+    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users, boolean ltiUserExists) throws URISyntaxException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 117}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MjY5", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525269", "createdAt": "2020-10-29T10:27:55Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NVrOHqVdzg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NVrOHqVdzg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1MzkzNA==", "bodyText": "Codacy found an issue: Document empty constructor", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153934", "createdAt": "2020-10-29T10:27:55Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jira/dto/JiraUserDTO.java", "diffHunk": "@@ -16,6 +20,41 @@\n \n     private JiraUserGroupsDTO groups;\n \n+    private List<String> applicationKeys = new ArrayList<>();\n+\n+    /**\n+     * needed for Jackson\n+     */\n+    public JiraUserDTO() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 27}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1Mjg1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525285", "createdAt": "2020-10-29T10:27:56Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NlrOHqVd3A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1NlrOHqVd3A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk0OA==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'copyRepository_testInternalServerError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153948", "createdAt": "2020-10-29T10:27:56Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -144,4 +144,34 @@ public void importProgrammingExercise_mode_changedToTeam() throws Exception {\n         programmingExerciseTestService.testImportProgrammingExercise_team_modeChange();\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        programmingExerciseTestService.configureRepository_createTeamUserWhenLtiUserIsNotExistent();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testInternalServerError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1Mjk0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525294", "createdAt": "2020-10-29T10:27:57Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1N1rOHqVd6A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1N1rOHqVd6A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk2MA==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153960", "createdAt": "2020-10-29T10:27:57Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -287,4 +337,16 @@ public void mockHealth(String state, HttpStatus httpStatus) throws URISyntaxExce\n         mockServer.expect(requestTo(uri)).andExpect(method(HttpMethod.GET))\n                 .andRespond(withStatus(httpStatus).contentType(MediaType.APPLICATION_JSON).body(mapper.writeValueAsString(response)));\n     }\n+\n+    public void mockFetchCommitInfo(String projectKey, String slug, String hash) throws URISyntaxException, JsonProcessingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 208}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzA0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525304", "createdAt": "2020-10-29T10:27:58Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1OFrOHqVd8w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1OFrOHqVd8w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk3MQ==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'copyRepository_testConflictError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153971", "createdAt": "2020-10-29T10:27:58Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -144,4 +144,34 @@ public void importProgrammingExercise_mode_changedToTeam() throws Exception {\n         programmingExerciseTestService.testImportProgrammingExercise_team_modeChange();\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        programmingExerciseTestService.configureRepository_createTeamUserWhenLtiUserIsNotExistent();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        programmingExerciseTestService.copyRepository_testInternalServerError();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testBadRequestError() throws Exception {\n+        programmingExerciseTestService.copyRepository_testBadRequestError();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testConflictError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 24}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzA5", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525309", "createdAt": "2020-10-29T10:27:59Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1OVrOHqVd-A==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyNzo1OVrOHqVd-A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk3Ng==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153976", "createdAt": "2020-10-29T10:27:59Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.INTERNAL_SERVER_ERROR);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testBadRequestError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.BAD_REQUEST);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testConflictError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for Conflict exception\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CONFLICT);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), true);\n+\n+        // Start participation\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void configureRepository_testBadRequestError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 212}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzE5", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525319", "createdAt": "2020-10-29T10:28:00Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMFrOHqVd_w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMFrOHqVd_w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk4Mw==", "bodyText": "Codacy found an issue: An empty method in an abstract class should be abstract instead", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153983", "createdAt": "2020-10-29T10:28:00Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/AbstractSpringIntegrationJenkinsGitlabTest.java", "diffHunk": "@@ -89,7 +90,13 @@ public void mockConnectorRequestsForSetup(ProgrammingExercise exercise) throws E\n     }\n \n     @Override\n-    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users) throws IOException, URISyntaxException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 13}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzM0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525334", "createdAt": "2020-10-29T10:28:01Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMVrOHqVeCg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMVrOHqVeCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1Mzk5NA==", "bodyText": "Codacy found an issue: Document empty constructor", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514153994", "createdAt": "2020-10-29T10:28:01Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketCloneDTO.java", "diffHunk": "@@ -9,6 +9,12 @@\n     @JsonProperty(\"project\")\n     private CloneDetailsDTO cloneDetails;\n \n+    /**\n+     * needed for Jackson\n+     */\n+    public BitbucketCloneDTO() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 7}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzUx", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525351", "createdAt": "2020-10-29T10:28:02Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMlrOHqVeFg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowMlrOHqVeFg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDAwNg==", "bodyText": "Codacy found an issue: Missing a Javadoc comment.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154006", "createdAt": "2020-10-29T10:28:02Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -227,19 +275,21 @@ public void mockCheckIfProjectExists(final ProgrammingExercise exercise, final b\n                 .andRespond(withStatus(HttpStatus.OK).contentType(MediaType.APPLICATION_JSON).body(mapper.writeValueAsString(searchResults)));\n     }\n \n-    public void mockGetExistingWebhooks(String projectKey, String repositoryName) throws URISyntaxException {\n+    public void mockGetExistingWebhooks(String projectKey, String repositoryName) throws URISyntaxException, JsonProcessingException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 181}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1MzU4", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525358", "createdAt": "2020-10-29T10:28:03Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowM1rOHqVeHA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowM1rOHqVeHA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDAxMg==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'configureRepository_createTeamUserWhenLtiUserIsNotExistent' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154012", "createdAt": "2020-10-29T10:28:03Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -144,4 +144,34 @@ public void importProgrammingExercise_mode_changedToTeam() throws Exception {\n         programmingExerciseTestService.testImportProgrammingExercise_team_modeChange();\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 6}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1Mzc0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525374", "createdAt": "2020-10-29T10:28:04Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNFrOHqVeLA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNFrOHqVeLA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDAyOA==", "bodyText": "Codacy found an issue: Document empty constructor", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154028", "createdAt": "2020-10-29T10:28:04Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/jira/dto/JiraUserDTO.java", "diffHunk": "@@ -79,6 +126,12 @@ public void setItems(Set<JiraUserGroupDTO> items) {\n \n         private URL self;\n \n+        /**\n+         * needed for Jackson\n+         */\n+        public JiraUserGroupDTO() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 82}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1Mzky", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525392", "createdAt": "2020-10-29T10:28:05Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNVrOHqVeNQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNVrOHqVeNQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDAzNw==", "bodyText": "Codacy found an issue: The instance method name 'copyRepository_testInternalServerError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154037", "createdAt": "2020-10-29T10:28:05Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 138}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1NDA1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525405", "createdAt": "2020-10-29T10:28:06Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNlrOHqVeQg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowNlrOHqVeQg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDA1MA==", "bodyText": "Codacy found an issue: The instance method name 'copyRepository_testBadRequestError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154050", "createdAt": "2020-10-29T10:28:06Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // create a team for the user (necessary condition before starting an exercise)\n+        final String edxUsername = userPrefixEdx.get() + \"student\";\n+        User edxStudent = ModelFactory.generateActivatedUsers(edxUsername, new String[] { \"tumuser\", \"testgroup\" }, Set.of(new Authority(AuthoritiesConstants.USER)), 1).get(0);\n+        edxStudent.setPassword(userService.encryptor().encrypt(edxStudent.getPassword()));\n+        edxStudent = userRepo.save(edxStudent);\n+        Set<User> students = Set.of(edxStudent);\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Student was correctly added to team\").hasSize(1);\n+\n+        // Set up mock requests for start participation and that a lti user is not existent\n+        final boolean ltiUserExists = false;\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.CREATED);\n+        mockDelegate.mockConnectorRequestsForStartParticipation(exercise, team.getParticipantIdentifier(), team.getStudents(), ltiUserExists);\n+\n+        // Start participation with original team\n+        participationService.startExercise(exercise, team, false);\n+    }\n+\n+    // TEST\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        exercise.setMode(ExerciseMode.TEAM);\n+        programmingExerciseRepository.save(exercise);\n+        database.addTemplateParticipationForProgrammingExercise(exercise);\n+        database.addSolutionParticipationForProgrammingExercise(exercise);\n+\n+        // Create a team with students\n+        Set<User> students = new HashSet<>(userRepo.findAllInGroup(\"tumuser\"));\n+        Team team = new Team().name(\"Team 1\").shortName(teamShortName).exercise(exercise).students(students);\n+        team = teamService.save(exercise, team);\n+\n+        assertThat(team.getStudents()).as(\"Students were correctly added to team\").hasSize(numberOfStudents);\n+\n+        // test for internal server error\n+        mockDelegate.mockCopyRepositoryForParticipation(exercise, team.getParticipantIdentifier(), HttpStatus.INTERNAL_SERVER_ERROR);\n+\n+        // Start participation\n+        try {\n+            participationService.startExercise(exercise, team, false);\n+        }\n+        catch (BitbucketException e) {\n+            assertThat(e.getMessage()).isEqualTo(\"Error while forking repository\");\n+        }\n+    }\n+\n+    // TEST\n+    public void copyRepository_testBadRequestError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 164}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1NDE0", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525414", "createdAt": "2020-10-29T10:28:07Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowN1rOHqVeRw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowN1rOHqVeRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDA1NQ==", "bodyText": "Codacy found an issue: The instance method name 'configureRepository_createTeamUserWhenLtiUserIsNotExistent' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154055", "createdAt": "2020-10-29T10:28:07Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/util/ProgrammingExerciseTestService.java", "diffHunk": "@@ -585,6 +600,137 @@ public void repositoryAccessIsRemoved_whenStudentIsRemovedFromTeam() throws Exce\n         }\n     }\n \n+    // TEST\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 111}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1NDIx", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525421", "createdAt": "2020-10-29T10:28:08Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowOFrOHqVeTg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowOFrOHqVeTg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDA2Mg==", "bodyText": "Codacy found an issue: Avoid using implementation types like 'ArrayList'; use the interface instead", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154062", "createdAt": "2020-10-29T10:28:08Z", "author": {"login": "artemis-bot"}, "path": "src/main/java/de/tum/in/www1/artemis/service/connectors/bitbucket/dto/BitbucketWebHookDTO.java", "diffHunk": "@@ -0,0 +1,61 @@\n+package de.tum.in.www1.artemis.service.connectors.bitbucket.dto;\n+\n+import java.util.ArrayList;\n+\n+import com.fasterxml.jackson.annotation.JsonIgnoreProperties;\n+\n+@JsonIgnoreProperties(ignoreUnknown = true)\n+public class BitbucketWebHookDTO {\n+\n+    private Integer id;\n+\n+    private String name;\n+\n+    private String url;\n+\n+    private ArrayList<String> events;\n+\n+    public Integer getId() {\n+        return id;\n+    }\n+\n+    public void setId(Integer id) {\n+        this.id = id;\n+    }\n+\n+    public String getName() {\n+        return name;\n+    }\n+\n+    public void setName(String name) {\n+        this.name = name;\n+    }\n+\n+    public String getUrl() {\n+        return url;\n+    }\n+\n+    public void setUrl(String url) {\n+        this.url = url;\n+    }\n+\n+    public ArrayList<String> getEvents() {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 42}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NTI1NDM2", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519525436", "createdAt": "2020-10-29T10:28:09Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowOVrOHqVeWA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMDoyODowOVrOHqVeWA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDE1NDA3Mg==", "bodyText": "Codacy found an issue: The JUnit 5 test method name 'configureRepository_testBadRequestError' doesn't match '[a-z][a-zA-Z0-9]*'", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514154072", "createdAt": "2020-10-29T10:28:09Z", "author": {"login": "artemis-bot"}, "path": "src/test/java/de/tum/in/www1/artemis/programmingexercise/ProgrammingExerciseBitbucketBambooIntegrationTest.java", "diffHunk": "@@ -144,4 +144,34 @@ public void importProgrammingExercise_mode_changedToTeam() throws Exception {\n         programmingExerciseTestService.testImportProgrammingExercise_team_modeChange();\n     }\n \n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void configureRepository_createTeamUserWhenLtiUserIsNotExistent() throws Exception {\n+        programmingExerciseTestService.configureRepository_createTeamUserWhenLtiUserIsNotExistent();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testInternalServerError() throws Exception {\n+        programmingExerciseTestService.copyRepository_testInternalServerError();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testBadRequestError() throws Exception {\n+        programmingExerciseTestService.copyRepository_testBadRequestError();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void copyRepository_testConflictError() throws Exception {\n+        programmingExerciseTestService.copyRepository_testConflictError();\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void configureRepository_testBadRequestError() throws Exception {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "originalPosition": 30}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5NzMyNjU2", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519732656", "createdAt": "2020-10-29T14:35:53Z", "commit": {"oid": "21aaac3147d9580b62e55ea7e694dfa507995b36"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "206ae9b6a9e0352ea4687424eb659caf25b4c029", "author": {"user": {"login": "krusche", "name": "Stephan Krusche"}}, "url": "https://github.com/ls1intum/Artemis/commit/206ae9b6a9e0352ea4687424eb659caf25b4c029", "committedDate": "2020-10-29T16:15:27Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e", "author": {"user": {"login": "anditurdiu", "name": "Andi Turdiu"}}, "url": "https://github.com/ls1intum/Artemis/commit/d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e", "committedDate": "2020-10-29T19:09:02Z", "message": "Merge branch 'develop' into chore/improve-test-coverage/improve-bitbucket-service"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "21ba63b9d1a794c2044375fc017ccc2bf09549bc", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/21ba63b9d1a794c2044375fc017ccc2bf09549bc", "committedDate": "2020-10-29T19:13:37Z", "message": "change to List"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e4e0d0ea7a90a405722bb0fe449bf64eb2a2d2a8", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/e4e0d0ea7a90a405722bb0fe449bf64eb2a2d2a8", "committedDate": "2020-10-29T19:16:37Z", "message": "change to List"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTE5OTk2MDM2", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-519996036", "createdAt": "2020-10-29T19:17:14Z", "commit": {"oid": "d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxNzoxNFrOHqq93g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxOToxOToyNFrOHqrCSA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwNjIwNg==", "bodyText": "The codacy point here I believe is valid. If you make this method abstract you can ensure that it is not called accidentally while it is not implemented.", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514506206", "createdAt": "2020-10-29T19:17:14Z", "author": {"login": "anditurdiu"}, "path": "src/test/java/de/tum/in/www1/artemis/AbstractSpringIntegrationJenkinsGitlabTest.java", "diffHunk": "@@ -89,7 +90,13 @@ public void mockConnectorRequestsForSetup(ProgrammingExercise exercise) throws E\n     }\n \n     @Override\n-    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users) throws IOException, URISyntaxException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e"}, "originalPosition": 13}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwNjY2MQ==", "bodyText": "Same here: An empty method in an abstract class should be abstract instead", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514506661", "createdAt": "2020-10-29T19:18:10Z", "author": {"login": "anditurdiu"}, "path": "src/test/java/de/tum/in/www1/artemis/AbstractSpringIntegrationJenkinsGitlabTest.java", "diffHunk": "@@ -89,7 +90,13 @@ public void mockConnectorRequestsForSetup(ProgrammingExercise exercise) throws E\n     }\n \n     @Override\n-    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users) throws IOException, URISyntaxException {\n+    public void mockCopyRepositoryForParticipation(ProgrammingExercise exercise, String username, HttpStatus status) throws URISyntaxException, IOException {\n+        // TODO: implement\n+    }\n+\n+    @Override\n+    public List<Verifiable> mockConnectorRequestsForStartParticipation(ProgrammingExercise exercise, String username, Set<User> users, boolean ltiUserExists)\n+            throws IOException, URISyntaxException {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDUwNzMzNg==", "bodyText": "Suggested change\n        \n          \n    \n\n        \n      \n    \n    \n      \n          \n            \n                            if (userPrefixEdx.isPresent() && loginName.startsWith(userPrefixEdx.get()) || userPrefixU4I.isPresent() && loginName.startsWith((userPrefixU4I.get()))) {\n          \n          \n            \n                            if (userPrefixEdx.isPresent() && loginName.startsWith(userPrefixEdx.get()) || userPrefixU4I.isPresent() && loginName.startsWith(userPrefixU4I.get())) {", "url": "https://github.com/ls1intum/Artemis/pull/2247#discussion_r514507336", "createdAt": "2020-10-29T19:19:24Z", "author": {"login": "anditurdiu"}, "path": "src/test/java/de/tum/in/www1/artemis/connector/bitbucket/BitbucketRequestMockProvider.java", "diffHunk": "@@ -146,24 +159,59 @@ public void mockGetBitbucketRepository(ProgrammingExercise exercise, String bitb\n                 .andRespond(withStatus(HttpStatus.OK).contentType(MediaType.APPLICATION_JSON).body(mapper.writeValueAsString(bitbucketRepository)));\n     }\n \n-    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users) throws URISyntaxException, IOException {\n+    public void mockConfigureRepository(ProgrammingExercise exercise, String username, Set<User> users, boolean ltiUserExists) throws URISyntaxException, IOException {\n         final var projectKey = exercise.getProjectKey();\n         final var repoName = projectKey.toLowerCase() + \"-\" + username.toLowerCase();\n         for (User user : users) {\n             if (exercise.hasCourse()) {\n-                mockGiveWritePermission(exercise, repoName, user.getLogin());\n+                // add mock for userExists() check, if the username contains edx_ or u4i_\n+                String loginName = user.getLogin();\n+                if (userPrefixEdx.isPresent() && loginName.startsWith(userPrefixEdx.get()) || userPrefixU4I.isPresent() && loginName.startsWith((userPrefixU4I.get()))) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d9b2ca1989c9fe059e1c2ee666eeb50105b77b4e"}, "originalPosition": 125}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "fbf30cd87d737260b974631ecdda379b85773f2f", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/fbf30cd87d737260b974631ecdda379b85773f2f", "committedDate": "2020-10-29T19:26:18Z", "message": "remove unnecessary brackets"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDAzNTU1", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-520003555", "createdAt": "2020-10-29T19:27:55Z", "commit": {"oid": "fbf30cd87d737260b974631ecdda379b85773f2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDI5OTkz", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-520029993", "createdAt": "2020-10-29T19:55:41Z", "commit": {"oid": "fbf30cd87d737260b974631ecdda379b85773f2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTIwMDM4MDkw", "url": "https://github.com/ls1intum/Artemis/pull/2247#pullrequestreview-520038090", "createdAt": "2020-10-29T20:04:05Z", "commit": {"oid": "fbf30cd87d737260b974631ecdda379b85773f2f"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3916, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}