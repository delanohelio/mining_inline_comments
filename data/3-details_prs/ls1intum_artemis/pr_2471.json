{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTI4Njk1NTQ1", "number": 2471, "title": "Feature/user statistics", "bodyText": "Checklist\n\n I tested all changes and all related features with different users (student, tutor, instructor, admin) on the test server https://artemistest.ase.in.tum.de.\n Server: I followed the coding and design guidelines.\n Server: I added @PreAuthorize and check the course groups for all new REST Calls (security)\n Server: I implemented the changes with a good performance and prevented too many database calls\n Server: I documented the Java code using JavaDoc style.\n Client: I followed the coding and design guidelines.\n Client: I documented the TypeScript code using JSDoc style.\n Client: I added multiple screenshots/screencasts of my UI changes\n Client: I translated all the newly inserted strings into German and English\n\nDescription\n\n\nSubmission graph for the user statistics page\nKept some unused server-side methods for follow-up features (see StatisticsResource, StatisticsService, StatisticsRepository)\n\nUPDATE: Year, Month and Day are also implemented now\nSteps for Testing\n\n\nLog in to Artemis\nNavigate to user statistics in the Server Administration tab\nCheck that no errors are thrown\nMake a submission and check that the current day in the graph has a submission more (for Week, Month), the corresponding month in the year Tab and that the time in the Day Tab is correct\n\nScreenshots", "createdAt": "2020-11-27T16:19:26Z", "url": "https://github.com/ls1intum/Artemis/pull/2471", "merged": true, "mergeCommit": {"oid": "2890916cf20a61a62b8f4369c7002c64704d0774"}, "closed": true, "closedAt": "2020-12-03T20:06:23Z", "author": {"login": "FuchsDominik"}, "timelineItems": {"totalCount": 76, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABdduU-dgH2gAyNTI4Njk1NTQ1OjA3YmY4MDAwMzFiN2EyOGMyODk0Y2JhOWYyNTdjZjE3OWUxZDk2OTA=", "endCursor": "Y3Vyc29yOnYyOpPPAAABdio2ELgFqTU0NDM3MTU2NQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "07bf800031b7a28c2894cba9f257cf179e1d9690", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/07bf800031b7a28c2894cba9f257cf179e1d9690", "committedDate": "2020-11-18T13:39:35Z", "message": "first statistics changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "237fa4c1b5d62544d8acf45eff322951d46e24ca", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/237fa4c1b5d62544d8acf45eff322951d46e24ca", "committedDate": "2020-11-18T17:13:33Z", "message": "refactoring, not finished"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "8fd9708b21f3b4e5624f82983c67c35c7cf84339", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/8fd9708b21f3b4e5624f82983c67c35c7cf84339", "committedDate": "2020-11-18T17:14:31Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "add67a6275d793203cef64f2b73f098b618a8281", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/add67a6275d793203cef64f2b73f098b618a8281", "committedDate": "2020-11-20T16:58:03Z", "message": "users, active users and submission + some refactoring"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a6b68b747ba8a9e4751ee00943a94b188ab09363", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/a6b68b747ba8a9e4751ee00943a94b188ab09363", "committedDate": "2020-11-20T16:59:59Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d806e960ba684c38def630c5ea117d054d9e789", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/1d806e960ba684c38def630c5ea117d054d9e789", "committedDate": "2020-11-20T21:34:26Z", "message": "added 2 new pieces of information and extracted logic into repository"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "692040676db1b5d0eeca006847931eebe28d8e5e", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/692040676db1b5d0eeca006847931eebe28d8e5e", "committedDate": "2020-11-21T15:13:05Z", "message": "5 more aspects"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "7dfec269a1b23d123783c5e74dc810f533f6f345", "author": {"user": null}, "url": "https://github.com/ls1intum/Artemis/commit/7dfec269a1b23d123783c5e74dc810f533f6f345", "committedDate": "2020-11-21T15:13:36Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a2ac2cb368051d536a64273a489cb79a9bdb3d8d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a2ac2cb368051d536a64273a489cb79a9bdb3d8d", "committedDate": "2020-11-21T15:40:26Z", "message": "test commit"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cc8fa323abc79b4610b93913d206f9020bbb2b97", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/cc8fa323abc79b4610b93913d206f9020bbb2b97", "committedDate": "2020-11-21T16:10:21Z", "message": "feedback implemented"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "2677ff3bc025a91c337345786b578578cf238d2f", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/2677ff3bc025a91c337345786b578578cf238d2f", "committedDate": "2020-11-21T16:48:53Z", "message": "smaller fixes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e060a61a4235cd277b8f201ce165dc9c1ca4b54c", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e060a61a4235cd277b8f201ce165dc9c1ca4b54c", "committedDate": "2020-11-23T10:00:01Z", "message": "start chart method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e6a3f4db5198403c38d67e8b68596a874037fd2d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e6a3f4db5198403c38d67e8b68596a874037fd2d", "committedDate": "2020-11-23T10:00:50Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "6a877159af0d79ce866803ef5c55c54809a50485", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/6a877159af0d79ce866803ef5c55c54809a50485", "committedDate": "2020-11-24T20:37:41Z", "message": "two bar charts"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a3ee71192436db7adc679b27996695b2e3a88a92", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a3ee71192436db7adc679b27996695b2e3a88a92", "committedDate": "2020-11-26T08:57:07Z", "message": "push server changes"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "a1363a012a75eefd126cbed5fed1342d8c6a7f89", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/a1363a012a75eefd126cbed5fed1342d8c6a7f89", "committedDate": "2020-11-27T11:32:23Z", "message": "added first graph with real values"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ee8f7c6e07ac1e3cddb5441fa33978b6b23ccd87", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ee8f7c6e07ac1e3cddb5441fa33978b6b23ccd87", "committedDate": "2020-11-27T11:33:11Z", "message": "removed StatisticsObject"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "b224b0adeaa80cf1fd6a0cdac7bb0773154e1497", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/b224b0adeaa80cf1fd6a0cdac7bb0773154e1497", "committedDate": "2020-11-27T11:33:28Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "46c81aa6081caa603d5713a1e10b4d0b69151dd0", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/46c81aa6081caa603d5713a1e10b4d0b69151dd0", "committedDate": "2020-11-27T15:00:47Z", "message": "worked on year tab, week working"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "228da8ae7b96b1d35e110dc8a01aebe969812c5a", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/228da8ae7b96b1d35e110dc8a01aebe969812c5a", "committedDate": "2020-11-27T19:07:41Z", "message": "Refactored unused stuff"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "cb02d3091ecb1d6f67cdf3d53e237668cdeb54e5", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/cb02d3091ecb1d6f67cdf3d53e237668cdeb54e5", "committedDate": "2020-11-27T19:08:23Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ac7257d174ed321c706cf7f8a28037403a3871ae", "committedDate": "2020-11-27T19:44:24Z", "message": "Codacy"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMTc2OTYx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540176961", "createdAt": "2020-11-27T19:58:34Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMTc3Mjg0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540177284", "createdAt": "2020-11-27T19:59:47Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMTc5NDkz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540179493", "createdAt": "2020-11-27T20:09:04Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMjEwNjQy", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540210642", "createdAt": "2020-11-27T23:29:59Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzUwMDA4", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540350008", "createdAt": "2020-11-28T07:46:25Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwNzo0NjoyNVrOH7Wmyg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQwODozNzoxOFrOH7XEcw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMTk5ODQxMA==", "bodyText": "why is where s.submissionDate > '1970-01-01 00:00:01' in there?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r531998410", "createdAt": "2020-11-28T07:46:25Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\")\n+    Integer getExerciseDeadlines(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}\")\n+    Integer getConductedExams(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct se.id) from StudentExam se, Exam e where se.submitted = true and se.exam = e and e.endDate >= :#{#span}\")\n+    Integer getExamParticipations(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select sum(e.registeredUsers.size) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}\")\n+    Integer getExamRegistrations(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct r.assessor.id) from Result r where (r.assessmentType = 'MANUAL' or r.assessmentType = 'SEMI-AUTOMATIC') and r.completionDate >= :#{#span}\")\n+    Integer getActiveTutors(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct r.id) from Result r where r.completionDate >= :#{#span}\")\n+    Integer getCreatedResults(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select sum(r.feedbacks.size) from Result r where r.completionDate >= :#{#span}\")\n+    Integer getResultFeedbacks(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select 'DATE(s.submissionDate)' as day, count(s.id) as amount from Submission s where s.submissionDate > '1970-01-01 00:00:01' group by 'DATE(s.submissionDate)' order by 'DATE(s.submissionDate)' asc\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 54}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwMDQzMg==", "bodyText": "is it correct that getTotalSumbmissionsDay has no ZonedDateTime parameter name?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532000432", "createdAt": "2020-11-28T07:49:04Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\")\n+    Integer getExerciseDeadlines(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}\")\n+    Integer getConductedExams(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct se.id) from StudentExam se, Exam e where se.submitted = true and se.exam = e and e.endDate >= :#{#span}\")\n+    Integer getExamParticipations(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select sum(e.registeredUsers.size) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}\")\n+    Integer getExamRegistrations(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct r.assessor.id) from Result r where (r.assessmentType = 'MANUAL' or r.assessmentType = 'SEMI-AUTOMATIC') and r.completionDate >= :#{#span}\")\n+    Integer getActiveTutors(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct r.id) from Result r where r.completionDate >= :#{#span}\")\n+    Integer getCreatedResults(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select sum(r.feedbacks.size) from Result r where r.completionDate >= :#{#span}\")\n+    Integer getResultFeedbacks(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select 'DATE(s.submissionDate)' as day, count(s.id) as amount from Submission s where s.submissionDate > '1970-01-01 00:00:01' group by 'DATE(s.submissionDate)' order by 'DATE(s.submissionDate)' asc\")\n+    List<Map<String, Object>> getTotalSubmissionsDay();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 55}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwMjYyNg==", "bodyText": "I think we should use a Map<ZonedDateTime, Integer> here.\nIt gives us the benefit that it will be compatible with the other cases of the switch statement and also improves readability when debugging.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532002626", "createdAt": "2020-11-28T07:57:42Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {\n+        return this.statisticsRepository.getLoggedInUsers(ZonedDateTime.now().minusDays(span).toInstant());\n+    }\n+\n+    public Integer getActiveUsers(Long span) {\n+        return this.statisticsRepository.getActiveUsers(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    /**\n+     * Forwards the request to the repository, which returns a List<Map<String, Object>>, with String being the column name, \"day\" and \"amount\" and Object being the value,\n+     * either the date or the amount of submissions. It then collects the amounts in an array, depending on the span value, and returns it\n+     *\n+     * @param span DAY,WEEK,MONTH or YEAR depending on the active tab in the view\n+     * @return a array, containing the values for each bar in the graph\n+     */\n+    public Integer[] getTotalSubmissions(String span) {\n+        switch (span) {\n+            case \"DAY\": // result = this.statisticsRepository.getTotalSubmissionsDay(ZonedDateTime.now().minusDays(7));\n+                return null;\n+            case \"WEEK\":\n+                Integer[] result = new Integer[7];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 41}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwMzA3NA==", "bodyText": "what is the distinct doing? we only query from one table -> id should be distinct anyway", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532003074", "createdAt": "2020-11-28T08:03:21Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 30}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwMzA5Ng==", "bodyText": "Same here", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532003096", "createdAt": "2020-11-28T08:03:36Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 33}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwMzEyNg==", "bodyText": "Same here", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532003126", "createdAt": "2020-11-28T08:03:57Z", "author": {"login": "TobiasPr"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,63 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exercise e where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\")\n+    Integer getExerciseDeadlines(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"select count(distinct e.id) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNDIwMg==", "bodyText": "Should we move this to a .model.ts?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532004202", "createdAt": "2020-11-28T08:16:05Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 10}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNDQ4NQ==", "bodyText": "use moment().daysInMonth()", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532004485", "createdAt": "2020-11-28T08:19:33Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {\n+    DAY = 'DAY',\n+    WEEK = 'WEEK',\n+    MONTH = 'MONTH',\n+    YEAR = 'YEAR',\n+}\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class JhiStatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                const days = this.daysInMonth();\n+                this.histogramData = Array(days).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    private daysInMonth(): number {\n+        return new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 64}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNTY0Nw==", "bodyText": "we shouldn't introduce the labels for weekdays, moment can give them to you momentObject.format('dddd')", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532005647", "createdAt": "2020-11-28T08:33:22Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {\n+    DAY = 'DAY',\n+    WEEK = 'WEEK',\n+    MONTH = 'MONTH',\n+    YEAR = 'YEAR',\n+}\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class JhiStatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                const days = this.daysInMonth();\n+                this.histogramData = Array(days).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    private daysInMonth(): number {\n+        return new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n+    }\n+\n+    async getSubmissions(): Promise<number[]> {\n+        return new Promise<number[]>((resolve, reject) => {\n+            this.service.getTotalSubmissions(this.span).subscribe((res: number[]) => {\n+                if (res !== null) {\n+                    resolve(res);\n+                } else {\n+                    reject('Submissions could not get fetched');\n+                }\n+            });\n+        });\n+    }\n+\n+    onTabChanged(span: string): void {\n+        switch (span) {\n+            case 'Day':\n+                this.span = SpanType.DAY;\n+                break;\n+            case 'Week':\n+                this.span = SpanType.WEEK;\n+                break;\n+            case 'Month':\n+                this.span = SpanType.MONTH;\n+                break;\n+            case 'Year':\n+                this.span = SpanType.YEAR;\n+                break;\n+        }\n+    }\n+    private getWeekdays(day: number): string[] {\n+        const days = [\n+            this.translateService.instant('weekdays.monday'),", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 97}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNTk4NQ==", "bodyText": "get rid of this", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532005985", "createdAt": "2020-11-28T08:37:04Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/i18n/en/statistics.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"statistics\": {\n+        \"amountOfStudents\": \"# of students\",\n+        \"span\": {\n+            \"day\": \"Day\",\n+            \"week\": \"Week\",\n+            \"month\": \"Month\",\n+            \"year\": \"Year\"\n+        },\n+        \"title\": \"User statistics\",\n+        \"days\": \" days\",\n+        \"loggedInUsers\": \"Amount of logins of distinct users in the last \",\n+        \"activeUsers\": \"Amount of logins of active users in the last \",\n+        \"totalSubmissions\": \"Total amount of submissions in the last \",\n+        \"exercises\": {\n+            \"released\": \"Total amount of released exercises in the last \",\n+            \"due\": \"Total amount of exercise deadlines in the last \"\n+        },\n+        \"conductedExams\": \"Total amount of conducted exams in the last \",\n+        \"examParticipation\": \" -> amount of student who participated: \",\n+        \"examRegistrations\": \" -> with the amount of students being registered in these exam: \",\n+        \"activeTutors\": \"Total amount of tutors which have created an assessment in the last \",\n+        \"results\": \"Total amount of results created in the last \",\n+        \"resultFeedbacks\": \"-> feedback count: \",\n+        \"userLogins\": \"User Logins\",\n+        \"submissions\": \"Submissions\"\n+    },\n+    \"weekdays\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 28}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAwNjAwMw==", "bodyText": "get rid of this", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532006003", "createdAt": "2020-11-28T08:37:18Z", "author": {"login": "TobiasPr"}, "path": "src/main/webapp/i18n/de/statistics.json", "diffHunk": "@@ -0,0 +1,37 @@\n+{\n+    \"statistics\": {\n+        \"amountOfStudents\": \"# an Studenten\",\n+        \"span\": {\n+            \"day\": \"Tag\",\n+            \"week\": \"Woche\",\n+            \"month\": \"Monat\",\n+            \"year\": \"Jahr\"\n+        },\n+        \"title\": \"Benutzer Statistiken\",\n+        \"days\": \" Tagen\",\n+        \"loggedInUsers\": \"Anzahl an Anmeldungen unterschiedlicher Benutzer in den letzten \",\n+        \"activeUsers\": \"Anzahl an Anmeldungen aktiver Benutzer in den letzten \",\n+        \"totalSubmissions\": \"Anzahl an Abgaben in den letzten \",\n+        \"exercises\": {\n+            \"released\": \"Anzahl an ver\u00f6ffentlichten Aufgaben in den letzten \",\n+            \"due\": \"Anzahl an Aufgaben mit einer Deadline in den letzten \"\n+        },\n+        \"conductedExams\": \"Anzahl an abgehaltenen Klausuen in den letzten \",\n+        \"examParticipation\": \" -> und Anzahl Studenten, die daran teilgenommen haben: \",\n+        \"examRegistrations\": \" -> Die Anzahl an Studenten mit einer Registrierung f\u00fcr die Klausur: \",\n+        \"activeTutors\": \"Anzahl der Tutoren, die eine Bewertung erstellt haben in den letzten \",\n+        \"results\": \"Anzahl erstellter Resultate in den letzten \",\n+        \"resultFeedbacks\": \"-> mit der absoluten Feedbackanzahl: \",\n+        \"userLogins\": \"Benutzer Anmeldungen\",\n+        \"submissions\": \"Abgaben\"\n+    },\n+    \"weekdays\": {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 28}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzcyNzIz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540372723", "createdAt": "2020-11-28T12:36:17Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "COMMENTED", "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMjozNjoxN1rOH7Y3Zw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0yOFQxMjozOTozNFrOH7Y4gQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzNTQzMQ==", "bodyText": "Why are you using a Promise here? Can't we work with Observables here as well?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532035431", "createdAt": "2020-11-28T12:36:17Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {\n+    DAY = 'DAY',\n+    WEEK = 'WEEK',\n+    MONTH = 'MONTH',\n+    YEAR = 'YEAR',\n+}\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class JhiStatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                const days = this.daysInMonth();\n+                this.histogramData = Array(days).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    private daysInMonth(): number {\n+        return new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n+    }\n+\n+    async getSubmissions(): Promise<number[]> {\n+        return new Promise<number[]>((resolve, reject) => {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzNTYyMw==", "bodyText": "You do not need parentheses here", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532035623", "createdAt": "2020-11-28T12:38:32Z", "author": {"login": "fde312"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,96 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {\n+        return this.statisticsRepository.getLoggedInUsers(ZonedDateTime.now().minusDays(span).toInstant());\n+    }\n+\n+    public Integer getActiveUsers(Long span) {\n+        return this.statisticsRepository.getActiveUsers(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    /**\n+     * Forwards the request to the repository, which returns a List<Map<String, Object>>, with String being the column name, \"day\" and \"amount\" and Object being the value,\n+     * either the date or the amount of submissions. It then collects the amounts in an array, depending on the span value, and returns it\n+     *\n+     * @param span DAY,WEEK,MONTH or YEAR depending on the active tab in the view\n+     * @return a array, containing the values for each bar in the graph\n+     */\n+    public Integer[] getTotalSubmissions(String span) {\n+        switch (span) {\n+            case \"DAY\": // result = this.statisticsRepository.getTotalSubmissionsDay(ZonedDateTime.now().minusDays(7));\n+                return null;\n+            case \"WEEK\":\n+                Integer[] result = new Integer[7];\n+                Arrays.fill(result, 0);\n+                ZonedDateTime border = ZonedDateTime.now().minusDays(6).withHour(0).withMinute(0).withSecond(0);\n+                List<Map<String, Object>> outcome = this.statisticsRepository.getTotalSubmissionsWeek(border);\n+                for (Map<String, Object> map : outcome) {\n+                    ZonedDateTime date = (ZonedDateTime) map.get(\"day\");\n+                    Integer amount = map.get(\"amount\") != null ? ((Long) map.get(\"amount\")).intValue() : null;\n+                    for (int i = 0; i < 7; i++) {\n+                        if (date.getDayOfMonth() == ZonedDateTime.now().minusDays(i).getDayOfMonth()) {\n+                            result[6 - i] += amount;\n+                        }\n+                    }\n+                }\n+                return result;\n+            case \"MONTH\":\n+                return null;\n+            case \"YEAR\":\n+                return null;\n+            default:\n+                return null;\n+        }\n+    }\n+\n+    public Integer getReleasedExercises(Long span) {\n+        return this.statisticsRepository.getReleasedExercises(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n+    }\n+\n+    public Integer getExerciseDeadlines(Long span) {\n+        return this.statisticsRepository.getExerciseDeadlines(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n+    }\n+\n+    public Integer getConductedExams(Long span) {\n+        return this.statisticsRepository.getConductedExams(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n+    }\n+\n+    public Integer getExamParticipations(Long span) {\n+        return this.statisticsRepository.getExamParticipations(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    public Integer getExamRegistrations(Long span) {\n+        return this.statisticsRepository.getExamRegistrations(ZonedDateTime.now().minusDays(span), ZonedDateTime.now());\n+    }\n+\n+    public Integer getActiveTutors(Long span) {\n+        return this.statisticsRepository.getActiveTutors(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    public Integer getCreatedResults(Long span) {\n+        return this.statisticsRepository.getCreatedResults(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    public Integer getResultFeedbacks(Long span) {\n+        Integer result = this.statisticsRepository.getResultFeedbacks(ZonedDateTime.now().minusDays(span));\n+        return (result != null ? result : 0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 94}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzNTcxMw==", "bodyText": "Just name it StatisticsComponent", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532035713", "createdAt": "2020-11-28T12:39:34Z", "author": {"login": "fde312"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {\n+    DAY = 'DAY',\n+    WEEK = 'WEEK',\n+    MONTH = 'MONTH',\n+    YEAR = 'YEAR',\n+}\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class JhiStatisticsComponent implements OnInit, OnChanges {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 21}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzc0NDk1", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540374495", "createdAt": "2020-11-28T13:09:36Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwMzc0ODU0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540374854", "createdAt": "2020-11-28T13:16:25Z", "commit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "499bb9fd70d8f4710fe3744189d0493f61a8db7d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/499bb9fd70d8f4710fe3744189d0493f61a8db7d", "committedDate": "2020-11-28T16:09:13Z", "message": "Integrate Code Reviews"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/0c261e7ea86df36f0fc1d13f0ac96f1864a3046a", "committedDate": "2020-11-28T16:10:34Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDk4NTIx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540498521", "createdAt": "2020-11-29T17:09:31Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDk4ODQx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540498841", "createdAt": "2020-11-29T17:14:00Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNDk4OTEy", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540498912", "createdAt": "2020-11-29T17:15:05Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzA2Mzkw", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540706390", "createdAt": "2020-11-30T08:58:48Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzk5MTAy", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540799102", "createdAt": "2020-11-30T10:57:45Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwNzk4Mjcz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540798273", "createdAt": "2020-11-30T10:56:38Z", "commit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo1NjozOFrOH710Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxMDo1NjozOFrOH710Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjUwOTc1NA==", "bodyText": "You could probably change this to 'api/management/statistics/' and adjust the other urls.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532509754", "createdAt": "2020-11-30T10:56:38Z", "author": {"login": "sjagla27"}, "path": "src/main/webapp/app/admin/statistics/statistics.service.ts", "diffHunk": "@@ -0,0 +1,100 @@\n+import { Injectable } from '@angular/core';\n+import { HttpClient, HttpParams } from '@angular/common/http';\n+import { Observable } from 'rxjs/Observable';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Injectable({ providedIn: 'root' })\n+export class StatisticsService {\n+    private resourceUrl = SERVER_API_URL + 'api/';", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "0c261e7ea86df36f0fc1d13f0ac96f1864a3046a"}, "originalPosition": 9}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "26c304b14d682a3ce150db83b5a908274b647375", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/26c304b14d682a3ce150db83b5a908274b647375", "committedDate": "2020-11-30T11:37:49Z", "message": "refactor REST call url"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/93880c069ec7d455857ded7e074f90b4f68e2720", "committedDate": "2020-11-30T11:38:07Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODM3NjMx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540837631", "createdAt": "2020-11-30T11:53:11Z", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwODQ2ODA0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540846804", "createdAt": "2020-11-30T12:06:26Z", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTMyMTI0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540932124", "createdAt": "2020-11-30T13:59:28Z", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "state": "COMMENTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQwOTQ0MDg3", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-540944087", "createdAt": "2020-11-30T14:12:43Z", "commit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 11, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDoxMjo0NFrOH783aA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxNDozODo0MFrOH79_4A==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyNTI1Ng==", "bodyText": "Could you please reformat the querys using Java 13 Textblocks? See: https://thorben-janssen.com/java-text-blocks-hibernate-jpa/\nIt makes them much nicer to read imo :)\nConcerns all querys", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532625256", "createdAt": "2020-11-30T14:12:44Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYyNzg5MA==", "bodyText": "The parameters are named a little bit confusing. Maybe something like startInclusive and endInclusive? Concerns all querys", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532627890", "createdAt": "2020-11-30T14:16:24Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"select count(distinct u.login) from User u, Submission s, StudentParticipation p where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(sub.id) from Submission sub where sub.submissionDate >= :#{#span}\")\n+    Integer getTotalSubmissions(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"select count(e.id) from Exercise e where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 31}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMzYzMQ==", "bodyText": "As far as I can see all the querys here query for something in certain range (from dateA to dateB), but sometimes you use only one parameter, and sometimes you use two parameters. Could you maybe rewrite the querys to always use two parameters? IMO it makes them easier to understand because I can clearly see: \"this gets the logged in users from data A to data B\" and the querys become more useful as i can input any timeframe i want", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532633631", "createdAt": "2020-11-30T14:24:25Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNDAxMQ==", "bodyText": "Also maybe rename the methods to something more clearer like countNumberOfLoggedInUsers, so it is more clear from the method name what the quer does", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532634011", "createdAt": "2020-11-30T14:24:58Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,60 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzMzYzMQ=="}, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 22}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjE3MA==", "bodyText": "Why are you not using the Enum here?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532636170", "createdAt": "2020-11-30T14:28:01Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {\n+        return this.statisticsRepository.getLoggedInUsers(ZonedDateTime.now().minusDays(span).toInstant());\n+    }\n+\n+    public Integer getActiveUsers(Long span) {\n+        return this.statisticsRepository.getActiveUsers(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    /**\n+     * Forwards the request to the repository, which returns a List<Map<String, Object>>, with String being the column name, \"day\" and \"amount\" and Object being the value,\n+     * either the date or the amount of submissions. It then collects the amounts in an array, depending on the span value, and returns it\n+     *\n+     * @param span DAY,WEEK,MONTH or YEAR depending on the active tab in the view\n+     * @return a array, containing the values for each bar in the graph\n+     */\n+    public Integer[] getTotalSubmissions(String span) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 36}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNjUyNw==", "bodyText": "The parameter name span confuses me here. It is not the span you defined in the enum? It looks to be just a number of days", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532636527", "createdAt": "2020-11-30T14:28:32Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 21}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjYzNzgxNw==", "bodyText": "This does not what I would expect. If I click on the week tab i would expect it to show me the values for THIS week and not just go back 7 days, same for month and so on. I mean if it currently wednesday I expect it to show me the values for monday, tuesday and wednesday. Does anybody else have an opinion here? Or you have to rename the client to something like Last 7 Days Last 30 Days", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532637817", "createdAt": "2020-11-30T14:30:20Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,95 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {\n+        return this.statisticsRepository.getLoggedInUsers(ZonedDateTime.now().minusDays(span).toInstant());\n+    }\n+\n+    public Integer getActiveUsers(Long span) {\n+        return this.statisticsRepository.getActiveUsers(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    /**\n+     * Forwards the request to the repository, which returns a List<Map<String, Object>>, with String being the column name, \"day\" and \"amount\" and Object being the value,\n+     * either the date or the amount of submissions. It then collects the amounts in an array, depending on the span value, and returns it\n+     *\n+     * @param span DAY,WEEK,MONTH or YEAR depending on the active tab in the view\n+     * @return a array, containing the values for each bar in the graph\n+     */\n+    public Integer[] getTotalSubmissions(String span) {\n+        switch (span) {\n+            case \"DAY\": // result = this.statisticsRepository.getTotalSubmissionsDay(ZonedDateTime.now().minusDays(7));\n+                return null;\n+            case \"WEEK\":\n+                Integer[] result = new Integer[7];\n+                Arrays.fill(result, 0);\n+                ZonedDateTime border = ZonedDateTime.now().minusDays(6).withHour(0).withMinute(0).withSecond(0);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 43}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MTU3Nw==", "bodyText": "why are you not using the enum here?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532641577", "createdAt": "2020-11-30T14:35:36Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,165 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class StatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                this.histogramData = Array(moment().daysInMonth()).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    async getSubmissions(): Promise<number[]> {\n+        return new Promise<number[]>((resolve, reject) => {\n+            this.service.getTotalSubmissions(this.span).subscribe((res: number[]) => {\n+                if (res !== null) {\n+                    resolve(res);\n+                } else {\n+                    reject('Submissions could not get fetched');\n+                }\n+            });\n+        });\n+    }\n+\n+    onTabChanged(span: string): void {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MjA4OA==", "bodyText": "You should support both english and german", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532642088", "createdAt": "2020-11-30T14:36:15Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,165 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class StatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                this.histogramData = Array(moment().daysInMonth()).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    async getSubmissions(): Promise<number[]> {\n+        return new Promise<number[]>((resolve, reject) => {\n+            this.service.getTotalSubmissions(this.span).subscribe((res: number[]) => {\n+                if (res !== null) {\n+                    resolve(res);\n+                } else {\n+                    reject('Submissions could not get fetched');\n+                }\n+            });\n+        });\n+    }\n+\n+    onTabChanged(span: string): void {\n+        switch (span) {\n+            case 'Day':\n+                this.span = SpanType.DAY;\n+                break;\n+            case 'Week':\n+                this.span = SpanType.WEEK;\n+                break;\n+            case 'Month':\n+                this.span = SpanType.MONTH;\n+                break;\n+            case 'Year':\n+                this.span = SpanType.YEAR;\n+                break;\n+        }\n+    }\n+\n+    private getWeekdays(): string[] {\n+        const days: string[] = [];\n+\n+        for (let i = 0; i < 7; i++) {\n+            days.push(\n+                moment()\n+                    .subtract(6 - i, 'd')\n+                    .format('dddd'),\n+            );\n+        }\n+        return days;\n+    }\n+\n+    private createLabels(): string[] {\n+        let labels: string[] = [];\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                for (let i = 0; i < this.histogramData.length; i++) {\n+                    labels[i] = `${i}:00,${i + 1}:00`;\n+                }\n+                break;\n+            case SpanType.WEEK:\n+                labels = this.getWeekdays();\n+                break;\n+            case SpanType.MONTH:\n+                for (let i = 0; i < this.histogramData.length; i++) {\n+                    labels[i] = i + 1 + '';\n+                }\n+                break;\n+            case SpanType.YEAR:\n+                labels = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 115}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MjkzMQ==", "bodyText": "But why not do it using observables? @FuchsDominik . It is highly unusual in angular to work with promises as everything is based on observables", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532642931", "createdAt": "2020-11-30T14:37:24Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,178 @@\n+import { Component, OnInit, OnChanges, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { SPAN_PATTERN } from 'app/app.constants';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+\n+export enum SpanType {\n+    DAY = 'DAY',\n+    WEEK = 'WEEK',\n+    MONTH = 'MONTH',\n+    YEAR = 'YEAR',\n+}\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class JhiStatisticsComponent implements OnInit, OnChanges {\n+    spanPattern = SPAN_PATTERN;\n+    span: SpanType = SpanType.WEEK;\n+\n+    // Histogram related properties\n+    public histogramData: number[] = [];\n+    public barChartOptions: ChartOptions = {};\n+    public barChartLabels: Label[] = [];\n+    public barChartType: ChartType = 'bar';\n+    public barChartLegend = true;\n+    public UserLoginChartData: ChartDataSets[] = [];\n+    public SubmissionsChartData: ChartDataSets[] = [];\n+\n+    @ViewChild(BaseChartDirective) chart: BaseChartDirective;\n+\n+    constructor(private service: StatisticsService, private translateService: TranslateService) {}\n+\n+    async ngOnInit() {\n+        await this.setBinWidth();\n+        await this.createChart();\n+    }\n+\n+    async ngOnChanges() {}\n+\n+    private async setBinWidth(): Promise<void> {\n+        switch (this.span) {\n+            case SpanType.DAY:\n+                this.histogramData = Array(24).fill(0);\n+                break;\n+            case SpanType.WEEK:\n+                this.histogramData = Array(7).fill(0);\n+                break;\n+            case SpanType.MONTH:\n+                const days = this.daysInMonth();\n+                this.histogramData = Array(days).fill(0);\n+                break;\n+            case SpanType.YEAR:\n+                this.histogramData = Array(12).fill(0);\n+                break;\n+        }\n+    }\n+\n+    private daysInMonth(): number {\n+        return new Date(new Date().getFullYear(), new Date().getMonth(), 0).getDate();\n+    }\n+\n+    async getSubmissions(): Promise<number[]> {\n+        return new Promise<number[]>((resolve, reject) => {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjAzNTQzMQ=="}, "originalCommit": {"oid": "ac7257d174ed321c706cf7f8a28037403a3871ae"}, "originalPosition": 68}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjY0MzgwOA==", "bodyText": "getNumberOfReleasedExercises and so on :)", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532643808", "createdAt": "2020-11-30T14:38:40Z", "author": {"login": "stefanwaldhauser"}, "path": "src/main/webapp/app/admin/statistics/statistics.service.ts", "diffHunk": "@@ -0,0 +1,100 @@\n+import { Injectable } from '@angular/core';\n+import { HttpClient, HttpParams } from '@angular/common/http';\n+import { Observable } from 'rxjs/Observable';\n+import { SERVER_API_URL } from 'app/app.constants';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Injectable({ providedIn: 'root' })\n+export class StatisticsService {\n+    private resourceUrl = SERVER_API_URL + 'api/management/statistics/';\n+\n+    constructor(private http: HttpClient) {}\n+\n+    /**\n+     * Sends a GET request to retrieve the amount of logged in users in the last *span* days\n+     */\n+    getloggedUsers(span: number): Observable<number> {\n+        const params = new HttpParams().set('span', '' + span);\n+        return this.http.get<number>(`${this.resourceUrl}users`, { params });\n+    }\n+\n+    /**\n+     * Sends a GET request to retrieve the amount of users with an submission in the last *span* days\n+     */\n+    getActiveUsers(span: number): Observable<number> {\n+        const params = new HttpParams().set('span', '' + span);\n+        return this.http.get<number>(`${this.resourceUrl}activeUsers`, { params });\n+    }\n+\n+    /**\n+     * Sends a GET request to retrieve the amount of submissions made in the last *span* days\n+     */\n+    getTotalSubmissions(span: SpanType): Observable<number[]> {\n+        const params = new HttpParams().set('span', '' + span);\n+        return this.http.get<number[]>(`${this.resourceUrl}submissions`, { params });\n+    }\n+\n+    /**\n+     * Sends a GET request to retrieve the amount of released exercises in the last *span* days\n+     */\n+    getReleasedExercises(span: number): Observable<number> {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "93880c069ec7d455857ded7e074f90b4f68e2720"}, "originalPosition": 40}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "ea28fa7ce583b5250cde3499d6659b38eb254195", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/ea28fa7ce583b5250cde3499d6659b38eb254195", "committedDate": "2020-11-30T17:48:59Z", "message": "Address Stefan's comments"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMTc2MjMz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-541176233", "createdAt": "2020-11-30T18:23:04Z", "commit": {"oid": "ea28fa7ce583b5250cde3499d6659b38eb254195"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODoyMzowNVrOH8H6Og==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxODoyMzowNVrOH8H6Og==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgwNjIwMg==", "bodyText": "This doesn't use the text-block style yet.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532806202", "createdAt": "2020-11-30T18:23:05Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,87 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"select count(distinct u.login) from User u, PersistentAuditEvent p where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "ea28fa7ce583b5250cde3499d6659b38eb254195"}, "originalPosition": 21}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "366a0ca658674e94cb50c2a87b3660bdc387288e", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/366a0ca658674e94cb50c2a87b3660bdc387288e", "committedDate": "2020-11-30T18:26:49Z", "message": "fix missing Text-block style"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQxMjA4NjM0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-541208634", "createdAt": "2020-11-30T19:07:05Z", "commit": {"oid": "366a0ca658674e94cb50c2a87b3660bdc387288e"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowNzowNVrOH8JgIA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMS0zMFQxOTowNzowNVrOH8JgIA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzMjgzMjI4OA==", "bodyText": "This one is not formatted like the rest is.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r532832288", "createdAt": "2020-11-30T19:07:05Z", "author": {"login": "sjagla27"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,98 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, PersistentAuditEvent p\n+            where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\n+            \"\"\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, Submission s, StudentParticipation p\n+            where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\n+            \"\"\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select count(e.id)\n+            from Exercise e\n+            where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\n+            \"\"\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(e.id)\n+            from Exercise e\n+            where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\n+            \"\"\")\n+    Integer getExerciseDeadlines(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(e.id) from Exam e where e.endDate >= :#{#span} and e.endDate <= :#{#now}", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "366a0ca658674e94cb50c2a87b3660bdc387288e"}, "originalPosition": 50}]}}, {"__typename": "PullRequestCommit", "commit": {"oid": "098393562c8ad4db3f03a38571867afd437fe9e8", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/098393562c8ad4db3f03a38571867afd437fe9e8", "committedDate": "2020-11-30T19:14:42Z", "message": "fix missing Text-block style"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "f6e30d7546138808db3176d23669807099621dc0", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/f6e30d7546138808db3176d23669807099621dc0", "committedDate": "2020-12-01T17:19:11Z", "message": "Implemented YEAR, MONTH and DAY and refactoring of client side"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1d6534697b753b439a60ab864f3f78ebf93d9d58", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/1d6534697b753b439a60ab864f3f78ebf93d9d58", "committedDate": "2020-12-01T17:19:46Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c556e9eb255b463d67da7525fb68dae1a7eb6723", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c556e9eb255b463d67da7525fb68dae1a7eb6723", "committedDate": "2020-12-01T18:16:10Z", "message": "active tab adjustments"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "06bde3aba39bf8a3d41d40b5feb72f06842389cc", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/06bde3aba39bf8a3d41d40b5feb72f06842389cc", "committedDate": "2020-12-02T09:59:22Z", "message": "removed unused Pattern and refactor URL"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "892b65635224eff5ea01fe1f44eea001bed827e2", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/892b65635224eff5ea01fe1f44eea001bed827e2", "committedDate": "2020-12-02T09:59:36Z", "message": "Merge branch 'develop' of https://github.com/ls1intum/Artemis into feature/user-statistics"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "e437e19987e1db86f8be8026923a1d1be3b8099d", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/e437e19987e1db86f8be8026923a1d1be3b8099d", "committedDate": "2020-12-02T10:18:05Z", "message": "remove unused pattern"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c28777a4b7e9277e90cd36e2c8393421b7fad135", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c28777a4b7e9277e90cd36e2c8393421b7fad135", "committedDate": "2020-12-02T13:00:27Z", "message": "set graph min, refactor server side"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODYwMzc4", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542860378", "createdAt": "2020-12-02T13:59:19Z", "commit": {"oid": "c28777a4b7e9277e90cd36e2c8393421b7fad135"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb", "committedDate": "2020-12-02T14:12:47Z", "message": "refactoring"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODc2Njky", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542876692", "createdAt": "2020-12-02T14:16:39Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODkyNjI4", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542892628", "createdAt": "2020-12-02T14:32:08Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODkzMTAx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542893101", "createdAt": "2020-12-02T14:32:37Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODkzNzIz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542893723", "createdAt": "2020-12-02T14:33:13Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQyODk2ODM0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-542896834", "createdAt": "2020-12-02T14:36:09Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDcyMjE2", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543072216", "createdAt": "2020-12-02T17:27:48Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzMDk0MjY3", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543094267", "createdAt": "2020-12-02T17:53:28Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "DISMISSED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjczMzE0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543673314", "createdAt": "2020-12-03T07:35:29Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzozNToyOVrOH-CvWw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzozNToyOVrOH-CvWw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgxODY1MQ==", "bodyText": "Might be better to rename this to something like getActiveUserCount?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534818651", "createdAt": "2020-12-03T07:35:29Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, PersistentAuditEvent p\n+            where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\n+            \"\"\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, Submission s, StudentParticipation p\n+            where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\n+            \"\"\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 33}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjc2NTAx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543676501", "createdAt": "2020-12-03T07:41:04Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0MTowNFrOH-DR5w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0MTowNFrOH-DR5w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgyNzQ5NQ==", "bodyText": "Why does the method name contain \"yesterday\" when there are date range parameters?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534827495", "createdAt": "2020-12-03T07:41:04Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/repository/StatisticsRepository.java", "diffHunk": "@@ -0,0 +1,109 @@\n+package de.tum.in.www1.artemis.repository;\n+\n+import java.time.Instant;\n+import java.time.ZonedDateTime;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.data.jpa.repository.JpaRepository;\n+import org.springframework.data.jpa.repository.Query;\n+import org.springframework.data.repository.query.Param;\n+import org.springframework.stereotype.Repository;\n+\n+import de.tum.in.www1.artemis.domain.User;\n+\n+/**\n+ * Spring Data JPA repository for the user statistics\n+ */\n+@Repository\n+public interface StatisticsRepository extends JpaRepository<User, Long> {\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, PersistentAuditEvent p\n+            where u.login like p.principal and p.auditEventType = 'AUTHENTICATION_SUCCESS' and u.login not like '%test%' and p.auditEventDate >= :#{#span}\n+            \"\"\")\n+    Integer getLoggedInUsers(@Param(\"span\") Instant span);\n+\n+    @Query(\"\"\"\n+            select count(distinct u.login)\n+            from User u, Submission s, StudentParticipation p\n+            where s.participation.id = p.id and p.student.id = u.id and s.submissionDate >= :#{#span} and u.login not like '%test%'\n+            \"\"\")\n+    Integer getActiveUsers(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select count(e.id)\n+            from Exercise e\n+            where e.releaseDate >= :#{#span} and e.releaseDate <= :#{#now}\n+            \"\"\")\n+    Integer getReleasedExercises(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(e.id)\n+            from Exercise e\n+            where e.dueDate >= :#{#span} and e.dueDate <= :#{#now}\n+            \"\"\")\n+    Integer getExerciseDeadlines(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(e.id)\n+            from Exam e\n+            where e.endDate >= :#{#span} and e.endDate <= :#{#now}\n+            \"\"\")\n+    Integer getConductedExams(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(se.id)\n+            from StudentExam se, Exam e\n+            where se.submitted = true and se.exam = e and e.endDate >= :#{#span}\n+            \"\"\")\n+    Integer getExamParticipations(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select sum(e.registeredUsers.size)\n+            from Exam e\n+            where e.endDate >= :#{#span} and e.endDate <= :#{#now}\n+            \"\"\")\n+    Integer getExamRegistrations(@Param(\"span\") ZonedDateTime span, @Param(\"now\") ZonedDateTime now);\n+\n+    @Query(\"\"\"\n+            select count(distinct r.assessor.id)\n+            from Result r\n+            where (r.assessmentType = 'MANUAL' or r.assessmentType = 'SEMI-AUTOMATIC') and r.completionDate >= :#{#span}\n+            \"\"\")\n+    Integer getActiveTutors(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select count(r.id)\n+            from Result r\n+            where r.completionDate >= :#{#span}\n+            \"\"\")\n+    Integer getCreatedResults(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select sum(r.feedbacks.size)\n+            from Result r\n+            where r.completionDate >= :#{#span}\n+            \"\"\")\n+    Integer getResultFeedbacks(@Param(\"span\") ZonedDateTime span);\n+\n+    @Query(\"\"\"\n+            select s.submissionDate as day, count(s.id) as amount\n+            from Submission s\n+            where s.submissionDate > :#{#startDate}\n+            group by s.submissionDate\n+            order by s.submissionDate asc\n+            \"\"\")\n+    List<Map<String, Object>> getTotalSubmissions(ZonedDateTime startDate);\n+\n+    @Query(\"\"\"\n+            select s.submissionDate as day, count(s.id) as amount\n+            from Submission s\n+            where s.submissionDate > :#{#startDate} and s.submissionDate < :#{#endDate}\n+            group by s.submissionDate\n+            order by s.submissionDate asc\n+            \"\"\")\n+    List<Map<String, Object>> getTotalSubmissionsYesterday(ZonedDateTime startDate, ZonedDateTime endDate);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 107}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjc5Mzcw", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543679370", "createdAt": "2020-12-03T07:46:01Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0NjowMVrOH-DvEA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo0NjowMVrOH-DvEA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDgzNDk2MA==", "bodyText": "Holy that's a really big and complex method. Is there a way to break this down into smaller functions and/or define queries that will do the heavy work for you?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534834960", "createdAt": "2020-12-03T07:46:01Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/service/StatisticsService.java", "diffHunk": "@@ -0,0 +1,140 @@\n+package de.tum.in.www1.artemis.service;\n+\n+import java.time.YearMonth;\n+import java.time.ZonedDateTime;\n+import java.util.Arrays;\n+import java.util.HashMap;\n+import java.util.List;\n+import java.util.Map;\n+\n+import org.springframework.stereotype.Service;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.SpanType;\n+import de.tum.in.www1.artemis.repository.StatisticsRepository;\n+\n+@Service\n+public class StatisticsService {\n+\n+    private final StatisticsRepository statisticsRepository;\n+\n+    public StatisticsService(StatisticsRepository statisticsRepository) {\n+        this.statisticsRepository = statisticsRepository;\n+    }\n+\n+    public Integer getLoggedInUsers(Long span) {\n+        return this.statisticsRepository.getLoggedInUsers(ZonedDateTime.now().minusDays(span).toInstant());\n+    }\n+\n+    public Integer getActiveUsers(Long span) {\n+        return this.statisticsRepository.getActiveUsers(ZonedDateTime.now().minusDays(span));\n+    }\n+\n+    /**\n+     * Forwards the request to the repository, which returns a List<Map<String, Object>>, with String being the column name, \"day\" and \"amount\" and Object being the value,\n+     * either the date or the amount of submissions. It then collects the amounts in an array, depending on the span value, and returns it\n+     *\n+     * @param span DAY,WEEK,MONTH or YEAR depending on the active tab in the view\n+     * @return a array, containing the values for each bar in the graph\n+     */\n+    public Integer[] getTotalSubmissions(SpanType span) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 39}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjgxNzUz", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543681753", "createdAt": "2020-12-03T07:50:02Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDowMlrOH-EMIg==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MDowMlrOH-EMIg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0MjQwMg==", "bodyText": "Not really sure here but does Artemis use came case for urls? Wouldn't active-users be a bit better (same goes for the routes defined below)?", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534842402", "createdAt": "2020-12-03T07:50:02Z", "author": {"login": "ivanchimeno"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/StatisticsResource.java", "diffHunk": "@@ -0,0 +1,172 @@\n+package de.tum.in.www1.artemis.web.rest;\n+\n+import org.slf4j.Logger;\n+import org.slf4j.LoggerFactory;\n+import org.springframework.http.ResponseEntity;\n+import org.springframework.security.access.prepost.PreAuthorize;\n+import org.springframework.web.bind.annotation.*;\n+\n+import de.tum.in.www1.artemis.domain.enumeration.SpanType;\n+import de.tum.in.www1.artemis.repository.*;\n+import de.tum.in.www1.artemis.service.*;\n+\n+/**\n+ * REST controller for managing user statistics.\n+ */\n+@RestController\n+@RequestMapping(\"/api\")\n+@PreAuthorize(\"hasRole('ADMIN')\")\n+public class StatisticsResource {\n+\n+    private final Logger log = LoggerFactory.getLogger(StatisticsResource.class);\n+\n+    private final StatisticsService service;\n+\n+    public StatisticsResource(StatisticsService service) {\n+        this.service = service;\n+    }\n+\n+    /**\n+     * GET management/statistics/users : get the amount of logged in user in the last \"span\" days.\n+     *\n+     * @param span the period of which the amount should be calculated\n+     * @return the ResponseEntity with status 200 (OK) and the amount of users in body, or status 404 (Not Found)\n+     */\n+    @GetMapping(\"management/statistics/users\")\n+    @PreAuthorize(\"hasAnyRole('INSTRUCTOR', 'ADMIN')\")\n+    public ResponseEntity<Integer> getloggedUsers(@RequestParam long span) {\n+        log.debug(\"REST request to get user login count in the last {} days\", span);\n+        return ResponseEntity.ok(this.service.getLoggedInUsers(span));\n+    }\n+\n+    /**\n+     * GET management/statistics/activeUsers : get the amount of active users which made a submission in the last \"span\" days.\n+     *\n+     * @param span the period of which the amount should be calculated\n+     * @return the ResponseEntity with status 200 (OK) and the amount of submissions in body, or status 404 (Not Found)\n+     */\n+    @GetMapping(\"management/statistics/activeUsers\")", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 48}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjgzNzYx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543683761", "createdAt": "2020-12-03T07:53:13Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MzoxM1rOH-Eh7g==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1MzoxM1rOH-Eh7g==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg0Nzk4Mg==", "bodyText": "There is a trick in Angular on how to use enums in HTML templates. You can write something like:\nSpanType = SpanType;\n\nIt creates a private variable that holds your enum so that in the template you can do stuff like SpanType.DAY", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534847982", "createdAt": "2020-12-03T07:53:13Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,165 @@\n+import { Component, OnInit, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class StatisticsComponent implements OnInit {\n+    DAY = SpanType.DAY;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 15}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjg1NzQ0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543685744", "createdAt": "2020-12-03T07:56:21Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1NjoyMVrOH-E3OQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwNzo1NjoyMVrOH-E3OQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg1MzQzMw==", "bodyText": "Is this the currently active span? If so it's better to rename this.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534853433", "createdAt": "2020-12-03T07:56:21Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/admin/statistics/statistics.component.ts", "diffHunk": "@@ -0,0 +1,165 @@\n+import { Component, OnInit, ViewChild } from '@angular/core';\n+import { StatisticsService } from 'app/admin/statistics/statistics.service';\n+import { ChartDataSets, ChartOptions, ChartType } from 'chart.js';\n+import { BaseChartDirective, Label } from 'ng2-charts';\n+import { DataSet } from 'app/exercises/quiz/manage/statistics/quiz-statistic/quiz-statistic.component';\n+import { TranslateService } from '@ngx-translate/core';\n+import * as moment from 'moment';\n+import { SpanType } from 'app/entities/statistics.model';\n+\n+@Component({\n+    selector: 'jhi-statistics',\n+    templateUrl: './statistics.component.html',\n+})\n+export class StatisticsComponent implements OnInit {\n+    DAY = SpanType.DAY;\n+    WEEK = SpanType.WEEK;\n+    MONTH = SpanType.MONTH;\n+    YEAR = SpanType.YEAR;\n+    span: SpanType = SpanType.WEEK;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 19}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjg5Mzg0", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543689384", "createdAt": "2020-12-03T08:02:05Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODowMjowNlrOH-FdqQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMi0wM1QwODowMjowNlrOH-FdqQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUzNDg2MzI3Mw==", "bodyText": "Just fyi but you can also define enums like:\nenum SpanType {\n   Day,\n   Week, \n   Month, \n   Year\n}\n\nYou don't need to always write the string representation.", "url": "https://github.com/ls1intum/Artemis/pull/2471#discussion_r534863273", "createdAt": "2020-12-03T08:02:06Z", "author": {"login": "ivanchimeno"}, "path": "src/main/webapp/app/entities/statistics.model.ts", "diffHunk": "@@ -0,0 +1,6 @@\n+export enum SpanType {\n+    DAY = 'DAY',", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "originalPosition": 2}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQzNjkwMjUx", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-543690251", "createdAt": "2020-12-03T08:03:25Z", "commit": {"oid": "d94ad86f5471576bf5fd0bdc7ed3479cd84a49fb"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "5905879e8731f464bb3777cae0b6e686a48611d8", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/5905879e8731f464bb3777cae0b6e686a48611d8", "committedDate": "2020-12-03T19:27:29Z", "message": "Integrate Ivan's PR review"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "c856872b49a3574bfbf9e48b636f65af37edd23e", "author": {"user": {"login": "FuchsDominik", "name": "Dominik Fuchs"}}, "url": "https://github.com/ls1intum/Artemis/commit/c856872b49a3574bfbf9e48b636f65af37edd23e", "committedDate": "2020-12-03T20:04:50Z", "message": "Merge branch 'develop' into feature/user-statistics"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3NTQ0MzcxNTY1", "url": "https://github.com/ls1intum/Artemis/pull/2471#pullrequestreview-544371565", "createdAt": "2020-12-03T20:05:55Z", "commit": {"oid": "5905879e8731f464bb3777cae0b6e686a48611d8"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3334, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}