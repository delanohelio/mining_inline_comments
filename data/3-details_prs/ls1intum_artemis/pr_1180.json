{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0MzYxNzM1NTQ3", "number": 1180, "title": "Chore: Add tests for ModelingExerciseResource", "bodyText": "Checklist\n\n Server: I added multiple integration tests (Spring) related to the features\n Server: I documented the Java code using JavaDoc style.\n\nMotivation and Context\nThis PR adds missing server tests to the ModelingExerciseResource.\nCurrent test coverage:\n\nTest coverage with PR:", "createdAt": "2020-01-11T14:46:50Z", "url": "https://github.com/ls1intum/Artemis/pull/1180", "merged": true, "mergeCommit": {"oid": "bf13d78f622afeee7db4798769a0fa8782886b12"}, "closed": true, "closedAt": "2020-01-11T22:11:37Z", "author": {"login": "lovaiible"}, "timelineItems": {"totalCount": 15, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpPPAAABb5GgWvgH2gAyMzYxNzM1NTQ3OjM2ZGIxODFiN2YxZTlkZGU5NGQ4ODFlOWZjMGExODAyNmNhZDk2ZGU=", "endCursor": "Y3Vyc29yOnYyOpPPAAABb5apU4gFqTM0MTU0MzUyMA==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"__typename": "PullRequestCommit", "commit": {"oid": "36db181b7f1e9dde94d881e9fc0a18026cad96de", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/36db181b7f1e9dde94d881e9fc0a18026cad96de", "committedDate": "2020-01-10T22:43:23Z", "message": "Remove unnecessary auth check"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "9780f9f3bf98bdd8e52a203a99f1f536b87f6c95", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/9780f9f3bf98bdd8e52a203a99f1f536b87f6c95", "committedDate": "2020-01-10T23:19:23Z", "message": "Add test for delete method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "df22ac73526f43ca78aa165b1ea2c50013575fc1", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/df22ac73526f43ca78aa165b1ea2c50013575fc1", "committedDate": "2020-01-10T23:29:00Z", "message": "Add test for get method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "04ceeb0e518b649ca75dc923c9c5fa0872d5d9dd", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/04ceeb0e518b649ca75dc923c9c5fa0872d5d9dd", "committedDate": "2020-01-11T01:36:58Z", "message": "Add tests for get methods"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "4350f23dba7b473c86196d7bc979bc6e881a78e9", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/4350f23dba7b473c86196d7bc979bc6e881a78e9", "committedDate": "2020-01-11T03:44:47Z", "message": "Add tests for create and update"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "1a6e31937b67bc69e324398c7f2bcb341c883b57", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/1a6e31937b67bc69e324398c7f2bcb341c883b57", "committedDate": "2020-01-11T14:40:39Z", "message": "Add null check test for updateModelingExercise method"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "20a0709a1d35f195216cb95d118726332b27c795", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/20a0709a1d35f195216cb95d118726332b27c795", "committedDate": "2020-01-11T14:41:33Z", "message": "Remove unused imports"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/627253b73af2ce3b9ec69cdde6b82efe9ee02e50", "committedDate": "2020-01-11T15:05:35Z", "message": "Apply spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTI2NTMx", "url": "https://github.com/ls1intum/Artemis/pull/1180#pullrequestreview-341526531", "createdAt": "2020-01-11T15:06:59Z", "commit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNTowNzowMFrOFcl8cw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNTowNzowMFrOFcl8cw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUyNjEzMQ==", "bodyText": "I think this auth check is not necessary since all users who do not have the user role ADMIN cannot access this endpoint (@PreAuthorize(\"hasAnyRole('ADMIN')\"))", "url": "https://github.com/ls1intum/Artemis/pull/1180#discussion_r365526131", "createdAt": "2020-01-11T15:07:00Z", "author": {"login": "lovaiible"}, "path": "src/main/java/de/tum/in/www1/artemis/web/rest/ModelingExerciseResource.java", "diffHunk": "@@ -211,10 +210,6 @@ public ModelingExerciseResource(ModelingExerciseRepository modelingExerciseRepos\n     @PreAuthorize(\"hasAnyRole('ADMIN')\")\n     public ResponseEntity<Void> getCompassStatisticForExercise(@PathVariable Long exerciseId) {\n         ModelingExercise modelingExercise = modelingExerciseService.findOne(exerciseId);\n-        if (!authCheckService.isAdmin()) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "originalPosition": 12}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTMxMTg0", "url": "https://github.com/ls1intum/Artemis/pull/1180#pullrequestreview-341531184", "createdAt": "2020-01-11T16:53:04Z", "commit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNjo1MzowNFrOFcmPng==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNjo1MzowNFrOFcmPng==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzMTAzOA==", "bodyText": "is this really necessary? I would like to avoid this, because this would mean all tests use the courseService as SypBean", "url": "https://github.com/ls1intum/Artemis/pull/1180#discussion_r365531038", "createdAt": "2020-01-11T16:53:04Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/AbstractSpringIntegrationTest.java", "diffHunk": "@@ -42,4 +43,7 @@\n \n     @SpyBean\n     protected WebsocketMessagingService websocketMessagingService;\n+\n+    @SpyBean\n+    protected CourseService courseService;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "originalPosition": 14}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTMxMjcw", "url": "https://github.com/ls1intum/Artemis/pull/1180#pullrequestreview-341531270", "createdAt": "2020-01-11T16:54:57Z", "commit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "state": "COMMENTED", "comments": {"totalCount": 1, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNjo1NDo1N1rOFcmP9w==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0wMS0xMVQxNjo1NDo1N1rOFcmP9w==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDM2NTUzMTEyNw==", "bodyText": "Is this mocking behavior really necessary? I would like to avoid something like this and rather insert the data correctly into the database before executing a certain REST Call", "url": "https://github.com/ls1intum/Artemis/pull/1180#discussion_r365531127", "createdAt": "2020-01-11T16:54:57Z", "author": {"login": "krusche"}, "path": "src/test/java/de/tum/in/www1/artemis/ModelingExerciseIntegrationTest.java", "diffHunk": "@@ -59,4 +70,74 @@ public void getCompassStatistic_asInstructor_Forbidden() throws Exception {\n     public void getCompassStatistic_asAdmin_Success() throws Exception {\n         request.getNullable(\"/api/exercises/\" + classExercise.getId() + \"/compass-statistic\", HttpStatus.OK, String.class);\n     }\n+\n+    @Test\n+    @WithMockUser(username = \"user1\", roles = \"USER\")\n+    public void testGetModelingExercise_asStudent_Forbidden() throws Exception {\n+        request.get(\"/api/modeling-exercises/\" + classExercise.getId(), HttpStatus.FORBIDDEN, ModelingExercise.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetModelingExercise_asTA() throws Exception {\n+        request.get(\"/api/modeling-exercises/\" + classExercise.getId(), HttpStatus.OK, ModelingExercise.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetModelingExerciseForCourse_asTA() throws Exception {\n+        request.get(\"/api/courses/\" + classExercise.getCourse().getId() + \"/modeling-exercises\", HttpStatus.OK, List.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"tutor1\", roles = \"TA\")\n+    public void testGetModelingExerciseStatistics_asTA() throws Exception {\n+        request.get(\"/api/modeling-exercises/\" + classExercise.getId() + \"/statistics\", HttpStatus.OK, String.class);\n+        request.get(\"/api/modeling-exercises/\" + classExercise.getId() + 1 + \"/statistics\", HttpStatus.NOT_FOUND, String.class);\n+\n+        classExercise.setDiagramType(CommunicationDiagram);\n+        exerciseRepo.save(classExercise);\n+        request.get(\"/api/modeling-exercises/\" + classExercise.getId() + \"/statistics\", HttpStatus.NOT_FOUND, String.class);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testCreateModelingExercise_asInstructor() throws Exception {\n+        ModelingExercise modelingExercise = modelingExerciseUtilService.createModelingExercise(classExercise.getCourse().getId());\n+        request.post(\"/api/modeling-exercises\", modelingExercise, HttpStatus.CREATED);\n+\n+        modelingExercise = modelingExerciseUtilService.createModelingExercise(classExercise.getCourse().getId(), 1L);\n+        request.post(\"/api/modeling-exercises\", modelingExercise, HttpStatus.BAD_REQUEST);\n+\n+        modelingExercise = modelingExerciseUtilService.createModelingExercise(2L);\n+        request.post(\"/api/modeling-exercises\", modelingExercise, HttpStatus.NOT_FOUND);\n+    }\n+\n+    @Test\n+    @WithMockUser(username = \"instructor1\", roles = \"INSTRUCTOR\")\n+    public void testUpdateModelingExercise_asInstructor() throws Exception {\n+        ModelingExercise modelingExercise = modelingExerciseUtilService.createModelingExercise(classExercise.getCourse().getId());\n+        ModelingExercise createdModelingExercise = request.putWithResponseBody(\"/api/modeling-exercises\", modelingExercise, ModelingExercise.class, HttpStatus.CREATED);\n+\n+        ModelingExercise modelingExerciseWithSubmission = modelingExerciseUtilService.addExampleSubmission(createdModelingExercise);\n+        ModelingExercise returnedModelingExercise = request.putWithResponseBody(\"/api/modeling-exercises\", modelingExerciseWithSubmission, ModelingExercise.class, HttpStatus.OK);\n+        assertThat(returnedModelingExercise.getExampleSubmissions().size()).isEqualTo(1);\n+\n+        when(courseService.findOne(classExercise.getCourse().getId())).thenReturn(null);", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "originalPosition": 92}]}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTMxMjk2", "url": "https://github.com/ls1intum/Artemis/pull/1180#pullrequestreview-341531296", "createdAt": "2020-01-11T16:55:44Z", "commit": {"oid": "627253b73af2ce3b9ec69cdde6b82efe9ee02e50"}, "state": "CHANGES_REQUESTED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}, {"__typename": "PullRequestCommit", "commit": {"oid": "79857cff558e2834153773841b82a9c6697d36bc", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/79857cff558e2834153773841b82a9c6697d36bc", "committedDate": "2020-01-11T21:20:29Z", "message": "Apply feedback"}}, {"__typename": "PullRequestCommit", "commit": {"oid": "eb5cecfd26b51a9a554fa3fce15af0c18e0354e5", "author": {"user": {"login": "lovaiible", "name": "Anh Montag"}}, "url": "https://github.com/ls1intum/Artemis/commit/eb5cecfd26b51a9a554fa3fce15af0c18e0354e5", "committedDate": "2020-01-11T21:49:17Z", "message": "Apply spotless"}}, {"__typename": "PullRequestReview", "id": "MDE3OlB1bGxSZXF1ZXN0UmV2aWV3MzQxNTQzNTIw", "url": "https://github.com/ls1intum/Artemis/pull/1180#pullrequestreview-341543520", "createdAt": "2020-01-11T22:11:18Z", "commit": {"oid": "eb5cecfd26b51a9a554fa3fce15af0c18e0354e5"}, "state": "APPROVED", "comments": {"totalCount": 0, "pageInfo": {"startCursor": null, "endCursor": null, "hasNextPage": false, "hasPreviousPage": false}, "nodes": []}}]}}}, "rateLimit": {"limit": 5000, "remaining": 3091, "cost": 1, "resetAt": "2021-10-28T19:08:13Z"}}}