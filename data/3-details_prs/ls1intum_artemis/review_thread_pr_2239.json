{"data": {"repository": {"pullRequest": {"id": "MDExOlB1bGxSZXF1ZXN0NTA2NTMwMTgz", "number": 2239, "reviewThreads": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNDoxNzo0MVrOExqiPQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo0MDoyMlrOEyauRw==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTEyNTczOnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "isResolved": true, "comments": {"totalCount": 3, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQxNDoxNzo0MVrOHn5wjw==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQyMDo1MTozOVrOHn8cCg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYwMjgzMQ==", "bodyText": "What does parameter mean? Is that documented somewhere? Or can you maybe use a more describing name?", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r511602831", "createdAt": "2020-10-25T14:17:41Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -37,6 +37,12 @@\n     @Column(name = \"achievement_type\")\n     private AchievementType type;\n \n+    @Column(name = \"parameter\")\n+    private Long parameter;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9edc1df523ce1899691657a67406eae45941711b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYyNDA0OA==", "bodyText": "The parameter is the property of an achievement which is used to define whether someone earned an achievement when checking for fulfilment. For example, for a point-based achievement the score needed for a golden achievement can be set to 90 or 100, for silver to 80 and for bronze to 70 etc.\nIf it is a time-based achievement, the number of days within which the submission must occur to receive an achievement can be set. These thresholds are stored in the parameter.\nSo maybe thresholdValue would be more appropriate and describing here. What do you think?", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r511624048", "createdAt": "2020-10-25T17:16:11Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -37,6 +37,12 @@\n     @Column(name = \"achievement_type\")\n     private AchievementType type;\n \n+    @Column(name = \"parameter\")\n+    private Long parameter;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYwMjgzMQ=="}, "originalCommit": {"oid": "9edc1df523ce1899691657a67406eae45941711b"}, "originalPosition": 5}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0NjczMA==", "bodyText": "Yes, something like thresholdValue (maybe just threshold) or successCriteria would fit better here in my opinion.", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r511646730", "createdAt": "2020-10-25T20:51:39Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -37,6 +37,12 @@\n     @Column(name = \"achievement_type\")\n     private AchievementType type;\n \n+    @Column(name = \"parameter\")\n+    private Long parameter;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTYwMjgzMQ=="}, "originalCommit": {"oid": "9edc1df523ce1899691657a67406eae45941711b"}, "originalPosition": 5}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIwNTQ4MDI4OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQyMDo1MjoyNlrOHn8cZA==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yNVQyMTowNjoyM1rOHn8iIQ==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0NjgyMA==", "bodyText": "Also, what does this exactly mean and how is it different to parameter?", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r511646820", "createdAt": "2020-10-25T20:52:26Z", "author": {"login": "sleiss"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -37,6 +37,12 @@\n     @Column(name = \"achievement_type\")\n     private AchievementType type;\n \n+    @Column(name = \"parameter\")\n+    private Long parameter;\n+\n+    @Column(name = \"min_score_to_qualify\")\n+    private Long minScoreToQualify;", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "9edc1df523ce1899691657a67406eae45941711b"}, "originalPosition": 8}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0ODI4OQ==", "bodyText": "Where the metrics of achievements are not directly point based, the minScoreToQualify property can additionally be set.\nThat means if we take the time based achievements for example and someone hands in an empty submission within a day or simply gets very few to no points that does not deserve an achievement although it would gain an achievement by the time of submission alone. To exclude such cases, we can use this minScoreToQualify.", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r511648289", "createdAt": "2020-10-25T21:06:23Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -37,6 +37,12 @@\n     @Column(name = \"achievement_type\")\n     private AchievementType type;\n \n+    @Column(name = \"parameter\")\n+    private Long parameter;\n+\n+    @Column(name = \"min_score_to_qualify\")\n+    private Long minScoreToQualify;", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMTY0NjgyMA=="}, "originalCommit": {"oid": "9edc1df523ce1899691657a67406eae45941711b"}, "originalPosition": 8}]}}, {"id": "MDIzOlB1bGxSZXF1ZXN0UmV2aWV3VGhyZWFkMzIxMzAyMDg3OnYy", "diffSide": "RIGHT", "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "isResolved": false, "comments": {"totalCount": 2, "pageInfo": {"startCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yN1QxNTo0MDoyMlrOHpC8ZQ==", "endCursor": "Y3Vyc29yOnYyOpK0MjAyMC0xMC0yOVQxMjowMjozNFrOHqYnOg==", "hasNextPage": false, "hasPreviousPage": false}, "nodes": [{"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwMTg5Mw==", "bodyText": "I think all instances of Achievement created in this PR set the exercise parameter to null. Can we remove this parameter if it is really unused? (Or is that just planning for the future?)", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r512801893", "createdAt": "2020-10-27T15:40:22Z", "author": {"login": "FrankeLukas"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -51,12 +57,15 @@\n     public Achievement() {\n     }\n \n-    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Course course, Exercise exercise) {\n+    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Long successCriteria, Long minScoreToQualify, Course course,\n+            Exercise exercise) {", "state": "SUBMITTED", "replyTo": null, "originalCommit": {"oid": "a21d534973f6e1d8cfc3080a525bff4cc0b62098"}, "originalPosition": 19}, {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxNDIwNTQ5OA==", "bodyText": "This was a suggestion of @krusche but so far this parameter is actually unused.", "url": "https://github.com/ls1intum/Artemis/pull/2239#discussion_r514205498", "createdAt": "2020-10-29T12:02:34Z", "author": {"login": "balazs-czopf"}, "path": "src/main/java/de/tum/in/www1/artemis/domain/Achievement.java", "diffHunk": "@@ -51,12 +57,15 @@\n     public Achievement() {\n     }\n \n-    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Course course, Exercise exercise) {\n+    public Achievement(String title, String description, String icon, AchievementRank rank, AchievementType type, Long successCriteria, Long minScoreToQualify, Course course,\n+            Exercise exercise) {", "state": "SUBMITTED", "replyTo": {"id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDUxMjgwMTg5Mw=="}, "originalCommit": {"oid": "a21d534973f6e1d8cfc3080a525bff4cc0b62098"}, "originalPosition": 19}]}}]}}}, "rateLimit": {"limit": 5000, "remaining": 4560, "cost": 1, "resetAt": "2021-11-13T12:10:21Z"}}}